; ModuleID = './examples/ipcommdevice_stm32.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%"class.Cicada::Stm32Uart" = type { %"class.Cicada::BufferedSerial", i8, %struct.__UART_HandleTypeDef, %struct.USART_TypeDef*, i16, i16, i32 }
%"class.Cicada::BufferedSerial" = type { %"class.Cicada::IBufferedSerial", %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer" }
%"class.Cicada::IBufferedSerial" = type { %"class.Cicada::ICommDevice", %"class.Cicada::ICommDevice" }
%"class.Cicada::ICommDevice" = type { i32 (...)** }
%"class.Cicada::LineCircularBuffer" = type { %"class.Cicada::CircularBuffer.base", i16, [2 x i8] }
%"class.Cicada::CircularBuffer.base" = type <{ i32 (...)**, [4 x i8], i64, i64, i64, i64, i8* }>
%struct.__UART_HandleTypeDef = type { %struct.USART_TypeDef*, %struct.USART_TypeDef, i8*, i16, i16, i8*, i16, i16, %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef*, i32, i32, i32, i32 }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.__DMA_HandleTypeDef = type { %struct.DMA_Channel_TypeDef*, %struct.USART_TypeDef, i32, i32, i8*, void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)*, i32, %struct.DMA_TypeDef*, i32 }
%struct.DMA_Channel_TypeDef = type { i32, i32, i32, i32 }
%struct.DMA_TypeDef = type { i32, i32 }
%"class.Cicada::ModemDetect" = type { %"class.Cicada::Task", [4 x i8], %"union.Cicada::ModemDetect::ModemDriver", %"class.Cicada::IBufferedSerial"*, i32, i8, %"class.Cicada::ATCommDevice"* }
%"class.Cicada::Task" = type { i32 (...)**, i16, i32, i8, i32 }
%"union.Cicada::ModemDetect::ModemDriver" = type { %"class.Cicada::Sim800CommDevice" }
%"class.Cicada::Sim800CommDevice" = type <{ %"class.Cicada::SimCommDevice", i8*, [4 x i8] }>
%"class.Cicada::SimCommDevice" = type { %"class.Cicada::ATCommDevice", i8*, [16 x i8], [24 x i8], i8, i16 }
%"class.Cicada::ATCommDevice" = type { %"class.Cicada::IPCommDevice.base", %"class.Cicada::IBufferedSerial"*, [61 x i8], i8, i8, i8, i64, i64, i64 }
%"class.Cicada::IPCommDevice.base" = type { %"class.Cicada::IIPCommDevice", %"class.Cicada::Task", %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0", i32, i8*, i16, i8, i32, i8* }
%"class.Cicada::IIPCommDevice" = type { %"class.Cicada::IStatefulDevice" }
%"class.Cicada::IStatefulDevice" = type { %"class.Cicada::ICommDevice" }
%"class.Cicada::CircularBuffer.0" = type <{ i32 (...)**, [4 x i8], i64, i64, i64, i64, i8*, [4 x i8] }>
%"class.Cicada::Scheduler" = type { i32 ()*, %"class.Cicada::Task"**, %"class.Cicada::Task"** }
%"class.Cicada::EspressifDevice" = type <{ %"class.Cicada::ATCommDevice", i8*, i8*, [18 x i8], [6 x i8] }>
%class.IPCommTask = type { %"class.Cicada::Task", [1200 x i8], [1200 x i8], %"class.Cicada::ModemDetect"*, %"class.Cicada::ATCommDevice"*, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%"class.Cicada::IPCommDevice" = type { %"class.Cicada::IIPCommDevice", %"class.Cicada::Task", %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0", i32, i8*, i16, i8, i32, i8*, [4 x i8] }
%struct.__va_list = type { i8* }
%struct.out_fct_wrap_type = type { void (i8, i8*)*, i8* }

$_ZN10IPCommTaskC2ERN6Cicada11ModemDetectE = comdat any

$_ZN6Cicada4TaskD2Ev = comdat any

$_ZN6Cicada11ModemDetectD2Ev = comdat any

$_ZN6Cicada11ModemDetect11ModemDriverD2Ev = comdat any

$_ZN6Cicada4TaskC2Et = comdat any

$_ZN10IPCommTaskD0Ev = comdat any

$_ZN10IPCommTask3runEv = comdat any

$_ZN6Cicada4Task8setDelayEt = comdat any

$_ZN6Cicada4TaskD0Ev = comdat any

$_ZN6Cicada12IPCommDeviceD2Ev = comdat any

$_ZN6Cicada12ATCommDeviceD0Ev = comdat any

$_ZThn4_N6Cicada12ATCommDeviceD1Ev = comdat any

$_ZThn4_N6Cicada12ATCommDeviceD0Ev = comdat any

$_ZN6Cicada14CircularBufferIhED2Ev = comdat any

$_ZN6Cicada11ICommDeviceD2Ev = comdat any

$_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv = comdat any

$_ZN6Cicada14CircularBufferIhE4pullEv = comdat any

$_ZN6Cicada14CircularBufferIhE20incrementOrResetHeadERy = comdat any

$_ZN6Cicada14CircularBufferIhE4pushEh = comdat any

$_ZN6Cicada12IPCommDeviceD0Ev = comdat any

$_ZThn4_N6Cicada12IPCommDeviceD1Ev = comdat any

$_ZThn4_N6Cicada12IPCommDeviceD0Ev = comdat any

$_ZN6Cicada14CircularBufferIhE4pushEPKhy = comdat any

$_ZN6Cicada14CircularBufferIhE4pullEPhy = comdat any

$_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv = comdat any

$_ZN6Cicada13IIPCommDeviceC2Ev = comdat any

$_ZN6Cicada14CircularBufferIhEC2EPhy = comdat any

$_ZN6Cicada14CircularBufferIhED0Ev = comdat any

$_ZN6Cicada14CircularBufferIhE4readEv = comdat any

$_ZN6Cicada14CircularBufferIhE5flushEv = comdat any

$_ZNK6Cicada14CircularBufferIhE7isEmptyEv = comdat any

$_ZNK6Cicada14CircularBufferIhE6isFullEv = comdat any

$_ZNK6Cicada14CircularBufferIhE4sizeEv = comdat any

$_ZN6Cicada15IStatefulDeviceC2Ev = comdat any

$_ZN6Cicada13IIPCommDeviceD0Ev = comdat any

$_ZN6Cicada11ICommDeviceC2Ev = comdat any

$_ZN6Cicada15IStatefulDeviceD0Ev = comdat any

$_ZN6Cicada11ICommDeviceD0Ev = comdat any

$_ZN6Cicada13SimCommDeviceD0Ev = comdat any

$_ZThn4_N6Cicada13SimCommDeviceD1Ev = comdat any

$_ZThn4_N6Cicada13SimCommDeviceD0Ev = comdat any

$_ZN6Cicada11ModemDetectD0Ev = comdat any

$_ZN6Cicada11ModemDetect11ModemDriverC2Ev = comdat any

$_ZNK6Cicada4Task5delayEv = comdat any

$_ZN6Cicada4Task7lastRunEv = comdat any

$_ZN6Cicada4Task10setLastRunEj = comdat any

$_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv = comdat any

$_ZN6Cicada14BufferedSerialD2Ev = comdat any

$_ZN6Cicada14CircularBufferIcED2Ev = comdat any

$_ZN6Cicada15IBufferedSerialD2Ev = comdat any

$_ZN6Cicada7ISerialD2Ev = comdat any

$_ZN6Cicada17Sim7x00CommDeviceD0Ev = comdat any

$_ZThn4_N6Cicada17Sim7x00CommDeviceD1Ev = comdat any

$_ZThn4_N6Cicada17Sim7x00CommDeviceD0Ev = comdat any

$_ZN6Cicada16Sim800CommDeviceD0Ev = comdat any

$_ZThn4_N6Cicada16Sim800CommDeviceD1Ev = comdat any

$_ZThn4_N6Cicada16Sim800CommDeviceD0Ev = comdat any

$_ZN6Cicada15EspressifDeviceD0Ev = comdat any

$_ZThn4_N6Cicada15EspressifDeviceD1Ev = comdat any

$_ZThn4_N6Cicada15EspressifDeviceD0Ev = comdat any

$_ZN6Cicada14BufferedSerialD0Ev = comdat any

$_ZThn4_N6Cicada14BufferedSerialD1Ev = comdat any

$_ZThn4_N6Cicada14BufferedSerialD0Ev = comdat any

$_ZNK6Cicada14CircularBufferIcE4sizeEv = comdat any

$_ZN6Cicada18LineCircularBuffer5flushEv = comdat any

$_ZN6Cicada14CircularBufferIcE5flushEv = comdat any

$_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv = comdat any

$_ZN6Cicada18LineCircularBuffer4pushEc = comdat any

$_ZN6Cicada14CircularBufferIcE4pushEc = comdat any

$_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy = comdat any

$_ZN6Cicada18LineCircularBuffer4pullEv = comdat any

$_ZN6Cicada14CircularBufferIcE4pullEv = comdat any

$_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv = comdat any

$_ZN6Cicada15IBufferedSerialC2Ev = comdat any

$_ZN6Cicada18LineCircularBufferC2EPcy = comdat any

$_ZN6Cicada14CircularBufferIcEC2EPcy = comdat any

$_ZN6Cicada18LineCircularBufferD0Ev = comdat any

$_ZN6Cicada18LineCircularBuffer4pushEPKcy = comdat any

$_ZN6Cicada18LineCircularBuffer4pullEPcy = comdat any

$_ZN6Cicada14CircularBufferIcE4readEv = comdat any

$_ZNK6Cicada14CircularBufferIcE7isEmptyEv = comdat any

$_ZNK6Cicada14CircularBufferIcE6isFullEv = comdat any

$_ZN6Cicada14CircularBufferIcED0Ev = comdat any

$_ZN6Cicada14CircularBufferIcE4pushEPKcy = comdat any

$_ZN6Cicada14CircularBufferIcE4pullEPcy = comdat any

$_ZN6Cicada7ISerialC2Ev = comdat any

$_ZN6Cicada15IBufferedSerialD0Ev = comdat any

$_ZThn4_N6Cicada15IBufferedSerialD1Ev = comdat any

$_ZThn4_N6Cicada15IBufferedSerialD0Ev = comdat any

$_ZN6Cicada7ISerialD0Ev = comdat any

$_ZTV10IPCommTask = comdat any

$_ZTS10IPCommTask = comdat any

$_ZTI10IPCommTask = comdat any

$_ZZN10IPCommTask3runEvE10entrypoint = comdat any

$_ZTSN6Cicada13IIPCommDeviceE = comdat any

$_ZTSN6Cicada15IStatefulDeviceE = comdat any

$_ZTIN6Cicada15IStatefulDeviceE = comdat any

$_ZTIN6Cicada13IIPCommDeviceE = comdat any

$_ZTVN6Cicada13IIPCommDeviceE = comdat any

$_ZTVN6Cicada15IStatefulDeviceE = comdat any

$_ZTVN6Cicada14CircularBufferIhEE = comdat any

$_ZTSN6Cicada14CircularBufferIhEE = comdat any

$_ZTIN6Cicada14CircularBufferIhEE = comdat any

$_ZTSN6Cicada4TaskE = comdat any

$_ZTIN6Cicada4TaskE = comdat any

$_ZTVN6Cicada4TaskE = comdat any

$_ZTSN6Cicada15IBufferedSerialE = comdat any

$_ZTSN6Cicada11ICommDeviceE = comdat any

$_ZTIN6Cicada11ICommDeviceE = comdat any

$_ZTSN6Cicada7ISerialE = comdat any

$_ZTIN6Cicada7ISerialE = comdat any

$_ZTIN6Cicada15IBufferedSerialE = comdat any

$_ZTVN6Cicada15IBufferedSerialE = comdat any

$_ZTVN6Cicada11ICommDeviceE = comdat any

$_ZTVN6Cicada7ISerialE = comdat any

$_ZTVN6Cicada18LineCircularBufferE = comdat any

$_ZTSN6Cicada18LineCircularBufferE = comdat any

$_ZTSN6Cicada14CircularBufferIcEE = comdat any

$_ZTIN6Cicada14CircularBufferIcEE = comdat any

$_ZTIN6Cicada18LineCircularBufferE = comdat any

$_ZTVN6Cicada14CircularBufferIcEE = comdat any

@_ZZ17USART1_IRQHandlerE8instance = internal unnamed_addr global %"class.Cicada::Stm32Uart"* null, align 4, !dbg !0
@_ZGVZ17USART1_IRQHandlerE8instance = internal global i32 0, align 4
@_ZZ17USART2_IRQHandlerE8instance = internal unnamed_addr global %"class.Cicada::Stm32Uart"* null, align 4, !dbg !118
@_ZGVZ17USART2_IRQHandlerE8instance = internal global i32 0, align 4
@_ZZ8_putcharE6serial = internal unnamed_addr global %"class.Cicada::Stm32Uart"* null, align 4, !dbg !125
@_ZTV10IPCommTask = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI10IPCommTask to i8*), i8* bitcast (%"class.Cicada::Task"* (%"class.Cicada::Task"*)* @_ZN6Cicada4TaskD2Ev to i8*), i8* bitcast (void (%class.IPCommTask*)* @_ZN10IPCommTaskD0Ev to i8*), i8* bitcast (void (%class.IPCommTask*)* @_ZN10IPCommTask3runEv to i8*)] }, comdat, align 4
@_ZTS10IPCommTask = linkonce_odr dso_local constant [13 x i8] c"10IPCommTask\00", comdat, align 1
@_ZTI10IPCommTask = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZTS10IPCommTask, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada4TaskE to i8*) }, comdat, align 4
@_ZZN10IPCommTask3runEvE10entrypoint = linkonce_odr dso_local local_unnamed_addr global i8 0, comdat, align 1, !dbg !133
@.str = private unnamed_addr constant [17 x i8] c"Connecting ...\0D\0A\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"internet\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"wttr.in\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"*** Connected! ***\0D\0A\00", align 1
@__const._ZN10IPCommTask3runEv.str = private unnamed_addr constant [71 x i8] c"GET / HTTP/1.1\0D\0AHost: wttr.in\0D\0AUser-Agent: curl\0D\0AConnection: close\0D\0A\0D\0A\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"*** Disconnected ***\0D\0A\00", align 1
@_ftoa.pow10 = internal unnamed_addr constant [10 x double] [double 1.000000e+00, double 1.000000e+01, double 1.000000e+02, double 1.000000e+03, double 1.000000e+04, double 1.000000e+05, double 1.000000e+06, double 1.000000e+07, double 1.000000e+08, double 1.000000e+09], align 8, !dbg !460
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !518
@__const.HAL_RCC_GetSysClockFreq.aPLLMULFactorTable = private unnamed_addr constant [16 x i8] c"\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\10", align 1
@__const.HAL_RCC_GetSysClockFreq.aPredivFactorTable = private unnamed_addr constant [2 x i8] c"\01\02", align 1
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !587
@uwTickPrio = dso_local local_unnamed_addr global i32 16, align 4, !dbg !596
@uwTickFreq = dso_local local_unnamed_addr global i32 1, align 4, !dbg !712
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !585
@uwTick = dso_local global i32 0, align 4, !dbg !715
@.str.27 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str.1.28 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.2.29 = private unnamed_addr constant [4 x i8] c"\22\0D\0A\00", align 1
@_ZTVN6Cicada12ATCommDeviceE = dso_local unnamed_addr constant { [17 x i8*], [5 x i8*] } { [17 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada12ATCommDeviceE to i8*), i8* bitcast (%"class.Cicada::IPCommDevice"* (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::ATCommDevice"*)* @_ZN6Cicada12ATCommDeviceD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14spaceAvailableEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice20writeBufferProcessedEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice5writeEPKhy to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice7connectEv to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice10disconnectEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice11isConnectedEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice6isIdleEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)* @_ZN6Cicada12IPCommDevice11setHostPortEPKctNS_13IIPCommDevice14ConnectionTypeE to i8*), i8* bitcast (i64 (%"class.Cicada::ATCommDevice"*, i8*)* @_ZN6Cicada12ATCommDevice11serialWriteEPc to i8*), i8* bitcast (i64 (%"class.Cicada::ATCommDevice"*, i8*, i64)* @_ZN6Cicada12ATCommDevice10serialReadEPcy to i8*)], [5 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada12ATCommDeviceE to i8*), i8* bitcast (%"class.Cicada::ATCommDevice"* (%"class.Cicada::ATCommDevice"*)* @_ZThn4_N6Cicada12ATCommDeviceD1Ev to i8*), i8* bitcast (void (%"class.Cicada::ATCommDevice"*)* @_ZThn4_N6Cicada12ATCommDeviceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 4
@.str.3.32 = private unnamed_addr constant [12 x i8] c"AT+CIPSEND=\00", align 1
@.str.4.33 = private unnamed_addr constant [3 x i8] c"0,\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c">\00", align 1
@_ZTSN6Cicada12ATCommDeviceE = dso_local constant [24 x i8] c"N6Cicada12ATCommDeviceE\00", align 1
@_ZTVN6Cicada12IPCommDeviceE = dso_local unnamed_addr constant { [15 x i8*], [5 x i8*] } { [15 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada12IPCommDeviceE to i8*), i8* bitcast (%"class.Cicada::IPCommDevice"* (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDeviceD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14spaceAvailableEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice20writeBufferProcessedEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice5writeEPKhy to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice7connectEv to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice10disconnectEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice11isConnectedEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice6isIdleEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)* @_ZN6Cicada12IPCommDevice11setHostPortEPKctNS_13IIPCommDevice14ConnectionTypeE to i8*)], [5 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada12IPCommDeviceE to i8*), i8* bitcast (%"class.Cicada::IPCommDevice"* (%"class.Cicada::IPCommDevice"*)* @_ZThn4_N6Cicada12IPCommDeviceD1Ev to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*)* @_ZThn4_N6Cicada12IPCommDeviceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 4
@_ZTSN6Cicada12IPCommDeviceE = dso_local constant [24 x i8] c"N6Cicada12IPCommDeviceE\00", align 1
@_ZTSN6Cicada13IIPCommDeviceE = linkonce_odr dso_local constant [25 x i8] c"N6Cicada13IIPCommDeviceE\00", comdat, align 1
@_ZTSN6Cicada15IStatefulDeviceE = linkonce_odr dso_local constant [27 x i8] c"N6Cicada15IStatefulDeviceE\00", comdat, align 1
@_ZTIN6Cicada15IStatefulDeviceE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @_ZTSN6Cicada15IStatefulDeviceE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada11ICommDeviceE to i8*) }, comdat, align 4
@_ZTIN6Cicada13IIPCommDeviceE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZTSN6Cicada13IIPCommDeviceE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada15IStatefulDeviceE to i8*) }, comdat, align 4
@_ZTIN6Cicada12IPCommDeviceE = dso_local constant { i8*, i8*, i32, i32, i8*, i32, i8*, i32 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZTSN6Cicada12IPCommDeviceE, i32 0, i32 0), i32 0, i32 2, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada13IIPCommDeviceE to i8*), i32 2, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada4TaskE to i8*), i32 1026 }, align 4
@_ZTVN6Cicada13IIPCommDeviceE = linkonce_odr dso_local unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada13IIPCommDeviceE to i8*), i8* bitcast (%"class.Cicada::ICommDevice"* (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada11ICommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::IIPCommDevice"*)* @_ZN6Cicada13IIPCommDeviceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada15IStatefulDeviceE = linkonce_odr dso_local unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada15IStatefulDeviceE to i8*), i8* bitcast (%"class.Cicada::ICommDevice"* (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada11ICommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::IStatefulDevice"*)* @_ZN6Cicada15IStatefulDeviceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada14CircularBufferIhEE = linkonce_odr dso_local unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada14CircularBufferIhEE to i8*), i8* bitcast (%"class.Cicada::CircularBuffer.0"* (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIhED2Ev to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIhED0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*, i8*, i64)* @_ZN6Cicada14CircularBufferIhE4pushEPKhy to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer.0"*, i8)* @_ZN6Cicada14CircularBufferIhE4pushEh to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*, i8*, i64)* @_ZN6Cicada14CircularBufferIhE4pullEPhy to i8*), i8* bitcast (i8 (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIhE4pullEv to i8*), i8* bitcast (i8 (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIhE4readEv to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIhE5flushEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIhE7isEmptyEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIhE6isFullEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIhE4sizeEv to i8*)] }, comdat, align 4
@_ZTSN6Cicada14CircularBufferIhEE = linkonce_odr dso_local constant [29 x i8] c"N6Cicada14CircularBufferIhEE\00", comdat, align 1
@_ZTIN6Cicada14CircularBufferIhEE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN6Cicada14CircularBufferIhEE, i32 0, i32 0) }, comdat, align 4
@_ZTVN6Cicada13SimCommDeviceE = dso_local unnamed_addr constant { [20 x i8*], [5 x i8*] } { [20 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada13SimCommDeviceE to i8*), i8* bitcast (%"class.Cicada::IPCommDevice"* (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDeviceD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14spaceAvailableEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice20writeBufferProcessedEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice5writeEPKhy to i8*), i8* bitcast (i1 (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice7connectEv to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice10disconnectEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice11isConnectedEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice6isIdleEv to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice11resetStatesEv to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)* @_ZN6Cicada12IPCommDevice11setHostPortEPKctNS_13IIPCommDevice14ConnectionTypeE to i8*), i8* bitcast (i64 (%"class.Cicada::ATCommDevice"*, i8*)* @_ZN6Cicada12ATCommDevice11serialWriteEPc to i8*), i8* bitcast (i64 (%"class.Cicada::ATCommDevice"*, i8*, i64)* @_ZN6Cicada12ATCommDevice10serialReadEPcy to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*, i8*)* @_ZN6Cicada13SimCommDevice6setApnEPKc to i8*), i8* bitcast (i1 (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice10serialLockEv to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice12serialUnlockEv to i8*)], [5 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada13SimCommDeviceE to i8*), i8* bitcast (%"class.Cicada::SimCommDevice"* (%"class.Cicada::SimCommDevice"*)* @_ZThn4_N6Cicada13SimCommDeviceD1Ev to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*)* @_ZThn4_N6Cicada13SimCommDeviceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 4
@.str.62 = private unnamed_addr constant [12 x i8] c"+CDNSGIP: 1\00", align 1
@.str.1.63 = private unnamed_addr constant [12 x i8] c"+CDNSGIP: 0\00", align 1
@.str.2.64 = private unnamed_addr constant [16 x i8] c"+CIPRXGET: 4,0,\00", align 1
@.str.3.65 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.4.66 = private unnamed_addr constant [16 x i8] c"+CIPRXGET: 2,0,\00", align 1
@.str.5.67 = private unnamed_addr constant [7 x i8] c"+CSQ: \00", align 1
@.str.6.68 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"AT\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"+ICCID: \00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"AT+CDNSGIP=\22\00", align 1
@__const._ZN6Cicada13SimCommDevice13sendCiprxget2Ev.str = private unnamed_addr constant [17 x i8] c"AT+CIPRXGET=2,0,\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"+CIPRXGET: 1,0\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"AT+CGMI\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"AT+CGMM\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"AT+CGSN\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"AT+CIMI\00", align 1
@_ZTSN6Cicada13SimCommDeviceE = dso_local constant [25 x i8] c"N6Cicada13SimCommDeviceE\00", align 1
@_ZTVN6Cicada11ModemDetectE = dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada11ModemDetectE to i8*), i8* bitcast (%"class.Cicada::ModemDetect"* (%"class.Cicada::ModemDetect"*)* @_ZN6Cicada11ModemDetectD2Ev to i8*), i8* bitcast (void (%"class.Cicada::ModemDetect"*)* @_ZN6Cicada11ModemDetectD0Ev to i8*), i8* bitcast (void (%"class.Cicada::ModemDetect"*)* @_ZN6Cicada11ModemDetect3runEv to i8*)] }, align 4
@.str.71 = private unnamed_addr constant [10 x i8] c"AT+CGMM\0D\0A\00", align 1
@.str.1.72 = private unnamed_addr constant [14 x i8] c"SIMCOM_SIM800\00", align 1
@.str.2.73 = private unnamed_addr constant [15 x i8] c"SIMCOM_SIM7600\00", align 1
@.str.3.74 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@.str.4.75 = private unnamed_addr constant [9 x i8] c"AT+GMR\0D\0A\00", align 1
@.str.5.76 = private unnamed_addr constant [15 x i8] c"AT version:1.7\00", align 1
@.str.6.77 = private unnamed_addr constant [15 x i8] c"AT version:2.1\00", align 1
@.str.7.78 = private unnamed_addr constant [5 x i8] c"OK\0D\0A\00", align 1
@_ZTSN6Cicada11ModemDetectE = dso_local constant [23 x i8] c"N6Cicada11ModemDetectE\00", align 1
@_ZTSN6Cicada4TaskE = linkonce_odr dso_local constant [15 x i8] c"N6Cicada4TaskE\00", comdat, align 1
@_ZTIN6Cicada4TaskE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZTSN6Cicada4TaskE, i32 0, i32 0) }, comdat, align 4
@_ZTIN6Cicada11ModemDetectE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @_ZTSN6Cicada11ModemDetectE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada4TaskE to i8*) }, align 4
@_ZTVN6Cicada4TaskE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada4TaskE to i8*), i8* bitcast (%"class.Cicada::Task"* (%"class.Cicada::Task"*)* @_ZN6Cicada4TaskD2Ev to i8*), i8* bitcast (void (%"class.Cicada::Task"*)* @_ZN6Cicada4TaskD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZN6Cicada9Stm32Uart8instanceE = dso_local local_unnamed_addr global [4 x %"class.Cicada::Stm32Uart"*] zeroinitializer, align 4, !dbg !717
@_ZTVN6Cicada9Stm32UartE = dso_local unnamed_addr constant { [26 x i8*], [12 x i8*] } { [26 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada9Stm32UartE to i8*), i8* bitcast (%"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32UartD2Ev to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32UartD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial14spaceAvailableEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZNK6Cicada9Stm32Uart20writeBufferProcessedEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial5writeEPKhy to i8*), i8* bitcast (i8 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial4readEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*)* @_ZN6Cicada14BufferedSerial5writeEPKh to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*, i8)* @_ZN6Cicada14BufferedSerial5writeEh to i8*), i8* bitcast (i1 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial11canReadLineEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial8readLineEPhy to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial14readBufferSizeEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial15writeBufferSizeEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32Uart4openEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8)* @_ZN6Cicada9Stm32Uart4openEh to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32Uart6isOpenEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i32, i8)* @_ZN6Cicada9Stm32Uart15setSerialConfigEjh to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32Uart5closeEv to i8*), i8* bitcast (i8* (%"class.Cicada::Stm32Uart"*)* @_ZNK6Cicada9Stm32Uart8portNameEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8*)* @_ZN6Cicada9Stm32Uart7rawReadERh to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8)* @_ZN6Cicada9Stm32Uart8rawWriteEh to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32Uart13startTransmitEv to i8*)], [12 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada9Stm32UartE to i8*), i8* bitcast (%"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32UartD1Ev to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32UartD0Ev to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32Uart4openEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32Uart6isOpenEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i32, i8)* @_ZThn4_N6Cicada9Stm32Uart15setSerialConfigEjh to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32Uart5closeEv to i8*), i8* bitcast (i8* (%"class.Cicada::Stm32Uart"*)* @_ZThn4_NK6Cicada9Stm32Uart8portNameEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8*)* @_ZThn4_N6Cicada9Stm32Uart7rawReadERh to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8)* @_ZThn4_N6Cicada9Stm32Uart8rawWriteEh to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32Uart13startTransmitEv to i8*)] }, align 4
@_ZTSN6Cicada9Stm32UartE = dso_local constant [20 x i8] c"N6Cicada9Stm32UartE\00", align 1
@_ZTIN6Cicada9Stm32UartE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTSN6Cicada9Stm32UartE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada14BufferedSerialE to i8*) }, align 4
@_ZTVN6Cicada17Sim7x00CommDeviceE = dso_local unnamed_addr constant { [21 x i8*], [5 x i8*] } { [21 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada17Sim7x00CommDeviceE to i8*), i8* bitcast (%"class.Cicada::IPCommDevice"* (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::Sim800CommDevice"*)* @_ZN6Cicada17Sim7x00CommDeviceD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14spaceAvailableEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice20writeBufferProcessedEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice5writeEPKhy to i8*), i8* bitcast (i1 (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice7connectEv to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice10disconnectEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice11isConnectedEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice6isIdleEv to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice11resetStatesEv to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)* @_ZN6Cicada12IPCommDevice11setHostPortEPKctNS_13IIPCommDevice14ConnectionTypeE to i8*), i8* bitcast (i64 (%"class.Cicada::ATCommDevice"*, i8*)* @_ZN6Cicada12ATCommDevice11serialWriteEPc to i8*), i8* bitcast (i64 (%"class.Cicada::ATCommDevice"*, i8*, i64)* @_ZN6Cicada12ATCommDevice10serialReadEPcy to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*, i8*)* @_ZN6Cicada13SimCommDevice6setApnEPKc to i8*), i8* bitcast (i1 (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice10serialLockEv to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice12serialUnlockEv to i8*), i8* bitcast (void (%"class.Cicada::Sim800CommDevice"*)* @_ZN6Cicada17Sim7x00CommDevice3runEv to i8*)], [5 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada17Sim7x00CommDeviceE to i8*), i8* bitcast (%"class.Cicada::Sim800CommDevice"* (%"class.Cicada::Sim800CommDevice"*)* @_ZThn4_N6Cicada17Sim7x00CommDeviceD1Ev to i8*), i8* bitcast (void (%"class.Cicada::Sim800CommDevice"*)* @_ZThn4_N6Cicada17Sim7x00CommDeviceD0Ev to i8*), i8* bitcast (void (%"class.Cicada::Sim800CommDevice"*)* @_ZThn4_N6Cicada17Sim7x00CommDevice3runEv to i8*)] }, align 4
@.str.116 = private unnamed_addr constant [10 x i8] c"AT+CICCID\00", align 1
@__const._ZN6Cicada17Sim7x00CommDevice3runEv.str = private unnamed_addr constant [10 x i8] c"AT+CRESET\00", align 1
@.str.1.103 = private unnamed_addr constant [4 x i8] c"RDY\00", align 1
@.str.2.104 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@.str.3.105 = private unnamed_addr constant [12 x i8] c"+NETOPEN: 1\00", align 1
@.str.4.106 = private unnamed_addr constant [13 x i8] c"+CIPOPEN: 0,\00", align 1
@.str.5.107 = private unnamed_addr constant [13 x i8] c"+IPCLOSE: 0,\00", align 1
@.str.6.108 = private unnamed_addr constant [7 x i8] c"AT+CSQ\00", align 1
@.str.7.109 = private unnamed_addr constant [5 x i8] c"ATE0\00", align 1
@__const._ZN6Cicada17Sim7x00CommDevice3runEv.str.8 = private unnamed_addr constant [23 x i8] c"AT+CGSOCKCONT=1,\22IP\22,\22\00", align 1
@.str.9.110 = private unnamed_addr constant [16 x i8] c"AT+CSOCKSETPN=1\00", align 1
@.str.10.111 = private unnamed_addr constant [13 x i8] c"AT+CIPMODE=0\00", align 1
@.str.11.112 = private unnamed_addr constant [12 x i8] c"+NETOPEN: 0\00", align 1
@.str.12.113 = private unnamed_addr constant [11 x i8] c"AT+NETOPEN\00", align 1
@.str.13.114 = private unnamed_addr constant [14 x i8] c"AT+CIPRXGET=1\00", align 1
@.str.14.115 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"AT+CIPOPEN\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"=0,\22UDP\22,,,\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"=0,\22TCP\22,\22\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"\22,\00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c"+CIPOPEN: 0,0\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c",\22\00", align 1
@.str.21 = private unnamed_addr constant [16 x i8] c"AT+CIPRXGET=4,0\00", align 1
@.str.22 = private unnamed_addr constant [13 x i8] c"+NETCLOSE: 0\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"AT+NETCLOSE\00", align 1
@_ZTSN6Cicada17Sim7x00CommDeviceE = dso_local constant [29 x i8] c"N6Cicada17Sim7x00CommDeviceE\00", align 1
@_ZTIN6Cicada17Sim7x00CommDeviceE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN6Cicada17Sim7x00CommDeviceE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada13SimCommDeviceE to i8*) }, align 4
@_ZTVN6Cicada16Sim800CommDeviceE = dso_local unnamed_addr constant { [21 x i8*], [5 x i8*] } { [21 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada16Sim800CommDeviceE to i8*), i8* bitcast (%"class.Cicada::IPCommDevice"* (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::Sim800CommDevice"*)* @_ZN6Cicada16Sim800CommDeviceD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14spaceAvailableEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice20writeBufferProcessedEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice5writeEPKhy to i8*), i8* bitcast (i1 (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice7connectEv to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice10disconnectEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice11isConnectedEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice6isIdleEv to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice11resetStatesEv to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)* @_ZN6Cicada12IPCommDevice11setHostPortEPKctNS_13IIPCommDevice14ConnectionTypeE to i8*), i8* bitcast (i64 (%"class.Cicada::ATCommDevice"*, i8*)* @_ZN6Cicada12ATCommDevice11serialWriteEPc to i8*), i8* bitcast (i64 (%"class.Cicada::ATCommDevice"*, i8*, i64)* @_ZN6Cicada12ATCommDevice10serialReadEPcy to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*, i8*)* @_ZN6Cicada13SimCommDevice6setApnEPKc to i8*), i8* bitcast (i1 (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice10serialLockEv to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice12serialUnlockEv to i8*), i8* bitcast (void (%"class.Cicada::Sim800CommDevice"*)* @_ZN6Cicada16Sim800CommDevice3runEv to i8*)], [5 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada16Sim800CommDeviceE to i8*), i8* bitcast (%"class.Cicada::Sim800CommDevice"* (%"class.Cicada::Sim800CommDevice"*)* @_ZThn4_N6Cicada16Sim800CommDeviceD1Ev to i8*), i8* bitcast (void (%"class.Cicada::Sim800CommDevice"*)* @_ZThn4_N6Cicada16Sim800CommDeviceD0Ev to i8*), i8* bitcast (void (%"class.Cicada::Sim800CommDevice"*)* @_ZThn4_N6Cicada16Sim800CommDevice3runEv to i8*)] }, align 4
@.str.141 = private unnamed_addr constant [8 x i8] c"AT+CCID\00", align 1
@.str.1.119 = private unnamed_addr constant [12 x i8] c"+PDP: DEACT\00", align 1
@.str.2.120 = private unnamed_addr constant [11 x i8] c"+CME ERROR\00", align 1
@.str.3.121 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@.str.4.122 = private unnamed_addr constant [16 x i8] c"0, CONNECT FAIL\00", align 1
@.str.5.123 = private unnamed_addr constant [10 x i8] c"0, CLOSED\00", align 1
@.str.6.124 = private unnamed_addr constant [7 x i8] c"AT+CSQ\00", align 1
@.str.7.125 = private unnamed_addr constant [5 x i8] c"ATE0\00", align 1
@.str.8.126 = private unnamed_addr constant [14 x i8] c"AT+CIPRXGET=1\00", align 1
@.str.9.127 = private unnamed_addr constant [12 x i8] c"AT+CIPMUX=1\00", align 1
@__const._ZN6Cicada16Sim800CommDevice3runEv.str = private unnamed_addr constant [10 x i8] c"AT+CSTT=\22\00", align 1
@.str.10.128 = private unnamed_addr constant [9 x i8] c"AT+CIICR\00", align 1
@__const._ZN6Cicada16Sim800CommDevice3runEv.str.11 = private unnamed_addr constant [9 x i8] c"AT+CIFSR\00", align 1
@.str.12.129 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.13.130 = private unnamed_addr constant [12 x i8] c"AT+CIPSTART\00", align 1
@.str.14.131 = private unnamed_addr constant [11 x i8] c"=0,\22UDP\22,\22\00", align 1
@.str.15.132 = private unnamed_addr constant [11 x i8] c"=0,\22TCP\22,\22\00", align 1
@.str.16.133 = private unnamed_addr constant [3 x i8] c"\22,\00", align 1
@.str.17.134 = private unnamed_addr constant [14 x i8] c"0, CONNECT OK\00", align 1
@.str.18.135 = private unnamed_addr constant [11 x i8] c"0, SEND OK\00", align 1
@.str.19.136 = private unnamed_addr constant [16 x i8] c"AT+CIPRXGET=4,0\00", align 1
@.str.20.137 = private unnamed_addr constant [12 x i8] c"0, CLOSE OK\00", align 1
@.str.21.138 = private unnamed_addr constant [14 x i8] c"AT+CIPCLOSE=0\00", align 1
@.str.22.139 = private unnamed_addr constant [8 x i8] c"SHUT OK\00", align 1
@.str.23.140 = private unnamed_addr constant [11 x i8] c"AT+CIPSHUT\00", align 1
@_ZTSN6Cicada16Sim800CommDeviceE = dso_local constant [28 x i8] c"N6Cicada16Sim800CommDeviceE\00", align 1
@_ZTIN6Cicada13SimCommDeviceE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZTSN6Cicada13SimCommDeviceE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada12ATCommDeviceE to i8*) }, align 4
@_ZTIN6Cicada16Sim800CommDeviceE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZTSN6Cicada16Sim800CommDeviceE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada13SimCommDeviceE to i8*) }, align 4
@_ZTVN6Cicada15EspressifDeviceE = dso_local unnamed_addr constant { [20 x i8*], [5 x i8*] } { [20 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada15EspressifDeviceE to i8*), i8* bitcast (%"class.Cicada::IPCommDevice"* (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::EspressifDevice"*)* @_ZN6Cicada15EspressifDeviceD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14spaceAvailableEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice20writeBufferProcessedEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice5writeEPKhy to i8*), i8* bitcast (i1 (%"class.Cicada::EspressifDevice"*)* @_ZN6Cicada15EspressifDevice7connectEv to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice10disconnectEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice11isConnectedEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice6isIdleEv to i8*), i8* bitcast (void (%"class.Cicada::EspressifDevice"*)* @_ZN6Cicada15EspressifDevice11resetStatesEv to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)* @_ZN6Cicada12IPCommDevice11setHostPortEPKctNS_13IIPCommDevice14ConnectionTypeE to i8*), i8* bitcast (i64 (%"class.Cicada::ATCommDevice"*, i8*)* @_ZN6Cicada12ATCommDevice11serialWriteEPc to i8*), i8* bitcast (i64 (%"class.Cicada::ATCommDevice"*, i8*, i64)* @_ZN6Cicada12ATCommDevice10serialReadEPcy to i8*), i8* bitcast (void (%"class.Cicada::EspressifDevice"*, i8*)* @_ZN6Cicada15EspressifDevice7setSSIDEPKc to i8*), i8* bitcast (void (%"class.Cicada::EspressifDevice"*, i8*)* @_ZN6Cicada15EspressifDevice11setPasswordEPKc to i8*), i8* bitcast (void (%"class.Cicada::EspressifDevice"*)* @_ZN6Cicada15EspressifDevice3runEv to i8*)], [5 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada15EspressifDeviceE to i8*), i8* bitcast (%"class.Cicada::EspressifDevice"* (%"class.Cicada::EspressifDevice"*)* @_ZThn4_N6Cicada15EspressifDeviceD1Ev to i8*), i8* bitcast (void (%"class.Cicada::EspressifDevice"*)* @_ZThn4_N6Cicada15EspressifDeviceD0Ev to i8*), i8* bitcast (void (%"class.Cicada::EspressifDevice"*)* @_ZThn4_N6Cicada15EspressifDevice3runEv to i8*)] }, align 4
@.str.165 = private unnamed_addr constant [14 x i8] c"+CIPRECVDATA,\00", align 1
@.str.1.166 = private unnamed_addr constant [14 x i8] c"+CIPRECVDATA:\00", align 1
@.str.2.161 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.3.163 = private unnamed_addr constant [16 x i8] c"AT+CIPRECVDATA=\00", align 1
@_ZN6Cicada12ATCommDevice11_lineEndStrE = dso_local local_unnamed_addr global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.28, i32 0, i32 0), align 4, !dbg !947
@.str.4.164 = private unnamed_addr constant [13 x i8] c"+CIPRECVDATA\00", align 1
@.str.5.150 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.6.144 = private unnamed_addr constant [7 x i8] c"AT+RST\00", align 1
@.str.7.145 = private unnamed_addr constant [6 x i8] c"ready\00", align 1
@.str.8.146 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@.str.10.147 = private unnamed_addr constant [16 x i8] c"WIFI DISCONNECT\00", align 1
@.str.11.148 = private unnamed_addr constant [10 x i8] c"SEND FAIL\00", align 1
@.str.12.149 = private unnamed_addr constant [13 x i8] c"+CIPSTAMAC:\22\00", align 1
@.str.14.151 = private unnamed_addr constant [7 x i8] c"CLOSED\00", align 1
@.str.15.152 = private unnamed_addr constant [14 x i8] c"AT+CIPSTAMAC?\00", align 1
@_ZN6Cicada12ATCommDevice6_okStrE = dso_local local_unnamed_addr global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i32 0, i32 0), align 4, !dbg !1070
@.str.16.153 = private unnamed_addr constant [5 x i8] c"ATE0\00", align 1
@.str.17.154 = private unnamed_addr constant [12 x i8] c"AT+CWMODE=3\00", align 1
@.str.18.155 = private unnamed_addr constant [11 x i8] c"AT+CWJAP=\22\00", align 1
@.str.19.156 = private unnamed_addr constant [4 x i8] c"\22,\22\00", align 1
@_ZN6Cicada12ATCommDevice12_quoteEndStrE = dso_local local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.29, i32 0, i32 0), align 4, !dbg !1072
@.str.20.157 = private unnamed_addr constant [12 x i8] c"AT+CIPMUX=0\00", align 1
@.str.21.158 = private unnamed_addr constant [17 x i8] c"AT+CIPRECVMODE=0\00", align 1
@.str.22.159 = private unnamed_addr constant [17 x i8] c"AT+CIPRECVMODE=1\00", align 1
@.str.23.160 = private unnamed_addr constant [13 x i8] c"AT+CIPMODE=0\00", align 1
@.str.24 = private unnamed_addr constant [12 x i8] c"AT+CIPSTART\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"=\22UDP\22,\22\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c"=\22TCP\22,\22\00", align 1
@.str.27.162 = private unnamed_addr constant [3 x i8] c"\22,\00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"SEND OK\00", align 1
@.str.29 = private unnamed_addr constant [12 x i8] c"AT+CIPCLOSE\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"AT+CWQAP\00", align 1
@_ZTSN6Cicada15EspressifDeviceE = dso_local constant [27 x i8] c"N6Cicada15EspressifDeviceE\00", align 1
@_ZTIN6Cicada12ATCommDeviceE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZTSN6Cicada12ATCommDeviceE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada12IPCommDeviceE to i8*) }, align 4
@_ZTIN6Cicada15EspressifDeviceE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @_ZTSN6Cicada15EspressifDeviceE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada12ATCommDeviceE to i8*) }, align 4
@_ZTVN6Cicada14BufferedSerialE = dso_local unnamed_addr constant { [17 x i8*], [12 x i8*] } { [17 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada14BufferedSerialE to i8*), i8* bitcast (%"class.Cicada::BufferedSerial"* (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerialD2Ev to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerialD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial14spaceAvailableEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial5writeEPKhy to i8*), i8* bitcast (i8 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial4readEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*)* @_ZN6Cicada14BufferedSerial5writeEPKh to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*, i8)* @_ZN6Cicada14BufferedSerial5writeEh to i8*), i8* bitcast (i1 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial11canReadLineEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial8readLineEPhy to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial14readBufferSizeEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial15writeBufferSizeEv to i8*)], [12 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada14BufferedSerialE to i8*), i8* bitcast (%"class.Cicada::BufferedSerial"* (%"class.Cicada::BufferedSerial"*)* @_ZThn4_N6Cicada14BufferedSerialD1Ev to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*)* @_ZThn4_N6Cicada14BufferedSerialD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 4
@_ZTVN10__cxxabiv120__si_class_type_infoE = external dso_local global i8*
@_ZTSN6Cicada14BufferedSerialE = dso_local constant [26 x i8] c"N6Cicada14BufferedSerialE\00", align 1
@_ZTVN10__cxxabiv121__vmi_class_type_infoE = external dso_local global i8*
@_ZTSN6Cicada15IBufferedSerialE = linkonce_odr dso_local constant [27 x i8] c"N6Cicada15IBufferedSerialE\00", comdat, align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external dso_local global i8*
@_ZTSN6Cicada11ICommDeviceE = linkonce_odr dso_local constant [23 x i8] c"N6Cicada11ICommDeviceE\00", comdat, align 1
@_ZTIN6Cicada11ICommDeviceE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @_ZTSN6Cicada11ICommDeviceE, i32 0, i32 0) }, comdat, align 4
@_ZTSN6Cicada7ISerialE = linkonce_odr dso_local constant [18 x i8] c"N6Cicada7ISerialE\00", comdat, align 1
@_ZTIN6Cicada7ISerialE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZTSN6Cicada7ISerialE, i32 0, i32 0) }, comdat, align 4
@_ZTIN6Cicada15IBufferedSerialE = linkonce_odr dso_local constant { i8*, i8*, i32, i32, i8*, i32, i8*, i32 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @_ZTSN6Cicada15IBufferedSerialE, i32 0, i32 0), i32 0, i32 2, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada11ICommDeviceE to i8*), i32 2, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada7ISerialE to i8*), i32 1026 }, comdat, align 4
@_ZTIN6Cicada14BufferedSerialE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @_ZTSN6Cicada14BufferedSerialE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada15IBufferedSerialE to i8*) }, align 4
@_ZTVN6Cicada15IBufferedSerialE = linkonce_odr dso_local unnamed_addr constant { [17 x i8*], [12 x i8*] } { [17 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada15IBufferedSerialE to i8*), i8* bitcast (%"class.Cicada::IBufferedSerial"* (%"class.Cicada::IBufferedSerial"*)* @_ZN6Cicada15IBufferedSerialD2Ev to i8*), i8* bitcast (void (%"class.Cicada::IBufferedSerial"*)* @_ZN6Cicada15IBufferedSerialD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], [12 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada15IBufferedSerialE to i8*), i8* bitcast (%"class.Cicada::IBufferedSerial"* (%"class.Cicada::IBufferedSerial"*)* @_ZThn4_N6Cicada15IBufferedSerialD1Ev to i8*), i8* bitcast (void (%"class.Cicada::IBufferedSerial"*)* @_ZThn4_N6Cicada15IBufferedSerialD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada11ICommDeviceE = linkonce_odr dso_local unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada11ICommDeviceE to i8*), i8* bitcast (%"class.Cicada::ICommDevice"* (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada11ICommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada11ICommDeviceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada7ISerialE = linkonce_odr dso_local unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada7ISerialE to i8*), i8* bitcast (%"class.Cicada::ICommDevice"* (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada7ISerialD2Ev to i8*), i8* bitcast (void (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada7ISerialD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada18LineCircularBufferE = linkonce_odr dso_local unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada18LineCircularBufferE to i8*), i8* bitcast (%"class.Cicada::CircularBuffer.0"* (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIcED2Ev to i8*), i8* bitcast (void (%"class.Cicada::LineCircularBuffer"*)* @_ZN6Cicada18LineCircularBufferD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::LineCircularBuffer"*, i8*, i64)* @_ZN6Cicada18LineCircularBuffer4pushEPKcy to i8*), i8* bitcast (void (%"class.Cicada::LineCircularBuffer"*, i8)* @_ZN6Cicada18LineCircularBuffer4pushEc to i8*), i8* bitcast (i64 (%"class.Cicada::LineCircularBuffer"*, i8*, i64)* @_ZN6Cicada18LineCircularBuffer4pullEPcy to i8*), i8* bitcast (i8 (%"class.Cicada::LineCircularBuffer"*)* @_ZN6Cicada18LineCircularBuffer4pullEv to i8*), i8* bitcast (i8 (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIcE4readEv to i8*), i8* bitcast (void (%"class.Cicada::LineCircularBuffer"*)* @_ZN6Cicada18LineCircularBuffer5flushEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE7isEmptyEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE6isFullEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE4sizeEv to i8*)] }, comdat, align 4
@_ZTSN6Cicada18LineCircularBufferE = linkonce_odr dso_local constant [30 x i8] c"N6Cicada18LineCircularBufferE\00", comdat, align 1
@_ZTSN6Cicada14CircularBufferIcEE = linkonce_odr dso_local constant [29 x i8] c"N6Cicada14CircularBufferIcEE\00", comdat, align 1
@_ZTIN6Cicada14CircularBufferIcEE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN6Cicada14CircularBufferIcEE, i32 0, i32 0) }, comdat, align 4
@_ZTIN6Cicada18LineCircularBufferE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @_ZTSN6Cicada18LineCircularBufferE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada14CircularBufferIcEE to i8*) }, comdat, align 4
@_ZTVN6Cicada14CircularBufferIcEE = linkonce_odr dso_local unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada14CircularBufferIcEE to i8*), i8* bitcast (%"class.Cicada::CircularBuffer.0"* (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIcED2Ev to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIcED0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*, i8*, i64)* @_ZN6Cicada14CircularBufferIcE4pushEPKcy to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer.0"*, i8)* @_ZN6Cicada14CircularBufferIcE4pushEc to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*, i8*, i64)* @_ZN6Cicada14CircularBufferIcE4pullEPcy to i8*), i8* bitcast (i8 (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIcE4pullEv to i8*), i8* bitcast (i8 (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIcE4readEv to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIcE5flushEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE7isEmptyEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE6isFullEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE4sizeEv to i8*)] }, comdat, align 4

@_ZN6Cicada11ModemDetectC1ERNS_15IBufferedSerialE = dso_local unnamed_addr alias %"class.Cicada::ModemDetect"* (%"class.Cicada::ModemDetect"*, %"class.Cicada::IBufferedSerial"*), %"class.Cicada::ModemDetect"* (%"class.Cicada::ModemDetect"*, %"class.Cicada::IBufferedSerial"*)* @_ZN6Cicada11ModemDetectC2ERNS_15IBufferedSerialE
@_ZN6Cicada9SchedulerC1EPFjvEPPNS_4TaskE = dso_local unnamed_addr alias %"class.Cicada::Scheduler"* (%"class.Cicada::Scheduler"*, i32 ()*, %"class.Cicada::Task"**), %"class.Cicada::Scheduler"* (%"class.Cicada::Scheduler"*, i32 ()*, %"class.Cicada::Task"**)* @_ZN6Cicada9SchedulerC2EPFjvEPPNS_4TaskE
@_ZN6Cicada9Stm32UartC1EPcS1_yyP13USART_TypeDefP12GPIO_TypeDeftt = dso_local unnamed_addr alias %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*, i8*, i8*, i64, i64, %struct.USART_TypeDef*, %struct.USART_TypeDef*, i16, i16), %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*, i8*, i8*, i64, i64, %struct.USART_TypeDef*, %struct.USART_TypeDef*, i16, i16)* @_ZN6Cicada9Stm32UartC2EPcS1_yyP13USART_TypeDefP12GPIO_TypeDeftt
@_ZN6Cicada9Stm32UartC1EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt = dso_local unnamed_addr alias %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*, i8*, i8*, i64, %struct.USART_TypeDef*, %struct.USART_TypeDef*, i16, i16), %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*, i8*, i8*, i64, %struct.USART_TypeDef*, %struct.USART_TypeDef*, i16, i16)* @_ZN6Cicada9Stm32UartC2EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt
@_ZN6Cicada9Stm32UartD1Ev = dso_local unnamed_addr alias %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*), %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32UartD2Ev
@_ZN6Cicada17Sim7x00CommDeviceC1ERNS_15IBufferedSerialEPhS3_y = dso_local unnamed_addr alias %"class.Cicada::Sim800CommDevice"* (%"class.Cicada::Sim800CommDevice"*, %"class.Cicada::IBufferedSerial"*, i8*, i8*, i64), %"class.Cicada::Sim800CommDevice"* (%"class.Cicada::Sim800CommDevice"*, %"class.Cicada::IBufferedSerial"*, i8*, i8*, i64)* @_ZN6Cicada17Sim7x00CommDeviceC2ERNS_15IBufferedSerialEPhS3_y
@_ZN6Cicada17Sim7x00CommDeviceC1ERNS_15IBufferedSerialEPhS3_yy = dso_local unnamed_addr alias %"class.Cicada::Sim800CommDevice"* (%"class.Cicada::Sim800CommDevice"*, %"class.Cicada::IBufferedSerial"*, i8*, i8*, i64, i64), %"class.Cicada::Sim800CommDevice"* (%"class.Cicada::Sim800CommDevice"*, %"class.Cicada::IBufferedSerial"*, i8*, i8*, i64, i64)* @_ZN6Cicada17Sim7x00CommDeviceC2ERNS_15IBufferedSerialEPhS3_yy
@_ZN6Cicada16Sim800CommDeviceC1ERNS_15IBufferedSerialEPhS3_y = dso_local unnamed_addr alias %"class.Cicada::Sim800CommDevice"* (%"class.Cicada::Sim800CommDevice"*, %"class.Cicada::IBufferedSerial"*, i8*, i8*, i64), %"class.Cicada::Sim800CommDevice"* (%"class.Cicada::Sim800CommDevice"*, %"class.Cicada::IBufferedSerial"*, i8*, i8*, i64)* @_ZN6Cicada16Sim800CommDeviceC2ERNS_15IBufferedSerialEPhS3_y
@_ZN6Cicada16Sim800CommDeviceC1ERNS_15IBufferedSerialEPhS3_yy = dso_local unnamed_addr alias %"class.Cicada::Sim800CommDevice"* (%"class.Cicada::Sim800CommDevice"*, %"class.Cicada::IBufferedSerial"*, i8*, i8*, i64, i64), %"class.Cicada::Sim800CommDevice"* (%"class.Cicada::Sim800CommDevice"*, %"class.Cicada::IBufferedSerial"*, i8*, i8*, i64, i64)* @_ZN6Cicada16Sim800CommDeviceC2ERNS_15IBufferedSerialEPhS3_yy
@_ZN6Cicada15EspressifDeviceC1ERNS_15IBufferedSerialEPhS3_y = dso_local unnamed_addr alias %"class.Cicada::EspressifDevice"* (%"class.Cicada::EspressifDevice"*, %"class.Cicada::IBufferedSerial"*, i8*, i8*, i64), %"class.Cicada::EspressifDevice"* (%"class.Cicada::EspressifDevice"*, %"class.Cicada::IBufferedSerial"*, i8*, i8*, i64)* @_ZN6Cicada15EspressifDeviceC2ERNS_15IBufferedSerialEPhS3_y
@_ZN6Cicada15EspressifDeviceC1ERNS_15IBufferedSerialEPhS3_yy = dso_local unnamed_addr alias %"class.Cicada::EspressifDevice"* (%"class.Cicada::EspressifDevice"*, %"class.Cicada::IBufferedSerial"*, i8*, i8*, i64, i64), %"class.Cicada::EspressifDevice"* (%"class.Cicada::EspressifDevice"*, %"class.Cicada::IBufferedSerial"*, i8*, i8*, i64, i64)* @_ZN6Cicada15EspressifDeviceC2ERNS_15IBufferedSerialEPhS3_yy

; Function Attrs: mustprogress noinline norecurse nounwind
define dso_local noundef i32 @main(i32 noundef %0, i8** nocapture noundef readnone %1) local_unnamed_addr #0 !dbg !2430 {
  %3 = alloca [1504 x i8], align 1
  %4 = alloca [1504 x i8], align 1
  %5 = alloca %"class.Cicada::Stm32Uart", align 8
  %6 = alloca [1504 x i8], align 1
  %7 = alloca [1504 x i8], align 1
  %8 = alloca %"class.Cicada::Stm32Uart", align 8
  %9 = alloca %"class.Cicada::ModemDetect", align 8
  %10 = alloca %class.IPCommTask, align 4
  %11 = alloca [3 x %"class.Cicada::Task"*], align 4
  %12 = alloca %"class.Cicada::Scheduler", align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !2434, metadata !DIExpression()), !dbg !2451
  call void @llvm.dbg.value(metadata i8** %1, metadata !2435, metadata !DIExpression()), !dbg !2451
  %13 = call i32 @HAL_Init() #34, !dbg !2452
  call fastcc void @_ZL18SystemClock_Configv(), !dbg !2453
  call void @HAL_Delay(i32 noundef 2000) #34, !dbg !2454
  call void @llvm.dbg.value(metadata i16 1504, metadata !2436, metadata !DIExpression()), !dbg !2451
  %14 = getelementptr inbounds [1504 x i8], [1504 x i8]* %3, i32 0, i32 0, !dbg !2455
  call void @llvm.lifetime.start.p0i8(i64 1504, i8* nonnull %14) #34, !dbg !2455
  call void @llvm.dbg.declare(metadata [1504 x i8]* %3, metadata !2437, metadata !DIExpression()), !dbg !2456
  %15 = getelementptr inbounds [1504 x i8], [1504 x i8]* %4, i32 0, i32 0, !dbg !2457
  call void @llvm.lifetime.start.p0i8(i64 1504, i8* nonnull %15) #34, !dbg !2457
  call void @llvm.dbg.declare(metadata [1504 x i8]* %4, metadata !2441, metadata !DIExpression()), !dbg !2458
  %16 = bitcast %"class.Cicada::Stm32Uart"* %5 to i8*, !dbg !2459
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %16) #34, !dbg !2459
  call void @llvm.dbg.declare(metadata %"class.Cicada::Stm32Uart"* %5, metadata !2442, metadata !DIExpression()), !dbg !2460
  %17 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartC1EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %5, i8* noundef nonnull %14, i8* noundef nonnull %15, i64 noundef 1504, %struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073809408 to %struct.USART_TypeDef*), i16 noundef zeroext 4, i16 noundef zeroext 8) #34, !dbg !2460
  %18 = getelementptr inbounds [1504 x i8], [1504 x i8]* %6, i32 0, i32 0, !dbg !2461
  call void @llvm.lifetime.start.p0i8(i64 1504, i8* nonnull %18) #34, !dbg !2461
  call void @llvm.dbg.declare(metadata [1504 x i8]* %6, metadata !2443, metadata !DIExpression()), !dbg !2462
  %19 = getelementptr inbounds [1504 x i8], [1504 x i8]* %7, i32 0, i32 0, !dbg !2463
  call void @llvm.lifetime.start.p0i8(i64 1504, i8* nonnull %19) #34, !dbg !2463
  call void @llvm.dbg.declare(metadata [1504 x i8]* %7, metadata !2444, metadata !DIExpression()), !dbg !2464
  %20 = bitcast %"class.Cicada::Stm32Uart"* %8 to i8*, !dbg !2465
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %20) #34, !dbg !2465
  call void @llvm.dbg.declare(metadata %"class.Cicada::Stm32Uart"* %8, metadata !2445, metadata !DIExpression()), !dbg !2466
  %21 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartC1EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %8, i8* noundef nonnull %18, i8* noundef nonnull %19, i64 noundef 1504, %struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073821696 to %struct.USART_TypeDef*), %struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073809408 to %struct.USART_TypeDef*), i16 noundef zeroext 512, i16 noundef zeroext 1024) #34, !dbg !2466
  %22 = bitcast %"class.Cicada::ModemDetect"* %9 to i8*, !dbg !2467
  call void @llvm.lifetime.start.p0i8(i64 328, i8* nonnull %22) #34, !dbg !2467
  call void @llvm.dbg.declare(metadata %"class.Cicada::ModemDetect"* %9, metadata !2446, metadata !DIExpression()), !dbg !2468
  %23 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %8, i32 0, i32 0, i32 0, !dbg !2469
  %24 = call noundef %"class.Cicada::ModemDetect"* @_ZN6Cicada11ModemDetectC1ERNS_15IBufferedSerialE(%"class.Cicada::ModemDetect"* noundef nonnull align 8 dereferenceable(328) %9, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %23) #34, !dbg !2468
  %25 = bitcast %class.IPCommTask* %10 to i8*, !dbg !2470
  call void @llvm.lifetime.start.p0i8(i64 2432, i8* nonnull %25) #34, !dbg !2470
  call void @llvm.dbg.declare(metadata %class.IPCommTask* %10, metadata !2447, metadata !DIExpression()), !dbg !2471
  %26 = call noundef %class.IPCommTask* @_ZN10IPCommTaskC2ERN6Cicada11ModemDetectE(%class.IPCommTask* noundef nonnull align 4 dereferenceable(2432) %10, %"class.Cicada::ModemDetect"* noundef nonnull align 8 dereferenceable(328) %9), !dbg !2471
  %27 = bitcast [3 x %"class.Cicada::Task"*]* %11 to i8*, !dbg !2472
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %27) #34, !dbg !2472
  call void @llvm.dbg.declare(metadata [3 x %"class.Cicada::Task"*]* %11, metadata !2448, metadata !DIExpression()), !dbg !2473
  %28 = getelementptr inbounds [3 x %"class.Cicada::Task"*], [3 x %"class.Cicada::Task"*]* %11, i32 0, i32 0, !dbg !2474
  %29 = getelementptr inbounds %class.IPCommTask, %class.IPCommTask* %10, i32 0, i32 0, !dbg !2475
  store %"class.Cicada::Task"* %29, %"class.Cicada::Task"** %28, align 4, !dbg !2474, !tbaa !2476
  %30 = getelementptr inbounds [3 x %"class.Cicada::Task"*], [3 x %"class.Cicada::Task"*]* %11, i32 0, i32 1, !dbg !2474
  %31 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %9, i32 0, i32 0, !dbg !2480
  store %"class.Cicada::Task"* %31, %"class.Cicada::Task"** %30, align 4, !dbg !2474, !tbaa !2476
  %32 = getelementptr inbounds [3 x %"class.Cicada::Task"*], [3 x %"class.Cicada::Task"*]* %11, i32 0, i32 2, !dbg !2474
  store %"class.Cicada::Task"* null, %"class.Cicada::Task"** %32, align 4, !dbg !2474, !tbaa !2476
  %33 = bitcast %"class.Cicada::Scheduler"* %12 to i8*, !dbg !2481
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %33) #34, !dbg !2481
  call void @llvm.dbg.declare(metadata %"class.Cicada::Scheduler"* %12, metadata !2450, metadata !DIExpression()), !dbg !2482
  %34 = call noundef %"class.Cicada::Scheduler"* @_ZN6Cicada9SchedulerC1EPFjvEPPNS_4TaskE(%"class.Cicada::Scheduler"* noundef nonnull align 4 dereferenceable(12) %12, i32 ()* noundef nonnull @_Z13eTickFunctionv, %"class.Cicada::Task"** noundef nonnull %28) #34, !dbg !2482
  %35 = call noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %5) #34, !dbg !2483
  call void @_ZN6Cicada9Scheduler5startEv(%"class.Cicada::Scheduler"* noundef nonnull align 4 dereferenceable(12) %12) #34, !dbg !2484
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %33) #34, !dbg !2485
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %27) #34, !dbg !2485
  %36 = call noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskD2Ev(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(2432) %29) #34, !dbg !2485
  call void @llvm.lifetime.end.p0i8(i64 2432, i8* nonnull %25) #34, !dbg !2485
  %37 = call noundef %"class.Cicada::ModemDetect"* @_ZN6Cicada11ModemDetectD2Ev(%"class.Cicada::ModemDetect"* noundef nonnull align 8 dereferenceable(328) %9) #34, !dbg !2485
  call void @llvm.lifetime.end.p0i8(i64 328, i8* nonnull %22) #34, !dbg !2485
  %38 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD1Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %8) #34, !dbg !2485
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %20) #34, !dbg !2485
  call void @llvm.lifetime.end.p0i8(i64 1504, i8* nonnull %19) #34, !dbg !2485
  call void @llvm.lifetime.end.p0i8(i64 1504, i8* nonnull %18) #34, !dbg !2485
  %39 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD1Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %5) #34, !dbg !2485
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %16) #34, !dbg !2485
  call void @llvm.lifetime.end.p0i8(i64 1504, i8* nonnull %15) #34, !dbg !2485
  call void @llvm.lifetime.end.p0i8(i64 1504, i8* nonnull %14) #34, !dbg !2485
  ret i32 0, !dbg !2485
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: mustprogress noinline norecurse nounwind
define internal fastcc void @_ZL18SystemClock_Configv() unnamed_addr #0 !dbg !2486 {
  %1 = alloca %struct.RCC_OscInitTypeDef, align 4
  %2 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %3 = bitcast %struct.RCC_OscInitTypeDef* %1 to i8*, !dbg !2517
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #34, !dbg !2517
  call void @llvm.dbg.declare(metadata %struct.RCC_OscInitTypeDef* %1, metadata !2488, metadata !DIExpression()), !dbg !2518
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %3, i8 0, i32 40, i1 false), !dbg !2518
  %4 = bitcast %struct.RCC_ClkInitTypeDef* %2 to i8*, !dbg !2519
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #34, !dbg !2519
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %2, metadata !2508, metadata !DIExpression()), !dbg !2520
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(20) %4, i8 0, i32 20, i1 false), !dbg !2520
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 0, !dbg !2521
  store i32 2, i32* %5, align 4, !dbg !2522, !tbaa !2523
  %6 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 4, !dbg !2527
  store i32 1, i32* %6, align 4, !dbg !2528, !tbaa !2529
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 5, !dbg !2530
  store i32 16, i32* %7, align 4, !dbg !2531, !tbaa !2532
  %8 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 7, i32 0, !dbg !2533
  store i32 2, i32* %8, align 4, !dbg !2534, !tbaa !2535
  %9 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 7, i32 1, !dbg !2536
  store i32 0, i32* %9, align 4, !dbg !2537, !tbaa !2538
  %10 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 7, i32 2, !dbg !2539
  store i32 3670016, i32* %10, align 4, !dbg !2540, !tbaa !2541
  %11 = call i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef nonnull %1) #34, !dbg !2542
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 0, !dbg !2543
  store i32 15, i32* %12, align 4, !dbg !2544, !tbaa !2545
  %13 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 1, !dbg !2547
  store i32 2, i32* %13, align 4, !dbg !2548, !tbaa !2549
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 2, !dbg !2550
  store i32 0, i32* %14, align 4, !dbg !2551, !tbaa !2552
  %15 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 3, !dbg !2553
  store i32 1024, i32* %15, align 4, !dbg !2554, !tbaa !2555
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 4, !dbg !2556
  store i32 0, i32* %16, align 4, !dbg !2557, !tbaa !2558
  %17 = call i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef nonnull %2, i32 noundef 2) #34, !dbg !2559
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #34, !dbg !2560
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #34, !dbg !2560
  ret void, !dbg !2560
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %class.IPCommTask* @_ZN10IPCommTaskC2ERN6Cicada11ModemDetectE(%class.IPCommTask* noundef nonnull returned align 4 dereferenceable(2432) %0, %"class.Cicada::ModemDetect"* noundef nonnull align 8 dereferenceable(328) %1) unnamed_addr #3 comdat align 2 !dbg !2561 {
  call void @llvm.dbg.value(metadata %class.IPCommTask* %0, metadata !2563, metadata !DIExpression()), !dbg !2565
  call void @llvm.dbg.value(metadata %"class.Cicada::ModemDetect"* %1, metadata !2564, metadata !DIExpression()), !dbg !2565
  %3 = getelementptr inbounds %class.IPCommTask, %class.IPCommTask* %0, i32 0, i32 0, !dbg !2566
  %4 = call noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskC2Et(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %3, i16 noundef zeroext 0), !dbg !2567
  %5 = getelementptr inbounds %class.IPCommTask, %class.IPCommTask* %0, i32 0, i32 0, i32 0, !dbg !2566
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV10IPCommTask, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %5, align 4, !dbg !2566, !tbaa !2568
  %6 = getelementptr inbounds %class.IPCommTask, %class.IPCommTask* %0, i32 0, i32 3, !dbg !2570
  store %"class.Cicada::ModemDetect"* %1, %"class.Cicada::ModemDetect"** %6, align 4, !dbg !2570, !tbaa !2476
  %7 = getelementptr inbounds %class.IPCommTask, %class.IPCommTask* %0, i32 0, i32 4, !dbg !2571
  store %"class.Cicada::ATCommDevice"* null, %"class.Cicada::ATCommDevice"** %7, align 4, !dbg !2571, !tbaa !2572
  %8 = getelementptr inbounds %class.IPCommTask, %class.IPCommTask* %0, i32 0, i32 5, !dbg !2574
  store i32 0, i32* %8, align 4, !dbg !2574, !tbaa !2575
  ret %class.IPCommTask* %0, !dbg !2576
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskD2Ev(%"class.Cicada::Task"* noundef nonnull returned align 4 dereferenceable(20) %0) unnamed_addr #3 comdat align 2 !dbg !2577 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !2579, metadata !DIExpression()), !dbg !2580
  ret %"class.Cicada::Task"* %0, !dbg !2581
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ModemDetect"* @_ZN6Cicada11ModemDetectD2Ev(%"class.Cicada::ModemDetect"* noundef nonnull returned align 8 dereferenceable(328) %0) unnamed_addr #3 comdat align 2 !dbg !2582 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ModemDetect"* %0, metadata !2588, metadata !DIExpression()), !dbg !2590
  %2 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 0, i32 0, !dbg !2591
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6Cicada11ModemDetectE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %2, align 8, !dbg !2591, !tbaa !2568
  %3 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 2, !dbg !2592
  %4 = call noundef %"union.Cicada::ModemDetect::ModemDriver"* @_ZN6Cicada11ModemDetect11ModemDriverD2Ev(%"union.Cicada::ModemDetect::ModemDriver"* noundef nonnull align 8 dereferenceable(288) %3) #34, !dbg !2592
  %5 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 0, !dbg !2592
  %6 = call noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskD2Ev(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %5) #34, !dbg !2592
  ret %"class.Cicada::ModemDetect"* %0, !dbg !2591
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"union.Cicada::ModemDetect::ModemDriver"* @_ZN6Cicada11ModemDetect11ModemDriverD2Ev(%"union.Cicada::ModemDetect::ModemDriver"* noundef nonnull returned align 8 dereferenceable(288) %0) unnamed_addr #3 comdat align 2 !dbg !2594 {
  call void @llvm.dbg.value(metadata %"union.Cicada::ModemDetect::ModemDriver"* %0, metadata !2596, metadata !DIExpression()), !dbg !2598
  ret %"union.Cicada::ModemDetect::ModemDriver"* %0, !dbg !2599
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskC2Et(%"class.Cicada::Task"* noundef nonnull returned align 4 dereferenceable(20) %0, i16 noundef zeroext %1) unnamed_addr #3 comdat align 2 !dbg !2600 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !2602, metadata !DIExpression()), !dbg !2604
  call void @llvm.dbg.value(metadata i16 %1, metadata !2603, metadata !DIExpression()), !dbg !2604
  %3 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 0, !dbg !2605
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6Cicada4TaskE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %3, align 4, !dbg !2605, !tbaa !2568
  %4 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 1, !dbg !2606
  store i16 %1, i16* %4, align 4, !dbg !2606, !tbaa !2607
  %5 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 3, !dbg !2611
  store i8 0, i8* %5, align 4, !dbg !2611, !tbaa !2612
  %6 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 4, !dbg !2613
  store i32 0, i32* %6, align 4, !dbg !2613, !tbaa !2614
  ret %"class.Cicada::Task"* %0, !dbg !2615
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN10IPCommTaskD0Ev(%class.IPCommTask* noundef nonnull align 4 dereferenceable(2432) %0) unnamed_addr #3 comdat align 2 !dbg !2616 {
  call void @llvm.dbg.value(metadata %class.IPCommTask* %0, metadata !2619, metadata !DIExpression()), !dbg !2620
  %2 = getelementptr inbounds %class.IPCommTask, %class.IPCommTask* %0, i32 0, i32 0, !dbg !2621
  %3 = call noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskD2Ev(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(2432) %2) #34, !dbg !2621
  %4 = bitcast %class.IPCommTask* %0 to i8*, !dbg !2621
  call void @_ZdlPv(i8* noundef %4) #35, !dbg !2621
  ret void, !dbg !2621
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN10IPCommTask3runEv(%class.IPCommTask* noundef nonnull align 4 dereferenceable(2432) %0) unnamed_addr #4 comdat align 2 !dbg !135 {
  %2 = alloca [71 x i8], align 1
  %3 = alloca [41 x i8], align 1
  call void @llvm.dbg.value(metadata %class.IPCommTask* %0, metadata !137, metadata !DIExpression()), !dbg !2622
  %4 = load i8, i8* @_ZZN10IPCommTask3runEvE10entrypoint, align 1, !dbg !2623, !tbaa !2624
  switch i8 %4, label %140 [
    i8 0, label %5
    i8 1, label %9
    i8 2, label %48
    i8 3, label %67
    i8 4, label %117
    i8 5, label %127
  ], !dbg !2623

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.IPCommTask, %class.IPCommTask* %0, i32 0, i32 3, !dbg !2625
  %7 = load %"class.Cicada::ModemDetect"*, %"class.Cicada::ModemDetect"** %6, align 4, !dbg !2625, !tbaa !2626
  call void @_ZN6Cicada11ModemDetect14startDetectionEv(%"class.Cicada::ModemDetect"* noundef nonnull align 8 dereferenceable(328) %7) #34, !dbg !2627
  %8 = getelementptr inbounds %class.IPCommTask, %class.IPCommTask* %0, i32 0, i32 0, !dbg !2628
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %8, i16 noundef zeroext 0), !dbg !2628
  store i8 1, i8* @_ZZN10IPCommTask3runEvE10entrypoint, align 1, !dbg !2628, !tbaa !2624
  br label %9, !dbg !2628

9:                                                ; preds = %1, %5
  %10 = getelementptr inbounds %class.IPCommTask, %class.IPCommTask* %0, i32 0, i32 3, !dbg !2629
  %11 = load %"class.Cicada::ModemDetect"*, %"class.Cicada::ModemDetect"** %10, align 4, !dbg !2629, !tbaa !2626
  %12 = call noundef zeroext i1 @_ZN6Cicada11ModemDetect13modemDetectedEv(%"class.Cicada::ModemDetect"* noundef nonnull align 8 dereferenceable(328) %11) #34, !dbg !2629
  br i1 %12, label %13, label %140, !dbg !2628

13:                                               ; preds = %9
  %14 = load %"class.Cicada::ModemDetect"*, %"class.Cicada::ModemDetect"** %10, align 4, !dbg !2631, !tbaa !2626
  %15 = getelementptr inbounds %class.IPCommTask, %class.IPCommTask* %0, i32 0, i32 1, i32 0, !dbg !2632
  %16 = getelementptr inbounds %class.IPCommTask, %class.IPCommTask* %0, i32 0, i32 2, i32 0, !dbg !2633
  %17 = call noundef %"class.Cicada::ATCommDevice"* @_ZN6Cicada11ModemDetect16getDetectedModemEPhS1_yy(%"class.Cicada::ModemDetect"* noundef nonnull align 8 dereferenceable(328) %14, i8* noundef nonnull %15, i8* noundef nonnull %16, i64 noundef 1200, i64 noundef 1200) #34, !dbg !2634
  %18 = getelementptr inbounds %class.IPCommTask, %class.IPCommTask* %0, i32 0, i32 4, !dbg !2635
  store %"class.Cicada::ATCommDevice"* %17, %"class.Cicada::ATCommDevice"** %18, align 4, !dbg !2636, !tbaa !2572
  %19 = call i32 (i8*, ...) @printf_(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i32 0, i32 0)) #34, !dbg !2637
  %20 = load %"class.Cicada::ATCommDevice"*, %"class.Cicada::ATCommDevice"** %18, align 4, !dbg !2638, !tbaa !2572
  %21 = icmp eq %"class.Cicada::ATCommDevice"* %20, null, !dbg !2639
  br i1 %21, label %26, label %22, !dbg !2639

22:                                               ; preds = %13
  %23 = bitcast %"class.Cicada::ATCommDevice"* %20 to i8*, !dbg !2639
  %24 = call i8* @__dynamic_cast(i8* nonnull %23, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada12ATCommDeviceE to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada13SimCommDeviceE to i8*), i32 0) #34, !dbg !2639
  %25 = bitcast i8* %24 to %"class.Cicada::SimCommDevice"*, !dbg !2639
  br label %26, !dbg !2639

26:                                               ; preds = %13, %22
  %27 = phi %"class.Cicada::SimCommDevice"* [ %25, %22 ], [ null, %13 ], !dbg !2639
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %27, metadata !139, metadata !DIExpression()), !dbg !2622
  %28 = icmp eq %"class.Cicada::SimCommDevice"* %27, null, !dbg !2640
  br i1 %28, label %34, label %29, !dbg !2642

29:                                               ; preds = %26
  %30 = bitcast %"class.Cicada::SimCommDevice"* %27 to void (%"class.Cicada::SimCommDevice"*, i8*)***, !dbg !2643
  %31 = load void (%"class.Cicada::SimCommDevice"*, i8*)**, void (%"class.Cicada::SimCommDevice"*, i8*)*** %30, align 8, !dbg !2643, !tbaa !2568
  %32 = getelementptr inbounds void (%"class.Cicada::SimCommDevice"*, i8*)*, void (%"class.Cicada::SimCommDevice"*, i8*)** %31, i32 15, !dbg !2643
  %33 = load void (%"class.Cicada::SimCommDevice"*, i8*)*, void (%"class.Cicada::SimCommDevice"*, i8*)** %32, align 4, !dbg !2643
  call void %33(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %27, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0)) #34, !dbg !2643
  br label %34, !dbg !2644

34:                                               ; preds = %29, %26
  %35 = bitcast %"class.Cicada::ATCommDevice"** %18 to %"class.Cicada::IPCommDevice"**, !dbg !2645
  %36 = load %"class.Cicada::IPCommDevice"*, %"class.Cicada::IPCommDevice"** %35, align 4, !dbg !2645, !tbaa !2572
  %37 = bitcast %"class.Cicada::IPCommDevice"* %36 to void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)***, !dbg !2646
  %38 = load void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)**, void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)*** %37, align 8, !dbg !2646, !tbaa !2568
  %39 = getelementptr inbounds void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)*, void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)** %38, i32 12, !dbg !2646
  %40 = load void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)*, void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)** %39, align 4, !dbg !2646
  call void %40(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %36, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i32 0, i32 0), i16 noundef zeroext 80, i32 noundef 1) #34, !dbg !2646
  %41 = load %"class.Cicada::IPCommDevice"*, %"class.Cicada::IPCommDevice"** %35, align 4, !dbg !2647, !tbaa !2572
  %42 = bitcast %"class.Cicada::IPCommDevice"* %41 to i1 (%"class.Cicada::IPCommDevice"*)***, !dbg !2648
  %43 = load i1 (%"class.Cicada::IPCommDevice"*)**, i1 (%"class.Cicada::IPCommDevice"*)*** %42, align 8, !dbg !2648, !tbaa !2568
  %44 = getelementptr inbounds i1 (%"class.Cicada::IPCommDevice"*)*, i1 (%"class.Cicada::IPCommDevice"*)** %43, i32 7, !dbg !2648
  %45 = load i1 (%"class.Cicada::IPCommDevice"*)*, i1 (%"class.Cicada::IPCommDevice"*)** %44, align 4, !dbg !2648
  %46 = call noundef zeroext i1 %45(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %41) #34, !dbg !2648
  %47 = getelementptr inbounds %class.IPCommTask, %class.IPCommTask* %0, i32 0, i32 0, !dbg !2649
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %47, i16 noundef zeroext 0), !dbg !2649
  store i8 2, i8* @_ZZN10IPCommTask3runEvE10entrypoint, align 1, !dbg !2649, !tbaa !2624
  br label %48, !dbg !2649

48:                                               ; preds = %1, %34
  %49 = getelementptr inbounds %class.IPCommTask, %class.IPCommTask* %0, i32 0, i32 4, !dbg !2650
  %50 = bitcast %"class.Cicada::ATCommDevice"** %49 to %"class.Cicada::IPCommDevice"**, !dbg !2650
  %51 = load %"class.Cicada::IPCommDevice"*, %"class.Cicada::IPCommDevice"** %50, align 4, !dbg !2650, !tbaa !2572
  %52 = bitcast %"class.Cicada::IPCommDevice"* %51 to i1 (%"class.Cicada::IPCommDevice"*)***, !dbg !2650
  %53 = load i1 (%"class.Cicada::IPCommDevice"*)**, i1 (%"class.Cicada::IPCommDevice"*)*** %52, align 8, !dbg !2650, !tbaa !2568
  %54 = getelementptr inbounds i1 (%"class.Cicada::IPCommDevice"*)*, i1 (%"class.Cicada::IPCommDevice"*)** %53, i32 9, !dbg !2650
  %55 = load i1 (%"class.Cicada::IPCommDevice"*)*, i1 (%"class.Cicada::IPCommDevice"*)** %54, align 4, !dbg !2650
  %56 = call noundef zeroext i1 %55(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %51) #34, !dbg !2650
  br i1 %56, label %57, label %140, !dbg !2649

57:                                               ; preds = %48
  %58 = call i32 (i8*, ...) @printf_(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i32 0, i32 0)) #34, !dbg !2652
  %59 = getelementptr inbounds [71 x i8], [71 x i8]* %2, i32 0, i32 0, !dbg !2653
  call void @llvm.lifetime.start.p0i8(i64 71, i8* nonnull %59) #34, !dbg !2653
  call void @llvm.dbg.declare(metadata [71 x i8]* %2, metadata !140, metadata !DIExpression()), !dbg !2654
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(71) %59, i8* noundef nonnull align 1 dereferenceable(71) getelementptr inbounds ([71 x i8], [71 x i8]* @__const._ZN10IPCommTask3runEv.str, i32 0, i32 0), i32 71, i1 false), !dbg !2654
  %60 = load %"class.Cicada::IPCommDevice"*, %"class.Cicada::IPCommDevice"** %50, align 4, !dbg !2655, !tbaa !2572
  %61 = bitcast %"class.Cicada::IPCommDevice"* %60 to i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)***, !dbg !2656
  %62 = load i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)**, i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)*** %61, align 8, !dbg !2656, !tbaa !2568
  %63 = getelementptr inbounds i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)*, i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)** %62, i32 6, !dbg !2656
  %64 = load i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)*, i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)** %63, align 4, !dbg !2656
  %65 = call noundef i64 %64(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %60, i8* noundef nonnull %59, i64 noundef 70) #34, !dbg !2656
  call void @llvm.lifetime.end.p0i8(i64 71, i8* nonnull %59) #34, !dbg !2657
  %66 = getelementptr inbounds %class.IPCommTask, %class.IPCommTask* %0, i32 0, i32 0, !dbg !2658
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %66, i16 noundef zeroext 0), !dbg !2658
  store i8 3, i8* @_ZZN10IPCommTask3runEvE10entrypoint, align 1, !dbg !2658, !tbaa !2624
  br label %67, !dbg !2658

67:                                               ; preds = %1, %57
  %68 = getelementptr inbounds %class.IPCommTask, %class.IPCommTask* %0, i32 0, i32 4, !dbg !2659
  %69 = bitcast %"class.Cicada::ATCommDevice"** %68 to %"class.Cicada::IPCommDevice"**, !dbg !2659
  %70 = load %"class.Cicada::IPCommDevice"*, %"class.Cicada::IPCommDevice"** %69, align 4, !dbg !2659, !tbaa !2572
  %71 = bitcast %"class.Cicada::IPCommDevice"* %70 to i64 (%"class.Cicada::IPCommDevice"*)***, !dbg !2659
  %72 = load i64 (%"class.Cicada::IPCommDevice"*)**, i64 (%"class.Cicada::IPCommDevice"*)*** %71, align 8, !dbg !2659, !tbaa !2568
  %73 = getelementptr inbounds i64 (%"class.Cicada::IPCommDevice"*)*, i64 (%"class.Cicada::IPCommDevice"*)** %72, i32 2, !dbg !2659
  %74 = load i64 (%"class.Cicada::IPCommDevice"*)*, i64 (%"class.Cicada::IPCommDevice"*)** %73, align 4, !dbg !2659
  %75 = call noundef i64 %74(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %70) #34, !dbg !2659
  %76 = icmp eq i64 %75, 0, !dbg !2659
  br i1 %76, label %140, label %77, !dbg !2658

77:                                               ; preds = %67
  %78 = getelementptr inbounds %class.IPCommTask, %class.IPCommTask* %0, i32 0, i32 5, !dbg !2661
  store i32 0, i32* %78, align 4, !dbg !2662, !tbaa !2575
  br label %79, !dbg !2661

79:                                               ; preds = %117, %77
  %80 = getelementptr inbounds %class.IPCommTask, %class.IPCommTask* %0, i32 0, i32 5, !dbg !2663
  %81 = load i32, i32* %80, align 4, !dbg !2663, !tbaa !2575
  %82 = icmp slt i32 %81, 400, !dbg !2664
  %83 = getelementptr inbounds %class.IPCommTask, %class.IPCommTask* %0, i32 0, i32 4, !dbg !2665
  %84 = bitcast %"class.Cicada::ATCommDevice"** %83 to %"class.Cicada::IPCommDevice"**, !dbg !2665
  %85 = load %"class.Cicada::IPCommDevice"*, %"class.Cicada::IPCommDevice"** %84, align 4, !dbg !2665, !tbaa !2572
  br i1 %82, label %86, label %121, !dbg !2666

86:                                               ; preds = %79
  %87 = bitcast %"class.Cicada::IPCommDevice"* %85 to i64 (%"class.Cicada::IPCommDevice"*)***, !dbg !2667
  %88 = load i64 (%"class.Cicada::IPCommDevice"*)**, i64 (%"class.Cicada::IPCommDevice"*)*** %87, align 8, !dbg !2667, !tbaa !2568
  %89 = getelementptr inbounds i64 (%"class.Cicada::IPCommDevice"*)*, i64 (%"class.Cicada::IPCommDevice"*)** %88, i32 2, !dbg !2667
  %90 = load i64 (%"class.Cicada::IPCommDevice"*)*, i64 (%"class.Cicada::IPCommDevice"*)** %89, align 4, !dbg !2667
  %91 = call noundef i64 %90(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %85) #34, !dbg !2667
  %92 = icmp eq i64 %91, 0, !dbg !2668
  br i1 %92, label %115, label %93, !dbg !2669

93:                                               ; preds = %86
  %94 = getelementptr inbounds [41 x i8], [41 x i8]* %3, i32 0, i32 0, !dbg !2670
  call void @llvm.lifetime.start.p0i8(i64 41, i8* nonnull %94) #34, !dbg !2670
  call void @llvm.dbg.declare(metadata [41 x i8]* %3, metadata !147, metadata !DIExpression()), !dbg !2671
  %95 = load %"class.Cicada::IPCommDevice"*, %"class.Cicada::IPCommDevice"** %84, align 4, !dbg !2672, !tbaa !2572
  %96 = bitcast %"class.Cicada::IPCommDevice"* %95 to i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)***, !dbg !2673
  %97 = load i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)**, i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)*** %96, align 8, !dbg !2673, !tbaa !2568
  %98 = getelementptr inbounds i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)*, i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)** %97, i32 5, !dbg !2673
  %99 = load i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)*, i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)** %98, align 4, !dbg !2673
  %100 = call noundef i64 %99(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %95, i8* noundef nonnull %94, i64 noundef 40) #34, !dbg !2673
  %101 = trunc i64 %100 to i32, !dbg !2672
  call void @llvm.dbg.value(metadata i64 %100, metadata !156, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2674
  call void @llvm.dbg.value(metadata i32 0, metadata !157, metadata !DIExpression()), !dbg !2675
  %102 = and i32 %101, 65535
  call void @llvm.dbg.value(metadata i32 0, metadata !157, metadata !DIExpression()), !dbg !2675
  %103 = icmp eq i32 %102, 0, !dbg !2676
  br i1 %103, label %104, label %105, !dbg !2678

104:                                              ; preds = %111, %93
  call void @llvm.lifetime.end.p0i8(i64 41, i8* nonnull %94) #34, !dbg !2679
  br label %117, !dbg !2680

105:                                              ; preds = %93, %111
  %106 = phi i32 [ %113, %111 ], [ 0, %93 ]
  call void @llvm.dbg.value(metadata i32 %106, metadata !157, metadata !DIExpression()), !dbg !2675
  %107 = getelementptr inbounds [41 x i8], [41 x i8]* %3, i32 0, i32 %106, !dbg !2681
  %108 = load i8, i8* %107, align 1, !dbg !2681, !tbaa !2624
  %109 = icmp eq i8 %108, 10, !dbg !2684
  br i1 %109, label %110, label %111, !dbg !2685

110:                                              ; preds = %105
  call void @_putchar(i8 noundef zeroext 13), !dbg !2686
  br label %111, !dbg !2688

111:                                              ; preds = %110, %105
  %112 = load i8, i8* %107, align 1, !dbg !2689, !tbaa !2624
  call void @_putchar(i8 noundef zeroext %112), !dbg !2690
  %113 = add nuw nsw i32 %106, 1, !dbg !2691
  call void @llvm.dbg.value(metadata i32 %113, metadata !157, metadata !DIExpression()), !dbg !2675
  %114 = icmp eq i32 %113, %102, !dbg !2676
  br i1 %114, label %104, label %105, !dbg !2678, !llvm.loop !2692

115:                                              ; preds = %86
  %116 = getelementptr inbounds %class.IPCommTask, %class.IPCommTask* %0, i32 0, i32 0, !dbg !2696
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %116, i16 noundef zeroext 20), !dbg !2696
  br label %138, !dbg !2696

117:                                              ; preds = %104, %1
  %118 = getelementptr inbounds %class.IPCommTask, %class.IPCommTask* %0, i32 0, i32 5, !dbg !2698
  %119 = load i32, i32* %118, align 4, !dbg !2699, !tbaa !2575
  %120 = add nsw i32 %119, 1, !dbg !2699
  store i32 %120, i32* %118, align 4, !dbg !2699, !tbaa !2575
  br label %79, !dbg !2700, !llvm.loop !2701

121:                                              ; preds = %79
  %122 = bitcast %"class.Cicada::IPCommDevice"* %85 to void (%"class.Cicada::IPCommDevice"*)***, !dbg !2703
  %123 = load void (%"class.Cicada::IPCommDevice"*)**, void (%"class.Cicada::IPCommDevice"*)*** %122, align 8, !dbg !2703, !tbaa !2568
  %124 = getelementptr inbounds void (%"class.Cicada::IPCommDevice"*)*, void (%"class.Cicada::IPCommDevice"*)** %123, i32 8, !dbg !2703
  %125 = load void (%"class.Cicada::IPCommDevice"*)*, void (%"class.Cicada::IPCommDevice"*)** %124, align 4, !dbg !2703
  call void %125(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %85) #34, !dbg !2703
  %126 = getelementptr inbounds %class.IPCommTask, %class.IPCommTask* %0, i32 0, i32 0, !dbg !2704
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %126, i16 noundef zeroext 0), !dbg !2704
  store i8 5, i8* @_ZZN10IPCommTask3runEvE10entrypoint, align 1, !dbg !2704, !tbaa !2624
  br label %127, !dbg !2704

127:                                              ; preds = %1, %121
  %128 = getelementptr inbounds %class.IPCommTask, %class.IPCommTask* %0, i32 0, i32 4, !dbg !2705
  %129 = bitcast %"class.Cicada::ATCommDevice"** %128 to %"class.Cicada::IPCommDevice"**, !dbg !2705
  %130 = load %"class.Cicada::IPCommDevice"*, %"class.Cicada::IPCommDevice"** %129, align 4, !dbg !2705, !tbaa !2572
  %131 = bitcast %"class.Cicada::IPCommDevice"* %130 to i1 (%"class.Cicada::IPCommDevice"*)***, !dbg !2705
  %132 = load i1 (%"class.Cicada::IPCommDevice"*)**, i1 (%"class.Cicada::IPCommDevice"*)*** %131, align 8, !dbg !2705, !tbaa !2568
  %133 = getelementptr inbounds i1 (%"class.Cicada::IPCommDevice"*)*, i1 (%"class.Cicada::IPCommDevice"*)** %132, i32 10, !dbg !2705
  %134 = load i1 (%"class.Cicada::IPCommDevice"*)*, i1 (%"class.Cicada::IPCommDevice"*)** %133, align 4, !dbg !2705
  %135 = call noundef zeroext i1 %134(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %130) #34, !dbg !2705
  br i1 %135, label %136, label %140, !dbg !2704

136:                                              ; preds = %127
  %137 = call i32 (i8*, ...) @printf_(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0)) #34, !dbg !2707
  br label %138, !dbg !2708

138:                                              ; preds = %115, %136
  %139 = phi i8 [ 6, %136 ], [ 4, %115 ]
  store i8 %139, i8* @_ZZN10IPCommTask3runEvE10entrypoint, align 1, !dbg !2665, !tbaa !2624
  br label %140, !dbg !2709

140:                                              ; preds = %138, %1, %127, %67, %48, %9
  ret void, !dbg !2709
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %0, i16 noundef zeroext %1) local_unnamed_addr #4 comdat align 2 !dbg !2710 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !2712, metadata !DIExpression()), !dbg !2714
  call void @llvm.dbg.value(metadata i16 %1, metadata !2713, metadata !DIExpression()), !dbg !2714
  %3 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 1, !dbg !2715
  store i16 %1, i16* %3, align 4, !dbg !2716, !tbaa !2607
  ret void, !dbg !2717
}

; Function Attrs: nofree nounwind readonly
declare dso_local i8* @__dynamic_cast(i8*, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #6

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_putchar(i8 noundef zeroext %0) local_unnamed_addr #4 !dbg !127 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !132, metadata !DIExpression()), !dbg !2718
  %2 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** @_ZZ8_putcharE6serial, align 4, !dbg !2719, !tbaa !2476
  %3 = icmp eq %"class.Cicada::Stm32Uart"* %2, null, !dbg !2719
  br i1 %3, label %4, label %6, !dbg !2721

4:                                                ; preds = %1
  %5 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef(%struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073759232 to %struct.USART_TypeDef*)) #34, !dbg !2722
  store %"class.Cicada::Stm32Uart"* %5, %"class.Cicada::Stm32Uart"** @_ZZ8_putcharE6serial, align 4, !dbg !2724, !tbaa !2476
  br label %6, !dbg !2725

6:                                                ; preds = %4, %1
  %7 = load %"class.Cicada::BufferedSerial"*, %"class.Cicada::BufferedSerial"** bitcast (%"class.Cicada::Stm32Uart"** @_ZZ8_putcharE6serial to %"class.Cicada::BufferedSerial"**), align 4, !dbg !2726, !tbaa !2476
  %8 = bitcast %"class.Cicada::BufferedSerial"* %7 to void (%"class.Cicada::BufferedSerial"*, i8)***, !dbg !2727
  %9 = load void (%"class.Cicada::BufferedSerial"*, i8)**, void (%"class.Cicada::BufferedSerial"*, i8)*** %8, align 8, !dbg !2727, !tbaa !2568
  %10 = getelementptr inbounds void (%"class.Cicada::BufferedSerial"*, i8)*, void (%"class.Cicada::BufferedSerial"*, i8)** %9, i32 9, !dbg !2727
  %11 = load void (%"class.Cicada::BufferedSerial"*, i8)*, void (%"class.Cicada::BufferedSerial"*, i8)** %10, align 4, !dbg !2727
  call void %11(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %7, i8 noundef zeroext %0) #34, !dbg !2727
  ret void, !dbg !2728
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8* noundef) local_unnamed_addr #7

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada4TaskD0Ev(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %0) unnamed_addr #3 comdat align 2 !dbg !2729 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !2731, metadata !DIExpression()), !dbg !2732
  call void @llvm.trap() #36, !dbg !2733
  unreachable, !dbg !2733
}

declare dso_local void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #9

; Function Attrs: mustprogress noinline nounwind
define dso_local void @SysTick_Handler() local_unnamed_addr #4 !dbg !2734 {
  call void @HAL_IncTick() #34, !dbg !2735
  ret void, !dbg !2736
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @USART1_IRQHandler() local_unnamed_addr #4 !dbg !2 {
  %1 = load atomic i8, i8* bitcast (i32* @_ZGVZ17USART1_IRQHandlerE8instance to i8*) acquire, align 4, !dbg !2737
  %2 = and i8 %1, 1, !dbg !2737
  %3 = icmp eq i8 %2, 0, !dbg !2737
  br i1 %3, label %4, label %9, !dbg !2737, !prof !2738

4:                                                ; preds = %0
  %5 = call i32 @__cxa_guard_acquire(i32* nonnull @_ZGVZ17USART1_IRQHandlerE8instance) #34, !dbg !2737
  %6 = icmp eq i32 %5, 0, !dbg !2737
  br i1 %6, label %9, label %7, !dbg !2737

7:                                                ; preds = %4
  %8 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef(%struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073821696 to %struct.USART_TypeDef*)) #34, !dbg !2739
  store %"class.Cicada::Stm32Uart"* %8, %"class.Cicada::Stm32Uart"** @_ZZ17USART1_IRQHandlerE8instance, align 4, !dbg !2737, !tbaa !2476
  call void @__cxa_guard_release(i32* nonnull @_ZGVZ17USART1_IRQHandlerE8instance) #34, !dbg !2737
  br label %9, !dbg !2737

9:                                                ; preds = %7, %4, %0
  %10 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** @_ZZ17USART1_IRQHandlerE8instance, align 4, !dbg !2740, !tbaa !2476
  call void @_ZN6Cicada9Stm32Uart15handleInterruptEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %10) #34, !dbg !2741
  ret void, !dbg !2742
}

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_guard_acquire(i32*) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare dso_local void @__cxa_guard_release(i32*) local_unnamed_addr #10

; Function Attrs: mustprogress noinline nounwind
define dso_local void @USART2_IRQHandler() local_unnamed_addr #4 !dbg !120 {
  %1 = load atomic i8, i8* bitcast (i32* @_ZGVZ17USART2_IRQHandlerE8instance to i8*) acquire, align 4, !dbg !2743
  %2 = and i8 %1, 1, !dbg !2743
  %3 = icmp eq i8 %2, 0, !dbg !2743
  br i1 %3, label %4, label %9, !dbg !2743, !prof !2738

4:                                                ; preds = %0
  %5 = call i32 @__cxa_guard_acquire(i32* nonnull @_ZGVZ17USART2_IRQHandlerE8instance) #34, !dbg !2743
  %6 = icmp eq i32 %5, 0, !dbg !2743
  br i1 %6, label %9, label %7, !dbg !2743

7:                                                ; preds = %4
  %8 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef(%struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073759232 to %struct.USART_TypeDef*)) #34, !dbg !2744
  store %"class.Cicada::Stm32Uart"* %8, %"class.Cicada::Stm32Uart"** @_ZZ17USART2_IRQHandlerE8instance, align 4, !dbg !2743, !tbaa !2476
  call void @__cxa_guard_release(i32* nonnull @_ZGVZ17USART2_IRQHandlerE8instance) #34, !dbg !2743
  br label %9, !dbg !2743

9:                                                ; preds = %7, %4, %0
  %10 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** @_ZZ17USART2_IRQHandlerE8instance, align 4, !dbg !2745, !tbaa !2476
  call void @_ZN6Cicada9Stm32Uart15handleInterruptEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %10) #34, !dbg !2746
  ret void, !dbg !2747
}

; Function Attrs: noinline nounwind
define dso_local i32 @printf_(i8* noundef %0, ...) local_unnamed_addr #3 !dbg !2748 {
  %2 = alloca %struct.__va_list, align 4
  %3 = alloca [1 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !2750, metadata !DIExpression()), !dbg !2762
  %4 = bitcast %struct.__va_list* %2 to i8*, !dbg !2763
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #34, !dbg !2763
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !2751, metadata !DIExpression()), !dbg !2764
  call void @llvm.va_start(i8* nonnull %4), !dbg !2765
  %5 = getelementptr inbounds [1 x i8], [1 x i8]* %3, i32 0, i32 0, !dbg !2766
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #34, !dbg !2766
  call void @llvm.dbg.declare(metadata [1 x i8]* %3, metadata !2758, metadata !DIExpression()), !dbg !2767
  %6 = bitcast %struct.__va_list* %2 to i32*, !dbg !2768
  %7 = load i32, i32* %6, align 4, !dbg !2768
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !2768
  %9 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_char, i8* noundef nonnull %5, i32 noundef -1, i8* noundef %0, [1 x i32] %8), !dbg !2768
  call void @llvm.dbg.value(metadata i32 %9, metadata !2760, metadata !DIExpression()), !dbg !2762
  call void @llvm.va_end(i8* %4), !dbg !2769
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #34, !dbg !2770
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #34, !dbg !2770
  ret i32 %9, !dbg !2771
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #11

; Function Attrs: noinline nounwind
define internal void @_out_char(i8 noundef zeroext %0, i8* nocapture noundef readnone %1, i32 noundef %2, i32 noundef %3) #3 !dbg !2772 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2774, metadata !DIExpression()), !dbg !2778
  call void @llvm.dbg.value(metadata i8* %1, metadata !2775, metadata !DIExpression()), !dbg !2778
  call void @llvm.dbg.value(metadata i32 %2, metadata !2776, metadata !DIExpression()), !dbg !2778
  call void @llvm.dbg.value(metadata i32 %3, metadata !2777, metadata !DIExpression()), !dbg !2778
  %5 = icmp eq i8 %0, 0, !dbg !2779
  br i1 %5, label %7, label %6, !dbg !2781

6:                                                ; preds = %4
  call void @_putchar(i8 noundef zeroext %0) #34, !dbg !2782
  br label %7, !dbg !2784

7:                                                ; preds = %6, %4
  ret void, !dbg !2785
}

; Function Attrs: noinline nounwind
define internal fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) unnamed_addr #3 !dbg !2786 {
  %6 = alloca i8*, align 4
  %7 = extractvalue [1 x i32] %4, 0
  %8 = inttoptr i32 %7 to i8*
  call void @llvm.dbg.value(metadata i8* %8, metadata !2794, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !2790, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i8* %1, metadata !2791, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i32 %2, metadata !2792, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i8* %3, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %3, i8** %6, align 4, !tbaa !2841
  call void @llvm.dbg.value(metadata i32 0, metadata !2799, metadata !DIExpression()), !dbg !2840
  %9 = icmp eq i8* %1, null, !dbg !2845
  %10 = select i1 %9, void (i8, i8*, i32, i32)* @_out_null, void (i8, i8*, i32, i32)* %0, !dbg !2847
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %10, metadata !2790, metadata !DIExpression()), !dbg !2840
  br label %11, !dbg !2848

11:                                               ; preds = %354, %5
  %12 = phi i32 [ 0, %5 ], [ %355, %354 ]
  %13 = phi i8* [ %8, %5 ], [ %356, %354 ]
  br label %14, !dbg !2848

14:                                               ; preds = %11, %18
  %15 = phi i32 [ %19, %18 ], [ %12, %11 ], !dbg !2840
  call void @llvm.dbg.value(metadata i8* %13, metadata !2794, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i32 %15, metadata !2799, metadata !DIExpression()), !dbg !2840
  %16 = load i8*, i8** %6, align 4, !dbg !2849, !tbaa !2841
  call void @llvm.dbg.value(metadata i8* %16, metadata !2793, metadata !DIExpression()), !dbg !2840
  %17 = load i8, i8* %16, align 1, !dbg !2850, !tbaa !2851
  switch i8 %17, label %18 [
    i8 0, label %357
    i8 37, label %22
  ], !dbg !2848

18:                                               ; preds = %14
  %19 = add i32 %15, 1, !dbg !2852
  call void @llvm.dbg.value(metadata i32 %19, metadata !2799, metadata !DIExpression()), !dbg !2840
  call void %10(i8 noundef zeroext %17, i8* noundef %1, i32 noundef %15, i32 noundef %2) #34, !dbg !2855, !callees !2856
  %20 = load i8*, i8** %6, align 4, !dbg !2857, !tbaa !2841
  call void @llvm.dbg.value(metadata i8* %20, metadata !2793, metadata !DIExpression()), !dbg !2840
  %21 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !2857
  call void @llvm.dbg.value(metadata i8* %21, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %21, i8** %6, align 4, !dbg !2857, !tbaa !2841
  br label %14, !dbg !2858, !llvm.loop !2859

22:                                               ; preds = %14
  %23 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !2861
  call void @llvm.dbg.value(metadata i8* %23, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %23, i8** %6, align 4, !dbg !2861, !tbaa !2841
  call void @llvm.dbg.value(metadata i32 0, metadata !2795, metadata !DIExpression()), !dbg !2840
  br label %24, !dbg !2863

24:                                               ; preds = %43, %22
  %25 = phi i32 [ 0, %22 ], [ %45, %43 ], !dbg !2864
  call void @llvm.dbg.value(metadata i32 %25, metadata !2795, metadata !DIExpression()), !dbg !2840
  %26 = load i8*, i8** %6, align 4, !dbg !2865, !tbaa !2841
  call void @llvm.dbg.value(metadata i8* %26, metadata !2793, metadata !DIExpression()), !dbg !2840
  %27 = load i8, i8* %26, align 1, !dbg !2867, !tbaa !2851
  switch i8 %27, label %43 [
    i8 48, label %28
    i8 45, label %31
    i8 43, label %34
    i8 32, label %37
    i8 35, label %40
  ], !dbg !2868

28:                                               ; preds = %24
  %29 = or i32 %25, 1, !dbg !2869
  call void @llvm.dbg.value(metadata i32 %29, metadata !2795, metadata !DIExpression()), !dbg !2840
  %30 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !2871
  call void @llvm.dbg.value(metadata i8* %30, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %30, i8** %6, align 4, !dbg !2871, !tbaa !2841
  call void @llvm.dbg.value(metadata i32 1, metadata !2798, metadata !DIExpression()), !dbg !2840
  br label %43, !dbg !2872

31:                                               ; preds = %24
  %32 = or i32 %25, 2, !dbg !2873
  call void @llvm.dbg.value(metadata i32 %32, metadata !2795, metadata !DIExpression()), !dbg !2840
  %33 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !2874
  call void @llvm.dbg.value(metadata i8* %33, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %33, i8** %6, align 4, !dbg !2874, !tbaa !2841
  call void @llvm.dbg.value(metadata i32 1, metadata !2798, metadata !DIExpression()), !dbg !2840
  br label %43, !dbg !2875

34:                                               ; preds = %24
  %35 = or i32 %25, 4, !dbg !2876
  call void @llvm.dbg.value(metadata i32 %35, metadata !2795, metadata !DIExpression()), !dbg !2840
  %36 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !2877
  call void @llvm.dbg.value(metadata i8* %36, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %36, i8** %6, align 4, !dbg !2877, !tbaa !2841
  call void @llvm.dbg.value(metadata i32 1, metadata !2798, metadata !DIExpression()), !dbg !2840
  br label %43, !dbg !2878

37:                                               ; preds = %24
  %38 = or i32 %25, 8, !dbg !2879
  call void @llvm.dbg.value(metadata i32 %38, metadata !2795, metadata !DIExpression()), !dbg !2840
  %39 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !2880
  call void @llvm.dbg.value(metadata i8* %39, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %39, i8** %6, align 4, !dbg !2880, !tbaa !2841
  call void @llvm.dbg.value(metadata i32 1, metadata !2798, metadata !DIExpression()), !dbg !2840
  br label %43, !dbg !2881

40:                                               ; preds = %24
  %41 = or i32 %25, 16, !dbg !2882
  call void @llvm.dbg.value(metadata i32 %41, metadata !2795, metadata !DIExpression()), !dbg !2840
  %42 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !2883
  call void @llvm.dbg.value(metadata i8* %42, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %42, i8** %6, align 4, !dbg !2883, !tbaa !2841
  call void @llvm.dbg.value(metadata i32 1, metadata !2798, metadata !DIExpression()), !dbg !2840
  br label %43, !dbg !2884

43:                                               ; preds = %24, %28, %31, %34, %37, %40
  %44 = phi i1 [ false, %28 ], [ false, %31 ], [ false, %34 ], [ false, %37 ], [ false, %40 ], [ true, %24 ], !dbg !2885
  %45 = phi i32 [ %29, %28 ], [ %32, %31 ], [ %35, %34 ], [ %38, %37 ], [ %41, %40 ], [ %25, %24 ], !dbg !2886
  call void @llvm.dbg.value(metadata i32 %45, metadata !2795, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i32 undef, metadata !2798, metadata !DIExpression()), !dbg !2840
  br i1 %44, label %46, label %24, !dbg !2887, !llvm.loop !2888

46:                                               ; preds = %43
  call void @llvm.dbg.value(metadata i32 0, metadata !2796, metadata !DIExpression()), !dbg !2840
  %47 = load i8*, i8** %6, align 4, !dbg !2890, !tbaa !2841
  call void @llvm.dbg.value(metadata i8* %47, metadata !2793, metadata !DIExpression()), !dbg !2840
  %48 = load i8, i8* %47, align 1, !dbg !2891, !tbaa !2851
  %49 = call fastcc zeroext i1 @_is_digit(i8 noundef zeroext %48), !dbg !2892
  br i1 %49, label %50, label %52, !dbg !2893

50:                                               ; preds = %46
  call void @llvm.dbg.value(metadata i8** %6, metadata !2793, metadata !DIExpression(DW_OP_deref)), !dbg !2840
  %51 = call fastcc i32 @_atoi(i8** noundef nonnull %6), !dbg !2894
  call void @llvm.dbg.value(metadata i32 %51, metadata !2796, metadata !DIExpression()), !dbg !2840
  br label %64, !dbg !2896

52:                                               ; preds = %46
  call void @llvm.dbg.value(metadata i8* %47, metadata !2793, metadata !DIExpression()), !dbg !2840
  %53 = icmp eq i8 %48, 42, !dbg !2897
  br i1 %53, label %54, label %64, !dbg !2898

54:                                               ; preds = %52
  %55 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !2899
  call void @llvm.dbg.value(metadata i8* %55, metadata !2794, metadata !DIExpression()), !dbg !2840
  %56 = bitcast i8* %13 to i32*, !dbg !2899
  %57 = load i32, i32* %56, align 4, !dbg !2899
  call void @llvm.dbg.value(metadata i32 %57, metadata !2800, metadata !DIExpression()), !dbg !2900
  %58 = icmp slt i32 %57, 0, !dbg !2901
  %59 = or i32 %45, 2, !dbg !2903
  %60 = sub nsw i32 0, %57, !dbg !2903
  %61 = select i1 %58, i32 %60, i32 %57, !dbg !2903
  %62 = select i1 %58, i32 %59, i32 %45, !dbg !2903
  call void @llvm.dbg.value(metadata i32 %62, metadata !2795, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i32 %61, metadata !2796, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i8* %47, metadata !2793, metadata !DIExpression()), !dbg !2840
  %63 = getelementptr inbounds i8, i8* %47, i32 1, !dbg !2904
  call void @llvm.dbg.value(metadata i8* %63, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %63, i8** %6, align 4, !dbg !2904, !tbaa !2841
  br label %64, !dbg !2905

64:                                               ; preds = %52, %54, %50
  %65 = phi i32 [ %51, %50 ], [ %61, %54 ], [ 0, %52 ], !dbg !2886
  %66 = phi i32 [ %45, %50 ], [ %62, %54 ], [ %45, %52 ], !dbg !2886
  %67 = phi i8* [ %13, %50 ], [ %55, %54 ], [ %13, %52 ]
  call void @llvm.dbg.value(metadata i8* %67, metadata !2794, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i32 %66, metadata !2795, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i32 %65, metadata !2796, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i32 0, metadata !2797, metadata !DIExpression()), !dbg !2840
  %68 = load i8*, i8** %6, align 4, !dbg !2906, !tbaa !2841
  call void @llvm.dbg.value(metadata i8* %68, metadata !2793, metadata !DIExpression()), !dbg !2840
  %69 = load i8, i8* %68, align 1, !dbg !2907, !tbaa !2851
  %70 = icmp eq i8 %69, 46, !dbg !2908
  br i1 %70, label %71, label %87, !dbg !2909

71:                                               ; preds = %64
  %72 = or i32 %66, 1024, !dbg !2910
  call void @llvm.dbg.value(metadata i32 %72, metadata !2795, metadata !DIExpression()), !dbg !2840
  %73 = getelementptr inbounds i8, i8* %68, i32 1, !dbg !2911
  call void @llvm.dbg.value(metadata i8* %73, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %73, i8** %6, align 4, !dbg !2911, !tbaa !2841
  %74 = load i8, i8* %73, align 1, !dbg !2912, !tbaa !2851
  %75 = call fastcc zeroext i1 @_is_digit(i8 noundef zeroext %74), !dbg !2913
  br i1 %75, label %76, label %78, !dbg !2914

76:                                               ; preds = %71
  call void @llvm.dbg.value(metadata i8** %6, metadata !2793, metadata !DIExpression(DW_OP_deref)), !dbg !2840
  %77 = call fastcc i32 @_atoi(i8** noundef nonnull %6), !dbg !2915
  call void @llvm.dbg.value(metadata i32 %77, metadata !2797, metadata !DIExpression()), !dbg !2840
  br label %87, !dbg !2917

78:                                               ; preds = %71
  call void @llvm.dbg.value(metadata i8* %73, metadata !2793, metadata !DIExpression()), !dbg !2840
  %79 = icmp eq i8 %74, 42, !dbg !2918
  br i1 %79, label %80, label %87, !dbg !2919

80:                                               ; preds = %78
  %81 = getelementptr inbounds i8, i8* %67, i32 4, !dbg !2920
  call void @llvm.dbg.value(metadata i8* %81, metadata !2794, metadata !DIExpression()), !dbg !2840
  %82 = bitcast i8* %67 to i32*, !dbg !2920
  %83 = load i32, i32* %82, align 4, !dbg !2920
  call void @llvm.dbg.value(metadata i32 %83, metadata !2805, metadata !DIExpression()), !dbg !2921
  %84 = icmp sgt i32 %83, 0, !dbg !2922
  %85 = select i1 %84, i32 %83, i32 0, !dbg !2923
  call void @llvm.dbg.value(metadata i32 %85, metadata !2797, metadata !DIExpression()), !dbg !2840
  %86 = getelementptr inbounds i8, i8* %68, i32 2, !dbg !2924
  call void @llvm.dbg.value(metadata i8* %86, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %86, i8** %6, align 4, !dbg !2924, !tbaa !2841
  br label %87, !dbg !2925

87:                                               ; preds = %76, %80, %78, %64
  %88 = phi i32 [ %77, %76 ], [ %85, %80 ], [ 0, %78 ], [ 0, %64 ], !dbg !2886
  %89 = phi i32 [ %72, %76 ], [ %72, %80 ], [ %72, %78 ], [ %66, %64 ], !dbg !2886
  %90 = phi i8* [ %67, %76 ], [ %81, %80 ], [ %67, %78 ], [ %67, %64 ]
  call void @llvm.dbg.value(metadata i8* %90, metadata !2794, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i32 %89, metadata !2795, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i32 %88, metadata !2797, metadata !DIExpression()), !dbg !2840
  %91 = load i8*, i8** %6, align 4, !dbg !2926, !tbaa !2841
  call void @llvm.dbg.value(metadata i8* %91, metadata !2793, metadata !DIExpression()), !dbg !2840
  %92 = load i8, i8* %91, align 1, !dbg !2927, !tbaa !2851
  %93 = zext i8 %92 to i32, !dbg !2927
  %94 = add nsw i32 %93, -104, !dbg !2928
  %95 = call i32 @llvm.fshl.i32(i32 %94, i32 %94, i32 31), !dbg !2928
  switch i32 %95, label %121 [
    i32 2, label %96
    i32 0, label %104
    i32 6, label %112
    i32 1, label %115
    i32 9, label %118
  ], !dbg !2928

96:                                               ; preds = %87
  %97 = or i32 %89, 256, !dbg !2929
  call void @llvm.dbg.value(metadata i32 %97, metadata !2795, metadata !DIExpression()), !dbg !2840
  %98 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !2931
  call void @llvm.dbg.value(metadata i8* %98, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %98, i8** %6, align 4, !dbg !2931, !tbaa !2841
  %99 = load i8, i8* %98, align 1, !dbg !2932, !tbaa !2851
  %100 = icmp eq i8 %99, 108, !dbg !2934
  br i1 %100, label %101, label %121, !dbg !2935

101:                                              ; preds = %96
  %102 = or i32 %89, 768, !dbg !2936
  call void @llvm.dbg.value(metadata i32 %102, metadata !2795, metadata !DIExpression()), !dbg !2840
  %103 = getelementptr inbounds i8, i8* %91, i32 2, !dbg !2938
  call void @llvm.dbg.value(metadata i8* %103, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %103, i8** %6, align 4, !dbg !2938, !tbaa !2841
  br label %121, !dbg !2939

104:                                              ; preds = %87
  %105 = or i32 %89, 128, !dbg !2940
  call void @llvm.dbg.value(metadata i32 %105, metadata !2795, metadata !DIExpression()), !dbg !2840
  %106 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !2941
  call void @llvm.dbg.value(metadata i8* %106, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %106, i8** %6, align 4, !dbg !2941, !tbaa !2841
  %107 = load i8, i8* %106, align 1, !dbg !2942, !tbaa !2851
  %108 = icmp eq i8 %107, 104, !dbg !2944
  br i1 %108, label %109, label %121, !dbg !2945

109:                                              ; preds = %104
  %110 = or i32 %89, 192, !dbg !2946
  call void @llvm.dbg.value(metadata i32 %110, metadata !2795, metadata !DIExpression()), !dbg !2840
  %111 = getelementptr inbounds i8, i8* %91, i32 2, !dbg !2948
  call void @llvm.dbg.value(metadata i8* %111, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %111, i8** %6, align 4, !dbg !2948, !tbaa !2841
  br label %121, !dbg !2949

112:                                              ; preds = %87
  %113 = or i32 %89, 256, !dbg !2950
  call void @llvm.dbg.value(metadata i32 %113, metadata !2795, metadata !DIExpression()), !dbg !2840
  %114 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !2951
  call void @llvm.dbg.value(metadata i8* %114, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %114, i8** %6, align 4, !dbg !2951, !tbaa !2841
  br label %121, !dbg !2952

115:                                              ; preds = %87
  %116 = or i32 %89, 512, !dbg !2953
  call void @llvm.dbg.value(metadata i32 %116, metadata !2795, metadata !DIExpression()), !dbg !2840
  %117 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !2954
  call void @llvm.dbg.value(metadata i8* %117, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %117, i8** %6, align 4, !dbg !2954, !tbaa !2841
  br label %121, !dbg !2955

118:                                              ; preds = %87
  %119 = or i32 %89, 256, !dbg !2956
  call void @llvm.dbg.value(metadata i32 %119, metadata !2795, metadata !DIExpression()), !dbg !2840
  %120 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !2957
  call void @llvm.dbg.value(metadata i8* %120, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %120, i8** %6, align 4, !dbg !2957, !tbaa !2841
  br label %121, !dbg !2958

121:                                              ; preds = %87, %104, %109, %96, %101, %118, %115, %112
  %122 = phi i32 [ %89, %87 ], [ %119, %118 ], [ %116, %115 ], [ %113, %112 ], [ %110, %109 ], [ %105, %104 ], [ %102, %101 ], [ %97, %96 ], !dbg !2886
  call void @llvm.dbg.value(metadata i32 %122, metadata !2795, metadata !DIExpression()), !dbg !2840
  %123 = load i8*, i8** %6, align 4, !dbg !2959, !tbaa !2841
  call void @llvm.dbg.value(metadata i8* %123, metadata !2793, metadata !DIExpression()), !dbg !2840
  %124 = load i8, i8* %123, align 1, !dbg !2960, !tbaa !2851
  switch i8 %124, label %350 [
    i8 37, label %346
    i8 112, label %337
    i8 115, label %278
    i8 99, label %244
    i8 70, label %233
    i8 102, label %233
    i8 120, label %129
    i8 88, label %129
    i8 111, label %125
    i8 98, label %126
    i8 100, label %127
    i8 105, label %127
    i8 117, label %127
  ], !dbg !2961

125:                                              ; preds = %121
  call void @llvm.dbg.value(metadata i32 8, metadata !2811, metadata !DIExpression()), !dbg !2962
  br label %129, !dbg !2963

126:                                              ; preds = %121
  call void @llvm.dbg.value(metadata i32 2, metadata !2811, metadata !DIExpression()), !dbg !2962
  br label %129, !dbg !2967

127:                                              ; preds = %121, %121, %121
  call void @llvm.dbg.value(metadata i32 10, metadata !2811, metadata !DIExpression()), !dbg !2962
  %128 = and i32 %122, -17, !dbg !2970
  call void @llvm.dbg.value(metadata i32 %128, metadata !2795, metadata !DIExpression()), !dbg !2840
  br label %129

129:                                              ; preds = %121, %121, %125, %127, %126
  %130 = phi i32 [ 8, %125 ], [ 2, %126 ], [ 10, %127 ], [ 16, %121 ], [ 16, %121 ], !dbg !2972
  %131 = phi i32 [ %122, %125 ], [ %122, %126 ], [ %128, %127 ], [ %122, %121 ], [ %122, %121 ], !dbg !2886
  call void @llvm.dbg.value(metadata i32 %131, metadata !2795, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i32 %130, metadata !2811, metadata !DIExpression()), !dbg !2962
  call void @llvm.dbg.value(metadata i8* %123, metadata !2793, metadata !DIExpression()), !dbg !2840
  %132 = icmp eq i8 %124, 88, !dbg !2973
  %133 = or i32 %131, 32
  %134 = select i1 %132, i32 %133, i32 %131, !dbg !2975
  call void @llvm.dbg.value(metadata i32 %134, metadata !2795, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i8* %123, metadata !2793, metadata !DIExpression()), !dbg !2840
  switch i8 %124, label %135 [
    i8 105, label %137
    i8 100, label %137
  ], !dbg !2976

135:                                              ; preds = %129
  %136 = and i32 %134, -13, !dbg !2978
  call void @llvm.dbg.value(metadata i32 %136, metadata !2795, metadata !DIExpression()), !dbg !2840
  br label %137, !dbg !2980

137:                                              ; preds = %129, %129, %135
  %138 = phi i32 [ %136, %135 ], [ %134, %129 ], [ %134, %129 ], !dbg !2962
  call void @llvm.dbg.value(metadata i32 %138, metadata !2795, metadata !DIExpression()), !dbg !2840
  %139 = and i32 %138, 1024, !dbg !2981
  %140 = icmp eq i32 %139, 0, !dbg !2981
  %141 = and i32 %138, -2
  %142 = select i1 %140, i32 %138, i32 %141, !dbg !2983
  call void @llvm.dbg.value(metadata i32 %142, metadata !2795, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i8* %123, metadata !2793, metadata !DIExpression()), !dbg !2840
  switch i8 %124, label %189 [
    i8 105, label %143
    i8 100, label %143
  ], !dbg !2984

143:                                              ; preds = %137, %137
  %144 = and i32 %142, 512, !dbg !2985
  %145 = icmp eq i32 %144, 0, !dbg !2985
  br i1 %145, label %158, label %146, !dbg !2986

146:                                              ; preds = %143
  %147 = ptrtoint i8* %90 to i32, !dbg !2987
  %148 = add i32 %147, 7, !dbg !2987
  %149 = and i32 %148, -8, !dbg !2987
  %150 = inttoptr i32 %149 to i8*, !dbg !2987
  %151 = getelementptr inbounds i8, i8* %150, i32 8, !dbg !2987
  call void @llvm.dbg.value(metadata i8* %151, metadata !2794, metadata !DIExpression()), !dbg !2840
  %152 = inttoptr i32 %149 to i64*, !dbg !2987
  %153 = load i64, i64* %152, align 8, !dbg !2987
  call void @llvm.dbg.value(metadata i64 %153, metadata !2814, metadata !DIExpression()), !dbg !2988
  %154 = call i64 @llvm.abs.i64(i64 %153, i1 true), !dbg !2989
  %155 = icmp slt i64 %153, 0, !dbg !2990
  %156 = zext i32 %130 to i64, !dbg !2991
  %157 = call fastcc i32 @_ntoa_long_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i64 noundef %154, i1 noundef zeroext %155, i64 noundef %156, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !2992
  call void @llvm.dbg.value(metadata i32 %157, metadata !2799, metadata !DIExpression()), !dbg !2840
  br label %228, !dbg !2993

158:                                              ; preds = %143
  %159 = and i32 %142, 256, !dbg !2994
  %160 = icmp eq i32 %159, 0, !dbg !2994
  br i1 %160, label %168, label %161, !dbg !2995

161:                                              ; preds = %158
  %162 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !2996
  call void @llvm.dbg.value(metadata i8* %162, metadata !2794, metadata !DIExpression()), !dbg !2840
  %163 = bitcast i8* %90 to i32*, !dbg !2996
  %164 = load i32, i32* %163, align 4, !dbg !2996
  call void @llvm.dbg.value(metadata i32 %164, metadata !2820, metadata !DIExpression()), !dbg !2997
  %165 = call i32 @llvm.abs.i32(i32 %164, i1 true), !dbg !2998
  %166 = icmp slt i32 %164, 0, !dbg !2999
  %167 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %165, i1 noundef zeroext %166, i32 noundef %130, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !3000
  call void @llvm.dbg.value(metadata i32 %167, metadata !2799, metadata !DIExpression()), !dbg !2840
  br label %228, !dbg !3001

168:                                              ; preds = %158
  %169 = and i32 %142, 64, !dbg !3002
  %170 = icmp eq i32 %169, 0, !dbg !3002
  br i1 %170, label %175, label %171, !dbg !3003

171:                                              ; preds = %168
  call void @llvm.dbg.value(metadata i8* %90, metadata !2794, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !2840
  %172 = bitcast i8* %90 to i32*, !dbg !3004
  %173 = load i32, i32* %172, align 4, !dbg !3004
  %174 = and i32 %173, 255, !dbg !3005
  br label %183, !dbg !3003

175:                                              ; preds = %168
  %176 = and i32 %142, 128, !dbg !3006
  %177 = icmp eq i32 %176, 0, !dbg !3006
  call void @llvm.dbg.value(metadata i8* %90, metadata !2794, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !2840
  call void @llvm.dbg.value(metadata i8* %90, metadata !2794, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !2840
  %178 = bitcast i8* %90 to i32*, !dbg !3007
  %179 = load i32, i32* %178, align 4, !dbg !3007
  br i1 %177, label %183, label %180, !dbg !3008

180:                                              ; preds = %175
  %181 = shl i32 %179, 16, !dbg !3009
  %182 = ashr exact i32 %181, 16, !dbg !3009
  br label %183, !dbg !3008

183:                                              ; preds = %175, %180, %171
  %184 = phi i32 [ %174, %171 ], [ %182, %180 ], [ %179, %175 ], !dbg !3003
  %185 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !3007
  call void @llvm.dbg.value(metadata i8* %185, metadata !2794, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i32 %184, metadata !2824, metadata !DIExpression()), !dbg !3007
  %186 = call i32 @llvm.abs.i32(i32 %184, i1 true), !dbg !3010
  %187 = icmp slt i32 %184, 0, !dbg !3011
  %188 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %186, i1 noundef zeroext %187, i32 noundef %130, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !3012
  call void @llvm.dbg.value(metadata i32 %188, metadata !2799, metadata !DIExpression()), !dbg !2840
  br label %228

189:                                              ; preds = %137
  %190 = and i32 %142, 512, !dbg !3013
  %191 = icmp eq i32 %190, 0, !dbg !3013
  br i1 %191, label %202, label %192, !dbg !3014

192:                                              ; preds = %189
  %193 = ptrtoint i8* %90 to i32, !dbg !3015
  %194 = add i32 %193, 7, !dbg !3015
  %195 = and i32 %194, -8, !dbg !3015
  %196 = inttoptr i32 %195 to i8*, !dbg !3015
  %197 = getelementptr inbounds i8, i8* %196, i32 8, !dbg !3015
  call void @llvm.dbg.value(metadata i8* %197, metadata !2794, metadata !DIExpression()), !dbg !2840
  %198 = inttoptr i32 %195 to i64*, !dbg !3015
  %199 = load i64, i64* %198, align 8, !dbg !3015
  %200 = zext i32 %130 to i64, !dbg !3017
  %201 = call fastcc i32 @_ntoa_long_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i64 noundef %199, i1 noundef zeroext false, i64 noundef %200, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !3018
  call void @llvm.dbg.value(metadata i32 %201, metadata !2799, metadata !DIExpression()), !dbg !2840
  br label %228, !dbg !3019

202:                                              ; preds = %189
  %203 = and i32 %142, 256, !dbg !3020
  %204 = icmp eq i32 %203, 0, !dbg !3020
  br i1 %204, label %210, label %205, !dbg !3021

205:                                              ; preds = %202
  %206 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !3022
  call void @llvm.dbg.value(metadata i8* %206, metadata !2794, metadata !DIExpression()), !dbg !2840
  %207 = bitcast i8* %90 to i32*, !dbg !3022
  %208 = load i32, i32* %207, align 4, !dbg !3022
  %209 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %208, i1 noundef zeroext false, i32 noundef %130, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !3024
  call void @llvm.dbg.value(metadata i32 %209, metadata !2799, metadata !DIExpression()), !dbg !2840
  br label %228, !dbg !3025

210:                                              ; preds = %202
  %211 = and i32 %142, 64, !dbg !3026
  %212 = icmp eq i32 %211, 0, !dbg !3026
  br i1 %212, label %217, label %213, !dbg !3027

213:                                              ; preds = %210
  call void @llvm.dbg.value(metadata i8* %90, metadata !2794, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !2840
  %214 = bitcast i8* %90 to i32*, !dbg !3028
  %215 = load i32, i32* %214, align 4, !dbg !3028
  %216 = and i32 %215, 255, !dbg !3029
  br label %224, !dbg !3027

217:                                              ; preds = %210
  %218 = and i32 %142, 128, !dbg !3030
  %219 = icmp eq i32 %218, 0, !dbg !3030
  call void @llvm.dbg.value(metadata i8* %90, metadata !2794, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !2840
  call void @llvm.dbg.value(metadata i8* %90, metadata !2794, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !2840
  %220 = bitcast i8* %90 to i32*, !dbg !3031
  %221 = load i32, i32* %220, align 4, !dbg !3031
  %222 = and i32 %221, 65535
  %223 = select i1 %219, i32 %221, i32 %222, !dbg !3032
  br label %224, !dbg !3032

224:                                              ; preds = %217, %213
  %225 = phi i32 [ %216, %213 ], [ %223, %217 ], !dbg !3027
  %226 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !3031
  call void @llvm.dbg.value(metadata i8* %226, metadata !2794, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i32 %225, metadata !2826, metadata !DIExpression()), !dbg !3031
  %227 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %225, i1 noundef zeroext false, i32 noundef %130, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !3033
  call void @llvm.dbg.value(metadata i32 %227, metadata !2799, metadata !DIExpression()), !dbg !2840
  br label %228

228:                                              ; preds = %192, %224, %205, %146, %183, %161
  %229 = phi i32 [ %157, %146 ], [ %167, %161 ], [ %188, %183 ], [ %201, %192 ], [ %209, %205 ], [ %227, %224 ], !dbg !3034
  %230 = phi i8* [ %151, %146 ], [ %162, %161 ], [ %185, %183 ], [ %197, %192 ], [ %206, %205 ], [ %226, %224 ], !dbg !3034
  call void @llvm.dbg.value(metadata i8* %230, metadata !2794, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i32 %229, metadata !2799, metadata !DIExpression()), !dbg !2840
  %231 = load i8*, i8** %6, align 4, !dbg !3035, !tbaa !2841
  call void @llvm.dbg.value(metadata i8* %231, metadata !2793, metadata !DIExpression()), !dbg !2840
  %232 = getelementptr inbounds i8, i8* %231, i32 1, !dbg !3035
  call void @llvm.dbg.value(metadata i8* %232, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %232, i8** %6, align 4, !dbg !3035, !tbaa !2841
  br label %354

233:                                              ; preds = %121, %121
  %234 = ptrtoint i8* %90 to i32, !dbg !3036
  %235 = add i32 %234, 7, !dbg !3036
  %236 = and i32 %235, -8, !dbg !3036
  %237 = inttoptr i32 %236 to i8*, !dbg !3036
  %238 = getelementptr inbounds i8, i8* %237, i32 8, !dbg !3036
  call void @llvm.dbg.value(metadata i8* %238, metadata !2794, metadata !DIExpression()), !dbg !2840
  %239 = inttoptr i32 %236 to double*, !dbg !3036
  %240 = load double, double* %239, align 8, !dbg !3036
  %241 = call fastcc i32 @_ftoa(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, double noundef %240, i32 noundef %88, i32 noundef %65, i32 noundef %122), !dbg !3037
  call void @llvm.dbg.value(metadata i32 %241, metadata !2799, metadata !DIExpression()), !dbg !2840
  %242 = load i8*, i8** %6, align 4, !dbg !3038, !tbaa !2841
  call void @llvm.dbg.value(metadata i8* %242, metadata !2793, metadata !DIExpression()), !dbg !2840
  %243 = getelementptr inbounds i8, i8* %242, i32 1, !dbg !3038
  call void @llvm.dbg.value(metadata i8* %243, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %243, i8** %6, align 4, !dbg !3038, !tbaa !2841
  br label %354, !dbg !3039

244:                                              ; preds = %121
  call void @llvm.dbg.value(metadata i32 1, metadata !2832, metadata !DIExpression()), !dbg !3040
  %245 = and i32 %122, 2, !dbg !3041
  %246 = icmp eq i32 %245, 0, !dbg !3041
  br i1 %246, label %247, label %257, !dbg !3043

247:                                              ; preds = %244
  call void @llvm.dbg.value(metadata i32 1, metadata !2832, metadata !DIExpression()), !dbg !3040
  call void @llvm.dbg.value(metadata i32 %15, metadata !2799, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i32 2, metadata !2832, metadata !DIExpression()), !dbg !3040
  %248 = icmp ugt i32 %65, 1, !dbg !3044
  br i1 %248, label %249, label %257, !dbg !3046

249:                                              ; preds = %247
  %250 = add i32 %65, 1, !dbg !3046
  br label %251, !dbg !3046

251:                                              ; preds = %249, %251
  %252 = phi i32 [ %255, %251 ], [ 2, %249 ]
  %253 = phi i32 [ %254, %251 ], [ %15, %249 ]
  call void @llvm.dbg.value(metadata i32 %253, metadata !2799, metadata !DIExpression()), !dbg !2840
  %254 = add i32 %253, 1, !dbg !3047
  call void @llvm.dbg.value(metadata i32 %254, metadata !2799, metadata !DIExpression()), !dbg !2840
  call void %10(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %253, i32 noundef %2) #34, !dbg !3049, !callees !2856
  call void @llvm.dbg.value(metadata i32 %252, metadata !2832, metadata !DIExpression()), !dbg !3040
  %255 = add i32 %252, 1, !dbg !3050
  call void @llvm.dbg.value(metadata i32 %255, metadata !2832, metadata !DIExpression()), !dbg !3040
  %256 = icmp eq i32 %252, %65, !dbg !3044
  br i1 %256, label %257, label %251, !dbg !3046, !llvm.loop !3051

257:                                              ; preds = %251, %247, %244
  %258 = phi i32 [ %15, %244 ], [ %15, %247 ], [ %254, %251 ], !dbg !3053
  %259 = phi i32 [ 1, %244 ], [ 2, %247 ], [ %250, %251 ], !dbg !3040
  call void @llvm.dbg.value(metadata i32 %259, metadata !2832, metadata !DIExpression()), !dbg !3040
  call void @llvm.dbg.value(metadata i32 %258, metadata !2799, metadata !DIExpression()), !dbg !2840
  %260 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !3054
  call void @llvm.dbg.value(metadata i8* %260, metadata !2794, metadata !DIExpression()), !dbg !2840
  %261 = bitcast i8* %90 to i32*, !dbg !3054
  %262 = load i32, i32* %261, align 4, !dbg !3054
  %263 = trunc i32 %262 to i8, !dbg !3055
  %264 = add i32 %258, 1, !dbg !3056
  call void @llvm.dbg.value(metadata i32 %264, metadata !2799, metadata !DIExpression()), !dbg !2840
  call void %10(i8 noundef zeroext %263, i8* noundef %1, i32 noundef %258, i32 noundef %2) #34, !dbg !3057, !callees !2856
  %265 = xor i1 %246, true, !dbg !3058
  %266 = icmp ult i32 %259, %65
  %267 = select i1 %265, i1 %266, i1 false, !dbg !3058
  call void @llvm.dbg.value(metadata i32 %259, metadata !2832, metadata !DIExpression()), !dbg !3040
  call void @llvm.dbg.value(metadata i32 %264, metadata !2799, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i32 %259, metadata !2832, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3040
  br i1 %267, label %268, label %274, !dbg !3058

268:                                              ; preds = %257, %268
  %269 = phi i32 [ %271, %268 ], [ %259, %257 ]
  %270 = phi i32 [ %272, %268 ], [ %264, %257 ]
  call void @llvm.dbg.value(metadata i32 %269, metadata !2832, metadata !DIExpression()), !dbg !3040
  call void @llvm.dbg.value(metadata i32 %270, metadata !2799, metadata !DIExpression()), !dbg !2840
  %271 = add nuw i32 %269, 1, !dbg !3059
  call void @llvm.dbg.value(metadata i32 %271, metadata !2832, metadata !DIExpression()), !dbg !3040
  %272 = add i32 %270, 1, !dbg !3062
  call void @llvm.dbg.value(metadata i32 %272, metadata !2799, metadata !DIExpression()), !dbg !2840
  call void %10(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %270, i32 noundef %2) #34, !dbg !3064, !callees !2856
  call void @llvm.dbg.value(metadata i32 %271, metadata !2832, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3040
  %273 = icmp eq i32 %271, %65, !dbg !3065
  br i1 %273, label %274, label %268, !dbg !3066, !llvm.loop !3067

274:                                              ; preds = %268, %257
  %275 = phi i32 [ %264, %257 ], [ %272, %268 ], !dbg !3056
  call void @llvm.dbg.value(metadata i32 %275, metadata !2799, metadata !DIExpression()), !dbg !2840
  %276 = load i8*, i8** %6, align 4, !dbg !3069, !tbaa !2841
  call void @llvm.dbg.value(metadata i8* %276, metadata !2793, metadata !DIExpression()), !dbg !2840
  %277 = getelementptr inbounds i8, i8* %276, i32 1, !dbg !3069
  call void @llvm.dbg.value(metadata i8* %277, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %277, i8** %6, align 4, !dbg !3069, !tbaa !2841
  br label %354

278:                                              ; preds = %121
  %279 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !3070
  call void @llvm.dbg.value(metadata i8* %279, metadata !2794, metadata !DIExpression()), !dbg !2840
  %280 = bitcast i8* %90 to i8**, !dbg !3070
  %281 = load i8*, i8** %280, align 4, !dbg !3070
  call void @llvm.dbg.value(metadata i8* %281, metadata !2834, metadata !DIExpression()), !dbg !3071
  %282 = icmp eq i32 %88, 0, !dbg !3072
  %283 = select i1 %282, i32 -1, i32 %88, !dbg !3072
  %284 = call fastcc i32 @_strnlen_s(i8* noundef %281, i32 noundef %283), !dbg !3073
  call void @llvm.dbg.value(metadata i32 %284, metadata !2836, metadata !DIExpression()), !dbg !3071
  %285 = and i32 %122, 1024, !dbg !3074
  %286 = icmp eq i32 %285, 0, !dbg !3074
  %287 = icmp ult i32 %284, %88, !dbg !3076
  %288 = select i1 %286, i1 true, i1 %287, !dbg !3076
  %289 = select i1 %288, i32 %284, i32 %88, !dbg !3076
  call void @llvm.dbg.value(metadata i32 %289, metadata !2836, metadata !DIExpression()), !dbg !3071
  %290 = and i32 %122, 2, !dbg !3077
  %291 = icmp eq i32 %290, 0, !dbg !3077
  br i1 %291, label %292, label %303, !dbg !3079

292:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 %289, metadata !2836, metadata !DIExpression()), !dbg !3071
  call void @llvm.dbg.value(metadata i32 %15, metadata !2799, metadata !DIExpression()), !dbg !2840
  %293 = add i32 %289, 1, !dbg !3080
  call void @llvm.dbg.value(metadata i32 %293, metadata !2836, metadata !DIExpression()), !dbg !3071
  %294 = icmp ult i32 %289, %65, !dbg !3082
  br i1 %294, label %295, label %303, !dbg !3083

295:                                              ; preds = %292
  %296 = add i32 %65, 1, !dbg !3083
  br label %297, !dbg !3083

297:                                              ; preds = %295, %297
  %298 = phi i32 [ %301, %297 ], [ %293, %295 ]
  %299 = phi i32 [ %300, %297 ], [ %15, %295 ]
  call void @llvm.dbg.value(metadata i32 %299, metadata !2799, metadata !DIExpression()), !dbg !2840
  %300 = add i32 %299, 1, !dbg !3084
  call void @llvm.dbg.value(metadata i32 %300, metadata !2799, metadata !DIExpression()), !dbg !2840
  call void %10(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %299, i32 noundef %2) #34, !dbg !3086, !callees !2856
  call void @llvm.dbg.value(metadata i32 %298, metadata !2836, metadata !DIExpression()), !dbg !3071
  %301 = add i32 %298, 1, !dbg !3080
  call void @llvm.dbg.value(metadata i32 %301, metadata !2836, metadata !DIExpression()), !dbg !3071
  %302 = icmp eq i32 %298, %65, !dbg !3082
  br i1 %302, label %303, label %297, !dbg !3083, !llvm.loop !3087

303:                                              ; preds = %297, %292, %278
  %304 = phi i32 [ %15, %278 ], [ %15, %292 ], [ %300, %297 ], !dbg !3053
  %305 = phi i32 [ %289, %278 ], [ %293, %292 ], [ %296, %297 ], !dbg !3071
  call void @llvm.dbg.value(metadata i32 %305, metadata !2836, metadata !DIExpression()), !dbg !3071
  call void @llvm.dbg.value(metadata i32 %304, metadata !2799, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i8* %281, metadata !2834, metadata !DIExpression()), !dbg !3071
  call void @llvm.dbg.value(metadata i32 %88, metadata !2797, metadata !DIExpression()), !dbg !2840
  %306 = load i8, i8* %281, align 1, !dbg !3089, !tbaa !2851
  %307 = icmp eq i8 %306, 0, !dbg !3090
  br i1 %307, label %322, label %308, !dbg !3091

308:                                              ; preds = %303, %316
  %309 = phi i8 [ %320, %316 ], [ %306, %303 ]
  %310 = phi i8* [ %318, %316 ], [ %281, %303 ]
  %311 = phi i32 [ %317, %316 ], [ %88, %303 ]
  %312 = phi i32 [ %319, %316 ], [ %304, %303 ]
  call void @llvm.dbg.value(metadata i8* %310, metadata !2834, metadata !DIExpression()), !dbg !3071
  call void @llvm.dbg.value(metadata i32 %311, metadata !2797, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i32 %312, metadata !2799, metadata !DIExpression()), !dbg !2840
  br i1 %286, label %316, label %313, !dbg !3092

313:                                              ; preds = %308
  %314 = add i32 %311, -1, !dbg !3093
  call void @llvm.dbg.value(metadata i32 %314, metadata !2797, metadata !DIExpression()), !dbg !2840
  %315 = icmp eq i32 %311, 0, !dbg !3092
  br i1 %315, label %322, label %316, !dbg !3094

316:                                              ; preds = %308, %313
  %317 = phi i32 [ %314, %313 ], [ %311, %308 ], !dbg !2886
  call void @llvm.dbg.value(metadata i32 %317, metadata !2797, metadata !DIExpression()), !dbg !2840
  %318 = getelementptr inbounds i8, i8* %310, i32 1, !dbg !3095
  call void @llvm.dbg.value(metadata i8* %318, metadata !2834, metadata !DIExpression()), !dbg !3071
  %319 = add i32 %312, 1, !dbg !3097
  call void @llvm.dbg.value(metadata i32 %319, metadata !2799, metadata !DIExpression()), !dbg !2840
  call void %10(i8 noundef zeroext %309, i8* noundef %1, i32 noundef %312, i32 noundef %2) #34, !dbg !3098, !callees !2856
  %320 = load i8, i8* %318, align 1, !dbg !3089, !tbaa !2851
  %321 = icmp eq i8 %320, 0, !dbg !3090
  br i1 %321, label %322, label %308, !dbg !3091, !llvm.loop !3099

322:                                              ; preds = %313, %316, %303
  %323 = phi i32 [ %304, %303 ], [ %312, %313 ], [ %319, %316 ], !dbg !2840
  %324 = xor i1 %291, true, !dbg !3101
  %325 = icmp ult i32 %305, %65
  %326 = select i1 %324, i1 %325, i1 false, !dbg !3101
  call void @llvm.dbg.value(metadata i32 %305, metadata !2836, metadata !DIExpression()), !dbg !3071
  call void @llvm.dbg.value(metadata i32 %323, metadata !2799, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i32 %305, metadata !2836, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3071
  br i1 %326, label %327, label %333, !dbg !3101

327:                                              ; preds = %322, %327
  %328 = phi i32 [ %330, %327 ], [ %305, %322 ]
  %329 = phi i32 [ %331, %327 ], [ %323, %322 ]
  call void @llvm.dbg.value(metadata i32 %328, metadata !2836, metadata !DIExpression()), !dbg !3071
  call void @llvm.dbg.value(metadata i32 %329, metadata !2799, metadata !DIExpression()), !dbg !2840
  %330 = add nuw i32 %328, 1, !dbg !3102
  call void @llvm.dbg.value(metadata i32 %330, metadata !2836, metadata !DIExpression()), !dbg !3071
  %331 = add i32 %329, 1, !dbg !3105
  call void @llvm.dbg.value(metadata i32 %331, metadata !2799, metadata !DIExpression()), !dbg !2840
  call void %10(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %329, i32 noundef %2) #34, !dbg !3107, !callees !2856
  call void @llvm.dbg.value(metadata i32 %330, metadata !2836, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3071
  %332 = icmp eq i32 %330, %65, !dbg !3108
  br i1 %332, label %333, label %327, !dbg !3109, !llvm.loop !3110

333:                                              ; preds = %327, %322
  %334 = phi i32 [ %323, %322 ], [ %331, %327 ], !dbg !3053
  call void @llvm.dbg.value(metadata i32 %334, metadata !2799, metadata !DIExpression()), !dbg !2840
  %335 = load i8*, i8** %6, align 4, !dbg !3112, !tbaa !2841
  call void @llvm.dbg.value(metadata i8* %335, metadata !2793, metadata !DIExpression()), !dbg !2840
  %336 = getelementptr inbounds i8, i8* %335, i32 1, !dbg !3112
  call void @llvm.dbg.value(metadata i8* %336, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %336, i8** %6, align 4, !dbg !3112, !tbaa !2841
  br label %354

337:                                              ; preds = %121
  call void @llvm.dbg.value(metadata i32 8, metadata !2796, metadata !DIExpression()), !dbg !2840
  %338 = or i32 %122, 33, !dbg !3113
  call void @llvm.dbg.value(metadata i32 %338, metadata !2795, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i8 0, metadata !2837, metadata !DIExpression()), !dbg !3114
  %339 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !3115
  call void @llvm.dbg.value(metadata i8* %339, metadata !2794, metadata !DIExpression()), !dbg !2840
  %340 = bitcast i8* %90 to i8**, !dbg !3115
  %341 = load i8*, i8** %340, align 4, !dbg !3115
  %342 = ptrtoint i8* %341 to i32, !dbg !3118
  %343 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %342, i1 noundef zeroext false, i32 noundef 16, i32 noundef %88, i32 noundef 8, i32 noundef %338), !dbg !3119
  call void @llvm.dbg.value(metadata i32 %343, metadata !2799, metadata !DIExpression()), !dbg !2840
  %344 = load i8*, i8** %6, align 4, !dbg !3120, !tbaa !2841
  call void @llvm.dbg.value(metadata i8* %344, metadata !2793, metadata !DIExpression()), !dbg !2840
  %345 = getelementptr inbounds i8, i8* %344, i32 1, !dbg !3120
  call void @llvm.dbg.value(metadata i8* %345, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %345, i8** %6, align 4, !dbg !3120, !tbaa !2841
  br label %354

346:                                              ; preds = %121
  %347 = add i32 %15, 1, !dbg !3121
  call void @llvm.dbg.value(metadata i32 %347, metadata !2799, metadata !DIExpression()), !dbg !2840
  call void %10(i8 noundef zeroext 37, i8* noundef %1, i32 noundef %15, i32 noundef %2) #34, !dbg !3122, !callees !2856
  %348 = load i8*, i8** %6, align 4, !dbg !3123, !tbaa !2841
  call void @llvm.dbg.value(metadata i8* %348, metadata !2793, metadata !DIExpression()), !dbg !2840
  %349 = getelementptr inbounds i8, i8* %348, i32 1, !dbg !3123
  call void @llvm.dbg.value(metadata i8* %349, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %349, i8** %6, align 4, !dbg !3123, !tbaa !2841
  br label %354, !dbg !3124

350:                                              ; preds = %121
  %351 = add i32 %15, 1, !dbg !3125
  call void @llvm.dbg.value(metadata i32 %351, metadata !2799, metadata !DIExpression()), !dbg !2840
  call void %10(i8 noundef zeroext %124, i8* noundef %1, i32 noundef %15, i32 noundef %2) #34, !dbg !3126, !callees !2856
  %352 = load i8*, i8** %6, align 4, !dbg !3127, !tbaa !2841
  call void @llvm.dbg.value(metadata i8* %352, metadata !2793, metadata !DIExpression()), !dbg !2840
  %353 = getelementptr inbounds i8, i8* %352, i32 1, !dbg !3127
  call void @llvm.dbg.value(metadata i8* %353, metadata !2793, metadata !DIExpression()), !dbg !2840
  store i8* %353, i8** %6, align 4, !dbg !3127, !tbaa !2841
  br label %354, !dbg !3128

354:                                              ; preds = %350, %346, %337, %333, %274, %233, %228
  %355 = phi i32 [ %351, %350 ], [ %347, %346 ], [ %343, %337 ], [ %334, %333 ], [ %275, %274 ], [ %241, %233 ], [ %229, %228 ]
  %356 = phi i8* [ %90, %350 ], [ %90, %346 ], [ %339, %337 ], [ %279, %333 ], [ %260, %274 ], [ %238, %233 ], [ %230, %228 ]
  br label %11, !dbg !2848, !llvm.loop !2859

357:                                              ; preds = %14
  %358 = icmp ult i32 %15, %2, !dbg !3129
  %359 = add i32 %2, -1, !dbg !3130
  %360 = select i1 %358, i32 %15, i32 %359, !dbg !3130
  call void %10(i8 noundef zeroext 0, i8* noundef %1, i32 noundef %360, i32 noundef %2) #34, !dbg !3131, !callees !2856
  ret i32 %15, !dbg !3132
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #11

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define internal void @_out_null(i8 noundef zeroext %0, i8* nocapture noundef %1, i32 noundef %2, i32 noundef %3) #12 !dbg !3133 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3135, metadata !DIExpression()), !dbg !3139
  call void @llvm.dbg.value(metadata i8* %1, metadata !3136, metadata !DIExpression()), !dbg !3139
  call void @llvm.dbg.value(metadata i32 %2, metadata !3137, metadata !DIExpression()), !dbg !3139
  call void @llvm.dbg.value(metadata i32 %3, metadata !3138, metadata !DIExpression()), !dbg !3139
  ret void, !dbg !3140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define internal void @_out_buffer(i8 noundef zeroext %0, i8* nocapture noundef writeonly %1, i32 noundef %2, i32 noundef %3) #13 !dbg !3141 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3143, metadata !DIExpression()), !dbg !3147
  call void @llvm.dbg.value(metadata i8* %1, metadata !3144, metadata !DIExpression()), !dbg !3147
  call void @llvm.dbg.value(metadata i32 %2, metadata !3145, metadata !DIExpression()), !dbg !3147
  call void @llvm.dbg.value(metadata i32 %3, metadata !3146, metadata !DIExpression()), !dbg !3147
  %5 = icmp ult i32 %2, %3, !dbg !3148
  br i1 %5, label %6, label %8, !dbg !3150

6:                                                ; preds = %4
  %7 = getelementptr inbounds i8, i8* %1, i32 %2, !dbg !3151
  store i8 %0, i8* %7, align 1, !dbg !3153, !tbaa !2851
  br label %8, !dbg !3154

8:                                                ; preds = %6, %4
  ret void, !dbg !3155
}

; Function Attrs: noinline nounwind
define internal void @_out_fct(i8 noundef zeroext %0, i8* nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #3 !dbg !3156 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3158, metadata !DIExpression()), !dbg !3162
  call void @llvm.dbg.value(metadata i8* %1, metadata !3159, metadata !DIExpression()), !dbg !3162
  call void @llvm.dbg.value(metadata i32 %2, metadata !3160, metadata !DIExpression()), !dbg !3162
  call void @llvm.dbg.value(metadata i32 %3, metadata !3161, metadata !DIExpression()), !dbg !3162
  %5 = icmp eq i8 %0, 0, !dbg !3163
  br i1 %5, label %12, label %6, !dbg !3165

6:                                                ; preds = %4
  %7 = bitcast i8* %1 to void (i8, i8*)**, !dbg !3166
  %8 = load void (i8, i8*)*, void (i8, i8*)** %7, align 4, !dbg !3166, !tbaa !3168
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !3170
  %10 = bitcast i8* %9 to i8**, !dbg !3170
  %11 = load i8*, i8** %10, align 4, !dbg !3170, !tbaa !3171
  call void %8(i8 noundef zeroext %0, i8* noundef %11) #34, !dbg !3172
  br label %12, !dbg !3173

12:                                               ; preds = %6, %4
  ret void, !dbg !3174
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define internal fastcc zeroext i1 @_is_digit(i8 noundef zeroext %0) unnamed_addr #12 !dbg !3175 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3179, metadata !DIExpression()), !dbg !3180
  %2 = add i8 %0, -48, !dbg !3181
  %3 = icmp ult i8 %2, 10, !dbg !3181
  ret i1 %3, !dbg !3182
}

; Function Attrs: nofree noinline norecurse nosync nounwind
define internal fastcc i32 @_atoi(i8** nocapture noundef %0) unnamed_addr #14 !dbg !3183 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !3188, metadata !DIExpression()), !dbg !3190
  call void @llvm.dbg.value(metadata i32 0, metadata !3189, metadata !DIExpression()), !dbg !3190
  %2 = load i8*, i8** %0, align 4, !dbg !3191, !tbaa !2841
  %3 = load i8, i8* %2, align 1, !dbg !3192, !tbaa !2851
  %4 = call fastcc zeroext i1 @_is_digit(i8 noundef zeroext %3), !dbg !3193
  br i1 %4, label %5, label %16, !dbg !3194

5:                                                ; preds = %1, %5
  %6 = phi i8* [ %9, %5 ], [ %2, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3189, metadata !DIExpression()), !dbg !3190
  %8 = mul i32 %7, 10, !dbg !3195
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !3197
  store i8* %9, i8** %0, align 4, !dbg !3197, !tbaa !2841
  %10 = load i8, i8* %6, align 1, !dbg !3198, !tbaa !2851
  %11 = zext i8 %10 to i32, !dbg !3198
  %12 = add i32 %8, -48, !dbg !3199
  %13 = add i32 %12, %11, !dbg !3200
  call void @llvm.dbg.value(metadata i32 %13, metadata !3189, metadata !DIExpression()), !dbg !3190
  %14 = load i8, i8* %9, align 1, !dbg !3192, !tbaa !2851
  %15 = call fastcc zeroext i1 @_is_digit(i8 noundef zeroext %14), !dbg !3193
  br i1 %15, label %5, label %16, !dbg !3194, !llvm.loop !3201

16:                                               ; preds = %5, %1
  %17 = phi i32 [ 0, %1 ], [ %13, %5 ], !dbg !3190
  ret i32 %17, !dbg !3203
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.abs.i64(i64, i1 immarg) #1

; Function Attrs: noinline nounwind
define internal fastcc i32 @_ntoa_long_long(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i64 noundef %4, i1 noundef zeroext %5, i64 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %9) unnamed_addr #3 !dbg !3204 {
  %11 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !3208, metadata !DIExpression()), !dbg !3224
  call void @llvm.dbg.value(metadata i8* %1, metadata !3209, metadata !DIExpression()), !dbg !3224
  call void @llvm.dbg.value(metadata i32 %2, metadata !3210, metadata !DIExpression()), !dbg !3224
  call void @llvm.dbg.value(metadata i32 %3, metadata !3211, metadata !DIExpression()), !dbg !3224
  call void @llvm.dbg.value(metadata i64 %4, metadata !3212, metadata !DIExpression()), !dbg !3224
  call void @llvm.dbg.value(metadata i1 %5, metadata !3213, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3224
  call void @llvm.dbg.value(metadata i64 %6, metadata !3214, metadata !DIExpression()), !dbg !3224
  call void @llvm.dbg.value(metadata i32 %7, metadata !3215, metadata !DIExpression()), !dbg !3224
  call void @llvm.dbg.value(metadata i32 %8, metadata !3216, metadata !DIExpression()), !dbg !3224
  call void @llvm.dbg.value(metadata i32 %9, metadata !3217, metadata !DIExpression()), !dbg !3224
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 0, !dbg !3225
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #34, !dbg !3225
  call void @llvm.dbg.declare(metadata [32 x i8]* %11, metadata !3218, metadata !DIExpression()), !dbg !3226
  call void @llvm.dbg.value(metadata i32 0, metadata !3219, metadata !DIExpression()), !dbg !3224
  %13 = icmp ne i64 %4, 0, !dbg !3227
  %14 = and i32 %9, -17
  %15 = select i1 %13, i32 %9, i32 %14, !dbg !3229
  call void @llvm.dbg.value(metadata i32 %15, metadata !3217, metadata !DIExpression()), !dbg !3224
  %16 = and i32 %15, 1024, !dbg !3230
  %17 = icmp eq i32 %16, 0, !dbg !3230
  %18 = or i1 %13, %17, !dbg !3231
  br i1 %18, label %19, label %41, !dbg !3231

19:                                               ; preds = %10
  %20 = and i32 %15, 32
  %21 = xor i32 %20, 97
  %22 = add nuw nsw i32 %21, 246
  br label %23, !dbg !3232

23:                                               ; preds = %19, %23
  %24 = phi i32 [ %36, %23 ], [ 0, %19 ], !dbg !3224
  %25 = phi i64 [ %27, %23 ], [ %4, %19 ]
  call void @llvm.dbg.value(metadata i64 %25, metadata !3212, metadata !DIExpression()), !dbg !3224
  call void @llvm.dbg.value(metadata i32 %24, metadata !3219, metadata !DIExpression()), !dbg !3224
  %26 = freeze i64 %25
  %27 = udiv i64 %26, %6, !dbg !3233
  %28 = mul i64 %27, %6
  %29 = sub i64 %26, %28
  %30 = trunc i64 %29 to i32, !dbg !3234
  %31 = and i32 %30, 254, !dbg !3235
  call void @llvm.dbg.value(metadata i32 %30, metadata !3220, metadata !DIExpression()), !dbg !3236
  %32 = icmp ult i32 %31, 10, !dbg !3237
  %33 = select i1 %32, i32 48, i32 %22, !dbg !3235
  %34 = add i32 %33, %30, !dbg !3235
  %35 = trunc i32 %34 to i8, !dbg !3235
  %36 = add nuw nsw i32 %24, 1, !dbg !3238
  call void @llvm.dbg.value(metadata i32 %36, metadata !3219, metadata !DIExpression()), !dbg !3224
  %37 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 %24, !dbg !3239
  store i8 %35, i8* %37, align 1, !dbg !3240, !tbaa !2851
  call void @llvm.dbg.value(metadata i64 %27, metadata !3212, metadata !DIExpression()), !dbg !3224
  %38 = icmp uge i64 %25, %6, !dbg !3241
  %39 = icmp ult i32 %24, 31, !dbg !3242
  %40 = select i1 %38, i1 %39, i1 false, !dbg !3242
  br i1 %40, label %23, label %41, !dbg !3243, !llvm.loop !3244

41:                                               ; preds = %23, %10
  %42 = phi i32 [ 0, %10 ], [ %36, %23 ], !dbg !3224
  call void @llvm.dbg.value(metadata i32 %42, metadata !3219, metadata !DIExpression()), !dbg !3224
  %43 = trunc i64 %6 to i32, !dbg !3246
  %44 = call fastcc i32 @_ntoa_format(void (i8, i8*, i32, i32)* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef nonnull %12, i32 noundef %42, i1 noundef zeroext %5, i32 noundef %43, i32 noundef %7, i32 noundef %8, i32 noundef %15), !dbg !3247
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #34, !dbg !3248
  ret i32 %44, !dbg !3249
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #1

; Function Attrs: noinline nounwind
define internal fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i1 noundef zeroext %5, i32 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %9) unnamed_addr #3 !dbg !3250 {
  %11 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !3254, metadata !DIExpression()), !dbg !3270
  call void @llvm.dbg.value(metadata i8* %1, metadata !3255, metadata !DIExpression()), !dbg !3270
  call void @llvm.dbg.value(metadata i32 %2, metadata !3256, metadata !DIExpression()), !dbg !3270
  call void @llvm.dbg.value(metadata i32 %3, metadata !3257, metadata !DIExpression()), !dbg !3270
  call void @llvm.dbg.value(metadata i32 %4, metadata !3258, metadata !DIExpression()), !dbg !3270
  call void @llvm.dbg.value(metadata i1 %5, metadata !3259, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3270
  call void @llvm.dbg.value(metadata i32 %6, metadata !3260, metadata !DIExpression()), !dbg !3270
  call void @llvm.dbg.value(metadata i32 %7, metadata !3261, metadata !DIExpression()), !dbg !3270
  call void @llvm.dbg.value(metadata i32 %8, metadata !3262, metadata !DIExpression()), !dbg !3270
  call void @llvm.dbg.value(metadata i32 %9, metadata !3263, metadata !DIExpression()), !dbg !3270
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 0, !dbg !3271
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #34, !dbg !3271
  call void @llvm.dbg.declare(metadata [32 x i8]* %11, metadata !3264, metadata !DIExpression()), !dbg !3272
  call void @llvm.dbg.value(metadata i32 0, metadata !3265, metadata !DIExpression()), !dbg !3270
  %13 = icmp ne i32 %4, 0, !dbg !3273
  %14 = and i32 %9, -17
  %15 = select i1 %13, i32 %9, i32 %14, !dbg !3275
  call void @llvm.dbg.value(metadata i32 %15, metadata !3263, metadata !DIExpression()), !dbg !3270
  %16 = and i32 %15, 1024, !dbg !3276
  %17 = icmp eq i32 %16, 0, !dbg !3276
  %18 = or i1 %13, %17, !dbg !3277
  br i1 %18, label %19, label %40, !dbg !3277

19:                                               ; preds = %10
  %20 = and i32 %15, 32
  %21 = xor i32 %20, 97
  %22 = add nuw nsw i32 %21, 246
  br label %23, !dbg !3278

23:                                               ; preds = %19, %23
  %24 = phi i32 [ %35, %23 ], [ 0, %19 ], !dbg !3270
  %25 = phi i32 [ %27, %23 ], [ %4, %19 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !3258, metadata !DIExpression()), !dbg !3270
  call void @llvm.dbg.value(metadata i32 %24, metadata !3265, metadata !DIExpression()), !dbg !3270
  %26 = freeze i32 %25
  %27 = udiv i32 %26, %6, !dbg !3279
  %28 = mul i32 %27, %6
  %29 = sub i32 %26, %28
  %30 = and i32 %29, 254, !dbg !3280
  call void @llvm.dbg.value(metadata i32 %29, metadata !3266, metadata !DIExpression()), !dbg !3281
  %31 = icmp ult i32 %30, 10, !dbg !3282
  %32 = select i1 %31, i32 48, i32 %22, !dbg !3280
  %33 = add i32 %29, %32, !dbg !3280
  %34 = trunc i32 %33 to i8, !dbg !3280
  %35 = add nuw nsw i32 %24, 1, !dbg !3283
  call void @llvm.dbg.value(metadata i32 %35, metadata !3265, metadata !DIExpression()), !dbg !3270
  %36 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 %24, !dbg !3284
  store i8 %34, i8* %36, align 1, !dbg !3285, !tbaa !2851
  call void @llvm.dbg.value(metadata i32 %27, metadata !3258, metadata !DIExpression()), !dbg !3270
  %37 = icmp uge i32 %25, %6, !dbg !3286
  %38 = icmp ult i32 %24, 31, !dbg !3287
  %39 = select i1 %37, i1 %38, i1 false, !dbg !3287
  br i1 %39, label %23, label %40, !dbg !3288, !llvm.loop !3289

40:                                               ; preds = %23, %10
  %41 = phi i32 [ 0, %10 ], [ %35, %23 ], !dbg !3270
  call void @llvm.dbg.value(metadata i32 %41, metadata !3265, metadata !DIExpression()), !dbg !3270
  %42 = call fastcc i32 @_ntoa_format(void (i8, i8*, i32, i32)* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef nonnull %12, i32 noundef %41, i1 noundef zeroext %5, i32 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %15), !dbg !3291
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #34, !dbg !3292
  ret i32 %42, !dbg !3293
}

; Function Attrs: noinline nounwind
define internal fastcc i32 @_ftoa(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, double noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7) unnamed_addr #3 !dbg !462 {
  %9 = alloca [32 x i8], align 1
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 0, !dbg !3294
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !483, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata i8* %1, metadata !484, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata i32 %2, metadata !485, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata i32 %3, metadata !486, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata double %4, metadata !487, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata i32 %5, metadata !488, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata i32 %6, metadata !489, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata i32 %7, metadata !490, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata i32 %2, metadata !491, metadata !DIExpression()), !dbg !3294
  %11 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 0, !dbg !3295
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #34, !dbg !3295
  call void @llvm.dbg.declare(metadata [32 x i8]* %9, metadata !493, metadata !DIExpression()), !dbg !3296
  call void @llvm.dbg.value(metadata i32 0, metadata !497, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !498, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata double 0x41DFFFFFFFC00000, metadata !499, metadata !DIExpression()), !dbg !3294
  %12 = fcmp uno double %4, 0.000000e+00, !dbg !3297
  br i1 %12, label %13, label %17, !dbg !3299

13:                                               ; preds = %8
  %14 = add i32 %2, 1, !dbg !3300
  call void @llvm.dbg.value(metadata i32 %14, metadata !485, metadata !DIExpression()), !dbg !3294
  call void %0(i8 noundef zeroext 110, i8* noundef %1, i32 noundef %2, i32 noundef %3) #34, !dbg !3302, !callees !2856
  %15 = add i32 %2, 2, !dbg !3303
  call void @llvm.dbg.value(metadata i32 %15, metadata !485, metadata !DIExpression()), !dbg !3294
  call void %0(i8 noundef zeroext 97, i8* noundef %1, i32 noundef %14, i32 noundef %3) #34, !dbg !3304, !callees !2856
  %16 = add i32 %2, 3, !dbg !3305
  call void @llvm.dbg.value(metadata i32 %16, metadata !485, metadata !DIExpression()), !dbg !3294
  call void %0(i8 noundef zeroext 110, i8* noundef %1, i32 noundef %15, i32 noundef %3) #34, !dbg !3306, !callees !2856
  br label %221, !dbg !3307

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i8 0, metadata !501, metadata !DIExpression()), !dbg !3294
  %18 = fcmp olt double %4, 0.000000e+00, !dbg !3308
  %19 = fsub double 0.000000e+00, %4, !dbg !3310
  %20 = select i1 %18, double %19, double %4, !dbg !3310
  call void @llvm.dbg.value(metadata i8 poison, metadata !501, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata double %20, metadata !487, metadata !DIExpression()), !dbg !3294
  %21 = and i32 %7, 1024, !dbg !3311
  %22 = icmp eq i32 %21, 0, !dbg !3311
  %23 = select i1 %22, i32 6, i32 %5, !dbg !3313
  call void @llvm.dbg.value(metadata i32 %23, metadata !488, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata i32 0, metadata !497, metadata !DIExpression()), !dbg !3294
  %24 = icmp ugt i32 %23, 9, !dbg !3314
  br i1 %24, label %25, label %39, !dbg !3315

25:                                               ; preds = %17
  %26 = add i32 %23, -10, !dbg !3315
  %27 = call i32 @llvm.umin.i32(i32 %26, i32 31), !dbg !3315
  %28 = add nuw nsw i32 %27, 1, !dbg !3315
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 %10, i8 48, i32 %28, i1 false), !dbg !3316, !tbaa !2851
  %29 = call i32 @llvm.umin.i32(i32 %26, i32 31), !dbg !3315
  %30 = add nuw nsw i32 %29, 1, !dbg !3315
  br label %31, !dbg !3315

31:                                               ; preds = %25, %31
  %32 = phi i32 [ %34, %31 ], [ 0, %25 ]
  %33 = phi i32 [ %35, %31 ], [ %23, %25 ]
  call void @llvm.dbg.value(metadata i32 %32, metadata !497, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata i32 %33, metadata !488, metadata !DIExpression()), !dbg !3294
  %34 = add nuw nsw i32 %32, 1, !dbg !3318
  call void @llvm.dbg.value(metadata i32 %34, metadata !497, metadata !DIExpression()), !dbg !3294
  %35 = add i32 %33, -1, !dbg !3319
  call void @llvm.dbg.value(metadata i32 %35, metadata !488, metadata !DIExpression()), !dbg !3294
  %36 = icmp eq i32 %32, %29, !dbg !3314
  br i1 %36, label %37, label %31, !dbg !3315, !llvm.loop !3320

37:                                               ; preds = %31
  %38 = icmp ult i32 %32, 31, !dbg !3322
  br label %39, !dbg !3323

39:                                               ; preds = %37, %17
  %40 = phi i32 [ %23, %17 ], [ %35, %37 ]
  %41 = phi i32 [ 0, %17 ], [ %30, %37 ], !dbg !3294
  %42 = phi i1 [ true, %17 ], [ %38, %37 ], !dbg !3322
  %43 = fptosi double %20 to i32, !dbg !3323
  call void @llvm.dbg.value(metadata i32 %43, metadata !503, metadata !DIExpression()), !dbg !3294
  %44 = sitofp i32 %43 to double, !dbg !3324
  %45 = fsub double %20, %44, !dbg !3325
  %46 = getelementptr inbounds [10 x double], [10 x double]* @_ftoa.pow10, i32 0, i32 %40, !dbg !3326
  %47 = load double, double* %46, align 8, !dbg !3326, !tbaa !3327
  %48 = fmul double %45, %47, !dbg !3329
  call void @llvm.dbg.value(metadata double %48, metadata !504, metadata !DIExpression()), !dbg !3294
  %49 = fptoui double %48 to i32, !dbg !3330
  call void @llvm.dbg.value(metadata i32 %49, metadata !505, metadata !DIExpression()), !dbg !3294
  %50 = uitofp i32 %49 to double, !dbg !3331
  %51 = fsub double %48, %50, !dbg !3332
  call void @llvm.dbg.value(metadata double %51, metadata !498, metadata !DIExpression()), !dbg !3294
  %52 = fcmp ogt double %51, 5.000000e-01, !dbg !3333
  br i1 %52, label %53, label %59, !dbg !3335

53:                                               ; preds = %39
  %54 = add i32 %49, 1, !dbg !3336
  call void @llvm.dbg.value(metadata i32 %54, metadata !505, metadata !DIExpression()), !dbg !3294
  %55 = uitofp i32 %54 to double, !dbg !3338
  %56 = fcmp ugt double %47, %55, !dbg !3340
  br i1 %56, label %68, label %57, !dbg !3341

57:                                               ; preds = %53
  call void @llvm.dbg.value(metadata i32 0, metadata !505, metadata !DIExpression()), !dbg !3294
  %58 = add nsw i32 %43, 1, !dbg !3342
  call void @llvm.dbg.value(metadata i32 %58, metadata !503, metadata !DIExpression()), !dbg !3294
  br label %68, !dbg !3344

59:                                               ; preds = %39
  %60 = fcmp olt double %51, 5.000000e-01, !dbg !3345
  br i1 %60, label %68, label %61, !dbg !3347

61:                                               ; preds = %59
  %62 = icmp eq i32 %49, 0, !dbg !3348
  %63 = and i32 %49, 1
  %64 = icmp ne i32 %63, 0
  %65 = or i1 %62, %64, !dbg !3350
  %66 = zext i1 %65 to i32, !dbg !3350
  %67 = add i32 %66, %49, !dbg !3350
  br label %68, !dbg !3350

68:                                               ; preds = %61, %59, %53, %57
  %69 = phi i32 [ %58, %57 ], [ %43, %53 ], [ %43, %59 ], [ %43, %61 ], !dbg !3294
  %70 = phi i32 [ 0, %57 ], [ %54, %53 ], [ %49, %59 ], [ %67, %61 ], !dbg !3294
  call void @llvm.dbg.value(metadata i32 %70, metadata !505, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata i32 %69, metadata !503, metadata !DIExpression()), !dbg !3294
  %71 = fcmp ogt double %20, 0x41DFFFFFFFC00000, !dbg !3351
  br i1 %71, label %221, label %72, !dbg !3353

72:                                               ; preds = %68
  %73 = icmp eq i32 %40, 0, !dbg !3354
  br i1 %73, label %74, label %83, !dbg !3355

74:                                               ; preds = %72
  %75 = sitofp i32 %69 to double, !dbg !3356
  %76 = fsub double %20, %75, !dbg !3358
  call void @llvm.dbg.value(metadata double %76, metadata !498, metadata !DIExpression()), !dbg !3294
  %77 = fcmp uge double %76, 5.000000e-01, !dbg !3359
  %78 = and i32 %69, 1
  %79 = icmp ne i32 %78, 0
  %80 = select i1 %77, i1 %79, i1 false, !dbg !3359
  %81 = zext i1 %80 to i32, !dbg !3359
  %82 = add nsw i32 %69, %81, !dbg !3359
  br label %123, !dbg !3359

83:                                               ; preds = %72
  call void @llvm.dbg.value(metadata i32 %40, metadata !506, metadata !DIExpression()), !dbg !3361
  br i1 %42, label %84, label %100, !dbg !3362

84:                                               ; preds = %83, %84
  %85 = phi i32 [ %95, %84 ], [ %41, %83 ], !dbg !3294
  %86 = phi i32 [ %90, %84 ], [ %70, %83 ], !dbg !3294
  %87 = phi i32 [ %88, %84 ], [ %40, %83 ], !dbg !3361
  call void @llvm.dbg.value(metadata i32 %87, metadata !506, metadata !DIExpression()), !dbg !3361
  call void @llvm.dbg.value(metadata i32 %86, metadata !505, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata i32 %85, metadata !497, metadata !DIExpression()), !dbg !3294
  %88 = add i32 %87, -1, !dbg !3363
  call void @llvm.dbg.value(metadata i32 %88, metadata !506, metadata !DIExpression()), !dbg !3361
  %89 = freeze i32 %86
  %90 = udiv i32 %89, 10, !dbg !3365
  %91 = mul i32 %90, 10
  %92 = sub i32 %89, %91
  %93 = trunc i32 %92 to i8, !dbg !3367
  %94 = or i8 %93, 48, !dbg !3367
  %95 = add nuw nsw i32 %85, 1, !dbg !3368
  call void @llvm.dbg.value(metadata i32 %95, metadata !497, metadata !DIExpression()), !dbg !3294
  %96 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %85, !dbg !3369
  store i8 %94, i8* %96, align 1, !dbg !3370, !tbaa !2851
  call void @llvm.dbg.value(metadata i32 %90, metadata !505, metadata !DIExpression()), !dbg !3294
  %97 = icmp ugt i32 %86, 9, !dbg !3365
  %98 = icmp ult i32 %85, 31
  %99 = select i1 %97, i1 %98, i1 false, !dbg !3371
  br i1 %99, label %84, label %100, !dbg !3371, !llvm.loop !3372

100:                                              ; preds = %84, %83
  %101 = phi i32 [ %41, %83 ], [ %95, %84 ], !dbg !3294
  %102 = phi i32 [ %40, %83 ], [ %88, %84 ], !dbg !3361
  call void @llvm.dbg.value(metadata i32 %102, metadata !506, metadata !DIExpression()), !dbg !3361
  call void @llvm.dbg.value(metadata i32 %101, metadata !497, metadata !DIExpression()), !dbg !3294
  %103 = icmp ult i32 %101, 32, !dbg !3374
  %104 = xor i1 %103, true, !dbg !3375
  %105 = icmp eq i32 %102, 0
  %106 = select i1 %104, i1 true, i1 %105, !dbg !3375
  call void @llvm.dbg.value(metadata i32 %102, metadata !506, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3361
  br i1 %106, label %117, label %107, !dbg !3375

107:                                              ; preds = %100, %107
  %108 = phi i32 [ %110, %107 ], [ %102, %100 ]
  %109 = phi i32 [ %111, %107 ], [ %101, %100 ]
  call void @llvm.dbg.value(metadata i32 %108, metadata !506, metadata !DIExpression()), !dbg !3361
  call void @llvm.dbg.value(metadata i32 %109, metadata !497, metadata !DIExpression()), !dbg !3294
  %110 = add i32 %108, -1, !dbg !3376
  call void @llvm.dbg.value(metadata i32 %110, metadata !506, metadata !DIExpression()), !dbg !3361
  %111 = add i32 %109, 1, !dbg !3377
  call void @llvm.dbg.value(metadata i32 %111, metadata !497, metadata !DIExpression()), !dbg !3294
  %112 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %109, !dbg !3379
  store i8 48, i8* %112, align 1, !dbg !3380, !tbaa !2851
  %113 = icmp ult i32 %111, 32, !dbg !3374
  %114 = xor i1 %113, true, !dbg !3375
  %115 = icmp eq i32 %110, 0
  %116 = select i1 %114, i1 true, i1 %115, !dbg !3375
  call void @llvm.dbg.value(metadata i32 %110, metadata !506, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3361
  br i1 %116, label %117, label %107, !dbg !3375, !llvm.loop !3381

117:                                              ; preds = %107, %100
  %118 = phi i32 [ %101, %100 ], [ %111, %107 ], !dbg !3361
  %119 = phi i1 [ %103, %100 ], [ %113, %107 ], !dbg !3374
  br i1 %119, label %120, label %123, !dbg !3384

120:                                              ; preds = %117
  %121 = add i32 %118, 1, !dbg !3385
  call void @llvm.dbg.value(metadata i32 %121, metadata !497, metadata !DIExpression()), !dbg !3294
  %122 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %118, !dbg !3388
  store i8 46, i8* %122, align 1, !dbg !3389, !tbaa !2851
  br label %123, !dbg !3390

123:                                              ; preds = %74, %117, %120
  %124 = phi i32 [ %121, %120 ], [ %118, %117 ], [ %41, %74 ], !dbg !3294
  %125 = phi i32 [ %69, %120 ], [ %69, %117 ], [ %82, %74 ], !dbg !3294
  call void @llvm.dbg.value(metadata i32 %125, metadata !503, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata i32 %124, metadata !497, metadata !DIExpression()), !dbg !3294
  %126 = icmp ult i32 %124, 32, !dbg !3391
  br i1 %126, label %127, label %142, !dbg !3392

127:                                              ; preds = %123, %127
  %128 = phi i32 [ %136, %127 ], [ %124, %123 ], !dbg !3294
  %129 = phi i32 [ %131, %127 ], [ %125, %123 ], !dbg !3294
  call void @llvm.dbg.value(metadata i32 %129, metadata !503, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata i32 %128, metadata !497, metadata !DIExpression()), !dbg !3294
  %130 = freeze i32 %129
  %131 = sdiv i32 %130, 10, !dbg !3393
  %132 = mul i32 %131, 10
  %133 = sub i32 %130, %132
  %134 = trunc i32 %133 to i8, !dbg !3396
  %135 = add i8 %134, 48, !dbg !3396
  %136 = add nuw nsw i32 %128, 1, !dbg !3397
  call void @llvm.dbg.value(metadata i32 %136, metadata !497, metadata !DIExpression()), !dbg !3294
  %137 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %128, !dbg !3398
  store i8 %135, i8* %137, align 1, !dbg !3399, !tbaa !2851
  call void @llvm.dbg.value(metadata i32 %131, metadata !503, metadata !DIExpression()), !dbg !3294
  %138 = add i32 %129, -10, !dbg !3393
  %139 = icmp ult i32 %138, -19, !dbg !3393
  %140 = icmp ult i32 %128, 31
  %141 = select i1 %139, i1 %140, i1 false, !dbg !3400
  br i1 %141, label %127, label %142, !dbg !3400, !llvm.loop !3401

142:                                              ; preds = %127, %123
  %143 = phi i32 [ %124, %123 ], [ %136, %127 ], !dbg !3294
  call void @llvm.dbg.value(metadata i32 %143, metadata !497, metadata !DIExpression()), !dbg !3294
  %144 = and i32 %7, 2, !dbg !3403
  %145 = icmp ne i32 %144, 0, !dbg !3403
  %146 = and i32 %7, 3, !dbg !3405
  %147 = icmp eq i32 %146, 1, !dbg !3405
  br i1 %147, label %148, label %171, !dbg !3405

148:                                              ; preds = %142
  %149 = icmp eq i32 %6, 0, !dbg !3406
  br i1 %149, label %156, label %150, !dbg !3409

150:                                              ; preds = %148
  %151 = and i32 %7, 12
  %152 = icmp ne i32 %151, 0
  %153 = or i1 %18, %152, !dbg !3410
  %154 = sext i1 %153 to i32, !dbg !3410
  %155 = add i32 %154, %6, !dbg !3410
  br label %156, !dbg !3410

156:                                              ; preds = %150, %148
  %157 = phi i32 [ 0, %148 ], [ %155, %150 ]
  call void @llvm.dbg.value(metadata i32 %157, metadata !489, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata i32 %143, metadata !497, metadata !DIExpression()), !dbg !3294
  %158 = icmp ult i32 %143, %157, !dbg !3411
  %159 = icmp ult i32 %143, 32, !dbg !3412
  %160 = and i1 %158, %159, !dbg !3412
  br i1 %160, label %161, label %171, !dbg !3413

161:                                              ; preds = %156
  %162 = getelementptr [32 x i8], [32 x i8]* %9, i32 0, i32 %143, !dbg !3413
  %163 = xor i32 %143, -1, !dbg !3413
  %164 = add i32 %157, %163, !dbg !3413
  %165 = sub i32 31, %143, !dbg !3413
  %166 = call i32 @llvm.umin.i32(i32 %164, i32 %165), !dbg !3413
  %167 = add nuw i32 %166, 1, !dbg !3413
  call void @llvm.memset.p0i8.i32(i8* align 1 %162, i8 48, i32 %167, i1 false), !dbg !3414, !tbaa !2851
  %168 = call i32 @llvm.umin.i32(i32 %164, i32 %165), !dbg !3413
  %169 = add i32 %143, %168, !dbg !3413
  call void @llvm.dbg.value(metadata i32 undef, metadata !497, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata i32 undef, metadata !497, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3294
  %170 = add i32 %169, 1, !dbg !3413
  br label %171, !dbg !3416

171:                                              ; preds = %161, %156, %142
  %172 = phi i32 [ %6, %142 ], [ %157, %156 ], [ %157, %161 ]
  %173 = phi i32 [ %143, %142 ], [ %143, %156 ], [ %170, %161 ], !dbg !3397
  call void @llvm.dbg.value(metadata i32 %173, metadata !497, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata i32 %172, metadata !489, metadata !DIExpression()), !dbg !3294
  %174 = icmp ult i32 %173, 32, !dbg !3416
  br i1 %174, label %175, label %186, !dbg !3418

175:                                              ; preds = %171
  br i1 %18, label %182, label %176, !dbg !3419

176:                                              ; preds = %175
  %177 = and i32 %7, 4, !dbg !3421
  %178 = icmp eq i32 %177, 0, !dbg !3421
  br i1 %178, label %179, label %182, !dbg !3424

179:                                              ; preds = %176
  %180 = and i32 %7, 8, !dbg !3425
  %181 = icmp eq i32 %180, 0, !dbg !3425
  br i1 %181, label %186, label %182, !dbg !3427

182:                                              ; preds = %179, %176, %175
  %183 = phi i8 [ 45, %175 ], [ 43, %176 ], [ 32, %179 ]
  %184 = add i32 %173, 1, !dbg !3428
  %185 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %173, !dbg !3428
  store i8 %183, i8* %185, align 1, !dbg !3428, !tbaa !2851
  br label %186, !dbg !3429

186:                                              ; preds = %182, %179, %171
  %187 = phi i32 [ %173, %179 ], [ %173, %171 ], [ %184, %182 ], !dbg !3294
  call void @llvm.dbg.value(metadata i32 %187, metadata !497, metadata !DIExpression()), !dbg !3294
  %188 = and i32 %7, 3, !dbg !3429
  %189 = icmp eq i32 %188, 0, !dbg !3429
  %190 = icmp ult i32 %187, %172
  %191 = select i1 %189, i1 %190, i1 false, !dbg !3429
  call void @llvm.dbg.value(metadata i32 %187, metadata !509, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i32 %2, metadata !485, metadata !DIExpression()), !dbg !3294
  br i1 %191, label %192, label %198, !dbg !3429

192:                                              ; preds = %186, %192
  %193 = phi i32 [ %196, %192 ], [ %187, %186 ]
  %194 = phi i32 [ %195, %192 ], [ %2, %186 ]
  call void @llvm.dbg.value(metadata i32 %193, metadata !509, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i32 %194, metadata !485, metadata !DIExpression()), !dbg !3294
  %195 = add i32 %194, 1, !dbg !3431
  call void @llvm.dbg.value(metadata i32 %195, metadata !485, metadata !DIExpression()), !dbg !3294
  call void %0(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %194, i32 noundef %3) #34, !dbg !3434, !callees !2856
  %196 = add nuw i32 %193, 1, !dbg !3435
  call void @llvm.dbg.value(metadata i32 %196, metadata !509, metadata !DIExpression()), !dbg !3430
  %197 = icmp eq i32 %196, %172, !dbg !3436
  br i1 %197, label %198, label %192, !dbg !3437, !llvm.loop !3438

198:                                              ; preds = %192, %186
  %199 = phi i32 [ %2, %186 ], [ %195, %192 ]
  call void @llvm.dbg.value(metadata i32 %199, metadata !485, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata i32 0, metadata !513, metadata !DIExpression()), !dbg !3440
  %200 = icmp eq i32 %187, 0, !dbg !3441
  br i1 %200, label %201, label %206, !dbg !3443

201:                                              ; preds = %206, %198
  %202 = phi i32 [ %199, %198 ], [ %213, %206 ]
  %203 = sub i32 %202, %2
  %204 = icmp ult i32 %203, %172
  %205 = select i1 %145, i1 %204, i1 false, !dbg !3444
  call void @llvm.dbg.value(metadata i32 %202, metadata !485, metadata !DIExpression()), !dbg !3294
  br i1 %205, label %216, label %221, !dbg !3444

206:                                              ; preds = %198, %206
  %207 = phi i32 [ %214, %206 ], [ 0, %198 ]
  %208 = phi i32 [ %213, %206 ], [ %199, %198 ]
  call void @llvm.dbg.value(metadata i32 %207, metadata !513, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %208, metadata !485, metadata !DIExpression()), !dbg !3294
  %209 = xor i32 %207, -1, !dbg !3445
  %210 = add i32 %187, %209, !dbg !3445
  %211 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %210, !dbg !3447
  %212 = load i8, i8* %211, align 1, !dbg !3447, !tbaa !2851
  %213 = add i32 %208, 1, !dbg !3448
  call void @llvm.dbg.value(metadata i32 %213, metadata !485, metadata !DIExpression()), !dbg !3294
  call void %0(i8 noundef zeroext %212, i8* noundef %1, i32 noundef %208, i32 noundef %3) #34, !dbg !3449, !callees !2856
  %214 = add nuw i32 %207, 1, !dbg !3450
  call void @llvm.dbg.value(metadata i32 %214, metadata !513, metadata !DIExpression()), !dbg !3440
  %215 = icmp eq i32 %214, %187, !dbg !3441
  br i1 %215, label %201, label %206, !dbg !3443, !llvm.loop !3451

216:                                              ; preds = %201, %216
  %217 = phi i32 [ %218, %216 ], [ %202, %201 ]
  call void @llvm.dbg.value(metadata i32 %217, metadata !485, metadata !DIExpression()), !dbg !3294
  %218 = add i32 %217, 1, !dbg !3453
  call void @llvm.dbg.value(metadata i32 %218, metadata !485, metadata !DIExpression()), !dbg !3294
  call void %0(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %217, i32 noundef %3) #34, !dbg !3457, !callees !2856
  %219 = sub i32 %218, %2, !dbg !3458
  %220 = icmp ult i32 %219, %172, !dbg !3459
  br i1 %220, label %216, label %221, !dbg !3460, !llvm.loop !3461

221:                                              ; preds = %216, %68, %201, %13
  %222 = phi i32 [ %16, %13 ], [ 0, %68 ], [ %202, %201 ], [ %218, %216 ], !dbg !3294
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #34, !dbg !3463
  ret i32 %222, !dbg !3463
}

; Function Attrs: nofree noinline norecurse nosync nounwind readonly
define internal fastcc i32 @_strnlen_s(i8* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !3464 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3468, metadata !DIExpression()), !dbg !3471
  call void @llvm.dbg.value(metadata i32 %1, metadata !3469, metadata !DIExpression()), !dbg !3471
  call void @llvm.dbg.value(metadata i8* %0, metadata !3470, metadata !DIExpression()), !dbg !3471
  %3 = load i8, i8* %0, align 1, !dbg !3472, !tbaa !2851
  %4 = icmp eq i8 %3, 0, !dbg !3472
  %5 = icmp eq i32 %1, 0, !dbg !3475
  %6 = or i1 %4, %5, !dbg !3475
  call void @llvm.dbg.value(metadata i32 %1, metadata !3469, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3471
  br i1 %6, label %16, label %7, !dbg !3475

7:                                                ; preds = %2, %7
  %8 = phi i8* [ %11, %7 ], [ %0, %2 ]
  %9 = phi i32 [ %10, %7 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %8, metadata !3470, metadata !DIExpression()), !dbg !3471
  call void @llvm.dbg.value(metadata i32 %9, metadata !3469, metadata !DIExpression()), !dbg !3471
  %10 = add i32 %9, -1, !dbg !3476
  call void @llvm.dbg.value(metadata i32 %10, metadata !3469, metadata !DIExpression()), !dbg !3471
  %11 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !3477
  call void @llvm.dbg.value(metadata i8* %11, metadata !3470, metadata !DIExpression()), !dbg !3471
  %12 = load i8, i8* %11, align 1, !dbg !3472, !tbaa !2851
  %13 = icmp eq i8 %12, 0, !dbg !3472
  %14 = icmp eq i32 %10, 0, !dbg !3475
  %15 = select i1 %13, i1 true, i1 %14, !dbg !3475
  call void @llvm.dbg.value(metadata i32 %10, metadata !3469, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3471
  br i1 %15, label %16, label %7, !dbg !3475, !llvm.loop !3478

16:                                               ; preds = %7, %2
  %17 = phi i8* [ %0, %2 ], [ %11, %7 ], !dbg !3481
  %18 = ptrtoint i8* %17 to i32, !dbg !3482
  %19 = ptrtoint i8* %0 to i32, !dbg !3482
  %20 = sub i32 %18, %19, !dbg !3482
  ret i32 %20, !dbg !3483
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #1

; Function Attrs: noinline nounwind
define internal fastcc i32 @_ntoa_format(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* nocapture noundef %4, i32 noundef %5, i1 noundef zeroext %6, i32 noundef %7, i32 noundef %8, i32 noundef %9, i32 noundef %10) unnamed_addr #3 !dbg !3484 {
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !3488, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.value(metadata i8* %1, metadata !3489, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.value(metadata i32 %2, metadata !3490, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.value(metadata i32 %3, metadata !3491, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.value(metadata i8* %4, metadata !3492, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.value(metadata i32 %5, metadata !3493, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.value(metadata i1 %6, metadata !3494, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3506
  call void @llvm.dbg.value(metadata i32 %7, metadata !3495, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.value(metadata i32 %8, metadata !3496, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.value(metadata i32 %9, metadata !3497, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.value(metadata i32 %10, metadata !3498, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.value(metadata i32 %2, metadata !3499, metadata !DIExpression()), !dbg !3506
  %12 = and i32 %10, 2, !dbg !3507
  %13 = icmp eq i32 %12, 0, !dbg !3507
  br i1 %13, label %14, label %55, !dbg !3509

14:                                               ; preds = %11
  %15 = icmp eq i32 %9, 0, !dbg !3510
  br i1 %15, label %25, label %16, !dbg !3513

16:                                               ; preds = %14
  %17 = and i32 %10, 1, !dbg !3514
  %18 = icmp eq i32 %17, 0, !dbg !3514
  br i1 %18, label %25, label %19, !dbg !3515

19:                                               ; preds = %16
  %20 = and i32 %10, 12
  %21 = icmp ne i32 %20, 0
  %22 = or i1 %21, %6, !dbg !3516
  %23 = sext i1 %22 to i32, !dbg !3516
  %24 = add i32 %23, %9, !dbg !3516
  br label %25, !dbg !3516

25:                                               ; preds = %19, %16, %14
  %26 = phi i32 [ %9, %16 ], [ 0, %14 ], [ %24, %19 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !3497, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.value(metadata i32 %5, metadata !3493, metadata !DIExpression()), !dbg !3506
  %27 = icmp ult i32 %5, %8, !dbg !3517
  %28 = icmp ult i32 %5, 32, !dbg !3518
  %29 = and i1 %27, %28, !dbg !3518
  br i1 %29, label %30, label %40, !dbg !3519

30:                                               ; preds = %25
  %31 = getelementptr i8, i8* %4, i32 %5, !dbg !3519
  %32 = xor i32 %5, -1, !dbg !3519
  %33 = add i32 %32, %8, !dbg !3519
  %34 = sub i32 31, %5, !dbg !3519
  %35 = call i32 @llvm.umin.i32(i32 %33, i32 %34), !dbg !3519
  %36 = add nuw i32 %35, 1, !dbg !3519
  call void @llvm.memset.p0i8.i32(i8* align 1 %31, i8 48, i32 %36, i1 false), !dbg !3520, !tbaa !2851
  %37 = call i32 @llvm.umin.i32(i32 %33, i32 %34), !dbg !3519
  %38 = add i32 %37, %5, !dbg !3519
  call void @llvm.dbg.value(metadata i32 undef, metadata !3493, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.value(metadata i32 undef, metadata !3493, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3506
  %39 = add i32 %38, 1, !dbg !3519
  br label %40

40:                                               ; preds = %30, %25
  %41 = phi i32 [ %5, %25 ], [ %39, %30 ]
  %42 = and i32 %10, 1
  %43 = icmp eq i32 %42, 0
  call void @llvm.dbg.value(metadata i32 %41, metadata !3493, metadata !DIExpression()), !dbg !3506
  br i1 %43, label %55, label %44, !dbg !3522

44:                                               ; preds = %40
  call void @llvm.dbg.value(metadata i32 %41, metadata !3493, metadata !DIExpression()), !dbg !3506
  %45 = icmp ult i32 %41, %26, !dbg !3523
  %46 = icmp ult i32 %41, 32
  %47 = and i1 %45, %46, !dbg !3524
  br i1 %47, label %48, label %55, !dbg !3524

48:                                               ; preds = %44, %48
  %49 = phi i32 [ %50, %48 ], [ %41, %44 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !3493, metadata !DIExpression()), !dbg !3506
  %50 = add i32 %49, 1, !dbg !3525
  call void @llvm.dbg.value(metadata i32 %50, metadata !3493, metadata !DIExpression()), !dbg !3506
  %51 = getelementptr inbounds i8, i8* %4, i32 %49, !dbg !3527
  store i8 48, i8* %51, align 1, !dbg !3528, !tbaa !2851
  %52 = icmp ult i32 %50, %26, !dbg !3523
  %53 = icmp ult i32 %50, 32
  %54 = and i1 %52, %53, !dbg !3524
  br i1 %54, label %48, label %55, !dbg !3524, !llvm.loop !3529

55:                                               ; preds = %48, %44, %40, %11
  %56 = phi i32 [ %9, %11 ], [ %26, %40 ], [ %26, %44 ], [ %26, %48 ]
  %57 = phi i32 [ %5, %11 ], [ %41, %40 ], [ %41, %44 ], [ %50, %48 ]
  call void @llvm.dbg.value(metadata i32 %57, metadata !3493, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.value(metadata i32 %56, metadata !3497, metadata !DIExpression()), !dbg !3506
  %58 = and i32 %10, 16, !dbg !3532
  %59 = icmp eq i32 %58, 0, !dbg !3532
  br i1 %59, label %101, label %60, !dbg !3534

60:                                               ; preds = %55
  %61 = and i32 %10, 1024, !dbg !3535
  %62 = icmp eq i32 %61, 0, !dbg !3535
  %63 = icmp ne i32 %57, 0
  %64 = select i1 %62, i1 %63, i1 false, !dbg !3538
  br i1 %64, label %65, label %76, !dbg !3538

65:                                               ; preds = %60
  %66 = icmp eq i32 %57, %8, !dbg !3539
  %67 = icmp eq i32 %57, %56
  %68 = or i1 %66, %67, !dbg !3540
  br i1 %68, label %69, label %76, !dbg !3540

69:                                               ; preds = %65
  %70 = add i32 %57, -1, !dbg !3541
  call void @llvm.dbg.value(metadata i32 %70, metadata !3493, metadata !DIExpression()), !dbg !3506
  %71 = icmp ne i32 %70, 0, !dbg !3543
  %72 = icmp eq i32 %7, 16
  %73 = and i1 %72, %71, !dbg !3545
  %74 = add i32 %57, -2
  %75 = select i1 %73, i32 %74, i32 %70, !dbg !3545
  br label %76, !dbg !3545

76:                                               ; preds = %69, %65, %60
  %77 = phi i32 [ %57, %60 ], [ %57, %65 ], [ %75, %69 ]
  call void @llvm.dbg.value(metadata i32 %77, metadata !3493, metadata !DIExpression()), !dbg !3506
  %78 = icmp eq i32 %7, 16, !dbg !3546
  br i1 %78, label %79, label %87, !dbg !3548

79:                                               ; preds = %76
  %80 = and i32 %10, 32, !dbg !3549
  %81 = icmp eq i32 %80, 0, !dbg !3549
  %82 = icmp ult i32 %77, 32
  %83 = select i1 %81, i1 %82, i1 false, !dbg !3550
  br i1 %83, label %91, label %84, !dbg !3550

84:                                               ; preds = %79
  %85 = icmp ne i32 %80, 0, !dbg !3551
  %86 = select i1 %85, i1 %82, i1 false, !dbg !3553
  br i1 %86, label %91, label %87, !dbg !3553

87:                                               ; preds = %76, %84
  %88 = icmp eq i32 %7, 2, !dbg !3554
  %89 = icmp ult i32 %77, 32
  %90 = select i1 %88, i1 %89, i1 false, !dbg !3556
  br i1 %90, label %91, label %95, !dbg !3556

91:                                               ; preds = %87, %84, %79
  %92 = phi i8 [ 120, %79 ], [ 88, %84 ], [ 98, %87 ]
  %93 = add i32 %77, 1, !dbg !3557
  %94 = getelementptr inbounds i8, i8* %4, i32 %77, !dbg !3557
  store i8 %92, i8* %94, align 1, !dbg !3557, !tbaa !2851
  br label %95, !dbg !3558

95:                                               ; preds = %91, %87
  %96 = phi i32 [ %77, %87 ], [ %93, %91 ], !dbg !3560
  call void @llvm.dbg.value(metadata i32 %96, metadata !3493, metadata !DIExpression()), !dbg !3506
  %97 = icmp ult i32 %96, 32, !dbg !3558
  br i1 %97, label %98, label %101, !dbg !3561

98:                                               ; preds = %95
  %99 = add i32 %96, 1, !dbg !3562
  call void @llvm.dbg.value(metadata i32 %99, metadata !3493, metadata !DIExpression()), !dbg !3506
  %100 = getelementptr inbounds i8, i8* %4, i32 %96, !dbg !3564
  store i8 48, i8* %100, align 1, !dbg !3565, !tbaa !2851
  br label %101, !dbg !3566

101:                                              ; preds = %95, %98, %55
  %102 = phi i32 [ %99, %98 ], [ %96, %95 ], [ %57, %55 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !3493, metadata !DIExpression()), !dbg !3506
  %103 = icmp ult i32 %102, 32, !dbg !3567
  br i1 %103, label %104, label %115, !dbg !3569

104:                                              ; preds = %101
  br i1 %6, label %111, label %105, !dbg !3570

105:                                              ; preds = %104
  %106 = and i32 %10, 4, !dbg !3572
  %107 = icmp eq i32 %106, 0, !dbg !3572
  br i1 %107, label %108, label %111, !dbg !3575

108:                                              ; preds = %105
  %109 = and i32 %10, 8, !dbg !3576
  %110 = icmp eq i32 %109, 0, !dbg !3576
  br i1 %110, label %115, label %111, !dbg !3578

111:                                              ; preds = %108, %105, %104
  %112 = phi i8 [ 45, %104 ], [ 43, %105 ], [ 32, %108 ]
  %113 = add i32 %102, 1, !dbg !3579
  %114 = getelementptr inbounds i8, i8* %4, i32 %102, !dbg !3579
  store i8 %112, i8* %114, align 1, !dbg !3579, !tbaa !2851
  br label %115, !dbg !3580

115:                                              ; preds = %111, %108, %101
  %116 = phi i32 [ %102, %108 ], [ %102, %101 ], [ %113, %111 ], !dbg !3506
  call void @llvm.dbg.value(metadata i32 %116, metadata !3493, metadata !DIExpression()), !dbg !3506
  %117 = and i32 %10, 3, !dbg !3580
  %118 = icmp eq i32 %117, 0, !dbg !3580
  %119 = icmp ult i32 %116, %56
  %120 = select i1 %118, i1 %119, i1 false, !dbg !3580
  call void @llvm.dbg.value(metadata i32 %116, metadata !3500, metadata !DIExpression()), !dbg !3581
  call void @llvm.dbg.value(metadata i32 %2, metadata !3490, metadata !DIExpression()), !dbg !3506
  br i1 %120, label %121, label %127, !dbg !3580

121:                                              ; preds = %115, %121
  %122 = phi i32 [ %125, %121 ], [ %116, %115 ]
  %123 = phi i32 [ %124, %121 ], [ %2, %115 ]
  call void @llvm.dbg.value(metadata i32 %122, metadata !3500, metadata !DIExpression()), !dbg !3581
  call void @llvm.dbg.value(metadata i32 %123, metadata !3490, metadata !DIExpression()), !dbg !3506
  %124 = add i32 %123, 1, !dbg !3582
  call void @llvm.dbg.value(metadata i32 %124, metadata !3490, metadata !DIExpression()), !dbg !3506
  call void %0(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %123, i32 noundef %3) #34, !dbg !3585, !callees !2856
  %125 = add nuw i32 %122, 1, !dbg !3586
  call void @llvm.dbg.value(metadata i32 %125, metadata !3500, metadata !DIExpression()), !dbg !3581
  %126 = icmp eq i32 %125, %56, !dbg !3587
  br i1 %126, label %127, label %121, !dbg !3588, !llvm.loop !3589

127:                                              ; preds = %121, %115
  %128 = phi i32 [ %2, %115 ], [ %124, %121 ]
  call void @llvm.dbg.value(metadata i32 %128, metadata !3490, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.value(metadata i32 0, metadata !3504, metadata !DIExpression()), !dbg !3591
  %129 = icmp eq i32 %116, 0, !dbg !3592
  br i1 %129, label %130, label %136, !dbg !3594

130:                                              ; preds = %136, %127
  %131 = phi i32 [ %128, %127 ], [ %143, %136 ]
  %132 = xor i1 %13, true, !dbg !3595
  %133 = sub i32 %131, %2
  %134 = icmp ult i32 %133, %56
  %135 = select i1 %132, i1 %134, i1 false, !dbg !3595
  call void @llvm.dbg.value(metadata i32 %131, metadata !3490, metadata !DIExpression()), !dbg !3506
  br i1 %135, label %146, label %151, !dbg !3595

136:                                              ; preds = %127, %136
  %137 = phi i32 [ %144, %136 ], [ 0, %127 ]
  %138 = phi i32 [ %143, %136 ], [ %128, %127 ]
  call void @llvm.dbg.value(metadata i32 %137, metadata !3504, metadata !DIExpression()), !dbg !3591
  call void @llvm.dbg.value(metadata i32 %138, metadata !3490, metadata !DIExpression()), !dbg !3506
  %139 = xor i32 %137, -1, !dbg !3596
  %140 = add i32 %116, %139, !dbg !3596
  %141 = getelementptr inbounds i8, i8* %4, i32 %140, !dbg !3598
  %142 = load i8, i8* %141, align 1, !dbg !3598, !tbaa !2851
  %143 = add i32 %138, 1, !dbg !3599
  call void @llvm.dbg.value(metadata i32 %143, metadata !3490, metadata !DIExpression()), !dbg !3506
  call void %0(i8 noundef zeroext %142, i8* noundef %1, i32 noundef %138, i32 noundef %3) #34, !dbg !3600, !callees !2856
  %144 = add nuw i32 %137, 1, !dbg !3601
  call void @llvm.dbg.value(metadata i32 %144, metadata !3504, metadata !DIExpression()), !dbg !3591
  %145 = icmp eq i32 %144, %116, !dbg !3592
  br i1 %145, label %130, label %136, !dbg !3594, !llvm.loop !3602

146:                                              ; preds = %130, %146
  %147 = phi i32 [ %148, %146 ], [ %131, %130 ]
  call void @llvm.dbg.value(metadata i32 %147, metadata !3490, metadata !DIExpression()), !dbg !3506
  %148 = add i32 %147, 1, !dbg !3604
  call void @llvm.dbg.value(metadata i32 %148, metadata !3490, metadata !DIExpression()), !dbg !3506
  call void %0(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %147, i32 noundef %3) #34, !dbg !3608, !callees !2856
  %149 = sub i32 %148, %2, !dbg !3609
  %150 = icmp ult i32 %149, %56, !dbg !3610
  br i1 %150, label %146, label %151, !dbg !3611, !llvm.loop !3612

151:                                              ; preds = %146, %130
  %152 = phi i32 [ %131, %130 ], [ %148, %146 ]
  call void @llvm.dbg.value(metadata i32 %152, metadata !3490, metadata !DIExpression()), !dbg !3506
  ret i32 %152, !dbg !3614
}

; Function Attrs: noinline nounwind
define dso_local i32 @sprintf_(i8* noundef %0, i8* noundef %1, ...) local_unnamed_addr #3 !dbg !3615 {
  %3 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3617, metadata !DIExpression()), !dbg !3621
  call void @llvm.dbg.value(metadata i8* %1, metadata !3618, metadata !DIExpression()), !dbg !3621
  %4 = bitcast %struct.__va_list* %3 to i8*, !dbg !3622
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #34, !dbg !3622
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !3619, metadata !DIExpression()), !dbg !3623
  call void @llvm.va_start(i8* nonnull %4), !dbg !3624
  %5 = bitcast %struct.__va_list* %3 to i32*, !dbg !3625
  %6 = load i32, i32* %5, align 4, !dbg !3625
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3625
  %8 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_buffer, i8* noundef %0, i32 noundef -1, i8* noundef %1, [1 x i32] %7), !dbg !3625
  call void @llvm.dbg.value(metadata i32 %8, metadata !3620, metadata !DIExpression()), !dbg !3621
  call void @llvm.va_end(i8* %4), !dbg !3626
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #34, !dbg !3627
  ret i32 %8, !dbg !3628
}

; Function Attrs: noinline nounwind
define dso_local i32 @snprintf_(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #3 !dbg !3629 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3631, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i32 %1, metadata !3632, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i8* %2, metadata !3633, metadata !DIExpression()), !dbg !3636
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3637
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #34, !dbg !3637
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3634, metadata !DIExpression()), !dbg !3638
  call void @llvm.va_start(i8* nonnull %5), !dbg !3639
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3640
  %7 = load i32, i32* %6, align 4, !dbg !3640
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3640
  %9 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_buffer, i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8), !dbg !3640
  call void @llvm.dbg.value(metadata i32 %9, metadata !3635, metadata !DIExpression()), !dbg !3636
  call void @llvm.va_end(i8* %5), !dbg !3641
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #34, !dbg !3642
  ret i32 %9, !dbg !3643
}

; Function Attrs: noinline nounwind
define dso_local i32 @vsnprintf_(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #3 !dbg !3644 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3651, metadata !DIExpression()), !dbg !3652
  call void @llvm.dbg.value(metadata i8* %0, metadata !3648, metadata !DIExpression()), !dbg !3652
  call void @llvm.dbg.value(metadata i32 %1, metadata !3649, metadata !DIExpression()), !dbg !3652
  call void @llvm.dbg.value(metadata i8* %2, metadata !3650, metadata !DIExpression()), !dbg !3652
  %5 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_buffer, i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3), !dbg !3653
  ret i32 %5, !dbg !3654
}

; Function Attrs: noinline nounwind
define dso_local i32 @fctprintf(void (i8, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, ...) local_unnamed_addr #3 !dbg !3655 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca %struct.out_fct_wrap_type, align 4
  call void @llvm.dbg.value(metadata void (i8, i8*)* %0, metadata !3659, metadata !DIExpression()), !dbg !3666
  call void @llvm.dbg.value(metadata i8* %1, metadata !3660, metadata !DIExpression()), !dbg !3666
  call void @llvm.dbg.value(metadata i8* %2, metadata !3661, metadata !DIExpression()), !dbg !3666
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !3667
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #34, !dbg !3667
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3662, metadata !DIExpression()), !dbg !3668
  call void @llvm.va_start(i8* nonnull %6), !dbg !3669
  %7 = bitcast %struct.out_fct_wrap_type* %5 to i8*, !dbg !3670
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #34, !dbg !3670
  call void @llvm.dbg.declare(metadata %struct.out_fct_wrap_type* %5, metadata !3663, metadata !DIExpression()), !dbg !3671
  %8 = getelementptr inbounds %struct.out_fct_wrap_type, %struct.out_fct_wrap_type* %5, i32 0, i32 0, !dbg !3672
  store void (i8, i8*)* %0, void (i8, i8*)** %8, align 4, !dbg !3672, !tbaa !3168
  %9 = getelementptr inbounds %struct.out_fct_wrap_type, %struct.out_fct_wrap_type* %5, i32 0, i32 1, !dbg !3672
  store i8* %1, i8** %9, align 4, !dbg !3672, !tbaa !3171
  %10 = bitcast %struct.__va_list* %4 to i32*, !dbg !3673
  %11 = load i32, i32* %10, align 4, !dbg !3673
  %12 = insertvalue [1 x i32] poison, i32 %11, 0, !dbg !3673
  %13 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_fct, i8* noundef nonnull %7, i32 noundef -1, i8* noundef %2, [1 x i32] %12), !dbg !3673
  call void @llvm.dbg.value(metadata i32 %13, metadata !3665, metadata !DIExpression()), !dbg !3666
  call void @llvm.va_end(i8* %6), !dbg !3674
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #34, !dbg !3675
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #34, !dbg !3675
  ret i32 %13, !dbg !3676
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @SystemInit() local_unnamed_addr #16 !dbg !3677 {
  %1 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3678, !tbaa !3679
  %2 = or i32 %1, 1, !dbg !3678
  store volatile i32 %2, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3678, !tbaa !3679
  %3 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3682, !tbaa !3683
  %4 = and i32 %3, -117506048, !dbg !3682
  store volatile i32 %4, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3682, !tbaa !3683
  %5 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3684, !tbaa !3679
  %6 = and i32 %5, -17367041, !dbg !3684
  store volatile i32 %6, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3684, !tbaa !3679
  %7 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3685, !tbaa !3679
  %8 = and i32 %7, -262145, !dbg !3685
  store volatile i32 %8, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3685, !tbaa !3679
  %9 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3686, !tbaa !3683
  %10 = and i32 %9, -8323073, !dbg !3686
  store volatile i32 %10, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3686, !tbaa !3683
  store volatile i32 10420224, i32* inttoptr (i32 1073877000 to i32*), align 8, !dbg !3687, !tbaa !3688
  store volatile i32 134217728, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !3689, !tbaa !3690
  ret void, !dbg !3692
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #17 !dbg !3693 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3695, metadata !DIExpression()), !dbg !3698
  call void @llvm.dbg.value(metadata i32 0, metadata !3696, metadata !DIExpression()), !dbg !3698
  call void @llvm.dbg.value(metadata i32 0, metadata !3697, metadata !DIExpression()), !dbg !3698
  %1 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3699, !tbaa !3683
  %2 = and i32 %1, 12, !dbg !3700
  call void @llvm.dbg.value(metadata i32 %2, metadata !3695, metadata !DIExpression()), !dbg !3698
  %3 = icmp eq i32 %2, 8, !dbg !3701
  br i1 %3, label %4, label %22, !dbg !3701

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3702, !tbaa !3683
  call void @llvm.dbg.value(metadata i32 %5, metadata !3696, metadata !DIExpression(DW_OP_constu, 3932160, DW_OP_and, DW_OP_stack_value)), !dbg !3698
  %6 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3704, !tbaa !3683
  %7 = and i32 %6, 65536, !dbg !3705
  call void @llvm.dbg.value(metadata i32 %7, metadata !3697, metadata !DIExpression()), !dbg !3698
  %8 = lshr i32 %5, 18, !dbg !3706
  %9 = and i32 %8, 15, !dbg !3706
  %10 = add nuw nsw i32 %9, 2, !dbg !3707
  call void @llvm.dbg.value(metadata i32 %10, metadata !3696, metadata !DIExpression()), !dbg !3698
  %11 = icmp eq i32 %7, 0, !dbg !3708
  br i1 %11, label %12, label %14, !dbg !3710

12:                                               ; preds = %4
  %13 = mul nuw nsw i32 %10, 4000000, !dbg !3711
  br label %22, !dbg !3713

14:                                               ; preds = %4
  %15 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3714, !tbaa !3683
  %16 = and i32 %15, 131072, !dbg !3717
  %17 = icmp eq i32 %16, 0, !dbg !3718
  br i1 %17, label %20, label %18, !dbg !3719

18:                                               ; preds = %14
  %19 = mul nuw nsw i32 %10, 4000000, !dbg !3720
  br label %22, !dbg !3722

20:                                               ; preds = %14
  %21 = mul nuw nsw i32 %10, 8000000, !dbg !3723
  br label %22

22:                                               ; preds = %0, %12, %20, %18
  %23 = phi i32 [ %13, %12 ], [ %21, %20 ], [ %19, %18 ], [ 8000000, %0 ]
  store i32 %23, i32* @SystemCoreClock, align 4, !dbg !3725, !tbaa !3726
  %24 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3727, !tbaa !3683
  %25 = lshr i32 %24, 4, !dbg !3728
  %26 = and i32 %25, 15, !dbg !3728
  %27 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %26, !dbg !3729
  %28 = load i8, i8* %27, align 1, !dbg !3729, !tbaa !2851
  %29 = zext i8 %28 to i32, !dbg !3729
  call void @llvm.dbg.value(metadata i32 %29, metadata !3695, metadata !DIExpression()), !dbg !3698
  %30 = load i32, i32* @SystemCoreClock, align 4, !dbg !3730, !tbaa !3726
  %31 = lshr i32 %30, %29, !dbg !3730
  store i32 %31, i32* @SystemCoreClock, align 4, !dbg !3730, !tbaa !3726
  ret void, !dbg !3731
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #3 !dbg !3732 {
  %1 = call i32 @HAL_GetTick() #34, !dbg !3738
  call void @llvm.dbg.value(metadata i32 %1, metadata !3737, metadata !DIExpression()), !dbg !3739
  %2 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3740, !tbaa !3679
  %3 = or i32 %2, 1, !dbg !3740
  store volatile i32 %3, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3740, !tbaa !3679
  br label %4, !dbg !3741

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3742, !tbaa !3679
  %6 = and i32 %5, 2, !dbg !3742
  %7 = icmp eq i32 %6, 0, !dbg !3743
  br i1 %7, label %8, label %12, !dbg !3741

8:                                                ; preds = %4
  %9 = call i32 @HAL_GetTick() #34, !dbg !3744
  %10 = sub i32 %9, %1, !dbg !3747
  %11 = icmp ugt i32 %10, 2, !dbg !3748
  br i1 %11, label %58, label %4, !dbg !3749, !llvm.loop !3750

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3752, !tbaa !3679
  %14 = and i32 %13, -249, !dbg !3752
  %15 = or i32 %14, 128, !dbg !3752
  store volatile i32 %15, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3752, !tbaa !3679
  %16 = call i32 @HAL_GetTick() #34, !dbg !3753
  call void @llvm.dbg.value(metadata i32 %16, metadata !3737, metadata !DIExpression()), !dbg !3739
  store volatile i32 0, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3754, !tbaa !3683
  br label %17, !dbg !3755

17:                                               ; preds = %21, %12
  %18 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3756, !tbaa !3683
  %19 = and i32 %18, 12, !dbg !3756
  %20 = icmp eq i32 %19, 0, !dbg !3757
  br i1 %20, label %25, label %21, !dbg !3755

21:                                               ; preds = %17
  %22 = call i32 @HAL_GetTick() #34, !dbg !3758
  %23 = sub i32 %22, %16, !dbg !3761
  %24 = icmp ugt i32 %23, 5000, !dbg !3762
  br i1 %24, label %58, label %17, !dbg !3763, !llvm.loop !3764

25:                                               ; preds = %17
  store i32 8000000, i32* @SystemCoreClock, align 4, !dbg !3766, !tbaa !3726
  %26 = load i32, i32* @uwTickPrio, align 4, !dbg !3767, !tbaa !3726
  %27 = call i32 @HAL_InitTick(i32 noundef %26) #34, !dbg !3769
  %28 = icmp eq i32 %27, 0, !dbg !3770
  br i1 %28, label %29, label %58, !dbg !3771

29:                                               ; preds = %25
  %30 = call i32 @HAL_GetTick() #34, !dbg !3772
  call void @llvm.dbg.value(metadata i32 %30, metadata !3737, metadata !DIExpression()), !dbg !3739
  %31 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3773, !tbaa !3679
  %32 = and i32 %31, -16777217, !dbg !3773
  store volatile i32 %32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3773, !tbaa !3679
  br label %33, !dbg !3774

33:                                               ; preds = %37, %29
  %34 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3775, !tbaa !3679
  %35 = and i32 %34, 33554432, !dbg !3775
  %36 = icmp eq i32 %35, 0, !dbg !3776
  br i1 %36, label %41, label %37, !dbg !3774

37:                                               ; preds = %33
  %38 = call i32 @HAL_GetTick() #34, !dbg !3777
  %39 = sub i32 %38, %30, !dbg !3780
  %40 = icmp ugt i32 %39, 2, !dbg !3781
  br i1 %40, label %58, label %33, !dbg !3782, !llvm.loop !3783

41:                                               ; preds = %33
  store volatile i32 0, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3785, !tbaa !3683
  %42 = call i32 @HAL_GetTick() #34, !dbg !3786
  call void @llvm.dbg.value(metadata i32 %42, metadata !3737, metadata !DIExpression()), !dbg !3739
  %43 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3787, !tbaa !3679
  %44 = and i32 %43, -589825, !dbg !3787
  store volatile i32 %44, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3787, !tbaa !3679
  br label %45, !dbg !3788

45:                                               ; preds = %49, %41
  %46 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3789, !tbaa !3679
  %47 = and i32 %46, 131072, !dbg !3789
  %48 = icmp eq i32 %47, 0, !dbg !3790
  br i1 %48, label %53, label %49, !dbg !3788

49:                                               ; preds = %45
  %50 = call i32 @HAL_GetTick() #34, !dbg !3791
  %51 = sub i32 %50, %42, !dbg !3794
  %52 = icmp ugt i32 %51, 100, !dbg !3795
  br i1 %52, label %58, label %45, !dbg !3796, !llvm.loop !3797

53:                                               ; preds = %45
  %54 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3799, !tbaa !3679
  %55 = and i32 %54, -262145, !dbg !3799
  store volatile i32 %55, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3799, !tbaa !3679
  %56 = load volatile i32, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !3800, !tbaa !3801
  %57 = or i32 %56, 16777216, !dbg !3800
  store volatile i32 %57, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !3800, !tbaa !3801
  store volatile i32 0, i32* inttoptr (i32 1073877000 to i32*), align 8, !dbg !3802, !tbaa !3688
  br label %58, !dbg !3803

58:                                               ; preds = %8, %21, %37, %49, %25, %53
  %59 = phi i32 [ 0, %53 ], [ 1, %25 ], [ 3, %49 ], [ 3, %37 ], [ 3, %21 ], [ 3, %8 ], !dbg !3739
  ret i32 %59, !dbg !3804
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #3 !dbg !3805 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !3827, metadata !DIExpression()), !dbg !3838
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !3839
  br i1 %3, label %298, label %4, !dbg !3841

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !3842
  %6 = load i32, i32* %5, align 4, !dbg !3842, !tbaa !3844
  %7 = and i32 %6, 1, !dbg !3847
  %8 = icmp eq i32 %7, 0, !dbg !3848
  br i1 %8, label %70, label %9, !dbg !3849

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3850, !tbaa !3683
  %11 = and i32 %10, 12, !dbg !3850
  %12 = icmp eq i32 %11, 4, !dbg !3853
  br i1 %12, label %21, label %13, !dbg !3854

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3855, !tbaa !3683
  %15 = and i32 %14, 12, !dbg !3855
  %16 = icmp eq i32 %15, 8, !dbg !3856
  br i1 %16, label %17, label %29, !dbg !3857

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3858, !tbaa !3683
  %19 = and i32 %18, 65536, !dbg !3858
  %20 = icmp eq i32 %19, 0, !dbg !3859
  br i1 %20, label %29, label %21, !dbg !3860

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3861, !tbaa !3679
  %23 = and i32 %22, 131072, !dbg !3861
  %24 = icmp eq i32 %23, 0, !dbg !3864
  br i1 %24, label %70, label %25, !dbg !3865

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !3866
  %27 = load i32, i32* %26, align 4, !dbg !3866, !tbaa !3867
  %28 = icmp eq i32 %27, 0, !dbg !3868
  br i1 %28, label %298, label %70, !dbg !3869

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !3870
  %31 = load i32, i32* %30, align 4, !dbg !3870, !tbaa !3867
  switch i32 %31, label %45 [
    i32 65536, label %32
    i32 0, label %35
    i32 327680, label %40
  ], !dbg !3874

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3875, !tbaa !3679
  %34 = or i32 %33, 65536, !dbg !3875
  br label %50, !dbg !3875

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3877, !tbaa !3679
  %37 = and i32 %36, -65537, !dbg !3877
  store volatile i32 %37, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3877, !tbaa !3679
  %38 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3877, !tbaa !3679
  %39 = and i32 %38, -262145, !dbg !3877
  br label %50, !dbg !3877

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3880, !tbaa !3679
  %42 = or i32 %41, 262144, !dbg !3880
  store volatile i32 %42, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3880, !tbaa !3679
  %43 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3880, !tbaa !3679
  %44 = or i32 %43, 65536, !dbg !3880
  br label %50, !dbg !3880

45:                                               ; preds = %29
  %46 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3883, !tbaa !3679
  %47 = and i32 %46, -65537, !dbg !3883
  store volatile i32 %47, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3883, !tbaa !3679
  %48 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3883, !tbaa !3679
  %49 = and i32 %48, -262145, !dbg !3883
  br label %50

50:                                               ; preds = %35, %45, %40, %32
  %51 = phi i32 [ %39, %35 ], [ %49, %45 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %51, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3885, !tbaa !3679
  %52 = icmp eq i32 %31, 0, !dbg !3886
  %53 = call i32 @HAL_GetTick() #34, !dbg !3888
  call void @llvm.dbg.value(metadata i32 %53, metadata !3828, metadata !DIExpression()), !dbg !3838
  call void @llvm.dbg.value(metadata i32 %53, metadata !3828, metadata !DIExpression()), !dbg !3838
  br i1 %52, label %62, label %54, !dbg !3889

54:                                               ; preds = %50, %58
  %55 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3890, !tbaa !3679
  %56 = and i32 %55, 131072, !dbg !3890
  %57 = icmp eq i32 %56, 0, !dbg !3892
  br i1 %57, label %58, label %70, !dbg !3893

58:                                               ; preds = %54
  %59 = call i32 @HAL_GetTick() #34, !dbg !3894
  %60 = sub i32 %59, %53, !dbg !3897
  %61 = icmp ugt i32 %60, 100, !dbg !3898
  br i1 %61, label %298, label %54, !dbg !3899, !llvm.loop !3900

62:                                               ; preds = %50, %66
  %63 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3902, !tbaa !3679
  %64 = and i32 %63, 131072, !dbg !3902
  %65 = icmp eq i32 %64, 0, !dbg !3904
  br i1 %65, label %70, label %66, !dbg !3905

66:                                               ; preds = %62
  %67 = call i32 @HAL_GetTick() #34, !dbg !3906
  %68 = sub i32 %67, %53, !dbg !3909
  %69 = icmp ugt i32 %68, 100, !dbg !3910
  br i1 %69, label %298, label %62, !dbg !3911, !llvm.loop !3912

70:                                               ; preds = %54, %62, %25, %21, %4
  %71 = load i32, i32* %5, align 4, !dbg !3914, !tbaa !3844
  %72 = and i32 %71, 2, !dbg !3916
  %73 = icmp eq i32 %72, 0, !dbg !3917
  br i1 %73, label %125, label %74, !dbg !3918

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3919, !tbaa !3683
  %76 = and i32 %75, 12, !dbg !3919
  %77 = icmp eq i32 %76, 0, !dbg !3922
  br i1 %77, label %86, label %78, !dbg !3923

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3924, !tbaa !3683
  %80 = and i32 %79, 12, !dbg !3924
  %81 = icmp eq i32 %80, 8, !dbg !3925
  br i1 %81, label %82, label %94, !dbg !3926

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3927, !tbaa !3683
  %84 = and i32 %83, 65536, !dbg !3927
  %85 = icmp eq i32 %84, 0, !dbg !3928
  br i1 %85, label %86, label %94, !dbg !3929

86:                                               ; preds = %82, %74
  %87 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3930, !tbaa !3679
  %88 = and i32 %87, 2, !dbg !3930
  %89 = icmp eq i32 %88, 0, !dbg !3933
  br i1 %89, label %118, label %90, !dbg !3934

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !3935
  %92 = load i32, i32* %91, align 4, !dbg !3935, !tbaa !3936
  %93 = icmp eq i32 %92, 1, !dbg !3937
  br i1 %93, label %118, label %298, !dbg !3938

94:                                               ; preds = %82, %78
  %95 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !3939
  %96 = load i32, i32* %95, align 4, !dbg !3939, !tbaa !3936
  %97 = icmp eq i32 %96, 0, !dbg !3942
  br i1 %97, label %108, label %98, !dbg !3943

98:                                               ; preds = %94
  store volatile i32 1, i32* inttoptr (i32 1111621632 to i32*), align 131072, !dbg !3944, !tbaa !3726
  %99 = call i32 @HAL_GetTick() #34, !dbg !3946
  call void @llvm.dbg.value(metadata i32 %99, metadata !3828, metadata !DIExpression()), !dbg !3838
  br label %100, !dbg !3947

100:                                              ; preds = %104, %98
  %101 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3948, !tbaa !3679
  %102 = and i32 %101, 2, !dbg !3948
  %103 = icmp eq i32 %102, 0, !dbg !3949
  br i1 %103, label %104, label %118, !dbg !3947

104:                                              ; preds = %100
  %105 = call i32 @HAL_GetTick() #34, !dbg !3950
  %106 = sub i32 %105, %99, !dbg !3953
  %107 = icmp ugt i32 %106, 2, !dbg !3954
  br i1 %107, label %298, label %100, !dbg !3955, !llvm.loop !3956

108:                                              ; preds = %94
  store volatile i32 0, i32* inttoptr (i32 1111621632 to i32*), align 131072, !dbg !3958, !tbaa !3726
  %109 = call i32 @HAL_GetTick() #34, !dbg !3960
  call void @llvm.dbg.value(metadata i32 %109, metadata !3828, metadata !DIExpression()), !dbg !3838
  br label %110, !dbg !3961

110:                                              ; preds = %114, %108
  %111 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3962, !tbaa !3679
  %112 = and i32 %111, 2, !dbg !3962
  %113 = icmp eq i32 %112, 0, !dbg !3963
  br i1 %113, label %125, label %114, !dbg !3961

114:                                              ; preds = %110
  %115 = call i32 @HAL_GetTick() #34, !dbg !3964
  %116 = sub i32 %115, %109, !dbg !3967
  %117 = icmp ugt i32 %116, 2, !dbg !3968
  br i1 %117, label %298, label %110, !dbg !3969, !llvm.loop !3970

118:                                              ; preds = %100, %86, %90
  %119 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3972, !tbaa !3679
  %120 = and i32 %119, -249, !dbg !3972
  %121 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !3972
  %122 = load i32, i32* %121, align 4, !dbg !3972, !tbaa !3973
  %123 = shl i32 %122, 3, !dbg !3972
  %124 = or i32 %123, %120, !dbg !3972
  store volatile i32 %124, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3972, !tbaa !3679
  br label %125, !dbg !3974

125:                                              ; preds = %110, %118, %70
  %126 = load i32, i32* %5, align 4, !dbg !3974, !tbaa !3844
  %127 = and i32 %126, 8, !dbg !3976
  %128 = icmp eq i32 %127, 0, !dbg !3977
  br i1 %128, label %154, label %129, !dbg !3978

129:                                              ; preds = %125
  %130 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !3979
  %131 = load i32, i32* %130, align 4, !dbg !3979, !tbaa !3982
  %132 = icmp eq i32 %131, 0, !dbg !3983
  br i1 %132, label %144, label %133, !dbg !3984

133:                                              ; preds = %129
  store volatile i32 1, i32* inttoptr (i32 1111622784 to i32*), align 128, !dbg !3985, !tbaa !3726
  %134 = call i32 @HAL_GetTick() #34, !dbg !3987
  call void @llvm.dbg.value(metadata i32 %134, metadata !3828, metadata !DIExpression()), !dbg !3838
  br label %135, !dbg !3988

135:                                              ; preds = %139, %133
  %136 = load volatile i32, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !3989, !tbaa !3801
  %137 = and i32 %136, 2, !dbg !3989
  %138 = icmp eq i32 %137, 0, !dbg !3990
  br i1 %138, label %139, label %143, !dbg !3988

139:                                              ; preds = %135
  %140 = call i32 @HAL_GetTick() #34, !dbg !3991
  %141 = sub i32 %140, %134, !dbg !3994
  %142 = icmp ugt i32 %141, 2, !dbg !3995
  br i1 %142, label %298, label %135, !dbg !3996, !llvm.loop !3997

143:                                              ; preds = %135
  call fastcc void @RCC_Delay(), !dbg !3999
  br label %154, !dbg !4000

144:                                              ; preds = %129
  store volatile i32 0, i32* inttoptr (i32 1111622784 to i32*), align 128, !dbg !4001, !tbaa !3726
  %145 = call i32 @HAL_GetTick() #34, !dbg !4003
  call void @llvm.dbg.value(metadata i32 %145, metadata !3828, metadata !DIExpression()), !dbg !3838
  br label %146, !dbg !4004

146:                                              ; preds = %150, %144
  %147 = load volatile i32, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !4005, !tbaa !3801
  %148 = and i32 %147, 2, !dbg !4005
  %149 = icmp eq i32 %148, 0, !dbg !4006
  br i1 %149, label %154, label %150, !dbg !4004

150:                                              ; preds = %146
  %151 = call i32 @HAL_GetTick() #34, !dbg !4007
  %152 = sub i32 %151, %145, !dbg !4010
  %153 = icmp ugt i32 %152, 2, !dbg !4011
  br i1 %153, label %298, label %146, !dbg !4012, !llvm.loop !4013

154:                                              ; preds = %146, %143, %125
  %155 = load i32, i32* %5, align 4, !dbg !4015, !tbaa !3844
  %156 = and i32 %155, 4, !dbg !4016
  %157 = icmp eq i32 %156, 0, !dbg !4017
  br i1 %157, label %231, label %158, !dbg !4018

158:                                              ; preds = %154
  call void @llvm.dbg.value(metadata i32 0, metadata !3830, metadata !DIExpression()), !dbg !4019
  %159 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !4020, !tbaa !4021
  %160 = and i32 %159, 268435456, !dbg !4020
  %161 = icmp eq i32 %160, 0, !dbg !4020
  br i1 %161, label %162, label %170, !dbg !4022

162:                                              ; preds = %158
  %163 = bitcast i32* %2 to i8*, !dbg !4023
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %163), !dbg !4023
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3834, metadata !DIExpression()), !dbg !4023
  %164 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !4023, !tbaa !4021
  %165 = or i32 %164, 268435456, !dbg !4023
  store volatile i32 %165, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !4023, !tbaa !4021
  %166 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !4023, !tbaa !4021
  %167 = and i32 %166, 268435456, !dbg !4023
  store volatile i32 %167, i32* %2, align 4, !dbg !4023, !tbaa !3726
  %168 = load volatile i32, i32* %2, align 4, !dbg !4023, !tbaa !3726
  %169 = bitcast i32* %2 to i8*, !dbg !4024
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %169), !dbg !4024
  call void @llvm.dbg.value(metadata i32 1, metadata !3830, metadata !DIExpression()), !dbg !4019
  br label %170, !dbg !4025

170:                                              ; preds = %162, %158
  call void @llvm.dbg.value(metadata i32 undef, metadata !3830, metadata !DIExpression()), !dbg !4019
  %171 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !4026, !tbaa !4028
  %172 = and i32 %171, 256, !dbg !4026
  %173 = icmp eq i32 %172, 0, !dbg !4026
  br i1 %173, label %174, label %186, !dbg !4030

174:                                              ; preds = %170
  %175 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !4031, !tbaa !4028
  %176 = or i32 %175, 256, !dbg !4031
  store volatile i32 %176, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !4031, !tbaa !4028
  %177 = call i32 @HAL_GetTick() #34, !dbg !4033
  call void @llvm.dbg.value(metadata i32 %177, metadata !3828, metadata !DIExpression()), !dbg !3838
  br label %178, !dbg !4034

178:                                              ; preds = %182, %174
  %179 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !4035, !tbaa !4028
  %180 = and i32 %179, 256, !dbg !4035
  %181 = icmp eq i32 %180, 0, !dbg !4035
  br i1 %181, label %182, label %186, !dbg !4034

182:                                              ; preds = %178
  %183 = call i32 @HAL_GetTick() #34, !dbg !4036
  %184 = sub i32 %183, %177, !dbg !4039
  %185 = icmp ugt i32 %184, 100, !dbg !4040
  br i1 %185, label %298, label %178, !dbg !4041, !llvm.loop !4042

186:                                              ; preds = %178, %170
  %187 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !4044
  %188 = load i32, i32* %187, align 4, !dbg !4044, !tbaa !4047
  switch i32 %188, label %202 [
    i32 1, label %189
    i32 0, label %192
    i32 5, label %197
  ], !dbg !4048

189:                                              ; preds = %186
  %190 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !4049, !tbaa !4051
  %191 = or i32 %190, 1, !dbg !4049
  br label %207, !dbg !4049

192:                                              ; preds = %186
  %193 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !4052, !tbaa !4051
  %194 = and i32 %193, -2, !dbg !4052
  store volatile i32 %194, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !4052, !tbaa !4051
  %195 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !4052, !tbaa !4051
  %196 = and i32 %195, -5, !dbg !4052
  br label %207, !dbg !4052

197:                                              ; preds = %186
  %198 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !4055, !tbaa !4051
  %199 = or i32 %198, 4, !dbg !4055
  store volatile i32 %199, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !4055, !tbaa !4051
  %200 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !4055, !tbaa !4051
  %201 = or i32 %200, 1, !dbg !4055
  br label %207, !dbg !4055

202:                                              ; preds = %186
  %203 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !4058, !tbaa !4051
  %204 = and i32 %203, -2, !dbg !4058
  store volatile i32 %204, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !4058, !tbaa !4051
  %205 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !4058, !tbaa !4051
  %206 = and i32 %205, -5, !dbg !4058
  br label %207

207:                                              ; preds = %192, %202, %197, %189
  %208 = phi i32 [ %196, %192 ], [ %206, %202 ], [ %201, %197 ], [ %191, %189 ]
  store volatile i32 %208, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !4060, !tbaa !4051
  %209 = icmp eq i32 %188, 0, !dbg !4061
  %210 = call i32 @HAL_GetTick() #34, !dbg !4063
  call void @llvm.dbg.value(metadata i32 %210, metadata !3828, metadata !DIExpression()), !dbg !3838
  call void @llvm.dbg.value(metadata i32 %210, metadata !3828, metadata !DIExpression()), !dbg !3838
  br i1 %209, label %219, label %211, !dbg !4064

211:                                              ; preds = %207, %215
  %212 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !4065, !tbaa !4051
  %213 = and i32 %212, 2, !dbg !4065
  %214 = icmp eq i32 %213, 0, !dbg !4067
  br i1 %214, label %215, label %227, !dbg !4068

215:                                              ; preds = %211
  %216 = call i32 @HAL_GetTick() #34, !dbg !4069
  %217 = sub i32 %216, %210, !dbg !4072
  %218 = icmp ugt i32 %217, 5000, !dbg !4073
  br i1 %218, label %298, label %211, !dbg !4074, !llvm.loop !4075

219:                                              ; preds = %207, %223
  %220 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !4077, !tbaa !4051
  %221 = and i32 %220, 2, !dbg !4077
  %222 = icmp eq i32 %221, 0, !dbg !4079
  br i1 %222, label %227, label %223, !dbg !4080

223:                                              ; preds = %219
  %224 = call i32 @HAL_GetTick() #34, !dbg !4081
  %225 = sub i32 %224, %210, !dbg !4084
  %226 = icmp ugt i32 %225, 5000, !dbg !4085
  br i1 %226, label %298, label %219, !dbg !4086, !llvm.loop !4087

227:                                              ; preds = %211, %219
  br i1 %161, label %228, label %231, !dbg !4089

228:                                              ; preds = %227
  %229 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !4090, !tbaa !4021
  %230 = and i32 %229, -268435457, !dbg !4090
  store volatile i32 %230, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !4090, !tbaa !4021
  br label %231, !dbg !4093

231:                                              ; preds = %228, %227, %154
  %232 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 0, !dbg !4094
  %233 = load i32, i32* %232, align 4, !dbg !4094, !tbaa !4096
  %234 = icmp eq i32 %233, 0, !dbg !4097
  br i1 %234, label %297, label %235, !dbg !4098

235:                                              ; preds = %231
  %236 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4099, !tbaa !3683
  %237 = and i32 %236, 12, !dbg !4099
  %238 = icmp eq i32 %237, 8, !dbg !4102
  br i1 %238, label %284, label %239, !dbg !4103

239:                                              ; preds = %235
  %240 = icmp eq i32 %233, 2, !dbg !4104
  store volatile i32 0, i32* inttoptr (i32 1111621728 to i32*), align 32, !dbg !4107, !tbaa !3726
  %241 = call i32 @HAL_GetTick() #34, !dbg !4107
  call void @llvm.dbg.value(metadata i32 %241, metadata !3828, metadata !DIExpression()), !dbg !3838
  call void @llvm.dbg.value(metadata i32 %241, metadata !3828, metadata !DIExpression()), !dbg !3838
  br i1 %240, label %242, label %276, !dbg !4108

242:                                              ; preds = %239, %246
  %243 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !4109, !tbaa !3679
  %244 = and i32 %243, 33554432, !dbg !4109
  %245 = icmp eq i32 %244, 0, !dbg !4111
  br i1 %245, label %250, label %246, !dbg !4112

246:                                              ; preds = %242
  %247 = call i32 @HAL_GetTick() #34, !dbg !4113
  %248 = sub i32 %247, %241, !dbg !4116
  %249 = icmp ugt i32 %248, 2, !dbg !4117
  br i1 %249, label %298, label %242, !dbg !4118, !llvm.loop !4119

250:                                              ; preds = %242
  %251 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 1, !dbg !4121
  %252 = load i32, i32* %251, align 4, !dbg !4121, !tbaa !4123
  %253 = icmp eq i32 %252, 65536, !dbg !4124
  br i1 %253, label %254, label %260, !dbg !4125

254:                                              ; preds = %250
  %255 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4126, !tbaa !3683
  %256 = and i32 %255, -131073, !dbg !4126
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !4126
  %258 = load i32, i32* %257, align 4, !dbg !4126, !tbaa !4128
  %259 = or i32 %256, %258, !dbg !4126
  store volatile i32 %259, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4126, !tbaa !3683
  br label %260, !dbg !4129

260:                                              ; preds = %254, %250
  %261 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4130, !tbaa !3683
  %262 = and i32 %261, -3997697, !dbg !4130
  %263 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 2, !dbg !4130
  %264 = load i32, i32* %263, align 4, !dbg !4130, !tbaa !4131
  %265 = or i32 %264, %252, !dbg !4130
  %266 = or i32 %265, %262, !dbg !4130
  store volatile i32 %266, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4130, !tbaa !3683
  store volatile i32 1, i32* inttoptr (i32 1111621728 to i32*), align 32, !dbg !4132, !tbaa !3726
  %267 = call i32 @HAL_GetTick() #34, !dbg !4133
  call void @llvm.dbg.value(metadata i32 %267, metadata !3828, metadata !DIExpression()), !dbg !3838
  br label %268, !dbg !4134

268:                                              ; preds = %272, %260
  %269 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !4135, !tbaa !3679
  %270 = and i32 %269, 33554432, !dbg !4135
  %271 = icmp eq i32 %270, 0, !dbg !4136
  br i1 %271, label %272, label %297, !dbg !4134

272:                                              ; preds = %268
  %273 = call i32 @HAL_GetTick() #34, !dbg !4137
  %274 = sub i32 %273, %267, !dbg !4140
  %275 = icmp ugt i32 %274, 2, !dbg !4141
  br i1 %275, label %298, label %268, !dbg !4142, !llvm.loop !4143

276:                                              ; preds = %239, %280
  %277 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !4145, !tbaa !3679
  %278 = and i32 %277, 33554432, !dbg !4145
  %279 = icmp eq i32 %278, 0, !dbg !4147
  br i1 %279, label %297, label %280, !dbg !4148

280:                                              ; preds = %276
  %281 = call i32 @HAL_GetTick() #34, !dbg !4149
  %282 = sub i32 %281, %241, !dbg !4152
  %283 = icmp ugt i32 %282, 2, !dbg !4153
  br i1 %283, label %298, label %276, !dbg !4154, !llvm.loop !4155

284:                                              ; preds = %235
  %285 = icmp eq i32 %233, 1, !dbg !4157
  br i1 %285, label %298, label %286, !dbg !4160

286:                                              ; preds = %284
  %287 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4161, !tbaa !3683
  call void @llvm.dbg.value(metadata i32 %287, metadata !3829, metadata !DIExpression()), !dbg !3838
  %288 = and i32 %287, 65536, !dbg !4163
  %289 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 1, !dbg !4165
  %290 = load i32, i32* %289, align 4, !dbg !4165, !tbaa !4123
  %291 = icmp eq i32 %288, %290, !dbg !4166
  br i1 %291, label %292, label %298, !dbg !4167

292:                                              ; preds = %286
  %293 = and i32 %287, 3932160, !dbg !4168
  %294 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 2, !dbg !4169
  %295 = load i32, i32* %294, align 4, !dbg !4169, !tbaa !4131
  %296 = icmp eq i32 %293, %295, !dbg !4170
  br i1 %296, label %297, label %298, !dbg !4171

297:                                              ; preds = %276, %268, %292, %231
  br label %298, !dbg !4172

298:                                              ; preds = %58, %66, %104, %114, %139, %150, %182, %215, %223, %280, %246, %272, %286, %292, %284, %90, %25, %1, %297
  %299 = phi i32 [ 0, %297 ], [ 1, %1 ], [ 1, %25 ], [ 1, %90 ], [ 1, %284 ], [ 1, %292 ], [ 1, %286 ], [ 3, %272 ], [ 3, %246 ], [ 3, %280 ], [ 3, %223 ], [ 3, %215 ], [ 3, %182 ], [ 3, %150 ], [ 3, %139 ], [ 3, %114 ], [ 3, %104 ], [ 3, %66 ], [ 3, %58 ], !dbg !3838
  ret i32 %299, !dbg !4173
}

; Function Attrs: noinline nounwind
define internal fastcc void @RCC_Delay() unnamed_addr #3 !dbg !4174 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !4178, metadata !DIExpression()), !dbg !4180
  %2 = bitcast i32* %1 to i8*, !dbg !4181
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4181
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4179, metadata !DIExpression()), !dbg !4182
  %3 = load i32, i32* @SystemCoreClock, align 4, !dbg !4183, !tbaa !3726
  %4 = udiv i32 %3, 8000, !dbg !4184
  store volatile i32 %4, i32* %1, align 4, !dbg !4182, !tbaa !3726
  br label %5, !dbg !4185

5:                                                ; preds = %5, %0
  call void asm sideeffect "nop", ""() #34, !dbg !4186, !srcloc !4188
  %6 = load volatile i32, i32* %1, align 4, !dbg !4189, !tbaa !3726
  %7 = add i32 %6, -1, !dbg !4189
  store volatile i32 %7, i32* %1, align 4, !dbg !4189, !tbaa !3726
  %8 = icmp eq i32 %6, 0, !dbg !4190
  br i1 %8, label %9, label %5, !dbg !4190, !llvm.loop !4191

9:                                                ; preds = %5
  %10 = bitcast i32* %1 to i8*, !dbg !4193
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !4193
  ret void, !dbg !4193
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #3 !dbg !4194 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !4207, metadata !DIExpression()), !dbg !4210
  call void @llvm.dbg.value(metadata i32 %1, metadata !4208, metadata !DIExpression()), !dbg !4210
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !4211
  br i1 %3, label %113, label %4, !dbg !4213

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !4214, !tbaa !4216
  %6 = and i32 %5, 7, !dbg !4214
  %7 = icmp ult i32 %6, %1, !dbg !4218
  br i1 %7, label %8, label %15, !dbg !4219

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !4220, !tbaa !4216
  %10 = and i32 %9, -8, !dbg !4220
  %11 = or i32 %10, %1, !dbg !4220
  store volatile i32 %11, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !4220, !tbaa !4216
  %12 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !4222, !tbaa !4216
  %13 = and i32 %12, 7, !dbg !4222
  %14 = icmp eq i32 %13, %1, !dbg !4224
  br i1 %14, label %15, label %113, !dbg !4225

15:                                               ; preds = %8, %4
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !4226
  %17 = load i32, i32* %16, align 4, !dbg !4226, !tbaa !4228
  %18 = and i32 %17, 2, !dbg !4230
  %19 = icmp eq i32 %18, 0, !dbg !4231
  br i1 %19, label %38, label %20, !dbg !4232

20:                                               ; preds = %15
  %21 = and i32 %17, 4, !dbg !4233
  %22 = icmp eq i32 %21, 0, !dbg !4236
  br i1 %22, label %26, label %23, !dbg !4237

23:                                               ; preds = %20
  %24 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4238, !tbaa !3683
  %25 = or i32 %24, 1792, !dbg !4238
  store volatile i32 %25, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4238, !tbaa !3683
  br label %26, !dbg !4240

26:                                               ; preds = %23, %20
  %27 = and i32 %17, 8, !dbg !4241
  %28 = icmp eq i32 %27, 0, !dbg !4243
  br i1 %28, label %32, label %29, !dbg !4244

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4245, !tbaa !3683
  %31 = or i32 %30, 14336, !dbg !4245
  store volatile i32 %31, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4245, !tbaa !3683
  br label %32, !dbg !4247

32:                                               ; preds = %29, %26
  %33 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4248, !tbaa !3683
  %34 = and i32 %33, -241, !dbg !4248
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !4248
  %36 = load i32, i32* %35, align 4, !dbg !4248, !tbaa !4249
  %37 = or i32 %34, %36, !dbg !4248
  store volatile i32 %37, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4248, !tbaa !3683
  br label %38, !dbg !4250

38:                                               ; preds = %32, %15
  %39 = and i32 %17, 1, !dbg !4251
  %40 = icmp eq i32 %39, 0, !dbg !4253
  br i1 %40, label %71, label %41, !dbg !4254

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !4255
  %43 = load i32, i32* %42, align 4, !dbg !4255, !tbaa !4258
  switch i32 %43, label %52 [
    i32 1, label %44
    i32 2, label %48
  ], !dbg !4259

44:                                               ; preds = %41
  %45 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !4260, !tbaa !3679
  %46 = and i32 %45, 131072, !dbg !4260
  %47 = icmp eq i32 %46, 0, !dbg !4263
  br i1 %47, label %113, label %56, !dbg !4264

48:                                               ; preds = %41
  %49 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !4265, !tbaa !3679
  %50 = and i32 %49, 33554432, !dbg !4265
  %51 = icmp eq i32 %50, 0, !dbg !4269
  br i1 %51, label %113, label %56, !dbg !4270

52:                                               ; preds = %41
  %53 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !4271, !tbaa !3679
  %54 = and i32 %53, 2, !dbg !4271
  %55 = icmp eq i32 %54, 0, !dbg !4274
  br i1 %55, label %113, label %56, !dbg !4275

56:                                               ; preds = %48, %52, %44
  %57 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4276, !tbaa !3683
  %58 = and i32 %57, -4, !dbg !4276
  %59 = or i32 %58, %43, !dbg !4276
  store volatile i32 %59, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4276, !tbaa !3683
  %60 = call i32 @HAL_GetTick() #34, !dbg !4277
  call void @llvm.dbg.value(metadata i32 %60, metadata !4209, metadata !DIExpression()), !dbg !4210
  br label %61, !dbg !4278

61:                                               ; preds = %67, %56
  %62 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4279, !tbaa !3683
  %63 = and i32 %62, 12, !dbg !4279
  %64 = load i32, i32* %42, align 4, !dbg !4280, !tbaa !4258
  %65 = shl i32 %64, 2, !dbg !4281
  %66 = icmp eq i32 %63, %65, !dbg !4282
  br i1 %66, label %71, label %67, !dbg !4278

67:                                               ; preds = %61
  %68 = call i32 @HAL_GetTick() #34, !dbg !4283
  %69 = sub i32 %68, %60, !dbg !4286
  %70 = icmp ugt i32 %69, 5000, !dbg !4287
  br i1 %70, label %113, label %61, !dbg !4288, !llvm.loop !4289

71:                                               ; preds = %61, %38
  %72 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !4291, !tbaa !4216
  %73 = and i32 %72, 7, !dbg !4291
  %74 = icmp ugt i32 %73, %1, !dbg !4293
  br i1 %74, label %75, label %82, !dbg !4294

75:                                               ; preds = %71
  %76 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !4295, !tbaa !4216
  %77 = and i32 %76, -8, !dbg !4295
  %78 = or i32 %77, %1, !dbg !4295
  store volatile i32 %78, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !4295, !tbaa !4216
  %79 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !4297, !tbaa !4216
  %80 = and i32 %79, 7, !dbg !4297
  %81 = icmp eq i32 %80, %1, !dbg !4299
  br i1 %81, label %82, label %113, !dbg !4300

82:                                               ; preds = %75, %71
  %83 = load i32, i32* %16, align 4, !dbg !4301, !tbaa !4228
  %84 = and i32 %83, 4, !dbg !4303
  %85 = icmp eq i32 %84, 0, !dbg !4304
  br i1 %85, label %92, label %86, !dbg !4305

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4306, !tbaa !3683
  %88 = and i32 %87, -1793, !dbg !4306
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !4306
  %90 = load i32, i32* %89, align 4, !dbg !4306, !tbaa !4308
  %91 = or i32 %88, %90, !dbg !4306
  store volatile i32 %91, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4306, !tbaa !3683
  br label %92, !dbg !4309

92:                                               ; preds = %86, %82
  %93 = and i32 %83, 8, !dbg !4310
  %94 = icmp eq i32 %93, 0, !dbg !4312
  br i1 %94, label %102, label %95, !dbg !4313

95:                                               ; preds = %92
  %96 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4314, !tbaa !3683
  %97 = and i32 %96, -14337, !dbg !4314
  %98 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !4314
  %99 = load i32, i32* %98, align 4, !dbg !4314, !tbaa !4316
  %100 = shl i32 %99, 3, !dbg !4314
  %101 = or i32 %100, %97, !dbg !4314
  store volatile i32 %101, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4314, !tbaa !3683
  br label %102, !dbg !4317

102:                                              ; preds = %95, %92
  %103 = call i32 @HAL_RCC_GetSysClockFreq(), !dbg !4318
  %104 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4319, !tbaa !3683
  %105 = lshr i32 %104, 4, !dbg !4320
  %106 = and i32 %105, 15, !dbg !4320
  %107 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %106, !dbg !4321
  %108 = load i8, i8* %107, align 1, !dbg !4321, !tbaa !2851
  %109 = zext i8 %108 to i32, !dbg !4321
  %110 = lshr i32 %103, %109, !dbg !4322
  store i32 %110, i32* @SystemCoreClock, align 4, !dbg !4323, !tbaa !3726
  %111 = load i32, i32* @uwTickPrio, align 4, !dbg !4324, !tbaa !3726
  %112 = call i32 @HAL_InitTick(i32 noundef %111) #34, !dbg !4325
  br label %113, !dbg !4326

113:                                              ; preds = %67, %75, %52, %48, %44, %8, %2, %102
  %114 = phi i32 [ 0, %102 ], [ 1, %2 ], [ 1, %8 ], [ 1, %44 ], [ 1, %48 ], [ 1, %52 ], [ 1, %75 ], [ 3, %67 ], !dbg !4210
  ret i32 %114, !dbg !4327
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #17 !dbg !4328 {
  call void @llvm.dbg.declare(metadata [16 x i8]* @__const.HAL_RCC_GetSysClockFreq.aPLLMULFactorTable, metadata !4330, metadata !DIExpression()), !dbg !4338
  call void @llvm.dbg.declare(metadata [2 x i8]* @__const.HAL_RCC_GetSysClockFreq.aPredivFactorTable, metadata !4331, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.value(metadata i32 0, metadata !4333, metadata !DIExpression()), !dbg !4340
  call void @llvm.dbg.value(metadata i32 0, metadata !4334, metadata !DIExpression()), !dbg !4340
  call void @llvm.dbg.value(metadata i32 0, metadata !4335, metadata !DIExpression()), !dbg !4340
  call void @llvm.dbg.value(metadata i32 0, metadata !4336, metadata !DIExpression()), !dbg !4340
  call void @llvm.dbg.value(metadata i32 0, metadata !4337, metadata !DIExpression()), !dbg !4340
  %1 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4341, !tbaa !3683
  call void @llvm.dbg.value(metadata i32 %1, metadata !4333, metadata !DIExpression()), !dbg !4340
  %2 = and i32 %1, 12, !dbg !4342
  %3 = icmp eq i32 %2, 8, !dbg !4343
  br i1 %3, label %4, label %23, !dbg !4343

4:                                                ; preds = %0
  %5 = lshr i32 %1, 18, !dbg !4344
  %6 = and i32 %5, 15, !dbg !4344
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @__const.HAL_RCC_GetSysClockFreq.aPLLMULFactorTable, i32 0, i32 %6, !dbg !4347
  %8 = load i8, i8* %7, align 1, !dbg !4347, !tbaa !2851
  %9 = zext i8 %8 to i32, !dbg !4347
  call void @llvm.dbg.value(metadata i32 %9, metadata !4336, metadata !DIExpression()), !dbg !4340
  %10 = and i32 %1, 65536, !dbg !4348
  %11 = icmp eq i32 %10, 0, !dbg !4350
  br i1 %11, label %21, label %12, !dbg !4351

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4352, !tbaa !3683
  %14 = lshr i32 %13, 17, !dbg !4354
  %15 = and i32 %14, 1, !dbg !4354
  %16 = getelementptr inbounds [2 x i8], [2 x i8]* @__const.HAL_RCC_GetSysClockFreq.aPredivFactorTable, i32 0, i32 %15, !dbg !4355
  %17 = load i8, i8* %16, align 1, !dbg !4355, !tbaa !2851
  %18 = zext i8 %17 to i32, !dbg !4355
  call void @llvm.dbg.value(metadata i32 %18, metadata !4334, metadata !DIExpression()), !dbg !4340
  %19 = mul nuw nsw i32 %9, 8000000, !dbg !4356
  %20 = udiv i32 %19, %18, !dbg !4357
  call void @llvm.dbg.value(metadata i32 %20, metadata !4335, metadata !DIExpression()), !dbg !4340
  br label %23, !dbg !4358

21:                                               ; preds = %4
  %22 = mul nuw nsw i32 %9, 4000000, !dbg !4359
  call void @llvm.dbg.value(metadata i32 %22, metadata !4335, metadata !DIExpression()), !dbg !4340
  br label %23

23:                                               ; preds = %0, %12, %21
  %24 = phi i32 [ %20, %12 ], [ %22, %21 ], [ 8000000, %0 ], !dbg !4361
  call void @llvm.dbg.value(metadata i32 %24, metadata !4337, metadata !DIExpression()), !dbg !4340
  ret i32 %24, !dbg !4362
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #3 !dbg !4363 {
  %4 = alloca %struct.DMA_Channel_TypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4367, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.value(metadata i32 %1, metadata !4368, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.value(metadata i32 %2, metadata !4369, metadata !DIExpression()), !dbg !4380
  %6 = bitcast %struct.DMA_Channel_TypeDef* %4 to i8*, !dbg !4381
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #34, !dbg !4381
  call void @llvm.dbg.declare(metadata %struct.DMA_Channel_TypeDef* %4, metadata !4370, metadata !DIExpression()), !dbg !4382
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(16) %6, i8 0, i32 16, i1 false), !dbg !4382
  %7 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %4, i32 0, i32 1, !dbg !4383
  store i32 2, i32* %7, align 4, !dbg !4384, !tbaa !4385
  %8 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %4, i32 0, i32 3, !dbg !4387
  store i32 3, i32* %8, align 4, !dbg !4388, !tbaa !4389
  %9 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %4, i32 0, i32 2, !dbg !4390
  store i32 0, i32* %9, align 4, !dbg !4391, !tbaa !4392
  %10 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %4, i32 0, i32 0, !dbg !4393
  store i32 256, i32* %10, align 4, !dbg !4394, !tbaa !4395
  %11 = bitcast i32* %5 to i8*, !dbg !4396
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11), !dbg !4396
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4378, metadata !DIExpression()), !dbg !4396
  %12 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4396, !tbaa !4397
  %13 = or i32 %12, 4, !dbg !4396
  store volatile i32 %13, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4396, !tbaa !4397
  %14 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4396, !tbaa !4397
  %15 = and i32 %14, 4, !dbg !4396
  store volatile i32 %15, i32* %5, align 4, !dbg !4396, !tbaa !3726
  %16 = load volatile i32, i32* %5, align 4, !dbg !4396, !tbaa !3726
  %17 = bitcast i32* %5 to i8*, !dbg !4398
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17), !dbg !4398
  call void @HAL_GPIO_Init(%struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073809408 to %struct.USART_TypeDef*), %struct.DMA_Channel_TypeDef* noundef nonnull %4) #34, !dbg !4399
  %18 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4400, !tbaa !3683
  %19 = and i32 %18, -117440513, !dbg !4400
  %20 = or i32 %19, %1, !dbg !4400
  store volatile i32 %20, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4400, !tbaa !3683
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #34, !dbg !4401
  ret void, !dbg !4401
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #16 !dbg !4402 {
  store volatile i32 1, i32* inttoptr (i32 1111621708 to i32*), align 4, !dbg !4403, !tbaa !3726
  ret void, !dbg !4404
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #16 !dbg !4405 {
  store volatile i32 0, i32* inttoptr (i32 1111621708 to i32*), align 4, !dbg !4406, !tbaa !3726
  ret void, !dbg !4407
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #18 !dbg !4408 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !4409, !tbaa !3726
  ret i32 %1, !dbg !4410
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #17 !dbg !4411 {
  %1 = call i32 @HAL_RCC_GetHCLKFreq(), !dbg !4412
  %2 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4413, !tbaa !3683
  %3 = lshr i32 %2, 8, !dbg !4414
  %4 = and i32 %3, 7, !dbg !4414
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !4415
  %6 = load i8, i8* %5, align 1, !dbg !4415, !tbaa !2851
  %7 = zext i8 %6 to i32, !dbg !4415
  %8 = lshr i32 %1, %7, !dbg !4416
  ret i32 %8, !dbg !4417
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #17 !dbg !4418 {
  %1 = call i32 @HAL_RCC_GetHCLKFreq(), !dbg !4419
  %2 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4420, !tbaa !3683
  %3 = lshr i32 %2, 11, !dbg !4421
  %4 = and i32 %3, 7, !dbg !4421
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !4422
  %6 = load i8, i8* %5, align 1, !dbg !4422, !tbaa !2851
  %7 = zext i8 %6 to i32, !dbg !4422
  %8 = lshr i32 %1, %7, !dbg !4423
  ret i32 %8, !dbg !4424
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #17 !dbg !4425 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !4429, metadata !DIExpression()), !dbg !4430
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !4431
  store i32 15, i32* %2, align 4, !dbg !4432, !tbaa !3844
  %3 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !4433, !tbaa !3679
  %4 = and i32 %3, 262144, !dbg !4435
  %5 = icmp eq i32 %4, 0, !dbg !4436
  br i1 %5, label %8, label %6, !dbg !4437

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !4438
  store i32 327680, i32* %7, align 4, !dbg !4440, !tbaa !3867
  br label %15, !dbg !4441

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !4442, !tbaa !3679
  %10 = and i32 %9, 65536, !dbg !4444
  %11 = icmp eq i32 %10, 0, !dbg !4445
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !4446
  br i1 %11, label %14, label %13, !dbg !4447

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !4448, !tbaa !3867
  br label %15, !dbg !4450

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !4451, !tbaa !3867
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4453, !tbaa !3683
  %17 = and i32 %16, 131072, !dbg !4453
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !4454
  store i32 %17, i32* %18, align 4, !dbg !4455, !tbaa !4128
  %19 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !4456, !tbaa !3679
  %20 = and i32 %19, 1, !dbg !4458
  %21 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !4459
  store i32 %20, i32* %21, align 4, !dbg !4459, !tbaa !3936
  %22 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !4460, !tbaa !3679
  %23 = lshr i32 %22, 3, !dbg !4461
  %24 = and i32 %23, 31, !dbg !4461
  %25 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !4462
  store i32 %24, i32* %25, align 4, !dbg !4463, !tbaa !3973
  %26 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !4464, !tbaa !4051
  %27 = and i32 %26, 4, !dbg !4466
  %28 = icmp eq i32 %27, 0, !dbg !4467
  br i1 %28, label %31, label %29, !dbg !4468

29:                                               ; preds = %15
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !4469
  store i32 5, i32* %30, align 4, !dbg !4471, !tbaa !4047
  br label %38, !dbg !4472

31:                                               ; preds = %15
  %32 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !4473, !tbaa !4051
  %33 = and i32 %32, 1, !dbg !4475
  %34 = icmp eq i32 %33, 0, !dbg !4476
  %35 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !4477
  br i1 %34, label %37, label %36, !dbg !4478

36:                                               ; preds = %31
  store i32 1, i32* %35, align 4, !dbg !4479, !tbaa !4047
  br label %38, !dbg !4481

37:                                               ; preds = %31
  store i32 0, i32* %35, align 4, !dbg !4482, !tbaa !4047
  br label %38

38:                                               ; preds = %36, %37, %29
  %39 = load volatile i32, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !4484, !tbaa !3801
  %40 = and i32 %39, 1, !dbg !4486
  %41 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !4487
  store i32 %40, i32* %41, align 4, !dbg !4487, !tbaa !3982
  %42 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !4488, !tbaa !3679
  %43 = and i32 %42, 16777216, !dbg !4490
  %44 = icmp eq i32 %43, 0, !dbg !4491
  %45 = select i1 %44, i32 1, i32 2, !dbg !4492
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 0, !dbg !4493
  store i32 %45, i32* %46, align 4, !dbg !4493, !tbaa !4096
  %47 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4494, !tbaa !3683
  %48 = and i32 %47, 65536, !dbg !4495
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 1, !dbg !4496
  store i32 %48, i32* %49, align 4, !dbg !4497, !tbaa !4123
  %50 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4498, !tbaa !3683
  %51 = and i32 %50, 3932160, !dbg !4499
  %52 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 2, !dbg !4500
  store i32 %51, i32* %52, align 4, !dbg !4501, !tbaa !4131
  ret void, !dbg !4502
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #17 !dbg !4503 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !4507, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i32* %1, metadata !4508, metadata !DIExpression()), !dbg !4509
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !4510
  store i32 15, i32* %3, align 4, !dbg !4511, !tbaa !4228
  %4 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4512, !tbaa !3683
  %5 = and i32 %4, 3, !dbg !4513
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !4514
  store i32 %5, i32* %6, align 4, !dbg !4515, !tbaa !4258
  %7 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4516, !tbaa !3683
  %8 = and i32 %7, 240, !dbg !4517
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !4518
  store i32 %8, i32* %9, align 4, !dbg !4519, !tbaa !4249
  %10 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4520, !tbaa !3683
  %11 = and i32 %10, 1792, !dbg !4521
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !4522
  store i32 %11, i32* %12, align 4, !dbg !4523, !tbaa !4308
  %13 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4524, !tbaa !3683
  %14 = lshr i32 %13, 3, !dbg !4525
  %15 = and i32 %14, 1792, !dbg !4525
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !4526
  store i32 %15, i32* %16, align 4, !dbg !4527, !tbaa !4316
  %17 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !4528, !tbaa !4216
  %18 = and i32 %17, 7, !dbg !4529
  store i32 %18, i32* %1, align 4, !dbg !4530, !tbaa !3726
  ret void, !dbg !4531
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #3 !dbg !4532 {
  %1 = load volatile i32, i32* inttoptr (i32 1073877000 to i32*), align 8, !dbg !4533, !tbaa !3688
  %2 = and i32 %1, 128, !dbg !4533
  %3 = icmp eq i32 %2, 0, !dbg !4533
  br i1 %3, label %5, label %4, !dbg !4535

4:                                                ; preds = %0
  call void @HAL_RCC_CSSCallback(), !dbg !4536
  store volatile i8 -128, i8* inttoptr (i32 1073877002 to i8*), align 2, !dbg !4538, !tbaa !2851
  br label %5, !dbg !4539

5:                                                ; preds = %4, %0
  ret void, !dbg !4540
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #3 !dbg !4541 {
  ret void, !dbg !4542
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_Init() local_unnamed_addr #3 !dbg !4543 {
  %1 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !4544, !tbaa !4216
  %2 = or i32 %1, 16, !dbg !4544
  store volatile i32 %2, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !4544, !tbaa !4216
  call void @HAL_NVIC_SetPriorityGrouping(i32 noundef 3) #34, !dbg !4545
  %3 = call i32 @HAL_InitTick(i32 noundef 0), !dbg !4546
  call void @HAL_MspInit(), !dbg !4547
  ret i32 0, !dbg !4548
}

; Function Attrs: noinline nounwind
define weak dso_local i32 @HAL_InitTick(i32 noundef %0) local_unnamed_addr #3 !dbg !4549 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4553, metadata !DIExpression()), !dbg !4554
  %2 = load i32, i32* @SystemCoreClock, align 4, !dbg !4555, !tbaa !3726
  %3 = load i32, i32* @uwTickFreq, align 4, !dbg !4557, !tbaa !2851
  %4 = udiv i32 1000, %3, !dbg !4558
  %5 = udiv i32 %2, %4, !dbg !4559
  %6 = call i32 @HAL_SYSTICK_Config(i32 noundef %5) #34, !dbg !4560
  %7 = icmp eq i32 %6, 0, !dbg !4561
  %8 = icmp ult i32 %0, 16
  %9 = and i1 %8, %7, !dbg !4562
  br i1 %9, label %10, label %11, !dbg !4562

10:                                               ; preds = %1
  call void @HAL_NVIC_SetPriority(i32 noundef -1, i32 noundef %0, i32 noundef 0) #34, !dbg !4563
  store i32 %0, i32* @uwTickPrio, align 4, !dbg !4566, !tbaa !3726
  br label %11, !dbg !4567

11:                                               ; preds = %1, %10
  %12 = phi i32 [ 0, %10 ], [ 1, %1 ], !dbg !4554
  ret i32 %12, !dbg !4568
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_MspInit() local_unnamed_addr #3 !dbg !4569 {
  ret void, !dbg !4570
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_DeInit() local_unnamed_addr #3 !dbg !4571 {
  store volatile i32 -1, i32* inttoptr (i32 1073877004 to i32*), align 4, !dbg !4572, !tbaa !4573
  store volatile i32 0, i32* inttoptr (i32 1073877008 to i32*), align 16, !dbg !4574, !tbaa !4575
  store volatile i32 -1, i32* inttoptr (i32 1073877004 to i32*), align 4, !dbg !4576, !tbaa !4573
  store volatile i32 0, i32* inttoptr (i32 1073877004 to i32*), align 4, !dbg !4577, !tbaa !4573
  call void @HAL_MspDeInit(), !dbg !4578
  ret i32 0, !dbg !4579
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_MspDeInit() local_unnamed_addr #3 !dbg !4580 {
  ret void, !dbg !4581
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_IncTick() local_unnamed_addr #3 !dbg !4582 {
  %1 = load i32, i32* @uwTickFreq, align 4, !dbg !4583, !tbaa !2851
  %2 = load volatile i32, i32* @uwTick, align 4, !dbg !4584, !tbaa !3726
  %3 = add i32 %2, %1, !dbg !4584
  store volatile i32 %3, i32* @uwTick, align 4, !dbg !4584, !tbaa !3726
  ret void, !dbg !4585
}

; Function Attrs: noinline nounwind
define weak dso_local i32 @HAL_GetTick() local_unnamed_addr #3 !dbg !4586 {
  %1 = load volatile i32, i32* @uwTick, align 4, !dbg !4587, !tbaa !3726
  ret i32 %1, !dbg !4588
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetTickPrio() local_unnamed_addr #18 !dbg !4589 {
  %1 = load i32, i32* @uwTickPrio, align 4, !dbg !4590, !tbaa !3726
  ret i32 %1, !dbg !4591
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_SetTickFreq(i32 noundef %0) local_unnamed_addr #3 !dbg !4592 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4596, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i32 0, metadata !4597, metadata !DIExpression()), !dbg !4598
  %2 = load i32, i32* @uwTickFreq, align 4, !dbg !4599, !tbaa !2851
  %3 = icmp eq i32 %2, %0, !dbg !4601
  br i1 %3, label %9, label %4, !dbg !4602

4:                                                ; preds = %1
  %5 = load i32, i32* @uwTickPrio, align 4, !dbg !4603, !tbaa !3726
  %6 = call i32 @HAL_InitTick(i32 noundef %5), !dbg !4605
  call void @llvm.dbg.value(metadata i32 %6, metadata !4597, metadata !DIExpression()), !dbg !4598
  %7 = icmp eq i32 %6, 0, !dbg !4606
  br i1 %7, label %8, label %9, !dbg !4608

8:                                                ; preds = %4
  store i32 %0, i32* @uwTickFreq, align 4, !dbg !4609, !tbaa !2851
  br label %9, !dbg !4611

9:                                                ; preds = %4, %8, %1
  %10 = phi i32 [ 0, %8 ], [ %6, %4 ], [ 0, %1 ], !dbg !4598
  call void @llvm.dbg.value(metadata i32 %10, metadata !4597, metadata !DIExpression()), !dbg !4598
  ret i32 %10, !dbg !4612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetTickFreq() local_unnamed_addr #18 !dbg !4613 {
  %1 = load i32, i32* @uwTickFreq, align 4, !dbg !4616, !tbaa !2851
  ret i32 %1, !dbg !4617
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_Delay(i32 noundef %0) local_unnamed_addr #3 !dbg !4618 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4620, metadata !DIExpression()), !dbg !4623
  %2 = call i32 @HAL_GetTick(), !dbg !4624
  call void @llvm.dbg.value(metadata i32 %2, metadata !4621, metadata !DIExpression()), !dbg !4623
  call void @llvm.dbg.value(metadata i32 %0, metadata !4622, metadata !DIExpression()), !dbg !4623
  %3 = icmp eq i32 %0, -1, !dbg !4625
  %4 = load i32, i32* @uwTickFreq, align 4, !dbg !4627
  %5 = add i32 %4, %0, !dbg !4627
  %6 = select i1 %3, i32 -1, i32 %5, !dbg !4627
  call void @llvm.dbg.value(metadata i32 %6, metadata !4622, metadata !DIExpression()), !dbg !4623
  br label %7, !dbg !4628

7:                                                ; preds = %7, %1
  %8 = call i32 @HAL_GetTick(), !dbg !4629
  %9 = sub i32 %8, %2, !dbg !4630
  %10 = icmp ult i32 %9, %6, !dbg !4631
  br i1 %10, label %7, label %11, !dbg !4628, !llvm.loop !4632

11:                                               ; preds = %7
  ret void, !dbg !4634
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_SuspendTick() local_unnamed_addr #3 !dbg !4635 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !4636, !tbaa !4395
  %2 = and i32 %1, -3, !dbg !4636
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !4636, !tbaa !4395
  ret void, !dbg !4637
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_ResumeTick() local_unnamed_addr #3 !dbg !4638 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !4639, !tbaa !4395
  %2 = or i32 %1, 2, !dbg !4639
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !4639, !tbaa !4395
  ret void, !dbg !4640
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define dso_local i32 @HAL_GetHalVersion() local_unnamed_addr #12 !dbg !4641 {
  ret i32 16843776, !dbg !4642
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_GetREVID() local_unnamed_addr #17 !dbg !4643 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600576 to i32*), align 8192, !dbg !4644, !tbaa !4028
  %2 = lshr i32 %1, 16, !dbg !4645
  ret i32 %2, !dbg !4646
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_GetDEVID() local_unnamed_addr #17 !dbg !4647 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600576 to i32*), align 8192, !dbg !4648, !tbaa !4028
  %2 = and i32 %1, 4095, !dbg !4649
  ret i32 %2, !dbg !4650
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetUIDw0() local_unnamed_addr #18 !dbg !4651 {
  %1 = load i32, i32* inttoptr (i32 536868840 to i32*), align 8, !dbg !4652, !tbaa !3726
  ret i32 %1, !dbg !4653
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetUIDw1() local_unnamed_addr #18 !dbg !4654 {
  %1 = load i32, i32* inttoptr (i32 536868844 to i32*), align 4, !dbg !4655, !tbaa !3726
  ret i32 %1, !dbg !4656
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetUIDw2() local_unnamed_addr #18 !dbg !4657 {
  %1 = load i32, i32* inttoptr (i32 536868848 to i32*), align 16, !dbg !4658, !tbaa !3726
  ret i32 %1, !dbg !4659
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_EnableDBGSleepMode() local_unnamed_addr #16 !dbg !4660 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4661, !tbaa !4662
  %2 = or i32 %1, 1, !dbg !4661
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4661, !tbaa !4662
  ret void, !dbg !4663
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_DisableDBGSleepMode() local_unnamed_addr #16 !dbg !4664 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4665, !tbaa !4662
  %2 = and i32 %1, -2, !dbg !4665
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4665, !tbaa !4662
  ret void, !dbg !4666
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_EnableDBGStopMode() local_unnamed_addr #16 !dbg !4667 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4668, !tbaa !4662
  %2 = or i32 %1, 2, !dbg !4668
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4668, !tbaa !4662
  ret void, !dbg !4669
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_DisableDBGStopMode() local_unnamed_addr #16 !dbg !4670 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4671, !tbaa !4662
  %2 = and i32 %1, -3, !dbg !4671
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4671, !tbaa !4662
  ret void, !dbg !4672
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_EnableDBGStandbyMode() local_unnamed_addr #16 !dbg !4673 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4674, !tbaa !4662
  %2 = or i32 %1, 4, !dbg !4674
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4674, !tbaa !4662
  ret void, !dbg !4675
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_DisableDBGStandbyMode() local_unnamed_addr #16 !dbg !4676 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4677, !tbaa !4662
  %2 = and i32 %1, -5, !dbg !4677
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4677, !tbaa !4662
  ret void, !dbg !4678
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_NVIC_SetPriorityGrouping(i32 noundef %0) local_unnamed_addr #16 !dbg !4679 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4681, metadata !DIExpression()), !dbg !4682
  call fastcc void @__NVIC_SetPriorityGrouping(i32 noundef %0), !dbg !4683
  ret void, !dbg !4684
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_SetPriorityGrouping(i32 noundef %0) unnamed_addr #16 !dbg !4685 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4687, metadata !DIExpression()), !dbg !4690
  call void @llvm.dbg.value(metadata i32 %0, metadata !4689, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4690
  %2 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !4691, !tbaa !4692
  call void @llvm.dbg.value(metadata i32 %2, metadata !4688, metadata !DIExpression()), !dbg !4690
  %3 = and i32 %2, 63743, !dbg !4693
  call void @llvm.dbg.value(metadata i32 %3, metadata !4688, metadata !DIExpression()), !dbg !4690
  %4 = shl i32 %0, 8, !dbg !4694
  %5 = and i32 %4, 1792, !dbg !4694
  %6 = or i32 %5, %3, !dbg !4695
  %7 = or i32 %6, 100270080, !dbg !4695
  call void @llvm.dbg.value(metadata i32 %7, metadata !4688, metadata !DIExpression()), !dbg !4690
  store volatile i32 %7, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !4696, !tbaa !4692
  ret void, !dbg !4697
}

; Function Attrs: nofree noinline nounwind
define dso_local void @HAL_NVIC_SetPriority(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !4698 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4703, metadata !DIExpression()), !dbg !4707
  call void @llvm.dbg.value(metadata i32 %1, metadata !4704, metadata !DIExpression()), !dbg !4707
  call void @llvm.dbg.value(metadata i32 %2, metadata !4705, metadata !DIExpression()), !dbg !4707
  call void @llvm.dbg.value(metadata i32 0, metadata !4706, metadata !DIExpression()), !dbg !4707
  %4 = call fastcc i32 @__NVIC_GetPriorityGrouping(), !dbg !4708, !range !4709
  call void @llvm.dbg.value(metadata i32 %4, metadata !4706, metadata !DIExpression()), !dbg !4707
  %5 = call fastcc i32 @NVIC_EncodePriority(i32 noundef %4, i32 noundef %1, i32 noundef %2), !dbg !4710
  call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %5), !dbg !4711
  ret void, !dbg !4712
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define internal fastcc i32 @__NVIC_GetPriorityGrouping() unnamed_addr #17 !dbg !4713 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !4714, !tbaa !4692
  %2 = lshr i32 %1, 8, !dbg !4715
  %3 = and i32 %2, 7, !dbg !4715
  ret i32 %3, !dbg !4716
}

; Function Attrs: mustprogress nofree noinline nosync nounwind readnone willreturn
define internal fastcc i32 @NVIC_EncodePriority(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #20 !dbg !4717 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4721, metadata !DIExpression()), !dbg !4727
  call void @llvm.dbg.value(metadata i32 %1, metadata !4722, metadata !DIExpression()), !dbg !4727
  call void @llvm.dbg.value(metadata i32 %2, metadata !4723, metadata !DIExpression()), !dbg !4727
  %4 = and i32 %0, 7, !dbg !4728
  call void @llvm.dbg.value(metadata i32 %4, metadata !4724, metadata !DIExpression()), !dbg !4727
  %5 = xor i32 %4, 7, !dbg !4729
  %6 = icmp ult i32 %5, 4, !dbg !4730
  %7 = select i1 %6, i32 %5, i32 4, !dbg !4730
  call void @llvm.dbg.value(metadata i32 %7, metadata !4725, metadata !DIExpression()), !dbg !4727
  %8 = call i32 @llvm.usub.sat.i32(i32 %4, i32 3), !dbg !4731
  call void @llvm.dbg.value(metadata i32 %8, metadata !4726, metadata !DIExpression()), !dbg !4727
  %9 = shl nsw i32 -1, %7, !dbg !4732
  %10 = xor i32 %9, -1, !dbg !4732
  %11 = and i32 %10, %1, !dbg !4733
  %12 = shl i32 %11, %8, !dbg !4734
  %13 = shl nsw i32 -1, %8, !dbg !4735
  %14 = xor i32 %13, -1, !dbg !4735
  %15 = and i32 %14, %2, !dbg !4736
  %16 = or i32 %12, %15, !dbg !4737
  ret i32 %16, !dbg !4738
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !4739 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4743, metadata !DIExpression()), !dbg !4745
  call void @llvm.dbg.value(metadata i32 %1, metadata !4744, metadata !DIExpression()), !dbg !4745
  %3 = trunc i32 %1 to i8, !dbg !4746
  %4 = shl i8 %3, 4, !dbg !4746
  %5 = and i32 %0, 15, !dbg !4748
  %6 = add nsw i32 %5, -4, !dbg !4748
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !4748
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !4748
  %9 = icmp slt i32 %0, 0, !dbg !4748
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !4748
  store volatile i8 %4, i8* %10, align 1, !dbg !4746, !tbaa !2851
  ret void, !dbg !4749
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_NVIC_EnableIRQ(i32 noundef %0) local_unnamed_addr #16 !dbg !4750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4754, metadata !DIExpression()), !dbg !4755
  call fastcc void @__NVIC_EnableIRQ(i32 noundef %0), !dbg !4756
  ret void, !dbg !4757
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #16 !dbg !4758 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4760, metadata !DIExpression()), !dbg !4761
  %2 = icmp sgt i32 %0, -1, !dbg !4762
  br i1 %2, label %3, label %8, !dbg !4764

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !4765
  %5 = shl i32 1, %4, !dbg !4767
  %6 = lshr i32 %0, 5, !dbg !4768
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !4769
  store volatile i32 %5, i32* %7, align 4, !dbg !4770, !tbaa !3726
  br label %8, !dbg !4771

8:                                                ; preds = %3, %1
  ret void, !dbg !4772
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_NVIC_DisableIRQ(i32 noundef %0) local_unnamed_addr #3 !dbg !4773 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4775, metadata !DIExpression()), !dbg !4776
  call fastcc void @__NVIC_DisableIRQ(i32 noundef %0), !dbg !4777
  ret void, !dbg !4778
}

; Function Attrs: noinline nounwind
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #3 !dbg !4779 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4781, metadata !DIExpression()), !dbg !4782
  %2 = icmp sgt i32 %0, -1, !dbg !4783
  br i1 %2, label %3, label %8, !dbg !4785

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !4786
  %5 = shl i32 1, %4, !dbg !4788
  %6 = lshr i32 %0, 5, !dbg !4789
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !4790
  store volatile i32 %5, i32* %7, align 4, !dbg !4791, !tbaa !3726
  call void asm sideeffect "dsb 0xF", "~{memory}"() #34, !dbg !4792, !srcloc !4796
  call void asm sideeffect "isb 0xF", "~{memory}"() #34, !dbg !4797, !srcloc !4800
  br label %8, !dbg !4801

8:                                                ; preds = %3, %1
  ret void, !dbg !4802
}

; Function Attrs: noinline noreturn nounwind
define dso_local void @HAL_NVIC_SystemReset() local_unnamed_addr #21 !dbg !4803 {
  call fastcc void @__NVIC_SystemReset() #37, !dbg !4804
  unreachable, !dbg !4804
}

; Function Attrs: noinline noreturn nounwind
define internal fastcc void @__NVIC_SystemReset() unnamed_addr #21 !dbg !4805 {
  call void asm sideeffect "dsb 0xF", "~{memory}"() #34, !dbg !4806, !srcloc !4796
  %1 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !4808, !tbaa !4692
  %2 = and i32 %1, 1792, !dbg !4809
  %3 = or i32 %2, 100270084, !dbg !4810
  store volatile i32 %3, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !4811, !tbaa !4692
  call void asm sideeffect "dsb 0xF", "~{memory}"() #34, !dbg !4812, !srcloc !4796
  br label %4, !dbg !4814

4:                                                ; preds = %4, %0
  call void asm sideeffect "nop", ""() #34, !dbg !4815, !srcloc !4819
  br label %4, !dbg !4820, !llvm.loop !4821
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_SYSTICK_Config(i32 noundef %0) local_unnamed_addr #16 !dbg !4824 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4828, metadata !DIExpression()), !dbg !4829
  %2 = call fastcc i32 @SysTick_Config(i32 noundef %0), !dbg !4830
  ret i32 %2, !dbg !4831
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc i32 @SysTick_Config(i32 noundef %0) unnamed_addr #16 !dbg !4832 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4834, metadata !DIExpression()), !dbg !4835
  %2 = add i32 %0, -1, !dbg !4836
  %3 = icmp ugt i32 %2, 16777215, !dbg !4838
  br i1 %3, label %5, label %4, !dbg !4839

4:                                                ; preds = %1
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !4840, !tbaa !4385
  call fastcc void @__NVIC_SetPriority(i32 noundef -1, i32 noundef 15), !dbg !4841
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !4842, !tbaa !4392
  store volatile i32 7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !4843, !tbaa !4395
  br label %5, !dbg !4844

5:                                                ; preds = %1, %4
  %6 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !4835
  ret i32 %6, !dbg !4845
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_NVIC_GetPriorityGrouping() local_unnamed_addr #17 !dbg !4846 {
  %1 = call fastcc i32 @__NVIC_GetPriorityGrouping(), !dbg !4847
  ret i32 %1, !dbg !4848
}

; Function Attrs: mustprogress nofree noinline nounwind willreturn
define dso_local void @HAL_NVIC_GetPriority(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #22 !dbg !4849 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4853, metadata !DIExpression()), !dbg !4857
  call void @llvm.dbg.value(metadata i32 %1, metadata !4854, metadata !DIExpression()), !dbg !4857
  call void @llvm.dbg.value(metadata i32* %2, metadata !4855, metadata !DIExpression()), !dbg !4857
  call void @llvm.dbg.value(metadata i32* %3, metadata !4856, metadata !DIExpression()), !dbg !4857
  %5 = call fastcc i32 @__NVIC_GetPriority(i32 noundef %0), !dbg !4858, !range !4859
  call fastcc void @NVIC_DecodePriority(i32 noundef %5, i32 noundef %1, i32* noundef %2, i32* noundef %3), !dbg !4860
  ret void, !dbg !4861
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define internal fastcc i32 @__NVIC_GetPriority(i32 noundef %0) unnamed_addr #17 !dbg !4862 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4866, metadata !DIExpression()), !dbg !4867
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !4868
  %3 = and i32 %0, 15, !dbg !4868
  %4 = add nsw i32 %3, -4, !dbg !4868
  %5 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %4, !dbg !4868
  %6 = icmp slt i32 %0, 0, !dbg !4868
  %7 = select i1 %6, i8* %5, i8* %2, !dbg !4868
  %8 = load volatile i8, i8* %7, align 1, !dbg !4869, !tbaa !2851
  %9 = lshr i8 %8, 4, !dbg !4869
  %10 = zext i8 %9 to i32, !dbg !4869
  ret i32 %10, !dbg !4871
}

; Function Attrs: mustprogress nofree noinline nosync nounwind willreturn writeonly
define internal fastcc void @NVIC_DecodePriority(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2, i32* nocapture noundef writeonly %3) unnamed_addr #23 !dbg !4872 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4877, metadata !DIExpression()), !dbg !4884
  call void @llvm.dbg.value(metadata i32 %1, metadata !4878, metadata !DIExpression()), !dbg !4884
  call void @llvm.dbg.value(metadata i32* %2, metadata !4879, metadata !DIExpression()), !dbg !4884
  call void @llvm.dbg.value(metadata i32* %3, metadata !4880, metadata !DIExpression()), !dbg !4884
  %5 = and i32 %1, 7, !dbg !4885
  call void @llvm.dbg.value(metadata i32 %5, metadata !4881, metadata !DIExpression()), !dbg !4884
  %6 = xor i32 %5, 7, !dbg !4886
  %7 = icmp ult i32 %6, 4, !dbg !4887
  %8 = select i1 %7, i32 %6, i32 4, !dbg !4887
  call void @llvm.dbg.value(metadata i32 %8, metadata !4882, metadata !DIExpression()), !dbg !4884
  %9 = call i32 @llvm.usub.sat.i32(i32 %5, i32 3), !dbg !4888
  call void @llvm.dbg.value(metadata i32 %9, metadata !4883, metadata !DIExpression()), !dbg !4884
  %10 = lshr i32 %0, %9, !dbg !4889
  %11 = shl nsw i32 -1, %8, !dbg !4890
  %12 = xor i32 %11, -1, !dbg !4890
  %13 = and i32 %10, %12, !dbg !4891
  store i32 %13, i32* %2, align 4, !dbg !4892, !tbaa !3726
  %14 = shl nsw i32 -1, %9, !dbg !4893
  %15 = xor i32 %14, -1, !dbg !4893
  %16 = and i32 %15, %0, !dbg !4894
  store i32 %16, i32* %3, align 4, !dbg !4895, !tbaa !3726
  ret void, !dbg !4896
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_NVIC_SetPendingIRQ(i32 noundef %0) local_unnamed_addr #16 !dbg !4897 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4899, metadata !DIExpression()), !dbg !4900
  call fastcc void @__NVIC_SetPendingIRQ(i32 noundef %0), !dbg !4901
  ret void, !dbg !4902
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #16 !dbg !4903 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4905, metadata !DIExpression()), !dbg !4906
  %2 = icmp sgt i32 %0, -1, !dbg !4907
  br i1 %2, label %3, label %8, !dbg !4909

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !4910
  %5 = shl i32 1, %4, !dbg !4912
  %6 = lshr i32 %0, 5, !dbg !4913
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %6, !dbg !4914
  store volatile i32 %5, i32* %7, align 4, !dbg !4915, !tbaa !3726
  br label %8, !dbg !4916

8:                                                ; preds = %3, %1
  ret void, !dbg !4917
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_NVIC_GetPendingIRQ(i32 noundef %0) local_unnamed_addr #17 !dbg !4918 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4920, metadata !DIExpression()), !dbg !4921
  %2 = call fastcc i32 @__NVIC_GetPendingIRQ(i32 noundef %0), !dbg !4922
  ret i32 %2, !dbg !4923
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define internal fastcc i32 @__NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #17 !dbg !4924 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4926, metadata !DIExpression()), !dbg !4927
  %2 = icmp sgt i32 %0, -1, !dbg !4928
  br i1 %2, label %3, label %10, !dbg !4930

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4931
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !4933
  %6 = load volatile i32, i32* %5, align 4, !dbg !4933, !tbaa !3726
  %7 = and i32 %0, 31, !dbg !4934
  %8 = lshr i32 %6, %7, !dbg !4935
  %9 = and i32 %8, 1, !dbg !4935
  br label %10, !dbg !4936

10:                                               ; preds = %1, %3
  %11 = phi i32 [ %9, %3 ], [ 0, %1 ], !dbg !4937
  ret i32 %11, !dbg !4938
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_NVIC_ClearPendingIRQ(i32 noundef %0) local_unnamed_addr #16 !dbg !4939 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4941, metadata !DIExpression()), !dbg !4942
  call fastcc void @__NVIC_ClearPendingIRQ(i32 noundef %0), !dbg !4943
  ret void, !dbg !4944
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #16 !dbg !4945 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4947, metadata !DIExpression()), !dbg !4948
  %2 = icmp sgt i32 %0, -1, !dbg !4949
  br i1 %2, label %3, label %8, !dbg !4951

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !4952
  %5 = shl i32 1, %4, !dbg !4954
  %6 = lshr i32 %0, 5, !dbg !4955
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %6, !dbg !4956
  store volatile i32 %5, i32* %7, align 4, !dbg !4957, !tbaa !3726
  br label %8, !dbg !4958

8:                                                ; preds = %3, %1
  ret void, !dbg !4959
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_NVIC_GetActive(i32 noundef %0) local_unnamed_addr #17 !dbg !4960 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4962, metadata !DIExpression()), !dbg !4963
  %2 = call fastcc i32 @__NVIC_GetActive(i32 noundef %0), !dbg !4964
  ret i32 %2, !dbg !4965
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define internal fastcc i32 @__NVIC_GetActive(i32 noundef %0) unnamed_addr #17 !dbg !4966 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4968, metadata !DIExpression()), !dbg !4969
  %2 = icmp sgt i32 %0, -1, !dbg !4970
  br i1 %2, label %3, label %10, !dbg !4972

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4973
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812800 to [8 x i32]*), i32 0, i32 %4, !dbg !4975
  %6 = load volatile i32, i32* %5, align 4, !dbg !4975, !tbaa !3726
  %7 = and i32 %0, 31, !dbg !4976
  %8 = lshr i32 %6, %7, !dbg !4977
  %9 = and i32 %8, 1, !dbg !4977
  br label %10, !dbg !4978

10:                                               ; preds = %1, %3
  %11 = phi i32 [ %9, %3 ], [ 0, %1 ], !dbg !4979
  ret i32 %11, !dbg !4980
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_SYSTICK_CLKSourceConfig(i32 noundef %0) local_unnamed_addr #16 !dbg !4981 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4983, metadata !DIExpression()), !dbg !4984
  %2 = icmp eq i32 %0, 4, !dbg !4985
  %3 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !4987, !tbaa !4395
  %4 = and i32 %3, -5, !dbg !4988
  %5 = select i1 %2, i32 4, i32 0, !dbg !4988
  %6 = or i32 %4, %5, !dbg !4988
  store volatile i32 %6, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !4987, !tbaa !4395
  ret void, !dbg !4989
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_SYSTICK_IRQHandler() local_unnamed_addr #3 !dbg !4990 {
  call void @HAL_SYSTICK_Callback(), !dbg !4991
  ret void, !dbg !4992
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_SYSTICK_Callback() local_unnamed_addr #3 !dbg !4993 {
  ret void, !dbg !4994
}

; Function Attrs: nofree noinline nounwind
define dso_local void @HAL_GPIO_Init(%struct.USART_TypeDef* noundef %0, %struct.DMA_Channel_TypeDef* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !4995 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !5007, metadata !DIExpression()), !dbg !5023
  call void @llvm.dbg.value(metadata %struct.DMA_Channel_TypeDef* %1, metadata !5008, metadata !DIExpression()), !dbg !5023
  call void @llvm.dbg.value(metadata i32 0, metadata !5009, metadata !DIExpression()), !dbg !5023
  call void @llvm.dbg.value(metadata i32 0, metadata !5013, metadata !DIExpression()), !dbg !5023
  %4 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !5009, metadata !DIExpression()), !dbg !5023
  call void @llvm.dbg.value(metadata i32 0, metadata !5013, metadata !DIExpression()), !dbg !5023
  %5 = load i32, i32* %4, align 4, !dbg !5024, !tbaa !4395
  %6 = icmp eq i32 %5, 0, !dbg !5025
  br i1 %6, label %135, label %7, !dbg !5026

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 1
  %9 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 2
  %10 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4
  %11 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  %12 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 3
  %13 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 3
  %14 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 3
  %15 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 3
  %16 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0
  %17 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1
  %18 = ptrtoint %struct.USART_TypeDef* %0 to i32
  %19 = icmp eq %struct.USART_TypeDef* %0, inttoptr (i32 1073812480 to %struct.USART_TypeDef*)
  %20 = select i1 %19, i32 3, i32 4
  %21 = bitcast i32* %3 to i8*
  %22 = bitcast i32* %3 to i8*
  br label %23, !dbg !5026

23:                                               ; preds = %7, %129
  %24 = phi i32 [ %5, %7 ], [ %132, %129 ]
  %25 = phi i32 [ 0, %7 ], [ %131, %129 ]
  %26 = phi i32 [ 0, %7 ], [ %130, %129 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !5009, metadata !DIExpression()), !dbg !5023
  call void @llvm.dbg.value(metadata i32 %26, metadata !5013, metadata !DIExpression()), !dbg !5023
  %27 = shl i32 1, %25, !dbg !5027
  call void @llvm.dbg.value(metadata i32 %27, metadata !5010, metadata !DIExpression()), !dbg !5023
  %28 = and i32 %24, %27, !dbg !5028
  call void @llvm.dbg.value(metadata i32 %28, metadata !5011, metadata !DIExpression()), !dbg !5023
  %29 = icmp eq i32 %28, %27, !dbg !5029
  br i1 %29, label %30, label %129, !dbg !5030

30:                                               ; preds = %23
  %31 = load i32, i32* %8, align 4, !dbg !5031, !tbaa !4385
  switch i32 %31, label %48 [
    i32 1, label %32
    i32 17, label %34
    i32 2, label %37
    i32 18, label %40
    i32 0, label %43
    i32 269549568, label %43
    i32 270598144, label %43
    i32 271646720, label %43
    i32 269615104, label %43
    i32 270663680, label %43
    i32 271712256, label %43
    i32 3, label %47
  ], !dbg !5032

32:                                               ; preds = %30
  %33 = load i32, i32* %15, align 4, !dbg !5033, !tbaa !4389
  call void @llvm.dbg.value(metadata i32 %33, metadata !5013, metadata !DIExpression()), !dbg !5023
  br label %48, !dbg !5035

34:                                               ; preds = %30
  %35 = load i32, i32* %14, align 4, !dbg !5036, !tbaa !4389
  %36 = add i32 %35, 4, !dbg !5037
  call void @llvm.dbg.value(metadata i32 %36, metadata !5013, metadata !DIExpression()), !dbg !5023
  br label %48, !dbg !5038

37:                                               ; preds = %30
  %38 = load i32, i32* %13, align 4, !dbg !5039, !tbaa !4389
  %39 = add i32 %38, 8, !dbg !5040
  call void @llvm.dbg.value(metadata i32 %39, metadata !5013, metadata !DIExpression()), !dbg !5023
  br label %48, !dbg !5041

40:                                               ; preds = %30
  %41 = load i32, i32* %12, align 4, !dbg !5042, !tbaa !4389
  %42 = add i32 %41, 12, !dbg !5043
  call void @llvm.dbg.value(metadata i32 %42, metadata !5013, metadata !DIExpression()), !dbg !5023
  br label %48, !dbg !5044

43:                                               ; preds = %30, %30, %30, %30, %30, %30, %30
  %44 = load i32, i32* %9, align 4, !dbg !5045, !tbaa !4392
  switch i32 %44, label %46 [
    i32 0, label %48
    i32 1, label %45
  ], !dbg !5047

45:                                               ; preds = %43
  call void @llvm.dbg.value(metadata i32 8, metadata !5013, metadata !DIExpression()), !dbg !5023
  store volatile i32 %27, i32* %10, align 4, !dbg !5048, !tbaa !5051
  br label %48, !dbg !5053

46:                                               ; preds = %43
  call void @llvm.dbg.value(metadata i32 8, metadata !5013, metadata !DIExpression()), !dbg !5023
  store volatile i32 %27, i32* %11, align 4, !dbg !5054, !tbaa !5056
  br label %48

47:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 0, metadata !5013, metadata !DIExpression()), !dbg !5023
  br label %48, !dbg !5057

48:                                               ; preds = %43, %30, %46, %45, %47, %40, %37, %34, %32
  %49 = phi i32 [ %26, %30 ], [ 0, %47 ], [ 8, %45 ], [ 8, %46 ], [ %42, %40 ], [ %39, %37 ], [ %36, %34 ], [ %33, %32 ], [ 4, %43 ], !dbg !5023
  call void @llvm.dbg.value(metadata i32 %49, metadata !5013, metadata !DIExpression()), !dbg !5023
  %50 = icmp ult i32 %28, 256, !dbg !5058
  %51 = select i1 %50, i32* %16, i32* %17, !dbg !5059
  call void @llvm.dbg.value(metadata i32* %51, metadata !5014, metadata !DIExpression()), !dbg !5023
  %52 = shl i32 %25, 2, !dbg !5060
  %53 = add i32 %52, -32, !dbg !5060
  %54 = select i1 %50, i32 %52, i32 %53, !dbg !5060
  call void @llvm.dbg.value(metadata i32 %54, metadata !5015, metadata !DIExpression()), !dbg !5023
  %55 = load volatile i32, i32* %51, align 4, !dbg !5061, !tbaa !3726
  %56 = shl i32 15, %54, !dbg !5061
  %57 = xor i32 %56, -1, !dbg !5061
  %58 = and i32 %55, %57, !dbg !5061
  %59 = shl i32 %49, %54, !dbg !5061
  %60 = or i32 %58, %59, !dbg !5061
  store volatile i32 %60, i32* %51, align 4, !dbg !5061, !tbaa !3726
  %61 = load i32, i32* %8, align 4, !dbg !5062, !tbaa !4385
  %62 = and i32 %61, 268435456, !dbg !5063
  %63 = icmp eq i32 %62, 0, !dbg !5064
  br i1 %63, label %129, label %64, !dbg !5065

64:                                               ; preds = %48
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !5066
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5016, metadata !DIExpression()), !dbg !5066
  %65 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !5066, !tbaa !4397
  %66 = or i32 %65, 1, !dbg !5066
  store volatile i32 %66, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !5066, !tbaa !4397
  %67 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !5066, !tbaa !4397
  %68 = and i32 %67, 1, !dbg !5066
  store volatile i32 %68, i32* %3, align 4, !dbg !5066, !tbaa !3726
  %69 = load volatile i32, i32* %3, align 4, !dbg !5066, !tbaa !3726
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22), !dbg !5067
  %70 = lshr i32 %25, 2, !dbg !5068
  %71 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %70, !dbg !5069
  %72 = load volatile i32, i32* %71, align 4, !dbg !5069, !tbaa !3726
  call void @llvm.dbg.value(metadata i32 %72, metadata !5012, metadata !DIExpression()), !dbg !5023
  %73 = and i32 %52, 12, !dbg !5070
  %74 = shl i32 15, %73, !dbg !5070
  %75 = xor i32 %74, -1, !dbg !5070
  %76 = and i32 %72, %75, !dbg !5070
  call void @llvm.dbg.value(metadata i32 %76, metadata !5012, metadata !DIExpression()), !dbg !5023
  switch i32 %18, label %77 [
    i32 1073809408, label %80
    i32 1073810432, label %78
    i32 1073811456, label %79
  ], !dbg !5071

77:                                               ; preds = %64
  br label %80, !dbg !5071

78:                                               ; preds = %64
  br label %80, !dbg !5071

79:                                               ; preds = %64
  br label %80, !dbg !5071

80:                                               ; preds = %64, %79, %78, %77
  %81 = phi i32 [ 0, %64 ], [ %20, %77 ], [ 1, %78 ], [ 2, %79 ], !dbg !5071
  %82 = shl i32 %81, %73, !dbg !5071
  %83 = or i32 %82, %76, !dbg !5071
  call void @llvm.dbg.value(metadata i32 %83, metadata !5012, metadata !DIExpression()), !dbg !5023
  store volatile i32 %83, i32* %71, align 4, !dbg !5072, !tbaa !3726
  %84 = load i32, i32* %8, align 4, !dbg !5073, !tbaa !4385
  %85 = and i32 %84, 65536, !dbg !5075
  %86 = icmp eq i32 %85, 0, !dbg !5076
  br i1 %86, label %90, label %87, !dbg !5077

87:                                               ; preds = %80
  %88 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !5078, !tbaa !5080
  %89 = or i32 %88, %28, !dbg !5078
  br label %94, !dbg !5082

90:                                               ; preds = %80
  %91 = xor i32 %28, -1, !dbg !5083
  %92 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !5083, !tbaa !5080
  %93 = and i32 %92, %91, !dbg !5083
  br label %94

94:                                               ; preds = %90, %87
  %95 = phi i32 [ %93, %90 ], [ %89, %87 ]
  store volatile i32 %95, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !5085, !tbaa !5080
  %96 = and i32 %84, 131072, !dbg !5086
  %97 = icmp eq i32 %96, 0, !dbg !5088
  br i1 %97, label %101, label %98, !dbg !5089

98:                                               ; preds = %94
  %99 = load volatile i32, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !5090, !tbaa !5092
  %100 = or i32 %99, %28, !dbg !5090
  br label %105, !dbg !5093

101:                                              ; preds = %94
  %102 = xor i32 %28, -1, !dbg !5094
  %103 = load volatile i32, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !5094, !tbaa !5092
  %104 = and i32 %103, %102, !dbg !5094
  br label %105

105:                                              ; preds = %101, %98
  %106 = phi i32 [ %104, %101 ], [ %100, %98 ]
  store volatile i32 %106, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !5096, !tbaa !5092
  %107 = and i32 %84, 1048576, !dbg !5097
  %108 = icmp eq i32 %107, 0, !dbg !5099
  br i1 %108, label %112, label %109, !dbg !5100

109:                                              ; preds = %105
  %110 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !5101, !tbaa !5103
  %111 = or i32 %110, %28, !dbg !5101
  br label %116, !dbg !5104

112:                                              ; preds = %105
  %113 = xor i32 %28, -1, !dbg !5105
  %114 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !5105, !tbaa !5103
  %115 = and i32 %114, %113, !dbg !5105
  br label %116

116:                                              ; preds = %112, %109
  %117 = phi i32 [ %115, %112 ], [ %111, %109 ]
  store volatile i32 %117, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !5107, !tbaa !5103
  %118 = and i32 %84, 2097152, !dbg !5108
  %119 = icmp eq i32 %118, 0, !dbg !5110
  br i1 %119, label %123, label %120, !dbg !5111

120:                                              ; preds = %116
  %121 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !5112, !tbaa !5114
  %122 = or i32 %121, %28, !dbg !5112
  br label %127, !dbg !5115

123:                                              ; preds = %116
  %124 = xor i32 %28, -1, !dbg !5116
  %125 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !5116, !tbaa !5114
  %126 = and i32 %125, %124, !dbg !5116
  br label %127

127:                                              ; preds = %120, %123
  %128 = phi i32 [ %126, %123 ], [ %122, %120 ]
  store volatile i32 %128, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !5118, !tbaa !5114
  br label %129, !dbg !5119

129:                                              ; preds = %127, %48, %23
  %130 = phi i32 [ %49, %48 ], [ %26, %23 ], [ %49, %127 ], !dbg !5120
  call void @llvm.dbg.value(metadata i32 %130, metadata !5013, metadata !DIExpression()), !dbg !5023
  %131 = add i32 %25, 1, !dbg !5119
  call void @llvm.dbg.value(metadata i32 %131, metadata !5009, metadata !DIExpression()), !dbg !5023
  %132 = load i32, i32* %4, align 4, !dbg !5024, !tbaa !4395
  %133 = lshr i32 %132, %131, !dbg !5121
  %134 = icmp eq i32 %133, 0, !dbg !5025
  br i1 %134, label %135, label %23, !dbg !5026, !llvm.loop !5122

135:                                              ; preds = %129, %2
  ret void, !dbg !5124
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_GPIO_DeInit(%struct.USART_TypeDef* noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !5125 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !5129, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.value(metadata i32 %1, metadata !5130, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.value(metadata i32 0, metadata !5131, metadata !DIExpression()), !dbg !5136
  %3 = icmp eq i32 %1, 0, !dbg !5137
  br i1 %3, label %62, label %4, !dbg !5138

4:                                                ; preds = %2
  %5 = ptrtoint %struct.USART_TypeDef* %0 to i32
  %6 = icmp eq %struct.USART_TypeDef* %0, inttoptr (i32 1073812480 to %struct.USART_TypeDef*)
  %7 = select i1 %6, i32 3, i32 4
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1
  %10 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %11, !dbg !5138

11:                                               ; preds = %4, %58
  %12 = phi i32 [ 0, %4 ], [ %59, %58 ]
  call void @llvm.dbg.value(metadata i32 %12, metadata !5131, metadata !DIExpression()), !dbg !5136
  %13 = shl i32 1, %12, !dbg !5139
  %14 = and i32 %13, %1, !dbg !5141
  call void @llvm.dbg.value(metadata i32 %14, metadata !5132, metadata !DIExpression()), !dbg !5136
  %15 = icmp eq i32 %14, 0, !dbg !5142
  br i1 %15, label %58, label %16, !dbg !5144

16:                                               ; preds = %11
  %17 = lshr i32 %12, 2, !dbg !5145
  %18 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %17, !dbg !5147
  %19 = load volatile i32, i32* %18, align 4, !dbg !5147, !tbaa !3726
  call void @llvm.dbg.value(metadata i32 %19, metadata !5133, metadata !DIExpression()), !dbg !5136
  %20 = shl i32 %12, 2, !dbg !5148
  %21 = and i32 %20, 12, !dbg !5148
  %22 = shl i32 15, %21, !dbg !5149
  %23 = and i32 %19, %22, !dbg !5150
  call void @llvm.dbg.value(metadata i32 %23, metadata !5133, metadata !DIExpression()), !dbg !5136
  switch i32 %5, label %24 [
    i32 1073809408, label %27
    i32 1073810432, label %25
    i32 1073811456, label %26
  ], !dbg !5151

24:                                               ; preds = %16
  br label %27, !dbg !5151

25:                                               ; preds = %16
  br label %27, !dbg !5153

26:                                               ; preds = %16
  br label %27, !dbg !5153

27:                                               ; preds = %16, %26, %25, %24
  %28 = phi i32 [ 0, %16 ], [ %7, %24 ], [ 1, %25 ], [ 2, %26 ], !dbg !5151
  %29 = shl i32 %28, %21, !dbg !5153
  %30 = icmp eq i32 %23, %29, !dbg !5154
  br i1 %30, label %31, label %44, !dbg !5155

31:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %22, metadata !5133, metadata !DIExpression()), !dbg !5136
  %32 = xor i32 %22, -1, !dbg !5156
  %33 = load volatile i32, i32* %18, align 4, !dbg !5156, !tbaa !3726
  %34 = and i32 %33, %32, !dbg !5156
  store volatile i32 %34, i32* %18, align 4, !dbg !5156, !tbaa !3726
  %35 = xor i32 %14, -1, !dbg !5158
  %36 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !5158, !tbaa !5080
  %37 = and i32 %36, %35, !dbg !5158
  store volatile i32 %37, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !5158, !tbaa !5080
  %38 = load volatile i32, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !5159, !tbaa !5092
  %39 = and i32 %38, %35, !dbg !5159
  store volatile i32 %39, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !5159, !tbaa !5092
  %40 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !5160, !tbaa !5103
  %41 = and i32 %40, %35, !dbg !5160
  store volatile i32 %41, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !5160, !tbaa !5103
  %42 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !5161, !tbaa !5114
  %43 = and i32 %42, %35, !dbg !5161
  store volatile i32 %43, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !5161, !tbaa !5114
  br label %44, !dbg !5162

44:                                               ; preds = %31, %27
  %45 = icmp ult i32 %14, 256, !dbg !5163
  %46 = select i1 %45, i32* %8, i32* %9, !dbg !5164
  call void @llvm.dbg.value(metadata i32* %46, metadata !5134, metadata !DIExpression()), !dbg !5136
  %47 = add i32 %20, -32, !dbg !5165
  %48 = select i1 %45, i32 %20, i32 %47, !dbg !5165
  call void @llvm.dbg.value(metadata i32 %48, metadata !5135, metadata !DIExpression()), !dbg !5136
  %49 = load volatile i32, i32* %46, align 4, !dbg !5166, !tbaa !3726
  %50 = shl i32 15, %48, !dbg !5166
  %51 = xor i32 %50, -1, !dbg !5166
  %52 = and i32 %49, %51, !dbg !5166
  %53 = shl i32 4, %48, !dbg !5166
  %54 = or i32 %52, %53, !dbg !5166
  store volatile i32 %54, i32* %46, align 4, !dbg !5166, !tbaa !3726
  %55 = xor i32 %14, -1, !dbg !5167
  %56 = load volatile i32, i32* %10, align 4, !dbg !5167, !tbaa !5168
  %57 = and i32 %56, %55, !dbg !5167
  store volatile i32 %57, i32* %10, align 4, !dbg !5167, !tbaa !5168
  br label %58, !dbg !5169

58:                                               ; preds = %44, %11
  %59 = add i32 %12, 1, !dbg !5170
  call void @llvm.dbg.value(metadata i32 %59, metadata !5131, metadata !DIExpression()), !dbg !5136
  %60 = lshr i32 %1, %59, !dbg !5171
  %61 = icmp eq i32 %60, 0, !dbg !5137
  br i1 %61, label %62, label %11, !dbg !5138, !llvm.loop !5172

62:                                               ; preds = %58, %2
  ret void, !dbg !5174
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_GPIO_ReadPin(%struct.USART_TypeDef* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #17 !dbg !5175 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !5180, metadata !DIExpression()), !dbg !5183
  call void @llvm.dbg.value(metadata i16 %1, metadata !5181, metadata !DIExpression()), !dbg !5183
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !5184
  %4 = load volatile i32, i32* %3, align 4, !dbg !5184, !tbaa !5186
  %5 = zext i16 %1 to i32, !dbg !5187
  %6 = and i32 %4, %5, !dbg !5188
  %7 = icmp ne i32 %6, 0, !dbg !5189
  %8 = zext i1 %7 to i32
  call void @llvm.dbg.value(metadata i32 %8, metadata !5182, metadata !DIExpression()), !dbg !5183
  ret i32 %8, !dbg !5190
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_GPIO_WritePin(%struct.USART_TypeDef* noundef %0, i16 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #16 !dbg !5191 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !5195, metadata !DIExpression()), !dbg !5198
  call void @llvm.dbg.value(metadata i16 %1, metadata !5196, metadata !DIExpression()), !dbg !5198
  call void @llvm.dbg.value(metadata i32 %2, metadata !5197, metadata !DIExpression()), !dbg !5198
  %4 = icmp eq i32 %2, 0, !dbg !5199
  %5 = zext i16 %1 to i32, !dbg !5201
  %6 = shl nuw i32 %5, 16, !dbg !5202
  %7 = select i1 %4, i32 %6, i32 %5, !dbg !5202
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !5201
  store volatile i32 %7, i32* %8, align 4, !dbg !5201, !tbaa !5051
  ret void, !dbg !5203
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_GPIO_TogglePin(%struct.USART_TypeDef* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #16 !dbg !5204 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !5208, metadata !DIExpression()), !dbg !5210
  call void @llvm.dbg.value(metadata i16 %1, metadata !5209, metadata !DIExpression()), !dbg !5210
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !5211
  %4 = load volatile i32, i32* %3, align 4, !dbg !5211, !tbaa !5168
  %5 = zext i16 %1 to i32, !dbg !5213
  %6 = and i32 %4, %5, !dbg !5214
  %7 = icmp eq i32 %6, 0, !dbg !5215
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !5216
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !5216
  %10 = select i1 %7, i32* %8, i32* %9, !dbg !5216
  store volatile i32 %5, i32* %10, align 4, !dbg !5217, !tbaa !3726
  ret void, !dbg !5218
}

; Function Attrs: nofree noinline nounwind
define dso_local i32 @HAL_GPIO_LockPin(%struct.USART_TypeDef* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #19 !dbg !5219 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !5223, metadata !DIExpression()), !dbg !5226
  call void @llvm.dbg.value(metadata i16 %1, metadata !5224, metadata !DIExpression()), !dbg !5226
  %4 = bitcast i32* %3 to i8*, !dbg !5227
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !5227
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5225, metadata !DIExpression()), !dbg !5228
  store volatile i32 65536, i32* %3, align 4, !dbg !5228, !tbaa !3726
  %5 = zext i16 %1 to i32, !dbg !5229
  %6 = load volatile i32, i32* %3, align 4, !dbg !5229, !tbaa !3726
  %7 = or i32 %6, %5, !dbg !5229
  store volatile i32 %7, i32* %3, align 4, !dbg !5229, !tbaa !3726
  %8 = load volatile i32, i32* %3, align 4, !dbg !5230, !tbaa !3726
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 6, !dbg !5231
  store volatile i32 %8, i32* %9, align 4, !dbg !5232, !tbaa !5233
  store volatile i32 %5, i32* %9, align 4, !dbg !5234, !tbaa !5233
  %10 = load volatile i32, i32* %3, align 4, !dbg !5235, !tbaa !3726
  store volatile i32 %10, i32* %9, align 4, !dbg !5236, !tbaa !5233
  %11 = load volatile i32, i32* %9, align 4, !dbg !5237, !tbaa !5233
  store volatile i32 %11, i32* %3, align 4, !dbg !5238, !tbaa !3726
  %12 = load volatile i32, i32* %9, align 4, !dbg !5239, !tbaa !5233
  %13 = lshr i32 %12, 16, !dbg !5241
  %14 = and i32 %13, 1, !dbg !5241
  %15 = xor i32 %14, 1, !dbg !5241
  %16 = bitcast i32* %3 to i8*, !dbg !5242
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16), !dbg !5242
  ret i32 %15, !dbg !5242
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_GPIO_EXTI_IRQHandler(i16 noundef zeroext %0) local_unnamed_addr #3 !dbg !5243 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !5247, metadata !DIExpression()), !dbg !5248
  %2 = load volatile i32, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !5249, !tbaa !5251
  %3 = zext i16 %0 to i32, !dbg !5249
  %4 = and i32 %2, %3, !dbg !5249
  %5 = icmp eq i32 %4, 0, !dbg !5252
  br i1 %5, label %7, label %6, !dbg !5253

6:                                                ; preds = %1
  store volatile i32 %3, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !5254, !tbaa !5251
  call void @HAL_GPIO_EXTI_Callback(i16 noundef zeroext %0), !dbg !5256
  br label %7, !dbg !5257

7:                                                ; preds = %6, %1
  ret void, !dbg !5258
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_GPIO_EXTI_Callback(i16 noundef zeroext %0) local_unnamed_addr #3 !dbg !5259 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !5261, metadata !DIExpression()), !dbg !5262
  ret void, !dbg !5263
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceD2Ev(%"class.Cicada::IPCommDevice"* noundef nonnull returned align 8 dereferenceable(140) %0) unnamed_addr #3 comdat align 2 !dbg !5264 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5270, metadata !DIExpression()), !dbg !5272
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 3, !dbg !5273
  %3 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %2) #34, !dbg !5273
  %4 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 2, !dbg !5273
  %5 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %4) #34, !dbg !5273
  %6 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 1, !dbg !5273
  %7 = call noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskD2Ev(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %6) #34, !dbg !5273
  %8 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5273
  %9 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %8) #34, !dbg !5273
  ret %"class.Cicada::IPCommDevice"* %0, !dbg !5275
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada12ATCommDeviceD0Ev(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %0) unnamed_addr #3 comdat align 2 !dbg !5276 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !5278, metadata !DIExpression()), !dbg !5280
  call void @llvm.trap() #36, !dbg !5281
  unreachable, !dbg !5281
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada12ATCommDevice11serialWriteEPc(%"class.Cicada::ATCommDevice"* nocapture noundef nonnull readonly align 8 dereferenceable(232) %0, i8* noundef %1) unnamed_addr #4 align 2 !dbg !5282 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !5284, metadata !DIExpression()), !dbg !5286
  call void @llvm.dbg.value(metadata i8* %1, metadata !5285, metadata !DIExpression()), !dbg !5286
  %3 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !5287
  %4 = load i8, i8* %3, align 2, !dbg !5287, !tbaa !5289
  %5 = and i8 %4, 64, !dbg !5295
  %6 = icmp eq i8 %5, 0, !dbg !5287
  br i1 %6, label %15, label %7, !dbg !5296

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1, !dbg !5297
  %9 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %8, align 4, !dbg !5297, !tbaa !5299
  %10 = bitcast %"class.Cicada::IBufferedSerial"* %9 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !5301
  %11 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %10, align 4, !dbg !5301, !tbaa !2568
  %12 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %11, i32 8, !dbg !5301
  %13 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %12, align 4, !dbg !5301
  %14 = call noundef i64 %13(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %9, i8* noundef %1) #34, !dbg !5301
  br label %15, !dbg !5302

15:                                               ; preds = %2, %7
  %16 = phi i64 [ %14, %7 ], [ 0, %2 ], !dbg !5286
  ret i64 %16, !dbg !5303
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada12ATCommDevice10serialReadEPcy(%"class.Cicada::ATCommDevice"* nocapture noundef nonnull readonly align 8 dereferenceable(232) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #4 align 2 !dbg !5304 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !5306, metadata !DIExpression()), !dbg !5309
  call void @llvm.dbg.value(metadata i8* %1, metadata !5307, metadata !DIExpression()), !dbg !5309
  call void @llvm.dbg.value(metadata i64 %2, metadata !5308, metadata !DIExpression()), !dbg !5309
  %4 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !5310
  %5 = load i8, i8* %4, align 2, !dbg !5310, !tbaa !5289
  %6 = and i8 %5, 64, !dbg !5312
  %7 = icmp eq i8 %6, 0, !dbg !5310
  br i1 %7, label %16, label %8, !dbg !5313

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1, !dbg !5314
  %10 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %9, align 4, !dbg !5314, !tbaa !5299
  %11 = bitcast %"class.Cicada::IBufferedSerial"* %10 to i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)***, !dbg !5316
  %12 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*** %11, align 4, !dbg !5316, !tbaa !2568
  %13 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %12, i32 5, !dbg !5316
  %14 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %13, align 4, !dbg !5316
  %15 = call noundef i64 %14(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %10, i8* noundef %1, i64 noundef %2) #34, !dbg !5316
  br label %16, !dbg !5317

16:                                               ; preds = %3, %8
  %17 = phi i64 [ %15, %8 ], [ 0, %3 ], !dbg !5309
  ret i64 %17, !dbg !5318
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ATCommDevice"* @_ZThn4_N6Cicada12ATCommDeviceD1Ev(%"class.Cicada::ATCommDevice"* noundef %0) unnamed_addr #3 comdat align 2 !dbg !5319 {
  %2 = bitcast %"class.Cicada::ATCommDevice"* %0 to i8*, !dbg !5321
  %3 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !5321
  %4 = bitcast i8* %3 to %"class.Cicada::IPCommDevice"*, !dbg !5321
  %5 = tail call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceD2Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(232) %4) #34, !dbg !5321
  ret %"class.Cicada::ATCommDevice"* undef, !dbg !5321
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada12ATCommDeviceD0Ev(%"class.Cicada::ATCommDevice"* noundef %0) unnamed_addr #3 comdat align 2 !dbg !5322 {
  %2 = bitcast %"class.Cicada::ATCommDevice"* %0 to i8*, !dbg !5323
  %3 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !5323
  %4 = bitcast i8* %3 to %"class.Cicada::ATCommDevice"*, !dbg !5323
  tail call void @_ZN6Cicada12ATCommDeviceD0Ev(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %4) #34, !dbg !5323
  ret void, !dbg !5323
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull returned align 8 dereferenceable(44) %0) unnamed_addr #3 comdat align 2 !dbg !5324 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5326, metadata !DIExpression()), !dbg !5328
  ret %"class.Cicada::CircularBuffer.0"* %0, !dbg !5329
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #3 comdat align 2 !dbg !5330 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !5332, metadata !DIExpression()), !dbg !5334
  ret %"class.Cicada::ICommDevice"* %0, !dbg !5335
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::ATCommDevice"* @_ZN6Cicada12ATCommDeviceC2ERNS_15IBufferedSerialEPhS3_y(%"class.Cicada::ATCommDevice"* noundef nonnull returned align 8 dereferenceable(232) %0, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4) unnamed_addr #3 align 2 !dbg !5336 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !5338, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %1, metadata !5339, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i8* %2, metadata !5340, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i8* %3, metadata !5341, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i64 %4, metadata !5342, metadata !DIExpression()), !dbg !5343
  %6 = bitcast %"class.Cicada::ATCommDevice"* %0 to %"class.Cicada::IPCommDevice"*, !dbg !5344
  %7 = call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceC2EPhS1_y(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %6, i8* noundef %2, i8* noundef %3, i64 noundef %4) #34, !dbg !5345
  %8 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5344
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [5 x i8*] }, { [17 x i8*], [5 x i8*] }* @_ZTVN6Cicada12ATCommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %8, align 8, !dbg !5344, !tbaa !2568
  %9 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 1, i32 0, !dbg !5344
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [5 x i8*] }, { [17 x i8*], [5 x i8*] }* @_ZTVN6Cicada12ATCommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %9, align 4, !dbg !5344, !tbaa !2568
  %10 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1, !dbg !5346
  store %"class.Cicada::IBufferedSerial"* %1, %"class.Cicada::IBufferedSerial"** %10, align 4, !dbg !5346, !tbaa !2476
  ret %"class.Cicada::ATCommDevice"* %0, !dbg !5347
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::ATCommDevice"* @_ZN6Cicada12ATCommDeviceC2ERNS_15IBufferedSerialEPhS3_yy(%"class.Cicada::ATCommDevice"* noundef nonnull returned align 8 dereferenceable(232) %0, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4, i64 noundef %5) unnamed_addr #3 align 2 !dbg !5348 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !5350, metadata !DIExpression()), !dbg !5356
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %1, metadata !5351, metadata !DIExpression()), !dbg !5356
  call void @llvm.dbg.value(metadata i8* %2, metadata !5352, metadata !DIExpression()), !dbg !5356
  call void @llvm.dbg.value(metadata i8* %3, metadata !5353, metadata !DIExpression()), !dbg !5356
  call void @llvm.dbg.value(metadata i64 %4, metadata !5354, metadata !DIExpression()), !dbg !5356
  call void @llvm.dbg.value(metadata i64 %5, metadata !5355, metadata !DIExpression()), !dbg !5356
  %7 = bitcast %"class.Cicada::ATCommDevice"* %0 to %"class.Cicada::IPCommDevice"*, !dbg !5357
  %8 = call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceC2EPhS1_yy(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %7, i8* noundef %2, i8* noundef %3, i64 noundef %4, i64 noundef %5) #34, !dbg !5358
  %9 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5357
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [5 x i8*] }, { [17 x i8*], [5 x i8*] }* @_ZTVN6Cicada12ATCommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8, !dbg !5357, !tbaa !2568
  %10 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 1, i32 0, !dbg !5357
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [5 x i8*] }, { [17 x i8*], [5 x i8*] }* @_ZTVN6Cicada12ATCommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %10, align 4, !dbg !5357, !tbaa !2568
  %11 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1, !dbg !5359
  store %"class.Cicada::IBufferedSerial"* %1, %"class.Cicada::IBufferedSerial"** %11, align 4, !dbg !5359, !tbaa !2476
  ret %"class.Cicada::ATCommDevice"* %0, !dbg !5360
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define dso_local void @_ZN6Cicada12ATCommDevice9logStatesEaa(%"class.Cicada::ATCommDevice"* nocapture noundef nonnull align 8 dereferenceable(232) %0, i8 noundef signext %1, i8 noundef signext %2) local_unnamed_addr #12 align 2 !dbg !5361 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !5363, metadata !DIExpression()), !dbg !5366
  call void @llvm.dbg.value(metadata i8 %1, metadata !5364, metadata !DIExpression()), !dbg !5366
  call void @llvm.dbg.value(metadata i8 %2, metadata !5365, metadata !DIExpression()), !dbg !5366
  ret void, !dbg !5367
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada12ATCommDevice15flushReadBufferEv(%"class.Cicada::ATCommDevice"* nocapture noundef nonnull align 8 dereferenceable(232) %0) local_unnamed_addr #4 align 2 !dbg !5368 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !5370, metadata !DIExpression()), !dbg !5371
  %2 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1, !dbg !5372
  %3 = bitcast %"class.Cicada::IBufferedSerial"** %2 to %"class.Cicada::ICommDevice"**, !dbg !5372
  %4 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 8
  %5 = load i64, i64* %4, align 8, !dbg !5373, !tbaa !5374
  %6 = icmp eq i64 %5, 0, !dbg !5373
  br i1 %6, label %25, label %7, !dbg !5375

7:                                                ; preds = %1, %15
  %8 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %3, align 4, !dbg !5372, !tbaa !5299
  %9 = bitcast %"class.Cicada::ICommDevice"* %8 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !5376
  %10 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %9, align 4, !dbg !5376, !tbaa !2568
  %11 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %10, i32 2, !dbg !5376
  %12 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %11, align 4, !dbg !5376
  %13 = call noundef i64 %12(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %8) #34, !dbg !5376
  %14 = icmp eq i64 %13, 0, !dbg !5372
  br i1 %14, label %25, label %15, !dbg !5377

15:                                               ; preds = %7
  %16 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %2, align 4, !dbg !5378, !tbaa !5299
  %17 = bitcast %"class.Cicada::IBufferedSerial"* %16 to i8 (%"class.Cicada::IBufferedSerial"*)***, !dbg !5380
  %18 = load i8 (%"class.Cicada::IBufferedSerial"*)**, i8 (%"class.Cicada::IBufferedSerial"*)*** %17, align 4, !dbg !5380, !tbaa !2568
  %19 = getelementptr inbounds i8 (%"class.Cicada::IBufferedSerial"*)*, i8 (%"class.Cicada::IBufferedSerial"*)** %18, i32 7, !dbg !5380
  %20 = load i8 (%"class.Cicada::IBufferedSerial"*)*, i8 (%"class.Cicada::IBufferedSerial"*)** %19, align 4, !dbg !5380
  %21 = call noundef zeroext i8 %20(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %16) #34, !dbg !5380
  %22 = load i64, i64* %4, align 8, !dbg !5381, !tbaa !5374
  %23 = add i64 %22, -1, !dbg !5381
  store i64 %23, i64* %4, align 8, !dbg !5381, !tbaa !5374
  %24 = icmp eq i64 %23, 0, !dbg !5373
  br i1 %24, label %25, label %7, !dbg !5375, !llvm.loop !5382

25:                                               ; preds = %7, %15, %1
  %26 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 7, !dbg !5384
  store i64 0, i64* %26, align 8, !dbg !5385, !tbaa !5386
  %27 = load i64, i64* %4, align 8, !dbg !5387, !tbaa !5374
  %28 = icmp eq i64 %27, 0, !dbg !5389
  br i1 %28, label %29, label %33, !dbg !5390

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !5391
  %31 = load i8, i8* %30, align 2, !dbg !5393, !tbaa !5289
  %32 = or i8 %31, 32, !dbg !5393
  store i8 %32, i8* %30, align 2, !dbg !5393, !tbaa !5289
  br label %33, !dbg !5394

33:                                               ; preds = %29, %25
  ret void, !dbg !5395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada12ATCommDevice16handleDisconnectEa(%"class.Cicada::ATCommDevice"* nocapture noundef nonnull align 8 dereferenceable(232) %0, i8 noundef signext %1) local_unnamed_addr #24 align 2 !dbg !5396 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !5398, metadata !DIExpression()), !dbg !5400
  call void @llvm.dbg.value(metadata i8 %1, metadata !5399, metadata !DIExpression()), !dbg !5400
  %3 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !5401
  %4 = load i8, i8* %3, align 2, !dbg !5401, !tbaa !5289
  %5 = and i8 %4, 8, !dbg !5403
  %6 = icmp eq i8 %5, 0, !dbg !5401
  br i1 %6, label %10, label %7, !dbg !5404

7:                                                ; preds = %2
  %8 = and i8 %4, -9, !dbg !5405
  store i8 %8, i8* %3, align 2, !dbg !5405, !tbaa !5289
  %9 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 4, !dbg !5407
  store i8 %1, i8* %9, align 2, !dbg !5408, !tbaa !5409
  br label %10, !dbg !5410

10:                                               ; preds = %2, %7
  %11 = xor i1 %6, true, !dbg !5411
  ret i1 %11, !dbg !5411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada12ATCommDevice13handleConnectEa(%"class.Cicada::ATCommDevice"* nocapture noundef nonnull align 8 dereferenceable(232) %0, i8 noundef signext %1) local_unnamed_addr #24 align 2 !dbg !5412 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !5414, metadata !DIExpression()), !dbg !5416
  call void @llvm.dbg.value(metadata i8 %1, metadata !5415, metadata !DIExpression()), !dbg !5416
  %3 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !5417
  %4 = load i8, i8* %3, align 2, !dbg !5417, !tbaa !5289
  %5 = and i8 %4, 1, !dbg !5419
  %6 = icmp eq i8 %5, 0, !dbg !5417
  br i1 %6, label %10, label %7, !dbg !5420

7:                                                ; preds = %2
  %8 = and i8 %4, -2, !dbg !5421
  store i8 %8, i8* %3, align 2, !dbg !5421, !tbaa !5289
  %9 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 4, !dbg !5423
  store i8 %1, i8* %9, align 2, !dbg !5424, !tbaa !5409
  br label %10, !dbg !5425

10:                                               ; preds = %2, %7
  %11 = xor i1 %6, true, !dbg !5426
  ret i1 %11, !dbg !5426
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada12ATCommDevice14prepareSendingEb(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %0, i1 noundef zeroext %1) local_unnamed_addr #4 align 2 !dbg !5427 {
  %3 = alloca [6 x i8], align 1
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !5429, metadata !DIExpression()), !dbg !5435
  call void @llvm.dbg.value(metadata i1 %1, metadata !5430, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5435
  %4 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1, !dbg !5436
  %5 = bitcast %"class.Cicada::IBufferedSerial"** %4 to %"class.Cicada::ICommDevice"**, !dbg !5436
  %6 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %5, align 4, !dbg !5436, !tbaa !5299
  %7 = bitcast %"class.Cicada::ICommDevice"* %6 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !5438
  %8 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %7, align 4, !dbg !5438, !tbaa !2568
  %9 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %8, i32 3, !dbg !5438
  %10 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %9, align 4, !dbg !5438
  %11 = call noundef i64 %10(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %6) #34, !dbg !5438
  %12 = icmp ult i64 %11, 22, !dbg !5439
  br i1 %12, label %59, label %13, !dbg !5440

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 3, !dbg !5441
  %15 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %14), !dbg !5442
  %16 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 6, !dbg !5443
  store i64 %15, i64* %16, align 8, !dbg !5444, !tbaa !5445
  %17 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %5, align 4, !dbg !5446, !tbaa !5299
  %18 = bitcast %"class.Cicada::ICommDevice"* %17 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !5448
  %19 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %18, align 4, !dbg !5448, !tbaa !2568
  %20 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %19, i32 3, !dbg !5448
  %21 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %20, align 4, !dbg !5448
  %22 = call noundef i64 %21(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %17) #34, !dbg !5448
  %23 = add i64 %22, -22, !dbg !5449
  %24 = icmp ugt i64 %15, %23, !dbg !5450
  br i1 %24, label %25, label %33, !dbg !5451

25:                                               ; preds = %13
  %26 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %5, align 4, !dbg !5452, !tbaa !5299
  %27 = bitcast %"class.Cicada::ICommDevice"* %26 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !5454
  %28 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %27, align 4, !dbg !5454, !tbaa !2568
  %29 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %28, i32 3, !dbg !5454
  %30 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %29, align 4, !dbg !5454
  %31 = call noundef i64 %30(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %26) #34, !dbg !5454
  %32 = add i64 %31, -22, !dbg !5455
  store i64 %32, i64* %16, align 8, !dbg !5456, !tbaa !5445
  br label %33, !dbg !5457

33:                                               ; preds = %25, %13
  %34 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %4, align 4, !dbg !5458, !tbaa !5299
  %35 = bitcast %"class.Cicada::IBufferedSerial"* %34 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !5459
  %36 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %35, align 4, !dbg !5459, !tbaa !2568
  %37 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %36, i32 8, !dbg !5459
  %38 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %37, align 4, !dbg !5459
  %39 = call noundef i64 %38(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %34, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.32, i32 0, i32 0)) #34, !dbg !5459
  br i1 %1, label %40, label %47, !dbg !5460

40:                                               ; preds = %33
  %41 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %4, align 4, !dbg !5461, !tbaa !5299
  %42 = bitcast %"class.Cicada::IBufferedSerial"* %41 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !5464
  %43 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %42, align 4, !dbg !5464, !tbaa !2568
  %44 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %43, i32 8, !dbg !5464
  %45 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %44, align 4, !dbg !5464
  %46 = call noundef i64 %45(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %41, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.33, i32 0, i32 0)) #34, !dbg !5464
  br label %47, !dbg !5465

47:                                               ; preds = %40, %33
  %48 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i32 0, i32 0, !dbg !5466
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %48) #34, !dbg !5466
  call void @llvm.dbg.declare(metadata [6 x i8]* %3, metadata !5431, metadata !DIExpression()), !dbg !5467
  %49 = load i64, i64* %16, align 8, !dbg !5468, !tbaa !5445
  %50 = trunc i64 %49 to i32, !dbg !5468
  %51 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* noundef nonnull %48, i32 noundef 6, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 noundef %50), !dbg !5469
  %52 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %4, align 4, !dbg !5470, !tbaa !5299
  %53 = bitcast %"class.Cicada::IBufferedSerial"* %52 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !5471
  %54 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %53, align 4, !dbg !5471, !tbaa !2568
  %55 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %54, i32 8, !dbg !5471
  %56 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %55, align 4, !dbg !5471
  %57 = call noundef i64 %56(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %52, i8* noundef nonnull %48) #34, !dbg !5471
  %58 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 9, !dbg !5472
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0), i8** %58, align 8, !dbg !5473, !tbaa !5474
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %48) #34, !dbg !5475
  br label %59

59:                                               ; preds = %2, %47
  %60 = xor i1 %12, true, !dbg !5475
  ret i1 %60, !dbg !5475
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !5476 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5478, metadata !DIExpression()), !dbg !5480
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !5481
  %3 = load i64, i64* %2, align 8, !dbg !5481, !tbaa !5482
  ret i64 %3, !dbg !5483
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @snprintf(i8* noalias nocapture noundef writeonly, i32 noundef, i8* nocapture noundef readonly, ...) local_unnamed_addr #25

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada12ATCommDevice8sendDataEv(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %0) local_unnamed_addr #4 align 2 !dbg !5484 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !5486, metadata !DIExpression()), !dbg !5487
  %2 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 6
  %3 = load i64, i64* %2, align 8, !dbg !5488, !tbaa !5445
  %4 = add i64 %3, -1, !dbg !5488
  store i64 %4, i64* %2, align 8, !dbg !5488, !tbaa !5445
  %5 = icmp eq i64 %3, 0, !dbg !5489
  br i1 %5, label %19, label %6, !dbg !5490

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 3
  br label %9, !dbg !5490

9:                                                ; preds = %6, %9
  %10 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !5491, !tbaa !5299
  %11 = call noundef zeroext i8 @_ZN6Cicada14CircularBufferIhE4pullEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %8), !dbg !5493
  %12 = bitcast %"class.Cicada::IBufferedSerial"* %10 to void (%"class.Cicada::IBufferedSerial"*, i8)***, !dbg !5494
  %13 = load void (%"class.Cicada::IBufferedSerial"*, i8)**, void (%"class.Cicada::IBufferedSerial"*, i8)*** %12, align 4, !dbg !5494, !tbaa !2568
  %14 = getelementptr inbounds void (%"class.Cicada::IBufferedSerial"*, i8)*, void (%"class.Cicada::IBufferedSerial"*, i8)** %13, i32 9, !dbg !5494
  %15 = load void (%"class.Cicada::IBufferedSerial"*, i8)*, void (%"class.Cicada::IBufferedSerial"*, i8)** %14, align 4, !dbg !5494
  call void %15(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %10, i8 noundef zeroext %11) #34, !dbg !5494
  %16 = load i64, i64* %2, align 8, !dbg !5488, !tbaa !5445
  %17 = add i64 %16, -1, !dbg !5488
  store i64 %17, i64* %2, align 8, !dbg !5488, !tbaa !5445
  %18 = icmp eq i64 %16, 0, !dbg !5489
  br i1 %18, label %19, label %9, !dbg !5490, !llvm.loop !5495

19:                                               ; preds = %9, %1
  ret void, !dbg !5497
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i8 @_ZN6Cicada14CircularBufferIhE4pullEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !5498 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5500, metadata !DIExpression()), !dbg !5502
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6, !dbg !5503
  %3 = load i8*, i8** %2, align 8, !dbg !5503, !tbaa !5504
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 3, !dbg !5505
  %5 = load i64, i64* %4, align 8, !dbg !5505, !tbaa !5506
  %6 = trunc i64 %5 to i32, !dbg !5503
  %7 = getelementptr inbounds i8, i8* %3, i32 %6, !dbg !5503
  %8 = load i8, i8* %7, align 1, !dbg !5503, !tbaa !2624
  call void @llvm.dbg.value(metadata i8 %8, metadata !5501, metadata !DIExpression()), !dbg !5502
  call void @_ZN6Cicada14CircularBufferIhE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %4), !dbg !5507
  %9 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !5508
  %10 = load i64, i64* %9, align 8, !dbg !5508, !tbaa !5482
  %11 = icmp eq i64 %10, 0, !dbg !5510
  br i1 %11, label %14, label %12, !dbg !5511

12:                                               ; preds = %1
  %13 = add i64 %10, -1, !dbg !5512
  store i64 %13, i64* %9, align 8, !dbg !5512, !tbaa !5482
  br label %14, !dbg !5513

14:                                               ; preds = %12, %1
  ret i8 %8, !dbg !5514
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIhE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #4 comdat align 2 !dbg !5515 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5517, metadata !DIExpression()), !dbg !5519
  call void @llvm.dbg.value(metadata i64* %1, metadata !5518, metadata !DIExpression()), !dbg !5519
  %3 = load i64, i64* %1, align 8, !dbg !5520, !tbaa !5521
  %4 = add i64 %3, 1, !dbg !5520
  store i64 %4, i64* %1, align 8, !dbg !5520, !tbaa !5521
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !5522
  %6 = load i64, i64* %5, align 8, !dbg !5522, !tbaa !5524
  %7 = icmp ult i64 %4, %6, !dbg !5525
  %8 = select i1 %7, i64 %4, i64 0, !dbg !5526
  store i64 %8, i64* %1, align 8, !dbg !5519
  ret void, !dbg !5527
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada12ATCommDevice7receiveEv(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %0) local_unnamed_addr #4 align 2 !dbg !5528 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !5530, metadata !DIExpression()), !dbg !5531
  %2 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1, !dbg !5532
  %3 = bitcast %"class.Cicada::IBufferedSerial"** %2 to %"class.Cicada::ICommDevice"**, !dbg !5532
  %4 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %3, align 4, !dbg !5532, !tbaa !5299
  %5 = bitcast %"class.Cicada::ICommDevice"* %4 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !5534
  %6 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %5, align 4, !dbg !5534, !tbaa !2568
  %7 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %6, i32 2, !dbg !5534
  %8 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %7, align 4, !dbg !5534
  %9 = call noundef i64 %8(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %4) #34, !dbg !5534
  %10 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 8, !dbg !5535
  %11 = load i64, i64* %10, align 8, !dbg !5535, !tbaa !5374
  %12 = icmp ult i64 %9, %11, !dbg !5536
  br i1 %12, label %32, label %13, !dbg !5537

13:                                               ; preds = %1
  %14 = load i64, i64* %10, align 8, !dbg !5538, !tbaa !5374
  %15 = icmp eq i64 %14, 0, !dbg !5538
  br i1 %15, label %28, label %16, !dbg !5540

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 2
  br label %18, !dbg !5540

18:                                               ; preds = %16, %18
  %19 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %2, align 4, !dbg !5541, !tbaa !5299
  %20 = bitcast %"class.Cicada::IBufferedSerial"* %19 to i8 (%"class.Cicada::IBufferedSerial"*)***, !dbg !5543
  %21 = load i8 (%"class.Cicada::IBufferedSerial"*)**, i8 (%"class.Cicada::IBufferedSerial"*)*** %20, align 4, !dbg !5543, !tbaa !2568
  %22 = getelementptr inbounds i8 (%"class.Cicada::IBufferedSerial"*)*, i8 (%"class.Cicada::IBufferedSerial"*)** %21, i32 7, !dbg !5543
  %23 = load i8 (%"class.Cicada::IBufferedSerial"*)*, i8 (%"class.Cicada::IBufferedSerial"*)** %22, align 4, !dbg !5543
  %24 = call noundef zeroext i8 %23(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %19) #34, !dbg !5543
  call void @_ZN6Cicada14CircularBufferIhE4pushEh(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %17, i8 noundef zeroext %24), !dbg !5544
  %25 = load i64, i64* %10, align 8, !dbg !5545, !tbaa !5374
  %26 = add i64 %25, -1, !dbg !5545
  store i64 %26, i64* %10, align 8, !dbg !5545, !tbaa !5374
  %27 = icmp eq i64 %26, 0, !dbg !5538
  br i1 %27, label %28, label %18, !dbg !5540, !llvm.loop !5546

28:                                               ; preds = %18, %13
  %29 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !5548
  %30 = load i8, i8* %29, align 2, !dbg !5549, !tbaa !5289
  %31 = or i8 %30, 32, !dbg !5549
  store i8 %31, i8* %29, align 2, !dbg !5549, !tbaa !5289
  br label %32, !dbg !5550

32:                                               ; preds = %1, %28
  %33 = xor i1 %12, true, !dbg !5551
  ret i1 %33, !dbg !5551
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIhE4pushEh(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i8 noundef zeroext %1) unnamed_addr #4 comdat align 2 !dbg !5552 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5554, metadata !DIExpression()), !dbg !5556
  call void @llvm.dbg.value(metadata i8 %1, metadata !5555, metadata !DIExpression()), !dbg !5556
  %3 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6, !dbg !5557
  %4 = load i8*, i8** %3, align 8, !dbg !5557, !tbaa !5504
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 2, !dbg !5558
  %6 = load i64, i64* %5, align 8, !dbg !5558, !tbaa !5559
  %7 = trunc i64 %6 to i32, !dbg !5557
  %8 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5557
  store i8 %1, i8* %8, align 1, !dbg !5560, !tbaa !2624
  call void @_ZN6Cicada14CircularBufferIhE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %5), !dbg !5561
  %9 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !5562
  %10 = load i64, i64* %9, align 8, !dbg !5562, !tbaa !5482
  %11 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !5564
  %12 = load i64, i64* %11, align 8, !dbg !5564, !tbaa !5524
  %13 = icmp ult i64 %10, %12, !dbg !5565
  br i1 %13, label %14, label %16, !dbg !5566

14:                                               ; preds = %2
  %15 = add i64 %10, 1, !dbg !5567
  store i64 %15, i64* %9, align 8, !dbg !5567, !tbaa !5482
  br label %16, !dbg !5568

16:                                               ; preds = %14, %2
  ret void, !dbg !5569
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* nocapture noundef nonnull readonly align 8 dereferenceable(232) %0, i8* noundef %1) local_unnamed_addr #4 align 2 !dbg !5570 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !5572, metadata !DIExpression()), !dbg !5574
  call void @llvm.dbg.value(metadata i8* %1, metadata !5573, metadata !DIExpression()), !dbg !5574
  %3 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1, !dbg !5575
  %4 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %3, align 4, !dbg !5575, !tbaa !5299
  %5 = bitcast %"class.Cicada::IBufferedSerial"* %4 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !5576
  %6 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %5, align 4, !dbg !5576, !tbaa !2568
  %7 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %6, i32 8, !dbg !5576
  %8 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %7, align 4, !dbg !5576
  %9 = call noundef i64 %8(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %4, i8* noundef %1) #34, !dbg !5576
  %10 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %3, align 4, !dbg !5577, !tbaa !5299
  %11 = load i8*, i8** @_ZN6Cicada12ATCommDevice11_lineEndStrE, align 4, !dbg !5578, !tbaa !2476
  %12 = bitcast %"class.Cicada::IBufferedSerial"* %10 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !5579
  %13 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %12, align 4, !dbg !5579, !tbaa !2568
  %14 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %13, i32 8, !dbg !5579
  %15 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %14, align 4, !dbg !5579
  %16 = call noundef i64 %15(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %10, i8* noundef %11) #34, !dbg !5579
  ret void, !dbg !5580
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada12IPCommDeviceD0Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %0) unnamed_addr #3 comdat align 2 !dbg !5581 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5583, metadata !DIExpression()), !dbg !5585
  call void @llvm.trap() #36, !dbg !5586
  unreachable, !dbg !5586
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZNK6Cicada12IPCommDevice14bytesAvailableEv(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %0) unnamed_addr #4 align 2 !dbg !5587 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5589, metadata !DIExpression()), !dbg !5591
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 2, !dbg !5592
  %3 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %2), !dbg !5593
  ret i64 %3, !dbg !5594
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZNK6Cicada12IPCommDevice14spaceAvailableEv(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %0) unnamed_addr #4 align 2 !dbg !5595 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5597, metadata !DIExpression()), !dbg !5598
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 8, !dbg !5599
  %3 = load i32, i32* %2, align 4, !dbg !5599, !tbaa !5601
  %4 = icmp eq i32 %3, 2, !dbg !5602
  br i1 %4, label %5, label %8, !dbg !5603

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 3, !dbg !5604
  %7 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %6), !dbg !5605
  br label %8, !dbg !5606

8:                                                ; preds = %1, %5
  %9 = phi i64 [ %7, %5 ], [ 0, %1 ], !dbg !5598
  ret i64 %9, !dbg !5607
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZNK6Cicada12IPCommDevice20writeBufferProcessedEv(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %0) unnamed_addr #4 align 2 !dbg !5608 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5610, metadata !DIExpression()), !dbg !5611
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 3, !dbg !5612
  %3 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %2), !dbg !5613
  %4 = icmp eq i64 %3, 0, !dbg !5614
  %5 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 8, !dbg !5615
  %6 = load i32, i32* %5, align 4, !dbg !5615
  %7 = icmp ne i32 %6, 3, !dbg !5615
  %8 = select i1 %4, i1 %7, i1 false, !dbg !5615
  ret i1 %8, !dbg !5616
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada12IPCommDevice4readEPhy(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #4 align 2 !dbg !5617 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5619, metadata !DIExpression()), !dbg !5622
  call void @llvm.dbg.value(metadata i8* %1, metadata !5620, metadata !DIExpression()), !dbg !5622
  call void @llvm.dbg.value(metadata i64 %2, metadata !5621, metadata !DIExpression()), !dbg !5622
  %4 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 2, !dbg !5623
  %5 = call noundef i64 @_ZN6Cicada14CircularBufferIhE4pullEPhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %4, i8* noundef %1, i64 noundef %2), !dbg !5624
  ret i64 %5, !dbg !5625
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada12IPCommDevice5writeEPKhy(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #4 align 2 !dbg !5626 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5628, metadata !DIExpression()), !dbg !5631
  call void @llvm.dbg.value(metadata i8* %1, metadata !5629, metadata !DIExpression()), !dbg !5631
  call void @llvm.dbg.value(metadata i64 %2, metadata !5630, metadata !DIExpression()), !dbg !5631
  %4 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 8, !dbg !5632
  %5 = load i32, i32* %4, align 4, !dbg !5632, !tbaa !5601
  %6 = icmp eq i32 %5, 2, !dbg !5634
  br i1 %6, label %7, label %10, !dbg !5635

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 3, !dbg !5636
  %9 = call noundef i64 @_ZN6Cicada14CircularBufferIhE4pushEPKhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %8, i8* noundef %1, i64 noundef %2), !dbg !5637
  br label %10, !dbg !5638

10:                                               ; preds = %3, %7
  %11 = phi i64 [ %9, %7 ], [ 0, %3 ], !dbg !5631
  ret i64 %11, !dbg !5639
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada12IPCommDevice7connectEv(%"class.Cicada::IPCommDevice"* nocapture noundef nonnull align 8 dereferenceable(140) %0) unnamed_addr #24 align 2 !dbg !5640 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5642, metadata !DIExpression()), !dbg !5643
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 5, !dbg !5644
  %3 = load i8*, i8** %2, align 4, !dbg !5644, !tbaa !5646
  %4 = icmp eq i8* %3, null, !dbg !5647
  %5 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 6
  %6 = load i16, i16* %5, align 8
  %7 = icmp eq i16 %6, 0
  %8 = select i1 %4, i1 true, i1 %7, !dbg !5648
  br i1 %8, label %13, label %9, !dbg !5648

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 7, !dbg !5649
  %11 = load i8, i8* %10, align 2, !dbg !5650, !tbaa !5289
  %12 = or i8 %11, 1, !dbg !5650
  store i8 %12, i8* %10, align 2, !dbg !5650, !tbaa !5289
  br label %13, !dbg !5651

13:                                               ; preds = %1, %9
  %14 = xor i1 %8, true, !dbg !5652
  ret i1 %14, !dbg !5652
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada12IPCommDevice10disconnectEv(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %0) unnamed_addr #4 align 2 !dbg !5653 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5655, metadata !DIExpression()), !dbg !5656
  %2 = bitcast %"class.Cicada::IPCommDevice"* %0 to i1 (%"class.Cicada::IPCommDevice"*)***, !dbg !5657
  %3 = load i1 (%"class.Cicada::IPCommDevice"*)**, i1 (%"class.Cicada::IPCommDevice"*)*** %2, align 8, !dbg !5657, !tbaa !2568
  %4 = getelementptr inbounds i1 (%"class.Cicada::IPCommDevice"*)*, i1 (%"class.Cicada::IPCommDevice"*)** %3, i32 10, !dbg !5657
  %5 = load i1 (%"class.Cicada::IPCommDevice"*)*, i1 (%"class.Cicada::IPCommDevice"*)** %4, align 4, !dbg !5657
  %6 = call noundef zeroext i1 %5(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %0) #34, !dbg !5657
  br i1 %6, label %11, label %7, !dbg !5659

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 7, !dbg !5660
  %9 = load i8, i8* %8, align 2, !dbg !5661, !tbaa !5289
  %10 = or i8 %9, 8, !dbg !5661
  store i8 %10, i8* %8, align 2, !dbg !5661, !tbaa !5289
  br label %11, !dbg !5662

11:                                               ; preds = %1, %7
  ret void, !dbg !5662
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada12IPCommDevice11isConnectedEv(%"class.Cicada::IPCommDevice"* nocapture noundef nonnull readonly align 8 dereferenceable(140) %0) unnamed_addr #18 align 2 !dbg !5663 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5665, metadata !DIExpression()), !dbg !5666
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 8, !dbg !5667
  %3 = load i32, i32* %2, align 4, !dbg !5667, !tbaa !5601
  %4 = add i32 %3, -2, !dbg !5668
  %5 = icmp ult i32 %4, 3, !dbg !5668
  ret i1 %5, !dbg !5669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada12IPCommDevice6isIdleEv(%"class.Cicada::IPCommDevice"* nocapture noundef nonnull readonly align 8 dereferenceable(140) %0) unnamed_addr #18 align 2 !dbg !5670 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5672, metadata !DIExpression()), !dbg !5673
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 8, !dbg !5674
  %3 = load i32, i32* %2, align 4, !dbg !5674, !tbaa !5601
  %4 = icmp eq i32 %3, 0, !dbg !5675
  ret i1 %4, !dbg !5676
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local void @_ZN6Cicada12IPCommDevice11setHostPortEPKctNS_13IIPCommDevice14ConnectionTypeE(%"class.Cicada::IPCommDevice"* nocapture noundef nonnull writeonly align 8 dereferenceable(140) %0, i8* noundef %1, i16 noundef zeroext %2, i32 noundef %3) unnamed_addr #13 align 2 !dbg !5677 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5679, metadata !DIExpression()), !dbg !5683
  call void @llvm.dbg.value(metadata i8* %1, metadata !5680, metadata !DIExpression()), !dbg !5683
  call void @llvm.dbg.value(metadata i16 %2, metadata !5681, metadata !DIExpression()), !dbg !5683
  call void @llvm.dbg.value(metadata i32 %3, metadata !5682, metadata !DIExpression()), !dbg !5683
  %5 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 5, !dbg !5684
  store i8* %1, i8** %5, align 4, !dbg !5685, !tbaa !5646
  %6 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 6, !dbg !5686
  store i16 %2, i16* %6, align 8, !dbg !5687, !tbaa !5688
  %7 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 4, !dbg !5689
  store i32 %3, i32* %7, align 8, !dbg !5690, !tbaa !5691
  ret void, !dbg !5692
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IPCommDevice"* @_ZThn4_N6Cicada12IPCommDeviceD1Ev(%"class.Cicada::IPCommDevice"* noundef %0) unnamed_addr #3 comdat align 2 !dbg !5693 {
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 -1, i32 10, i32 0, !dbg !5694
  %3 = bitcast i8* %2 to %"class.Cicada::IPCommDevice"*, !dbg !5694
  %4 = tail call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceD2Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %3) #34, !dbg !5694
  ret %"class.Cicada::IPCommDevice"* undef, !dbg !5694
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada12IPCommDeviceD0Ev(%"class.Cicada::IPCommDevice"* noundef %0) unnamed_addr #3 comdat align 2 !dbg !5695 {
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 -1, i32 10, i32 0, !dbg !5696
  %3 = bitcast i8* %2 to %"class.Cicada::IPCommDevice"*, !dbg !5696
  tail call void @_ZN6Cicada12IPCommDeviceD0Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %3) #34, !dbg !5696
  ret void, !dbg !5696
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada14CircularBufferIhE4pushEPKhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #4 comdat align 2 !dbg !5697 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5699, metadata !DIExpression()), !dbg !5703
  call void @llvm.dbg.value(metadata i8* %1, metadata !5700, metadata !DIExpression()), !dbg !5703
  call void @llvm.dbg.value(metadata i64 %2, metadata !5701, metadata !DIExpression()), !dbg !5703
  %4 = bitcast %"class.Cicada::CircularBuffer.0"* %0 to i64 (%"class.Cicada::CircularBuffer.0"*)***, !dbg !5704
  %5 = load i64 (%"class.Cicada::CircularBuffer.0"*)**, i64 (%"class.Cicada::CircularBuffer.0"*)*** %4, align 8, !dbg !5704, !tbaa !2568
  %6 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %5, i32 11, !dbg !5704
  %7 = load i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %6, align 4, !dbg !5704
  %8 = call noundef i64 %7(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #34, !dbg !5704
  %9 = icmp ult i64 %8, %2, !dbg !5706
  br i1 %9, label %10, label %15, !dbg !5707

10:                                               ; preds = %3
  %11 = load i64 (%"class.Cicada::CircularBuffer.0"*)**, i64 (%"class.Cicada::CircularBuffer.0"*)*** %4, align 8, !dbg !5708, !tbaa !2568
  %12 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %11, i32 11, !dbg !5708
  %13 = load i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %12, align 4, !dbg !5708
  %14 = call noundef i64 %13(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #34, !dbg !5708
  call void @llvm.dbg.value(metadata i64 %14, metadata !5701, metadata !DIExpression()), !dbg !5703
  br label %15, !dbg !5709

15:                                               ; preds = %10, %3
  %16 = phi i64 [ %14, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %16, metadata !5701, metadata !DIExpression()), !dbg !5703
  call void @llvm.dbg.value(metadata i64 0, metadata !5702, metadata !DIExpression()), !dbg !5703
  %17 = icmp eq i64 %16, 0, !dbg !5710
  br i1 %17, label %32, label %18, !dbg !5711

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6
  %20 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 2
  br label %21, !dbg !5711

21:                                               ; preds = %18, %21
  %22 = phi i64 [ 0, %18 ], [ %23, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !5702, metadata !DIExpression()), !dbg !5703
  %23 = add nuw i64 %22, 1, !dbg !5712
  call void @llvm.dbg.value(metadata i64 %23, metadata !5702, metadata !DIExpression()), !dbg !5703
  %24 = trunc i64 %22 to i32, !dbg !5714
  %25 = getelementptr inbounds i8, i8* %1, i32 %24, !dbg !5714
  %26 = load i8, i8* %25, align 1, !dbg !5714, !tbaa !2624
  %27 = load i8*, i8** %19, align 8, !dbg !5715, !tbaa !5504
  %28 = load i64, i64* %20, align 8, !dbg !5716, !tbaa !5559
  %29 = trunc i64 %28 to i32, !dbg !5715
  %30 = getelementptr inbounds i8, i8* %27, i32 %29, !dbg !5715
  store i8 %26, i8* %30, align 1, !dbg !5717, !tbaa !2624
  call void @_ZN6Cicada14CircularBufferIhE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %20), !dbg !5718
  %31 = icmp ult i64 %23, %16, !dbg !5710
  br i1 %31, label %21, label %32, !dbg !5711, !llvm.loop !5719

32:                                               ; preds = %21, %15
  %33 = phi i64 [ 0, %15 ], [ %16, %21 ], !dbg !5703
  %34 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !5721
  %35 = load i64, i64* %34, align 8, !dbg !5722, !tbaa !5482
  %36 = add i64 %35, %33, !dbg !5722
  store i64 %36, i64* %34, align 8, !dbg !5722, !tbaa !5482
  ret i64 %33, !dbg !5723
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada14CircularBufferIhE4pullEPhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #4 comdat align 2 !dbg !5724 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5726, metadata !DIExpression()), !dbg !5730
  call void @llvm.dbg.value(metadata i8* %1, metadata !5727, metadata !DIExpression()), !dbg !5730
  call void @llvm.dbg.value(metadata i64 %2, metadata !5728, metadata !DIExpression()), !dbg !5730
  %4 = bitcast %"class.Cicada::CircularBuffer.0"* %0 to i64 (%"class.Cicada::CircularBuffer.0"*)***, !dbg !5731
  %5 = load i64 (%"class.Cicada::CircularBuffer.0"*)**, i64 (%"class.Cicada::CircularBuffer.0"*)*** %4, align 8, !dbg !5731, !tbaa !2568
  %6 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %5, i32 10, !dbg !5731
  %7 = load i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %6, align 4, !dbg !5731
  %8 = call noundef i64 %7(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #34, !dbg !5731
  %9 = icmp ult i64 %8, %2, !dbg !5733
  br i1 %9, label %10, label %15, !dbg !5734

10:                                               ; preds = %3
  %11 = load i64 (%"class.Cicada::CircularBuffer.0"*)**, i64 (%"class.Cicada::CircularBuffer.0"*)*** %4, align 8, !dbg !5735, !tbaa !2568
  %12 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %11, i32 10, !dbg !5735
  %13 = load i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %12, align 4, !dbg !5735
  %14 = call noundef i64 %13(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #34, !dbg !5735
  call void @llvm.dbg.value(metadata i64 %14, metadata !5728, metadata !DIExpression()), !dbg !5730
  br label %15, !dbg !5736

15:                                               ; preds = %10, %3
  %16 = phi i64 [ %14, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %16, metadata !5728, metadata !DIExpression()), !dbg !5730
  call void @llvm.dbg.value(metadata i64 0, metadata !5729, metadata !DIExpression()), !dbg !5730
  %17 = icmp eq i64 %16, 0, !dbg !5737
  br i1 %17, label %32, label %18, !dbg !5738

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6
  %20 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 3
  br label %21, !dbg !5738

21:                                               ; preds = %18, %21
  %22 = phi i64 [ 0, %18 ], [ %28, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !5729, metadata !DIExpression()), !dbg !5730
  %23 = load i8*, i8** %19, align 8, !dbg !5739, !tbaa !5504
  %24 = load i64, i64* %20, align 8, !dbg !5741, !tbaa !5506
  %25 = trunc i64 %24 to i32, !dbg !5739
  %26 = getelementptr inbounds i8, i8* %23, i32 %25, !dbg !5739
  %27 = load i8, i8* %26, align 1, !dbg !5739, !tbaa !2624
  %28 = add nuw i64 %22, 1, !dbg !5742
  call void @llvm.dbg.value(metadata i64 %28, metadata !5729, metadata !DIExpression()), !dbg !5730
  %29 = trunc i64 %22 to i32, !dbg !5743
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !5743
  store i8 %27, i8* %30, align 1, !dbg !5744, !tbaa !2624
  call void @_ZN6Cicada14CircularBufferIhE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %20), !dbg !5745
  %31 = icmp ult i64 %28, %16, !dbg !5737
  br i1 %31, label %21, label %32, !dbg !5738, !llvm.loop !5746

32:                                               ; preds = %21, %15
  %33 = phi i64 [ 0, %15 ], [ %16, %21 ], !dbg !5730
  %34 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !5748
  %35 = load i64, i64* %34, align 8, !dbg !5749, !tbaa !5482
  %36 = sub i64 %35, %33, !dbg !5749
  store i64 %36, i64* %34, align 8, !dbg !5749, !tbaa !5482
  ret i64 %33, !dbg !5750
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !5751 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5753, metadata !DIExpression()), !dbg !5754
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !5755
  %3 = load i64, i64* %2, align 8, !dbg !5755, !tbaa !5524
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !5756
  %5 = load i64, i64* %4, align 8, !dbg !5756, !tbaa !5482
  %6 = sub i64 %3, %5, !dbg !5757
  ret i64 %6, !dbg !5758
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceC2EPhS1_y(%"class.Cicada::IPCommDevice"* noundef nonnull returned align 8 dereferenceable(140) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3) unnamed_addr #3 align 2 !dbg !5759 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5761, metadata !DIExpression()), !dbg !5765
  call void @llvm.dbg.value(metadata i8* %1, metadata !5762, metadata !DIExpression()), !dbg !5765
  call void @llvm.dbg.value(metadata i8* %2, metadata !5763, metadata !DIExpression()), !dbg !5765
  call void @llvm.dbg.value(metadata i64 %3, metadata !5764, metadata !DIExpression()), !dbg !5765
  %5 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 0, !dbg !5766
  %6 = call noundef %"class.Cicada::IIPCommDevice"* @_ZN6Cicada13IIPCommDeviceC2Ev(%"class.Cicada::IIPCommDevice"* noundef nonnull align 4 dereferenceable(4) %5) #34, !dbg !5767
  %7 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 1, !dbg !5766
  %8 = call noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskC2Et(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %7, i16 noundef zeroext 0), !dbg !5767
  %9 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5766
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [5 x i8*] }, { [15 x i8*], [5 x i8*] }* @_ZTVN6Cicada12IPCommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8, !dbg !5766, !tbaa !2568
  %10 = getelementptr %"class.Cicada::Task", %"class.Cicada::Task"* %7, i32 0, i32 0, !dbg !5766
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [5 x i8*] }, { [15 x i8*], [5 x i8*] }* @_ZTVN6Cicada12IPCommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %10, align 4, !dbg !5766, !tbaa !2568
  %11 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 2, !dbg !5768
  %12 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhEC2EPhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %11, i8* noundef %1, i64 noundef %3), !dbg !5768
  %13 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 3, !dbg !5769
  %14 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhEC2EPhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %13, i8* noundef %2, i64 noundef %3), !dbg !5769
  %15 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 5, !dbg !5770
  store i8* null, i8** %15, align 4, !dbg !5770, !tbaa !5646
  %16 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 6, !dbg !5771
  store i16 0, i16* %16, align 8, !dbg !5771, !tbaa !5688
  %17 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 7, !dbg !5772
  store i8 32, i8* %17, align 2, !dbg !5772, !tbaa !5289
  %18 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 8, !dbg !5773
  store i32 0, i32* %18, align 4, !dbg !5773, !tbaa !5601
  %19 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 9, !dbg !5774
  store i8* null, i8** %19, align 8, !dbg !5774, !tbaa !5474
  ret %"class.Cicada::IPCommDevice"* %0, !dbg !5775
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IIPCommDevice"* @_ZN6Cicada13IIPCommDeviceC2Ev(%"class.Cicada::IIPCommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #3 comdat align 2 !dbg !5776 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IIPCommDevice"* %0, metadata !5779, metadata !DIExpression()), !dbg !5781
  %2 = getelementptr inbounds %"class.Cicada::IIPCommDevice", %"class.Cicada::IIPCommDevice"* %0, i32 0, i32 0, !dbg !5782
  %3 = call noundef %"class.Cicada::IStatefulDevice"* @_ZN6Cicada15IStatefulDeviceC2Ev(%"class.Cicada::IStatefulDevice"* noundef nonnull align 4 dereferenceable(4) %2) #34, !dbg !5782
  %4 = getelementptr inbounds %"class.Cicada::IIPCommDevice", %"class.Cicada::IIPCommDevice"* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5782
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6Cicada13IIPCommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 4, !dbg !5782, !tbaa !2568
  ret %"class.Cicada::IIPCommDevice"* %0, !dbg !5782
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhEC2EPhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull returned align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #3 comdat align 2 !dbg !5783 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5785, metadata !DIExpression()), !dbg !5788
  call void @llvm.dbg.value(metadata i8* %1, metadata !5786, metadata !DIExpression()), !dbg !5788
  call void @llvm.dbg.value(metadata i64 %2, metadata !5787, metadata !DIExpression()), !dbg !5788
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 0, !dbg !5789
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6Cicada14CircularBufferIhEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8, !dbg !5789, !tbaa !2568
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 2, !dbg !5790
  %6 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !5791
  %7 = bitcast i64* %5 to i8*, !dbg !5791
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false), !dbg !5792
  store i64 %2, i64* %6, align 8, !dbg !5791, !tbaa !5524
  %8 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6, !dbg !5793
  store i8* %1, i8** %8, align 8, !dbg !5793, !tbaa !5504
  ret %"class.Cicada::CircularBuffer.0"* %0, !dbg !5794
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #9

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIhED0Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #3 comdat align 2 !dbg !5795 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5797, metadata !DIExpression()), !dbg !5798
  %2 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #34, !dbg !5799
  %3 = bitcast %"class.Cicada::CircularBuffer.0"* %0 to i8*, !dbg !5799
  call void @_ZdlPv(i8* noundef %3) #35, !dbg !5799
  ret void, !dbg !5800
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i8 @_ZN6Cicada14CircularBufferIhE4readEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !5801 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5803, metadata !DIExpression()), !dbg !5804
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6, !dbg !5805
  %3 = load i8*, i8** %2, align 8, !dbg !5805, !tbaa !5504
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 3, !dbg !5806
  %5 = load i64, i64* %4, align 8, !dbg !5806, !tbaa !5506
  %6 = trunc i64 %5 to i32, !dbg !5805
  %7 = getelementptr inbounds i8, i8* %3, i32 %6, !dbg !5805
  %8 = load i8, i8* %7, align 1, !dbg !5805, !tbaa !2624
  ret i8 %8, !dbg !5807
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIhE5flushEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !5808 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5810, metadata !DIExpression()), !dbg !5811
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 2, !dbg !5812
  %3 = bitcast i64* %2 to i8*, !dbg !5813
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %3, i8 0, i64 24, i1 false), !dbg !5814
  ret void, !dbg !5813
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i1 @_ZNK6Cicada14CircularBufferIhE7isEmptyEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !5815 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5817, metadata !DIExpression()), !dbg !5818
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !5819
  %3 = load i64, i64* %2, align 8, !dbg !5819, !tbaa !5482
  %4 = icmp eq i64 %3, 0, !dbg !5820
  ret i1 %4, !dbg !5821
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i1 @_ZNK6Cicada14CircularBufferIhE6isFullEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !5822 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5824, metadata !DIExpression()), !dbg !5825
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !5826
  %3 = load i64, i64* %2, align 8, !dbg !5826, !tbaa !5482
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !5827
  %5 = load i64, i64* %4, align 8, !dbg !5827, !tbaa !5524
  %6 = icmp eq i64 %3, %5, !dbg !5828
  ret i1 %6, !dbg !5829
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIhE4sizeEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !5830 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5832, metadata !DIExpression()), !dbg !5833
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !5834
  %3 = load i64, i64* %2, align 8, !dbg !5834, !tbaa !5524
  ret i64 %3, !dbg !5835
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IStatefulDevice"* @_ZN6Cicada15IStatefulDeviceC2Ev(%"class.Cicada::IStatefulDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #3 comdat align 2 !dbg !5836 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IStatefulDevice"* %0, metadata !5839, metadata !DIExpression()), !dbg !5841
  %2 = getelementptr inbounds %"class.Cicada::IStatefulDevice", %"class.Cicada::IStatefulDevice"* %0, i32 0, i32 0, !dbg !5842
  %3 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %2) #34, !dbg !5842
  %4 = getelementptr inbounds %"class.Cicada::IStatefulDevice", %"class.Cicada::IStatefulDevice"* %0, i32 0, i32 0, i32 0, !dbg !5842
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN6Cicada15IStatefulDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 4, !dbg !5842, !tbaa !2568
  ret %"class.Cicada::IStatefulDevice"* %0, !dbg !5842
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada13IIPCommDeviceD0Ev(%"class.Cicada::IIPCommDevice"* noundef nonnull align 4 dereferenceable(4) %0) unnamed_addr #3 comdat align 2 !dbg !5843 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IIPCommDevice"* %0, metadata !5845, metadata !DIExpression()), !dbg !5846
  call void @llvm.trap() #36, !dbg !5847
  unreachable, !dbg !5847
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #3 comdat align 2 !dbg !5848 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !5851, metadata !DIExpression()), !dbg !5852
  %2 = getelementptr inbounds %"class.Cicada::ICommDevice", %"class.Cicada::ICommDevice"* %0, i32 0, i32 0, !dbg !5853
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6Cicada11ICommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %2, align 4, !dbg !5853, !tbaa !2568
  ret %"class.Cicada::ICommDevice"* %0, !dbg !5853
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada15IStatefulDeviceD0Ev(%"class.Cicada::IStatefulDevice"* noundef nonnull align 4 dereferenceable(4) %0) unnamed_addr #3 comdat align 2 !dbg !5854 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IStatefulDevice"* %0, metadata !5856, metadata !DIExpression()), !dbg !5857
  call void @llvm.trap() #36, !dbg !5858
  unreachable, !dbg !5858
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada11ICommDeviceD0Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %0) unnamed_addr #3 comdat align 2 !dbg !5859 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !5861, metadata !DIExpression()), !dbg !5862
  call void @llvm.trap() #36, !dbg !5863
  unreachable, !dbg !5863
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceC2EPhS1_yy(%"class.Cicada::IPCommDevice"* noundef nonnull returned align 8 dereferenceable(140) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4) unnamed_addr #3 align 2 !dbg !5864 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5866, metadata !DIExpression()), !dbg !5871
  call void @llvm.dbg.value(metadata i8* %1, metadata !5867, metadata !DIExpression()), !dbg !5871
  call void @llvm.dbg.value(metadata i8* %2, metadata !5868, metadata !DIExpression()), !dbg !5871
  call void @llvm.dbg.value(metadata i64 %3, metadata !5869, metadata !DIExpression()), !dbg !5871
  call void @llvm.dbg.value(metadata i64 %4, metadata !5870, metadata !DIExpression()), !dbg !5871
  %6 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 0, !dbg !5872
  %7 = call noundef %"class.Cicada::IIPCommDevice"* @_ZN6Cicada13IIPCommDeviceC2Ev(%"class.Cicada::IIPCommDevice"* noundef nonnull align 4 dereferenceable(4) %6) #34, !dbg !5873
  %8 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 1, !dbg !5872
  %9 = call noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskC2Et(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %8, i16 noundef zeroext 0), !dbg !5873
  %10 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5872
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [5 x i8*] }, { [15 x i8*], [5 x i8*] }* @_ZTVN6Cicada12IPCommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %10, align 8, !dbg !5872, !tbaa !2568
  %11 = getelementptr %"class.Cicada::Task", %"class.Cicada::Task"* %8, i32 0, i32 0, !dbg !5872
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [5 x i8*] }, { [15 x i8*], [5 x i8*] }* @_ZTVN6Cicada12IPCommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %11, align 4, !dbg !5872, !tbaa !2568
  %12 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 2, !dbg !5874
  %13 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhEC2EPhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %12, i8* noundef %1, i64 noundef %3), !dbg !5874
  %14 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 3, !dbg !5875
  %15 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhEC2EPhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %14, i8* noundef %2, i64 noundef %4), !dbg !5875
  %16 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 5, !dbg !5876
  store i8* null, i8** %16, align 4, !dbg !5876, !tbaa !5646
  %17 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 6, !dbg !5877
  store i16 0, i16* %17, align 8, !dbg !5877, !tbaa !5688
  %18 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 7, !dbg !5878
  store i8 32, i8* %18, align 2, !dbg !5878, !tbaa !5289
  %19 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 8, !dbg !5879
  store i32 0, i32* %19, align 4, !dbg !5879, !tbaa !5601
  %20 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 9, !dbg !5880
  store i8* null, i8** %20, align 8, !dbg !5880, !tbaa !5474
  ret %"class.Cicada::IPCommDevice"* %0, !dbg !5881
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada13SimCommDeviceD0Ev(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %0) unnamed_addr #3 comdat align 2 !dbg !5882 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5884, metadata !DIExpression()), !dbg !5886
  call void @llvm.trap() #36, !dbg !5887
  unreachable, !dbg !5887
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice7connectEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %0) unnamed_addr #4 align 2 !dbg !5888 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5890, metadata !DIExpression()), !dbg !5891
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 1, !dbg !5892
  %3 = load i8*, i8** %2, align 8, !dbg !5892, !tbaa !5894
  %4 = icmp eq i8* %3, null, !dbg !5896
  br i1 %4, label %8, label %5, !dbg !5897

5:                                                ; preds = %1
  %6 = bitcast %"class.Cicada::SimCommDevice"* %0 to %"class.Cicada::IPCommDevice"*, !dbg !5898
  %7 = call noundef zeroext i1 @_ZN6Cicada12IPCommDevice7connectEv(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %6) #34, !dbg !5898
  br label %8, !dbg !5899

8:                                                ; preds = %1, %5
  %9 = phi i1 [ %7, %5 ], [ false, %1 ], !dbg !5891
  ret i1 %9, !dbg !5900
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada13SimCommDevice11resetStatesEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %0) unnamed_addr #4 align 2 !dbg !5901 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5903, metadata !DIExpression()), !dbg !5904
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 1, !dbg !5905
  %3 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %2, align 4, !dbg !5905, !tbaa !5299
  %4 = bitcast %"class.Cicada::IBufferedSerial"* %3 to void (%"class.Cicada::IBufferedSerial"*)***, !dbg !5906
  %5 = load void (%"class.Cicada::IBufferedSerial"*)**, void (%"class.Cicada::IBufferedSerial"*)*** %4, align 4, !dbg !5906, !tbaa !2568
  %6 = getelementptr inbounds void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %5, i32 12, !dbg !5906
  %7 = load void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %6, align 4, !dbg !5906
  call void %7(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %3) #34, !dbg !5906
  %8 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 2, !dbg !5907
  call void @_ZN6Cicada14CircularBufferIhE5flushEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %8), !dbg !5908
  %9 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 3, !dbg !5909
  call void @_ZN6Cicada14CircularBufferIhE5flushEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %9), !dbg !5910
  %10 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 3, !dbg !5911
  %11 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 8, !dbg !5912
  store i32 0, i32* %11, align 4, !dbg !5913, !tbaa !5601
  %12 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 9, !dbg !5914
  store i8* null, i8** %12, align 8, !dbg !5915, !tbaa !5474
  %13 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !5916
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(27) %10, i8 0, i64 27, i1 false), !dbg !5917
  store i8 32, i8* %13, align 2, !dbg !5918, !tbaa !5289
  %14 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 4, !dbg !5919
  store i8 99, i8* %14, align 4, !dbg !5920, !tbaa !5921
  %15 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 0, !dbg !5922
  store i8 0, i8* %15, align 4, !dbg !5923, !tbaa !2624
  %16 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 1, !dbg !5924
  store i8 0, i8* %16, align 1, !dbg !5925, !tbaa !2624
  ret void, !dbg !5926
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local void @_ZN6Cicada13SimCommDevice6setApnEPKc(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull writeonly align 8 dereferenceable(280) %0, i8* noundef %1) unnamed_addr #13 align 2 !dbg !5927 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5929, metadata !DIExpression()), !dbg !5931
  call void @llvm.dbg.value(metadata i8* %1, metadata !5930, metadata !DIExpression()), !dbg !5931
  %3 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 1, !dbg !5932
  store i8* %1, i8** %3, align 8, !dbg !5933, !tbaa !5894
  ret void, !dbg !5934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice10serialLockEv(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0) unnamed_addr #24 align 2 !dbg !5935 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5937, metadata !DIExpression()), !dbg !5938
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 9, !dbg !5939
  %3 = load i8*, i8** %2, align 8, !dbg !5939, !tbaa !5474
  %4 = icmp eq i8* %3, null, !dbg !5939
  %5 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 5
  %6 = load i8, i8* %5, align 1
  %7 = icmp eq i8 %6, 0
  %8 = select i1 %4, i1 %7, i1 false, !dbg !5941
  br i1 %8, label %9, label %13, !dbg !5941

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !5942
  %11 = load i8, i8* %10, align 2, !dbg !5943, !tbaa !5289
  %12 = or i8 %11, 64, !dbg !5943
  store i8 %12, i8* %10, align 2, !dbg !5943, !tbaa !5289
  br label %13, !dbg !5944

13:                                               ; preds = %1, %9
  ret i1 %8, !dbg !5945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn
define dso_local void @_ZN6Cicada13SimCommDevice12serialUnlockEv(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0) unnamed_addr #24 align 2 !dbg !5946 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5948, metadata !DIExpression()), !dbg !5949
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !5950
  %3 = load i8, i8* %2, align 2, !dbg !5951, !tbaa !5289
  %4 = and i8 %3, -65, !dbg !5951
  store i8 %4, i8* %2, align 2, !dbg !5951, !tbaa !5289
  ret void, !dbg !5952
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::SimCommDevice"* @_ZThn4_N6Cicada13SimCommDeviceD1Ev(%"class.Cicada::SimCommDevice"* noundef %0) unnamed_addr #3 comdat align 2 !dbg !5953 {
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 -1, i32 4, !dbg !5954
  %3 = bitcast i8* %2 to %"class.Cicada::IPCommDevice"*, !dbg !5954
  %4 = tail call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceD2Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(280) %3) #34, !dbg !5954
  ret %"class.Cicada::SimCommDevice"* undef, !dbg !5954
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada13SimCommDeviceD0Ev(%"class.Cicada::SimCommDevice"* noundef %0) unnamed_addr #3 comdat align 2 !dbg !5955 {
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 -1, i32 4, !dbg !5956
  %3 = bitcast i8* %2 to %"class.Cicada::SimCommDevice"*, !dbg !5956
  tail call void @_ZN6Cicada13SimCommDeviceD0Ev(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %3) #34, !dbg !5956
  ret void, !dbg !5956
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::SimCommDevice"* @_ZN6Cicada13SimCommDeviceC2ERNS_15IBufferedSerialEPhS3_y(%"class.Cicada::SimCommDevice"* noundef nonnull returned align 8 dereferenceable(280) %0, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4) unnamed_addr #3 align 2 !dbg !5957 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5959, metadata !DIExpression()), !dbg !5964
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %1, metadata !5960, metadata !DIExpression()), !dbg !5964
  call void @llvm.dbg.value(metadata i8* %2, metadata !5961, metadata !DIExpression()), !dbg !5964
  call void @llvm.dbg.value(metadata i8* %3, metadata !5962, metadata !DIExpression()), !dbg !5964
  call void @llvm.dbg.value(metadata i64 %4, metadata !5963, metadata !DIExpression()), !dbg !5964
  %6 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, !dbg !5965
  %7 = call noundef %"class.Cicada::ATCommDevice"* @_ZN6Cicada12ATCommDeviceC2ERNS_15IBufferedSerialEPhS3_y(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4) #34, !dbg !5966
  %8 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5965
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [5 x i8*] }, { [20 x i8*], [5 x i8*] }* @_ZTVN6Cicada13SimCommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %8, align 8, !dbg !5965, !tbaa !2568
  %9 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !5965
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [5 x i8*] }, { [20 x i8*], [5 x i8*] }* @_ZTVN6Cicada13SimCommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %9, align 4, !dbg !5965, !tbaa !2568
  %10 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 1, !dbg !5967
  store i8* null, i8** %10, align 8, !dbg !5967, !tbaa !5894
  call void @_ZN6Cicada13SimCommDevice11resetStatesEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %0), !dbg !5968
  ret %"class.Cicada::SimCommDevice"* %0, !dbg !5970
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::SimCommDevice"* @_ZN6Cicada13SimCommDeviceC2ERNS_15IBufferedSerialEPhS3_yy(%"class.Cicada::SimCommDevice"* noundef nonnull returned align 8 dereferenceable(280) %0, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4, i64 noundef %5) unnamed_addr #3 align 2 !dbg !5971 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5973, metadata !DIExpression()), !dbg !5979
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %1, metadata !5974, metadata !DIExpression()), !dbg !5979
  call void @llvm.dbg.value(metadata i8* %2, metadata !5975, metadata !DIExpression()), !dbg !5979
  call void @llvm.dbg.value(metadata i8* %3, metadata !5976, metadata !DIExpression()), !dbg !5979
  call void @llvm.dbg.value(metadata i64 %4, metadata !5977, metadata !DIExpression()), !dbg !5979
  call void @llvm.dbg.value(metadata i64 %5, metadata !5978, metadata !DIExpression()), !dbg !5979
  %7 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, !dbg !5980
  %8 = call noundef %"class.Cicada::ATCommDevice"* @_ZN6Cicada12ATCommDeviceC2ERNS_15IBufferedSerialEPhS3_yy(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %7, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4, i64 noundef %5) #34, !dbg !5981
  %9 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5980
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [5 x i8*] }, { [20 x i8*], [5 x i8*] }* @_ZTVN6Cicada13SimCommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8, !dbg !5980, !tbaa !2568
  %10 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !5980
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [5 x i8*] }, { [20 x i8*], [5 x i8*] }* @_ZTVN6Cicada13SimCommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %10, align 4, !dbg !5980, !tbaa !2568
  %11 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 1, !dbg !5982
  store i8* null, i8** %11, align 8, !dbg !5982, !tbaa !5894
  call void @_ZN6Cicada13SimCommDevice11resetStatesEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %0), !dbg !5983
  ret %"class.Cicada::SimCommDevice"* %0, !dbg !5985
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice14fillLineBufferEv(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0) local_unnamed_addr #4 align 2 !dbg !5986 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5988, metadata !DIExpression()), !dbg !5993
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !5994
  %3 = load i8, i8* %2, align 2, !dbg !5994, !tbaa !5289
  %4 = and i8 %3, 32, !dbg !5995
  %5 = icmp eq i8 %4, 0, !dbg !5994
  br i1 %5, label %36, label %6, !dbg !5996

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.Cicada::IBufferedSerial"** %7 to %"class.Cicada::ICommDevice"**
  %9 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 3
  br label %10, !dbg !5997

10:                                               ; preds = %6, %29
  %11 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %8, align 4, !dbg !5998, !tbaa !5299
  %12 = bitcast %"class.Cicada::ICommDevice"* %11 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !5999
  %13 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %12, align 4, !dbg !5999, !tbaa !2568
  %14 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %13, i32 2, !dbg !5999
  %15 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %14, align 4, !dbg !5999
  %16 = call noundef i64 %15(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %11) #34, !dbg !5999
  %17 = icmp eq i64 %16, 0, !dbg !5998
  br i1 %17, label %36, label %18, !dbg !5997

18:                                               ; preds = %10
  %19 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !6000, !tbaa !5299
  %20 = bitcast %"class.Cicada::IBufferedSerial"* %19 to i8 (%"class.Cicada::IBufferedSerial"*)***, !dbg !6001
  %21 = load i8 (%"class.Cicada::IBufferedSerial"*)**, i8 (%"class.Cicada::IBufferedSerial"*)*** %20, align 4, !dbg !6001, !tbaa !2568
  %22 = getelementptr inbounds i8 (%"class.Cicada::IBufferedSerial"*)*, i8 (%"class.Cicada::IBufferedSerial"*)** %21, i32 7, !dbg !6001
  %23 = load i8 (%"class.Cicada::IBufferedSerial"*)*, i8 (%"class.Cicada::IBufferedSerial"*)** %22, align 4, !dbg !6001
  %24 = call noundef zeroext i8 %23(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %19) #34, !dbg !6001
  call void @llvm.dbg.value(metadata i8 %24, metadata !5989, metadata !DIExpression()), !dbg !6002
  %25 = load i8, i8* %9, align 1, !dbg !6003, !tbaa !6004
  %26 = add i8 %25, 1, !dbg !6003
  store i8 %26, i8* %9, align 1, !dbg !6003, !tbaa !6004
  %27 = zext i8 %25 to i32, !dbg !6005
  %28 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 %27, !dbg !6005
  store i8 %24, i8* %28, align 1, !dbg !6006, !tbaa !2624
  switch i8 %24, label %29 [
    i8 62, label %32
    i8 10, label %32
  ], !dbg !6007

29:                                               ; preds = %18
  %30 = load i8, i8* %9, align 1, !dbg !6009, !tbaa !6004
  %31 = icmp eq i8 %30, 60, !dbg !6010
  br i1 %31, label %32, label %10, !dbg !6011

32:                                               ; preds = %18, %18, %29
  %33 = load i8, i8* %9, align 1, !dbg !6012, !tbaa !6004
  %34 = zext i8 %33 to i32, !dbg !6014
  %35 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 %34, !dbg !6014
  store i8 0, i8* %35, align 1, !dbg !6015, !tbaa !2624
  store i8 0, i8* %9, align 1, !dbg !6016, !tbaa !6004
  br label %36

36:                                               ; preds = %10, %32, %1
  %37 = phi i1 [ false, %1 ], [ true, %32 ], [ false, %10 ], !dbg !5993
  ret i1 %37, !dbg !6017
}

; Function Attrs: mustprogress nofree noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice13parseDnsReplyEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %0) local_unnamed_addr #26 align 2 !dbg !6018 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !6020, metadata !DIExpression()), !dbg !6026
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6027
  %3 = call i32 @memcmp(i8* noundef nonnull dereferenceable(11) %2, i8* noundef nonnull dereferenceable(11) getelementptr inbounds ([12 x i8], [12 x i8]* @.str.62, i32 0, i32 0), i32 11), !dbg !6028
  %4 = icmp eq i32 %3, 0, !dbg !6029
  br i1 %4, label %5, label %55, !dbg !6030

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8 0, metadata !6025, metadata !DIExpression()), !dbg !6031
  call void @llvm.dbg.value(metadata i8 0, metadata !6024, metadata !DIExpression()), !dbg !6031
  %6 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6032
  %7 = load i8, i8* %6, align 8, !dbg !6032, !tbaa !2624
  %8 = icmp eq i8 %7, 0, !dbg !6032
  br i1 %8, label %24, label %9, !dbg !6033

9:                                                ; preds = %5, %9
  %10 = phi i8 [ %19, %9 ], [ %7, %5 ]
  %11 = phi i8 [ %16, %9 ], [ 0, %5 ]
  %12 = phi i8 [ %13, %9 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !6025, metadata !DIExpression()), !dbg !6031
  call void @llvm.dbg.value(metadata i8 %12, metadata !6024, metadata !DIExpression()), !dbg !6031
  %13 = add i8 %12, 1, !dbg !6034
  call void @llvm.dbg.value(metadata i8 %13, metadata !6024, metadata !DIExpression()), !dbg !6031
  %14 = icmp eq i8 %10, 34, !dbg !6037
  %15 = zext i1 %14 to i8, !dbg !6038
  %16 = add i8 %11, %15, !dbg !6038
  call void @llvm.dbg.value(metadata i8 %16, metadata !6025, metadata !DIExpression()), !dbg !6031
  %17 = zext i8 %13 to i32, !dbg !6032
  %18 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 %17, !dbg !6032
  %19 = load i8, i8* %18, align 1, !dbg !6032, !tbaa !2624
  %20 = icmp eq i8 %19, 0, !dbg !6032
  br i1 %20, label %21, label %9, !dbg !6033, !llvm.loop !6039

21:                                               ; preds = %9
  %22 = add i8 %16, -11, !dbg !6041
  %23 = icmp ult i8 %22, -7, !dbg !6041
  br label %24, !dbg !6041

24:                                               ; preds = %21, %5
  %25 = phi i1 [ true, %5 ], [ %23, %21 ]
  br i1 %25, label %26, label %28, !dbg !6041

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 8, !dbg !6043
  store i32 6, i32* %27, align 4, !dbg !6045, !tbaa !5601
  br label %53, !dbg !6046

28:                                               ; preds = %24, %28
  %29 = phi i8 [ %37, %28 ], [ 0, %24 ]
  %30 = phi i8 [ %31, %28 ], [ 0, %24 ]
  call void @llvm.dbg.value(metadata i8 %29, metadata !6025, metadata !DIExpression()), !dbg !6031
  call void @llvm.dbg.value(metadata i8 %30, metadata !6024, metadata !DIExpression()), !dbg !6031
  %31 = add i8 %30, 1, !dbg !6047
  call void @llvm.dbg.value(metadata i8 %31, metadata !6024, metadata !DIExpression()), !dbg !6031
  %32 = zext i8 %30 to i32, !dbg !6049
  %33 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 %32, !dbg !6049
  %34 = load i8, i8* %33, align 1, !dbg !6049, !tbaa !2624
  %35 = icmp eq i8 %34, 34, !dbg !6050
  %36 = zext i1 %35 to i8, !dbg !6051
  %37 = add i8 %29, %36, !dbg !6051
  call void @llvm.dbg.value(metadata i8 %37, metadata !6025, metadata !DIExpression()), !dbg !6031
  %38 = icmp ult i8 %37, 3, !dbg !6052
  br i1 %38, label %28, label %39, !dbg !6053, !llvm.loop !6054

39:                                               ; preds = %28
  %40 = zext i8 %31 to i32, !dbg !6056
  call void @llvm.dbg.value(metadata i8* %50, metadata !6021, metadata !DIExpression()), !dbg !6031
  br label %41, !dbg !6057

41:                                               ; preds = %47, %39
  %42 = phi i8 [ %31, %39 ], [ %48, %47 ], !dbg !6031
  call void @llvm.dbg.value(metadata i8 %42, metadata !6024, metadata !DIExpression()), !dbg !6031
  %43 = zext i8 %42 to i32, !dbg !6058
  %44 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 %43, !dbg !6058
  %45 = load i8, i8* %44, align 1, !dbg !6058, !tbaa !2624
  switch i8 %45, label %47 [
    i8 0, label %49
    i8 34, label %46
  ], !dbg !6057

46:                                               ; preds = %41
  store i8 0, i8* %44, align 1, !dbg !6059, !tbaa !2624
  br label %47, !dbg !6062

47:                                               ; preds = %41, %46
  %48 = add i8 %42, 1, !dbg !6063
  call void @llvm.dbg.value(metadata i8 %48, metadata !6024, metadata !DIExpression()), !dbg !6031
  br label %41, !dbg !6057, !llvm.loop !6064

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 %40, !dbg !6066
  %51 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 2, i32 0, !dbg !6067
  %52 = call i8* @strcpy(i8* noundef nonnull %51, i8* noundef nonnull %50), !dbg !6068
  br label %53, !dbg !6069

53:                                               ; preds = %49, %26
  %54 = xor i1 %25, true
  br label %62

55:                                               ; preds = %1
  %56 = call i32 @memcmp(i8* noundef nonnull dereferenceable(11) %2, i8* noundef nonnull dereferenceable(11) getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.63, i32 0, i32 0), i32 11), !dbg !6070
  %57 = icmp eq i32 %56, 0, !dbg !6072
  br i1 %57, label %58, label %62, !dbg !6073

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !6074
  %60 = load i8, i8* %59, align 2, !dbg !6076, !tbaa !5289
  %61 = or i8 %60, 2, !dbg !6076
  store i8 %61, i8* %59, align 2, !dbg !6076, !tbaa !5289
  br label %62, !dbg !6077

62:                                               ; preds = %58, %55, %53
  %63 = phi i1 [ %54, %53 ], [ false, %55 ], [ false, %58 ], !dbg !6026
  ret i1 %63, !dbg !6078
}

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @memcmp(i8* nocapture, i8* nocapture, i32) local_unnamed_addr #27

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare dso_local i8* @strcpy(i8* noalias noundef returned writeonly, i8* noalias nocapture noundef readonly) local_unnamed_addr #28

; Function Attrs: mustprogress nofree noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice14parseCiprxget4Ev(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0) local_unnamed_addr #26 align 2 !dbg !6079 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !6081, metadata !DIExpression()), !dbg !6085
  %3 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6086
  %4 = call i32 @memcmp(i8* noundef nonnull dereferenceable(15) %3, i8* noundef nonnull dereferenceable(15) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.64, i32 0, i32 0), i32 15), !dbg !6087
  %5 = icmp eq i32 %4, 0, !dbg !6088
  br i1 %5, label %6, label %15, !dbg !6089

6:                                                ; preds = %1
  %7 = bitcast i32* %2 to i8*, !dbg !6090
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #34, !dbg !6090
  %8 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 15, !dbg !6091
  call void @llvm.dbg.value(metadata i32* %2, metadata !6082, metadata !DIExpression(DW_OP_deref)), !dbg !6092
  %9 = call i32 (i8*, i8*, ...) @sscanf(i8* noundef nonnull %8, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.65, i32 0, i32 0), i32* noundef nonnull %2), !dbg !6093
  %10 = load i32, i32* %2, align 4, !dbg !6094, !tbaa !6095
  call void @llvm.dbg.value(metadata i32 %10, metadata !6082, metadata !DIExpression()), !dbg !6092
  %11 = sext i32 %10 to i64, !dbg !6094
  %12 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !6096
  %13 = load i64, i64* %12, align 8, !dbg !6097, !tbaa !5386
  %14 = add i64 %13, %11, !dbg !6097
  store i64 %14, i64* %12, align 8, !dbg !6097, !tbaa !5386
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #34, !dbg !6098
  br label %15

15:                                               ; preds = %1, %6
  ret i1 %5, !dbg !6099
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @sscanf(i8* nocapture noundef readonly, i8* nocapture noundef readonly, ...) local_unnamed_addr #25

; Function Attrs: mustprogress nofree noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice14parseCiprxget2Ev(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0) local_unnamed_addr #26 align 2 !dbg !6100 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !6102, metadata !DIExpression()), !dbg !6106
  %3 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6107
  %4 = call i32 @memcmp(i8* noundef nonnull dereferenceable(15) %3, i8* noundef nonnull dereferenceable(15) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.66, i32 0, i32 0), i32 15), !dbg !6108
  %5 = icmp eq i32 %4, 0, !dbg !6109
  br i1 %5, label %6, label %21, !dbg !6110

6:                                                ; preds = %1
  %7 = bitcast i32* %2 to i8*, !dbg !6111
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #34, !dbg !6111
  %8 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 15, !dbg !6112
  call void @llvm.dbg.value(metadata i32* %2, metadata !6103, metadata !DIExpression(DW_OP_deref)), !dbg !6113
  %9 = call i32 (i8*, i8*, ...) @sscanf(i8* noundef nonnull %8, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.65, i32 0, i32 0), i32* noundef nonnull %2), !dbg !6114
  %10 = load i32, i32* %2, align 4, !dbg !6115, !tbaa !6095
  call void @llvm.dbg.value(metadata i32 %10, metadata !6103, metadata !DIExpression()), !dbg !6113
  %11 = sext i32 %10 to i64, !dbg !6115
  %12 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !6116
  %13 = load i64, i64* %12, align 8, !dbg !6117, !tbaa !5386
  %14 = sub i64 %13, %11, !dbg !6117
  store i64 %14, i64* %12, align 8, !dbg !6117, !tbaa !5386
  call void @llvm.dbg.value(metadata i32 %10, metadata !6103, metadata !DIExpression()), !dbg !6113
  %15 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 8, !dbg !6118
  %16 = load i64, i64* %15, align 8, !dbg !6119, !tbaa !5374
  %17 = add i64 %16, %11, !dbg !6119
  store i64 %17, i64* %15, align 8, !dbg !6119, !tbaa !5374
  %18 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !6120
  %19 = load i8, i8* %18, align 2, !dbg !6121, !tbaa !5289
  %20 = and i8 %19, -33, !dbg !6121
  store i8 %20, i8* %18, align 2, !dbg !6121, !tbaa !5289
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #34, !dbg !6122
  br label %21

21:                                               ; preds = %1, %6
  ret i1 %5, !dbg !6123
}

; Function Attrs: mustprogress nofree noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice8parseCsqEv(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0) local_unnamed_addr #26 align 2 !dbg !6124 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !6126, metadata !DIExpression()), !dbg !6130
  %3 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6131
  %4 = call i32 @memcmp(i8* noundef nonnull dereferenceable(6) %3, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.67, i32 0, i32 0), i32 6), !dbg !6132
  %5 = icmp eq i32 %4, 0, !dbg !6133
  br i1 %5, label %6, label %16, !dbg !6134

6:                                                ; preds = %1
  %7 = bitcast i32* %2 to i8*, !dbg !6135
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #34, !dbg !6135
  %8 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 6, !dbg !6136
  call void @llvm.dbg.value(metadata i32* %2, metadata !6127, metadata !DIExpression(DW_OP_deref)), !dbg !6138
  %9 = call i32 (i8*, i8*, ...) @sscanf(i8* noundef nonnull %8, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.68, i32 0, i32 0), i32* noundef nonnull %2), !dbg !6139
  %10 = icmp eq i32 %9, 1, !dbg !6140
  br i1 %10, label %11, label %15, !dbg !6141

11:                                               ; preds = %6
  %12 = load i32, i32* %2, align 4, !dbg !6142, !tbaa !6095
  call void @llvm.dbg.value(metadata i32 %12, metadata !6127, metadata !DIExpression()), !dbg !6138
  %13 = trunc i32 %12 to i8, !dbg !6142
  %14 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 4, !dbg !6144
  store i8 %13, i8* %14, align 4, !dbg !6145, !tbaa !5921
  br label %15, !dbg !6146

15:                                               ; preds = %11, %6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #34, !dbg !6147
  br label %16

16:                                               ; preds = %1, %15
  ret i1 %5, !dbg !6148
}

; Function Attrs: mustprogress nofree noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice12parseIDReplyEv(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0) local_unnamed_addr #26 align 2 !dbg !6149 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !6151, metadata !DIExpression()), !dbg !6154
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6155
  %3 = call i32 @memcmp(i8* noundef nonnull dereferenceable(2) %2, i8* noundef nonnull dereferenceable(2) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i32 0, i32 0), i32 2), !dbg !6157
  %4 = icmp eq i32 %3, 0, !dbg !6158
  %5 = load i8, i8* %2, align 8
  %6 = icmp eq i8 %5, 13
  %7 = select i1 %4, i1 true, i1 %6, !dbg !6159
  br i1 %7, label %29, label %8, !dbg !6159

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %2, metadata !6152, metadata !DIExpression()), !dbg !6154
  %9 = call i32 @memcmp(i8* noundef nonnull dereferenceable(8) %2, i8* noundef nonnull dereferenceable(8) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i32 0, i32 0), i32 8), !dbg !6160
  %10 = icmp eq i32 %9, 0, !dbg !6162
  %11 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 8
  %12 = select i1 %10, i8* %11, i8* %2, !dbg !6163
  call void @llvm.dbg.value(metadata i8* %12, metadata !6152, metadata !DIExpression()), !dbg !6154
  call void @llvm.dbg.value(metadata i32 0, metadata !6153, metadata !DIExpression()), !dbg !6154
  %13 = load i8, i8* %12, align 8, !dbg !6164, !tbaa !2624
  %14 = icmp eq i8 %13, 13, !dbg !6165
  br i1 %14, label %26, label %15, !dbg !6166

15:                                               ; preds = %8, %15
  %16 = phi i8 [ %22, %15 ], [ %13, %8 ]
  %17 = phi i32 [ %20, %15 ], [ 0, %8 ]
  %18 = phi i8* [ %19, %15 ], [ %12, %8 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6153, metadata !DIExpression()), !dbg !6154
  call void @llvm.dbg.value(metadata i8* %18, metadata !6152, metadata !DIExpression()), !dbg !6154
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !6167
  call void @llvm.dbg.value(metadata i8* %19, metadata !6152, metadata !DIExpression()), !dbg !6154
  %20 = add nuw nsw i32 %17, 1, !dbg !6169
  call void @llvm.dbg.value(metadata i32 %20, metadata !6153, metadata !DIExpression()), !dbg !6154
  %21 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 %17, !dbg !6170
  store i8 %16, i8* %21, align 1, !dbg !6171, !tbaa !2624
  %22 = load i8, i8* %19, align 1, !dbg !6164, !tbaa !2624
  %23 = icmp ne i8 %22, 13, !dbg !6165
  %24 = icmp ult i32 %17, 22, !dbg !6172
  %25 = select i1 %23, i1 %24, i1 false, !dbg !6172
  br i1 %25, label %15, label %26, !dbg !6166, !llvm.loop !6173

26:                                               ; preds = %15, %8
  %27 = phi i32 [ 0, %8 ], [ %20, %15 ], !dbg !6154
  %28 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 %27, !dbg !6175
  store i8 0, i8* %28, align 1, !dbg !6176, !tbaa !2624
  br label %29

29:                                               ; preds = %1, %26
  %30 = xor i1 %7, true, !dbg !6177
  ret i1 %30, !dbg !6177
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice12sendDnsQueryEv(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull readonly align 8 dereferenceable(280) %0) local_unnamed_addr #4 align 2 !dbg !6178 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !6180, metadata !DIExpression()), !dbg !6181
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 1, !dbg !6182
  %3 = bitcast %"class.Cicada::IBufferedSerial"** %2 to %"class.Cicada::ICommDevice"**, !dbg !6182
  %4 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %3, align 4, !dbg !6182, !tbaa !5299
  %5 = bitcast %"class.Cicada::ICommDevice"* %4 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !6184
  %6 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %5, align 4, !dbg !6184, !tbaa !2568
  %7 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %6, i32 3, !dbg !6184
  %8 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %7, align 4, !dbg !6184
  %9 = call noundef i64 %8(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %4) #34, !dbg !6184
  %10 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 5, !dbg !6185
  %11 = load i8*, i8** %10, align 4, !dbg !6185, !tbaa !5646
  %12 = call i32 @strlen(i8* noundef nonnull dereferenceable(1) %11), !dbg !6186
  %13 = add i32 %12, 20, !dbg !6187
  %14 = zext i32 %13 to i64, !dbg !6186
  %15 = icmp ult i64 %9, %14, !dbg !6188
  br i1 %15, label %37, label %16, !dbg !6189

16:                                               ; preds = %1
  %17 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %2, align 4, !dbg !6190, !tbaa !5299
  %18 = bitcast %"class.Cicada::IBufferedSerial"* %17 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !6191
  %19 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %18, align 4, !dbg !6191, !tbaa !2568
  %20 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %19, i32 8, !dbg !6191
  %21 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %20, align 4, !dbg !6191
  %22 = call noundef i64 %21(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %17, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i32 0, i32 0)) #34, !dbg !6191
  %23 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %2, align 4, !dbg !6192, !tbaa !5299
  %24 = load i8*, i8** %10, align 4, !dbg !6193, !tbaa !5646
  %25 = bitcast %"class.Cicada::IBufferedSerial"* %23 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !6194
  %26 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %25, align 4, !dbg !6194, !tbaa !2568
  %27 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %26, i32 8, !dbg !6194
  %28 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %27, align 4, !dbg !6194
  %29 = call noundef i64 %28(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %23, i8* noundef %24) #34, !dbg !6194
  %30 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %2, align 4, !dbg !6195, !tbaa !5299
  %31 = load i8*, i8** @_ZN6Cicada12ATCommDevice12_quoteEndStrE, align 4, !dbg !6196, !tbaa !2476
  %32 = bitcast %"class.Cicada::IBufferedSerial"* %30 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !6197
  %33 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %32, align 4, !dbg !6197, !tbaa !2568
  %34 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %33, i32 8, !dbg !6197
  %35 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %34, align 4, !dbg !6197
  %36 = call noundef i64 %35(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %30, i8* noundef %31) #34, !dbg !6197
  br label %37, !dbg !6198

37:                                               ; preds = %1, %16
  %38 = xor i1 %15, true, !dbg !6199
  ret i1 %38, !dbg !6199
}

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare dso_local i32 @strlen(i8* nocapture noundef) local_unnamed_addr #29

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice13sendCiprxget2Ev(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %0) local_unnamed_addr #4 align 2 !dbg !6200 {
  %2 = alloca [17 x i8], align 1
  %3 = alloca [6 x i8], align 1
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !6202, metadata !DIExpression()), !dbg !6211
  %4 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 1, !dbg !6212
  %5 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %4, align 4, !dbg !6212, !tbaa !5299
  %6 = bitcast %"class.Cicada::IBufferedSerial"* %5 to i64 (%"class.Cicada::IBufferedSerial"*)***, !dbg !6213
  %7 = load i64 (%"class.Cicada::IBufferedSerial"*)**, i64 (%"class.Cicada::IBufferedSerial"*)*** %6, align 4, !dbg !6213, !tbaa !2568
  %8 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*)*, i64 (%"class.Cicada::IBufferedSerial"*)** %7, i32 13, !dbg !6213
  %9 = load i64 (%"class.Cicada::IBufferedSerial"*)*, i64 (%"class.Cicada::IBufferedSerial"*)** %8, align 4, !dbg !6213
  %10 = call noundef i64 %9(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %5) #34, !dbg !6213
  %11 = bitcast %"class.Cicada::IBufferedSerial"** %4 to %"class.Cicada::ICommDevice"**, !dbg !6214
  %12 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %11, align 4, !dbg !6214, !tbaa !5299
  %13 = bitcast %"class.Cicada::ICommDevice"* %12 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !6215
  %14 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %13, align 4, !dbg !6215, !tbaa !2568
  %15 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %14, i32 2, !dbg !6215
  %16 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %15, align 4, !dbg !6215
  %17 = call noundef i64 %16(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %12) #34, !dbg !6215
  %18 = sub i64 %10, %17, !dbg !6216
  %19 = icmp ugt i64 %18, 8, !dbg !6217
  br i1 %19, label %20, label %78, !dbg !6218

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 2, !dbg !6219
  %22 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %21), !dbg !6220
  %23 = icmp eq i64 %22, 0, !dbg !6221
  br i1 %23, label %78, label %24, !dbg !6222

24:                                               ; preds = %20
  %25 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %4, align 4, !dbg !6223, !tbaa !5299
  %26 = bitcast %"class.Cicada::IBufferedSerial"* %25 to i64 (%"class.Cicada::IBufferedSerial"*)***, !dbg !6224
  %27 = load i64 (%"class.Cicada::IBufferedSerial"*)**, i64 (%"class.Cicada::IBufferedSerial"*)*** %26, align 4, !dbg !6224, !tbaa !2568
  %28 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*)*, i64 (%"class.Cicada::IBufferedSerial"*)** %27, i32 13, !dbg !6224
  %29 = load i64 (%"class.Cicada::IBufferedSerial"*)*, i64 (%"class.Cicada::IBufferedSerial"*)** %28, align 4, !dbg !6224
  %30 = call noundef i64 %29(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %25) #34, !dbg !6224
  %31 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %11, align 4, !dbg !6225, !tbaa !5299
  %32 = bitcast %"class.Cicada::ICommDevice"* %31 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !6226
  %33 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %32, align 4, !dbg !6226, !tbaa !2568
  %34 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %33, i32 2, !dbg !6226
  %35 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %34, align 4, !dbg !6226
  %36 = call noundef i64 %35(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %31) #34, !dbg !6226
  %37 = sub i64 %30, %36, !dbg !6227
  %38 = add i64 %37, -8, !dbg !6228
  call void @llvm.dbg.value(metadata i64 %38, metadata !6203, metadata !DIExpression()), !dbg !6229
  %39 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !6230
  %40 = load i64, i64* %39, align 8, !dbg !6230, !tbaa !5386
  %41 = icmp ugt i64 %38, %40, !dbg !6232
  %42 = select i1 %41, i64 %40, i64 %38, !dbg !6233
  call void @llvm.dbg.value(metadata i64 %42, metadata !6203, metadata !DIExpression()), !dbg !6229
  %43 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %21), !dbg !6234
  %44 = icmp ugt i64 %42, %43, !dbg !6236
  br i1 %44, label %45, label %47, !dbg !6237

45:                                               ; preds = %24
  %46 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %21), !dbg !6238
  call void @llvm.dbg.value(metadata i64 %46, metadata !6203, metadata !DIExpression()), !dbg !6229
  br label %47, !dbg !6239

47:                                               ; preds = %45, %24
  %48 = phi i64 [ %46, %45 ], [ %42, %24 ], !dbg !6229
  call void @llvm.dbg.value(metadata i64 %48, metadata !6203, metadata !DIExpression()), !dbg !6229
  %49 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 5, !dbg !6240
  %50 = load i16, i16* %49, align 2, !dbg !6240, !tbaa !6242
  %51 = zext i16 %50 to i64, !dbg !6240
  %52 = icmp ugt i64 %48, %51, !dbg !6243
  %53 = trunc i64 %48 to i32, !dbg !6244
  %54 = zext i16 %50 to i32
  %55 = select i1 %52, i32 %54, i32 %53, !dbg !6244
  call void @llvm.dbg.value(metadata i64 poison, metadata !6203, metadata !DIExpression()), !dbg !6229
  %56 = getelementptr inbounds [17 x i8], [17 x i8]* %2, i32 0, i32 0, !dbg !6245
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %56) #34, !dbg !6245
  call void @llvm.dbg.declare(metadata [17 x i8]* %2, metadata !6206, metadata !DIExpression()), !dbg !6246
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(17) %56, i8* noundef nonnull align 1 dereferenceable(17) getelementptr inbounds ([17 x i8], [17 x i8]* @__const._ZN6Cicada13SimCommDevice13sendCiprxget2Ev.str, i32 0, i32 0), i32 17, i1 false), !dbg !6246
  %57 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i32 0, i32 0, !dbg !6247
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %57) #34, !dbg !6247
  call void @llvm.dbg.declare(metadata [6 x i8]* %3, metadata !6210, metadata !DIExpression()), !dbg !6248
  %58 = call i32 (i8*, i8*, ...) @sprintf(i8* noundef nonnull %57, i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.68, i32 0, i32 0), i32 noundef %55), !dbg !6249
  %59 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %4, align 4, !dbg !6250, !tbaa !5299
  %60 = bitcast %"class.Cicada::IBufferedSerial"* %59 to i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)***, !dbg !6251
  %61 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*** %60, align 4, !dbg !6251, !tbaa !2568
  %62 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %61, i32 6, !dbg !6251
  %63 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %62, align 4, !dbg !6251
  %64 = call noundef i64 %63(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %59, i8* noundef nonnull %56, i64 noundef 16) #34, !dbg !6251
  %65 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %4, align 4, !dbg !6252, !tbaa !5299
  %66 = bitcast %"class.Cicada::IBufferedSerial"* %65 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !6253
  %67 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %66, align 4, !dbg !6253, !tbaa !2568
  %68 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %67, i32 8, !dbg !6253
  %69 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %68, align 4, !dbg !6253
  %70 = call noundef i64 %69(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %65, i8* noundef nonnull %57) #34, !dbg !6253
  %71 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %4, align 4, !dbg !6254, !tbaa !5299
  %72 = load i8*, i8** @_ZN6Cicada12ATCommDevice11_lineEndStrE, align 4, !dbg !6255, !tbaa !2476
  %73 = bitcast %"class.Cicada::IBufferedSerial"* %71 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !6256
  %74 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %73, align 4, !dbg !6256, !tbaa !2568
  %75 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %74, i32 8, !dbg !6256
  %76 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %75, align 4, !dbg !6256
  %77 = call noundef i64 %76(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %71, i8* noundef %72) #34, !dbg !6256
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %57) #34, !dbg !6257
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %56) #34, !dbg !6257
  br label %78

78:                                               ; preds = %1, %20, %47
  %79 = phi i1 [ true, %47 ], [ false, %20 ], [ false, %1 ], !dbg !6258
  ret i1 %79, !dbg !6259
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @sprintf(i8* noalias nocapture noundef writeonly, i8* nocapture noundef readonly, ...) local_unnamed_addr #25

; Function Attrs: mustprogress nofree noinline nounwind willreturn
define dso_local void @_ZN6Cicada13SimCommDevice20checkConnectionStateEPKc(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0, i8* nocapture noundef readonly %1) local_unnamed_addr #22 align 2 !dbg !6260 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !6262, metadata !DIExpression()), !dbg !6264
  call void @llvm.dbg.value(metadata i8* %1, metadata !6263, metadata !DIExpression()), !dbg !6264
  %3 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6265
  %4 = call i32 @memcmp(i8* noundef nonnull dereferenceable(14) %3, i8* noundef nonnull dereferenceable(14) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0), i32 14), !dbg !6267
  %5 = icmp eq i32 %4, 0, !dbg !6268
  br i1 %5, label %6, label %10, !dbg !6269

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !6270
  %8 = load i8, i8* %7, align 2, !dbg !6272, !tbaa !5289
  %9 = or i8 %8, 4, !dbg !6272
  store i8 %9, i8* %7, align 2, !dbg !6272, !tbaa !5289
  br label %19, !dbg !6273

10:                                               ; preds = %2
  %11 = call i32 @strlen(i8* noundef nonnull dereferenceable(1) %1), !dbg !6274
  %12 = call i32 @strncmp(i8* noundef nonnull %3, i8* noundef %1, i32 noundef %11), !dbg !6276
  %13 = icmp eq i32 %12, 0, !dbg !6277
  br i1 %13, label %14, label %19, !dbg !6278

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 9, !dbg !6279
  store i8* null, i8** %15, align 8, !dbg !6281, !tbaa !5474
  %16 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !6282
  %17 = load i8, i8* %16, align 2, !dbg !6283, !tbaa !5289
  %18 = and i8 %17, -17, !dbg !6283
  store i8 %18, i8* %16, align 2, !dbg !6283, !tbaa !5289
  br label %19, !dbg !6284

19:                                               ; preds = %10, %14, %6
  ret void, !dbg !6285
}

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare dso_local i32 @strncmp(i8* nocapture noundef, i8* nocapture noundef, i32 noundef) local_unnamed_addr #29

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice13sendIDRequestEPKc(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %0, i8* noundef %1) local_unnamed_addr #4 align 2 !dbg !6286 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !6288, metadata !DIExpression()), !dbg !6293
  call void @llvm.dbg.value(metadata i8* %1, metadata !6289, metadata !DIExpression()), !dbg !6293
  %3 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 1, !dbg !6294
  %4 = load i8, i8* %3, align 1, !dbg !6294, !tbaa !2624
  %5 = icmp ne i8 %4, 0, !dbg !6295
  %6 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 0
  %7 = load i8, i8* %6, align 4
  %8 = icmp eq i8 %7, 0
  %9 = select i1 %5, i1 %8, i1 false, !dbg !6296
  br i1 %9, label %10, label %23, !dbg !6296

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !6297
  %12 = load i8, i8* %11, align 2, !dbg !6297, !tbaa !5289
  %13 = and i8 %12, 32, !dbg !6298
  %14 = icmp eq i8 %13, 0, !dbg !6297
  br i1 %14, label %23, label %15, !dbg !6299

15:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i8 %4, metadata !6290, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6300
  store i8 0, i8* %3, align 1, !dbg !6301, !tbaa !2624
  switch i8 %4, label %23 [
    i8 1, label %20
    i8 2, label %16
    i8 3, label %17
    i8 4, label %18
    i8 5, label %19
  ], !dbg !6302

16:                                               ; preds = %15
  br label %20

17:                                               ; preds = %15
  br label %20

18:                                               ; preds = %15
  br label %20

19:                                               ; preds = %15
  br label %20

20:                                               ; preds = %15, %19, %18, %17, %16
  %21 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0), %16 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i32 0, i32 0), %17 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0), %18 ], [ %1, %19 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i32 0, i32 0), %15 ]
  %22 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, !dbg !6303
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %22, i8* noundef %21) #34, !dbg !6303
  br label %23, !dbg !6305

23:                                               ; preds = %20, %2, %10, %15
  %24 = phi i1 [ false, %15 ], [ false, %10 ], [ false, %2 ], [ true, %20 ]
  ret i1 %24, !dbg !6305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local void @_ZN6Cicada13SimCommDevice11requestRSSIEv(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull writeonly align 8 dereferenceable(280) %0) local_unnamed_addr #13 align 2 !dbg !6306 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !6308, metadata !DIExpression()), !dbg !6309
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 4, !dbg !6310
  store i8 -1, i8* %2, align 4, !dbg !6311, !tbaa !5921
  ret void, !dbg !6312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef zeroext i8 @_ZN6Cicada13SimCommDevice7getRSSIEv(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull readonly align 8 dereferenceable(280) %0) local_unnamed_addr #18 align 2 !dbg !6313 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !6315, metadata !DIExpression()), !dbg !6316
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 4, !dbg !6317
  %3 = load i8, i8* %2, align 4, !dbg !6317, !tbaa !5921
  ret i8 %3, !dbg !6318
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada13SimCommDevice15requestIDStringENS0_13RequestIDTypeE(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0, i32 noundef %1) local_unnamed_addr #4 align 2 !dbg !6319 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !6321, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %1, metadata !6322, metadata !DIExpression()), !dbg !6323
  %3 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 1, !dbg !6324
  %4 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %3, align 4, !dbg !6324, !tbaa !5299
  %5 = bitcast %"class.Cicada::IBufferedSerial"* %4 to void (%"class.Cicada::IBufferedSerial"*)***, !dbg !6325
  %6 = load void (%"class.Cicada::IBufferedSerial"*)**, void (%"class.Cicada::IBufferedSerial"*)*** %5, align 4, !dbg !6325, !tbaa !2568
  %7 = getelementptr inbounds void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %6, i32 12, !dbg !6325
  %8 = load void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %7, align 4, !dbg !6325
  call void %8(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %4) #34, !dbg !6325
  %9 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 0, !dbg !6326
  store i8 0, i8* %9, align 4, !dbg !6327, !tbaa !2624
  %10 = trunc i32 %1 to i8, !dbg !6328
  %11 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 1, !dbg !6329
  store i8 %10, i8* %11, align 1, !dbg !6330, !tbaa !2624
  ret void, !dbg !6331
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef i8* @_ZN6Cicada13SimCommDevice11getIDStringEv(%"class.Cicada::SimCommDevice"* noundef nonnull readonly align 8 dereferenceable(280) %0) local_unnamed_addr #18 align 2 !dbg !6332 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !6334, metadata !DIExpression()), !dbg !6335
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 9, !dbg !6336
  %3 = load i8*, i8** %2, align 8, !dbg !6336, !tbaa !5474
  %4 = icmp ne i8* %3, null, !dbg !6338
  %5 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 0
  %6 = load i8, i8* %5, align 4
  %7 = icmp eq i8 %6, 0
  %8 = select i1 %4, i1 true, i1 %7, !dbg !6339
  %9 = select i1 %8, i8* null, i8* %5, !dbg !6339
  ret i8* %9, !dbg !6340
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada11ModemDetectD0Ev(%"class.Cicada::ModemDetect"* noundef nonnull align 8 dereferenceable(328) %0) unnamed_addr #3 comdat align 2 !dbg !6341 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ModemDetect"* %0, metadata !6344, metadata !DIExpression()), !dbg !6346
  %2 = call noundef %"class.Cicada::ModemDetect"* @_ZN6Cicada11ModemDetectD2Ev(%"class.Cicada::ModemDetect"* noundef nonnull align 8 dereferenceable(328) %0) #34, !dbg !6347
  %3 = bitcast %"class.Cicada::ModemDetect"* %0 to i8*, !dbg !6347
  call void @_ZdlPv(i8* noundef %3) #35, !dbg !6347
  ret void, !dbg !6347
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada11ModemDetect3runEv(%"class.Cicada::ModemDetect"* noundef nonnull align 8 dereferenceable(328) %0) unnamed_addr #4 align 2 !dbg !6348 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ModemDetect"* %0, metadata !6350, metadata !DIExpression()), !dbg !6359
  %2 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 6, !dbg !6360
  %3 = load %"class.Cicada::ATCommDevice"*, %"class.Cicada::ATCommDevice"** %2, align 4, !dbg !6360, !tbaa !6362
  %4 = icmp eq %"class.Cicada::ATCommDevice"* %3, null, !dbg !6360
  br i1 %4, label %11, label %5, !dbg !6365

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %3, i32 0, i32 0, i32 1, !dbg !6366
  %7 = bitcast %"class.Cicada::Task"* %6 to void (%"class.Cicada::Task"*)***, !dbg !6366
  %8 = load void (%"class.Cicada::Task"*)**, void (%"class.Cicada::Task"*)*** %7, align 4, !dbg !6366, !tbaa !2568
  %9 = getelementptr inbounds void (%"class.Cicada::Task"*)*, void (%"class.Cicada::Task"*)** %8, i32 2, !dbg !6366
  %10 = load void (%"class.Cicada::Task"*)*, void (%"class.Cicada::Task"*)** %9, align 4, !dbg !6366
  call void %10(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %6) #34, !dbg !6366
  br label %113, !dbg !6368

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 3, !dbg !6369
  %13 = bitcast %"class.Cicada::IBufferedSerial"** %12 to i8**, !dbg !6369
  %14 = load i8*, i8** %13, align 8, !dbg !6369, !tbaa !6371
  %15 = getelementptr inbounds i8, i8* %14, i32 4, !dbg !6369
  %16 = bitcast i8* %15 to %"class.Cicada::ICommDevice"*, !dbg !6369
  %17 = bitcast i8* %15 to i1 (%"class.Cicada::ICommDevice"*)***, !dbg !6372
  %18 = load i1 (%"class.Cicada::ICommDevice"*)**, i1 (%"class.Cicada::ICommDevice"*)*** %17, align 4, !dbg !6372, !tbaa !2568
  %19 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %18, i32 3, !dbg !6372
  %20 = load i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %19, align 4, !dbg !6372
  %21 = call noundef zeroext i1 %20(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %16) #34, !dbg !6372
  br i1 %21, label %33, label %22, !dbg !6373

22:                                               ; preds = %11
  %23 = load i8*, i8** %13, align 8, !dbg !6374, !tbaa !6371
  %24 = getelementptr inbounds i8, i8* %23, i32 4, !dbg !6374
  %25 = bitcast i8* %24 to %"class.Cicada::ICommDevice"*, !dbg !6374
  %26 = bitcast i8* %24 to i1 (%"class.Cicada::ICommDevice"*)***, !dbg !6377
  %27 = load i1 (%"class.Cicada::ICommDevice"*)**, i1 (%"class.Cicada::ICommDevice"*)*** %26, align 4, !dbg !6377, !tbaa !2568
  %28 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %27, i32 2, !dbg !6377
  %29 = load i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %28, align 4, !dbg !6377
  %30 = call noundef zeroext i1 %29(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %25) #34, !dbg !6377
  br i1 %30, label %113, label %31, !dbg !6378

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 4, !dbg !6379
  store i32 2, i32* %32, align 4, !dbg !6381, !tbaa !6382
  br label %113, !dbg !6383

33:                                               ; preds = %11
  %34 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 4, !dbg !6384
  %35 = load i32, i32* %34, align 4, !dbg !6384, !tbaa !6382
  switch i32 %35, label %54 [
    i32 0, label %36
    i32 1, label %41
  ], !dbg !6385

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 5, !dbg !6386
  %38 = load i8, i8* %37, align 8, !dbg !6386, !tbaa !6389, !range !6390
  %39 = icmp eq i8 %38, 0, !dbg !6386
  br i1 %39, label %54, label %40, !dbg !6391

40:                                               ; preds = %36
  store i32 1, i32* %34, align 4, !dbg !6392, !tbaa !6382
  br label %54, !dbg !6394

41:                                               ; preds = %33
  %42 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %12, align 8, !dbg !6395, !tbaa !6371
  %43 = bitcast %"class.Cicada::IBufferedSerial"* %42 to void (%"class.Cicada::IBufferedSerial"*)***, !dbg !6396
  %44 = load void (%"class.Cicada::IBufferedSerial"*)**, void (%"class.Cicada::IBufferedSerial"*)*** %43, align 4, !dbg !6396, !tbaa !2568
  %45 = getelementptr inbounds void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %44, i32 12, !dbg !6396
  %46 = load void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %45, align 4, !dbg !6396
  call void %46(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %42) #34, !dbg !6396
  %47 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %12, align 8, !dbg !6397, !tbaa !6371
  %48 = bitcast %"class.Cicada::IBufferedSerial"* %47 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !6398
  %49 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %48, align 4, !dbg !6398, !tbaa !2568
  %50 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %49, i32 8, !dbg !6398
  %51 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %50, align 4, !dbg !6398
  %52 = call noundef i64 %51(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %47, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i32 0, i32 0)) #34, !dbg !6398
  store i32 3, i32* %34, align 4, !dbg !6399, !tbaa !6382
  %53 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 0, !dbg !6400
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %53, i16 noundef zeroext 10), !dbg !6400
  br label %54, !dbg !6401

54:                                               ; preds = %33, %36, %40, %41
  %55 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %12, align 8, !dbg !6402, !tbaa !6371
  %56 = bitcast %"class.Cicada::IBufferedSerial"* %55 to i1 (%"class.Cicada::IBufferedSerial"*)***, !dbg !6403
  %57 = load i1 (%"class.Cicada::IBufferedSerial"*)**, i1 (%"class.Cicada::IBufferedSerial"*)*** %56, align 4, !dbg !6403, !tbaa !2568
  %58 = getelementptr inbounds i1 (%"class.Cicada::IBufferedSerial"*)*, i1 (%"class.Cicada::IBufferedSerial"*)** %57, i32 10, !dbg !6403
  %59 = load i1 (%"class.Cicada::IBufferedSerial"*)*, i1 (%"class.Cicada::IBufferedSerial"*)** %58, align 4, !dbg !6403
  %60 = call noundef zeroext i1 %59(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %55) #34, !dbg !6403
  br i1 %60, label %61, label %113, !dbg !6404

61:                                               ; preds = %54
  %62 = bitcast %"class.Cicada::IBufferedSerial"** %12 to %"class.Cicada::ICommDevice"**, !dbg !6405
  %63 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %62, align 8, !dbg !6405, !tbaa !6371
  %64 = bitcast %"class.Cicada::ICommDevice"* %63 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !6406
  %65 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %64, align 4, !dbg !6406, !tbaa !2568
  %66 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %65, i32 2, !dbg !6406
  %67 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %66, align 4, !dbg !6406
  %68 = call noundef i64 %67(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %63) #34, !dbg !6406
  %69 = trunc i64 %68 to i16, !dbg !6405
  %70 = add i16 %69, 1, !dbg !6405
  call void @llvm.dbg.value(metadata i16 %70, metadata !6351, metadata !DIExpression()), !dbg !6407
  %71 = zext i16 %70 to i32, !dbg !6408
  %72 = call i8* @llvm.stacksave(), !dbg !6408
  %73 = alloca i8, i32 %71, align 1, !dbg !6408
  call void @llvm.dbg.value(metadata i32 %71, metadata !6354, metadata !DIExpression()), !dbg !6407
  call void @llvm.dbg.declare(metadata i8* %73, metadata !6355, metadata !DIExpression()), !dbg !6409
  %74 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %12, align 8, !dbg !6410, !tbaa !6371
  %75 = zext i16 %70 to i64, !dbg !6411
  %76 = bitcast %"class.Cicada::IBufferedSerial"* %74 to i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)***, !dbg !6412
  %77 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*** %76, align 4, !dbg !6412, !tbaa !2568
  %78 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %77, i32 11, !dbg !6412
  %79 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %78, align 4, !dbg !6412
  %80 = call noundef i64 %79(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %74, i8* noundef nonnull %73, i64 noundef %75) #34, !dbg !6412
  %81 = trunc i64 %80 to i32, !dbg !6410
  %82 = and i32 %81, 65535, !dbg !6413
  call void @llvm.dbg.value(metadata i32 %81, metadata !6351, metadata !DIExpression()), !dbg !6407
  %83 = getelementptr inbounds i8, i8* %73, i32 %82, !dbg !6413
  store i8 0, i8* %83, align 1, !dbg !6414, !tbaa !2624
  %84 = load i32, i32* %34, align 4, !dbg !6415, !tbaa !6382
  switch i32 %84, label %112 [
    i32 3, label %85
    i32 4, label %101
    i32 5, label %107
  ], !dbg !6416

85:                                               ; preds = %61
  %86 = call i32 @strncmp(i8* noundef nonnull dereferenceable(14) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.72, i32 0, i32 0), i8* noundef nonnull %73, i32 noundef 13), !dbg !6417
  %87 = icmp eq i32 %86, 0, !dbg !6420
  br i1 %87, label %110, label %88, !dbg !6421

88:                                               ; preds = %85
  %89 = call i32 @strncmp(i8* noundef nonnull dereferenceable(15) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.73, i32 0, i32 0), i8* noundef nonnull %73, i32 noundef 14), !dbg !6422
  %90 = icmp eq i32 %89, 0, !dbg !6424
  br i1 %90, label %110, label %91, !dbg !6425

91:                                               ; preds = %88
  %92 = call i32 @strncmp(i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.74, i32 0, i32 0), i8* noundef nonnull %73, i32 noundef 5), !dbg !6426
  %93 = icmp eq i32 %92, 0, !dbg !6428
  br i1 %93, label %94, label %112, !dbg !6429

94:                                               ; preds = %91
  %95 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %12, align 8, !dbg !6430, !tbaa !6371
  %96 = bitcast %"class.Cicada::IBufferedSerial"* %95 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !6432
  %97 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %96, align 4, !dbg !6432, !tbaa !2568
  %98 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %97, i32 8, !dbg !6432
  %99 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %98, align 4, !dbg !6432
  %100 = call noundef i64 %99(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %95, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.75, i32 0, i32 0)) #34, !dbg !6432
  br label %110, !dbg !6433

101:                                              ; preds = %61
  %102 = call i32 @strncmp(i8* noundef nonnull dereferenceable(15) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5.76, i32 0, i32 0), i8* noundef nonnull %73, i32 noundef 14), !dbg !6434
  %103 = icmp eq i32 %102, 0, !dbg !6436
  br i1 %103, label %110, label %104, !dbg !6437

104:                                              ; preds = %101
  %105 = call i32 @strncmp(i8* noundef nonnull dereferenceable(15) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.77, i32 0, i32 0), i8* noundef nonnull %73, i32 noundef 14), !dbg !6438
  %106 = icmp eq i32 %105, 0, !dbg !6439
  br i1 %106, label %110, label %112, !dbg !6440

107:                                              ; preds = %61
  %108 = call i32 @strncmp(i8* noundef nonnull dereferenceable(5) getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.78, i32 0, i32 0), i8* noundef nonnull %73, i32 noundef 4), !dbg !6441
  %109 = icmp eq i32 %108, 0, !dbg !6443
  br i1 %109, label %110, label %112, !dbg !6444

110:                                              ; preds = %107, %101, %104, %88, %85, %94
  %111 = phi i32 [ 4, %94 ], [ 7, %85 ], [ 8, %88 ], [ 5, %104 ], [ 5, %101 ], [ 9, %107 ]
  store i32 %111, i32* %34, align 4, !dbg !6445, !tbaa !6382
  br label %112, !dbg !6446

112:                                              ; preds = %110, %61, %107, %104, %91
  call void @llvm.stackrestore(i8* %72), !dbg !6446
  br label %113, !dbg !6447

113:                                              ; preds = %22, %31, %5, %112, %54
  ret void, !dbg !6448
}

; Function Attrs: nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #11

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #11

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::ModemDetect"* @_ZN6Cicada11ModemDetectC2ERNS_15IBufferedSerialE(%"class.Cicada::ModemDetect"* noundef nonnull returned align 8 dereferenceable(328) %0, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1) unnamed_addr #3 align 2 !dbg !6449 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ModemDetect"* %0, metadata !6451, metadata !DIExpression()), !dbg !6453
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %1, metadata !6452, metadata !DIExpression()), !dbg !6453
  %3 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 0, !dbg !6454
  %4 = call noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskC2Et(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %3, i16 noundef zeroext 0), !dbg !6455
  %5 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 0, i32 0, !dbg !6454
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6Cicada11ModemDetectE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %5, align 8, !dbg !6454, !tbaa !2568
  %6 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 2, !dbg !6455
  %7 = call noundef %"union.Cicada::ModemDetect::ModemDriver"* @_ZN6Cicada11ModemDetect11ModemDriverC2Ev(%"union.Cicada::ModemDetect::ModemDriver"* noundef nonnull align 8 dereferenceable(288) %6), !dbg !6455
  %8 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 3, !dbg !6456
  store %"class.Cicada::IBufferedSerial"* %1, %"class.Cicada::IBufferedSerial"** %8, align 8, !dbg !6456, !tbaa !2476
  %9 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 4, !dbg !6457
  store i32 0, i32* %9, align 4, !dbg !6457, !tbaa !6382
  %10 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 5, !dbg !6458
  store i8 0, i8* %10, align 8, !dbg !6458, !tbaa !6389
  %11 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 6, !dbg !6459
  store %"class.Cicada::ATCommDevice"* null, %"class.Cicada::ATCommDevice"** %11, align 4, !dbg !6459, !tbaa !6362
  ret %"class.Cicada::ModemDetect"* %0, !dbg !6460
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"union.Cicada::ModemDetect::ModemDriver"* @_ZN6Cicada11ModemDetect11ModemDriverC2Ev(%"union.Cicada::ModemDetect::ModemDriver"* noundef nonnull returned align 8 dereferenceable(288) %0) unnamed_addr #3 comdat align 2 !dbg !6461 {
  call void @llvm.dbg.value(metadata %"union.Cicada::ModemDetect::ModemDriver"* %0, metadata !6463, metadata !DIExpression()), !dbg !6464
  ret %"union.Cicada::ModemDetect::ModemDriver"* %0, !dbg !6465
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local void @_ZN6Cicada11ModemDetect14startDetectionEv(%"class.Cicada::ModemDetect"* nocapture noundef nonnull writeonly align 8 dereferenceable(328) %0) local_unnamed_addr #13 align 2 !dbg !6466 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ModemDetect"* %0, metadata !6468, metadata !DIExpression()), !dbg !6469
  %2 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 5, !dbg !6470
  store i8 1, i8* %2, align 8, !dbg !6471, !tbaa !6389
  ret void, !dbg !6472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada11ModemDetect13modemDetectedEv(%"class.Cicada::ModemDetect"* nocapture noundef nonnull readonly align 8 dereferenceable(328) %0) local_unnamed_addr #18 align 2 !dbg !6473 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ModemDetect"* %0, metadata !6475, metadata !DIExpression()), !dbg !6476
  %2 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 4, !dbg !6477
  %3 = load i32, i32* %2, align 4, !dbg !6477, !tbaa !6382
  %4 = icmp sgt i32 %3, 6, !dbg !6478
  ret i1 %4, !dbg !6479
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef %"class.Cicada::ATCommDevice"* @_ZN6Cicada11ModemDetect16getDetectedModemEPhS1_yy(%"class.Cicada::ModemDetect"* noundef nonnull align 8 dereferenceable(328) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4) local_unnamed_addr #4 align 2 !dbg !6480 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ModemDetect"* %0, metadata !6482, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i8* %1, metadata !6483, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i8* %2, metadata !6484, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i64 %3, metadata !6485, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i64 %4, metadata !6486, metadata !DIExpression()), !dbg !6487
  %6 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 4, !dbg !6488
  %7 = load i32, i32* %6, align 4, !dbg !6488, !tbaa !6382
  switch i32 %7, label %31 [
    i32 7, label %8
    i32 8, label %14
    i32 9, label %21
  ], !dbg !6489

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 2, i32 0, !dbg !6490
  %10 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 3, !dbg !6492
  %11 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %10, align 8, !dbg !6492, !tbaa !6371
  %12 = call noundef %"class.Cicada::Sim800CommDevice"* @_ZN6Cicada16Sim800CommDeviceC1ERNS_15IBufferedSerialEPhS3_yy(%"class.Cicada::Sim800CommDevice"* noundef nonnull align 8 dereferenceable(284) %9, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %11, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4) #34, !dbg !6493
  %13 = getelementptr %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %9, i32 0, i32 0, i32 0, !dbg !6494
  br label %28, !dbg !6495

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 2, !dbg !6496
  %16 = bitcast %"union.Cicada::ModemDetect::ModemDriver"* %15 to %"class.Cicada::Sim800CommDevice"*, !dbg !6497
  %17 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 3, !dbg !6498
  %18 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %17, align 8, !dbg !6498, !tbaa !6371
  %19 = call noundef %"class.Cicada::Sim800CommDevice"* @_ZN6Cicada17Sim7x00CommDeviceC1ERNS_15IBufferedSerialEPhS3_yy(%"class.Cicada::Sim800CommDevice"* noundef nonnull align 8 dereferenceable(284) %16, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %18, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4) #34, !dbg !6499
  %20 = getelementptr %"union.Cicada::ModemDetect::ModemDriver", %"union.Cicada::ModemDetect::ModemDriver"* %15, i32 0, i32 0, i32 0, i32 0, !dbg !6500
  br label %28, !dbg !6501

21:                                               ; preds = %5
  %22 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 2, !dbg !6502
  %23 = bitcast %"union.Cicada::ModemDetect::ModemDriver"* %22 to %"class.Cicada::EspressifDevice"*, !dbg !6503
  %24 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 3, !dbg !6504
  %25 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %24, align 8, !dbg !6504, !tbaa !6371
  %26 = call noundef %"class.Cicada::EspressifDevice"* @_ZN6Cicada15EspressifDeviceC1ERNS_15IBufferedSerialEPhS3_yy(%"class.Cicada::EspressifDevice"* noundef nonnull align 8 dereferenceable(258) %23, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %25, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4) #34, !dbg !6505
  %27 = getelementptr %"union.Cicada::ModemDetect::ModemDriver", %"union.Cicada::ModemDetect::ModemDriver"* %22, i32 0, i32 0, i32 0, i32 0, !dbg !6506
  br label %28, !dbg !6507

28:                                               ; preds = %8, %14, %21
  %29 = phi %"class.Cicada::ATCommDevice"* [ %27, %21 ], [ %20, %14 ], [ %13, %8 ]
  %30 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 6, !dbg !6508
  store %"class.Cicada::ATCommDevice"* %29, %"class.Cicada::ATCommDevice"** %30, align 4, !dbg !6508, !tbaa !6362
  br label %31, !dbg !6509

31:                                               ; preds = %28, %5
  %32 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 6, !dbg !6509
  %33 = load %"class.Cicada::ATCommDevice"*, %"class.Cicada::ATCommDevice"** %32, align 4, !dbg !6509, !tbaa !6362
  ret %"class.Cicada::ATCommDevice"* %33, !dbg !6510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef %"class.Cicada::ATCommDevice"* @_ZN6Cicada11ModemDetect16getDetectedModemEv(%"class.Cicada::ModemDetect"* nocapture noundef nonnull readonly align 8 dereferenceable(328) %0) local_unnamed_addr #18 align 2 !dbg !6511 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ModemDetect"* %0, metadata !6513, metadata !DIExpression()), !dbg !6514
  %2 = getelementptr inbounds %"class.Cicada::ModemDetect", %"class.Cicada::ModemDetect"* %0, i32 0, i32 6, !dbg !6515
  %3 = load %"class.Cicada::ATCommDevice"*, %"class.Cicada::ATCommDevice"** %2, align 4, !dbg !6515, !tbaa !6362
  ret %"class.Cicada::ATCommDevice"* %3, !dbg !6516
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local noundef nonnull %"class.Cicada::Scheduler"* @_ZN6Cicada9SchedulerC2EPFjvEPPNS_4TaskE(%"class.Cicada::Scheduler"* noundef nonnull returned writeonly align 4 dereferenceable(12) %0, i32 ()* noundef %1, %"class.Cicada::Task"** noundef %2) unnamed_addr #13 align 2 !dbg !6517 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Scheduler"* %0, metadata !6519, metadata !DIExpression()), !dbg !6523
  call void @llvm.dbg.value(metadata i32 ()* %1, metadata !6521, metadata !DIExpression()), !dbg !6523
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"** %2, metadata !6522, metadata !DIExpression()), !dbg !6523
  %4 = getelementptr inbounds %"class.Cicada::Scheduler", %"class.Cicada::Scheduler"* %0, i32 0, i32 0, !dbg !6524
  store i32 ()* %1, i32 ()** %4, align 4, !dbg !6524, !tbaa !6525
  %5 = getelementptr inbounds %"class.Cicada::Scheduler", %"class.Cicada::Scheduler"* %0, i32 0, i32 1, !dbg !6527
  store %"class.Cicada::Task"** %2, %"class.Cicada::Task"*** %5, align 4, !dbg !6527, !tbaa !6528
  %6 = getelementptr inbounds %"class.Cicada::Scheduler", %"class.Cicada::Scheduler"* %0, i32 0, i32 2, !dbg !6529
  store %"class.Cicada::Task"** %2, %"class.Cicada::Task"*** %6, align 4, !dbg !6529, !tbaa !6530
  ret %"class.Cicada::Scheduler"* %0, !dbg !6531
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada9Scheduler7runTaskEv(%"class.Cicada::Scheduler"* nocapture noundef nonnull align 4 dereferenceable(12) %0) local_unnamed_addr #4 align 2 !dbg !6532 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Scheduler"* %0, metadata !6534, metadata !DIExpression()), !dbg !6536
  %2 = getelementptr inbounds %"class.Cicada::Scheduler", %"class.Cicada::Scheduler"* %0, i32 0, i32 0, !dbg !6537
  %3 = load i32 ()*, i32 ()** %2, align 4, !dbg !6537, !tbaa !6525
  %4 = call noundef i32 %3() #34, !dbg !6537
  call void @llvm.dbg.value(metadata i32 %4, metadata !6535, metadata !DIExpression()), !dbg !6536
  %5 = getelementptr inbounds %"class.Cicada::Scheduler", %"class.Cicada::Scheduler"* %0, i32 0, i32 2, !dbg !6538
  %6 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %5, align 4, !dbg !6538, !tbaa !6530
  %7 = load %"class.Cicada::Task"*, %"class.Cicada::Task"** %6, align 4, !dbg !6540, !tbaa !2476
  %8 = call noundef zeroext i16 @_ZNK6Cicada4Task5delayEv(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %7), !dbg !6541
  %9 = icmp eq i16 %8, 0, !dbg !6542
  br i1 %9, label %20, label %10, !dbg !6543

10:                                               ; preds = %1
  %11 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %5, align 4, !dbg !6544, !tbaa !6530
  %12 = load %"class.Cicada::Task"*, %"class.Cicada::Task"** %11, align 4, !dbg !6545, !tbaa !2476
  %13 = call noundef i32 @_ZN6Cicada4Task7lastRunEv(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %12), !dbg !6546
  %14 = sub i32 %4, %13, !dbg !6547
  %15 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %5, align 4, !dbg !6548, !tbaa !6530
  %16 = load %"class.Cicada::Task"*, %"class.Cicada::Task"** %15, align 4, !dbg !6549, !tbaa !2476
  %17 = call noundef zeroext i16 @_ZNK6Cicada4Task5delayEv(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %16), !dbg !6550
  %18 = zext i16 %17 to i32, !dbg !6551
  %19 = icmp ult i32 %14, %18, !dbg !6552
  br i1 %19, label %29, label %20, !dbg !6553

20:                                               ; preds = %10, %1
  %21 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %5, align 4, !dbg !6554, !tbaa !6530
  %22 = load %"class.Cicada::Task"*, %"class.Cicada::Task"** %21, align 4, !dbg !6556, !tbaa !2476
  call void @_ZN6Cicada4Task10setLastRunEj(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %22, i32 noundef %4), !dbg !6557
  %23 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %5, align 4, !dbg !6558, !tbaa !6530
  %24 = load %"class.Cicada::Task"*, %"class.Cicada::Task"** %23, align 4, !dbg !6559, !tbaa !2476
  %25 = bitcast %"class.Cicada::Task"* %24 to void (%"class.Cicada::Task"*)***, !dbg !6560
  %26 = load void (%"class.Cicada::Task"*)**, void (%"class.Cicada::Task"*)*** %25, align 4, !dbg !6560, !tbaa !2568
  %27 = getelementptr inbounds void (%"class.Cicada::Task"*)*, void (%"class.Cicada::Task"*)** %26, i32 2, !dbg !6560
  %28 = load void (%"class.Cicada::Task"*)*, void (%"class.Cicada::Task"*)** %27, align 4, !dbg !6560
  call void %28(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %24) #34, !dbg !6560
  br label %29, !dbg !6561

29:                                               ; preds = %20, %10
  %30 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %5, align 4, !dbg !6562, !tbaa !6530
  %31 = getelementptr inbounds %"class.Cicada::Task"*, %"class.Cicada::Task"** %30, i32 1, !dbg !6562
  store %"class.Cicada::Task"** %31, %"class.Cicada::Task"*** %5, align 4, !dbg !6562, !tbaa !6530
  %32 = load %"class.Cicada::Task"*, %"class.Cicada::Task"** %31, align 4, !dbg !6564, !tbaa !2476
  %33 = icmp eq %"class.Cicada::Task"* %32, null, !dbg !6565
  br i1 %33, label %34, label %37, !dbg !6566

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.Cicada::Scheduler", %"class.Cicada::Scheduler"* %0, i32 0, i32 1, !dbg !6567
  %36 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %35, align 4, !dbg !6567, !tbaa !6528
  store %"class.Cicada::Task"** %36, %"class.Cicada::Task"*** %5, align 4, !dbg !6569, !tbaa !6530
  br label %37, !dbg !6570

37:                                               ; preds = %34, %29
  ret void, !dbg !6571
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i16 @_ZNK6Cicada4Task5delayEv(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %0) local_unnamed_addr #4 comdat align 2 !dbg !6572 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !6574, metadata !DIExpression()), !dbg !6576
  %2 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 1, !dbg !6577
  %3 = load i16, i16* %2, align 4, !dbg !6577, !tbaa !2607
  ret i16 %3, !dbg !6578
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i32 @_ZN6Cicada4Task7lastRunEv(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %0) local_unnamed_addr #4 comdat align 2 !dbg !6579 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !6581, metadata !DIExpression()), !dbg !6582
  %2 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 4, !dbg !6583
  %3 = load i32, i32* %2, align 4, !dbg !6583, !tbaa !2614
  ret i32 %3, !dbg !6584
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada4Task10setLastRunEj(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %0, i32 noundef %1) local_unnamed_addr #4 comdat align 2 !dbg !6585 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !6587, metadata !DIExpression()), !dbg !6589
  call void @llvm.dbg.value(metadata i32 %1, metadata !6588, metadata !DIExpression()), !dbg !6589
  %3 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 4, !dbg !6590
  store i32 %1, i32* %3, align 4, !dbg !6591, !tbaa !2614
  ret void, !dbg !6592
}

; Function Attrs: mustprogress noinline noreturn nounwind
define dso_local void @_ZN6Cicada9Scheduler5startEv(%"class.Cicada::Scheduler"* nocapture noundef nonnull align 4 dereferenceable(12) %0) local_unnamed_addr #30 align 2 !dbg !6593 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Scheduler"* %0, metadata !6595, metadata !DIExpression()), !dbg !6596
  br label %2, !dbg !6597

2:                                                ; preds = %2, %1
  call void @_ZN6Cicada9Scheduler7runTaskEv(%"class.Cicada::Scheduler"* noundef nonnull align 4 dereferenceable(12) %0), !dbg !6598
  br label %2, !dbg !6601, !llvm.loop !6602
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i32 @_Z13eTickFunctionv() #4 !dbg !6605 {
  %1 = call i32 @HAL_GetTick() #34, !dbg !6606
  ret i32 %1, !dbg !6607
}

; Function Attrs: noinline nounwind
define dso_local noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD2Ev(%"class.Cicada::Stm32Uart"* noundef nonnull returned align 8 dereferenceable(192) %0) unnamed_addr #3 align 2 !dbg !6608 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6610, metadata !DIExpression()), !dbg !6611
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6612
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %2, align 8, !dbg !6612, !tbaa !2568
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !6612
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %3, align 4, !dbg !6612, !tbaa !2568
  %4 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !6613
  %5 = load i8, i8* %4, align 8, !dbg !6613, !tbaa !6616
  %6 = and i8 %5, 1, !dbg !6623
  %7 = icmp eq i8 %6, 0, !dbg !6613
  br i1 %7, label %13, label %8, !dbg !6624

8:                                                ; preds = %1
  %9 = bitcast %"class.Cicada::Stm32Uart"* %0 to void (%"class.Cicada::Stm32Uart"*)***, !dbg !6625
  %10 = load void (%"class.Cicada::Stm32Uart"*)**, void (%"class.Cicada::Stm32Uart"*)*** %9, align 8, !dbg !6625, !tbaa !2568
  %11 = getelementptr inbounds void (%"class.Cicada::Stm32Uart"*)*, void (%"class.Cicada::Stm32Uart"*)** %10, i32 19, !dbg !6625
  %12 = load void (%"class.Cicada::Stm32Uart"*)*, void (%"class.Cicada::Stm32Uart"*)** %11, align 4, !dbg !6625
  call void %12(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) #34, !dbg !6625
  br label %13, !dbg !6625

13:                                               ; preds = %8, %1
  %14 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, !dbg !6626
  %15 = call noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialD2Ev(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %14) #34, !dbg !6626
  ret %"class.Cicada::Stm32Uart"* %0, !dbg !6627
}

; Function Attrs: noinline nounwind
define dso_local void @_ZN6Cicada9Stm32UartD0Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #3 align 2 !dbg !6628 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6630, metadata !DIExpression()), !dbg !6631
  %2 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD2Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) #34, !dbg !6632
  %3 = bitcast %"class.Cicada::Stm32Uart"* %0 to i8*, !dbg !6632
  call void @_ZdlPv(i8* noundef %3) #35, !dbg !6632
  ret void, !dbg !6633
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZNK6Cicada9Stm32Uart20writeBufferProcessedEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #4 align 2 !dbg !6634 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6636, metadata !DIExpression()), !dbg !6638
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 2, !dbg !6639
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer.0"*, !dbg !6639
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !6640
  %5 = icmp eq i64 %4, 0, !dbg !6641
  br i1 %5, label %6, label %13, !dbg !6642

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !6643
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !6643, !tbaa !6644
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 0, !dbg !6643
  %10 = load volatile i32, i32* %9, align 4, !dbg !6643, !tbaa !6645
  %11 = and i32 %10, 64, !dbg !6643
  %12 = icmp ne i32 %11, 0, !dbg !6643
  br label %13

13:                                               ; preds = %6, %1
  %14 = phi i1 [ false, %1 ], [ %12, %6 ], !dbg !6638
  ret i1 %14, !dbg !6647
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #4 align 2 !dbg !6648 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6650, metadata !DIExpression()), !dbg !6651
  %2 = bitcast %"class.Cicada::Stm32Uart"* %0 to i1 (%"class.Cicada::Stm32Uart"*, i8)***, !dbg !6652
  %3 = load i1 (%"class.Cicada::Stm32Uart"*, i8)**, i1 (%"class.Cicada::Stm32Uart"*, i8)*** %2, align 8, !dbg !6652, !tbaa !2568
  %4 = getelementptr inbounds i1 (%"class.Cicada::Stm32Uart"*, i8)*, i1 (%"class.Cicada::Stm32Uart"*, i8)** %3, i32 16, !dbg !6652
  %5 = load i1 (%"class.Cicada::Stm32Uart"*, i8)*, i1 (%"class.Cicada::Stm32Uart"*, i8)** %4, align 4, !dbg !6652
  %6 = call noundef zeroext i1 %5(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, i8 noundef zeroext 15) #34, !dbg !6652
  ret i1 %6, !dbg !6653
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEh(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, i8 noundef zeroext %1) unnamed_addr #4 align 2 !dbg !6654 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.DMA_Channel_TypeDef, align 4
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6656, metadata !DIExpression()), !dbg !6700
  call void @llvm.dbg.value(metadata i8 %1, metadata !6657, metadata !DIExpression()), !dbg !6700
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, !dbg !6701
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %12, i32 0, i32 0, !dbg !6702
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %13, align 4, !dbg !6702, !tbaa !6644
  %15 = ptrtoint %struct.USART_TypeDef* %14 to i32, !dbg !6703
  switch i32 %15, label %123 [
    i32 1073821696, label %16
    i32 1073759232, label %26
    i32 1073760256, label %34
  ], !dbg !6703

16:                                               ; preds = %2
  %17 = load volatile i32, i32* inttoptr (i32 1073807364 to i32*), align 4, !dbg !6704, !tbaa !6705
  call void @llvm.dbg.value(metadata i32 %17, metadata !6658, metadata !DIExpression()), !dbg !6707
  call void @llvm.dbg.value(metadata i32 %17, metadata !6658, metadata !DIExpression(DW_OP_constu, 117440512, DW_OP_or, DW_OP_stack_value)), !dbg !6707
  %18 = or i32 %17, 117440516, !dbg !6704
  call void @llvm.dbg.value(metadata i32 %18, metadata !6658, metadata !DIExpression()), !dbg !6707
  store volatile i32 %18, i32* inttoptr (i32 1073807364 to i32*), align 4, !dbg !6704, !tbaa !6705
  %19 = bitcast i32* %3 to i8*, !dbg !6708
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19), !dbg !6708
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6662, metadata !DIExpression()), !dbg !6708
  %20 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6708, !tbaa !6709
  %21 = or i32 %20, 16384, !dbg !6708
  store volatile i32 %21, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6708, !tbaa !6709
  %22 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6708, !tbaa !6709
  %23 = and i32 %22, 16384, !dbg !6708
  store volatile i32 %23, i32* %3, align 4, !dbg !6708, !tbaa !6095
  %24 = load volatile i32, i32* %3, align 4, !dbg !6708, !tbaa !6095
  %25 = bitcast i32* %3 to i8*, !dbg !6711
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25), !dbg !6711
  br label %42, !dbg !6712

26:                                               ; preds = %2
  %27 = bitcast i32* %4 to i8*, !dbg !6713
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27), !dbg !6713
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6664, metadata !DIExpression()), !dbg !6713
  %28 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !6713, !tbaa !6714
  %29 = or i32 %28, 131072, !dbg !6713
  store volatile i32 %29, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !6713, !tbaa !6714
  %30 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !6713, !tbaa !6714
  %31 = and i32 %30, 131072, !dbg !6713
  store volatile i32 %31, i32* %4, align 4, !dbg !6713, !tbaa !6095
  %32 = load volatile i32, i32* %4, align 4, !dbg !6713, !tbaa !6095
  %33 = bitcast i32* %4 to i8*, !dbg !6715
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33), !dbg !6715
  br label %42, !dbg !6716

34:                                               ; preds = %2
  %35 = bitcast i32* %5 to i8*, !dbg !6717
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35), !dbg !6717
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6668, metadata !DIExpression()), !dbg !6717
  %36 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !6717, !tbaa !6714
  %37 = or i32 %36, 262144, !dbg !6717
  store volatile i32 %37, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !6717, !tbaa !6714
  %38 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !6717, !tbaa !6714
  %39 = and i32 %38, 262144, !dbg !6717
  store volatile i32 %39, i32* %5, align 4, !dbg !6717, !tbaa !6095
  %40 = load volatile i32, i32* %5, align 4, !dbg !6717, !tbaa !6095
  %41 = bitcast i32* %5 to i8*, !dbg !6718
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41), !dbg !6718
  br label %42

42:                                               ; preds = %26, %34, %16
  %43 = phi i32 [ 38, %26 ], [ 39, %34 ], [ 37, %16 ]
  %44 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !6719
  store i32 %43, i32* %44, align 4, !dbg !6719, !tbaa !6720
  %45 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 3, !dbg !6721
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %45, align 4, !dbg !6721, !tbaa !6722
  %47 = ptrtoint %struct.USART_TypeDef* %46 to i32, !dbg !6723
  %48 = add i32 %47, -1073809408, !dbg !6723
  %49 = call i32 @llvm.fshl.i32(i32 %48, i32 %48, i32 22), !dbg !6723
  switch i32 %49, label %90 [
    i32 0, label %50
    i32 1, label %58
    i32 2, label %66
    i32 3, label %74
    i32 4, label %82
  ], !dbg !6723

50:                                               ; preds = %42
  %51 = bitcast i32* %6 to i8*, !dbg !6724
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51), !dbg !6724
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6672, metadata !DIExpression()), !dbg !6724
  %52 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6724, !tbaa !6709
  %53 = or i32 %52, 4, !dbg !6724
  store volatile i32 %53, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6724, !tbaa !6709
  %54 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6724, !tbaa !6709
  %55 = and i32 %54, 4, !dbg !6724
  store volatile i32 %55, i32* %6, align 4, !dbg !6724, !tbaa !6095
  %56 = load volatile i32, i32* %6, align 4, !dbg !6724, !tbaa !6095
  %57 = bitcast i32* %6 to i8*, !dbg !6725
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57), !dbg !6725
  br label %90, !dbg !6726

58:                                               ; preds = %42
  %59 = bitcast i32* %7 to i8*, !dbg !6727
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59), !dbg !6727
  call void @llvm.dbg.declare(metadata i32* %7, metadata !6676, metadata !DIExpression()), !dbg !6727
  %60 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6727, !tbaa !6709
  %61 = or i32 %60, 8, !dbg !6727
  store volatile i32 %61, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6727, !tbaa !6709
  %62 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6727, !tbaa !6709
  %63 = and i32 %62, 8, !dbg !6727
  store volatile i32 %63, i32* %7, align 4, !dbg !6727, !tbaa !6095
  %64 = load volatile i32, i32* %7, align 4, !dbg !6727, !tbaa !6095
  %65 = bitcast i32* %7 to i8*, !dbg !6728
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65), !dbg !6728
  br label %90, !dbg !6729

66:                                               ; preds = %42
  %67 = bitcast i32* %8 to i8*, !dbg !6730
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67), !dbg !6730
  call void @llvm.dbg.declare(metadata i32* %8, metadata !6680, metadata !DIExpression()), !dbg !6730
  %68 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6730, !tbaa !6709
  %69 = or i32 %68, 16, !dbg !6730
  store volatile i32 %69, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6730, !tbaa !6709
  %70 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6730, !tbaa !6709
  %71 = and i32 %70, 16, !dbg !6730
  store volatile i32 %71, i32* %8, align 4, !dbg !6730, !tbaa !6095
  %72 = load volatile i32, i32* %8, align 4, !dbg !6730, !tbaa !6095
  %73 = bitcast i32* %8 to i8*, !dbg !6731
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73), !dbg !6731
  br label %90, !dbg !6732

74:                                               ; preds = %42
  %75 = bitcast i32* %9 to i8*, !dbg !6733
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75), !dbg !6733
  call void @llvm.dbg.declare(metadata i32* %9, metadata !6684, metadata !DIExpression()), !dbg !6733
  %76 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6733, !tbaa !6709
  %77 = or i32 %76, 32, !dbg !6733
  store volatile i32 %77, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6733, !tbaa !6709
  %78 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6733, !tbaa !6709
  %79 = and i32 %78, 32, !dbg !6733
  store volatile i32 %79, i32* %9, align 4, !dbg !6733, !tbaa !6095
  %80 = load volatile i32, i32* %9, align 4, !dbg !6733, !tbaa !6095
  %81 = bitcast i32* %9 to i8*, !dbg !6734
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %81), !dbg !6734
  br label %90, !dbg !6735

82:                                               ; preds = %42
  %83 = bitcast i32* %10 to i8*, !dbg !6736
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83), !dbg !6736
  call void @llvm.dbg.declare(metadata i32* %10, metadata !6688, metadata !DIExpression()), !dbg !6736
  %84 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6736, !tbaa !6709
  %85 = or i32 %84, 64, !dbg !6736
  store volatile i32 %85, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6736, !tbaa !6709
  %86 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6736, !tbaa !6709
  %87 = and i32 %86, 64, !dbg !6736
  store volatile i32 %87, i32* %10, align 4, !dbg !6736, !tbaa !6095
  %88 = load volatile i32, i32* %10, align 4, !dbg !6736, !tbaa !6095
  %89 = bitcast i32* %10 to i8*, !dbg !6737
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89), !dbg !6737
  br label %90, !dbg !6738

90:                                               ; preds = %42, %58, %74, %82, %66, %50
  %91 = bitcast %struct.DMA_Channel_TypeDef* %11 to i8*, !dbg !6739
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #34, !dbg !6739
  call void @llvm.dbg.declare(metadata %struct.DMA_Channel_TypeDef* %11, metadata !6692, metadata !DIExpression()), !dbg !6740
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(16) %91, i8 0, i32 16, i1 false), !dbg !6740
  %92 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 4, !dbg !6741
  %93 = load i16, i16* %92, align 8, !dbg !6741, !tbaa !6742
  %94 = zext i16 %93 to i32, !dbg !6741
  %95 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %11, i32 0, i32 0, !dbg !6743
  store i32 %94, i32* %95, align 4, !dbg !6744, !tbaa !6745
  %96 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %11, i32 0, i32 1, !dbg !6747
  store i32 2, i32* %96, align 4, !dbg !6748, !tbaa !6749
  %97 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %11, i32 0, i32 2, !dbg !6750
  store i32 0, i32* %97, align 4, !dbg !6751, !tbaa !6752
  %98 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %11, i32 0, i32 3, !dbg !6753
  store i32 3, i32* %98, align 4, !dbg !6754, !tbaa !6755
  call void @HAL_GPIO_Init(%struct.USART_TypeDef* noundef %46, %struct.DMA_Channel_TypeDef* noundef nonnull %11) #34, !dbg !6756
  %99 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 5, !dbg !6757
  %100 = load i16, i16* %99, align 2, !dbg !6757, !tbaa !6758
  %101 = zext i16 %100 to i32, !dbg !6757
  store i32 %101, i32* %95, align 4, !dbg !6759, !tbaa !6745
  store i32 0, i32* %96, align 4, !dbg !6760, !tbaa !6749
  %102 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %45, align 4, !dbg !6761, !tbaa !6722
  call void @HAL_GPIO_Init(%struct.USART_TypeDef* noundef %102, %struct.DMA_Channel_TypeDef* noundef nonnull %11) #34, !dbg !6762
  %103 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 2, !dbg !6763
  store i32 0, i32* %103, align 8, !dbg !6764, !tbaa !6765
  %104 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 3, !dbg !6766
  store i32 0, i32* %104, align 4, !dbg !6767, !tbaa !6768
  %105 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 4, !dbg !6769
  store i32 12, i32* %105, align 8, !dbg !6770, !tbaa !6771
  %106 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 5, !dbg !6772
  store i32 0, i32* %106, align 4, !dbg !6773, !tbaa !6774
  %107 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 6, !dbg !6775
  store i32 0, i32* %107, align 8, !dbg !6776, !tbaa !6777
  %108 = call i32 @HAL_UART_Init(%struct.__UART_HandleTypeDef* noundef nonnull %12) #34, !dbg !6778
  %109 = icmp eq i32 %108, 0, !dbg !6780
  br i1 %109, label %110, label %122, !dbg !6781

110:                                              ; preds = %90
  %111 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !6782
  %112 = load i32, i32* %111, align 4, !dbg !6782, !tbaa !6720
  %113 = zext i8 %1 to i32, !dbg !6783
  call fastcc void @_ZL18__NVIC_SetPriority9IRQn_Typej(i32 noundef %112, i32 noundef %113), !dbg !6784
  %114 = load i32, i32* %111, align 4, !dbg !6785, !tbaa !6720
  call fastcc void @_ZL16__NVIC_EnableIRQ9IRQn_Type(i32 noundef %114), !dbg !6786
  %115 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %13, align 4, !dbg !6787, !tbaa !6644
  %116 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %115, i32 0, i32 3, !dbg !6787
  %117 = load volatile i32, i32* %116, align 4, !dbg !6787, !tbaa !6788
  %118 = or i32 %117, 32, !dbg !6787
  store volatile i32 %118, i32* %116, align 4, !dbg !6787, !tbaa !6788
  %119 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !6789
  %120 = load i8, i8* %119, align 8, !dbg !6790, !tbaa !6616
  %121 = or i8 %120, 1, !dbg !6790
  store i8 %121, i8* %119, align 8, !dbg !6790, !tbaa !6616
  br label %122, !dbg !6791

122:                                              ; preds = %90, %110
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #34, !dbg !6792
  br label %123

123:                                              ; preds = %2, %122
  %124 = phi i1 [ %109, %122 ], [ false, %2 ], !dbg !6700
  ret i1 %124, !dbg !6792
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart6isOpenEv(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull readonly align 8 dereferenceable(192) %0) unnamed_addr #18 align 2 !dbg !6793 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6795, metadata !DIExpression()), !dbg !6796
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !6797
  %3 = load i8, i8* %2, align 8, !dbg !6797, !tbaa !6616
  %4 = and i8 %3, 1, !dbg !6798
  %5 = icmp ne i8 %4, 0, !dbg !6797
  ret i1 %5, !dbg !6799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart15setSerialConfigEjh(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull writeonly align 8 dereferenceable(192) %0, i32 noundef %1, i8 noundef zeroext %2) unnamed_addr #13 align 2 !dbg !6800 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6802, metadata !DIExpression()), !dbg !6805
  call void @llvm.dbg.value(metadata i32 %1, metadata !6803, metadata !DIExpression()), !dbg !6805
  call void @llvm.dbg.value(metadata i8 %2, metadata !6804, metadata !DIExpression()), !dbg !6805
  %4 = add i32 %1, -4500001, !dbg !6806
  %5 = icmp ult i32 %4, -4499951, !dbg !6806
  br i1 %5, label %12, label %6, !dbg !6806

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 0, !dbg !6808
  store i32 %1, i32* %7, align 8, !dbg !6809, !tbaa !6810
  switch i8 %2, label %12 [
    i8 8, label %9
    i8 9, label %8
  ], !dbg !6811

8:                                                ; preds = %6
  br label %9, !dbg !6812

9:                                                ; preds = %6, %8
  %10 = phi i32 [ 4096, %8 ], [ 0, %6 ]
  %11 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 1, !dbg !6814
  store i32 %10, i32* %11, align 4, !dbg !6814, !tbaa !6815
  br label %12, !dbg !6816

12:                                               ; preds = %9, %6, %3
  %13 = phi i1 [ false, %3 ], [ false, %6 ], [ true, %9 ], !dbg !6805
  ret i1 %13, !dbg !6816
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada9Stm32Uart5closeEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #4 align 2 !dbg !6817 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6819, metadata !DIExpression()), !dbg !6820
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !6821
  %3 = load i32, i32* %2, align 4, !dbg !6821, !tbaa !6720
  call fastcc void @_ZL17__NVIC_DisableIRQ9IRQn_Type(i32 noundef %3), !dbg !6822
  %4 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, !dbg !6823
  %5 = call i32 @HAL_UART_DeInit(%struct.__UART_HandleTypeDef* noundef nonnull %4) #34, !dbg !6824
  %6 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 3, !dbg !6825
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !6825, !tbaa !6722
  %8 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 4, !dbg !6826
  %9 = load i16, i16* %8, align 8, !dbg !6826, !tbaa !6742
  %10 = zext i16 %9 to i32, !dbg !6826
  call void @HAL_GPIO_DeInit(%struct.USART_TypeDef* noundef %7, i32 noundef %10) #34, !dbg !6827
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !6828, !tbaa !6722
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 5, !dbg !6829
  %13 = load i16, i16* %12, align 2, !dbg !6829, !tbaa !6758
  %14 = zext i16 %13 to i32, !dbg !6829
  call void @HAL_GPIO_DeInit(%struct.USART_TypeDef* noundef %11, i32 noundef %14) #34, !dbg !6830
  %15 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !6831
  %16 = load i8, i8* %15, align 8, !dbg !6832, !tbaa !6616
  %17 = and i8 %16, -2, !dbg !6832
  store i8 %17, i8* %15, align 8, !dbg !6832, !tbaa !6616
  ret void, !dbg !6833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define dso_local noalias noundef i8* @_ZNK6Cicada9Stm32Uart8portNameEv(%"class.Cicada::Stm32Uart"* nocapture nonnull readnone align 8 %0) unnamed_addr #12 align 2 !dbg !6834 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* undef, metadata !6836, metadata !DIExpression()), !dbg !6837
  ret i8* null, !dbg !6838
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart7rawReadERh(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull readonly align 8 dereferenceable(192) %0, i8* nocapture noundef nonnull writeonly align 1 dereferenceable(1) %1) unnamed_addr #17 align 2 !dbg !6839 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6841, metadata !DIExpression()), !dbg !6843
  call void @llvm.dbg.value(metadata i8* %1, metadata !6842, metadata !DIExpression()), !dbg !6843
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !6844
  %4 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %3, align 4, !dbg !6844, !tbaa !6644
  %5 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %4, i32 0, i32 0, !dbg !6844
  %6 = load volatile i32, i32* %5, align 4, !dbg !6844, !tbaa !6645
  %7 = and i32 %6, 32, !dbg !6844
  %8 = icmp eq i32 %7, 0, !dbg !6844
  br i1 %8, label %9, label %13, !dbg !6846

9:                                                ; preds = %2
  %10 = load volatile i32, i32* %5, align 4, !dbg !6847, !tbaa !6645
  %11 = and i32 %10, 8, !dbg !6847
  %12 = icmp eq i32 %11, 0, !dbg !6847
  br i1 %12, label %17, label %13, !dbg !6848

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %4, i32 0, i32 1, !dbg !6849
  %15 = load volatile i32, i32* %14, align 4, !dbg !6849, !tbaa !6851
  %16 = trunc i32 %15 to i8, !dbg !6849
  store i8 %16, i8* %1, align 1, !dbg !6852, !tbaa !2624
  br label %17, !dbg !6853

17:                                               ; preds = %9, %13
  %18 = phi i1 [ true, %13 ], [ false, %9 ], !dbg !6843
  ret i1 %18, !dbg !6854
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart8rawWriteEh(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull readonly align 8 dereferenceable(192) %0, i8 noundef zeroext %1) unnamed_addr #31 align 2 !dbg !6855 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6857, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.value(metadata i8 %1, metadata !6858, metadata !DIExpression()), !dbg !6859
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !6860
  %4 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %3, align 4, !dbg !6860, !tbaa !6644
  %5 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %4, i32 0, i32 0, !dbg !6860
  %6 = load volatile i32, i32* %5, align 4, !dbg !6860, !tbaa !6645
  %7 = and i32 %6, 128, !dbg !6860
  %8 = icmp eq i32 %7, 0, !dbg !6860
  br i1 %8, label %12, label %9, !dbg !6862

9:                                                ; preds = %2
  %10 = zext i8 %1 to i32, !dbg !6863
  %11 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %4, i32 0, i32 1, !dbg !6863
  store volatile i32 %10, i32* %11, align 4, !dbg !6863, !tbaa !6851
  br label %12, !dbg !6865

12:                                               ; preds = %2, %9
  %13 = xor i1 %8, true, !dbg !6866
  ret i1 %13, !dbg !6866
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind
define dso_local void @_ZN6Cicada9Stm32Uart13startTransmitEv(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull readonly align 8 dereferenceable(192) %0) unnamed_addr #31 align 2 !dbg !6867 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6869, metadata !DIExpression()), !dbg !6870
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !6871
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6871, !tbaa !6644
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !6871
  %5 = load volatile i32, i32* %4, align 4, !dbg !6871, !tbaa !6788
  %6 = or i32 %5, 128, !dbg !6871
  store volatile i32 %6, i32* %4, align 4, !dbg !6871, !tbaa !6788
  ret void, !dbg !6872
}

; Function Attrs: noinline nounwind
define dso_local noalias noundef %"class.Cicada::Stm32Uart"* @_ZThn4_N6Cicada9Stm32UartD1Ev(%"class.Cicada::Stm32Uart"* noundef %0) unnamed_addr #3 align 2 !dbg !6873 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6874
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !6874
  %4 = tail call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD2Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3) #34, !dbg !6874
  ret %"class.Cicada::Stm32Uart"* undef, !dbg !6874
}

; Function Attrs: noinline nounwind
define dso_local void @_ZThn4_N6Cicada9Stm32UartD0Ev(%"class.Cicada::Stm32Uart"* noundef %0) unnamed_addr #3 align 2 !dbg !6875 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6876
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !6876
  tail call void @_ZN6Cicada9Stm32UartD0Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3) #34, !dbg !6876
  ret void, !dbg !6876
}

; Function Attrs: noinline nounwind
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef %0) unnamed_addr #3 align 2 !dbg !6877 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6878
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !6878
  %4 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3), !dbg !6878
  ret i1 %4, !dbg !6878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart6isOpenEv(%"class.Cicada::Stm32Uart"* nocapture noundef readonly %0) unnamed_addr #18 align 2 !dbg !6879 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6880
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !6880
  %4 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart6isOpenEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3), !dbg !6880
  ret i1 %4, !dbg !6880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart15setSerialConfigEjh(%"class.Cicada::Stm32Uart"* nocapture noundef writeonly %0, i32 noundef %1, i8 noundef zeroext %2) unnamed_addr #13 align 2 !dbg !6881 {
  %4 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6882
  %5 = bitcast i32* %4 to %"class.Cicada::Stm32Uart"*, !dbg !6882
  %6 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart15setSerialConfigEjh(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %5, i32 noundef %1, i8 noundef zeroext %2), !dbg !6882
  ret i1 %6, !dbg !6882
}

; Function Attrs: noinline nounwind
define dso_local void @_ZThn4_N6Cicada9Stm32Uart5closeEv(%"class.Cicada::Stm32Uart"* noundef %0) unnamed_addr #3 align 2 !dbg !6883 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6884
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !6884
  tail call void @_ZN6Cicada9Stm32Uart5closeEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3), !dbg !6884
  ret void, !dbg !6884
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define dso_local noalias noundef i8* @_ZThn4_NK6Cicada9Stm32Uart8portNameEv(%"class.Cicada::Stm32Uart"* nocapture noundef readnone %0) unnamed_addr #12 align 2 !dbg !6885 {
  ret i8* null, !dbg !6886
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart7rawReadERh(%"class.Cicada::Stm32Uart"* nocapture noundef readonly %0, i8* nocapture noundef nonnull writeonly align 1 dereferenceable(1) %1) unnamed_addr #17 align 2 !dbg !6887 {
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6888
  %4 = bitcast i32* %3 to %"class.Cicada::Stm32Uart"*, !dbg !6888
  %5 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart7rawReadERh(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %4, i8* noundef nonnull align 1 dereferenceable(1) %1), !dbg !6888
  ret i1 %5, !dbg !6888
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart8rawWriteEh(%"class.Cicada::Stm32Uart"* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #16 align 2 !dbg !6889 {
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6890
  %4 = bitcast i32* %3 to %"class.Cicada::Stm32Uart"*, !dbg !6890
  %5 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart8rawWriteEh(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %4, i8 noundef zeroext %1), !dbg !6890
  ret i1 %5, !dbg !6890
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @_ZThn4_N6Cicada9Stm32Uart13startTransmitEv(%"class.Cicada::Stm32Uart"* nocapture noundef readonly %0) unnamed_addr #16 align 2 !dbg !6891 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6892
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !6892
  tail call void @_ZN6Cicada9Stm32Uart13startTransmitEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3), !dbg !6892
  ret void, !dbg !6892
}

; Function Attrs: mustprogress noinline nounwind
define internal fastcc void @_ZL17__NVIC_DisableIRQ9IRQn_Type(i32 noundef %0) unnamed_addr #4 !dbg !6893 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6897, metadata !DIExpression()), !dbg !6898
  %2 = icmp sgt i32 %0, -1, !dbg !6899
  br i1 %2, label %3, label %8, !dbg !6901

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6902
  %5 = shl i32 1, %4, !dbg !6904
  %6 = lshr i32 %0, 5, !dbg !6905
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6906
  store volatile i32 %5, i32* %7, align 4, !dbg !6907, !tbaa !6095
  call void asm sideeffect "dsb 0xF", "~{memory}"() #34, !dbg !6908, !srcloc !6911
  call void asm sideeffect "isb 0xF", "~{memory}"() #34, !dbg !6912, !srcloc !6915
  br label %8, !dbg !6916

8:                                                ; preds = %3, %1
  ret void, !dbg !6917
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind
define internal fastcc void @_ZL18__NVIC_SetPriority9IRQn_Typej(i32 noundef %0, i32 noundef %1) unnamed_addr #31 !dbg !6918 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6922, metadata !DIExpression()), !dbg !6924
  call void @llvm.dbg.value(metadata i32 %1, metadata !6923, metadata !DIExpression()), !dbg !6924
  %3 = trunc i32 %1 to i8, !dbg !6925
  %4 = shl i8 %3, 4, !dbg !6925
  %5 = and i32 %0, 15, !dbg !6927
  %6 = add nsw i32 %5, -4, !dbg !6927
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6927
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6927
  %9 = icmp slt i32 %0, 0, !dbg !6927
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6927
  store volatile i8 %4, i8* %10, align 1, !dbg !6925, !tbaa !2624
  ret void, !dbg !6928
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind
define internal fastcc void @_ZL16__NVIC_EnableIRQ9IRQn_Type(i32 noundef %0) unnamed_addr #31 !dbg !6929 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6931, metadata !DIExpression()), !dbg !6932
  %2 = icmp sgt i32 %0, -1, !dbg !6933
  br i1 %2, label %3, label %8, !dbg !6935

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6936
  %5 = shl i32 1, %4, !dbg !6938
  %6 = lshr i32 %0, 5, !dbg !6939
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6940
  store volatile i32 %5, i32* %7, align 4, !dbg !6941, !tbaa !6095
  br label %8, !dbg !6942

8:                                                ; preds = %3, %1
  ret void, !dbg !6943
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !6944 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !6946, metadata !DIExpression()), !dbg !6948
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !6949
  %3 = load i64, i64* %2, align 8, !dbg !6949, !tbaa !6950
  ret i64 %3, !dbg !6952
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialD2Ev(%"class.Cicada::BufferedSerial"* noundef nonnull returned align 8 dereferenceable(104) %0) unnamed_addr #3 comdat align 2 !dbg !6953 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !6959, metadata !DIExpression()), !dbg !6961
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !6962
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer.0"*, !dbg !6962
  %4 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(46) %3) #34, !dbg !6962
  %5 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !6962
  %6 = bitcast %"class.Cicada::LineCircularBuffer"* %5 to %"class.Cicada::CircularBuffer.0"*, !dbg !6962
  %7 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(46) %6) #34, !dbg !6962
  %8 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, !dbg !6962
  %9 = call noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialD2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %8) #34, !dbg !6962
  ret %"class.Cicada::BufferedSerial"* %0, !dbg !6964
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull returned align 8 dereferenceable(44) %0) unnamed_addr #3 comdat align 2 !dbg !6965 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !6967, metadata !DIExpression()), !dbg !6969
  ret %"class.Cicada::CircularBuffer.0"* %0, !dbg !6970
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialD2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull returned align 4 dereferenceable(8) %0) unnamed_addr #3 comdat align 2 !dbg !6971 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %0, metadata !6973, metadata !DIExpression()), !dbg !6975
  %2 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 1, !dbg !6976
  %3 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada7ISerialD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %2) #34, !dbg !6976
  %4 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 0, !dbg !6976
  %5 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %4) #34, !dbg !6976
  ret %"class.Cicada::IBufferedSerial"* %0, !dbg !6978
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada7ISerialD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #3 comdat align 2 !dbg !6979 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !6981, metadata !DIExpression()), !dbg !6983
  ret %"class.Cicada::ICommDevice"* %0, !dbg !6984
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartC2EPcS1_yyP13USART_TypeDefP12GPIO_TypeDeftt(%"class.Cicada::Stm32Uart"* noundef nonnull returned align 8 dereferenceable(192) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4, %struct.USART_TypeDef* noundef %5, %struct.USART_TypeDef* noundef %6, i16 noundef zeroext %7, i16 noundef zeroext %8) unnamed_addr #3 align 2 !dbg !6985 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6987, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.value(metadata i8* %1, metadata !6988, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.value(metadata i8* %2, metadata !6989, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.value(metadata i64 %3, metadata !6990, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.value(metadata i64 %4, metadata !6991, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %5, metadata !6992, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %6, metadata !6993, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.value(metadata i16 %7, metadata !6994, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.value(metadata i16 %8, metadata !6995, metadata !DIExpression()), !dbg !6996
  %10 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, !dbg !6997
  %11 = call noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialC2EPcS1_yy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %10, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4) #34, !dbg !6998
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6997
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %12, align 8, !dbg !6997, !tbaa !2568
  %13 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !6997
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %13, align 4, !dbg !6997, !tbaa !2568
  %14 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !6999
  store i8 0, i8* %14, align 8, !dbg !6999, !tbaa !6616
  %15 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, !dbg !7000
  %16 = bitcast %struct.__UART_HandleTypeDef* %15 to i8*, !dbg !7000
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(72) %16, i8 0, i32 72, i1 false), !dbg !7000
  %17 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 3, !dbg !7001
  store %struct.USART_TypeDef* %6, %struct.USART_TypeDef** %17, align 4, !dbg !7001, !tbaa !6722
  %18 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 4, !dbg !7002
  store i16 %7, i16* %18, align 8, !dbg !7002, !tbaa !6742
  %19 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 5, !dbg !7003
  store i16 %8, i16* %19, align 2, !dbg !7003, !tbaa !6758
  %20 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !7004
  store i32 0, i32* %20, align 4, !dbg !7004, !tbaa !6720
  call void @_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, %struct.USART_TypeDef* noundef %5), !dbg !7005
  ret %"class.Cicada::Stm32Uart"* %0, !dbg !7007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind
define dso_local void @_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, %struct.USART_TypeDef* noundef %1) local_unnamed_addr #32 align 2 !dbg !7008 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !7010, metadata !DIExpression()), !dbg !7014
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %1, metadata !7011, metadata !DIExpression()), !dbg !7014
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !7015
  store %struct.USART_TypeDef* %1, %struct.USART_TypeDef** %3, align 4, !dbg !7016, !tbaa !6644
  %4 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 0, !dbg !7017
  store i32 115200, i32* %4, align 8, !dbg !7018, !tbaa !6810
  %5 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 1, !dbg !7019
  store i32 0, i32* %5, align 4, !dbg !7020, !tbaa !6815
  call void @llvm.dbg.value(metadata i32 0, metadata !7012, metadata !DIExpression()), !dbg !7021
  br label %9, !dbg !7022

6:                                                ; preds = %9
  %7 = add nuw nsw i32 %10, 1, !dbg !7023
  call void @llvm.dbg.value(metadata i32 %7, metadata !7012, metadata !DIExpression()), !dbg !7021
  call void @llvm.dbg.value(metadata i32 %10, metadata !7012, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7021
  %8 = icmp eq i32 %7, 4, !dbg !7025
  br i1 %8, label %15, label %9, !dbg !7022, !llvm.loop !7026

9:                                                ; preds = %2, %6
  %10 = phi i32 [ 0, %2 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !7012, metadata !DIExpression()), !dbg !7021
  %11 = getelementptr inbounds [4 x %"class.Cicada::Stm32Uart"*], [4 x %"class.Cicada::Stm32Uart"*]* @_ZN6Cicada9Stm32Uart8instanceE, i32 0, i32 %10, !dbg !7028
  %12 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** %11, align 4, !dbg !7028, !tbaa !2476
  %13 = icmp eq %"class.Cicada::Stm32Uart"* %12, null, !dbg !7031
  call void @llvm.dbg.value(metadata i32 %10, metadata !7012, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7021
  br i1 %13, label %14, label %6, !dbg !7032

14:                                               ; preds = %9
  store %"class.Cicada::Stm32Uart"* %0, %"class.Cicada::Stm32Uart"** %11, align 4, !dbg !7033, !tbaa !2476
  br label %15, !dbg !7035

15:                                               ; preds = %6, %14
  ret void, !dbg !7036
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartC2EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt(%"class.Cicada::Stm32Uart"* noundef nonnull returned align 8 dereferenceable(192) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, %struct.USART_TypeDef* noundef %4, %struct.USART_TypeDef* noundef %5, i16 noundef zeroext %6, i16 noundef zeroext %7) unnamed_addr #3 align 2 !dbg !7037 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !7039, metadata !DIExpression()), !dbg !7047
  call void @llvm.dbg.value(metadata i8* %1, metadata !7040, metadata !DIExpression()), !dbg !7047
  call void @llvm.dbg.value(metadata i8* %2, metadata !7041, metadata !DIExpression()), !dbg !7047
  call void @llvm.dbg.value(metadata i64 %3, metadata !7042, metadata !DIExpression()), !dbg !7047
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %4, metadata !7043, metadata !DIExpression()), !dbg !7047
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %5, metadata !7044, metadata !DIExpression()), !dbg !7047
  call void @llvm.dbg.value(metadata i16 %6, metadata !7045, metadata !DIExpression()), !dbg !7047
  call void @llvm.dbg.value(metadata i16 %7, metadata !7046, metadata !DIExpression()), !dbg !7047
  %9 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, !dbg !7048
  %10 = call noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialC2EPcS1_y(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %9, i8* noundef %1, i8* noundef %2, i64 noundef %3) #34, !dbg !7049
  %11 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7048
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %11, align 8, !dbg !7048, !tbaa !2568
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !7048
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %12, align 4, !dbg !7048, !tbaa !2568
  %13 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !7050
  store i8 0, i8* %13, align 8, !dbg !7050, !tbaa !6616
  %14 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, !dbg !7051
  %15 = bitcast %struct.__UART_HandleTypeDef* %14 to i8*, !dbg !7051
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(72) %15, i8 0, i32 72, i1 false), !dbg !7051
  %16 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 3, !dbg !7052
  store %struct.USART_TypeDef* %5, %struct.USART_TypeDef** %16, align 4, !dbg !7052, !tbaa !6722
  %17 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 4, !dbg !7053
  store i16 %6, i16* %17, align 8, !dbg !7053, !tbaa !6742
  %18 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 5, !dbg !7054
  store i16 %7, i16* %18, align 2, !dbg !7054, !tbaa !6758
  %19 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !7055
  store i32 0, i32* %19, align 4, !dbg !7055, !tbaa !6720
  call void @_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, %struct.USART_TypeDef* noundef %4), !dbg !7056
  ret %"class.Cicada::Stm32Uart"* %0, !dbg !7058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef(%struct.USART_TypeDef* noundef readnone %0) local_unnamed_addr #18 align 2 !dbg !7059 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !7061, metadata !DIExpression()), !dbg !7067
  call void @llvm.dbg.value(metadata i32 0, metadata !7062, metadata !DIExpression()), !dbg !7068
  br label %5, !dbg !7069

2:                                                ; preds = %16
  %3 = add nuw nsw i32 %7, 1, !dbg !7070
  call void @llvm.dbg.value(metadata i32 %3, metadata !7062, metadata !DIExpression()), !dbg !7068
  call void @llvm.dbg.value(metadata i32 %7, metadata !7062, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7068
  %4 = icmp eq i32 %3, 4, !dbg !7071
  br i1 %4, label %19, label %5, !dbg !7069, !llvm.loop !7072

5:                                                ; preds = %1, %2
  %6 = phi %"class.Cicada::Stm32Uart"* [ undef, %1 ], [ %18, %2 ]
  %7 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7062, metadata !DIExpression()), !dbg !7068
  %8 = getelementptr inbounds [4 x %"class.Cicada::Stm32Uart"*], [4 x %"class.Cicada::Stm32Uart"*]* @_ZN6Cicada9Stm32Uart8instanceE, i32 0, i32 %7, !dbg !7074
  %9 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** %8, align 4, !dbg !7074, !tbaa !2476
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %9, metadata !7064, metadata !DIExpression()), !dbg !7075
  %10 = icmp eq %"class.Cicada::Stm32Uart"* %9, null, !dbg !7076
  br i1 %10, label %15, label %11, !dbg !7078

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %9, i32 0, i32 2, i32 0, !dbg !7079
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %12, align 4, !dbg !7079, !tbaa !6644
  %14 = icmp eq %struct.USART_TypeDef* %13, %0, !dbg !7080
  br i1 %14, label %16, label %15, !dbg !7081

15:                                               ; preds = %11, %5
  br label %16, !dbg !7082

16:                                               ; preds = %11, %15
  %17 = phi i1 [ true, %15 ], [ false, %11 ]
  %18 = phi %"class.Cicada::Stm32Uart"* [ %6, %15 ], [ %9, %11 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7062, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7068
  br i1 %17, label %2, label %19

19:                                               ; preds = %2, %16
  %20 = phi %"class.Cicada::Stm32Uart"* [ null, %2 ], [ %18, %16 ]
  ret %"class.Cicada::Stm32Uart"* %20, !dbg !7083
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada9Stm32Uart15handleInterruptEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) local_unnamed_addr #4 align 2 !dbg !7084 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !7086, metadata !DIExpression()), !dbg !7087
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, !dbg !7088
  call void @_ZN6Cicada14BufferedSerial23transferToAndFromBufferEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %2) #34, !dbg !7088
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 2, !dbg !7089
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %3 to %"class.Cicada::CircularBuffer.0"*, !dbg !7089
  %5 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !7091
  %6 = icmp eq i64 %5, 0, !dbg !7089
  br i1 %6, label %7, label %13, !dbg !7092

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !7093
  %9 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %8, align 4, !dbg !7093, !tbaa !6644
  %10 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %9, i32 0, i32 3, !dbg !7093
  %11 = load volatile i32, i32* %10, align 4, !dbg !7093, !tbaa !6788
  %12 = and i32 %11, -129, !dbg !7093
  store volatile i32 %12, i32* %10, align 4, !dbg !7093, !tbaa !6788
  br label %13, !dbg !7093

13:                                               ; preds = %7, %1
  ret void, !dbg !7094
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada17Sim7x00CommDeviceD0Ev(%"class.Cicada::Sim800CommDevice"* noundef nonnull align 8 dereferenceable(284) %0) unnamed_addr #3 comdat align 2 !dbg !7095 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Sim800CommDevice"* %0, metadata !7098, metadata !DIExpression()), !dbg !7100
  %2 = bitcast %"class.Cicada::Sim800CommDevice"* %0 to %"class.Cicada::IPCommDevice"*, !dbg !7101
  %3 = call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceD2Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(284) %2) #34, !dbg !7101
  %4 = bitcast %"class.Cicada::Sim800CommDevice"* %0 to i8*, !dbg !7101
  call void @_ZdlPv(i8* noundef %4) #35, !dbg !7101
  ret void, !dbg !7101
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada17Sim7x00CommDevice3runEv(%"class.Cicada::Sim800CommDevice"* noundef nonnull align 8 dereferenceable(284) %0) unnamed_addr #4 align 2 !dbg !7102 {
  %2 = alloca [10 x i8], align 1
  %3 = alloca [23 x i8], align 1
  %4 = alloca [6 x i8], align 1
  %5 = alloca [6 x i8], align 1
  call void @llvm.dbg.value(metadata %"class.Cicada::Sim800CommDevice"* %0, metadata !7104, metadata !DIExpression()), !dbg !7125
  %6 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, !dbg !7126
  %7 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 1, !dbg !7126
  %8 = bitcast %"class.Cicada::IBufferedSerial"** %7 to i8**, !dbg !7126
  %9 = load i8*, i8** %8, align 4, !dbg !7126, !tbaa !5299
  %10 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !7126
  %11 = bitcast i8* %10 to %"class.Cicada::ICommDevice"*, !dbg !7126
  %12 = bitcast i8* %10 to i1 (%"class.Cicada::ICommDevice"*)***, !dbg !7128
  %13 = load i1 (%"class.Cicada::ICommDevice"*)**, i1 (%"class.Cicada::ICommDevice"*)*** %12, align 4, !dbg !7128, !tbaa !2568
  %14 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %13, i32 3, !dbg !7128
  %15 = load i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %14, align 4, !dbg !7128
  %16 = call noundef zeroext i1 %15(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %11) #34, !dbg !7128
  br i1 %16, label %28, label %17, !dbg !7129

17:                                               ; preds = %1
  %18 = load i8*, i8** %8, align 4, !dbg !7130, !tbaa !5299
  %19 = getelementptr inbounds i8, i8* %18, i32 4, !dbg !7130
  %20 = bitcast i8* %19 to %"class.Cicada::ICommDevice"*, !dbg !7130
  %21 = bitcast i8* %19 to i1 (%"class.Cicada::ICommDevice"*)***, !dbg !7133
  %22 = load i1 (%"class.Cicada::ICommDevice"*)**, i1 (%"class.Cicada::ICommDevice"*)*** %21, align 4, !dbg !7133, !tbaa !2568
  %23 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %22, i32 2, !dbg !7133
  %24 = load i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %23, align 4, !dbg !7133
  %25 = call noundef zeroext i1 %24(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %20) #34, !dbg !7133
  br i1 %25, label %391, label %26, !dbg !7134

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 4, !dbg !7135
  store i8 1, i8* %27, align 2, !dbg !7137, !tbaa !5409
  br label %391, !dbg !7138

28:                                               ; preds = %1
  %29 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !7139
  %30 = load i8, i8* %29, align 2, !dbg !7139, !tbaa !5289
  %31 = zext i8 %30 to i32, !dbg !7139
  %32 = and i32 %31, 64, !dbg !7141
  %33 = icmp eq i32 %32, 0, !dbg !7139
  br i1 %33, label %34, label %391, !dbg !7142

34:                                               ; preds = %28
  %35 = and i32 %31, 2, !dbg !7143
  %36 = icmp eq i32 %35, 0, !dbg !7144
  br i1 %36, label %67, label %37, !dbg !7145

37:                                               ; preds = %34
  %38 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7146, !tbaa !5299
  %39 = bitcast %"class.Cicada::IBufferedSerial"* %38 to void (%"class.Cicada::IBufferedSerial"*)***, !dbg !7147
  %40 = load void (%"class.Cicada::IBufferedSerial"*)**, void (%"class.Cicada::IBufferedSerial"*)*** %39, align 4, !dbg !7147, !tbaa !2568
  %41 = getelementptr inbounds void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %40, i32 12, !dbg !7147
  %42 = load void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %41, align 4, !dbg !7147
  call void %42(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %38) #34, !dbg !7147
  store i8 32, i8* %29, align 2, !dbg !7148, !tbaa !5289
  %43 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 6, !dbg !7149
  %44 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 4, !dbg !7150
  %45 = bitcast i64* %43 to i8*, !dbg !7150
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %45, i8 0, i64 24, i1 false), !dbg !7152
  %46 = load i8, i8* %44, align 2, !dbg !7150, !tbaa !5409
  %47 = add i8 %46, -3, !dbg !7153
  %48 = icmp ult i8 %47, 15, !dbg !7153
  %49 = select i1 %48, i8 3, i8 0, !dbg !7153
  store i8 %49, i8* %44, align 2, !dbg !7154, !tbaa !5409
  %50 = getelementptr inbounds [10 x i8], [10 x i8]* %2, i32 0, i32 0, !dbg !7155
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %50) #34, !dbg !7155
  call void @llvm.dbg.declare(metadata [10 x i8]* %2, metadata !7105, metadata !DIExpression()), !dbg !7156
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(10) %50, i8* noundef nonnull align 1 dereferenceable(10) getelementptr inbounds ([10 x i8], [10 x i8]* @__const._ZN6Cicada17Sim7x00CommDevice3runEv.str, i32 0, i32 0), i32 10, i1 false), !dbg !7156
  %51 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7157, !tbaa !5299
  %52 = bitcast %"class.Cicada::IBufferedSerial"* %51 to i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)***, !dbg !7158
  %53 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*** %52, align 4, !dbg !7158, !tbaa !2568
  %54 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %53, i32 6, !dbg !7158
  %55 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %54, align 4, !dbg !7158
  %56 = call noundef i64 %55(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %51, i8* noundef nonnull %50, i64 noundef 9) #34, !dbg !7158
  %57 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7159, !tbaa !5299
  %58 = load i8*, i8** @_ZN6Cicada12ATCommDevice11_lineEndStrE, align 4, !dbg !7160, !tbaa !2476
  %59 = bitcast %"class.Cicada::IBufferedSerial"* %57 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7161
  %60 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %59, align 4, !dbg !7161, !tbaa !2568
  %61 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %60, i32 8, !dbg !7161
  %62 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %61, align 4, !dbg !7161
  %63 = call noundef i64 %62(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %57, i8* noundef %58) #34, !dbg !7161
  %64 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 5, !dbg !7162
  store i8 0, i8* %64, align 1, !dbg !7163, !tbaa !7164
  %65 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 9, !dbg !7165
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.103, i32 0, i32 0), i8** %65, align 8, !dbg !7166, !tbaa !5474
  %66 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7167
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %66, i16 noundef zeroext 4000), !dbg !7167
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %50) #34, !dbg !7168
  br label %391

67:                                               ; preds = %34
  %68 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, !dbg !7169
  %69 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice14fillLineBufferEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68) #34, !dbg !7169
  call void @llvm.dbg.value(metadata i1 %69, metadata !7109, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7125
  br i1 %69, label %70, label %135, !dbg !7170

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 4, !dbg !7171
  %72 = load i8, i8* %71, align 2, !dbg !7171, !tbaa !5409
  %73 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 5, !dbg !7174
  %74 = load i8, i8* %73, align 1, !dbg !7174, !tbaa !7164
  call void @_ZN6Cicada12ATCommDevice9logStatesEaa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8 noundef signext %72, i8 noundef signext %74) #34, !dbg !7175
  %75 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 9, !dbg !7176
  %76 = load i8*, i8** %75, align 8, !dbg !7176, !tbaa !5474
  %77 = icmp eq i8* %76, null, !dbg !7176
  br i1 %77, label %91, label %78, !dbg !7178

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 2, i32 0, !dbg !7179
  %80 = call i32 @strlen(i8* noundef nonnull %76), !dbg !7182
  %81 = call i32 @strncmp(i8* noundef nonnull %79, i8* noundef nonnull %76, i32 noundef %80), !dbg !7183
  %82 = icmp eq i32 %81, 0, !dbg !7184
  br i1 %82, label %83, label %84, !dbg !7185

83:                                               ; preds = %78
  store i8* null, i8** %75, align 8, !dbg !7186, !tbaa !5474
  br label %91, !dbg !7188

84:                                               ; preds = %78
  %85 = call i32 @memcmp(i8* noundef nonnull dereferenceable(5) %79, i8* noundef nonnull dereferenceable(5) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.104, i32 0, i32 0), i32 5), !dbg !7189
  %86 = icmp eq i32 %85, 0, !dbg !7191
  br i1 %86, label %87, label %91, !dbg !7192

87:                                               ; preds = %84
  %88 = load i8, i8* %29, align 2, !dbg !7193, !tbaa !5289
  %89 = or i8 %88, 2, !dbg !7193
  store i8 %89, i8* %29, align 2, !dbg !7193, !tbaa !5289
  %90 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7195
  store i32 5, i32* %90, align 4, !dbg !7196, !tbaa !5601
  store i8* null, i8** %75, align 8, !dbg !7197, !tbaa !5474
  br label %391, !dbg !7198

91:                                               ; preds = %83, %84, %70
  %92 = load i8, i8* %73, align 1, !dbg !7199, !tbaa !7164
  %93 = sext i8 %92 to i32, !dbg !7199
  switch i32 %93, label %131 [
    i32 4, label %94
    i32 5, label %104
    i32 6, label %107
    i32 7, label %119
    i32 8, label %122
    i32 1, label %125
    i32 2, label %128
  ], !dbg !7200

94:                                               ; preds = %91
  %95 = load i8*, i8** %75, align 8, !dbg !7201, !tbaa !5474
  %96 = icmp eq i8* %95, null, !dbg !7204
  br i1 %96, label %97, label %98, !dbg !7205

97:                                               ; preds = %94
  store i8 0, i8* %73, align 1, !dbg !7206, !tbaa !7164
  br label %131, !dbg !7208

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 2, i32 0, !dbg !7209
  %100 = call i32 @memcmp(i8* noundef nonnull dereferenceable(11) %99, i8* noundef nonnull dereferenceable(11) getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.105, i32 0, i32 0), i32 11), !dbg !7211
  %101 = icmp eq i32 %100, 0, !dbg !7212
  br i1 %101, label %102, label %131, !dbg !7213

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7214
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %103, i16 noundef zeroext 2000), !dbg !7214
  store i8 7, i8* %71, align 2, !dbg !7216, !tbaa !5409
  store i8* null, i8** %75, align 8, !dbg !7217, !tbaa !5474
  store i8 0, i8* %73, align 1, !dbg !7218, !tbaa !7164
  br label %391, !dbg !7219

104:                                              ; preds = %91
  %105 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice13parseDnsReplyEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68) #34, !dbg !7220
  br i1 %105, label %106, label %131, !dbg !7222

106:                                              ; preds = %104
  store i8 0, i8* %73, align 1, !dbg !7223, !tbaa !7164
  br label %131, !dbg !7225

107:                                              ; preds = %91
  %108 = load i8*, i8** %75, align 8, !dbg !7226, !tbaa !5474
  %109 = icmp eq i8* %108, null, !dbg !7228
  br i1 %109, label %110, label %111, !dbg !7229

110:                                              ; preds = %107
  store i8 0, i8* %73, align 1, !dbg !7230, !tbaa !7164
  br label %131, !dbg !7232

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 2, i32 0, !dbg !7233
  %113 = call i32 @memcmp(i8* noundef nonnull dereferenceable(12) %112, i8* noundef nonnull dereferenceable(12) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4.106, i32 0, i32 0), i32 12), !dbg !7236
  %114 = icmp eq i32 %113, 0, !dbg !7237
  br i1 %114, label %115, label %131, !dbg !7238

115:                                              ; preds = %111
  %116 = load i8, i8* %29, align 2, !dbg !7239, !tbaa !5289
  %117 = or i8 %116, 2, !dbg !7239
  store i8 %117, i8* %29, align 2, !dbg !7239, !tbaa !5289
  %118 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7241
  store i32 5, i32* %118, align 4, !dbg !7242, !tbaa !5601
  br label %131, !dbg !7243

119:                                              ; preds = %91
  %120 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice14parseCiprxget4Ev(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68) #34, !dbg !7244
  br i1 %120, label %121, label %131, !dbg !7246

121:                                              ; preds = %119
  store i8 0, i8* %73, align 1, !dbg !7247, !tbaa !7164
  br label %131, !dbg !7249

122:                                              ; preds = %91
  %123 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice14parseCiprxget2Ev(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68) #34, !dbg !7250
  br i1 %123, label %124, label %131, !dbg !7252

124:                                              ; preds = %122
  store i8 0, i8* %73, align 1, !dbg !7253, !tbaa !7164
  store i8 17, i8* %71, align 2, !dbg !7255, !tbaa !5409
  br label %131, !dbg !7256

125:                                              ; preds = %91
  %126 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice8parseCsqEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68) #34, !dbg !7257
  br i1 %126, label %127, label %131, !dbg !7259

127:                                              ; preds = %125
  store i8 0, i8* %73, align 1, !dbg !7260, !tbaa !7164
  br label %131, !dbg !7262

128:                                              ; preds = %91
  %129 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice12parseIDReplyEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68) #34, !dbg !7263
  br i1 %129, label %130, label %131, !dbg !7265

130:                                              ; preds = %128
  store i8 0, i8* %73, align 1, !dbg !7266, !tbaa !7164
  br label %131, !dbg !7268

131:                                              ; preds = %91, %128, %130, %125, %127, %122, %124, %119, %121, %110, %115, %111, %104, %106, %97, %98
  %132 = load i8, i8* %71, align 2, !dbg !7269, !tbaa !5409
  %133 = icmp sgt i8 %132, 11, !dbg !7271
  br i1 %133, label %134, label %144, !dbg !7272

134:                                              ; preds = %131
  call void @_ZN6Cicada13SimCommDevice20checkConnectionStateEPKc(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.107, i32 0, i32 0)) #34, !dbg !7273
  br label %144, !dbg !7275

135:                                              ; preds = %67
  %136 = load i8, i8* %29, align 2, !dbg !7276, !tbaa !5289
  %137 = and i8 %136, 8, !dbg !7278
  %138 = icmp ne i8 %137, 0, !dbg !7279
  %139 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 4
  %140 = load i8, i8* %139, align 2
  %141 = icmp eq i8 %140, 17
  %142 = select i1 %138, i1 %141, i1 false, !dbg !7280
  br i1 %142, label %143, label %144, !dbg !7280

143:                                              ; preds = %135
  call void @_ZN6Cicada12ATCommDevice15flushReadBufferEv(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6) #34, !dbg !7281
  br label %144, !dbg !7283

144:                                              ; preds = %135, %143, %131, %134
  %145 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 9, !dbg !7284
  %146 = load i8*, i8** %145, align 8, !dbg !7284, !tbaa !5474
  %147 = icmp eq i8* %146, null, !dbg !7284
  br i1 %147, label %148, label %391, !dbg !7286

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 5, !dbg !7287
  %150 = load i8, i8* %149, align 1, !dbg !7287, !tbaa !7164
  %151 = icmp eq i8 %150, 0, !dbg !7288
  br i1 %151, label %152, label %391, !dbg !7289

152:                                              ; preds = %148
  %153 = bitcast %"class.Cicada::IBufferedSerial"** %7 to %"class.Cicada::ICommDevice"**, !dbg !7290
  %154 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %153, align 4, !dbg !7290, !tbaa !5299
  %155 = bitcast %"class.Cicada::ICommDevice"* %154 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !7292
  %156 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %155, align 4, !dbg !7292, !tbaa !2568
  %157 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %156, i32 3, !dbg !7292
  %158 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %157, align 4, !dbg !7292
  %159 = call noundef i64 %158(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %154) #34, !dbg !7292
  %160 = icmp ult i64 %159, 20, !dbg !7293
  br i1 %160, label %391, label %161, !dbg !7294

161:                                              ; preds = %152
  %162 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 4, !dbg !7295
  %163 = load i8, i8* %162, align 4, !dbg !7295, !tbaa !5921
  %164 = icmp eq i8 %163, -1, !dbg !7297
  br i1 %164, label %165, label %171, !dbg !7298

165:                                              ; preds = %161
  %166 = load i8, i8* %29, align 2, !dbg !7299, !tbaa !5289
  %167 = and i8 %166, 32, !dbg !7300
  %168 = icmp eq i8 %167, 0, !dbg !7299
  br i1 %168, label %171, label %169, !dbg !7301

169:                                              ; preds = %165
  store i8 1, i8* %149, align 1, !dbg !7302, !tbaa !7164
  %170 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7304, !tbaa !2476
  store i8* %170, i8** %145, align 8, !dbg !7305, !tbaa !5474
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.108, i32 0, i32 0)) #34, !dbg !7306
  br label %391, !dbg !7307

171:                                              ; preds = %165, %161
  %172 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 1, !dbg !7308
  %173 = load i8*, i8** %172, align 8, !dbg !7308, !tbaa !7310
  %174 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice13sendIDRequestEPKc(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68, i8* noundef %173) #34, !dbg !7312
  br i1 %174, label %175, label %177, !dbg !7313

175:                                              ; preds = %171
  store i8 2, i8* %149, align 1, !dbg !7314, !tbaa !7164
  %176 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7316, !tbaa !2476
  store i8* %176, i8** %145, align 8, !dbg !7317, !tbaa !5474
  br label %391, !dbg !7318

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 4, !dbg !7319
  %179 = load i8, i8* %178, align 2, !dbg !7319, !tbaa !5409
  %180 = sext i8 %179 to i32, !dbg !7319
  switch i32 %180, label %391 [
    i32 0, label %181
    i32 3, label %185
    i32 4, label %191
    i32 5, label %217
    i32 6, label %219
    i32 7, label %221
    i32 8, label %225
    i32 9, label %227
    i32 10, label %231
    i32 11, label %282
    i32 12, label %287
    i32 13, label %347
    i32 14, label %349
    i32 15, label %351
    i32 20, label %387
    i32 17, label %366
    i32 18, label %380
    i32 19, label %385
  ], !dbg !7320

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7321
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %182, i16 noundef zeroext 10), !dbg !7321
  %183 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7322
  store i32 0, i32* %183, align 4, !dbg !7323, !tbaa !5601
  %184 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice13handleConnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8 noundef signext 3) #34, !dbg !7324
  br label %391, !dbg !7325

185:                                              ; preds = %177
  %186 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7326
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %186, i16 noundef zeroext 10), !dbg !7326
  %187 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7327
  store i32 1, i32* %187, align 4, !dbg !7328, !tbaa !5601
  %188 = load i8, i8* %29, align 2, !dbg !7329, !tbaa !5289
  %189 = or i8 %188, 32, !dbg !7329
  store i8 %189, i8* %29, align 2, !dbg !7329, !tbaa !5289
  %190 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7330, !tbaa !2476
  store i8* %190, i8** %145, align 8, !dbg !7331, !tbaa !5474
  store i8 4, i8* %178, align 2, !dbg !7332, !tbaa !5409
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.109, i32 0, i32 0)) #34, !dbg !7333
  br label %391, !dbg !7334

191:                                              ; preds = %177
  %192 = getelementptr inbounds [23 x i8], [23 x i8]* %3, i32 0, i32 0, !dbg !7335
  call void @llvm.lifetime.start.p0i8(i64 23, i8* nonnull %192) #34, !dbg !7335
  call void @llvm.dbg.declare(metadata [23 x i8]* %3, metadata !7110, metadata !DIExpression()), !dbg !7336
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(23) %192, i8* noundef nonnull align 1 dereferenceable(23) getelementptr inbounds ([23 x i8], [23 x i8]* @__const._ZN6Cicada17Sim7x00CommDevice3runEv.str.8, i32 0, i32 0), i32 23, i1 false), !dbg !7336
  %193 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7337, !tbaa !5299
  %194 = bitcast %"class.Cicada::IBufferedSerial"* %193 to i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)***, !dbg !7338
  %195 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*** %194, align 4, !dbg !7338, !tbaa !2568
  %196 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %195, i32 6, !dbg !7338
  %197 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %196, align 4, !dbg !7338
  %198 = call noundef i64 %197(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %193, i8* noundef nonnull %192, i64 noundef 22) #34, !dbg !7338
  %199 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7339, !tbaa !5299
  %200 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 1, !dbg !7340
  %201 = load i8*, i8** %200, align 8, !dbg !7340, !tbaa !5894
  %202 = call i32 @strlen(i8* noundef nonnull dereferenceable(1) %201), !dbg !7341
  %203 = zext i32 %202 to i64, !dbg !7341
  %204 = bitcast %"class.Cicada::IBufferedSerial"* %199 to i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)***, !dbg !7342
  %205 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*** %204, align 4, !dbg !7342, !tbaa !2568
  %206 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %205, i32 6, !dbg !7342
  %207 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %206, align 4, !dbg !7342
  %208 = call noundef i64 %207(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %199, i8* noundef %201, i64 noundef %203) #34, !dbg !7342
  %209 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7343, !tbaa !5299
  %210 = load i8*, i8** @_ZN6Cicada12ATCommDevice12_quoteEndStrE, align 4, !dbg !7344, !tbaa !2476
  %211 = bitcast %"class.Cicada::IBufferedSerial"* %209 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7345
  %212 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %211, align 4, !dbg !7345, !tbaa !2568
  %213 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %212, i32 8, !dbg !7345
  %214 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %213, align 4, !dbg !7345
  %215 = call noundef i64 %214(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %209, i8* noundef %210) #34, !dbg !7345
  %216 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7346, !tbaa !2476
  store i8* %216, i8** %145, align 8, !dbg !7347, !tbaa !5474
  store i8 5, i8* %178, align 2, !dbg !7348, !tbaa !5409
  call void @llvm.lifetime.end.p0i8(i64 23, i8* nonnull %192) #34, !dbg !7349
  br label %391

217:                                              ; preds = %177
  %218 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7350, !tbaa !2476
  store i8* %218, i8** %145, align 8, !dbg !7351, !tbaa !5474
  store i8 6, i8* %178, align 2, !dbg !7352, !tbaa !5409
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9.110, i32 0, i32 0)) #34, !dbg !7353
  br label %391, !dbg !7354

219:                                              ; preds = %177
  %220 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7355, !tbaa !2476
  store i8* %220, i8** %145, align 8, !dbg !7356, !tbaa !5474
  store i8 7, i8* %178, align 2, !dbg !7357, !tbaa !5409
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10.111, i32 0, i32 0)) #34, !dbg !7358
  br label %391, !dbg !7359

221:                                              ; preds = %177
  %222 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice16handleDisconnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8 noundef signext 20) #34, !dbg !7360
  br i1 %222, label %391, label %223, !dbg !7362

223:                                              ; preds = %221
  %224 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7363
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %224, i16 noundef zeroext 10), !dbg !7363
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11.112, i32 0, i32 0), i8** %145, align 8, !dbg !7364, !tbaa !5474
  store i8 8, i8* %178, align 2, !dbg !7365, !tbaa !5409
  store i8 4, i8* %149, align 1, !dbg !7366, !tbaa !7164
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12.113, i32 0, i32 0)) #34, !dbg !7367
  br label %391, !dbg !7368

225:                                              ; preds = %177
  %226 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7369, !tbaa !2476
  store i8* %226, i8** %145, align 8, !dbg !7370, !tbaa !5474
  store i8 9, i8* %178, align 2, !dbg !7371, !tbaa !5409
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13.114, i32 0, i32 0)) #34, !dbg !7372
  br label %391, !dbg !7373

227:                                              ; preds = %177
  %228 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice12sendDnsQueryEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68) #34, !dbg !7374
  br i1 %228, label %229, label %391, !dbg !7376

229:                                              ; preds = %227
  store i8 5, i8* %149, align 1, !dbg !7377, !tbaa !7164
  %230 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7379, !tbaa !2476
  store i8* %230, i8** %145, align 8, !dbg !7380, !tbaa !5474
  store i8 10, i8* %178, align 2, !dbg !7381, !tbaa !5409
  br label %391, !dbg !7382

231:                                              ; preds = %177
  %232 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0, !dbg !7383
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %232) #34, !dbg !7383
  call void @llvm.dbg.declare(metadata [6 x i8]* %4, metadata !7116, metadata !DIExpression()), !dbg !7384
  %233 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !7385
  %234 = load i16, i16* %233, align 8, !dbg !7385, !tbaa !5688
  %235 = zext i16 %234 to i32, !dbg !7385
  %236 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* noundef nonnull %232, i32 noundef 6, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14.115, i32 0, i32 0), i32 noundef %235), !dbg !7386
  %237 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7387, !tbaa !5299
  %238 = bitcast %"class.Cicada::IBufferedSerial"* %237 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7388
  %239 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %238, align 4, !dbg !7388, !tbaa !2568
  %240 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %239, i32 8, !dbg !7388
  %241 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %240, align 4, !dbg !7388
  %242 = call noundef i64 %241(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %237, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i32 0, i32 0)) #34, !dbg !7388
  %243 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7389
  %244 = load i32, i32* %243, align 8, !dbg !7389, !tbaa !5691
  %245 = icmp eq i32 %244, 0, !dbg !7391
  %246 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7392, !tbaa !5299
  %247 = bitcast %"class.Cicada::IBufferedSerial"* %246 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7392
  %248 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %247, align 4, !dbg !7392, !tbaa !2568
  %249 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %248, i32 8, !dbg !7392
  %250 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %249, align 4, !dbg !7392
  br i1 %245, label %251, label %253, !dbg !7393

251:                                              ; preds = %231
  %252 = call noundef i64 %250(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %246, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i32 0, i32 0)) #34, !dbg !7394
  br label %268, !dbg !7396

253:                                              ; preds = %231
  %254 = call noundef i64 %250(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %246, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i32 0, i32 0)) #34, !dbg !7397
  %255 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7399, !tbaa !5299
  %256 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7400
  %257 = bitcast %"class.Cicada::IBufferedSerial"* %255 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7401
  %258 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %257, align 4, !dbg !7401, !tbaa !2568
  %259 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %258, i32 8, !dbg !7401
  %260 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %259, align 4, !dbg !7401
  %261 = call noundef i64 %260(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %255, i8* noundef nonnull %256) #34, !dbg !7401
  %262 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7402, !tbaa !5299
  %263 = bitcast %"class.Cicada::IBufferedSerial"* %262 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7403
  %264 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %263, align 4, !dbg !7403, !tbaa !2568
  %265 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %264, i32 8, !dbg !7403
  %266 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %265, align 4, !dbg !7403
  %267 = call noundef i64 %266(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %262, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i32 0, i32 0)) #34, !dbg !7403
  br label %268

268:                                              ; preds = %253, %251
  %269 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7404, !tbaa !5299
  %270 = bitcast %"class.Cicada::IBufferedSerial"* %269 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7405
  %271 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %270, align 4, !dbg !7405, !tbaa !2568
  %272 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %271, i32 8, !dbg !7405
  %273 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %272, align 4, !dbg !7405
  %274 = call noundef i64 %273(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %269, i8* noundef nonnull %232) #34, !dbg !7405
  %275 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7406, !tbaa !5299
  %276 = load i8*, i8** @_ZN6Cicada12ATCommDevice11_lineEndStrE, align 4, !dbg !7407, !tbaa !2476
  %277 = bitcast %"class.Cicada::IBufferedSerial"* %275 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7408
  %278 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %277, align 4, !dbg !7408, !tbaa !2568
  %279 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %278, i32 8, !dbg !7408
  %280 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %279, align 4, !dbg !7408
  %281 = call noundef i64 %280(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %275, i8* noundef %276) #34, !dbg !7408
  store i8 6, i8* %149, align 1, !dbg !7409, !tbaa !7164
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i32 0, i32 0), i8** %145, align 8, !dbg !7410, !tbaa !5474
  store i8 11, i8* %178, align 2, !dbg !7411, !tbaa !5409
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %232) #34, !dbg !7412
  br label %391

282:                                              ; preds = %177
  %283 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7413
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %283, i16 noundef zeroext 0), !dbg !7413
  %284 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7414
  store i32 2, i32* %284, align 4, !dbg !7415, !tbaa !5601
  store i8 0, i8* %149, align 1, !dbg !7416, !tbaa !7164
  store i8 12, i8* %178, align 2, !dbg !7417, !tbaa !5409
  %285 = load i8, i8* %29, align 2, !dbg !7418, !tbaa !5289
  %286 = or i8 %285, 16, !dbg !7418
  store i8 %286, i8* %29, align 2, !dbg !7418, !tbaa !5289
  br label %391, !dbg !7419

287:                                              ; preds = %177
  %288 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7420
  %289 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %288), !dbg !7421
  %290 = icmp eq i64 %289, 0, !dbg !7420
  br i1 %290, label %337, label %291, !dbg !7422

291:                                              ; preds = %287
  %292 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice14prepareSendingEb(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i1 noundef zeroext true) #34, !dbg !7423
  br i1 %292, label %293, label %391, !dbg !7424

293:                                              ; preds = %291
  %294 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7425
  %295 = load i32, i32* %294, align 8, !dbg !7425, !tbaa !5691
  %296 = icmp eq i32 %295, 0, !dbg !7426
  br i1 %296, label %297, label %328, !dbg !7427

297:                                              ; preds = %293
  %298 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7428, !tbaa !5299
  %299 = bitcast %"class.Cicada::IBufferedSerial"* %298 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7429
  %300 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %299, align 4, !dbg !7429, !tbaa !2568
  %301 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %300, i32 8, !dbg !7429
  %302 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %301, align 4, !dbg !7429
  %303 = call noundef i64 %302(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %298, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i32 0, i32 0)) #34, !dbg !7429
  %304 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7430, !tbaa !5299
  %305 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7431
  %306 = bitcast %"class.Cicada::IBufferedSerial"* %304 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7432
  %307 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %306, align 4, !dbg !7432, !tbaa !2568
  %308 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %307, i32 8, !dbg !7432
  %309 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %308, align 4, !dbg !7432
  %310 = call noundef i64 %309(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %304, i8* noundef nonnull %305) #34, !dbg !7432
  %311 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7433, !tbaa !5299
  %312 = bitcast %"class.Cicada::IBufferedSerial"* %311 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7434
  %313 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %312, align 4, !dbg !7434, !tbaa !2568
  %314 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %313, i32 8, !dbg !7434
  %315 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %314, align 4, !dbg !7434
  %316 = call noundef i64 %315(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %311, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i32 0, i32 0)) #34, !dbg !7434
  %317 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i32 0, i32 0, !dbg !7435
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %317) #34, !dbg !7435
  call void @llvm.dbg.declare(metadata [6 x i8]* %5, metadata !7118, metadata !DIExpression()), !dbg !7436
  %318 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !7437
  %319 = load i16, i16* %318, align 8, !dbg !7437, !tbaa !5688
  %320 = zext i16 %319 to i32, !dbg !7437
  %321 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* noundef nonnull %317, i32 noundef 6, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14.115, i32 0, i32 0), i32 noundef %320), !dbg !7438
  %322 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7439, !tbaa !5299
  %323 = bitcast %"class.Cicada::IBufferedSerial"* %322 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7440
  %324 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %323, align 4, !dbg !7440, !tbaa !2568
  %325 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %324, i32 8, !dbg !7440
  %326 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %325, align 4, !dbg !7440
  %327 = call noundef i64 %326(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %322, i8* noundef nonnull %317) #34, !dbg !7440
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %317) #34, !dbg !7441
  br label %328, !dbg !7442

328:                                              ; preds = %297, %293
  %329 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7443, !tbaa !5299
  %330 = load i8*, i8** @_ZN6Cicada12ATCommDevice11_lineEndStrE, align 4, !dbg !7444, !tbaa !2476
  %331 = bitcast %"class.Cicada::IBufferedSerial"* %329 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7445
  %332 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %331, align 4, !dbg !7445, !tbaa !2568
  %333 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %332, i32 8, !dbg !7445
  %334 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %333, align 4, !dbg !7445
  %335 = call noundef i64 %334(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %329, i8* noundef %330) #34, !dbg !7445
  %336 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7446
  store i32 3, i32* %336, align 4, !dbg !7447, !tbaa !5601
  store i8 13, i8* %178, align 2, !dbg !7448, !tbaa !5409
  br label %391, !dbg !7449

337:                                              ; preds = %287
  %338 = load i8, i8* %29, align 2, !dbg !7450, !tbaa !5289
  %339 = and i8 %338, 4, !dbg !7452
  %340 = icmp eq i8 %339, 0, !dbg !7450
  br i1 %340, label %344, label %341, !dbg !7453

341:                                              ; preds = %337
  %342 = and i8 %338, -5, !dbg !7454
  store i8 %342, i8* %29, align 2, !dbg !7454, !tbaa !5289
  %343 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7456
  store i32 4, i32* %343, align 4, !dbg !7457, !tbaa !5601
  store i8 14, i8* %178, align 2, !dbg !7458, !tbaa !5409
  br label %391, !dbg !7459

344:                                              ; preds = %337
  %345 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7460
  store i32 2, i32* %345, align 4, !dbg !7462, !tbaa !5601
  %346 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice16handleDisconnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8 noundef signext 19) #34, !dbg !7463
  br label %391

347:                                              ; preds = %177
  call void @_ZN6Cicada12ATCommDevice8sendDataEv(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6) #34, !dbg !7464
  %348 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7465, !tbaa !2476
  store i8* %348, i8** %145, align 8, !dbg !7466, !tbaa !5474
  store i8 12, i8* %178, align 2, !dbg !7467, !tbaa !5409
  br label %391, !dbg !7468

349:                                              ; preds = %177
  %350 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7469, !tbaa !2476
  store i8* %350, i8** %145, align 8, !dbg !7470, !tbaa !5474
  store i8 15, i8* %178, align 2, !dbg !7471, !tbaa !5409
  store i8 7, i8* %149, align 1, !dbg !7472, !tbaa !7164
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i32 0, i32 0)) #34, !dbg !7473
  br label %391, !dbg !7474

351:                                              ; preds = %177
  %352 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice16handleDisconnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8 noundef signext 19) #34, !dbg !7475
  br i1 %352, label %391, label %353, !dbg !7477

353:                                              ; preds = %351
  %354 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !7478
  %355 = load i64, i64* %354, align 8, !dbg !7478, !tbaa !5386
  %356 = icmp eq i64 %355, 0, !dbg !7480
  br i1 %356, label %360, label %357, !dbg !7481

357:                                              ; preds = %353
  %358 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice13sendCiprxget2Ev(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68) #34, !dbg !7482
  br i1 %358, label %359, label %391, !dbg !7485

359:                                              ; preds = %357
  store i8 16, i8* %178, align 2, !dbg !7486, !tbaa !5409
  store i8 8, i8* %149, align 1, !dbg !7488, !tbaa !7164
  br label %391, !dbg !7489

360:                                              ; preds = %353
  %361 = load i8, i8* %29, align 2, !dbg !7490, !tbaa !5289
  %362 = and i8 %361, 16, !dbg !7492
  %363 = icmp eq i8 %362, 0, !dbg !7490
  br i1 %363, label %365, label %364, !dbg !7493

364:                                              ; preds = %360
  store i8 12, i8* %178, align 2, !dbg !7494, !tbaa !5409
  br label %391, !dbg !7496

365:                                              ; preds = %360
  store i8 18, i8* %178, align 2, !dbg !7497, !tbaa !5409
  br label %391

366:                                              ; preds = %177
  %367 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 8, !dbg !7499
  %368 = load i64, i64* %367, align 8, !dbg !7499, !tbaa !5374
  %369 = icmp eq i64 %368, 0, !dbg !7501
  br i1 %369, label %374, label %370, !dbg !7502

370:                                              ; preds = %366
  %371 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice7receiveEv(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6) #34, !dbg !7503
  br i1 %371, label %372, label %391, !dbg !7506

372:                                              ; preds = %370
  store i8 0, i8* %149, align 1, !dbg !7507, !tbaa !7164
  %373 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7509, !tbaa !2476
  store i8* %373, i8** %145, align 8, !dbg !7510, !tbaa !5474
  br label %391, !dbg !7511

374:                                              ; preds = %366
  %375 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !7512
  %376 = load i64, i64* %375, align 8, !dbg !7512, !tbaa !5386
  %377 = icmp eq i64 %376, 0, !dbg !7514
  br i1 %377, label %379, label %378, !dbg !7515

378:                                              ; preds = %374
  store i8 15, i8* %178, align 2, !dbg !7516, !tbaa !5409
  br label %391, !dbg !7518

379:                                              ; preds = %374
  store i8 14, i8* %178, align 2, !dbg !7519, !tbaa !5409
  br label %391

380:                                              ; preds = %177
  %381 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7521
  store i32 1, i32* %381, align 4, !dbg !7522, !tbaa !5601
  %382 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice16handleDisconnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8 noundef signext 19) #34, !dbg !7523
  br i1 %382, label %391, label %383, !dbg !7525

383:                                              ; preds = %380
  %384 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice13handleConnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8 noundef signext 10) #34, !dbg !7526
  br label %391, !dbg !7527

385:                                              ; preds = %177
  %386 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7528
  store i32 1, i32* %386, align 4, !dbg !7529, !tbaa !5601
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i32 0, i32 0), i8** %145, align 8, !dbg !7530, !tbaa !5474
  store i8 20, i8* %178, align 2, !dbg !7531, !tbaa !5409
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i32 0, i32 0)) #34, !dbg !7532
  br label %391, !dbg !7533

387:                                              ; preds = %177
  %388 = load i8, i8* %29, align 2, !dbg !7534, !tbaa !5289
  %389 = and i8 %388, -17, !dbg !7534
  store i8 %389, i8* %29, align 2, !dbg !7534, !tbaa !5289
  %390 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7535
  store i32 0, i32* %390, align 4, !dbg !7536, !tbaa !5601
  store i8 0, i8* %178, align 2, !dbg !7537, !tbaa !5409
  br label %391, !dbg !7538

391:                                              ; preds = %87, %102, %169, %175, %148, %144, %152, %177, %380, %372, %370, %379, %378, %359, %357, %365, %364, %351, %328, %291, %344, %341, %227, %229, %221, %387, %385, %383, %349, %347, %282, %268, %225, %223, %219, %217, %191, %185, %181, %28, %17, %26, %37
  ret void, !dbg !7539
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::Sim800CommDevice"* @_ZThn4_N6Cicada17Sim7x00CommDeviceD1Ev(%"class.Cicada::Sim800CommDevice"* noundef %0) unnamed_addr #3 comdat align 2 !dbg !7540 {
  %2 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 -1, i32 2, i32 0, !dbg !7541
  %3 = bitcast i8* %2 to %"class.Cicada::IPCommDevice"*, !dbg !7541
  %4 = tail call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceD2Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(284) %3) #34, !dbg !7541
  ret %"class.Cicada::Sim800CommDevice"* undef, !dbg !7541
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada17Sim7x00CommDeviceD0Ev(%"class.Cicada::Sim800CommDevice"* noundef %0) unnamed_addr #3 comdat align 2 !dbg !7542 {
  %2 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 -1, i32 2, i32 0, !dbg !7543
  %3 = bitcast i8* %2 to %"class.Cicada::Sim800CommDevice"*, !dbg !7543
  tail call void @_ZN6Cicada17Sim7x00CommDeviceD0Ev(%"class.Cicada::Sim800CommDevice"* noundef nonnull align 8 dereferenceable(284) %3) #34, !dbg !7543
  ret void, !dbg !7543
}

; Function Attrs: noinline nounwind
define dso_local void @_ZThn4_N6Cicada17Sim7x00CommDevice3runEv(%"class.Cicada::Sim800CommDevice"* noundef %0) unnamed_addr #3 align 2 !dbg !7544 {
  %2 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 -1, i32 2, i32 0, !dbg !7545
  %3 = bitcast i8* %2 to %"class.Cicada::Sim800CommDevice"*, !dbg !7545
  tail call void @_ZN6Cicada17Sim7x00CommDevice3runEv(%"class.Cicada::Sim800CommDevice"* noundef nonnull align 8 dereferenceable(284) %3), !dbg !7545
  ret void, !dbg !7545
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::Sim800CommDevice"* @_ZN6Cicada17Sim7x00CommDeviceC2ERNS_15IBufferedSerialEPhS3_y(%"class.Cicada::Sim800CommDevice"* noundef nonnull returned align 8 dereferenceable(284) %0, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4) unnamed_addr #3 align 2 !dbg !7546 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Sim800CommDevice"* %0, metadata !7548, metadata !DIExpression()), !dbg !7553
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %1, metadata !7549, metadata !DIExpression()), !dbg !7553
  call void @llvm.dbg.value(metadata i8* %2, metadata !7550, metadata !DIExpression()), !dbg !7553
  call void @llvm.dbg.value(metadata i8* %3, metadata !7551, metadata !DIExpression()), !dbg !7553
  call void @llvm.dbg.value(metadata i64 %4, metadata !7552, metadata !DIExpression()), !dbg !7553
  %6 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, !dbg !7554
  %7 = call noundef %"class.Cicada::SimCommDevice"* @_ZN6Cicada13SimCommDeviceC2ERNS_15IBufferedSerialEPhS3_y(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %6, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4) #34, !dbg !7555
  %8 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7554
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTVN6Cicada17Sim7x00CommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %8, align 8, !dbg !7554, !tbaa !2568
  %9 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !7554
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTVN6Cicada17Sim7x00CommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %9, align 4, !dbg !7554, !tbaa !2568
  %10 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 1, !dbg !7556
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.116, i32 0, i32 0), i8** %10, align 8, !dbg !7556, !tbaa !7310
  %11 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 5, !dbg !7558
  store i16 1500, i16* %11, align 2, !dbg !7561, !tbaa !6242
  ret %"class.Cicada::Sim800CommDevice"* %0, !dbg !7562
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::Sim800CommDevice"* @_ZN6Cicada17Sim7x00CommDeviceC2ERNS_15IBufferedSerialEPhS3_yy(%"class.Cicada::Sim800CommDevice"* noundef nonnull returned align 8 dereferenceable(284) %0, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4, i64 noundef %5) unnamed_addr #3 align 2 !dbg !7563 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Sim800CommDevice"* %0, metadata !7565, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %1, metadata !7566, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i8* %2, metadata !7567, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i8* %3, metadata !7568, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i64 %4, metadata !7569, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i64 %5, metadata !7570, metadata !DIExpression()), !dbg !7571
  %7 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, !dbg !7572
  %8 = call noundef %"class.Cicada::SimCommDevice"* @_ZN6Cicada13SimCommDeviceC2ERNS_15IBufferedSerialEPhS3_yy(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %7, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4, i64 noundef %5) #34, !dbg !7573
  %9 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7572
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTVN6Cicada17Sim7x00CommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8, !dbg !7572, !tbaa !2568
  %10 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !7572
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTVN6Cicada17Sim7x00CommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %10, align 4, !dbg !7572, !tbaa !2568
  %11 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 1, !dbg !7574
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.116, i32 0, i32 0), i8** %11, align 8, !dbg !7574, !tbaa !7310
  %12 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 5, !dbg !7576
  store i16 1500, i16* %12, align 2, !dbg !7579, !tbaa !6242
  ret %"class.Cicada::Sim800CommDevice"* %0, !dbg !7580
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada16Sim800CommDeviceD0Ev(%"class.Cicada::Sim800CommDevice"* noundef nonnull align 8 dereferenceable(284) %0) unnamed_addr #3 comdat align 2 !dbg !7581 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Sim800CommDevice"* %0, metadata !7584, metadata !DIExpression()), !dbg !7586
  %2 = bitcast %"class.Cicada::Sim800CommDevice"* %0 to %"class.Cicada::IPCommDevice"*, !dbg !7587
  %3 = call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceD2Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(284) %2) #34, !dbg !7587
  %4 = bitcast %"class.Cicada::Sim800CommDevice"* %0 to i8*, !dbg !7587
  call void @_ZdlPv(i8* noundef %4) #35, !dbg !7587
  ret void, !dbg !7587
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada16Sim800CommDevice3runEv(%"class.Cicada::Sim800CommDevice"* noundef nonnull align 8 dereferenceable(284) %0) unnamed_addr #4 align 2 !dbg !7588 {
  %2 = alloca [10 x i8], align 1
  %3 = alloca [9 x i8], align 1
  %4 = alloca [6 x i8], align 1
  call void @llvm.dbg.value(metadata %"class.Cicada::Sim800CommDevice"* %0, metadata !7590, metadata !DIExpression()), !dbg !7608
  %5 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, !dbg !7609
  %6 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 1, !dbg !7609
  %7 = bitcast %"class.Cicada::IBufferedSerial"** %6 to i8**, !dbg !7609
  %8 = load i8*, i8** %7, align 4, !dbg !7609, !tbaa !5299
  %9 = getelementptr inbounds i8, i8* %8, i32 4, !dbg !7609
  %10 = bitcast i8* %9 to %"class.Cicada::ICommDevice"*, !dbg !7609
  %11 = bitcast i8* %9 to i1 (%"class.Cicada::ICommDevice"*)***, !dbg !7611
  %12 = load i1 (%"class.Cicada::ICommDevice"*)**, i1 (%"class.Cicada::ICommDevice"*)*** %11, align 4, !dbg !7611, !tbaa !2568
  %13 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %12, i32 3, !dbg !7611
  %14 = load i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %13, align 4, !dbg !7611
  %15 = call noundef zeroext i1 %14(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %10) #34, !dbg !7611
  br i1 %15, label %27, label %16, !dbg !7612

16:                                               ; preds = %1
  %17 = load i8*, i8** %7, align 4, !dbg !7613, !tbaa !5299
  %18 = getelementptr inbounds i8, i8* %17, i32 4, !dbg !7613
  %19 = bitcast i8* %18 to %"class.Cicada::ICommDevice"*, !dbg !7613
  %20 = bitcast i8* %18 to i1 (%"class.Cicada::ICommDevice"*)***, !dbg !7616
  %21 = load i1 (%"class.Cicada::ICommDevice"*)**, i1 (%"class.Cicada::ICommDevice"*)*** %20, align 4, !dbg !7616, !tbaa !2568
  %22 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %21, i32 2, !dbg !7616
  %23 = load i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %22, align 4, !dbg !7616
  %24 = call noundef zeroext i1 %23(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %19) #34, !dbg !7616
  br i1 %24, label %382, label %25, !dbg !7617

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 4, !dbg !7618
  store i8 1, i8* %26, align 2, !dbg !7620, !tbaa !5409
  br label %382, !dbg !7621

27:                                               ; preds = %1
  %28 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !7622
  %29 = load i8, i8* %28, align 2, !dbg !7622, !tbaa !5289
  %30 = zext i8 %29 to i32, !dbg !7622
  %31 = and i32 %30, 64, !dbg !7624
  %32 = icmp eq i32 %31, 0, !dbg !7622
  br i1 %32, label %33, label %382, !dbg !7625

33:                                               ; preds = %27
  %34 = and i32 %30, 2, !dbg !7626
  %35 = icmp eq i32 %34, 0, !dbg !7628
  br i1 %35, label %60, label %36, !dbg !7629

36:                                               ; preds = %33
  %37 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %6, align 4, !dbg !7630, !tbaa !5299
  %38 = bitcast %"class.Cicada::IBufferedSerial"* %37 to void (%"class.Cicada::IBufferedSerial"*)***, !dbg !7632
  %39 = load void (%"class.Cicada::IBufferedSerial"*)**, void (%"class.Cicada::IBufferedSerial"*)*** %38, align 4, !dbg !7632, !tbaa !2568
  %40 = getelementptr inbounds void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %39, i32 12, !dbg !7632
  %41 = load void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %40, align 4, !dbg !7632
  call void %41(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %37) #34, !dbg !7632
  %42 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 6, !dbg !7633
  %43 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 4, !dbg !7634
  %44 = bitcast i64* %42 to i8*, !dbg !7635
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %44, i8 0, i64 24, i1 false), !dbg !7636
  store i8 20, i8* %43, align 2, !dbg !7635, !tbaa !5409
  %45 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 5, !dbg !7637
  store i8 0, i8* %45, align 1, !dbg !7638, !tbaa !7164
  %46 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 9, !dbg !7639
  store i8* null, i8** %46, align 8, !dbg !7640, !tbaa !5474
  %47 = load i8, i8* %28, align 2, !dbg !7641, !tbaa !5289
  %48 = and i8 %47, -3, !dbg !7641
  store i8 %48, i8* %28, align 2, !dbg !7641, !tbaa !5289
  %49 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7642
  %50 = load i32, i32* %49, align 4, !dbg !7642, !tbaa !5601
  %51 = icmp sgt i32 %50, 0, !dbg !7644
  br i1 %51, label %52, label %60, !dbg !7645

52:                                               ; preds = %36
  %53 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7646
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %53, i16 noundef zeroext 2000), !dbg !7646
  %54 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, !dbg !7648
  %55 = bitcast %"class.Cicada::Sim800CommDevice"* %0 to i1 (%"class.Cicada::SimCommDevice"*)***, !dbg !7648
  %56 = load i1 (%"class.Cicada::SimCommDevice"*)**, i1 (%"class.Cicada::SimCommDevice"*)*** %55, align 8, !dbg !7648, !tbaa !2568
  %57 = getelementptr inbounds i1 (%"class.Cicada::SimCommDevice"*)*, i1 (%"class.Cicada::SimCommDevice"*)** %56, i32 7, !dbg !7648
  %58 = load i1 (%"class.Cicada::SimCommDevice"*)*, i1 (%"class.Cicada::SimCommDevice"*)** %57, align 4, !dbg !7648
  %59 = call noundef zeroext i1 %58(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %54) #34, !dbg !7648
  br label %60, !dbg !7649

60:                                               ; preds = %36, %52, %33
  %61 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, !dbg !7650
  %62 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice14fillLineBufferEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %61) #34, !dbg !7650
  call void @llvm.dbg.value(metadata i1 %62, metadata !7591, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7608
  br i1 %62, label %63, label %147, !dbg !7651

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 4, !dbg !7652
  %65 = load i8, i8* %64, align 2, !dbg !7652, !tbaa !5409
  %66 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 5, !dbg !7653
  %67 = load i8, i8* %66, align 1, !dbg !7653, !tbaa !7164
  call void @_ZN6Cicada12ATCommDevice9logStatesEaa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %5, i8 noundef signext %65, i8 noundef signext %67) #34, !dbg !7654
  %68 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 2, i32 0, !dbg !7655
  %69 = call i32 @memcmp(i8* noundef nonnull dereferenceable(11) %68, i8* noundef nonnull dereferenceable(11) getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.119, i32 0, i32 0), i32 11), !dbg !7657
  %70 = icmp eq i32 %69, 0, !dbg !7658
  br i1 %70, label %77, label %71, !dbg !7659

71:                                               ; preds = %63
  %72 = call i32 @memcmp(i8* noundef nonnull dereferenceable(10) %68, i8* noundef nonnull dereferenceable(10) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.120, i32 0, i32 0), i32 10), !dbg !7660
  %73 = icmp eq i32 %72, 0, !dbg !7661
  br i1 %73, label %77, label %74, !dbg !7662

74:                                               ; preds = %71
  %75 = call i32 @memcmp(i8* noundef nonnull dereferenceable(5) %68, i8* noundef nonnull dereferenceable(5) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.121, i32 0, i32 0), i32 5), !dbg !7663
  %76 = icmp eq i32 %75, 0, !dbg !7664
  br i1 %76, label %77, label %82, !dbg !7665

77:                                               ; preds = %74, %71, %63
  %78 = load i8, i8* %28, align 2, !dbg !7666, !tbaa !5289
  %79 = or i8 %78, 2, !dbg !7666
  store i8 %79, i8* %28, align 2, !dbg !7666, !tbaa !5289
  %80 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7668
  store i32 5, i32* %80, align 4, !dbg !7669, !tbaa !5601
  %81 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 9, !dbg !7670
  store i8* null, i8** %81, align 8, !dbg !7671, !tbaa !5474
  br label %382, !dbg !7672

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 9, !dbg !7673
  %84 = load i8*, i8** %83, align 8, !dbg !7673, !tbaa !5474
  %85 = icmp eq i8* %84, null, !dbg !7673
  br i1 %85, label %91, label %86, !dbg !7675

86:                                               ; preds = %82
  %87 = call i32 @strlen(i8* noundef nonnull %84), !dbg !7676
  %88 = call i32 @strncmp(i8* noundef nonnull %68, i8* noundef nonnull %84, i32 noundef %87), !dbg !7679
  %89 = icmp eq i32 %88, 0, !dbg !7680
  br i1 %89, label %90, label %91, !dbg !7681

90:                                               ; preds = %86
  store i8* null, i8** %83, align 8, !dbg !7682, !tbaa !5474
  br label %91, !dbg !7684

91:                                               ; preds = %86, %90, %82
  %92 = load i8, i8* %66, align 1, !dbg !7685, !tbaa !7164
  %93 = sext i8 %92 to i32, !dbg !7685
  switch i32 %93, label %143 [
    i32 3, label %94
    i32 4, label %114
    i32 5, label %117
    i32 6, label %131
    i32 7, label %134
    i32 1, label %137
    i32 2, label %140
  ], !dbg !7686

94:                                               ; preds = %91
  call void @llvm.dbg.value(metadata i8 0, metadata !7597, metadata !DIExpression()), !dbg !7687
  call void @llvm.dbg.value(metadata i8 0, metadata !7592, metadata !DIExpression()), !dbg !7687
  %95 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 2, i32 0, !dbg !7688
  %96 = load i8, i8* %95, align 8, !dbg !7688, !tbaa !2624
  %97 = icmp eq i8 %96, 0, !dbg !7688
  br i1 %97, label %110, label %98, !dbg !7689

98:                                               ; preds = %94, %98
  %99 = phi i8 [ %108, %98 ], [ %96, %94 ]
  %100 = phi i8 [ %105, %98 ], [ 0, %94 ]
  %101 = phi i8 [ %102, %98 ], [ 0, %94 ]
  call void @llvm.dbg.value(metadata i8 %100, metadata !7597, metadata !DIExpression()), !dbg !7687
  call void @llvm.dbg.value(metadata i8 %101, metadata !7592, metadata !DIExpression()), !dbg !7687
  %102 = add i8 %101, 1, !dbg !7690
  call void @llvm.dbg.value(metadata i8 %102, metadata !7592, metadata !DIExpression()), !dbg !7687
  %103 = icmp eq i8 %99, 46, !dbg !7693
  %104 = zext i1 %103 to i8, !dbg !7694
  %105 = add i8 %100, %104, !dbg !7694
  call void @llvm.dbg.value(metadata i8 %105, metadata !7597, metadata !DIExpression()), !dbg !7687
  %106 = zext i8 %102 to i32, !dbg !7688
  %107 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 2, i32 %106, !dbg !7688
  %108 = load i8, i8* %107, align 1, !dbg !7688, !tbaa !2624
  %109 = icmp eq i8 %108, 0, !dbg !7688
  br i1 %109, label %110, label %98, !dbg !7689, !llvm.loop !7695

110:                                              ; preds = %98, %94
  %111 = phi i8 [ 0, %94 ], [ %105, %98 ], !dbg !7687
  %112 = icmp eq i8 %111, 3, !dbg !7697
  br i1 %112, label %113, label %143, !dbg !7699

113:                                              ; preds = %110
  store i8 0, i8* %66, align 1, !dbg !7700, !tbaa !7164
  br label %143, !dbg !7702

114:                                              ; preds = %91
  %115 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice13parseDnsReplyEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %61) #34, !dbg !7703
  br i1 %115, label %116, label %143, !dbg !7705

116:                                              ; preds = %114
  store i8 0, i8* %66, align 1, !dbg !7706, !tbaa !7164
  br label %143, !dbg !7708

117:                                              ; preds = %91
  %118 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice16handleDisconnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %5, i8 noundef signext 20) #34, !dbg !7709
  br i1 %118, label %119, label %120, !dbg !7711

119:                                              ; preds = %117
  store i8 0, i8* %66, align 1, !dbg !7712, !tbaa !7164
  br label %143, !dbg !7714

120:                                              ; preds = %117
  %121 = load i8*, i8** %83, align 8, !dbg !7715, !tbaa !5474
  %122 = icmp eq i8* %121, null, !dbg !7717
  br i1 %122, label %123, label %124, !dbg !7718

123:                                              ; preds = %120
  store i8 0, i8* %66, align 1, !dbg !7719, !tbaa !7164
  br label %143, !dbg !7721

124:                                              ; preds = %120
  %125 = call i32 @memcmp(i8* noundef nonnull dereferenceable(15) %68, i8* noundef nonnull dereferenceable(15) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.122, i32 0, i32 0), i32 15), !dbg !7722
  %126 = icmp eq i32 %125, 0, !dbg !7724
  br i1 %126, label %127, label %143, !dbg !7725

127:                                              ; preds = %124
  %128 = load i8, i8* %28, align 2, !dbg !7726, !tbaa !5289
  %129 = or i8 %128, 2, !dbg !7726
  store i8 %129, i8* %28, align 2, !dbg !7726, !tbaa !5289
  %130 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7728
  store i32 5, i32* %130, align 4, !dbg !7729, !tbaa !5601
  br label %143, !dbg !7730

131:                                              ; preds = %91
  %132 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice14parseCiprxget4Ev(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %61) #34, !dbg !7731
  br i1 %132, label %133, label %143, !dbg !7733

133:                                              ; preds = %131
  store i8 0, i8* %66, align 1, !dbg !7734, !tbaa !7164
  br label %143, !dbg !7736

134:                                              ; preds = %91
  %135 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice14parseCiprxget2Ev(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %61) #34, !dbg !7737
  br i1 %135, label %136, label %143, !dbg !7739

136:                                              ; preds = %134
  store i8 0, i8* %66, align 1, !dbg !7740, !tbaa !7164
  store i8 17, i8* %64, align 2, !dbg !7742, !tbaa !5409
  br label %143, !dbg !7743

137:                                              ; preds = %91
  %138 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice8parseCsqEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %61) #34, !dbg !7744
  br i1 %138, label %139, label %140, !dbg !7746

139:                                              ; preds = %137
  store i8 0, i8* %66, align 1, !dbg !7747, !tbaa !7164
  br label %140, !dbg !7749

140:                                              ; preds = %137, %139, %91
  %141 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice12parseIDReplyEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %61) #34, !dbg !7750
  br i1 %141, label %142, label %143, !dbg !7752

142:                                              ; preds = %140
  store i8 0, i8* %66, align 1, !dbg !7753, !tbaa !7164
  br label %143, !dbg !7755

143:                                              ; preds = %110, %113, %91, %140, %142, %134, %136, %131, %133, %119, %124, %127, %123, %114, %116
  %144 = load i8, i8* %64, align 2, !dbg !7756, !tbaa !5409
  %145 = icmp sgt i8 %144, 11, !dbg !7758
  br i1 %145, label %146, label %156, !dbg !7759

146:                                              ; preds = %143
  call void @_ZN6Cicada13SimCommDevice20checkConnectionStateEPKc(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %61, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.123, i32 0, i32 0)) #34, !dbg !7760
  br label %156, !dbg !7762

147:                                              ; preds = %60
  %148 = load i8, i8* %28, align 2, !dbg !7763, !tbaa !5289
  %149 = and i8 %148, 8, !dbg !7765
  %150 = icmp ne i8 %149, 0, !dbg !7766
  %151 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 4
  %152 = load i8, i8* %151, align 2
  %153 = icmp eq i8 %152, 17
  %154 = select i1 %150, i1 %153, i1 false, !dbg !7767
  br i1 %154, label %155, label %156, !dbg !7767

155:                                              ; preds = %147
  call void @_ZN6Cicada12ATCommDevice15flushReadBufferEv(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %5) #34, !dbg !7768
  br label %156, !dbg !7770

156:                                              ; preds = %147, %155, %143, %146
  %157 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 9, !dbg !7771
  %158 = load i8*, i8** %157, align 8, !dbg !7771, !tbaa !5474
  %159 = icmp eq i8* %158, null, !dbg !7771
  br i1 %159, label %160, label %382, !dbg !7773

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 5, !dbg !7774
  %162 = load i8, i8* %161, align 1, !dbg !7774, !tbaa !7164
  %163 = icmp eq i8 %162, 0, !dbg !7775
  br i1 %163, label %164, label %382, !dbg !7776

164:                                              ; preds = %160
  %165 = bitcast %"class.Cicada::IBufferedSerial"** %6 to %"class.Cicada::ICommDevice"**, !dbg !7777
  %166 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %165, align 4, !dbg !7777, !tbaa !5299
  %167 = bitcast %"class.Cicada::ICommDevice"* %166 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !7779
  %168 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %167, align 4, !dbg !7779, !tbaa !2568
  %169 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %168, i32 3, !dbg !7779
  %170 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %169, align 4, !dbg !7779
  %171 = call noundef i64 %170(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %166) #34, !dbg !7779
  %172 = icmp ult i64 %171, 20, !dbg !7780
  br i1 %172, label %382, label %173, !dbg !7781

173:                                              ; preds = %164
  %174 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 4, !dbg !7782
  %175 = load i8, i8* %174, align 4, !dbg !7782, !tbaa !5921
  %176 = icmp eq i8 %175, -1, !dbg !7784
  br i1 %176, label %177, label %183, !dbg !7785

177:                                              ; preds = %173
  %178 = load i8, i8* %28, align 2, !dbg !7786, !tbaa !5289
  %179 = and i8 %178, 32, !dbg !7787
  %180 = icmp eq i8 %179, 0, !dbg !7786
  br i1 %180, label %183, label %181, !dbg !7788

181:                                              ; preds = %177
  store i8 1, i8* %161, align 1, !dbg !7789, !tbaa !7164
  %182 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7791, !tbaa !2476
  store i8* %182, i8** %157, align 8, !dbg !7792, !tbaa !5474
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %5, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.124, i32 0, i32 0)) #34, !dbg !7793
  br label %382, !dbg !7794

183:                                              ; preds = %177, %173
  %184 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 1, !dbg !7795
  %185 = load i8*, i8** %184, align 8, !dbg !7795, !tbaa !7797
  %186 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice13sendIDRequestEPKc(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %61, i8* noundef %185) #34, !dbg !7799
  br i1 %186, label %187, label %189, !dbg !7800

187:                                              ; preds = %183
  store i8 2, i8* %161, align 1, !dbg !7801, !tbaa !7164
  %188 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7803, !tbaa !2476
  store i8* %188, i8** %157, align 8, !dbg !7804, !tbaa !5474
  br label %382, !dbg !7805

189:                                              ; preds = %183
  %190 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 4, !dbg !7806
  %191 = load i8, i8* %190, align 2, !dbg !7806, !tbaa !5409
  %192 = sext i8 %191 to i32, !dbg !7806
  switch i32 %192, label %382 [
    i32 0, label %193
    i32 2, label %197
    i32 3, label %203
    i32 4, label %205
    i32 6, label %207
    i32 7, label %231
    i32 8, label %233
    i32 9, label %250
    i32 10, label %254
    i32 11, label %302
    i32 12, label %307
    i32 13, label %332
    i32 14, label %333
    i32 15, label %335
    i32 21, label %378
    i32 17, label %350
    i32 18, label %364
    i32 19, label %369
    i32 20, label %376
  ], !dbg !7807

193:                                              ; preds = %189
  %194 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7808
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %194, i16 noundef zeroext 10), !dbg !7808
  %195 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7809
  store i32 0, i32* %195, align 4, !dbg !7810, !tbaa !5601
  %196 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice13handleConnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %5, i8 noundef signext 2) #34, !dbg !7811
  br label %382, !dbg !7812

197:                                              ; preds = %189
  %198 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7813
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %198, i16 noundef zeroext 10), !dbg !7813
  %199 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7814
  store i32 1, i32* %199, align 4, !dbg !7815, !tbaa !5601
  %200 = load i8, i8* %28, align 2, !dbg !7816, !tbaa !5289
  %201 = or i8 %200, 32, !dbg !7816
  store i8 %201, i8* %28, align 2, !dbg !7816, !tbaa !5289
  %202 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7817, !tbaa !2476
  store i8* %202, i8** %157, align 8, !dbg !7818, !tbaa !5474
  store i8 3, i8* %190, align 2, !dbg !7819, !tbaa !5409
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %5, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.125, i32 0, i32 0)) #34, !dbg !7820
  br label %382, !dbg !7821

203:                                              ; preds = %189
  %204 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7822, !tbaa !2476
  store i8* %204, i8** %157, align 8, !dbg !7823, !tbaa !5474
  store i8 4, i8* %190, align 2, !dbg !7824, !tbaa !5409
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %5, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.126, i32 0, i32 0)) #34, !dbg !7825
  br label %382, !dbg !7826

205:                                              ; preds = %189
  %206 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7827, !tbaa !2476
  store i8* %206, i8** %157, align 8, !dbg !7828, !tbaa !5474
  store i8 6, i8* %190, align 2, !dbg !7829, !tbaa !5409
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %5, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9.127, i32 0, i32 0)) #34, !dbg !7830
  br label %382, !dbg !7831

207:                                              ; preds = %189
  %208 = getelementptr inbounds [10 x i8], [10 x i8]* %2, i32 0, i32 0, !dbg !7832
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %208) #34, !dbg !7832
  call void @llvm.dbg.declare(metadata [10 x i8]* %2, metadata !7598, metadata !DIExpression()), !dbg !7833
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(10) %208, i8* noundef nonnull align 1 dereferenceable(10) getelementptr inbounds ([10 x i8], [10 x i8]* @__const._ZN6Cicada16Sim800CommDevice3runEv.str, i32 0, i32 0), i32 10, i1 false), !dbg !7833
  %209 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %6, align 4, !dbg !7834, !tbaa !5299
  %210 = bitcast %"class.Cicada::IBufferedSerial"* %209 to i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)***, !dbg !7835
  %211 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*** %210, align 4, !dbg !7835, !tbaa !2568
  %212 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %211, i32 6, !dbg !7835
  %213 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %212, align 4, !dbg !7835
  %214 = call noundef i64 %213(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %209, i8* noundef nonnull %208, i64 noundef 9) #34, !dbg !7835
  %215 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %6, align 4, !dbg !7836, !tbaa !5299
  %216 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 1, !dbg !7837
  %217 = load i8*, i8** %216, align 8, !dbg !7837, !tbaa !5894
  %218 = bitcast %"class.Cicada::IBufferedSerial"* %215 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7838
  %219 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %218, align 4, !dbg !7838, !tbaa !2568
  %220 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %219, i32 8, !dbg !7838
  %221 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %220, align 4, !dbg !7838
  %222 = call noundef i64 %221(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %215, i8* noundef %217) #34, !dbg !7838
  %223 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %6, align 4, !dbg !7839, !tbaa !5299
  %224 = load i8*, i8** @_ZN6Cicada12ATCommDevice12_quoteEndStrE, align 4, !dbg !7840, !tbaa !2476
  %225 = bitcast %"class.Cicada::IBufferedSerial"* %223 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7841
  %226 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %225, align 4, !dbg !7841, !tbaa !2568
  %227 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %226, i32 8, !dbg !7841
  %228 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %227, align 4, !dbg !7841
  %229 = call noundef i64 %228(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %223, i8* noundef %224) #34, !dbg !7841
  %230 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7842, !tbaa !2476
  store i8* %230, i8** %157, align 8, !dbg !7843, !tbaa !5474
  store i8 7, i8* %190, align 2, !dbg !7844, !tbaa !5409
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %208) #34, !dbg !7845
  br label %382

231:                                              ; preds = %189
  %232 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7846, !tbaa !2476
  store i8* %232, i8** %157, align 8, !dbg !7847, !tbaa !5474
  store i8 8, i8* %190, align 2, !dbg !7848, !tbaa !5409
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %5, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10.128, i32 0, i32 0)) #34, !dbg !7849
  br label %382, !dbg !7850

233:                                              ; preds = %189
  %234 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice16handleDisconnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %5, i8 noundef signext 20) #34, !dbg !7851
  br i1 %234, label %382, label %235, !dbg !7853

235:                                              ; preds = %233
  %236 = getelementptr inbounds [9 x i8], [9 x i8]* %3, i32 0, i32 0, !dbg !7854
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %236) #34, !dbg !7854
  call void @llvm.dbg.declare(metadata [9 x i8]* %3, metadata !7601, metadata !DIExpression()), !dbg !7855
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(9) %236, i8* noundef nonnull align 1 dereferenceable(9) getelementptr inbounds ([9 x i8], [9 x i8]* @__const._ZN6Cicada16Sim800CommDevice3runEv.str.11, i32 0, i32 0), i32 9, i1 false), !dbg !7855
  %237 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %6, align 4, !dbg !7856, !tbaa !5299
  %238 = bitcast %"class.Cicada::IBufferedSerial"* %237 to i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)***, !dbg !7857
  %239 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*** %238, align 4, !dbg !7857, !tbaa !2568
  %240 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %239, i32 6, !dbg !7857
  %241 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %240, align 4, !dbg !7857
  %242 = call noundef i64 %241(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %237, i8* noundef nonnull %236, i64 noundef 8) #34, !dbg !7857
  %243 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %6, align 4, !dbg !7858, !tbaa !5299
  %244 = load i8*, i8** @_ZN6Cicada12ATCommDevice11_lineEndStrE, align 4, !dbg !7859, !tbaa !2476
  %245 = bitcast %"class.Cicada::IBufferedSerial"* %243 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7860
  %246 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %245, align 4, !dbg !7860, !tbaa !2568
  %247 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %246, i32 8, !dbg !7860
  %248 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %247, align 4, !dbg !7860
  %249 = call noundef i64 %248(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %243, i8* noundef %244) #34, !dbg !7860
  store i8 3, i8* %161, align 1, !dbg !7861, !tbaa !7164
  store i8 9, i8* %190, align 2, !dbg !7862, !tbaa !5409
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %236) #34, !dbg !7863
  br label %382

250:                                              ; preds = %189
  %251 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice12sendDnsQueryEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %61) #34, !dbg !7864
  br i1 %251, label %252, label %382, !dbg !7866

252:                                              ; preds = %250
  store i8 4, i8* %161, align 1, !dbg !7867, !tbaa !7164
  %253 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7869, !tbaa !2476
  store i8* %253, i8** %157, align 8, !dbg !7870, !tbaa !5474
  store i8 10, i8* %190, align 2, !dbg !7871, !tbaa !5409
  br label %382, !dbg !7872

254:                                              ; preds = %189
  %255 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0, !dbg !7873
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %255) #34, !dbg !7873
  call void @llvm.dbg.declare(metadata [6 x i8]* %4, metadata !7606, metadata !DIExpression()), !dbg !7874
  %256 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !7875
  %257 = load i16, i16* %256, align 8, !dbg !7875, !tbaa !5688
  %258 = zext i16 %257 to i32, !dbg !7875
  %259 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* noundef nonnull %255, i32 noundef 6, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.129, i32 0, i32 0), i32 noundef %258), !dbg !7876
  %260 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %6, align 4, !dbg !7877, !tbaa !5299
  %261 = bitcast %"class.Cicada::IBufferedSerial"* %260 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7878
  %262 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %261, align 4, !dbg !7878, !tbaa !2568
  %263 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %262, i32 8, !dbg !7878
  %264 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %263, align 4, !dbg !7878
  %265 = call noundef i64 %264(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %260, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13.130, i32 0, i32 0)) #34, !dbg !7878
  %266 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7879
  %267 = load i32, i32* %266, align 8, !dbg !7879, !tbaa !5691
  %268 = icmp eq i32 %267, 0, !dbg !7881
  %269 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %6, align 4, !dbg !7882, !tbaa !5299
  %270 = bitcast %"class.Cicada::IBufferedSerial"* %269 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7882
  %271 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %270, align 4, !dbg !7882, !tbaa !2568
  %272 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %271, i32 8, !dbg !7882
  %273 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %272, align 4, !dbg !7882
  %274 = select i1 %268, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.131, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15.132, i32 0, i32 0)
  %275 = call noundef i64 %273(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %269, i8* noundef %274) #34, !dbg !7882
  %276 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %6, align 4, !dbg !7883, !tbaa !5299
  %277 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7884
  %278 = bitcast %"class.Cicada::IBufferedSerial"* %276 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7885
  %279 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %278, align 4, !dbg !7885, !tbaa !2568
  %280 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %279, i32 8, !dbg !7885
  %281 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %280, align 4, !dbg !7885
  %282 = call noundef i64 %281(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %276, i8* noundef nonnull %277) #34, !dbg !7885
  %283 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %6, align 4, !dbg !7886, !tbaa !5299
  %284 = bitcast %"class.Cicada::IBufferedSerial"* %283 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7887
  %285 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %284, align 4, !dbg !7887, !tbaa !2568
  %286 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %285, i32 8, !dbg !7887
  %287 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %286, align 4, !dbg !7887
  %288 = call noundef i64 %287(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %283, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16.133, i32 0, i32 0)) #34, !dbg !7887
  %289 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %6, align 4, !dbg !7888, !tbaa !5299
  %290 = bitcast %"class.Cicada::IBufferedSerial"* %289 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7889
  %291 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %290, align 4, !dbg !7889, !tbaa !2568
  %292 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %291, i32 8, !dbg !7889
  %293 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %292, align 4, !dbg !7889
  %294 = call noundef i64 %293(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %289, i8* noundef nonnull %255) #34, !dbg !7889
  %295 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %6, align 4, !dbg !7890, !tbaa !5299
  %296 = load i8*, i8** @_ZN6Cicada12ATCommDevice11_lineEndStrE, align 4, !dbg !7891, !tbaa !2476
  %297 = bitcast %"class.Cicada::IBufferedSerial"* %295 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7892
  %298 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %297, align 4, !dbg !7892, !tbaa !2568
  %299 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %298, i32 8, !dbg !7892
  %300 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %299, align 4, !dbg !7892
  %301 = call noundef i64 %300(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %295, i8* noundef %296) #34, !dbg !7892
  store i8 5, i8* %161, align 1, !dbg !7893, !tbaa !7164
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.134, i32 0, i32 0), i8** %157, align 8, !dbg !7894, !tbaa !5474
  store i8 11, i8* %190, align 2, !dbg !7895, !tbaa !5409
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %255) #34, !dbg !7896
  br label %382

302:                                              ; preds = %189
  %303 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7897
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %303, i16 noundef zeroext 0), !dbg !7897
  %304 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7898
  store i32 2, i32* %304, align 4, !dbg !7899, !tbaa !5601
  store i8 0, i8* %161, align 1, !dbg !7900, !tbaa !7164
  store i8 12, i8* %190, align 2, !dbg !7901, !tbaa !5409
  %305 = load i8, i8* %28, align 2, !dbg !7902, !tbaa !5289
  %306 = or i8 %305, 16, !dbg !7902
  store i8 %306, i8* %28, align 2, !dbg !7902, !tbaa !5289
  br label %382, !dbg !7903

307:                                              ; preds = %189
  %308 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7904
  %309 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %308), !dbg !7906
  %310 = icmp eq i64 %309, 0, !dbg !7904
  br i1 %310, label %322, label %311, !dbg !7907

311:                                              ; preds = %307
  %312 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice14prepareSendingEb(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %5, i1 noundef zeroext true) #34, !dbg !7908
  br i1 %312, label %313, label %382, !dbg !7911

313:                                              ; preds = %311
  %314 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %6, align 4, !dbg !7912, !tbaa !5299
  %315 = load i8*, i8** @_ZN6Cicada12ATCommDevice11_lineEndStrE, align 4, !dbg !7914, !tbaa !2476
  %316 = bitcast %"class.Cicada::IBufferedSerial"* %314 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7915
  %317 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %316, align 4, !dbg !7915, !tbaa !2568
  %318 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %317, i32 8, !dbg !7915
  %319 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %318, align 4, !dbg !7915
  %320 = call noundef i64 %319(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %314, i8* noundef %315) #34, !dbg !7915
  %321 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7916
  store i32 3, i32* %321, align 4, !dbg !7917, !tbaa !5601
  store i8 13, i8* %190, align 2, !dbg !7918, !tbaa !5409
  br label %382, !dbg !7919

322:                                              ; preds = %307
  %323 = load i8, i8* %28, align 2, !dbg !7920, !tbaa !5289
  %324 = and i8 %323, 4, !dbg !7922
  %325 = icmp eq i8 %324, 0, !dbg !7920
  br i1 %325, label %329, label %326, !dbg !7923

326:                                              ; preds = %322
  %327 = and i8 %323, -5, !dbg !7924
  store i8 %327, i8* %28, align 2, !dbg !7924, !tbaa !5289
  %328 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7926
  store i32 4, i32* %328, align 4, !dbg !7927, !tbaa !5601
  store i8 14, i8* %190, align 2, !dbg !7928, !tbaa !5409
  br label %382, !dbg !7929

329:                                              ; preds = %322
  %330 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7930
  store i32 2, i32* %330, align 4, !dbg !7932, !tbaa !5601
  %331 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice16handleDisconnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %5, i8 noundef signext 19) #34, !dbg !7933
  br label %382

332:                                              ; preds = %189
  call void @_ZN6Cicada12ATCommDevice8sendDataEv(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %5) #34, !dbg !7934
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18.135, i32 0, i32 0), i8** %157, align 8, !dbg !7935, !tbaa !5474
  store i8 12, i8* %190, align 2, !dbg !7936, !tbaa !5409
  br label %382, !dbg !7937

333:                                              ; preds = %189
  %334 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7938, !tbaa !2476
  store i8* %334, i8** %157, align 8, !dbg !7939, !tbaa !5474
  store i8 15, i8* %190, align 2, !dbg !7940, !tbaa !5409
  store i8 6, i8* %161, align 1, !dbg !7941, !tbaa !7164
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %5, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19.136, i32 0, i32 0)) #34, !dbg !7942
  br label %382, !dbg !7943

335:                                              ; preds = %189
  %336 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice16handleDisconnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %5, i8 noundef signext 19) #34, !dbg !7944
  br i1 %336, label %382, label %337, !dbg !7946

337:                                              ; preds = %335
  %338 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !7947
  %339 = load i64, i64* %338, align 8, !dbg !7947, !tbaa !5386
  %340 = icmp eq i64 %339, 0, !dbg !7949
  br i1 %340, label %344, label %341, !dbg !7950

341:                                              ; preds = %337
  %342 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice13sendCiprxget2Ev(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %61) #34, !dbg !7951
  br i1 %342, label %343, label %382, !dbg !7954

343:                                              ; preds = %341
  store i8 16, i8* %190, align 2, !dbg !7955, !tbaa !5409
  store i8 7, i8* %161, align 1, !dbg !7957, !tbaa !7164
  br label %382, !dbg !7958

344:                                              ; preds = %337
  %345 = load i8, i8* %28, align 2, !dbg !7959, !tbaa !5289
  %346 = and i8 %345, 16, !dbg !7961
  %347 = icmp eq i8 %346, 0, !dbg !7959
  br i1 %347, label %349, label %348, !dbg !7962

348:                                              ; preds = %344
  store i8 12, i8* %190, align 2, !dbg !7963, !tbaa !5409
  br label %382, !dbg !7965

349:                                              ; preds = %344
  store i8 18, i8* %190, align 2, !dbg !7966, !tbaa !5409
  br label %382

350:                                              ; preds = %189
  %351 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 8, !dbg !7968
  %352 = load i64, i64* %351, align 8, !dbg !7968, !tbaa !5374
  %353 = icmp eq i64 %352, 0, !dbg !7970
  br i1 %353, label %358, label %354, !dbg !7971

354:                                              ; preds = %350
  %355 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice7receiveEv(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %5) #34, !dbg !7972
  br i1 %355, label %356, label %382, !dbg !7975

356:                                              ; preds = %354
  store i8 0, i8* %161, align 1, !dbg !7976, !tbaa !7164
  %357 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7978, !tbaa !2476
  store i8* %357, i8** %157, align 8, !dbg !7979, !tbaa !5474
  br label %382, !dbg !7980

358:                                              ; preds = %350
  %359 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !7981
  %360 = load i64, i64* %359, align 8, !dbg !7981, !tbaa !5386
  %361 = icmp eq i64 %360, 0, !dbg !7983
  br i1 %361, label %363, label %362, !dbg !7984

362:                                              ; preds = %358
  store i8 15, i8* %190, align 2, !dbg !7985, !tbaa !5409
  br label %382, !dbg !7987

363:                                              ; preds = %358
  store i8 14, i8* %190, align 2, !dbg !7988, !tbaa !5409
  br label %382

364:                                              ; preds = %189
  %365 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7990
  store i32 1, i32* %365, align 4, !dbg !7991, !tbaa !5601
  %366 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice16handleDisconnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %5, i8 noundef signext 21) #34, !dbg !7992
  br i1 %366, label %382, label %367, !dbg !7994

367:                                              ; preds = %364
  %368 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice13handleConnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %5, i8 noundef signext 10) #34, !dbg !7995
  br label %382, !dbg !7996

369:                                              ; preds = %189
  %370 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7997
  store i32 1, i32* %370, align 4, !dbg !7998, !tbaa !5601
  %371 = load i8, i8* %28, align 2, !dbg !7999, !tbaa !5289
  %372 = and i8 %371, 16, !dbg !8001
  %373 = icmp eq i8 %372, 0, !dbg !7999
  br i1 %373, label %375, label %374, !dbg !8002

374:                                              ; preds = %369
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.137, i32 0, i32 0), i8** %157, align 8, !dbg !8003, !tbaa !5474
  store i8 20, i8* %190, align 2, !dbg !8005, !tbaa !5409
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %5, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21.138, i32 0, i32 0)) #34, !dbg !8006
  br label %382, !dbg !8007

375:                                              ; preds = %369
  store i8 20, i8* %190, align 2, !dbg !8008, !tbaa !5409
  br label %382

376:                                              ; preds = %189
  %377 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !8010
  store i32 1, i32* %377, align 4, !dbg !8011, !tbaa !5601
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22.139, i32 0, i32 0), i8** %157, align 8, !dbg !8012, !tbaa !5474
  store i8 21, i8* %190, align 2, !dbg !8013, !tbaa !5409
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %5, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23.140, i32 0, i32 0)) #34, !dbg !8014
  br label %382, !dbg !8015

378:                                              ; preds = %189
  %379 = load i8, i8* %28, align 2, !dbg !8016, !tbaa !5289
  %380 = and i8 %379, -17, !dbg !8016
  store i8 %380, i8* %28, align 2, !dbg !8016, !tbaa !5289
  %381 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !8017
  store i32 0, i32* %381, align 4, !dbg !8018, !tbaa !5601
  store i8 0, i8* %190, align 2, !dbg !8019, !tbaa !5409
  br label %382, !dbg !8020

382:                                              ; preds = %77, %181, %187, %160, %156, %164, %189, %374, %375, %364, %356, %354, %363, %362, %343, %341, %349, %348, %335, %313, %311, %329, %326, %250, %252, %233, %378, %376, %367, %333, %332, %302, %254, %235, %231, %207, %205, %203, %197, %193, %27, %16, %25
  ret void, !dbg !8021
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::Sim800CommDevice"* @_ZThn4_N6Cicada16Sim800CommDeviceD1Ev(%"class.Cicada::Sim800CommDevice"* noundef %0) unnamed_addr #3 comdat align 2 !dbg !8022 {
  %2 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 -1, i32 2, i32 0, !dbg !8023
  %3 = bitcast i8* %2 to %"class.Cicada::IPCommDevice"*, !dbg !8023
  %4 = tail call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceD2Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(284) %3) #34, !dbg !8023
  ret %"class.Cicada::Sim800CommDevice"* undef, !dbg !8023
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada16Sim800CommDeviceD0Ev(%"class.Cicada::Sim800CommDevice"* noundef %0) unnamed_addr #3 comdat align 2 !dbg !8024 {
  %2 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 -1, i32 2, i32 0, !dbg !8025
  %3 = bitcast i8* %2 to %"class.Cicada::Sim800CommDevice"*, !dbg !8025
  tail call void @_ZN6Cicada16Sim800CommDeviceD0Ev(%"class.Cicada::Sim800CommDevice"* noundef nonnull align 8 dereferenceable(284) %3) #34, !dbg !8025
  ret void, !dbg !8025
}

; Function Attrs: noinline nounwind
define dso_local void @_ZThn4_N6Cicada16Sim800CommDevice3runEv(%"class.Cicada::Sim800CommDevice"* noundef %0) unnamed_addr #3 align 2 !dbg !8026 {
  %2 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 -1, i32 2, i32 0, !dbg !8027
  %3 = bitcast i8* %2 to %"class.Cicada::Sim800CommDevice"*, !dbg !8027
  tail call void @_ZN6Cicada16Sim800CommDevice3runEv(%"class.Cicada::Sim800CommDevice"* noundef nonnull align 8 dereferenceable(284) %3), !dbg !8027
  ret void, !dbg !8027
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::Sim800CommDevice"* @_ZN6Cicada16Sim800CommDeviceC2ERNS_15IBufferedSerialEPhS3_y(%"class.Cicada::Sim800CommDevice"* noundef nonnull returned align 8 dereferenceable(284) %0, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4) unnamed_addr #3 align 2 !dbg !8028 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Sim800CommDevice"* %0, metadata !8030, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %1, metadata !8031, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i8* %2, metadata !8032, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i8* %3, metadata !8033, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i64 %4, metadata !8034, metadata !DIExpression()), !dbg !8035
  %6 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, !dbg !8036
  %7 = call noundef %"class.Cicada::SimCommDevice"* @_ZN6Cicada13SimCommDeviceC2ERNS_15IBufferedSerialEPhS3_y(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %6, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4) #34, !dbg !8037
  %8 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8036
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTVN6Cicada16Sim800CommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %8, align 8, !dbg !8036, !tbaa !2568
  %9 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !8036
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTVN6Cicada16Sim800CommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %9, align 4, !dbg !8036, !tbaa !2568
  %10 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 1, !dbg !8038
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.141, i32 0, i32 0), i8** %10, align 8, !dbg !8038, !tbaa !7797
  %11 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 5, !dbg !8040
  store i16 1460, i16* %11, align 2, !dbg !8043, !tbaa !6242
  ret %"class.Cicada::Sim800CommDevice"* %0, !dbg !8044
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::Sim800CommDevice"* @_ZN6Cicada16Sim800CommDeviceC2ERNS_15IBufferedSerialEPhS3_yy(%"class.Cicada::Sim800CommDevice"* noundef nonnull returned align 8 dereferenceable(284) %0, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4, i64 noundef %5) unnamed_addr #3 align 2 !dbg !8045 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Sim800CommDevice"* %0, metadata !8047, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %1, metadata !8048, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i8* %2, metadata !8049, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i8* %3, metadata !8050, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i64 %4, metadata !8051, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i64 %5, metadata !8052, metadata !DIExpression()), !dbg !8053
  %7 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, !dbg !8054
  %8 = call noundef %"class.Cicada::SimCommDevice"* @_ZN6Cicada13SimCommDeviceC2ERNS_15IBufferedSerialEPhS3_yy(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %7, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4, i64 noundef %5) #34, !dbg !8055
  %9 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8054
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTVN6Cicada16Sim800CommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8, !dbg !8054, !tbaa !2568
  %10 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !8054
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTVN6Cicada16Sim800CommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %10, align 4, !dbg !8054, !tbaa !2568
  %11 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 1, !dbg !8056
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.141, i32 0, i32 0), i8** %11, align 8, !dbg !8056, !tbaa !7797
  %12 = getelementptr inbounds %"class.Cicada::Sim800CommDevice", %"class.Cicada::Sim800CommDevice"* %0, i32 0, i32 0, i32 5, !dbg !8058
  store i16 1460, i16* %12, align 2, !dbg !8061, !tbaa !6242
  ret %"class.Cicada::Sim800CommDevice"* %0, !dbg !8062
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada15EspressifDeviceD0Ev(%"class.Cicada::EspressifDevice"* noundef nonnull align 8 dereferenceable(258) %0) unnamed_addr #3 comdat align 2 !dbg !8063 {
  call void @llvm.dbg.value(metadata %"class.Cicada::EspressifDevice"* %0, metadata !8065, metadata !DIExpression()), !dbg !8067
  %2 = bitcast %"class.Cicada::EspressifDevice"* %0 to %"class.Cicada::IPCommDevice"*, !dbg !8068
  %3 = call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceD2Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(258) %2) #34, !dbg !8068
  %4 = bitcast %"class.Cicada::EspressifDevice"* %0 to i8*, !dbg !8068
  call void @_ZdlPv(i8* noundef %4) #35, !dbg !8068
  ret void, !dbg !8069
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada15EspressifDevice7connectEv(%"class.Cicada::EspressifDevice"* noundef nonnull align 8 dereferenceable(258) %0) unnamed_addr #4 align 2 !dbg !8070 {
  call void @llvm.dbg.value(metadata %"class.Cicada::EspressifDevice"* %0, metadata !8072, metadata !DIExpression()), !dbg !8073
  %2 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 1, !dbg !8074
  %3 = load i8*, i8** %2, align 8, !dbg !8074, !tbaa !8076
  %4 = icmp eq i8* %3, null, !dbg !8078
  %5 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 4
  %7 = icmp eq i8* %6, null
  %8 = select i1 %4, i1 true, i1 %7, !dbg !8079
  br i1 %8, label %15, label %9, !dbg !8079

9:                                                ; preds = %1
  %10 = load i8, i8* %3, align 1, !dbg !8080
  %11 = icmp eq i8 %10, 0, !dbg !8081
  br i1 %11, label %15, label %12, !dbg !8082

12:                                               ; preds = %9
  %13 = bitcast %"class.Cicada::EspressifDevice"* %0 to %"class.Cicada::IPCommDevice"*, !dbg !8083
  %14 = call noundef zeroext i1 @_ZN6Cicada12IPCommDevice7connectEv(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %13) #34, !dbg !8083
  br label %15, !dbg !8084

15:                                               ; preds = %1, %9, %12
  %16 = phi i1 [ %14, %12 ], [ false, %9 ], [ false, %1 ], !dbg !8073
  ret i1 %16, !dbg !8085
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada15EspressifDevice11resetStatesEv(%"class.Cicada::EspressifDevice"* noundef nonnull align 8 dereferenceable(258) %0) unnamed_addr #4 align 2 !dbg !8086 {
  call void @llvm.dbg.value(metadata %"class.Cicada::EspressifDevice"* %0, metadata !8088, metadata !DIExpression()), !dbg !8089
  %2 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 1, !dbg !8090
  %3 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %2, align 4, !dbg !8090, !tbaa !5299
  %4 = bitcast %"class.Cicada::IBufferedSerial"* %3 to void (%"class.Cicada::IBufferedSerial"*)***, !dbg !8091
  %5 = load void (%"class.Cicada::IBufferedSerial"*)**, void (%"class.Cicada::IBufferedSerial"*)*** %4, align 4, !dbg !8091, !tbaa !2568
  %6 = getelementptr inbounds void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %5, i32 12, !dbg !8091
  %7 = load void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %6, align 4, !dbg !8091
  call void %7(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %3) #34, !dbg !8091
  %8 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 2, !dbg !8092
  call void @_ZN6Cicada14CircularBufferIhE5flushEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %8), !dbg !8093
  %9 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 3, !dbg !8094
  call void @_ZN6Cicada14CircularBufferIhE5flushEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %9), !dbg !8095
  %10 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 3, !dbg !8096
  %11 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 8, !dbg !8097
  store i32 0, i32* %11, align 4, !dbg !8098, !tbaa !5601
  %12 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 9, !dbg !8099
  store i8* null, i8** %12, align 8, !dbg !8100, !tbaa !5474
  %13 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !8101
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(27) %10, i8 0, i64 27, i1 false), !dbg !8102
  store i8 32, i8* %13, align 2, !dbg !8103, !tbaa !5289
  ret void, !dbg !8104
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local void @_ZN6Cicada15EspressifDevice7setSSIDEPKc(%"class.Cicada::EspressifDevice"* nocapture noundef nonnull writeonly align 8 dereferenceable(258) %0, i8* noundef %1) unnamed_addr #13 align 2 !dbg !8105 {
  call void @llvm.dbg.value(metadata %"class.Cicada::EspressifDevice"* %0, metadata !8107, metadata !DIExpression()), !dbg !8109
  call void @llvm.dbg.value(metadata i8* %1, metadata !8108, metadata !DIExpression()), !dbg !8109
  %3 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 1, !dbg !8110
  store i8* %1, i8** %3, align 8, !dbg !8111, !tbaa !8076
  ret void, !dbg !8112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local void @_ZN6Cicada15EspressifDevice11setPasswordEPKc(%"class.Cicada::EspressifDevice"* nocapture noundef nonnull writeonly align 8 dereferenceable(258) %0, i8* noundef %1) unnamed_addr #13 align 2 !dbg !8113 {
  call void @llvm.dbg.value(metadata %"class.Cicada::EspressifDevice"* %0, metadata !8115, metadata !DIExpression()), !dbg !8117
  call void @llvm.dbg.value(metadata i8* %1, metadata !8116, metadata !DIExpression()), !dbg !8117
  %3 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 2, !dbg !8118
  store i8* %1, i8** %3, align 4, !dbg !8119, !tbaa !8120
  ret void, !dbg !8121
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada15EspressifDevice3runEv(%"class.Cicada::EspressifDevice"* noundef nonnull align 8 dereferenceable(258) %0) unnamed_addr #4 align 2 !dbg !8122 {
  %2 = alloca i32, align 4
  %3 = alloca [6 x i8], align 1
  call void @llvm.dbg.value(metadata %"class.Cicada::EspressifDevice"* %0, metadata !8124, metadata !DIExpression()), !dbg !8141
  %4 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, !dbg !8142
  %5 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 1, !dbg !8142
  %6 = bitcast %"class.Cicada::IBufferedSerial"** %5 to i8**, !dbg !8142
  %7 = load i8*, i8** %6, align 4, !dbg !8142, !tbaa !5299
  %8 = getelementptr inbounds i8, i8* %7, i32 4, !dbg !8142
  %9 = bitcast i8* %8 to %"class.Cicada::ICommDevice"*, !dbg !8142
  %10 = bitcast i8* %8 to i1 (%"class.Cicada::ICommDevice"*)***, !dbg !8144
  %11 = load i1 (%"class.Cicada::ICommDevice"*)**, i1 (%"class.Cicada::ICommDevice"*)*** %10, align 4, !dbg !8144, !tbaa !2568
  %12 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %11, i32 3, !dbg !8144
  %13 = load i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %12, align 4, !dbg !8144
  %14 = call noundef zeroext i1 %13(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %9) #34, !dbg !8144
  br i1 %14, label %26, label %15, !dbg !8145

15:                                               ; preds = %1
  %16 = load i8*, i8** %6, align 4, !dbg !8146, !tbaa !5299
  %17 = getelementptr inbounds i8, i8* %16, i32 4, !dbg !8146
  %18 = bitcast i8* %17 to %"class.Cicada::ICommDevice"*, !dbg !8146
  %19 = bitcast i8* %17 to i1 (%"class.Cicada::ICommDevice"*)***, !dbg !8149
  %20 = load i1 (%"class.Cicada::ICommDevice"*)**, i1 (%"class.Cicada::ICommDevice"*)*** %19, align 4, !dbg !8149, !tbaa !2568
  %21 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %20, i32 2, !dbg !8149
  %22 = load i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %21, align 4, !dbg !8149
  %23 = call noundef zeroext i1 %22(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %18) #34, !dbg !8149
  br i1 %23, label %426, label %24, !dbg !8150

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 4, !dbg !8151
  store i8 1, i8* %25, align 2, !dbg !8153, !tbaa !5409
  br label %426, !dbg !8154

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !8155
  %28 = load i8, i8* %27, align 2, !dbg !8155, !tbaa !5289
  %29 = and i8 %28, 2, !dbg !8157
  %30 = icmp eq i8 %29, 0, !dbg !8155
  br i1 %30, label %66, label %31, !dbg !8158

31:                                               ; preds = %26
  %32 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %5, align 4, !dbg !8159, !tbaa !5299
  %33 = bitcast %"class.Cicada::IBufferedSerial"* %32 to void (%"class.Cicada::IBufferedSerial"*)***, !dbg !8161
  %34 = load void (%"class.Cicada::IBufferedSerial"*)**, void (%"class.Cicada::IBufferedSerial"*)*** %33, align 4, !dbg !8161, !tbaa !2568
  %35 = getelementptr inbounds void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %34, i32 12, !dbg !8161
  %36 = load void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %35, align 4, !dbg !8161
  call void %36(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %32) #34, !dbg !8161
  %37 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 4, !dbg !8162
  %38 = load i8, i8* %37, align 2, !dbg !8162, !tbaa !5409
  %39 = add i8 %38, -2, !dbg !8164
  %40 = icmp ult i8 %39, 13, !dbg !8164
  br i1 %40, label %41, label %45, !dbg !8164

41:                                               ; preds = %31
  %42 = load i8, i8* %27, align 2, !dbg !8165, !tbaa !5289
  %43 = and i8 %42, 8, !dbg !8166
  %44 = icmp eq i8 %43, 0, !dbg !8167
  br i1 %44, label %46, label %45, !dbg !8168

45:                                               ; preds = %41, %31
  br label %46

46:                                               ; preds = %41, %45
  %47 = phi i8 [ 0, %45 ], [ 2, %41 ], !dbg !8169
  store i8 %47, i8* %37, align 2, !dbg !8169, !tbaa !5409
  store i8 32, i8* %27, align 2, !dbg !8170, !tbaa !5289
  %48 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 6, !dbg !8171
  %49 = bitcast i64* %48 to i8*, !dbg !8172
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %49, i8 0, i64 24, i1 false), !dbg !8173
  %50 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %5, align 4, !dbg !8172, !tbaa !5299
  %51 = bitcast %"class.Cicada::IBufferedSerial"* %50 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !8174
  %52 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %51, align 4, !dbg !8174, !tbaa !2568
  %53 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %52, i32 8, !dbg !8174
  %54 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %53, align 4, !dbg !8174
  %55 = call noundef i64 %54(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %50, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.144, i32 0, i32 0)) #34, !dbg !8174
  %56 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %5, align 4, !dbg !8175, !tbaa !5299
  %57 = load i8*, i8** @_ZN6Cicada12ATCommDevice11_lineEndStrE, align 4, !dbg !8176, !tbaa !2476
  %58 = bitcast %"class.Cicada::IBufferedSerial"* %56 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !8177
  %59 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %58, align 4, !dbg !8177, !tbaa !2568
  %60 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %59, i32 8, !dbg !8177
  %61 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %60, align 4, !dbg !8177
  %62 = call noundef i64 %61(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %56, i8* noundef %57) #34, !dbg !8177
  %63 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 5, !dbg !8178
  store i8 0, i8* %63, align 1, !dbg !8179, !tbaa !7164
  %64 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 9, !dbg !8180
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7.145, i32 0, i32 0), i8** %64, align 8, !dbg !8181, !tbaa !5474
  %65 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 1, !dbg !8182
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %65, i16 noundef zeroext 10), !dbg !8182
  br label %426, !dbg !8183

66:                                               ; preds = %26
  %67 = call noundef zeroext i1 @_ZN6Cicada15EspressifDevice14fillLineBufferEv(%"class.Cicada::EspressifDevice"* noundef nonnull align 8 dereferenceable(258) %0), !dbg !8184
  call void @llvm.dbg.value(metadata i1 %67, metadata !8125, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8141
  br i1 %67, label %68, label %167, !dbg !8185

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 4, !dbg !8186
  %70 = load i8, i8* %69, align 2, !dbg !8186, !tbaa !5409
  %71 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 5, !dbg !8187
  %72 = load i8, i8* %71, align 1, !dbg !8187, !tbaa !7164
  call void @_ZN6Cicada12ATCommDevice9logStatesEaa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %4, i8 noundef signext %70, i8 noundef signext %72) #34, !dbg !8188
  %73 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !8189
  %74 = call i32 @memcmp(i8* noundef nonnull dereferenceable(5) %73, i8* noundef nonnull dereferenceable(5) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8.146, i32 0, i32 0), i32 5), !dbg !8191
  %75 = icmp eq i32 %74, 0, !dbg !8192
  %76 = bitcast i8* %73 to i32*
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %77, 1279869254
  %79 = select i1 %75, i1 true, i1 %78, !dbg !8193
  br i1 %79, label %86, label %80, !dbg !8193

80:                                               ; preds = %68
  %81 = load i8, i8* %69, align 2, !dbg !8194, !tbaa !5409
  %82 = icmp eq i8 %81, 17, !dbg !8195
  br i1 %82, label %99, label %83, !dbg !8195

83:                                               ; preds = %80
  %84 = call i32 @memcmp(i8* noundef nonnull dereferenceable(9) %73, i8* noundef nonnull dereferenceable(9) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10.147, i32 0, i32 0), i32 9), !dbg !8196
  %85 = icmp eq i32 %84, 0, !dbg !8197
  br i1 %85, label %86, label %91, !dbg !8198

86:                                               ; preds = %83, %68
  %87 = load i8, i8* %27, align 2, !dbg !8199, !tbaa !5289
  %88 = or i8 %87, 2, !dbg !8199
  store i8 %88, i8* %27, align 2, !dbg !8199, !tbaa !5289
  %89 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 8, !dbg !8201
  store i32 5, i32* %89, align 4, !dbg !8202, !tbaa !5601
  %90 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 9, !dbg !8203
  store i8* null, i8** %90, align 8, !dbg !8204, !tbaa !5474
  br label %426, !dbg !8205

91:                                               ; preds = %83
  %92 = icmp eq i8 %81, 10, !dbg !8206
  br i1 %92, label %93, label %99, !dbg !8208

93:                                               ; preds = %91
  %94 = call i32 @memcmp(i8* noundef nonnull dereferenceable(9) %73, i8* noundef nonnull dereferenceable(9) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11.148, i32 0, i32 0), i32 9), !dbg !8209
  %95 = icmp eq i32 %94, 0, !dbg !8210
  br i1 %95, label %96, label %99, !dbg !8211

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 8, !dbg !8212
  store i32 5, i32* %97, align 4, !dbg !8214, !tbaa !5601
  store i8 10, i8* %69, align 2, !dbg !8215, !tbaa !5409
  %98 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 9, !dbg !8216
  store i8* null, i8** %98, align 8, !dbg !8217, !tbaa !5474
  br label %99, !dbg !8218

99:                                               ; preds = %80, %91, %93, %96
  %100 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 9, !dbg !8219
  %101 = load i8*, i8** %100, align 8, !dbg !8219, !tbaa !5474
  %102 = icmp eq i8* %101, null, !dbg !8219
  br i1 %102, label %108, label %103, !dbg !8221

103:                                              ; preds = %99
  %104 = call i32 @strlen(i8* noundef nonnull %101), !dbg !8222
  %105 = call i32 @strncmp(i8* noundef nonnull %73, i8* noundef nonnull %101, i32 noundef %104), !dbg !8225
  %106 = icmp eq i32 %105, 0, !dbg !8226
  br i1 %106, label %107, label %108, !dbg !8227

107:                                              ; preds = %103
  store i8* null, i8** %100, align 8, !dbg !8228, !tbaa !5474
  br label %108, !dbg !8230

108:                                              ; preds = %103, %107, %99
  %109 = load i8, i8* %71, align 1, !dbg !8231, !tbaa !7164
  %110 = sext i8 %109 to i32, !dbg !8231
  switch i32 %110, label %135 [
    i32 2, label %111
    i32 3, label %114
  ], !dbg !8232

111:                                              ; preds = %108
  %112 = call noundef zeroext i1 @_ZN6Cicada15EspressifDevice16parseCiprecvdataEv(%"class.Cicada::EspressifDevice"* noundef nonnull align 8 dereferenceable(258) %0), !dbg !8233
  br i1 %112, label %113, label %135, !dbg !8235

113:                                              ; preds = %111
  store i8 0, i8* %71, align 1, !dbg !8236, !tbaa !7164
  store i8 14, i8* %69, align 2, !dbg !8238, !tbaa !5409
  br label %135, !dbg !8239

114:                                              ; preds = %108
  %115 = call i32 @memcmp(i8* noundef nonnull dereferenceable(12) %73, i8* noundef nonnull dereferenceable(12) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.149, i32 0, i32 0), i32 12), !dbg !8240
  %116 = icmp eq i32 %115, 0, !dbg !8241
  br i1 %116, label %117, label %135, !dbg !8242

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 2, i32 12, !dbg !8243
  call void @llvm.dbg.value(metadata i8* %118, metadata !8126, metadata !DIExpression()), !dbg !8244
  call void @llvm.dbg.value(metadata i32 0, metadata !8132, metadata !DIExpression()), !dbg !8244
  %119 = load i8, i8* %118, align 4, !dbg !8245, !tbaa !2624
  %120 = icmp eq i8 %119, 34, !dbg !8246
  br i1 %120, label %132, label %121, !dbg !8247

121:                                              ; preds = %117, %121
  %122 = phi i8 [ %128, %121 ], [ %119, %117 ]
  %123 = phi i32 [ %126, %121 ], [ 0, %117 ]
  %124 = phi i8* [ %125, %121 ], [ %118, %117 ]
  call void @llvm.dbg.value(metadata i32 %123, metadata !8132, metadata !DIExpression()), !dbg !8244
  call void @llvm.dbg.value(metadata i8* %124, metadata !8126, metadata !DIExpression()), !dbg !8244
  %125 = getelementptr inbounds i8, i8* %124, i32 1, !dbg !8248
  call void @llvm.dbg.value(metadata i8* %125, metadata !8126, metadata !DIExpression()), !dbg !8244
  %126 = add nuw nsw i32 %123, 1, !dbg !8250
  call void @llvm.dbg.value(metadata i32 %126, metadata !8132, metadata !DIExpression()), !dbg !8244
  %127 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 3, i32 %123, !dbg !8251
  store i8 %122, i8* %127, align 1, !dbg !8252, !tbaa !2624
  %128 = load i8, i8* %125, align 1, !dbg !8245, !tbaa !2624
  %129 = icmp ne i8 %128, 34, !dbg !8246
  %130 = icmp ult i32 %123, 16, !dbg !8253
  %131 = select i1 %129, i1 %130, i1 false, !dbg !8253
  br i1 %131, label %121, label %132, !dbg !8247, !llvm.loop !8254

132:                                              ; preds = %121, %117
  %133 = phi i32 [ 0, %117 ], [ %126, %121 ], !dbg !8244
  %134 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 3, i32 %133, !dbg !8256
  store i8 0, i8* %134, align 1, !dbg !8257, !tbaa !2624
  store i8 0, i8* %71, align 1, !dbg !8258, !tbaa !7164
  br label %135, !dbg !8259

135:                                              ; preds = %108, %114, %132, %111, %113
  %136 = load i8, i8* %69, align 2, !dbg !8260, !tbaa !5409
  %137 = icmp sgt i8 %136, 9, !dbg !8261
  br i1 %137, label %138, label %176, !dbg !8262

138:                                              ; preds = %135
  %139 = load i32, i32* %76, align 8, !dbg !8263
  %140 = icmp eq i32 %139, 1146112299, !dbg !8263
  br i1 %140, label %141, label %161, !dbg !8264

141:                                              ; preds = %138
  %142 = bitcast i32* %2 to i8*, !dbg !8265
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %142) #34, !dbg !8265
  %143 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 2, i32 5, !dbg !8266
  call void @llvm.dbg.value(metadata i32* %2, metadata !8133, metadata !DIExpression(DW_OP_deref)), !dbg !8267
  %144 = call i32 (i8*, i8*, ...) @sscanf(i8* noundef nonnull %143, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.150, i32 0, i32 0), i32* noundef nonnull %2), !dbg !8268
  %145 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 4, !dbg !8269
  %146 = load i32, i32* %145, align 8, !dbg !8269, !tbaa !5691
  %147 = icmp eq i32 %146, 1, !dbg !8271
  %148 = load i32, i32* %2, align 4, !dbg !8272, !tbaa !6095
  call void @llvm.dbg.value(metadata i32 %148, metadata !8133, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i32 %148, metadata !8133, metadata !DIExpression()), !dbg !8267
  %149 = sext i32 %148 to i64, !dbg !8272
  br i1 %147, label %150, label %152, !dbg !8273

150:                                              ; preds = %141
  %151 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 7, !dbg !8274
  store i64 %149, i64* %151, align 8, !dbg !8276, !tbaa !5386
  br label %158, !dbg !8277

152:                                              ; preds = %141
  %153 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 8, !dbg !8278
  %154 = load i64, i64* %153, align 8, !dbg !8280, !tbaa !5374
  %155 = add i64 %154, %149, !dbg !8280
  store i64 %155, i64* %153, align 8, !dbg !8280, !tbaa !5374
  %156 = load i8, i8* %27, align 2, !dbg !8281, !tbaa !5289
  %157 = and i8 %156, -33, !dbg !8281
  store i8 %157, i8* %27, align 2, !dbg !8281, !tbaa !5289
  br label %158

158:                                              ; preds = %152, %150
  %159 = load i8, i8* %27, align 2, !dbg !8282, !tbaa !5289
  %160 = or i8 %159, 4, !dbg !8282
  store i8 %160, i8* %27, align 2, !dbg !8282, !tbaa !5289
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %142) #34, !dbg !8283
  br label %176, !dbg !8284

161:                                              ; preds = %138
  %162 = call i32 @memcmp(i8* noundef nonnull dereferenceable(6) %73, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14.151, i32 0, i32 0), i32 6), !dbg !8285
  %163 = icmp eq i32 %162, 0, !dbg !8287
  br i1 %163, label %164, label %176, !dbg !8288

164:                                              ; preds = %161
  %165 = load i8, i8* %27, align 2, !dbg !8289, !tbaa !5289
  %166 = and i8 %165, -17, !dbg !8289
  store i8 %166, i8* %27, align 2, !dbg !8289, !tbaa !5289
  br label %176, !dbg !8291

167:                                              ; preds = %66
  %168 = load i8, i8* %27, align 2, !dbg !8292, !tbaa !5289
  %169 = and i8 %168, 8, !dbg !8294
  %170 = icmp ne i8 %169, 0, !dbg !8295
  %171 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 4
  %172 = load i8, i8* %171, align 2
  %173 = icmp eq i8 %172, 14
  %174 = select i1 %170, i1 %173, i1 false, !dbg !8296
  br i1 %174, label %175, label %176, !dbg !8296

175:                                              ; preds = %167
  call void @_ZN6Cicada12ATCommDevice15flushReadBufferEv(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %4) #34, !dbg !8297
  br label %176, !dbg !8299

176:                                              ; preds = %167, %175, %135, %161, %164, %158
  %177 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 9, !dbg !8300
  %178 = load i8*, i8** %177, align 8, !dbg !8300, !tbaa !5474
  %179 = icmp eq i8* %178, null, !dbg !8300
  br i1 %179, label %180, label %426, !dbg !8302

180:                                              ; preds = %176
  %181 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 5, !dbg !8303
  %182 = load i8, i8* %181, align 1, !dbg !8303, !tbaa !7164
  %183 = icmp eq i8 %182, 0, !dbg !8304
  br i1 %183, label %184, label %426, !dbg !8305

184:                                              ; preds = %180
  %185 = bitcast %"class.Cicada::IBufferedSerial"** %5 to %"class.Cicada::ICommDevice"**, !dbg !8306
  %186 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %185, align 4, !dbg !8306, !tbaa !5299
  %187 = bitcast %"class.Cicada::ICommDevice"* %186 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !8308
  %188 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %187, align 4, !dbg !8308, !tbaa !2568
  %189 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %188, i32 3, !dbg !8308
  %190 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %189, align 4, !dbg !8308
  %191 = call noundef i64 %190(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %186) #34, !dbg !8308
  %192 = icmp ult i64 %191, 20, !dbg !8309
  br i1 %192, label %426, label %193, !dbg !8310

193:                                              ; preds = %184
  %194 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 3, i32 1, !dbg !8311
  %195 = load i8, i8* %194, align 1, !dbg !8311, !tbaa !2624
  %196 = icmp eq i8 %195, -1, !dbg !8313
  %197 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 3, i32 0
  %198 = load i8, i8* %197, align 8
  %199 = icmp eq i8 %198, 0
  %200 = select i1 %196, i1 %199, i1 false, !dbg !8314
  br i1 %200, label %201, label %207, !dbg !8314

201:                                              ; preds = %193
  %202 = load i8, i8* %27, align 2, !dbg !8315, !tbaa !5289
  %203 = and i8 %202, 32, !dbg !8316
  %204 = icmp eq i8 %203, 0, !dbg !8315
  br i1 %204, label %207, label %205, !dbg !8317

205:                                              ; preds = %201
  store i8 0, i8* %194, align 1, !dbg !8318, !tbaa !2624
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %4, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15.152, i32 0, i32 0)) #34, !dbg !8320
  store i8 3, i8* %181, align 1, !dbg !8321, !tbaa !7164
  %206 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !8322, !tbaa !2476
  store i8* %206, i8** %177, align 8, !dbg !8323, !tbaa !5474
  br label %426, !dbg !8324

207:                                              ; preds = %201, %193
  %208 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 4, !dbg !8325
  %209 = load i8, i8* %208, align 2, !dbg !8325, !tbaa !5409
  %210 = sext i8 %209 to i32, !dbg !8325
  switch i32 %210, label %426 [
    i32 0, label %211
    i32 2, label %215
    i32 3, label %221
    i32 4, label %236
    i32 6, label %277
    i32 5, label %279
    i32 7, label %286
    i32 8, label %288
    i32 9, label %338
    i32 10, label %343
    i32 11, label %380
    i32 12, label %381
    i32 17, label %422
    i32 14, label %393
    i32 15, label %411
    i32 16, label %420
  ], !dbg !8326

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 1, !dbg !8327
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %212, i16 noundef zeroext 10), !dbg !8327
  %213 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 8, !dbg !8328
  store i32 0, i32* %213, align 4, !dbg !8329, !tbaa !5601
  %214 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice13handleConnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %4, i8 noundef signext 2) #34, !dbg !8330
  br label %426, !dbg !8331

215:                                              ; preds = %207
  %216 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 1, !dbg !8332
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %216, i16 noundef zeroext 10), !dbg !8332
  %217 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 8, !dbg !8333
  store i32 1, i32* %217, align 4, !dbg !8334, !tbaa !5601
  %218 = load i8, i8* %27, align 2, !dbg !8335, !tbaa !5289
  %219 = or i8 %218, 32, !dbg !8335
  store i8 %219, i8* %27, align 2, !dbg !8335, !tbaa !5289
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %4, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.153, i32 0, i32 0)) #34, !dbg !8336
  %220 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !8337, !tbaa !2476
  store i8* %220, i8** %177, align 8, !dbg !8338, !tbaa !5474
  store i8 3, i8* %208, align 2, !dbg !8339, !tbaa !5409
  br label %426, !dbg !8340

221:                                              ; preds = %207
  %222 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %5, align 4, !dbg !8341, !tbaa !5299
  %223 = bitcast %"class.Cicada::IBufferedSerial"* %222 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !8342
  %224 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %223, align 4, !dbg !8342, !tbaa !2568
  %225 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %224, i32 8, !dbg !8342
  %226 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %225, align 4, !dbg !8342
  %227 = call noundef i64 %226(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %222, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17.154, i32 0, i32 0)) #34, !dbg !8342
  %228 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %5, align 4, !dbg !8343, !tbaa !5299
  %229 = load i8*, i8** @_ZN6Cicada12ATCommDevice11_lineEndStrE, align 4, !dbg !8344, !tbaa !2476
  %230 = bitcast %"class.Cicada::IBufferedSerial"* %228 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !8345
  %231 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %230, align 4, !dbg !8345, !tbaa !2568
  %232 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %231, i32 8, !dbg !8345
  %233 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %232, align 4, !dbg !8345
  %234 = call noundef i64 %233(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %228, i8* noundef %229) #34, !dbg !8345
  %235 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !8346, !tbaa !2476
  store i8* %235, i8** %177, align 8, !dbg !8347, !tbaa !5474
  store i8 4, i8* %208, align 2, !dbg !8348, !tbaa !5409
  br label %426, !dbg !8349

236:                                              ; preds = %207
  %237 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %5, align 4, !dbg !8350, !tbaa !5299
  %238 = bitcast %"class.Cicada::IBufferedSerial"* %237 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !8351
  %239 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %238, align 4, !dbg !8351, !tbaa !2568
  %240 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %239, i32 8, !dbg !8351
  %241 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %240, align 4, !dbg !8351
  %242 = call noundef i64 %241(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %237, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18.155, i32 0, i32 0)) #34, !dbg !8351
  %243 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %5, align 4, !dbg !8352, !tbaa !5299
  %244 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 1, !dbg !8353
  %245 = load i8*, i8** %244, align 8, !dbg !8353, !tbaa !8076
  %246 = call i32 @strlen(i8* noundef nonnull dereferenceable(1) %245), !dbg !8354
  %247 = zext i32 %246 to i64, !dbg !8354
  %248 = bitcast %"class.Cicada::IBufferedSerial"* %243 to i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)***, !dbg !8355
  %249 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*** %248, align 4, !dbg !8355, !tbaa !2568
  %250 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %249, i32 6, !dbg !8355
  %251 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %250, align 4, !dbg !8355
  %252 = call noundef i64 %251(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %243, i8* noundef %245, i64 noundef %247) #34, !dbg !8355
  %253 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %5, align 4, !dbg !8356, !tbaa !5299
  %254 = bitcast %"class.Cicada::IBufferedSerial"* %253 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !8357
  %255 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %254, align 4, !dbg !8357, !tbaa !2568
  %256 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %255, i32 8, !dbg !8357
  %257 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %256, align 4, !dbg !8357
  %258 = call noundef i64 %257(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %253, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.156, i32 0, i32 0)) #34, !dbg !8357
  %259 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %5, align 4, !dbg !8358, !tbaa !5299
  %260 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 2, !dbg !8359
  %261 = load i8*, i8** %260, align 4, !dbg !8359, !tbaa !8120
  %262 = call i32 @strlen(i8* noundef nonnull dereferenceable(1) %261), !dbg !8360
  %263 = zext i32 %262 to i64, !dbg !8360
  %264 = bitcast %"class.Cicada::IBufferedSerial"* %259 to i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)***, !dbg !8361
  %265 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*** %264, align 4, !dbg !8361, !tbaa !2568
  %266 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %265, i32 6, !dbg !8361
  %267 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %266, align 4, !dbg !8361
  %268 = call noundef i64 %267(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %259, i8* noundef %261, i64 noundef %263) #34, !dbg !8361
  %269 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %5, align 4, !dbg !8362, !tbaa !5299
  %270 = load i8*, i8** @_ZN6Cicada12ATCommDevice12_quoteEndStrE, align 4, !dbg !8363, !tbaa !2476
  %271 = bitcast %"class.Cicada::IBufferedSerial"* %269 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !8364
  %272 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %271, align 4, !dbg !8364, !tbaa !2568
  %273 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %272, i32 8, !dbg !8364
  %274 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %273, align 4, !dbg !8364
  %275 = call noundef i64 %274(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %269, i8* noundef %270) #34, !dbg !8364
  %276 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !8365, !tbaa !2476
  store i8* %276, i8** %177, align 8, !dbg !8366, !tbaa !5474
  store i8 6, i8* %208, align 2, !dbg !8367, !tbaa !5409
  br label %426, !dbg !8368

277:                                              ; preds = %207
  %278 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !8369, !tbaa !2476
  store i8* %278, i8** %177, align 8, !dbg !8370, !tbaa !5474
  store i8 5, i8* %208, align 2, !dbg !8371, !tbaa !5409
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %4, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.157, i32 0, i32 0)) #34, !dbg !8372
  br label %426, !dbg !8373

279:                                              ; preds = %207
  %280 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !8374, !tbaa !2476
  store i8* %280, i8** %177, align 8, !dbg !8375, !tbaa !5474
  store i8 7, i8* %208, align 2, !dbg !8376, !tbaa !5409
  %281 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 4, !dbg !8377
  %282 = load i32, i32* %281, align 8, !dbg !8377, !tbaa !5691
  %283 = icmp eq i32 %282, 0, !dbg !8379
  br i1 %283, label %284, label %285, !dbg !8380

284:                                              ; preds = %279
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %4, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21.158, i32 0, i32 0)) #34, !dbg !8381
  br label %426, !dbg !8383

285:                                              ; preds = %279
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %4, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22.159, i32 0, i32 0)) #34, !dbg !8384
  br label %426

286:                                              ; preds = %207
  %287 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !8386, !tbaa !2476
  store i8* %287, i8** %177, align 8, !dbg !8387, !tbaa !5474
  store i8 8, i8* %208, align 2, !dbg !8388, !tbaa !5409
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %4, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23.160, i32 0, i32 0)) #34, !dbg !8389
  br label %426, !dbg !8390

288:                                              ; preds = %207
  %289 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i32 0, i32 0, !dbg !8391
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %289) #34, !dbg !8391
  call void @llvm.dbg.declare(metadata [6 x i8]* %3, metadata !8138, metadata !DIExpression()), !dbg !8392
  %290 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 6, !dbg !8393
  %291 = load i16, i16* %290, align 8, !dbg !8393, !tbaa !5688
  %292 = zext i16 %291 to i32, !dbg !8393
  %293 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* noundef nonnull %289, i32 noundef 6, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.161, i32 0, i32 0), i32 noundef %292), !dbg !8394
  %294 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %5, align 4, !dbg !8395, !tbaa !5299
  %295 = bitcast %"class.Cicada::IBufferedSerial"* %294 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !8396
  %296 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %295, align 4, !dbg !8396, !tbaa !2568
  %297 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %296, i32 8, !dbg !8396
  %298 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %297, align 4, !dbg !8396
  %299 = call noundef i64 %298(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %294, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24, i32 0, i32 0)) #34, !dbg !8396
  %300 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 4, !dbg !8397
  %301 = load i32, i32* %300, align 8, !dbg !8397, !tbaa !5691
  %302 = icmp eq i32 %301, 0, !dbg !8399
  %303 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %5, align 4, !dbg !8400, !tbaa !5299
  %304 = bitcast %"class.Cicada::IBufferedSerial"* %303 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !8400
  %305 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %304, align 4, !dbg !8400, !tbaa !2568
  %306 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %305, i32 8, !dbg !8400
  %307 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %306, align 4, !dbg !8400
  %308 = select i1 %302, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i32 0, i32 0)
  %309 = call noundef i64 %307(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %303, i8* noundef %308) #34, !dbg !8400
  %310 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %5, align 4, !dbg !8401, !tbaa !5299
  %311 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 5, !dbg !8402
  %312 = load i8*, i8** %311, align 4, !dbg !8402, !tbaa !5646
  %313 = bitcast %"class.Cicada::IBufferedSerial"* %310 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !8403
  %314 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %313, align 4, !dbg !8403, !tbaa !2568
  %315 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %314, i32 8, !dbg !8403
  %316 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %315, align 4, !dbg !8403
  %317 = call noundef i64 %316(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %310, i8* noundef %312) #34, !dbg !8403
  %318 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %5, align 4, !dbg !8404, !tbaa !5299
  %319 = bitcast %"class.Cicada::IBufferedSerial"* %318 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !8405
  %320 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %319, align 4, !dbg !8405, !tbaa !2568
  %321 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %320, i32 8, !dbg !8405
  %322 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %321, align 4, !dbg !8405
  %323 = call noundef i64 %322(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %318, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.162, i32 0, i32 0)) #34, !dbg !8405
  %324 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %5, align 4, !dbg !8406, !tbaa !5299
  %325 = bitcast %"class.Cicada::IBufferedSerial"* %324 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !8407
  %326 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %325, align 4, !dbg !8407, !tbaa !2568
  %327 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %326, i32 8, !dbg !8407
  %328 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %327, align 4, !dbg !8407
  %329 = call noundef i64 %328(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %324, i8* noundef nonnull %289) #34, !dbg !8407
  %330 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %5, align 4, !dbg !8408, !tbaa !5299
  %331 = load i8*, i8** @_ZN6Cicada12ATCommDevice11_lineEndStrE, align 4, !dbg !8409, !tbaa !2476
  %332 = bitcast %"class.Cicada::IBufferedSerial"* %330 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !8410
  %333 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %332, align 4, !dbg !8410, !tbaa !2568
  %334 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %333, i32 8, !dbg !8410
  %335 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %334, align 4, !dbg !8410
  %336 = call noundef i64 %335(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %330, i8* noundef %331) #34, !dbg !8410
  %337 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !8411, !tbaa !2476
  store i8* %337, i8** %177, align 8, !dbg !8412, !tbaa !5474
  store i8 9, i8* %208, align 2, !dbg !8413, !tbaa !5409
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %289) #34, !dbg !8414
  br label %426

338:                                              ; preds = %207
  %339 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 1, !dbg !8415
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %339, i16 noundef zeroext 0), !dbg !8415
  %340 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 8, !dbg !8416
  store i32 2, i32* %340, align 4, !dbg !8417, !tbaa !5601
  store i8 10, i8* %208, align 2, !dbg !8418, !tbaa !5409
  %341 = load i8, i8* %27, align 2, !dbg !8419, !tbaa !5289
  %342 = or i8 %341, 16, !dbg !8419
  store i8 %342, i8* %27, align 2, !dbg !8419, !tbaa !5289
  br label %426, !dbg !8420

343:                                              ; preds = %207
  %344 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 3, !dbg !8421
  %345 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %344), !dbg !8423
  %346 = icmp eq i64 %345, 0, !dbg !8421
  br i1 %346, label %358, label %347, !dbg !8424

347:                                              ; preds = %343
  %348 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice14prepareSendingEb(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %4, i1 noundef zeroext false) #34, !dbg !8425
  br i1 %348, label %349, label %426, !dbg !8428

349:                                              ; preds = %347
  %350 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %5, align 4, !dbg !8429, !tbaa !5299
  %351 = load i8*, i8** @_ZN6Cicada12ATCommDevice11_lineEndStrE, align 4, !dbg !8431, !tbaa !2476
  %352 = bitcast %"class.Cicada::IBufferedSerial"* %350 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !8432
  %353 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %352, align 4, !dbg !8432, !tbaa !2568
  %354 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %353, i32 8, !dbg !8432
  %355 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %354, align 4, !dbg !8432
  %356 = call noundef i64 %355(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %350, i8* noundef %351) #34, !dbg !8432
  %357 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 8, !dbg !8433
  store i32 3, i32* %357, align 4, !dbg !8434, !tbaa !5601
  store i8 11, i8* %208, align 2, !dbg !8435, !tbaa !5409
  br label %426, !dbg !8436

358:                                              ; preds = %343
  %359 = load i8, i8* %27, align 2, !dbg !8437, !tbaa !5289
  %360 = and i8 %359, 4, !dbg !8439
  %361 = icmp eq i8 %360, 0, !dbg !8437
  br i1 %361, label %370, label %362, !dbg !8440

362:                                              ; preds = %358
  %363 = and i8 %359, -5, !dbg !8441
  store i8 %363, i8* %27, align 2, !dbg !8441, !tbaa !5289
  %364 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 8, !dbg !8443
  store i32 4, i32* %364, align 4, !dbg !8444, !tbaa !5601
  %365 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 4, !dbg !8445
  %366 = load i32, i32* %365, align 8, !dbg !8445, !tbaa !5691
  %367 = icmp eq i32 %366, 1, !dbg !8447
  br i1 %367, label %368, label %369, !dbg !8448

368:                                              ; preds = %362
  store i8 12, i8* %208, align 2, !dbg !8449, !tbaa !5409
  br label %426, !dbg !8451

369:                                              ; preds = %362
  store i8 14, i8* %208, align 2, !dbg !8452, !tbaa !5409
  br label %426

370:                                              ; preds = %358
  %371 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 8, !dbg !8454
  store i32 2, i32* %371, align 4, !dbg !8456, !tbaa !5601
  %372 = and i8 %359, 16, !dbg !8457
  %373 = icmp eq i8 %372, 0, !dbg !8459
  br i1 %373, label %378, label %374, !dbg !8460

374:                                              ; preds = %370
  %375 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice16handleDisconnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %4, i8 noundef signext 15) #34, !dbg !8461
  br i1 %375, label %376, label %426, !dbg !8464

376:                                              ; preds = %374
  %377 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 1, !dbg !8465
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %377, i16 noundef zeroext 100), !dbg !8465
  br label %426, !dbg !8467

378:                                              ; preds = %370
  %379 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice16handleDisconnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %4, i8 noundef signext 16) #34, !dbg !8468
  br label %426

380:                                              ; preds = %207
  call void @_ZN6Cicada12ATCommDevice8sendDataEv(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %4) #34, !dbg !8470
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i8** %177, align 8, !dbg !8471, !tbaa !5474
  store i8 10, i8* %208, align 2, !dbg !8472, !tbaa !5409
  br label %426, !dbg !8473

381:                                              ; preds = %207
  %382 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice16handleDisconnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %4, i8 noundef signext 15) #34, !dbg !8474
  br i1 %382, label %383, label %385, !dbg !8476

383:                                              ; preds = %381
  %384 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 1, !dbg !8477
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %384, i16 noundef zeroext 100), !dbg !8477
  br label %426, !dbg !8479

385:                                              ; preds = %381
  %386 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 7, !dbg !8480
  %387 = load i64, i64* %386, align 8, !dbg !8480, !tbaa !5386
  %388 = icmp eq i64 %387, 0, !dbg !8482
  br i1 %388, label %392, label %389, !dbg !8483

389:                                              ; preds = %385
  %390 = call noundef zeroext i1 @_ZN6Cicada15EspressifDevice14sendCiprcvdataEv(%"class.Cicada::EspressifDevice"* noundef nonnull align 8 dereferenceable(258) %0), !dbg !8484
  br i1 %390, label %391, label %426, !dbg !8487

391:                                              ; preds = %389
  store i8 13, i8* %208, align 2, !dbg !8488, !tbaa !5409
  store i8 1, i8* %181, align 1, !dbg !8490, !tbaa !7164
  br label %426, !dbg !8491

392:                                              ; preds = %385
  store i8 10, i8* %208, align 2, !dbg !8492, !tbaa !5409
  br label %426

393:                                              ; preds = %207
  %394 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 8, !dbg !8494
  %395 = load i64, i64* %394, align 8, !dbg !8494, !tbaa !5374
  %396 = icmp eq i64 %395, 0, !dbg !8496
  br i1 %396, label %405, label %397, !dbg !8497

397:                                              ; preds = %393
  %398 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice7receiveEv(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %4) #34, !dbg !8498
  %399 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 4
  %400 = load i32, i32* %399, align 8
  %401 = icmp eq i32 %400, 1
  %402 = select i1 %398, i1 %401, i1 false, !dbg !8501
  br i1 %402, label %403, label %426, !dbg !8501

403:                                              ; preds = %397
  store i8 0, i8* %181, align 1, !dbg !8502, !tbaa !7164
  %404 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !8504, !tbaa !2476
  store i8* %404, i8** %177, align 8, !dbg !8505, !tbaa !5474
  br label %426, !dbg !8506

405:                                              ; preds = %393
  %406 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 7, !dbg !8507
  %407 = load i64, i64* %406, align 8, !dbg !8507, !tbaa !5386
  %408 = icmp eq i64 %407, 0, !dbg !8509
  br i1 %408, label %410, label %409, !dbg !8510

409:                                              ; preds = %405
  store i8 12, i8* %208, align 2, !dbg !8511, !tbaa !5409
  br label %426, !dbg !8513

410:                                              ; preds = %405
  store i8 10, i8* %208, align 2, !dbg !8514, !tbaa !5409
  br label %426

411:                                              ; preds = %207
  %412 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 1, !dbg !8516
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %412, i16 noundef zeroext 0), !dbg !8516
  %413 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 8, !dbg !8517
  store i32 1, i32* %413, align 4, !dbg !8518, !tbaa !5601
  %414 = load i8, i8* %27, align 2, !dbg !8519, !tbaa !5289
  %415 = and i8 %414, 16, !dbg !8521
  %416 = icmp eq i8 %415, 0, !dbg !8519
  br i1 %416, label %419, label %417, !dbg !8522

417:                                              ; preds = %411
  %418 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !8523, !tbaa !2476
  store i8* %418, i8** %177, align 8, !dbg !8525, !tbaa !5474
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %4, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i32 0, i32 0)) #34, !dbg !8526
  br label %419, !dbg !8527

419:                                              ; preds = %417, %411
  store i8 16, i8* %208, align 2, !dbg !8528, !tbaa !5409
  br label %426, !dbg !8529

420:                                              ; preds = %207
  %421 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 8, !dbg !8530
  store i32 1, i32* %421, align 4, !dbg !8531, !tbaa !5601
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10.147, i32 0, i32 0), i8** %177, align 8, !dbg !8532, !tbaa !5474
  store i8 17, i8* %208, align 2, !dbg !8533, !tbaa !5409
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %4, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0)) #34, !dbg !8534
  br label %426, !dbg !8535

422:                                              ; preds = %207
  %423 = load i8, i8* %27, align 2, !dbg !8536, !tbaa !5289
  %424 = and i8 %423, -17, !dbg !8536
  store i8 %424, i8* %27, align 2, !dbg !8536, !tbaa !5289
  %425 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 8, !dbg !8537
  store i32 0, i32* %425, align 4, !dbg !8538, !tbaa !5601
  store i8 0, i8* %208, align 2, !dbg !8539, !tbaa !5409
  br label %426, !dbg !8540

426:                                              ; preds = %86, %205, %180, %176, %184, %207, %403, %397, %410, %409, %392, %391, %389, %349, %347, %378, %376, %374, %368, %369, %284, %285, %422, %420, %419, %383, %380, %338, %288, %286, %277, %236, %221, %215, %211, %15, %24, %46
  ret void, !dbg !8541
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::EspressifDevice"* @_ZThn4_N6Cicada15EspressifDeviceD1Ev(%"class.Cicada::EspressifDevice"* noundef %0) unnamed_addr #3 comdat align 2 !dbg !8542 {
  %2 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 -1, i32 4, i32 2, !dbg !8543
  %3 = bitcast i8* %2 to %"class.Cicada::IPCommDevice"*, !dbg !8543
  %4 = tail call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceD2Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(258) %3) #34, !dbg !8543
  ret %"class.Cicada::EspressifDevice"* undef, !dbg !8543
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada15EspressifDeviceD0Ev(%"class.Cicada::EspressifDevice"* noundef %0) unnamed_addr #3 comdat align 2 !dbg !8544 {
  %2 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 -1, i32 4, i32 2, !dbg !8545
  %3 = bitcast i8* %2 to %"class.Cicada::EspressifDevice"*, !dbg !8545
  tail call void @_ZN6Cicada15EspressifDeviceD0Ev(%"class.Cicada::EspressifDevice"* noundef nonnull align 8 dereferenceable(258) %3) #34, !dbg !8545
  ret void, !dbg !8545
}

; Function Attrs: noinline nounwind
define dso_local void @_ZThn4_N6Cicada15EspressifDevice3runEv(%"class.Cicada::EspressifDevice"* noundef %0) unnamed_addr #3 align 2 !dbg !8546 {
  %2 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 -1, i32 4, i32 2, !dbg !8547
  %3 = bitcast i8* %2 to %"class.Cicada::EspressifDevice"*, !dbg !8547
  tail call void @_ZN6Cicada15EspressifDevice3runEv(%"class.Cicada::EspressifDevice"* noundef nonnull align 8 dereferenceable(258) %3), !dbg !8547
  ret void, !dbg !8547
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada15EspressifDevice14fillLineBufferEv(%"class.Cicada::EspressifDevice"* nocapture noundef nonnull align 8 dereferenceable(258) %0) local_unnamed_addr #4 align 2 !dbg !8548 {
  call void @llvm.dbg.value(metadata %"class.Cicada::EspressifDevice"* %0, metadata !8550, metadata !DIExpression()), !dbg !8555
  %2 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !8556
  %3 = load i8, i8* %2, align 2, !dbg !8556, !tbaa !5289
  %4 = and i8 %3, 32, !dbg !8557
  %5 = icmp eq i8 %4, 0, !dbg !8556
  br i1 %5, label %78, label %6, !dbg !8558

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.Cicada::IBufferedSerial"** %7 to %"class.Cicada::ICommDevice"**
  %9 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %8, align 4, !dbg !8559, !tbaa !5299
  %10 = bitcast %"class.Cicada::ICommDevice"* %9 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !8560
  %11 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %10, align 4, !dbg !8560, !tbaa !2568
  %12 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %11, i32 2, !dbg !8560
  %13 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %12, align 4, !dbg !8560
  %14 = call noundef i64 %13(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %9) #34, !dbg !8560
  %15 = icmp eq i64 %14, 0, !dbg !8559
  br i1 %15, label %78, label %16, !dbg !8561

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 3
  %19 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 4
  %20 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 5
  %21 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 5
  %22 = getelementptr inbounds [61 x i8], [61 x i8]* %17, i32 0, i32 0
  %23 = getelementptr inbounds [61 x i8], [61 x i8]* %17, i32 0, i32 0
  br label %24, !dbg !8561

24:                                               ; preds = %16, %66
  %25 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !8562, !tbaa !5299
  %26 = bitcast %"class.Cicada::IBufferedSerial"* %25 to i8 (%"class.Cicada::IBufferedSerial"*)***, !dbg !8563
  %27 = load i8 (%"class.Cicada::IBufferedSerial"*)**, i8 (%"class.Cicada::IBufferedSerial"*)*** %26, align 4, !dbg !8563, !tbaa !2568
  %28 = getelementptr inbounds i8 (%"class.Cicada::IBufferedSerial"*)*, i8 (%"class.Cicada::IBufferedSerial"*)** %27, i32 7, !dbg !8563
  %29 = load i8 (%"class.Cicada::IBufferedSerial"*)*, i8 (%"class.Cicada::IBufferedSerial"*)** %28, align 4, !dbg !8563
  %30 = call noundef zeroext i8 %29(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %25) #34, !dbg !8563
  call void @llvm.dbg.value(metadata i8 %30, metadata !8551, metadata !DIExpression()), !dbg !8564
  %31 = load i8, i8* %18, align 1, !dbg !8565, !tbaa !6004
  %32 = add i8 %31, 1, !dbg !8565
  store i8 %32, i8* %18, align 1, !dbg !8565, !tbaa !6004
  %33 = zext i8 %31 to i32, !dbg !8566
  %34 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 2, i32 %33, !dbg !8566
  store i8 %30, i8* %34, align 1, !dbg !8567, !tbaa !2624
  switch i8 %30, label %35 [
    i8 62, label %48
    i8 10, label %48
  ], !dbg !8568

35:                                               ; preds = %24
  %36 = load i32, i32* %19, align 8, !dbg !8570, !tbaa !5691
  %37 = icmp eq i32 %36, 0, !dbg !8571
  br i1 %37, label %38, label %45, !dbg !8572

38:                                               ; preds = %35
  %39 = load i8, i8* %20, align 1, !dbg !8573, !tbaa !7164
  %40 = icmp eq i8 %39, 1, !dbg !8574
  br i1 %40, label %45, label %41, !dbg !8575

41:                                               ; preds = %38
  %42 = icmp ne i8 %39, 3, !dbg !8576
  %43 = icmp eq i8 %30, 58
  %44 = and i1 %43, %42, !dbg !8577
  br i1 %44, label %48, label %45, !dbg !8577

45:                                               ; preds = %41, %38, %35
  %46 = load i8, i8* %18, align 1, !dbg !8578, !tbaa !6004
  %47 = icmp eq i8 %46, 60, !dbg !8579
  br i1 %47, label %48, label %50, !dbg !8580

48:                                               ; preds = %24, %24, %41, %45
  %49 = load i8, i8* %18, align 1, !dbg !8581, !tbaa !6004
  br label %74

50:                                               ; preds = %45
  %51 = load i8, i8* %21, align 1, !dbg !8583, !tbaa !7164
  %52 = icmp eq i8 %51, 1, !dbg !8585
  %53 = icmp ugt i8 %46, 14
  %54 = select i1 %52, i1 %53, i1 false, !dbg !8586
  br i1 %54, label %55, label %66, !dbg !8586

55:                                               ; preds = %50
  switch i8 %30, label %66 [
    i8 58, label %56
    i8 44, label %61
  ], !dbg !8587

56:                                               ; preds = %55
  %57 = call i32 @memcmp(i8* noundef nonnull dereferenceable(13) %22, i8* noundef nonnull dereferenceable(13) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.165, i32 0, i32 0), i32 13), !dbg !8590
  %58 = icmp eq i32 %57, 0, !dbg !8591
  br i1 %58, label %64, label %59, !dbg !8592

59:                                               ; preds = %56
  %60 = icmp eq i8 %30, 44, !dbg !8593
  br i1 %60, label %61, label %66, !dbg !8594

61:                                               ; preds = %55, %59
  %62 = call i32 @memcmp(i8* noundef nonnull dereferenceable(13) %23, i8* noundef nonnull dereferenceable(13) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.166, i32 0, i32 0), i32 13), !dbg !8595
  %63 = icmp eq i32 %62, 0, !dbg !8596
  br i1 %63, label %64, label %66, !dbg !8597

64:                                               ; preds = %61, %56
  %65 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 5, !dbg !8583
  store i8 2, i8* %65, align 1, !dbg !8598, !tbaa !7164
  br label %74

66:                                               ; preds = %50, %61, %59, %55
  %67 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %8, align 4, !dbg !8559, !tbaa !5299
  %68 = bitcast %"class.Cicada::ICommDevice"* %67 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !8560
  %69 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %68, align 4, !dbg !8560, !tbaa !2568
  %70 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %69, i32 2, !dbg !8560
  %71 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %70, align 4, !dbg !8560
  %72 = call noundef i64 %71(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %67) #34, !dbg !8560
  %73 = icmp eq i64 %72, 0, !dbg !8559
  br i1 %73, label %78, label %24, !dbg !8561

74:                                               ; preds = %48, %64
  %75 = phi i8 [ %46, %64 ], [ %49, %48 ]
  %76 = zext i8 %75 to i32, !dbg !8564
  %77 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 2, i32 %76, !dbg !8564
  store i8 0, i8* %77, align 1, !dbg !8564, !tbaa !2624
  store i8 0, i8* %18, align 1, !dbg !8564, !tbaa !6004
  br label %78, !dbg !8600

78:                                               ; preds = %66, %74, %6, %1
  %79 = phi i1 [ false, %1 ], [ false, %6 ], [ true, %74 ], [ false, %66 ], !dbg !8555
  ret i1 %79, !dbg !8600
}

; Function Attrs: mustprogress nofree noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada15EspressifDevice16parseCiprecvdataEv(%"class.Cicada::EspressifDevice"* nocapture noundef nonnull align 8 dereferenceable(258) %0) local_unnamed_addr #26 align 2 !dbg !8601 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %"class.Cicada::EspressifDevice"* %0, metadata !8603, metadata !DIExpression()), !dbg !8607
  %3 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !8608
  %4 = call i32 @memcmp(i8* noundef nonnull dereferenceable(12) %3, i8* noundef nonnull dereferenceable(12) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4.164, i32 0, i32 0), i32 12), !dbg !8609
  %5 = icmp eq i32 %4, 0, !dbg !8610
  br i1 %5, label %6, label %21, !dbg !8611

6:                                                ; preds = %1
  %7 = bitcast i32* %2 to i8*, !dbg !8612
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #34, !dbg !8612
  %8 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 2, i32 13, !dbg !8613
  call void @llvm.dbg.value(metadata i32* %2, metadata !8604, metadata !DIExpression(DW_OP_deref)), !dbg !8614
  %9 = call i32 (i8*, i8*, ...) @sscanf(i8* noundef nonnull %8, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.150, i32 0, i32 0), i32* noundef nonnull %2), !dbg !8615
  %10 = load i32, i32* %2, align 4, !dbg !8616, !tbaa !6095
  call void @llvm.dbg.value(metadata i32 %10, metadata !8604, metadata !DIExpression()), !dbg !8614
  %11 = sext i32 %10 to i64, !dbg !8616
  %12 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 7, !dbg !8617
  %13 = load i64, i64* %12, align 8, !dbg !8618, !tbaa !5386
  %14 = sub i64 %13, %11, !dbg !8618
  store i64 %14, i64* %12, align 8, !dbg !8618, !tbaa !5386
  call void @llvm.dbg.value(metadata i32 %10, metadata !8604, metadata !DIExpression()), !dbg !8614
  %15 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 8, !dbg !8619
  %16 = load i64, i64* %15, align 8, !dbg !8620, !tbaa !5374
  %17 = add i64 %16, %11, !dbg !8620
  store i64 %17, i64* %15, align 8, !dbg !8620, !tbaa !5374
  %18 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !8621
  %19 = load i8, i8* %18, align 2, !dbg !8622, !tbaa !5289
  %20 = and i8 %19, -33, !dbg !8622
  store i8 %20, i8* %18, align 2, !dbg !8622, !tbaa !5289
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #34, !dbg !8623
  br label %21

21:                                               ; preds = %1, %6
  ret i1 %5, !dbg !8624
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada15EspressifDevice14sendCiprcvdataEv(%"class.Cicada::EspressifDevice"* noundef nonnull align 8 dereferenceable(258) %0) local_unnamed_addr #4 align 2 !dbg !8625 {
  %2 = alloca [6 x i8], align 1
  call void @llvm.dbg.value(metadata %"class.Cicada::EspressifDevice"* %0, metadata !8627, metadata !DIExpression()), !dbg !8632
  %3 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 1, !dbg !8633
  %4 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %3, align 4, !dbg !8633, !tbaa !5299
  %5 = bitcast %"class.Cicada::IBufferedSerial"* %4 to i64 (%"class.Cicada::IBufferedSerial"*)***, !dbg !8634
  %6 = load i64 (%"class.Cicada::IBufferedSerial"*)**, i64 (%"class.Cicada::IBufferedSerial"*)*** %5, align 4, !dbg !8634, !tbaa !2568
  %7 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*)*, i64 (%"class.Cicada::IBufferedSerial"*)** %6, i32 13, !dbg !8634
  %8 = load i64 (%"class.Cicada::IBufferedSerial"*)*, i64 (%"class.Cicada::IBufferedSerial"*)** %7, align 4, !dbg !8634
  %9 = call noundef i64 %8(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %4) #34, !dbg !8634
  %10 = bitcast %"class.Cicada::IBufferedSerial"** %3 to %"class.Cicada::ICommDevice"**, !dbg !8635
  %11 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %10, align 4, !dbg !8635, !tbaa !5299
  %12 = bitcast %"class.Cicada::ICommDevice"* %11 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !8636
  %13 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %12, align 4, !dbg !8636, !tbaa !2568
  %14 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %13, i32 2, !dbg !8636
  %15 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %14, align 4, !dbg !8636
  %16 = call noundef i64 %15(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %11) #34, !dbg !8636
  %17 = sub i64 %9, %16, !dbg !8637
  %18 = icmp ugt i64 %17, 30, !dbg !8638
  br i1 %18, label %19, label %72, !dbg !8639

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 2, !dbg !8640
  %21 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %20), !dbg !8641
  %22 = icmp eq i64 %21, 0, !dbg !8642
  br i1 %22, label %72, label %23, !dbg !8643

23:                                               ; preds = %19
  %24 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %3, align 4, !dbg !8644, !tbaa !5299
  %25 = bitcast %"class.Cicada::IBufferedSerial"* %24 to i64 (%"class.Cicada::IBufferedSerial"*)***, !dbg !8645
  %26 = load i64 (%"class.Cicada::IBufferedSerial"*)**, i64 (%"class.Cicada::IBufferedSerial"*)*** %25, align 4, !dbg !8645, !tbaa !2568
  %27 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*)*, i64 (%"class.Cicada::IBufferedSerial"*)** %26, i32 13, !dbg !8645
  %28 = load i64 (%"class.Cicada::IBufferedSerial"*)*, i64 (%"class.Cicada::IBufferedSerial"*)** %27, align 4, !dbg !8645
  %29 = call noundef i64 %28(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %24) #34, !dbg !8645
  %30 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %10, align 4, !dbg !8646, !tbaa !5299
  %31 = bitcast %"class.Cicada::ICommDevice"* %30 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !8647
  %32 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %31, align 4, !dbg !8647, !tbaa !2568
  %33 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %32, i32 2, !dbg !8647
  %34 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %33, align 4, !dbg !8647
  %35 = call noundef i64 %34(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %30) #34, !dbg !8647
  %36 = sub i64 %29, %35, !dbg !8648
  %37 = add i64 %36, -30, !dbg !8649
  call void @llvm.dbg.value(metadata i64 %37, metadata !8628, metadata !DIExpression()), !dbg !8650
  %38 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 7, !dbg !8651
  %39 = load i64, i64* %38, align 8, !dbg !8651, !tbaa !5386
  %40 = icmp ugt i64 %37, %39, !dbg !8653
  %41 = select i1 %40, i64 %39, i64 %37, !dbg !8654
  call void @llvm.dbg.value(metadata i64 %41, metadata !8628, metadata !DIExpression()), !dbg !8650
  %42 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %20), !dbg !8655
  %43 = icmp ugt i64 %41, %42, !dbg !8657
  br i1 %43, label %44, label %46, !dbg !8658

44:                                               ; preds = %23
  %45 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %20), !dbg !8659
  call void @llvm.dbg.value(metadata i64 %45, metadata !8628, metadata !DIExpression()), !dbg !8650
  br label %46, !dbg !8660

46:                                               ; preds = %44, %23
  %47 = phi i64 [ %45, %44 ], [ %41, %23 ], !dbg !8650
  call void @llvm.dbg.value(metadata i64 %47, metadata !8628, metadata !DIExpression()), !dbg !8650
  %48 = icmp ult i64 %47, 2048, !dbg !8661
  %49 = select i1 %48, i64 %47, i64 2048, !dbg !8661
  call void @llvm.dbg.value(metadata i64 %49, metadata !8628, metadata !DIExpression()), !dbg !8650
  %50 = getelementptr inbounds [6 x i8], [6 x i8]* %2, i32 0, i32 0, !dbg !8662
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %50) #34, !dbg !8662
  call void @llvm.dbg.declare(metadata [6 x i8]* %2, metadata !8631, metadata !DIExpression()), !dbg !8663
  %51 = trunc i64 %49 to i32, !dbg !8664
  %52 = call i32 (i8*, i8*, ...) @sprintf(i8* noundef nonnull %50, i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.161, i32 0, i32 0), i32 noundef %51), !dbg !8665
  %53 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %3, align 4, !dbg !8666, !tbaa !5299
  %54 = bitcast %"class.Cicada::IBufferedSerial"* %53 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !8667
  %55 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %54, align 4, !dbg !8667, !tbaa !2568
  %56 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %55, i32 8, !dbg !8667
  %57 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %56, align 4, !dbg !8667
  %58 = call noundef i64 %57(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %53, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.163, i32 0, i32 0)) #34, !dbg !8667
  %59 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %3, align 4, !dbg !8668, !tbaa !5299
  %60 = bitcast %"class.Cicada::IBufferedSerial"* %59 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !8669
  %61 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %60, align 4, !dbg !8669, !tbaa !2568
  %62 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %61, i32 8, !dbg !8669
  %63 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %62, align 4, !dbg !8669
  %64 = call noundef i64 %63(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %59, i8* noundef nonnull %50) #34, !dbg !8669
  %65 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %3, align 4, !dbg !8670, !tbaa !5299
  %66 = load i8*, i8** @_ZN6Cicada12ATCommDevice11_lineEndStrE, align 4, !dbg !8671, !tbaa !2476
  %67 = bitcast %"class.Cicada::IBufferedSerial"* %65 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !8672
  %68 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %67, align 4, !dbg !8672, !tbaa !2568
  %69 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %68, i32 8, !dbg !8672
  %70 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %69, align 4, !dbg !8672
  %71 = call noundef i64 %70(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %65, i8* noundef %66) #34, !dbg !8672
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %50) #34, !dbg !8673
  br label %72

72:                                               ; preds = %1, %19, %46
  %73 = phi i1 [ true, %46 ], [ false, %19 ], [ false, %1 ], !dbg !8674
  ret i1 %73, !dbg !8675
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::EspressifDevice"* @_ZN6Cicada15EspressifDeviceC2ERNS_15IBufferedSerialEPhS3_y(%"class.Cicada::EspressifDevice"* noundef nonnull returned align 8 dereferenceable(258) %0, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4) unnamed_addr #3 align 2 !dbg !8676 {
  call void @llvm.dbg.value(metadata %"class.Cicada::EspressifDevice"* %0, metadata !8678, metadata !DIExpression()), !dbg !8683
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %1, metadata !8679, metadata !DIExpression()), !dbg !8683
  call void @llvm.dbg.value(metadata i8* %2, metadata !8680, metadata !DIExpression()), !dbg !8683
  call void @llvm.dbg.value(metadata i8* %3, metadata !8681, metadata !DIExpression()), !dbg !8683
  call void @llvm.dbg.value(metadata i64 %4, metadata !8682, metadata !DIExpression()), !dbg !8683
  %6 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, !dbg !8684
  %7 = call noundef %"class.Cicada::ATCommDevice"* @_ZN6Cicada12ATCommDeviceC2ERNS_15IBufferedSerialEPhS3_y(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4) #34, !dbg !8685
  %8 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8684
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [5 x i8*] }, { [20 x i8*], [5 x i8*] }* @_ZTVN6Cicada15EspressifDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %8, align 8, !dbg !8684, !tbaa !2568
  %9 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !8684
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [5 x i8*] }, { [20 x i8*], [5 x i8*] }* @_ZTVN6Cicada15EspressifDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %9, align 4, !dbg !8684, !tbaa !2568
  call void @_ZN6Cicada15EspressifDevice11resetStatesEv(%"class.Cicada::EspressifDevice"* noundef nonnull align 8 dereferenceable(258) %0), !dbg !8686
  ret %"class.Cicada::EspressifDevice"* %0, !dbg !8688
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::EspressifDevice"* @_ZN6Cicada15EspressifDeviceC2ERNS_15IBufferedSerialEPhS3_yy(%"class.Cicada::EspressifDevice"* noundef nonnull returned align 8 dereferenceable(258) %0, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4, i64 noundef %5) unnamed_addr #3 align 2 !dbg !8689 {
  call void @llvm.dbg.value(metadata %"class.Cicada::EspressifDevice"* %0, metadata !8691, metadata !DIExpression()), !dbg !8697
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %1, metadata !8692, metadata !DIExpression()), !dbg !8697
  call void @llvm.dbg.value(metadata i8* %2, metadata !8693, metadata !DIExpression()), !dbg !8697
  call void @llvm.dbg.value(metadata i8* %3, metadata !8694, metadata !DIExpression()), !dbg !8697
  call void @llvm.dbg.value(metadata i64 %4, metadata !8695, metadata !DIExpression()), !dbg !8697
  call void @llvm.dbg.value(metadata i64 %5, metadata !8696, metadata !DIExpression()), !dbg !8697
  %7 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, !dbg !8698
  %8 = call noundef %"class.Cicada::ATCommDevice"* @_ZN6Cicada12ATCommDeviceC2ERNS_15IBufferedSerialEPhS3_yy(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %7, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4, i64 noundef %5) #34, !dbg !8699
  %9 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8698
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [5 x i8*] }, { [20 x i8*], [5 x i8*] }* @_ZTVN6Cicada15EspressifDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8, !dbg !8698, !tbaa !2568
  %10 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !8698
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [5 x i8*] }, { [20 x i8*], [5 x i8*] }* @_ZTVN6Cicada15EspressifDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %10, align 4, !dbg !8698, !tbaa !2568
  call void @_ZN6Cicada15EspressifDevice11resetStatesEv(%"class.Cicada::EspressifDevice"* noundef nonnull align 8 dereferenceable(258) %0), !dbg !8700
  ret %"class.Cicada::EspressifDevice"* %0, !dbg !8702
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada15EspressifDevice10requestMacEv(%"class.Cicada::EspressifDevice"* nocapture noundef nonnull align 8 dereferenceable(258) %0) local_unnamed_addr #4 align 2 !dbg !8703 {
  call void @llvm.dbg.value(metadata %"class.Cicada::EspressifDevice"* %0, metadata !8705, metadata !DIExpression()), !dbg !8706
  %2 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 1, !dbg !8707
  %3 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %2, align 4, !dbg !8707, !tbaa !5299
  %4 = bitcast %"class.Cicada::IBufferedSerial"* %3 to void (%"class.Cicada::IBufferedSerial"*)***, !dbg !8708
  %5 = load void (%"class.Cicada::IBufferedSerial"*)**, void (%"class.Cicada::IBufferedSerial"*)*** %4, align 4, !dbg !8708, !tbaa !2568
  %6 = getelementptr inbounds void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %5, i32 12, !dbg !8708
  %7 = load void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %6, align 4, !dbg !8708
  call void %7(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %3) #34, !dbg !8708
  %8 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 3, i32 0, !dbg !8709
  store i8 0, i8* %8, align 8, !dbg !8710, !tbaa !2624
  %9 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 3, i32 1, !dbg !8711
  store i8 -1, i8* %9, align 1, !dbg !8712, !tbaa !2624
  ret void, !dbg !8713
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef i8* @_ZN6Cicada15EspressifDevice12getMacStringEv(%"class.Cicada::EspressifDevice"* noundef nonnull readonly align 8 dereferenceable(258) %0) local_unnamed_addr #18 align 2 !dbg !8714 {
  call void @llvm.dbg.value(metadata %"class.Cicada::EspressifDevice"* %0, metadata !8716, metadata !DIExpression()), !dbg !8717
  %2 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 0, i32 0, i32 9, !dbg !8718
  %3 = load i8*, i8** %2, align 8, !dbg !8718, !tbaa !5474
  %4 = icmp ne i8* %3, null, !dbg !8720
  %5 = getelementptr inbounds %"class.Cicada::EspressifDevice", %"class.Cicada::EspressifDevice"* %0, i32 0, i32 3, i32 0
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 0
  %8 = select i1 %4, i1 true, i1 %7, !dbg !8721
  %9 = select i1 %8, i8* null, i8* %5, !dbg !8721
  ret i8* %9, !dbg !8722
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14BufferedSerialD0Ev(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #3 comdat align 2 !dbg !8723 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8726, metadata !DIExpression()), !dbg !8728
  call void @llvm.trap() #36, !dbg !8729
  unreachable, !dbg !8729
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZNK6Cicada14BufferedSerial14bytesAvailableEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #4 align 2 !dbg !8730 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8732, metadata !DIExpression()), !dbg !8735
  call void @_Z18eDisableInterruptsv() #34, !dbg !8736
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !8737
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer.0"*, !dbg !8737
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !8738
  call void @llvm.dbg.value(metadata i64 %4, metadata !8734, metadata !DIExpression()), !dbg !8735
  call void @_Z17eEnableInterruptsv() #34, !dbg !8739
  ret i64 %4, !dbg !8740
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZNK6Cicada14BufferedSerial14spaceAvailableEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #4 align 2 !dbg !8741 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8743, metadata !DIExpression()), !dbg !8745
  call void @_Z18eDisableInterruptsv() #34, !dbg !8746
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !8747
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer.0"*, !dbg !8747
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !8748
  call void @llvm.dbg.value(metadata i64 %4, metadata !8744, metadata !DIExpression()), !dbg !8745
  call void @_Z17eEnableInterruptsv() #34, !dbg !8749
  ret i64 %4, !dbg !8750
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial4readEPhy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8* nocapture noundef writeonly %1, i64 noundef %2) unnamed_addr #4 align 2 !dbg !8751 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8753, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.value(metadata i8* %1, metadata !8754, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.value(metadata i64 %2, metadata !8755, metadata !DIExpression()), !dbg !8758
  %4 = bitcast %"class.Cicada::BufferedSerial"* %0 to i64 (%"class.Cicada::BufferedSerial"*)***, !dbg !8759
  %5 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %4, align 8, !dbg !8759, !tbaa !2568
  %6 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %5, i32 2, !dbg !8759
  %7 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %6, align 4, !dbg !8759
  %8 = call noundef i64 %7(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #34, !dbg !8759
  call void @llvm.dbg.value(metadata i64 %8, metadata !8756, metadata !DIExpression()), !dbg !8758
  %9 = icmp ult i64 %8, %2, !dbg !8760
  %10 = select i1 %9, i64 %8, i64 %2, !dbg !8762
  call void @llvm.dbg.value(metadata i64 %10, metadata !8755, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.value(metadata i64 0, metadata !8757, metadata !DIExpression()), !dbg !8758
  %11 = icmp eq i64 %10, 0, !dbg !8763
  br i1 %11, label %24, label %12, !dbg !8764

12:                                               ; preds = %3
  %13 = bitcast %"class.Cicada::BufferedSerial"* %0 to i8 (%"class.Cicada::BufferedSerial"*)***
  br label %14, !dbg !8764

14:                                               ; preds = %12, %14
  %15 = phi i64 [ 0, %12 ], [ %20, %14 ]
  call void @llvm.dbg.value(metadata i64 %15, metadata !8757, metadata !DIExpression()), !dbg !8758
  %16 = load i8 (%"class.Cicada::BufferedSerial"*)**, i8 (%"class.Cicada::BufferedSerial"*)*** %13, align 8, !dbg !8765, !tbaa !2568
  %17 = getelementptr inbounds i8 (%"class.Cicada::BufferedSerial"*)*, i8 (%"class.Cicada::BufferedSerial"*)** %16, i32 7, !dbg !8765
  %18 = load i8 (%"class.Cicada::BufferedSerial"*)*, i8 (%"class.Cicada::BufferedSerial"*)** %17, align 4, !dbg !8765
  %19 = call noundef zeroext i8 %18(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #34, !dbg !8765
  %20 = add nuw i64 %15, 1, !dbg !8767
  call void @llvm.dbg.value(metadata i64 %20, metadata !8757, metadata !DIExpression()), !dbg !8758
  %21 = trunc i64 %15 to i32, !dbg !8768
  %22 = getelementptr inbounds i8, i8* %1, i32 %21, !dbg !8768
  store i8 %19, i8* %22, align 1, !dbg !8769, !tbaa !2624
  %23 = icmp ult i64 %20, %10, !dbg !8763
  br i1 %23, label %14, label %24, !dbg !8764, !llvm.loop !8770

24:                                               ; preds = %14, %3
  %25 = phi i64 [ 0, %3 ], [ %20, %14 ], !dbg !8758
  ret i64 %25, !dbg !8772
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial5writeEPKhy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8* nocapture noundef readonly %1, i64 noundef %2) unnamed_addr #4 align 2 !dbg !8773 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8775, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.value(metadata i8* %1, metadata !8776, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.value(metadata i64 %2, metadata !8777, metadata !DIExpression()), !dbg !8780
  %4 = bitcast %"class.Cicada::BufferedSerial"* %0 to i64 (%"class.Cicada::BufferedSerial"*)***, !dbg !8781
  %5 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %4, align 8, !dbg !8781, !tbaa !2568
  %6 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %5, i32 3, !dbg !8781
  %7 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %6, align 4, !dbg !8781
  %8 = call noundef i64 %7(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #34, !dbg !8781
  call void @llvm.dbg.value(metadata i64 %8, metadata !8778, metadata !DIExpression()), !dbg !8780
  %9 = icmp ult i64 %8, %2, !dbg !8782
  %10 = select i1 %9, i64 %8, i64 %2, !dbg !8784
  call void @llvm.dbg.value(metadata i64 %10, metadata !8777, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.value(metadata i64 0, metadata !8779, metadata !DIExpression()), !dbg !8780
  %11 = icmp eq i64 %10, 0, !dbg !8785
  br i1 %11, label %19, label %12, !dbg !8786

12:                                               ; preds = %3, %12
  %13 = phi i64 [ %14, %12 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i64 %13, metadata !8779, metadata !DIExpression()), !dbg !8780
  %14 = add nuw i64 %13, 1, !dbg !8787
  call void @llvm.dbg.value(metadata i64 %14, metadata !8779, metadata !DIExpression()), !dbg !8780
  %15 = trunc i64 %13 to i32, !dbg !8789
  %16 = getelementptr inbounds i8, i8* %1, i32 %15, !dbg !8789
  %17 = load i8, i8* %16, align 1, !dbg !8789, !tbaa !2624
  call void @_ZN6Cicada14BufferedSerial12copyToBufferEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %17), !dbg !8790
  %18 = icmp ult i64 %14, %10, !dbg !8785
  br i1 %18, label %12, label %19, !dbg !8786, !llvm.loop !8791

19:                                               ; preds = %12, %3
  %20 = phi i64 [ 0, %3 ], [ %14, %12 ], !dbg !8780
  %21 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, !dbg !8793
  %22 = bitcast %"class.Cicada::ICommDevice"* %21 to void (%"class.Cicada::ICommDevice"*)***, !dbg !8793
  %23 = load void (%"class.Cicada::ICommDevice"*)**, void (%"class.Cicada::ICommDevice"*)*** %22, align 4, !dbg !8793, !tbaa !2568
  %24 = getelementptr inbounds void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %23, i32 9, !dbg !8793
  %25 = load void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %24, align 4, !dbg !8793
  call void %25(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %21) #34, !dbg !8793
  ret i64 %20, !dbg !8794
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i8 @_ZN6Cicada14BufferedSerial4readEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #4 align 2 !dbg !8795 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8797, metadata !DIExpression()), !dbg !8799
  call void @_Z18eDisableInterruptsv() #34, !dbg !8800
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !8801
  %3 = call noundef zeroext i8 @_ZN6Cicada18LineCircularBuffer4pullEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %2), !dbg !8802
  call void @llvm.dbg.value(metadata i8 %3, metadata !8798, metadata !DIExpression()), !dbg !8799
  call void @_Z17eEnableInterruptsv() #34, !dbg !8803
  ret i8 %3, !dbg !8804
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial5writeEPKh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8* nocapture noundef readonly %1) unnamed_addr #4 align 2 !dbg !8805 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8807, metadata !DIExpression()), !dbg !8811
  call void @llvm.dbg.value(metadata i8* %1, metadata !8808, metadata !DIExpression()), !dbg !8811
  %3 = bitcast %"class.Cicada::BufferedSerial"* %0 to i64 (%"class.Cicada::BufferedSerial"*)***, !dbg !8812
  %4 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %3, align 8, !dbg !8812, !tbaa !2568
  %5 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %4, i32 3, !dbg !8812
  %6 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %5, align 4, !dbg !8812
  %7 = call noundef i64 %6(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #34, !dbg !8812
  call void @llvm.dbg.value(metadata i64 %7, metadata !8809, metadata !DIExpression()), !dbg !8811
  call void @llvm.dbg.value(metadata i64 0, metadata !8810, metadata !DIExpression()), !dbg !8811
  %8 = load i8, i8* %1, align 1, !dbg !8813, !tbaa !2624
  %9 = icmp ne i8 %8, 0, !dbg !8814
  %10 = icmp ne i64 %7, 0, !dbg !8815
  %11 = and i1 %9, %10, !dbg !8815
  br i1 %11, label %12, label %22, !dbg !8816

12:                                               ; preds = %2, %12
  %13 = phi i8 [ %18, %12 ], [ %8, %2 ]
  %14 = phi i64 [ %15, %12 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i64 %14, metadata !8810, metadata !DIExpression()), !dbg !8811
  %15 = add nuw i64 %14, 1, !dbg !8817
  call void @llvm.dbg.value(metadata i64 %15, metadata !8810, metadata !DIExpression()), !dbg !8811
  call void @_ZN6Cicada14BufferedSerial12copyToBufferEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %13), !dbg !8819
  %16 = trunc i64 %15 to i32, !dbg !8813
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !8813
  %18 = load i8, i8* %17, align 1, !dbg !8813, !tbaa !2624
  %19 = icmp ne i8 %18, 0, !dbg !8814
  %20 = icmp ult i64 %15, %7, !dbg !8815
  %21 = select i1 %19, i1 %20, i1 false, !dbg !8815
  br i1 %21, label %12, label %22, !dbg !8816, !llvm.loop !8820

22:                                               ; preds = %12, %2
  %23 = phi i64 [ 0, %2 ], [ %15, %12 ], !dbg !8811
  %24 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, !dbg !8822
  %25 = bitcast %"class.Cicada::ICommDevice"* %24 to void (%"class.Cicada::ICommDevice"*)***, !dbg !8822
  %26 = load void (%"class.Cicada::ICommDevice"*)**, void (%"class.Cicada::ICommDevice"*)*** %25, align 4, !dbg !8822, !tbaa !2568
  %27 = getelementptr inbounds void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %26, i32 9, !dbg !8822
  %28 = load void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %27, align 4, !dbg !8822
  call void %28(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %24) #34, !dbg !8822
  ret i64 %23, !dbg !8823
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada14BufferedSerial5writeEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %1) unnamed_addr #4 align 2 !dbg !8824 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8826, metadata !DIExpression()), !dbg !8828
  call void @llvm.dbg.value(metadata i8 %1, metadata !8827, metadata !DIExpression()), !dbg !8828
  call void @_ZN6Cicada14BufferedSerial12copyToBufferEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %1), !dbg !8829
  %3 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, !dbg !8830
  %4 = bitcast %"class.Cicada::ICommDevice"* %3 to void (%"class.Cicada::ICommDevice"*)***, !dbg !8830
  %5 = load void (%"class.Cicada::ICommDevice"*)**, void (%"class.Cicada::ICommDevice"*)*** %4, align 4, !dbg !8830, !tbaa !2568
  %6 = getelementptr inbounds void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %5, i32 9, !dbg !8830
  %7 = load void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %6, align 4, !dbg !8830
  call void %7(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %3) #34, !dbg !8830
  ret void, !dbg !8831
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZNK6Cicada14BufferedSerial11canReadLineEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #4 align 2 !dbg !8832 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8834, metadata !DIExpression()), !dbg !8836
  call void @_Z18eDisableInterruptsv() #34, !dbg !8837
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !8838
  %3 = call noundef zeroext i16 @_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %2), !dbg !8839
  call void @llvm.dbg.value(metadata i16 %3, metadata !8835, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8836
  call void @_Z17eEnableInterruptsv() #34, !dbg !8840
  %4 = icmp ne i16 %3, 0, !dbg !8841
  ret i1 %4, !dbg !8842
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial8readLineEPhy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8* nocapture noundef writeonly %1, i64 noundef %2) unnamed_addr #4 align 2 !dbg !8843 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8845, metadata !DIExpression()), !dbg !8850
  call void @llvm.dbg.value(metadata i8* %1, metadata !8846, metadata !DIExpression()), !dbg !8850
  call void @llvm.dbg.value(metadata i64 %2, metadata !8847, metadata !DIExpression()), !dbg !8850
  call void @llvm.dbg.value(metadata i64 0, metadata !8848, metadata !DIExpression()), !dbg !8850
  call void @llvm.dbg.value(metadata i8 0, metadata !8849, metadata !DIExpression()), !dbg !8850
  %4 = icmp eq i64 %2, 0, !dbg !8851
  br i1 %4, label %39, label %5, !dbg !8853

5:                                                ; preds = %3
  %6 = bitcast %"class.Cicada::BufferedSerial"* %0 to i64 (%"class.Cicada::BufferedSerial"*)***
  call void @llvm.dbg.value(metadata i8 0, metadata !8849, metadata !DIExpression()), !dbg !8850
  call void @llvm.dbg.value(metadata i64 0, metadata !8848, metadata !DIExpression()), !dbg !8850
  %7 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %6, align 8, !dbg !8854, !tbaa !2568
  %8 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %7, i32 2, !dbg !8854
  %9 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %8, align 4, !dbg !8854
  %10 = call noundef i64 %9(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #34, !dbg !8854
  %11 = icmp eq i64 %10, 0, !dbg !8854
  br i1 %11, label %35, label %12, !dbg !8855

12:                                               ; preds = %5
  %13 = bitcast %"class.Cicada::BufferedSerial"* %0 to i8 (%"class.Cicada::BufferedSerial"*)***
  %14 = add i64 %2, -1
  br label %15, !dbg !8855

15:                                               ; preds = %12, %26
  %16 = phi i64 [ 0, %12 ], [ %27, %26 ]
  call void @llvm.dbg.value(metadata i64 %16, metadata !8848, metadata !DIExpression()), !dbg !8850
  %17 = load i8 (%"class.Cicada::BufferedSerial"*)**, i8 (%"class.Cicada::BufferedSerial"*)*** %13, align 8, !dbg !8856, !tbaa !2568
  %18 = getelementptr inbounds i8 (%"class.Cicada::BufferedSerial"*)*, i8 (%"class.Cicada::BufferedSerial"*)** %17, i32 7, !dbg !8856
  %19 = load i8 (%"class.Cicada::BufferedSerial"*)*, i8 (%"class.Cicada::BufferedSerial"*)** %18, align 4, !dbg !8856
  %20 = call noundef zeroext i8 %19(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #34, !dbg !8856
  call void @llvm.dbg.value(metadata i8 %20, metadata !8849, metadata !DIExpression()), !dbg !8850
  %21 = icmp ult i64 %16, %14, !dbg !8858
  br i1 %21, label %22, label %26, !dbg !8860

22:                                               ; preds = %15
  %23 = add i64 %16, 1, !dbg !8861
  call void @llvm.dbg.value(metadata i64 %23, metadata !8848, metadata !DIExpression()), !dbg !8850
  %24 = trunc i64 %16 to i32, !dbg !8863
  %25 = getelementptr inbounds i8, i8* %1, i32 %24, !dbg !8863
  store i8 %20, i8* %25, align 1, !dbg !8864, !tbaa !2624
  br label %26, !dbg !8865

26:                                               ; preds = %22, %15
  %27 = phi i64 [ %23, %22 ], [ %16, %15 ], !dbg !8850
  call void @llvm.dbg.value(metadata i8 %20, metadata !8849, metadata !DIExpression()), !dbg !8850
  call void @llvm.dbg.value(metadata i64 %27, metadata !8848, metadata !DIExpression()), !dbg !8850
  %28 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %6, align 8, !dbg !8854, !tbaa !2568
  %29 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %28, i32 2, !dbg !8854
  %30 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %29, align 4, !dbg !8854
  %31 = call noundef i64 %30(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #34, !dbg !8854
  %32 = icmp ne i64 %31, 0, !dbg !8854
  %33 = icmp ne i8 %20, 10, !dbg !8866
  %34 = and i1 %33, %32, !dbg !8866
  br i1 %34, label %15, label %35, !dbg !8855, !llvm.loop !8867

35:                                               ; preds = %26, %5
  %36 = phi i64 [ 0, %5 ], [ %27, %26 ], !dbg !8850
  %37 = trunc i64 %36 to i32, !dbg !8869
  %38 = getelementptr inbounds i8, i8* %1, i32 %37, !dbg !8869
  store i8 0, i8* %38, align 1, !dbg !8870, !tbaa !2624
  br label %39, !dbg !8871

39:                                               ; preds = %3, %35
  %40 = phi i64 [ %36, %35 ], [ 0, %3 ], !dbg !8850
  ret i64 %40, !dbg !8872
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #4 align 2 !dbg !8873 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8875, metadata !DIExpression()), !dbg !8876
  call void @_Z18eDisableInterruptsv() #34, !dbg !8877
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !8878
  call void @_ZN6Cicada18LineCircularBuffer5flushEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %2), !dbg !8879
  call void @_Z17eEnableInterruptsv() #34, !dbg !8880
  ret void, !dbg !8881
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial14readBufferSizeEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #4 align 2 !dbg !8882 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8884, metadata !DIExpression()), !dbg !8885
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !8886
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer.0"*, !dbg !8886
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE4sizeEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !8887
  ret i64 %4, !dbg !8888
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial15writeBufferSizeEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #4 align 2 !dbg !8889 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8891, metadata !DIExpression()), !dbg !8892
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !8893
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer.0"*, !dbg !8893
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE4sizeEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !8894
  ret i64 %4, !dbg !8895
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::BufferedSerial"* @_ZThn4_N6Cicada14BufferedSerialD1Ev(%"class.Cicada::BufferedSerial"* noundef %0) unnamed_addr #3 comdat align 2 !dbg !8896 {
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 -1, i32 2, i32 1, !dbg !8897
  %3 = bitcast i16* %2 to %"class.Cicada::BufferedSerial"*, !dbg !8897
  %4 = tail call noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialD2Ev(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %3) #34, !dbg !8897
  ret %"class.Cicada::BufferedSerial"* undef, !dbg !8897
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada14BufferedSerialD0Ev(%"class.Cicada::BufferedSerial"* noundef %0) unnamed_addr #3 comdat align 2 !dbg !8898 {
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 -1, i32 2, i32 1, !dbg !8899
  %3 = bitcast i16* %2 to %"class.Cicada::BufferedSerial"*, !dbg !8899
  tail call void @_ZN6Cicada14BufferedSerialD0Ev(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %3) #34, !dbg !8899
  ret void, !dbg !8899
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIcE4sizeEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !8900 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !8902, metadata !DIExpression()), !dbg !8903
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !8904
  %3 = load i64, i64* %2, align 8, !dbg !8904, !tbaa !8905
  ret i64 %3, !dbg !8906
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada18LineCircularBuffer5flushEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) unnamed_addr #4 comdat align 2 !dbg !8907 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !8909, metadata !DIExpression()), !dbg !8911
  %2 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !8912
  store i16 0, i16* %2, align 4, !dbg !8913, !tbaa !8914
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer.0"*, !dbg !8916
  call void @_ZN6Cicada14CircularBufferIcE5flushEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !8916
  ret void, !dbg !8917
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIcE5flushEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !8918 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !8920, metadata !DIExpression()), !dbg !8921
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 2, !dbg !8922
  %3 = bitcast i64* %2 to i8*, !dbg !8923
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %3, i8 0, i64 24, i1 false), !dbg !8924
  ret void, !dbg !8923
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i16 @_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) local_unnamed_addr #4 comdat align 2 !dbg !8925 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !8927, metadata !DIExpression()), !dbg !8929
  %2 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !8930
  %3 = load i16, i16* %2, align 4, !dbg !8930, !tbaa !8914
  ret i16 %3, !dbg !8931
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada14BufferedSerial12copyToBufferEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %1) local_unnamed_addr #4 align 2 !dbg !8932 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8934, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata i8 %1, metadata !8935, metadata !DIExpression()), !dbg !8936
  call void @_Z18eDisableInterruptsv() #34, !dbg !8937
  %3 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !8938
  call void @_ZN6Cicada18LineCircularBuffer4pushEc(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %3, i8 noundef zeroext %1), !dbg !8939
  call void @_Z17eEnableInterruptsv() #34, !dbg !8940
  ret void, !dbg !8941
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada18LineCircularBuffer4pushEc(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0, i8 noundef zeroext %1) unnamed_addr #4 comdat align 2 !dbg !8942 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !8944, metadata !DIExpression()), !dbg !8946
  call void @llvm.dbg.value(metadata i8 %1, metadata !8945, metadata !DIExpression()), !dbg !8946
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer.0"*, !dbg !8947
  call void @_ZN6Cicada14CircularBufferIcE4pushEc(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %3, i8 noundef zeroext %1), !dbg !8947
  %4 = icmp eq i8 %1, 10, !dbg !8948
  br i1 %4, label %5, label %9, !dbg !8950

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !8951
  %7 = load i16, i16* %6, align 4, !dbg !8953, !tbaa !8914
  %8 = add i16 %7, 1, !dbg !8953
  store i16 %8, i16* %6, align 4, !dbg !8953, !tbaa !8914
  br label %9, !dbg !8954

9:                                                ; preds = %5, %2
  ret void, !dbg !8955
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIcE4pushEc(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i8 noundef zeroext %1) unnamed_addr #4 comdat align 2 !dbg !8956 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !8958, metadata !DIExpression()), !dbg !8960
  call void @llvm.dbg.value(metadata i8 %1, metadata !8959, metadata !DIExpression()), !dbg !8960
  %3 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6, !dbg !8961
  %4 = load i8*, i8** %3, align 8, !dbg !8961, !tbaa !8962
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 2, !dbg !8963
  %6 = load i64, i64* %5, align 8, !dbg !8963, !tbaa !8964
  %7 = trunc i64 %6 to i32, !dbg !8961
  %8 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !8961
  store i8 %1, i8* %8, align 1, !dbg !8965, !tbaa !2624
  call void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %5), !dbg !8966
  %9 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !8967
  %10 = load i64, i64* %9, align 8, !dbg !8967, !tbaa !6950
  %11 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !8969
  %12 = load i64, i64* %11, align 8, !dbg !8969, !tbaa !8905
  %13 = icmp ult i64 %10, %12, !dbg !8970
  br i1 %13, label %14, label %16, !dbg !8971

14:                                               ; preds = %2
  %15 = add i64 %10, 1, !dbg !8972
  store i64 %15, i64* %9, align 8, !dbg !8972, !tbaa !6950
  br label %16, !dbg !8973

16:                                               ; preds = %14, %2
  ret void, !dbg !8974
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #4 comdat align 2 !dbg !8975 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !8977, metadata !DIExpression()), !dbg !8979
  call void @llvm.dbg.value(metadata i64* %1, metadata !8978, metadata !DIExpression()), !dbg !8979
  %3 = load i64, i64* %1, align 8, !dbg !8980, !tbaa !5521
  %4 = add i64 %3, 1, !dbg !8980
  store i64 %4, i64* %1, align 8, !dbg !8980, !tbaa !5521
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !8981
  %6 = load i64, i64* %5, align 8, !dbg !8981, !tbaa !8905
  %7 = icmp ult i64 %4, %6, !dbg !8983
  %8 = select i1 %7, i64 %4, i64 0, !dbg !8984
  store i64 %8, i64* %1, align 8, !dbg !8979
  ret void, !dbg !8985
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i8 @_ZN6Cicada18LineCircularBuffer4pullEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) unnamed_addr #4 comdat align 2 !dbg !8986 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !8988, metadata !DIExpression()), !dbg !8990
  %2 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer.0"*, !dbg !8991
  %3 = call noundef zeroext i8 @_ZN6Cicada14CircularBufferIcE4pullEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %2), !dbg !8991
  call void @llvm.dbg.value(metadata i8 %3, metadata !8989, metadata !DIExpression()), !dbg !8990
  %4 = icmp eq i8 %3, 10, !dbg !8992
  br i1 %4, label %5, label %9, !dbg !8994

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !8995
  %7 = load i16, i16* %6, align 4, !dbg !8997, !tbaa !8914
  %8 = add i16 %7, -1, !dbg !8997
  store i16 %8, i16* %6, align 4, !dbg !8997, !tbaa !8914
  br label %9, !dbg !8998

9:                                                ; preds = %5, %1
  ret i8 %3, !dbg !8999
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i8 @_ZN6Cicada14CircularBufferIcE4pullEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !9000 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !9002, metadata !DIExpression()), !dbg !9004
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6, !dbg !9005
  %3 = load i8*, i8** %2, align 8, !dbg !9005, !tbaa !8962
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 3, !dbg !9006
  %5 = load i64, i64* %4, align 8, !dbg !9006, !tbaa !9007
  %6 = trunc i64 %5 to i32, !dbg !9005
  %7 = getelementptr inbounds i8, i8* %3, i32 %6, !dbg !9005
  %8 = load i8, i8* %7, align 1, !dbg !9005, !tbaa !2624
  call void @llvm.dbg.value(metadata i8 %8, metadata !9003, metadata !DIExpression()), !dbg !9004
  call void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %4), !dbg !9008
  %9 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !9009
  %10 = load i64, i64* %9, align 8, !dbg !9009, !tbaa !6950
  %11 = icmp eq i64 %10, 0, !dbg !9011
  br i1 %11, label %14, label %12, !dbg !9012

12:                                               ; preds = %1
  %13 = add i64 %10, -1, !dbg !9013
  store i64 %13, i64* %9, align 8, !dbg !9013, !tbaa !6950
  br label %14, !dbg !9014

14:                                               ; preds = %12, %1
  ret i8 %8, !dbg !9015
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !9016 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !9018, metadata !DIExpression()), !dbg !9019
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !9020
  %3 = load i64, i64* %2, align 8, !dbg !9020, !tbaa !8905
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !9021
  %5 = load i64, i64* %4, align 8, !dbg !9021, !tbaa !6950
  %6 = sub i64 %3, %5, !dbg !9022
  ret i64 %6, !dbg !9023
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialC2EPcS1_yy(%"class.Cicada::BufferedSerial"* noundef nonnull returned align 8 dereferenceable(104) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4) unnamed_addr #3 align 2 !dbg !9024 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !9026, metadata !DIExpression()), !dbg !9031
  call void @llvm.dbg.value(metadata i8* %1, metadata !9027, metadata !DIExpression()), !dbg !9031
  call void @llvm.dbg.value(metadata i8* %2, metadata !9028, metadata !DIExpression()), !dbg !9031
  call void @llvm.dbg.value(metadata i64 %3, metadata !9029, metadata !DIExpression()), !dbg !9031
  call void @llvm.dbg.value(metadata i64 %4, metadata !9030, metadata !DIExpression()), !dbg !9031
  %6 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, !dbg !9032
  %7 = call noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialC2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %6) #34, !dbg !9033
  %8 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 0, i32 0, !dbg !9032
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada14BufferedSerialE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %8, align 8, !dbg !9032, !tbaa !2568
  %9 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, i32 0, !dbg !9032
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada14BufferedSerialE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %9, align 4, !dbg !9032, !tbaa !2568
  %10 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !9034
  %11 = call noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %10, i8* noundef %1, i64 noundef %3), !dbg !9034
  %12 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !9035
  %13 = call noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %12, i8* noundef %2, i64 noundef %4), !dbg !9035
  ret %"class.Cicada::BufferedSerial"* %0, !dbg !9036
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialC2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull returned align 4 dereferenceable(8) %0) unnamed_addr #3 comdat align 2 !dbg !9037 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %0, metadata !9040, metadata !DIExpression()), !dbg !9041
  %2 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 0, !dbg !9042
  %3 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %2) #34, !dbg !9042
  %4 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 1, !dbg !9042
  %5 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada7ISerialC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %4) #34, !dbg !9042
  %6 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 0, i32 0, !dbg !9042
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada15IBufferedSerialE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 4, !dbg !9042, !tbaa !2568
  %7 = getelementptr %"class.Cicada::ICommDevice", %"class.Cicada::ICommDevice"* %4, i32 0, i32 0, !dbg !9042
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada15IBufferedSerialE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %7, align 4, !dbg !9042, !tbaa !2568
  ret %"class.Cicada::IBufferedSerial"* %0, !dbg !9042
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull returned align 8 dereferenceable(46) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #3 comdat align 2 !dbg !9043 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !9045, metadata !DIExpression()), !dbg !9048
  call void @llvm.dbg.value(metadata i8* %1, metadata !9046, metadata !DIExpression()), !dbg !9048
  call void @llvm.dbg.value(metadata i64 %2, metadata !9047, metadata !DIExpression()), !dbg !9048
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer.0"*, !dbg !9049
  %5 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIcEC2EPcy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %4, i8* noundef %1, i64 noundef %2), !dbg !9050
  %6 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 0, i32 0, !dbg !9049
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6Cicada18LineCircularBufferE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 8, !dbg !9049, !tbaa !2568
  %7 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !9051
  store i16 0, i16* %7, align 4, !dbg !9051, !tbaa !8914
  ret %"class.Cicada::LineCircularBuffer"* %0, !dbg !9052
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIcEC2EPcy(%"class.Cicada::CircularBuffer.0"* noundef nonnull returned align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #3 comdat align 2 !dbg !9053 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !9055, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata i8* %1, metadata !9056, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata i64 %2, metadata !9057, metadata !DIExpression()), !dbg !9058
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 0, !dbg !9059
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6Cicada14CircularBufferIcEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8, !dbg !9059, !tbaa !2568
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 2, !dbg !9060
  %6 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !9061
  %7 = bitcast i64* %5 to i8*, !dbg !9061
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false), !dbg !9062
  store i64 %2, i64* %6, align 8, !dbg !9061, !tbaa !8905
  %8 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6, !dbg !9063
  store i8* %1, i8** %8, align 8, !dbg !9063, !tbaa !8962
  ret %"class.Cicada::CircularBuffer.0"* %0, !dbg !9064
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada18LineCircularBufferD0Ev(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) unnamed_addr #3 comdat align 2 !dbg !9065 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !9068, metadata !DIExpression()), !dbg !9069
  %2 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer.0"*, !dbg !9070
  %3 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(46) %2) #34, !dbg !9070
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to i8*, !dbg !9070
  call void @_ZdlPv(i8* noundef %4) #35, !dbg !9070
  ret void, !dbg !9070
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada18LineCircularBuffer4pushEPKcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #4 comdat align 2 !dbg !9071 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !9073, metadata !DIExpression()), !dbg !9077
  call void @llvm.dbg.value(metadata i8* %1, metadata !9074, metadata !DIExpression()), !dbg !9077
  call void @llvm.dbg.value(metadata i64 %2, metadata !9075, metadata !DIExpression()), !dbg !9077
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer.0"*, !dbg !9078
  %5 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !9078
  %6 = icmp ult i64 %5, %2, !dbg !9080
  br i1 %6, label %7, label %9, !dbg !9081

7:                                                ; preds = %3
  %8 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !9082
  call void @llvm.dbg.value(metadata i64 %8, metadata !9075, metadata !DIExpression()), !dbg !9077
  br label %9, !dbg !9083

9:                                                ; preds = %7, %3
  %10 = phi i64 [ %8, %7 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %10, metadata !9075, metadata !DIExpression()), !dbg !9077
  call void @llvm.dbg.value(metadata i64 0, metadata !9076, metadata !DIExpression()), !dbg !9077
  %11 = icmp eq i64 %10, 0, !dbg !9084
  br i1 %11, label %24, label %12, !dbg !9085

12:                                               ; preds = %9
  %13 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to void (%"class.Cicada::LineCircularBuffer"*, i8)***
  br label %14, !dbg !9085

14:                                               ; preds = %12, %14
  %15 = phi i64 [ 0, %12 ], [ %16, %14 ]
  call void @llvm.dbg.value(metadata i64 %15, metadata !9076, metadata !DIExpression()), !dbg !9077
  %16 = add nuw i64 %15, 1, !dbg !9086
  call void @llvm.dbg.value(metadata i64 %16, metadata !9076, metadata !DIExpression()), !dbg !9077
  %17 = trunc i64 %15 to i32, !dbg !9088
  %18 = getelementptr inbounds i8, i8* %1, i32 %17, !dbg !9088
  %19 = load i8, i8* %18, align 1, !dbg !9088, !tbaa !2624
  %20 = load void (%"class.Cicada::LineCircularBuffer"*, i8)**, void (%"class.Cicada::LineCircularBuffer"*, i8)*** %13, align 8, !dbg !9089, !tbaa !2568
  %21 = getelementptr inbounds void (%"class.Cicada::LineCircularBuffer"*, i8)*, void (%"class.Cicada::LineCircularBuffer"*, i8)** %20, i32 3, !dbg !9089
  %22 = load void (%"class.Cicada::LineCircularBuffer"*, i8)*, void (%"class.Cicada::LineCircularBuffer"*, i8)** %21, align 4, !dbg !9089
  call void %22(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0, i8 noundef zeroext %19) #34, !dbg !9089
  %23 = icmp ult i64 %16, %10, !dbg !9084
  br i1 %23, label %14, label %24, !dbg !9085, !llvm.loop !9090

24:                                               ; preds = %14, %9
  %25 = phi i64 [ 0, %9 ], [ %10, %14 ], !dbg !9077
  ret i64 %25, !dbg !9092
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada18LineCircularBuffer4pullEPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #4 comdat align 2 !dbg !9093 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !9095, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i8* %1, metadata !9096, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i64 %2, metadata !9097, metadata !DIExpression()), !dbg !9099
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer.0"*, !dbg !9100
  %5 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !9100
  %6 = icmp ult i64 %5, %2, !dbg !9102
  br i1 %6, label %7, label %9, !dbg !9103

7:                                                ; preds = %3
  %8 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !9104
  call void @llvm.dbg.value(metadata i64 %8, metadata !9097, metadata !DIExpression()), !dbg !9099
  br label %9, !dbg !9105

9:                                                ; preds = %7, %3
  %10 = phi i64 [ %8, %7 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %10, metadata !9097, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i64 0, metadata !9098, metadata !DIExpression()), !dbg !9099
  %11 = icmp eq i64 %10, 0, !dbg !9106
  br i1 %11, label %24, label %12, !dbg !9107

12:                                               ; preds = %9
  %13 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to i8 (%"class.Cicada::LineCircularBuffer"*)***
  br label %14, !dbg !9107

14:                                               ; preds = %12, %14
  %15 = phi i64 [ 0, %12 ], [ %20, %14 ]
  call void @llvm.dbg.value(metadata i64 %15, metadata !9098, metadata !DIExpression()), !dbg !9099
  %16 = load i8 (%"class.Cicada::LineCircularBuffer"*)**, i8 (%"class.Cicada::LineCircularBuffer"*)*** %13, align 8, !dbg !9108, !tbaa !2568
  %17 = getelementptr inbounds i8 (%"class.Cicada::LineCircularBuffer"*)*, i8 (%"class.Cicada::LineCircularBuffer"*)** %16, i32 5, !dbg !9108
  %18 = load i8 (%"class.Cicada::LineCircularBuffer"*)*, i8 (%"class.Cicada::LineCircularBuffer"*)** %17, align 4, !dbg !9108
  %19 = call noundef zeroext i8 %18(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) #34, !dbg !9108
  %20 = add nuw i64 %15, 1, !dbg !9110
  call void @llvm.dbg.value(metadata i64 %20, metadata !9098, metadata !DIExpression()), !dbg !9099
  %21 = trunc i64 %15 to i32, !dbg !9111
  %22 = getelementptr inbounds i8, i8* %1, i32 %21, !dbg !9111
  store i8 %19, i8* %22, align 1, !dbg !9112, !tbaa !2624
  %23 = icmp ult i64 %20, %10, !dbg !9106
  br i1 %23, label %14, label %24, !dbg !9107, !llvm.loop !9113

24:                                               ; preds = %14, %9
  %25 = phi i64 [ 0, %9 ], [ %10, %14 ], !dbg !9099
  ret i64 %25, !dbg !9115
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i8 @_ZN6Cicada14CircularBufferIcE4readEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !9116 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !9118, metadata !DIExpression()), !dbg !9119
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6, !dbg !9120
  %3 = load i8*, i8** %2, align 8, !dbg !9120, !tbaa !8962
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 3, !dbg !9121
  %5 = load i64, i64* %4, align 8, !dbg !9121, !tbaa !9007
  %6 = trunc i64 %5 to i32, !dbg !9120
  %7 = getelementptr inbounds i8, i8* %3, i32 %6, !dbg !9120
  %8 = load i8, i8* %7, align 1, !dbg !9120, !tbaa !2624
  ret i8 %8, !dbg !9122
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i1 @_ZNK6Cicada14CircularBufferIcE7isEmptyEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !9123 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !9125, metadata !DIExpression()), !dbg !9126
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !9127
  %3 = load i64, i64* %2, align 8, !dbg !9127, !tbaa !6950
  %4 = icmp eq i64 %3, 0, !dbg !9128
  ret i1 %4, !dbg !9129
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i1 @_ZNK6Cicada14CircularBufferIcE6isFullEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !9130 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !9132, metadata !DIExpression()), !dbg !9133
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !9134
  %3 = load i64, i64* %2, align 8, !dbg !9134, !tbaa !6950
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !9135
  %5 = load i64, i64* %4, align 8, !dbg !9135, !tbaa !8905
  %6 = icmp eq i64 %3, %5, !dbg !9136
  ret i1 %6, !dbg !9137
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIcED0Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #3 comdat align 2 !dbg !9138 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !9140, metadata !DIExpression()), !dbg !9141
  %2 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #34, !dbg !9142
  %3 = bitcast %"class.Cicada::CircularBuffer.0"* %0 to i8*, !dbg !9142
  call void @_ZdlPv(i8* noundef %3) #35, !dbg !9142
  ret void, !dbg !9143
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada14CircularBufferIcE4pushEPKcy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #4 comdat align 2 !dbg !9144 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !9146, metadata !DIExpression()), !dbg !9150
  call void @llvm.dbg.value(metadata i8* %1, metadata !9147, metadata !DIExpression()), !dbg !9150
  call void @llvm.dbg.value(metadata i64 %2, metadata !9148, metadata !DIExpression()), !dbg !9150
  %4 = bitcast %"class.Cicada::CircularBuffer.0"* %0 to i64 (%"class.Cicada::CircularBuffer.0"*)***, !dbg !9151
  %5 = load i64 (%"class.Cicada::CircularBuffer.0"*)**, i64 (%"class.Cicada::CircularBuffer.0"*)*** %4, align 8, !dbg !9151, !tbaa !2568
  %6 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %5, i32 11, !dbg !9151
  %7 = load i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %6, align 4, !dbg !9151
  %8 = call noundef i64 %7(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #34, !dbg !9151
  %9 = icmp ult i64 %8, %2, !dbg !9153
  br i1 %9, label %10, label %15, !dbg !9154

10:                                               ; preds = %3
  %11 = load i64 (%"class.Cicada::CircularBuffer.0"*)**, i64 (%"class.Cicada::CircularBuffer.0"*)*** %4, align 8, !dbg !9155, !tbaa !2568
  %12 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %11, i32 11, !dbg !9155
  %13 = load i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %12, align 4, !dbg !9155
  %14 = call noundef i64 %13(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #34, !dbg !9155
  call void @llvm.dbg.value(metadata i64 %14, metadata !9148, metadata !DIExpression()), !dbg !9150
  br label %15, !dbg !9156

15:                                               ; preds = %10, %3
  %16 = phi i64 [ %14, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %16, metadata !9148, metadata !DIExpression()), !dbg !9150
  call void @llvm.dbg.value(metadata i64 0, metadata !9149, metadata !DIExpression()), !dbg !9150
  %17 = icmp eq i64 %16, 0, !dbg !9157
  br i1 %17, label %32, label %18, !dbg !9158

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6
  %20 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 2
  br label %21, !dbg !9158

21:                                               ; preds = %18, %21
  %22 = phi i64 [ 0, %18 ], [ %23, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !9149, metadata !DIExpression()), !dbg !9150
  %23 = add nuw i64 %22, 1, !dbg !9159
  call void @llvm.dbg.value(metadata i64 %23, metadata !9149, metadata !DIExpression()), !dbg !9150
  %24 = trunc i64 %22 to i32, !dbg !9161
  %25 = getelementptr inbounds i8, i8* %1, i32 %24, !dbg !9161
  %26 = load i8, i8* %25, align 1, !dbg !9161, !tbaa !2624
  %27 = load i8*, i8** %19, align 8, !dbg !9162, !tbaa !8962
  %28 = load i64, i64* %20, align 8, !dbg !9163, !tbaa !8964
  %29 = trunc i64 %28 to i32, !dbg !9162
  %30 = getelementptr inbounds i8, i8* %27, i32 %29, !dbg !9162
  store i8 %26, i8* %30, align 1, !dbg !9164, !tbaa !2624
  call void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %20), !dbg !9165
  %31 = icmp ult i64 %23, %16, !dbg !9157
  br i1 %31, label %21, label %32, !dbg !9158, !llvm.loop !9166

32:                                               ; preds = %21, %15
  %33 = phi i64 [ 0, %15 ], [ %16, %21 ], !dbg !9150
  %34 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !9168
  %35 = load i64, i64* %34, align 8, !dbg !9169, !tbaa !6950
  %36 = add i64 %35, %33, !dbg !9169
  store i64 %36, i64* %34, align 8, !dbg !9169, !tbaa !6950
  ret i64 %33, !dbg !9170
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada14CircularBufferIcE4pullEPcy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #4 comdat align 2 !dbg !9171 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !9173, metadata !DIExpression()), !dbg !9177
  call void @llvm.dbg.value(metadata i8* %1, metadata !9174, metadata !DIExpression()), !dbg !9177
  call void @llvm.dbg.value(metadata i64 %2, metadata !9175, metadata !DIExpression()), !dbg !9177
  %4 = bitcast %"class.Cicada::CircularBuffer.0"* %0 to i64 (%"class.Cicada::CircularBuffer.0"*)***, !dbg !9178
  %5 = load i64 (%"class.Cicada::CircularBuffer.0"*)**, i64 (%"class.Cicada::CircularBuffer.0"*)*** %4, align 8, !dbg !9178, !tbaa !2568
  %6 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %5, i32 10, !dbg !9178
  %7 = load i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %6, align 4, !dbg !9178
  %8 = call noundef i64 %7(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #34, !dbg !9178
  %9 = icmp ult i64 %8, %2, !dbg !9180
  br i1 %9, label %10, label %15, !dbg !9181

10:                                               ; preds = %3
  %11 = load i64 (%"class.Cicada::CircularBuffer.0"*)**, i64 (%"class.Cicada::CircularBuffer.0"*)*** %4, align 8, !dbg !9182, !tbaa !2568
  %12 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %11, i32 10, !dbg !9182
  %13 = load i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %12, align 4, !dbg !9182
  %14 = call noundef i64 %13(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #34, !dbg !9182
  call void @llvm.dbg.value(metadata i64 %14, metadata !9175, metadata !DIExpression()), !dbg !9177
  br label %15, !dbg !9183

15:                                               ; preds = %10, %3
  %16 = phi i64 [ %14, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %16, metadata !9175, metadata !DIExpression()), !dbg !9177
  call void @llvm.dbg.value(metadata i64 0, metadata !9176, metadata !DIExpression()), !dbg !9177
  %17 = icmp eq i64 %16, 0, !dbg !9184
  br i1 %17, label %32, label %18, !dbg !9185

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6
  %20 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 3
  br label %21, !dbg !9185

21:                                               ; preds = %18, %21
  %22 = phi i64 [ 0, %18 ], [ %28, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !9176, metadata !DIExpression()), !dbg !9177
  %23 = load i8*, i8** %19, align 8, !dbg !9186, !tbaa !8962
  %24 = load i64, i64* %20, align 8, !dbg !9188, !tbaa !9007
  %25 = trunc i64 %24 to i32, !dbg !9186
  %26 = getelementptr inbounds i8, i8* %23, i32 %25, !dbg !9186
  %27 = load i8, i8* %26, align 1, !dbg !9186, !tbaa !2624
  %28 = add nuw i64 %22, 1, !dbg !9189
  call void @llvm.dbg.value(metadata i64 %28, metadata !9176, metadata !DIExpression()), !dbg !9177
  %29 = trunc i64 %22 to i32, !dbg !9190
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !9190
  store i8 %27, i8* %30, align 1, !dbg !9191, !tbaa !2624
  call void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %20), !dbg !9192
  %31 = icmp ult i64 %28, %16, !dbg !9184
  br i1 %31, label %21, label %32, !dbg !9185, !llvm.loop !9193

32:                                               ; preds = %21, %15
  %33 = phi i64 [ 0, %15 ], [ %16, %21 ], !dbg !9177
  %34 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !9195
  %35 = load i64, i64* %34, align 8, !dbg !9196, !tbaa !6950
  %36 = sub i64 %35, %33, !dbg !9196
  store i64 %36, i64* %34, align 8, !dbg !9196, !tbaa !6950
  ret i64 %33, !dbg !9197
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada7ISerialC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #3 comdat align 2 !dbg !9198 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !9201, metadata !DIExpression()), !dbg !9202
  %2 = getelementptr inbounds %"class.Cicada::ICommDevice", %"class.Cicada::ICommDevice"* %0, i32 0, i32 0, !dbg !9203
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN6Cicada7ISerialE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %2, align 4, !dbg !9203, !tbaa !2568
  ret %"class.Cicada::ICommDevice"* %0, !dbg !9203
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada15IBufferedSerialD0Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %0) unnamed_addr #3 comdat align 2 !dbg !9204 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %0, metadata !9206, metadata !DIExpression()), !dbg !9207
  call void @llvm.trap() #36, !dbg !9208
  unreachable, !dbg !9208
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IBufferedSerial"* @_ZThn4_N6Cicada15IBufferedSerialD1Ev(%"class.Cicada::IBufferedSerial"* noundef %0) unnamed_addr #3 comdat align 2 !dbg !9209 {
  %2 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 -1, i32 1, !dbg !9210
  %3 = bitcast %"class.Cicada::ICommDevice"* %2 to %"class.Cicada::IBufferedSerial"*, !dbg !9210
  %4 = tail call noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialD2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %3) #34, !dbg !9210
  ret %"class.Cicada::IBufferedSerial"* undef, !dbg !9210
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada15IBufferedSerialD0Ev(%"class.Cicada::IBufferedSerial"* noundef %0) unnamed_addr #3 comdat align 2 !dbg !9211 {
  %2 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 -1, i32 1, !dbg !9212
  %3 = bitcast %"class.Cicada::ICommDevice"* %2 to %"class.Cicada::IBufferedSerial"*, !dbg !9212
  tail call void @_ZN6Cicada15IBufferedSerialD0Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %3) #34, !dbg !9212
  ret void, !dbg !9212
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada7ISerialD0Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %0) unnamed_addr #3 comdat align 2 !dbg !9213 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !9215, metadata !DIExpression()), !dbg !9216
  call void @llvm.trap() #36, !dbg !9217
  unreachable, !dbg !9217
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialC2EPcS1_y(%"class.Cicada::BufferedSerial"* noundef nonnull returned align 8 dereferenceable(104) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3) unnamed_addr #3 align 2 !dbg !9218 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !9220, metadata !DIExpression()), !dbg !9224
  call void @llvm.dbg.value(metadata i8* %1, metadata !9221, metadata !DIExpression()), !dbg !9224
  call void @llvm.dbg.value(metadata i8* %2, metadata !9222, metadata !DIExpression()), !dbg !9224
  call void @llvm.dbg.value(metadata i64 %3, metadata !9223, metadata !DIExpression()), !dbg !9224
  %5 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, !dbg !9225
  %6 = call noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialC2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %5) #34, !dbg !9226
  %7 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 0, i32 0, !dbg !9225
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada14BufferedSerialE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %7, align 8, !dbg !9225, !tbaa !2568
  %8 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, i32 0, !dbg !9225
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada14BufferedSerialE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %8, align 4, !dbg !9225, !tbaa !2568
  %9 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !9227
  %10 = call noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %9, i8* noundef %1, i64 noundef %3), !dbg !9227
  %11 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !9228
  %12 = call noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %11, i8* noundef %2, i64 noundef %3), !dbg !9228
  ret %"class.Cicada::BufferedSerial"* %0, !dbg !9229
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada14BufferedSerial23transferToAndFromBufferEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) local_unnamed_addr #4 align 2 !dbg !9230 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !9232, metadata !DIExpression()), !dbg !9234
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #34, !dbg !9235
  %3 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, !dbg !9236
  %4 = bitcast %"class.Cicada::ICommDevice"* %3 to i1 (%"class.Cicada::ICommDevice"*, i8*)***, !dbg !9236
  %5 = load i1 (%"class.Cicada::ICommDevice"*, i8*)**, i1 (%"class.Cicada::ICommDevice"*, i8*)*** %4, align 4, !dbg !9236, !tbaa !2568
  %6 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*, i8*)*, i1 (%"class.Cicada::ICommDevice"*, i8*)** %5, i32 7, !dbg !9236
  %7 = load i1 (%"class.Cicada::ICommDevice"*, i8*)*, i1 (%"class.Cicada::ICommDevice"*, i8*)** %6, align 4, !dbg !9236
  call void @llvm.dbg.value(metadata i8* %2, metadata !9233, metadata !DIExpression(DW_OP_deref)), !dbg !9234
  %8 = call noundef zeroext i1 %7(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %3, i8* noundef nonnull align 1 dereferenceable(1) %2) #34, !dbg !9236
  br i1 %8, label %9, label %15, !dbg !9238

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !9239
  %11 = bitcast %"class.Cicada::LineCircularBuffer"* %10 to %"class.Cicada::CircularBuffer.0"*, !dbg !9239
  %12 = call noundef zeroext i1 @_ZNK6Cicada14CircularBufferIcE6isFullEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %11), !dbg !9240
  br i1 %12, label %15, label %13, !dbg !9241

13:                                               ; preds = %9
  %14 = load i8, i8* %2, align 1, !dbg !9242, !tbaa !2624
  call void @llvm.dbg.value(metadata i8 %14, metadata !9233, metadata !DIExpression()), !dbg !9234
  call void @_ZN6Cicada18LineCircularBuffer4pushEc(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %10, i8 noundef zeroext %14), !dbg !9244
  br label %15, !dbg !9245

15:                                               ; preds = %13, %9, %1
  %16 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !9246
  %17 = bitcast %"class.Cicada::LineCircularBuffer"* %16 to %"class.Cicada::CircularBuffer.0"*, !dbg !9246
  %18 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %17), !dbg !9248
  %19 = icmp eq i64 %18, 0, !dbg !9246
  br i1 %19, label %29, label %20, !dbg !9249

20:                                               ; preds = %15
  %21 = call noundef zeroext i8 @_ZN6Cicada14CircularBufferIcE4readEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %17), !dbg !9250
  %22 = bitcast %"class.Cicada::ICommDevice"* %3 to i1 (%"class.Cicada::ICommDevice"*, i8)***, !dbg !9253
  %23 = load i1 (%"class.Cicada::ICommDevice"*, i8)**, i1 (%"class.Cicada::ICommDevice"*, i8)*** %22, align 4, !dbg !9253, !tbaa !2568
  %24 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*, i8)*, i1 (%"class.Cicada::ICommDevice"*, i8)** %23, i32 8, !dbg !9253
  %25 = load i1 (%"class.Cicada::ICommDevice"*, i8)*, i1 (%"class.Cicada::ICommDevice"*, i8)** %24, align 4, !dbg !9253
  %26 = call noundef zeroext i1 %25(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %3, i8 noundef zeroext %21) #34, !dbg !9253
  br i1 %26, label %27, label %29, !dbg !9254

27:                                               ; preds = %20
  %28 = call noundef zeroext i8 @_ZN6Cicada18LineCircularBuffer4pullEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %16), !dbg !9255
  br label %29, !dbg !9257

29:                                               ; preds = %20, %27, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #34, !dbg !9258
  ret void, !dbg !9258
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_Z18eDisableInterruptsv() local_unnamed_addr #4 !dbg !9259 {
  call void asm sideeffect "cpsid i", "~{memory}"() #34, !dbg !9260, !srcloc !9263
  ret void, !dbg !9264
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_Z17eEnableInterruptsv() local_unnamed_addr #4 !dbg !9265 {
  call void asm sideeffect "cpsie i", "~{memory}"() #34, !dbg !9266, !srcloc !9269
  ret void, !dbg !9270
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Init(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !9271 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9275, metadata !DIExpression()), !dbg !9276
  %2 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !9277
  br i1 %2, label %27, label %3, !dbg !9279

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9280
  %5 = load volatile i32, i32* %4, align 4, !dbg !9280, !tbaa !9282
  %6 = icmp eq i32 %5, 0, !dbg !9285
  br i1 %6, label %7, label %9, !dbg !9286

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9287
  store i32 0, i32* %8, align 4, !dbg !9289, !tbaa !9290
  call void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !9291
  br label %9, !dbg !9292

9:                                                ; preds = %7, %3
  store volatile i32 36, i32* %4, align 4, !dbg !9293, !tbaa !9282
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9294
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %10, align 4, !dbg !9294, !tbaa !9295
  %12 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %11, i32 0, i32 3, !dbg !9294
  %13 = load volatile i32, i32* %12, align 4, !dbg !9294, !tbaa !5168
  %14 = and i32 %13, -8193, !dbg !9294
  store volatile i32 %14, i32* %12, align 4, !dbg !9294, !tbaa !5168
  call fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !9296
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %10, align 4, !dbg !9297, !tbaa !9295
  %16 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 4, !dbg !9297
  %17 = load volatile i32, i32* %16, align 4, !dbg !9297, !tbaa !5051
  %18 = and i32 %17, -18433, !dbg !9297
  store volatile i32 %18, i32* %16, align 4, !dbg !9297, !tbaa !5051
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 5, !dbg !9298
  %20 = load volatile i32, i32* %19, align 4, !dbg !9298, !tbaa !5056
  %21 = and i32 %20, -43, !dbg !9298
  store volatile i32 %21, i32* %19, align 4, !dbg !9298, !tbaa !5056
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 3, !dbg !9299
  %23 = load volatile i32, i32* %22, align 4, !dbg !9299, !tbaa !5168
  %24 = or i32 %23, 8192, !dbg !9299
  store volatile i32 %24, i32* %22, align 4, !dbg !9299, !tbaa !5168
  %25 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !9300
  store volatile i32 0, i32* %25, align 4, !dbg !9301, !tbaa !9302
  store volatile i32 32, i32* %4, align 4, !dbg !9303, !tbaa !9282
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !9304
  store volatile i32 32, i32* %26, align 4, !dbg !9305, !tbaa !9306
  br label %27, !dbg !9307

27:                                               ; preds = %1, %9
  %28 = phi i32 [ 0, %9 ], [ 1, %1 ], !dbg !9276
  ret i32 %28, !dbg !9308
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !9309 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9313, metadata !DIExpression()), !dbg !9314
  ret void, !dbg !9315
}

; Function Attrs: noinline nounwind
define internal fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* nocapture noundef readonly %0) unnamed_addr #3 !dbg !9316 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9318, metadata !DIExpression()), !dbg !9321
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9322
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !9322, !tbaa !9295
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 4, !dbg !9322
  %5 = load volatile i32, i32* %4, align 4, !dbg !9322, !tbaa !5051
  %6 = and i32 %5, -12289, !dbg !9322
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 2, !dbg !9322
  %8 = load i32, i32* %7, align 4, !dbg !9322, !tbaa !9323
  %9 = or i32 %6, %8, !dbg !9322
  store volatile i32 %9, i32* %4, align 4, !dbg !9322, !tbaa !5051
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9324
  %11 = load i32, i32* %10, align 4, !dbg !9324, !tbaa !9325
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3, !dbg !9326
  %13 = load i32, i32* %12, align 4, !dbg !9326, !tbaa !9327
  %14 = or i32 %13, %11, !dbg !9328
  %15 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 4, !dbg !9329
  %16 = load i32, i32* %15, align 4, !dbg !9329, !tbaa !9330
  %17 = or i32 %14, %16, !dbg !9331
  call void @llvm.dbg.value(metadata i32 %17, metadata !9319, metadata !DIExpression()), !dbg !9321
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !9332
  %19 = load volatile i32, i32* %18, align 4, !dbg !9332, !tbaa !5168
  %20 = and i32 %19, -5645, !dbg !9332
  %21 = or i32 %17, %20, !dbg !9332
  store volatile i32 %21, i32* %18, align 4, !dbg !9332, !tbaa !5168
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !9333
  %23 = load volatile i32, i32* %22, align 4, !dbg !9333, !tbaa !5056
  %24 = and i32 %23, -769, !dbg !9333
  %25 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 5, !dbg !9333
  %26 = load i32, i32* %25, align 4, !dbg !9333, !tbaa !9334
  %27 = or i32 %24, %26, !dbg !9333
  store volatile i32 %27, i32* %22, align 4, !dbg !9333, !tbaa !5056
  %28 = icmp eq %struct.USART_TypeDef* %3, inttoptr (i32 1073821696 to %struct.USART_TypeDef*), !dbg !9335
  br i1 %28, label %29, label %31, !dbg !9337

29:                                               ; preds = %1
  %30 = call i32 @HAL_RCC_GetPCLK2Freq() #34, !dbg !9338
  call void @llvm.dbg.value(metadata i32 %30, metadata !9320, metadata !DIExpression()), !dbg !9321
  br label %33, !dbg !9340

31:                                               ; preds = %1
  %32 = call i32 @HAL_RCC_GetPCLK1Freq() #34, !dbg !9341
  call void @llvm.dbg.value(metadata i32 %32, metadata !9320, metadata !DIExpression()), !dbg !9321
  br label %33

33:                                               ; preds = %31, %29
  %34 = phi i32 [ %32, %31 ], [ %30, %29 ]
  %35 = mul i32 %34, 25, !dbg !9343
  %36 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9343
  %37 = load i32, i32* %36, align 4, !dbg !9343, !tbaa !9344
  %38 = shl i32 %37, 2, !dbg !9343
  %39 = udiv i32 %35, %38, !dbg !9343
  %40 = udiv i32 %39, 100, !dbg !9343
  %41 = shl nuw nsw i32 %40, 4, !dbg !9343
  %42 = mul i32 %40, -100, !dbg !9343
  %43 = add i32 %42, %39, !dbg !9343
  %44 = shl i32 %43, 4, !dbg !9343
  %45 = add i32 %44, 50, !dbg !9343
  %46 = udiv i32 %45, 100, !dbg !9343
  %47 = and i32 %46, 240, !dbg !9343
  %48 = add nuw nsw i32 %47, %41, !dbg !9343
  %49 = and i32 %46, 15, !dbg !9343
  %50 = or i32 %48, %49, !dbg !9343
  %51 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !9343, !tbaa !9295
  %52 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %51, i32 0, i32 2, !dbg !9343
  store volatile i32 %50, i32* %52, align 4, !dbg !9343, !tbaa !5186
  ret void, !dbg !9345
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_HalfDuplex_Init(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !9346 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9348, metadata !DIExpression()), !dbg !9349
  %2 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !9350
  br i1 %2, label %29, label %3, !dbg !9352

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9353
  %5 = load volatile i32, i32* %4, align 4, !dbg !9353, !tbaa !9282
  %6 = icmp eq i32 %5, 0, !dbg !9355
  br i1 %6, label %7, label %9, !dbg !9356

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9357
  store i32 0, i32* %8, align 4, !dbg !9359, !tbaa !9290
  call void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !9360
  br label %9, !dbg !9361

9:                                                ; preds = %7, %3
  store volatile i32 36, i32* %4, align 4, !dbg !9362, !tbaa !9282
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9363
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %10, align 4, !dbg !9363, !tbaa !9295
  %12 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %11, i32 0, i32 3, !dbg !9363
  %13 = load volatile i32, i32* %12, align 4, !dbg !9363, !tbaa !5168
  %14 = and i32 %13, -8193, !dbg !9363
  store volatile i32 %14, i32* %12, align 4, !dbg !9363, !tbaa !5168
  call fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !9364
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %10, align 4, !dbg !9365, !tbaa !9295
  %16 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 4, !dbg !9365
  %17 = load volatile i32, i32* %16, align 4, !dbg !9365, !tbaa !5051
  %18 = and i32 %17, -18433, !dbg !9365
  store volatile i32 %18, i32* %16, align 4, !dbg !9365, !tbaa !5051
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 5, !dbg !9366
  %20 = load volatile i32, i32* %19, align 4, !dbg !9366, !tbaa !5056
  %21 = and i32 %20, -35, !dbg !9366
  store volatile i32 %21, i32* %19, align 4, !dbg !9366, !tbaa !5056
  %22 = load volatile i32, i32* %19, align 4, !dbg !9367, !tbaa !5056
  %23 = or i32 %22, 8, !dbg !9367
  store volatile i32 %23, i32* %19, align 4, !dbg !9367, !tbaa !5056
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 3, !dbg !9368
  %25 = load volatile i32, i32* %24, align 4, !dbg !9368, !tbaa !5168
  %26 = or i32 %25, 8192, !dbg !9368
  store volatile i32 %26, i32* %24, align 4, !dbg !9368, !tbaa !5168
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !9369
  store volatile i32 0, i32* %27, align 4, !dbg !9370, !tbaa !9302
  store volatile i32 32, i32* %4, align 4, !dbg !9371, !tbaa !9282
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !9372
  store volatile i32 32, i32* %28, align 4, !dbg !9373, !tbaa !9306
  br label %29, !dbg !9374

29:                                               ; preds = %1, %9
  %30 = phi i32 [ 0, %9 ], [ 1, %1 ], !dbg !9349
  ret i32 %30, !dbg !9375
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_LIN_Init(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !9376 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9380, metadata !DIExpression()), !dbg !9382
  call void @llvm.dbg.value(metadata i32 %1, metadata !9381, metadata !DIExpression()), !dbg !9382
  %3 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !9383
  br i1 %3, label %34, label %4, !dbg !9385

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9386
  %6 = load volatile i32, i32* %5, align 4, !dbg !9386, !tbaa !9282
  %7 = icmp eq i32 %6, 0, !dbg !9388
  br i1 %7, label %8, label %10, !dbg !9389

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9390
  store i32 0, i32* %9, align 4, !dbg !9392, !tbaa !9290
  call void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !9393
  br label %10, !dbg !9394

10:                                               ; preds = %8, %4
  store volatile i32 36, i32* %5, align 4, !dbg !9395, !tbaa !9282
  %11 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9396
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %11, align 4, !dbg !9396, !tbaa !9295
  %13 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %12, i32 0, i32 3, !dbg !9396
  %14 = load volatile i32, i32* %13, align 4, !dbg !9396, !tbaa !5168
  %15 = and i32 %14, -8193, !dbg !9396
  store volatile i32 %15, i32* %13, align 4, !dbg !9396, !tbaa !5168
  call fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !9397
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %11, align 4, !dbg !9398, !tbaa !9295
  %17 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %16, i32 0, i32 4, !dbg !9398
  %18 = load volatile i32, i32* %17, align 4, !dbg !9398, !tbaa !5051
  %19 = and i32 %18, -2049, !dbg !9398
  store volatile i32 %19, i32* %17, align 4, !dbg !9398, !tbaa !5051
  %20 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %16, i32 0, i32 5, !dbg !9399
  %21 = load volatile i32, i32* %20, align 4, !dbg !9399, !tbaa !5056
  %22 = and i32 %21, -43, !dbg !9399
  store volatile i32 %22, i32* %20, align 4, !dbg !9399, !tbaa !5056
  %23 = load volatile i32, i32* %17, align 4, !dbg !9400, !tbaa !5051
  %24 = or i32 %23, 16384, !dbg !9400
  store volatile i32 %24, i32* %17, align 4, !dbg !9400, !tbaa !5051
  %25 = load volatile i32, i32* %17, align 4, !dbg !9401, !tbaa !5051
  %26 = and i32 %25, -33, !dbg !9401
  store volatile i32 %26, i32* %17, align 4, !dbg !9401, !tbaa !5051
  %27 = load volatile i32, i32* %17, align 4, !dbg !9402, !tbaa !5051
  %28 = or i32 %27, %1, !dbg !9402
  store volatile i32 %28, i32* %17, align 4, !dbg !9402, !tbaa !5051
  %29 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %16, i32 0, i32 3, !dbg !9403
  %30 = load volatile i32, i32* %29, align 4, !dbg !9403, !tbaa !5168
  %31 = or i32 %30, 8192, !dbg !9403
  store volatile i32 %31, i32* %29, align 4, !dbg !9403, !tbaa !5168
  %32 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !9404
  store volatile i32 0, i32* %32, align 4, !dbg !9405, !tbaa !9302
  store volatile i32 32, i32* %5, align 4, !dbg !9406, !tbaa !9282
  %33 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !9407
  store volatile i32 32, i32* %33, align 4, !dbg !9408, !tbaa !9306
  br label %34, !dbg !9409

34:                                               ; preds = %2, %10
  %35 = phi i32 [ 0, %10 ], [ 1, %2 ], !dbg !9382
  ret i32 %35, !dbg !9410
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_MultiProcessor_Init(%struct.__UART_HandleTypeDef* noundef %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #3 !dbg !9411 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9415, metadata !DIExpression()), !dbg !9418
  call void @llvm.dbg.value(metadata i8 %1, metadata !9416, metadata !DIExpression()), !dbg !9418
  call void @llvm.dbg.value(metadata i32 %2, metadata !9417, metadata !DIExpression()), !dbg !9418
  %4 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !9419
  br i1 %4, label %38, label %5, !dbg !9421

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9422
  %7 = load volatile i32, i32* %6, align 4, !dbg !9422, !tbaa !9282
  %8 = icmp eq i32 %7, 0, !dbg !9424
  br i1 %8, label %9, label %11, !dbg !9425

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9426
  store i32 0, i32* %10, align 4, !dbg !9428, !tbaa !9290
  call void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !9429
  br label %11, !dbg !9430

11:                                               ; preds = %9, %5
  store volatile i32 36, i32* %6, align 4, !dbg !9431, !tbaa !9282
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9432
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %12, align 4, !dbg !9432, !tbaa !9295
  %14 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %13, i32 0, i32 3, !dbg !9432
  %15 = load volatile i32, i32* %14, align 4, !dbg !9432, !tbaa !5168
  %16 = and i32 %15, -8193, !dbg !9432
  store volatile i32 %16, i32* %14, align 4, !dbg !9432, !tbaa !5168
  call fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !9433
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %12, align 4, !dbg !9434, !tbaa !9295
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 4, !dbg !9434
  %19 = load volatile i32, i32* %18, align 4, !dbg !9434, !tbaa !5051
  %20 = and i32 %19, -18433, !dbg !9434
  store volatile i32 %20, i32* %18, align 4, !dbg !9434, !tbaa !5051
  %21 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 5, !dbg !9435
  %22 = load volatile i32, i32* %21, align 4, !dbg !9435, !tbaa !5056
  %23 = and i32 %22, -43, !dbg !9435
  store volatile i32 %23, i32* %21, align 4, !dbg !9435, !tbaa !5056
  %24 = load volatile i32, i32* %18, align 4, !dbg !9436, !tbaa !5051
  %25 = and i32 %24, -16, !dbg !9436
  store volatile i32 %25, i32* %18, align 4, !dbg !9436, !tbaa !5051
  %26 = zext i8 %1 to i32, !dbg !9437
  %27 = load volatile i32, i32* %18, align 4, !dbg !9437, !tbaa !5051
  %28 = or i32 %27, %26, !dbg !9437
  store volatile i32 %28, i32* %18, align 4, !dbg !9437, !tbaa !5051
  %29 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 3, !dbg !9438
  %30 = load volatile i32, i32* %29, align 4, !dbg !9438, !tbaa !5168
  %31 = and i32 %30, -2049, !dbg !9438
  store volatile i32 %31, i32* %29, align 4, !dbg !9438, !tbaa !5168
  %32 = load volatile i32, i32* %29, align 4, !dbg !9439, !tbaa !5168
  %33 = or i32 %32, %2, !dbg !9439
  store volatile i32 %33, i32* %29, align 4, !dbg !9439, !tbaa !5168
  %34 = load volatile i32, i32* %29, align 4, !dbg !9440, !tbaa !5168
  %35 = or i32 %34, 8192, !dbg !9440
  store volatile i32 %35, i32* %29, align 4, !dbg !9440, !tbaa !5168
  %36 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !9441
  store volatile i32 0, i32* %36, align 4, !dbg !9442, !tbaa !9302
  store volatile i32 32, i32* %6, align 4, !dbg !9443, !tbaa !9282
  %37 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !9444
  store volatile i32 32, i32* %37, align 4, !dbg !9445, !tbaa !9306
  br label %38, !dbg !9446

38:                                               ; preds = %3, %11
  %39 = phi i32 [ 0, %11 ], [ 1, %3 ], !dbg !9418
  ret i32 %39, !dbg !9447
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_DeInit(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !9448 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9450, metadata !DIExpression()), !dbg !9451
  %2 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !9452
  br i1 %2, label %13, label %3, !dbg !9454

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9455
  store volatile i32 36, i32* %4, align 4, !dbg !9456, !tbaa !9282
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9457
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9457, !tbaa !9295
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %6, i32 0, i32 3, !dbg !9457
  %8 = load volatile i32, i32* %7, align 4, !dbg !9457, !tbaa !5168
  %9 = and i32 %8, -8193, !dbg !9457
  store volatile i32 %9, i32* %7, align 4, !dbg !9457, !tbaa !5168
  call void @HAL_UART_MspDeInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !9458
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !9459
  store volatile i32 0, i32* %10, align 4, !dbg !9460, !tbaa !9302
  store volatile i32 0, i32* %4, align 4, !dbg !9461, !tbaa !9282
  %11 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !9462
  store volatile i32 0, i32* %11, align 4, !dbg !9463, !tbaa !9306
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9464
  store i32 0, i32* %12, align 4, !dbg !9464, !tbaa !9290
  br label %13, !dbg !9466

13:                                               ; preds = %1, %3
  %14 = phi i32 [ 0, %3 ], [ 1, %1 ], !dbg !9451
  ret i32 %14, !dbg !9467
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_MspDeInit(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !9468 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9470, metadata !DIExpression()), !dbg !9471
  ret void, !dbg !9472
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Transmit(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef readonly %1, i16 noundef zeroext %2, i32 noundef %3) local_unnamed_addr #3 !dbg !9473 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9477, metadata !DIExpression()), !dbg !9483
  call void @llvm.dbg.value(metadata i8* %1, metadata !9478, metadata !DIExpression()), !dbg !9483
  call void @llvm.dbg.value(metadata i16 %2, metadata !9479, metadata !DIExpression()), !dbg !9483
  call void @llvm.dbg.value(metadata i32 %3, metadata !9480, metadata !DIExpression()), !dbg !9483
  call void @llvm.dbg.value(metadata i32 0, metadata !9482, metadata !DIExpression()), !dbg !9483
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9484
  %6 = load volatile i32, i32* %5, align 4, !dbg !9484, !tbaa !9282
  %7 = icmp eq i32 %6, 32, !dbg !9486
  br i1 %7, label %8, label %65, !dbg !9487

8:                                                ; preds = %4
  %9 = icmp eq i8* %1, null, !dbg !9488
  %10 = icmp eq i16 %2, 0
  %11 = or i1 %9, %10, !dbg !9491
  br i1 %11, label %65, label %12, !dbg !9491

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9492
  %14 = load i32, i32* %13, align 4, !dbg !9492, !tbaa !9290
  %15 = icmp eq i32 %14, 1, !dbg !9492
  br i1 %15, label %65, label %16, !dbg !9495

16:                                               ; preds = %12
  store i32 1, i32* %13, align 4, !dbg !9496, !tbaa !9290
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !9498
  store volatile i32 0, i32* %17, align 4, !dbg !9499, !tbaa !9302
  store volatile i32 33, i32* %5, align 4, !dbg !9500, !tbaa !9282
  %18 = call i32 @HAL_GetTick() #34, !dbg !9501
  call void @llvm.dbg.value(metadata i32 %18, metadata !9482, metadata !DIExpression()), !dbg !9483
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 3, !dbg !9502
  store i16 %2, i16* %19, align 4, !dbg !9503, !tbaa !9504
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !9505
  store volatile i16 %2, i16* %20, align 2, !dbg !9506, !tbaa !9507
  call void @llvm.dbg.value(metadata i8* %1, metadata !9478, metadata !DIExpression()), !dbg !9483
  %21 = load volatile i16, i16* %20, align 2, !dbg !9508, !tbaa !9507
  %22 = icmp eq i16 %21, 0, !dbg !9509
  br i1 %22, label %61, label %23, !dbg !9510

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1
  %25 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3
  br label %28, !dbg !9510

28:                                               ; preds = %23, %57
  %29 = phi i8* [ %1, %23 ], [ %58, %57 ]
  call void @llvm.dbg.value(metadata i8* %29, metadata !9478, metadata !DIExpression()), !dbg !9483
  %30 = load volatile i16, i16* %20, align 2, !dbg !9511, !tbaa !9507
  %31 = add i16 %30, -1, !dbg !9511
  store volatile i16 %31, i16* %20, align 2, !dbg !9511, !tbaa !9507
  %32 = load i32, i32* %24, align 4, !dbg !9513, !tbaa !9325
  %33 = icmp eq i32 %32, 4096, !dbg !9515
  %34 = call fastcc i32 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef 128, i32 noundef %18, i32 noundef %3), !dbg !9516
  %35 = icmp eq i32 %34, 0, !dbg !9516
  br i1 %33, label %36, label %50, !dbg !9517

36:                                               ; preds = %28
  br i1 %35, label %37, label %65, !dbg !9518

37:                                               ; preds = %36
  %38 = bitcast i8* %29 to i16*, !dbg !9520
  call void @llvm.dbg.value(metadata i16* %38, metadata !9481, metadata !DIExpression()), !dbg !9483
  %39 = load i16, i16* %38, align 2, !dbg !9521, !tbaa !9522
  %40 = and i16 %39, 511, !dbg !9523
  %41 = zext i16 %40 to i32, !dbg !9523
  %42 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %26, align 4, !dbg !9524, !tbaa !9295
  %43 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %42, i32 0, i32 1, !dbg !9525
  store volatile i32 %41, i32* %43, align 4, !dbg !9526, !tbaa !9527
  %44 = load i32, i32* %27, align 4, !dbg !9528, !tbaa !9327
  %45 = icmp eq i32 %44, 0, !dbg !9530
  br i1 %45, label %46, label %48, !dbg !9531

46:                                               ; preds = %37
  %47 = getelementptr inbounds i8, i8* %29, i32 2, !dbg !9532
  call void @llvm.dbg.value(metadata i8* %47, metadata !9478, metadata !DIExpression()), !dbg !9483
  br label %57, !dbg !9534

48:                                               ; preds = %37
  %49 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !9535
  call void @llvm.dbg.value(metadata i8* %49, metadata !9478, metadata !DIExpression()), !dbg !9483
  br label %57

50:                                               ; preds = %28
  br i1 %35, label %51, label %65, !dbg !9537

51:                                               ; preds = %50
  %52 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !9539
  call void @llvm.dbg.value(metadata i8* %52, metadata !9478, metadata !DIExpression()), !dbg !9483
  %53 = load i8, i8* %29, align 1, !dbg !9540, !tbaa !2851
  %54 = zext i8 %53 to i32, !dbg !9540
  %55 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %25, align 4, !dbg !9541, !tbaa !9295
  %56 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %55, i32 0, i32 1, !dbg !9542
  store volatile i32 %54, i32* %56, align 4, !dbg !9543, !tbaa !9527
  br label %57

57:                                               ; preds = %46, %48, %51
  %58 = phi i8* [ %47, %46 ], [ %49, %48 ], [ %52, %51 ], !dbg !9516
  call void @llvm.dbg.value(metadata i8* %58, metadata !9478, metadata !DIExpression()), !dbg !9483
  %59 = load volatile i16, i16* %20, align 2, !dbg !9508, !tbaa !9507
  %60 = icmp eq i16 %59, 0, !dbg !9509
  br i1 %60, label %61, label %28, !dbg !9510, !llvm.loop !9544

61:                                               ; preds = %57, %16
  %62 = call fastcc i32 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef 64, i32 noundef %18, i32 noundef %3), !dbg !9546
  %63 = icmp eq i32 %62, 0, !dbg !9548
  br i1 %63, label %64, label %65, !dbg !9549

64:                                               ; preds = %61
  store volatile i32 32, i32* %5, align 4, !dbg !9550, !tbaa !9282
  store i32 0, i32* %13, align 4, !dbg !9551, !tbaa !9290
  br label %65, !dbg !9553

65:                                               ; preds = %50, %36, %4, %61, %12, %8, %64
  %66 = phi i32 [ 0, %64 ], [ 1, %8 ], [ 2, %12 ], [ 3, %61 ], [ 2, %4 ], [ 3, %36 ], [ 3, %50 ], !dbg !9554
  ret i32 %66, !dbg !9555
}

; Function Attrs: noinline nounwind
define internal fastcc i32 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #3 !dbg !9556 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9560, metadata !DIExpression()), !dbg !9565
  call void @llvm.dbg.value(metadata i32 %1, metadata !9561, metadata !DIExpression()), !dbg !9565
  call void @llvm.dbg.value(metadata i32 0, metadata !9562, metadata !DIExpression()), !dbg !9565
  call void @llvm.dbg.value(metadata i32 %2, metadata !9563, metadata !DIExpression()), !dbg !9565
  call void @llvm.dbg.value(metadata i32 %3, metadata !9564, metadata !DIExpression()), !dbg !9565
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9566, !tbaa !9295
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %6, i32 0, i32 0, !dbg !9566
  %8 = load volatile i32, i32* %7, align 4, !dbg !9566, !tbaa !9567
  %9 = and i32 %8, %1, !dbg !9566
  %10 = icmp eq i32 %9, %1, !dbg !9566
  br i1 %10, label %37, label %11, !dbg !9568

11:                                               ; preds = %4
  switch i32 %3, label %17 [
    i32 0, label %21
    i32 -1, label %12
  ]

12:                                               ; preds = %17, %11
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !tbaa !9295
  %14 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %13, i32 0, i32 0
  %15 = icmp eq i32 %3, -1
  br label %33, !dbg !9568

16:                                               ; preds = %33
  br i1 %15, label %33, label %17, !dbg !9569

17:                                               ; preds = %16, %11
  %18 = call i32 @HAL_GetTick() #34, !dbg !9571
  %19 = sub i32 %18, %2, !dbg !9575
  %20 = icmp ugt i32 %19, %3, !dbg !9576
  br i1 %20, label %21, label %12, !dbg !9577

21:                                               ; preds = %17, %11
  %22 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9566
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !9578, !tbaa !9295
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 3, !dbg !9578
  %25 = load volatile i32, i32* %24, align 4, !dbg !9578, !tbaa !5168
  %26 = and i32 %25, -417, !dbg !9578
  store volatile i32 %26, i32* %24, align 4, !dbg !9578, !tbaa !5168
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 5, !dbg !9580
  %28 = load volatile i32, i32* %27, align 4, !dbg !9580, !tbaa !5056
  %29 = and i32 %28, -2, !dbg !9580
  store volatile i32 %29, i32* %27, align 4, !dbg !9580, !tbaa !5056
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9581
  store volatile i32 32, i32* %30, align 4, !dbg !9582, !tbaa !9282
  %31 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !9583
  store volatile i32 32, i32* %31, align 4, !dbg !9584, !tbaa !9306
  %32 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9585
  store i32 0, i32* %32, align 4, !dbg !9585, !tbaa !9290
  br label %37, !dbg !9587

33:                                               ; preds = %12, %16
  %34 = load volatile i32, i32* %14, align 4, !dbg !9566, !tbaa !9567
  %35 = and i32 %34, %1, !dbg !9566
  %36 = icmp eq i32 %35, %1, !dbg !9566
  br i1 %36, label %37, label %16, !dbg !9568, !llvm.loop !9588

37:                                               ; preds = %33, %4, %21
  %38 = phi i32 [ 3, %21 ], [ 0, %4 ], [ 0, %33 ], !dbg !9565
  ret i32 %38, !dbg !9590
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Receive(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef writeonly %1, i16 noundef zeroext %2, i32 noundef %3) local_unnamed_addr #3 !dbg !9591 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9593, metadata !DIExpression()), !dbg !9599
  call void @llvm.dbg.value(metadata i8* %1, metadata !9594, metadata !DIExpression()), !dbg !9599
  call void @llvm.dbg.value(metadata i16 %2, metadata !9595, metadata !DIExpression()), !dbg !9599
  call void @llvm.dbg.value(metadata i32 %3, metadata !9596, metadata !DIExpression()), !dbg !9599
  call void @llvm.dbg.value(metadata i32 0, metadata !9598, metadata !DIExpression()), !dbg !9599
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !9600
  %6 = load volatile i32, i32* %5, align 4, !dbg !9600, !tbaa !9306
  %7 = icmp eq i32 %6, 32, !dbg !9602
  br i1 %7, label %8, label %80, !dbg !9603

8:                                                ; preds = %4
  %9 = icmp eq i8* %1, null, !dbg !9604
  %10 = icmp eq i16 %2, 0
  %11 = or i1 %9, %10, !dbg !9607
  br i1 %11, label %80, label %12, !dbg !9607

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9608
  %14 = load i32, i32* %13, align 4, !dbg !9608, !tbaa !9290
  %15 = icmp eq i32 %14, 1, !dbg !9608
  br i1 %15, label %80, label %16, !dbg !9611

16:                                               ; preds = %12
  store i32 1, i32* %13, align 4, !dbg !9612, !tbaa !9290
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !9614
  store volatile i32 0, i32* %17, align 4, !dbg !9615, !tbaa !9302
  store volatile i32 34, i32* %5, align 4, !dbg !9616, !tbaa !9306
  %18 = call i32 @HAL_GetTick() #34, !dbg !9617
  call void @llvm.dbg.value(metadata i32 %18, metadata !9598, metadata !DIExpression()), !dbg !9599
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 6, !dbg !9618
  store i16 %2, i16* %19, align 4, !dbg !9619, !tbaa !9620
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !9621
  store volatile i16 %2, i16* %20, align 2, !dbg !9622, !tbaa !9623
  call void @llvm.dbg.value(metadata i8* %1, metadata !9594, metadata !DIExpression()), !dbg !9599
  %21 = load volatile i16, i16* %20, align 2, !dbg !9624, !tbaa !9623
  %22 = icmp eq i16 %21, 0, !dbg !9625
  br i1 %22, label %79, label %23, !dbg !9626

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1
  %25 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3
  %29 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  br label %31, !dbg !9626

31:                                               ; preds = %23, %75
  %32 = phi i8* [ %1, %23 ], [ %76, %75 ]
  call void @llvm.dbg.value(metadata i8* %32, metadata !9594, metadata !DIExpression()), !dbg !9599
  %33 = load volatile i16, i16* %20, align 2, !dbg !9627, !tbaa !9623
  %34 = add i16 %33, -1, !dbg !9627
  store volatile i16 %34, i16* %20, align 2, !dbg !9627, !tbaa !9623
  %35 = load i32, i32* %24, align 4, !dbg !9629, !tbaa !9325
  %36 = icmp eq i32 %35, 4096, !dbg !9631
  %37 = call fastcc i32 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef 32, i32 noundef %18, i32 noundef %3), !dbg !9632
  %38 = icmp eq i32 %37, 0, !dbg !9632
  br i1 %36, label %39, label %58, !dbg !9633

39:                                               ; preds = %31
  br i1 %38, label %40, label %80, !dbg !9634

40:                                               ; preds = %39
  %41 = bitcast i8* %32 to i16*, !dbg !9636
  call void @llvm.dbg.value(metadata i16* %41, metadata !9597, metadata !DIExpression()), !dbg !9599
  %42 = load i32, i32* %28, align 4, !dbg !9637, !tbaa !9327
  %43 = icmp eq i32 %42, 0, !dbg !9639
  br i1 %43, label %44, label %51, !dbg !9640

44:                                               ; preds = %40
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !9641, !tbaa !9295
  %46 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %45, i32 0, i32 1, !dbg !9643
  %47 = load volatile i32, i32* %46, align 4, !dbg !9643, !tbaa !9527
  %48 = trunc i32 %47 to i16, !dbg !9644
  %49 = and i16 %48, 511, !dbg !9644
  store i16 %49, i16* %41, align 2, !dbg !9645, !tbaa !9522
  %50 = getelementptr inbounds i8, i8* %32, i32 2, !dbg !9646
  call void @llvm.dbg.value(metadata i8* %50, metadata !9594, metadata !DIExpression()), !dbg !9599
  br label %75, !dbg !9647

51:                                               ; preds = %40
  %52 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %29, align 4, !dbg !9648, !tbaa !9295
  %53 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %52, i32 0, i32 1, !dbg !9650
  %54 = load volatile i32, i32* %53, align 4, !dbg !9650, !tbaa !9527
  %55 = trunc i32 %54 to i16, !dbg !9651
  %56 = and i16 %55, 255, !dbg !9651
  store i16 %56, i16* %41, align 2, !dbg !9652, !tbaa !9522
  %57 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !9653
  call void @llvm.dbg.value(metadata i8* %57, metadata !9594, metadata !DIExpression()), !dbg !9599
  br label %75

58:                                               ; preds = %31
  br i1 %38, label %59, label %80, !dbg !9654

59:                                               ; preds = %58
  %60 = load i32, i32* %25, align 4, !dbg !9656, !tbaa !9327
  %61 = icmp eq i32 %60, 0, !dbg !9658
  br i1 %61, label %62, label %68, !dbg !9659

62:                                               ; preds = %59
  %63 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %27, align 4, !dbg !9660, !tbaa !9295
  %64 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %63, i32 0, i32 1, !dbg !9662
  %65 = load volatile i32, i32* %64, align 4, !dbg !9662, !tbaa !9527
  %66 = trunc i32 %65 to i8, !dbg !9663
  %67 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !9664
  call void @llvm.dbg.value(metadata i8* %67, metadata !9594, metadata !DIExpression()), !dbg !9599
  store i8 %66, i8* %32, align 1, !dbg !9665, !tbaa !2851
  br label %75, !dbg !9666

68:                                               ; preds = %59
  %69 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %26, align 4, !dbg !9667, !tbaa !9295
  %70 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %69, i32 0, i32 1, !dbg !9669
  %71 = load volatile i32, i32* %70, align 4, !dbg !9669, !tbaa !9527
  %72 = trunc i32 %71 to i8, !dbg !9670
  %73 = and i8 %72, 127, !dbg !9670
  %74 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !9671
  call void @llvm.dbg.value(metadata i8* %74, metadata !9594, metadata !DIExpression()), !dbg !9599
  store i8 %73, i8* %32, align 1, !dbg !9672, !tbaa !2851
  br label %75

75:                                               ; preds = %62, %68, %44, %51
  %76 = phi i8* [ %50, %44 ], [ %57, %51 ], [ %67, %62 ], [ %74, %68 ], !dbg !9632
  call void @llvm.dbg.value(metadata i8* %76, metadata !9594, metadata !DIExpression()), !dbg !9599
  %77 = load volatile i16, i16* %20, align 2, !dbg !9624, !tbaa !9623
  %78 = icmp eq i16 %77, 0, !dbg !9625
  br i1 %78, label %79, label %31, !dbg !9626, !llvm.loop !9673

79:                                               ; preds = %75, %16
  store volatile i32 32, i32* %5, align 4, !dbg !9675, !tbaa !9306
  store i32 0, i32* %13, align 4, !dbg !9676, !tbaa !9290
  br label %80, !dbg !9678

80:                                               ; preds = %58, %39, %4, %12, %8, %79
  %81 = phi i32 [ 0, %79 ], [ 1, %8 ], [ 2, %12 ], [ 2, %4 ], [ 3, %39 ], [ 3, %58 ], !dbg !9679
  ret i32 %81, !dbg !9680
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_UART_Transmit_IT(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #16 !dbg !9681 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9685, metadata !DIExpression()), !dbg !9688
  call void @llvm.dbg.value(metadata i8* %1, metadata !9686, metadata !DIExpression()), !dbg !9688
  call void @llvm.dbg.value(metadata i16 %2, metadata !9687, metadata !DIExpression()), !dbg !9688
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9689
  %5 = load volatile i32, i32* %4, align 4, !dbg !9689, !tbaa !9282
  %6 = icmp eq i32 %5, 32, !dbg !9691
  br i1 %6, label %7, label %25, !dbg !9692

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !9693
  %9 = icmp eq i16 %2, 0
  %10 = or i1 %8, %9, !dbg !9696
  br i1 %10, label %25, label %11, !dbg !9696

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9697
  %13 = load i32, i32* %12, align 4, !dbg !9697, !tbaa !9290
  %14 = icmp eq i32 %13, 1, !dbg !9697
  br i1 %14, label %25, label %15, !dbg !9700

15:                                               ; preds = %11
  store i32 1, i32* %12, align 4, !dbg !9701, !tbaa !9290
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 2, !dbg !9703
  store i8* %1, i8** %16, align 4, !dbg !9704, !tbaa !9705
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 3, !dbg !9706
  store i16 %2, i16* %17, align 4, !dbg !9707, !tbaa !9504
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !9708
  store volatile i16 %2, i16* %18, align 2, !dbg !9709, !tbaa !9507
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !9710
  store volatile i32 0, i32* %19, align 4, !dbg !9711, !tbaa !9302
  store volatile i32 33, i32* %4, align 4, !dbg !9712, !tbaa !9282
  store i32 0, i32* %12, align 4, !dbg !9713, !tbaa !9290
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9715
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %20, align 4, !dbg !9715, !tbaa !9295
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %21, i32 0, i32 3, !dbg !9715
  %23 = load volatile i32, i32* %22, align 4, !dbg !9715, !tbaa !5168
  %24 = or i32 %23, 128, !dbg !9715
  store volatile i32 %24, i32* %22, align 4, !dbg !9715, !tbaa !5168
  br label %25, !dbg !9716

25:                                               ; preds = %3, %11, %7, %15
  %26 = phi i32 [ 0, %15 ], [ 1, %7 ], [ 2, %11 ], [ 2, %3 ], !dbg !9717
  ret i32 %26, !dbg !9718
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_UART_Receive_IT(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #16 !dbg !9719 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9721, metadata !DIExpression()), !dbg !9724
  call void @llvm.dbg.value(metadata i8* %1, metadata !9722, metadata !DIExpression()), !dbg !9724
  call void @llvm.dbg.value(metadata i16 %2, metadata !9723, metadata !DIExpression()), !dbg !9724
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !9725
  %5 = load volatile i32, i32* %4, align 4, !dbg !9725, !tbaa !9306
  %6 = icmp eq i32 %5, 32, !dbg !9727
  br i1 %6, label %7, label %30, !dbg !9728

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !9729
  %9 = icmp eq i16 %2, 0
  %10 = or i1 %8, %9, !dbg !9732
  br i1 %10, label %30, label %11, !dbg !9732

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9733
  %13 = load i32, i32* %12, align 4, !dbg !9733, !tbaa !9290
  %14 = icmp eq i32 %13, 1, !dbg !9733
  br i1 %14, label %30, label %15, !dbg !9736

15:                                               ; preds = %11
  store i32 1, i32* %12, align 4, !dbg !9737, !tbaa !9290
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !9739
  store i8* %1, i8** %16, align 4, !dbg !9740, !tbaa !9741
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 6, !dbg !9742
  store i16 %2, i16* %17, align 4, !dbg !9743, !tbaa !9620
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !9744
  store volatile i16 %2, i16* %18, align 2, !dbg !9745, !tbaa !9623
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !9746
  store volatile i32 0, i32* %19, align 4, !dbg !9747, !tbaa !9302
  store volatile i32 34, i32* %4, align 4, !dbg !9748, !tbaa !9306
  store i32 0, i32* %12, align 4, !dbg !9749, !tbaa !9290
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9751
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %20, align 4, !dbg !9751, !tbaa !9295
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %21, i32 0, i32 3, !dbg !9751
  %23 = load volatile i32, i32* %22, align 4, !dbg !9751, !tbaa !5168
  %24 = or i32 %23, 256, !dbg !9751
  store volatile i32 %24, i32* %22, align 4, !dbg !9751, !tbaa !5168
  %25 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %21, i32 0, i32 5, !dbg !9752
  %26 = load volatile i32, i32* %25, align 4, !dbg !9752, !tbaa !5056
  %27 = or i32 %26, 1, !dbg !9752
  store volatile i32 %27, i32* %25, align 4, !dbg !9752, !tbaa !5056
  %28 = load volatile i32, i32* %22, align 4, !dbg !9753, !tbaa !5168
  %29 = or i32 %28, 32, !dbg !9753
  store volatile i32 %29, i32* %22, align 4, !dbg !9753, !tbaa !5168
  br label %30, !dbg !9754

30:                                               ; preds = %3, %11, %7, %15
  %31 = phi i32 [ 0, %15 ], [ 1, %7 ], [ 2, %11 ], [ 2, %3 ], !dbg !9755
  ret i32 %31, !dbg !9756
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Transmit_DMA(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #3 !dbg !9757 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9759, metadata !DIExpression()), !dbg !9763
  call void @llvm.dbg.value(metadata i8* %1, metadata !9760, metadata !DIExpression()), !dbg !9763
  call void @llvm.dbg.value(metadata i16 %2, metadata !9761, metadata !DIExpression()), !dbg !9763
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9764
  %5 = load volatile i32, i32* %4, align 4, !dbg !9764, !tbaa !9282
  %6 = icmp eq i32 %5, 32, !dbg !9766
  br i1 %6, label %7, label %38, !dbg !9767

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !9768
  %9 = zext i16 %2 to i32
  %10 = icmp eq i16 %2, 0
  %11 = or i1 %8, %10, !dbg !9771
  br i1 %11, label %38, label %12, !dbg !9771

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9772
  %14 = load i32, i32* %13, align 4, !dbg !9772, !tbaa !9290
  %15 = icmp eq i32 %14, 1, !dbg !9772
  br i1 %15, label %38, label %16, !dbg !9775

16:                                               ; preds = %12
  store i32 1, i32* %13, align 4, !dbg !9776, !tbaa !9290
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 2, !dbg !9778
  store i8* %1, i8** %17, align 4, !dbg !9779, !tbaa !9705
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 3, !dbg !9780
  store i16 %2, i16* %18, align 4, !dbg !9781, !tbaa !9504
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !9782
  store volatile i16 %2, i16* %19, align 2, !dbg !9783, !tbaa !9507
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !9784
  store volatile i32 0, i32* %20, align 4, !dbg !9785, !tbaa !9302
  store volatile i32 33, i32* %4, align 4, !dbg !9786, !tbaa !9282
  %21 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !9787
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %21, align 4, !dbg !9787, !tbaa !9788
  %23 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 5, !dbg !9789
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMATransmitCplt, void (%struct.__DMA_HandleTypeDef*)** %23, align 4, !dbg !9790, !tbaa !9791
  %24 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 6, !dbg !9793
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMATxHalfCplt, void (%struct.__DMA_HandleTypeDef*)** %24, align 4, !dbg !9794, !tbaa !9795
  %25 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 7, !dbg !9796
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMAError, void (%struct.__DMA_HandleTypeDef*)** %25, align 4, !dbg !9797, !tbaa !9798
  %26 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 8, !dbg !9799
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %26, align 4, !dbg !9800, !tbaa !9801
  call void @llvm.dbg.value(metadata i32* undef, metadata !9762, metadata !DIExpression()), !dbg !9763
  %27 = ptrtoint i8* %1 to i32, !dbg !9802
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9803
  %29 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %28, align 4, !dbg !9803, !tbaa !9295
  %30 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %29, i32 0, i32 1, !dbg !9804
  %31 = ptrtoint i32* %30 to i32, !dbg !9805
  %32 = call i32 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* noundef %22, i32 noundef %27, i32 noundef %31, i32 noundef %9) #34, !dbg !9806
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %28, align 4, !dbg !9807, !tbaa !9295
  %34 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %33, i32 0, i32 0, !dbg !9807
  store volatile i32 -65, i32* %34, align 4, !dbg !9807, !tbaa !9567
  store i32 0, i32* %13, align 4, !dbg !9808, !tbaa !9290
  %35 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %33, i32 0, i32 5, !dbg !9810
  %36 = load volatile i32, i32* %35, align 4, !dbg !9810, !tbaa !5056
  %37 = or i32 %36, 128, !dbg !9810
  store volatile i32 %37, i32* %35, align 4, !dbg !9810, !tbaa !5056
  br label %38, !dbg !9811

38:                                               ; preds = %3, %12, %7, %16
  %39 = phi i32 [ 0, %16 ], [ 1, %7 ], [ 2, %12 ], [ 2, %3 ], !dbg !9812
  ret i32 %39, !dbg !9813
}

; Function Attrs: noinline nounwind
define internal void @UART_DMATransmitCplt(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !9814 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !9818, metadata !DIExpression()), !dbg !9820
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !9821
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !9821
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !9821, !tbaa !9822
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !9819, metadata !DIExpression()), !dbg !9820
  %5 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 0, !dbg !9823
  %6 = load %struct.DMA_Channel_TypeDef*, %struct.DMA_Channel_TypeDef** %5, align 4, !dbg !9823, !tbaa !9825
  %7 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %6, i32 0, i32 0, !dbg !9826
  %8 = load volatile i32, i32* %7, align 4, !dbg !9826, !tbaa !4395
  %9 = and i32 %8, 32, !dbg !9827
  %10 = icmp eq i32 %9, 0, !dbg !9828
  br i1 %10, label %11, label %21, !dbg !9829

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !9830
  store volatile i16 0, i16* %12, align 2, !dbg !9832, !tbaa !9507
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 0, !dbg !9833
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %13, align 4, !dbg !9833, !tbaa !9295
  %15 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %14, i32 0, i32 5, !dbg !9833
  %16 = load volatile i32, i32* %15, align 4, !dbg !9833, !tbaa !5056
  %17 = and i32 %16, -129, !dbg !9833
  store volatile i32 %17, i32* %15, align 4, !dbg !9833, !tbaa !5056
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %14, i32 0, i32 3, !dbg !9834
  %19 = load volatile i32, i32* %18, align 4, !dbg !9834, !tbaa !5168
  %20 = or i32 %19, 64, !dbg !9834
  store volatile i32 %20, i32* %18, align 4, !dbg !9834, !tbaa !5168
  br label %22, !dbg !9835

21:                                               ; preds = %1
  call void @HAL_UART_TxCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !9836
  br label %22

22:                                               ; preds = %21, %11
  ret void, !dbg !9838
}

; Function Attrs: noinline nounwind
define internal void @UART_DMATxHalfCplt(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !9839 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !9841, metadata !DIExpression()), !dbg !9843
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !9844
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !9844
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !9844, !tbaa !9822
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !9842, metadata !DIExpression()), !dbg !9843
  call void @HAL_UART_TxHalfCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !9845
  ret void, !dbg !9846
}

; Function Attrs: noinline nounwind
define internal void @UART_DMAError(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !9847 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !9849, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata i32 0, metadata !9850, metadata !DIExpression()), !dbg !9852
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !9853
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !9853
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !9853, !tbaa !9822
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !9851, metadata !DIExpression()), !dbg !9852
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 0, !dbg !9854
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9854, !tbaa !9295
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %6, i32 0, i32 5, !dbg !9854
  %8 = load volatile i32, i32* %7, align 4, !dbg !9854, !tbaa !5056
  %9 = and i32 %8, 128, !dbg !9854
  %10 = icmp ne i32 %9, 0, !dbg !9854
  call void @llvm.dbg.value(metadata i1 %10, metadata !9850, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9852
  %11 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 11, !dbg !9855
  %12 = load volatile i32, i32* %11, align 4, !dbg !9855, !tbaa !9282
  %13 = icmp eq i32 %12, 33, !dbg !9857
  %14 = select i1 %13, i1 %10, i1 false, !dbg !9858
  br i1 %14, label %15, label %17, !dbg !9858

15:                                               ; preds = %1
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !9859
  store volatile i16 0, i16* %16, align 2, !dbg !9861, !tbaa !9507
  call fastcc void @UART_EndTxTransfer(%struct.__UART_HandleTypeDef* noundef %4), !dbg !9862
  br label %17, !dbg !9863

17:                                               ; preds = %15, %1
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9864, !tbaa !9295
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %18, i32 0, i32 5, !dbg !9864
  %20 = load volatile i32, i32* %19, align 4, !dbg !9864, !tbaa !5056
  %21 = and i32 %20, 64, !dbg !9864
  %22 = icmp ne i32 %21, 0, !dbg !9864
  call void @llvm.dbg.value(metadata i1 %22, metadata !9850, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9852
  %23 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !9865
  %24 = load volatile i32, i32* %23, align 4, !dbg !9865, !tbaa !9306
  %25 = icmp eq i32 %24, 34, !dbg !9867
  %26 = select i1 %25, i1 %22, i1 false, !dbg !9868
  br i1 %26, label %27, label %29, !dbg !9868

27:                                               ; preds = %17
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !9869
  store volatile i16 0, i16* %28, align 2, !dbg !9871, !tbaa !9623
  call fastcc void @UART_EndRxTransfer(%struct.__UART_HandleTypeDef* noundef %4), !dbg !9872
  br label %29, !dbg !9873

29:                                               ; preds = %27, %17
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 13, !dbg !9874
  %31 = load volatile i32, i32* %30, align 4, !dbg !9875, !tbaa !9302
  %32 = or i32 %31, 16, !dbg !9875
  store volatile i32 %32, i32* %30, align 4, !dbg !9875, !tbaa !9302
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !9876
  ret void, !dbg !9877
}

declare !dbg !9878 dso_local i32 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #33

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @UART_EndTxTransfer(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #16 !dbg !9881 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9883, metadata !DIExpression()), !dbg !9884
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9885
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !9885, !tbaa !9295
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !9885
  %5 = load volatile i32, i32* %4, align 4, !dbg !9885, !tbaa !5168
  %6 = and i32 %5, -193, !dbg !9885
  store volatile i32 %6, i32* %4, align 4, !dbg !9885, !tbaa !5168
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9886
  store volatile i32 32, i32* %7, align 4, !dbg !9887, !tbaa !9282
  ret void, !dbg !9888
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @UART_EndRxTransfer(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #16 !dbg !9889 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9891, metadata !DIExpression()), !dbg !9892
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9893
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !9893, !tbaa !9295
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !9893
  %5 = load volatile i32, i32* %4, align 4, !dbg !9893, !tbaa !5168
  %6 = and i32 %5, -289, !dbg !9893
  store volatile i32 %6, i32* %4, align 4, !dbg !9893, !tbaa !5168
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !9894
  %8 = load volatile i32, i32* %7, align 4, !dbg !9894, !tbaa !5056
  %9 = and i32 %8, -2, !dbg !9894
  store volatile i32 %9, i32* %7, align 4, !dbg !9894, !tbaa !5056
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !9895
  store volatile i32 32, i32* %10, align 4, !dbg !9896, !tbaa !9306
  ret void, !dbg !9897
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !9898 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9900, metadata !DIExpression()), !dbg !9901
  ret void, !dbg !9902
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_TxHalfCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !9903 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9905, metadata !DIExpression()), !dbg !9906
  ret void, !dbg !9907
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_TxCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !9908 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9910, metadata !DIExpression()), !dbg !9911
  ret void, !dbg !9912
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Receive_DMA(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #3 !dbg !9913 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9915, metadata !DIExpression()), !dbg !9923
  call void @llvm.dbg.value(metadata i8* %1, metadata !9916, metadata !DIExpression()), !dbg !9923
  call void @llvm.dbg.value(metadata i16 %2, metadata !9917, metadata !DIExpression()), !dbg !9923
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !9924
  %6 = load volatile i32, i32* %5, align 4, !dbg !9924, !tbaa !9306
  %7 = icmp eq i32 %6, 32, !dbg !9925
  br i1 %7, label %8, label %49, !dbg !9926

8:                                                ; preds = %3
  %9 = icmp eq i8* %1, null, !dbg !9927
  %10 = zext i16 %2 to i32
  %11 = icmp eq i16 %2, 0
  %12 = or i1 %9, %11, !dbg !9929
  br i1 %12, label %49, label %13, !dbg !9929

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9930
  %15 = load i32, i32* %14, align 4, !dbg !9930, !tbaa !9290
  %16 = icmp eq i32 %15, 1, !dbg !9930
  br i1 %16, label %49, label %17, !dbg !9933

17:                                               ; preds = %13
  store i32 1, i32* %14, align 4, !dbg !9934, !tbaa !9290
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !9936
  store i8* %1, i8** %18, align 4, !dbg !9937, !tbaa !9741
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 6, !dbg !9938
  store i16 %2, i16* %19, align 4, !dbg !9939, !tbaa !9620
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !9940
  store volatile i32 0, i32* %20, align 4, !dbg !9941, !tbaa !9302
  store volatile i32 34, i32* %5, align 4, !dbg !9942, !tbaa !9306
  %21 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !9943
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %21, align 4, !dbg !9943, !tbaa !9944
  %23 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 5, !dbg !9945
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMAReceiveCplt, void (%struct.__DMA_HandleTypeDef*)** %23, align 4, !dbg !9946, !tbaa !9791
  %24 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 6, !dbg !9947
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMARxHalfCplt, void (%struct.__DMA_HandleTypeDef*)** %24, align 4, !dbg !9948, !tbaa !9795
  %25 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 7, !dbg !9949
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMAError, void (%struct.__DMA_HandleTypeDef*)** %25, align 4, !dbg !9950, !tbaa !9798
  %26 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 8, !dbg !9951
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %26, align 4, !dbg !9952, !tbaa !9801
  call void @llvm.dbg.value(metadata i32* undef, metadata !9918, metadata !DIExpression()), !dbg !9923
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9953
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %27, align 4, !dbg !9953, !tbaa !9295
  %29 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %28, i32 0, i32 1, !dbg !9954
  %30 = ptrtoint i32* %29 to i32, !dbg !9955
  %31 = ptrtoint i8* %1 to i32, !dbg !9956
  %32 = call i32 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* noundef %22, i32 noundef %30, i32 noundef %31, i32 noundef %10) #34, !dbg !9957
  %33 = bitcast i32* %4 to i8*, !dbg !9958
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33), !dbg !9958
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9919, metadata !DIExpression()), !dbg !9958
  store volatile i32 0, i32* %4, align 4, !dbg !9958, !tbaa !3726
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %27, align 4, !dbg !9958, !tbaa !9295
  %35 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 0, !dbg !9958
  %36 = load volatile i32, i32* %35, align 4, !dbg !9958, !tbaa !9567
  store volatile i32 %36, i32* %4, align 4, !dbg !9958, !tbaa !3726
  %37 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 1, !dbg !9958
  %38 = load volatile i32, i32* %37, align 4, !dbg !9958, !tbaa !9527
  store volatile i32 %38, i32* %4, align 4, !dbg !9958, !tbaa !3726
  %39 = load volatile i32, i32* %4, align 4, !dbg !9958, !tbaa !3726
  %40 = bitcast i32* %4 to i8*, !dbg !9959
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40), !dbg !9959
  store i32 0, i32* %14, align 4, !dbg !9960, !tbaa !9290
  %41 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 3, !dbg !9962
  %42 = load volatile i32, i32* %41, align 4, !dbg !9962, !tbaa !5168
  %43 = or i32 %42, 256, !dbg !9962
  store volatile i32 %43, i32* %41, align 4, !dbg !9962, !tbaa !5168
  %44 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 5, !dbg !9963
  %45 = load volatile i32, i32* %44, align 4, !dbg !9963, !tbaa !5056
  %46 = or i32 %45, 1, !dbg !9963
  store volatile i32 %46, i32* %44, align 4, !dbg !9963, !tbaa !5056
  %47 = load volatile i32, i32* %44, align 4, !dbg !9964, !tbaa !5056
  %48 = or i32 %47, 64, !dbg !9964
  store volatile i32 %48, i32* %44, align 4, !dbg !9964, !tbaa !5056
  br label %49, !dbg !9965

49:                                               ; preds = %3, %13, %8, %17
  %50 = phi i32 [ 0, %17 ], [ 1, %8 ], [ 2, %13 ], [ 2, %3 ], !dbg !9966
  ret i32 %50, !dbg !9967
}

; Function Attrs: noinline nounwind
define internal void @UART_DMAReceiveCplt(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !9968 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !9970, metadata !DIExpression()), !dbg !9972
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !9973
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !9973
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !9973, !tbaa !9822
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !9971, metadata !DIExpression()), !dbg !9972
  %5 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 0, !dbg !9974
  %6 = load %struct.DMA_Channel_TypeDef*, %struct.DMA_Channel_TypeDef** %5, align 4, !dbg !9974, !tbaa !9825
  %7 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %6, i32 0, i32 0, !dbg !9976
  %8 = load volatile i32, i32* %7, align 4, !dbg !9976, !tbaa !4395
  %9 = and i32 %8, 32, !dbg !9977
  %10 = icmp eq i32 %9, 0, !dbg !9978
  br i1 %10, label %11, label %24, !dbg !9979

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !9980
  store volatile i16 0, i16* %12, align 2, !dbg !9982, !tbaa !9623
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 0, !dbg !9983
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %13, align 4, !dbg !9983, !tbaa !9295
  %15 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %14, i32 0, i32 3, !dbg !9983
  %16 = load volatile i32, i32* %15, align 4, !dbg !9983, !tbaa !5168
  %17 = and i32 %16, -257, !dbg !9983
  store volatile i32 %17, i32* %15, align 4, !dbg !9983, !tbaa !5168
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %14, i32 0, i32 5, !dbg !9984
  %19 = load volatile i32, i32* %18, align 4, !dbg !9984, !tbaa !5056
  %20 = and i32 %19, -2, !dbg !9984
  store volatile i32 %20, i32* %18, align 4, !dbg !9984, !tbaa !5056
  %21 = load volatile i32, i32* %18, align 4, !dbg !9985, !tbaa !5056
  %22 = and i32 %21, -65, !dbg !9985
  store volatile i32 %22, i32* %18, align 4, !dbg !9985, !tbaa !5056
  %23 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !9986
  store volatile i32 32, i32* %23, align 4, !dbg !9987, !tbaa !9306
  br label %24, !dbg !9988

24:                                               ; preds = %11, %1
  call void @HAL_UART_RxCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !9989
  ret void, !dbg !9990
}

; Function Attrs: noinline nounwind
define internal void @UART_DMARxHalfCplt(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !9991 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !9993, metadata !DIExpression()), !dbg !9995
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !9996
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !9996
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !9996, !tbaa !9822
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !9994, metadata !DIExpression()), !dbg !9995
  call void @HAL_UART_RxHalfCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !9997
  ret void, !dbg !9998
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_RxHalfCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !9999 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10001, metadata !DIExpression()), !dbg !10002
  ret void, !dbg !10003
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_RxCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !10004 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10006, metadata !DIExpression()), !dbg !10007
  ret void, !dbg !10008
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_UART_DMAPause(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #16 !dbg !10009 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10011, metadata !DIExpression()), !dbg !10013
  call void @llvm.dbg.value(metadata i32 0, metadata !10012, metadata !DIExpression()), !dbg !10013
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !10014
  %3 = load i32, i32* %2, align 4, !dbg !10014, !tbaa !9290
  %4 = icmp eq i32 %3, 1, !dbg !10014
  br i1 %4, label %36, label %5, !dbg !10017

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !10018, !tbaa !9290
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10020
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10020, !tbaa !9295
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %7, i32 0, i32 5, !dbg !10020
  %9 = load volatile i32, i32* %8, align 4, !dbg !10020, !tbaa !5056
  %10 = and i32 %9, 128, !dbg !10020
  %11 = icmp ne i32 %10, 0, !dbg !10020
  call void @llvm.dbg.value(metadata i1 %11, metadata !10012, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10013
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10021
  %13 = load volatile i32, i32* %12, align 4, !dbg !10021, !tbaa !9282
  %14 = icmp eq i32 %13, 33, !dbg !10023
  %15 = select i1 %14, i1 %11, i1 false, !dbg !10024
  br i1 %15, label %16, label %19, !dbg !10024

16:                                               ; preds = %5
  %17 = load volatile i32, i32* %8, align 4, !dbg !10025, !tbaa !5056
  %18 = and i32 %17, -129, !dbg !10025
  store volatile i32 %18, i32* %8, align 4, !dbg !10025, !tbaa !5056
  br label %19, !dbg !10027

19:                                               ; preds = %16, %5
  %20 = load volatile i32, i32* %8, align 4, !dbg !10028, !tbaa !5056
  %21 = and i32 %20, 64, !dbg !10028
  %22 = icmp ne i32 %21, 0, !dbg !10028
  call void @llvm.dbg.value(metadata i1 %22, metadata !10012, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10013
  %23 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !10029
  %24 = load volatile i32, i32* %23, align 4, !dbg !10029, !tbaa !9306
  %25 = icmp eq i32 %24, 34, !dbg !10031
  %26 = select i1 %25, i1 %22, i1 false, !dbg !10032
  br i1 %26, label %27, label %35, !dbg !10032

27:                                               ; preds = %19
  %28 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %7, i32 0, i32 3, !dbg !10033
  %29 = load volatile i32, i32* %28, align 4, !dbg !10033, !tbaa !5168
  %30 = and i32 %29, -257, !dbg !10033
  store volatile i32 %30, i32* %28, align 4, !dbg !10033, !tbaa !5168
  %31 = load volatile i32, i32* %8, align 4, !dbg !10035, !tbaa !5056
  %32 = and i32 %31, -2, !dbg !10035
  store volatile i32 %32, i32* %8, align 4, !dbg !10035, !tbaa !5056
  %33 = load volatile i32, i32* %8, align 4, !dbg !10036, !tbaa !5056
  %34 = and i32 %33, -65, !dbg !10036
  store volatile i32 %34, i32* %8, align 4, !dbg !10036, !tbaa !5056
  br label %35, !dbg !10037

35:                                               ; preds = %19, %27
  store i32 0, i32* %2, align 4, !dbg !10038, !tbaa !9290
  br label %36, !dbg !10040

36:                                               ; preds = %1, %35
  %37 = phi i32 [ 0, %35 ], [ 2, %1 ], !dbg !10013
  ret i32 %37, !dbg !10041
}

; Function Attrs: nofree noinline nounwind
define dso_local i32 @HAL_UART_DMAResume(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #19 !dbg !10042 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10044, metadata !DIExpression()), !dbg !10049
  %3 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !10050
  %4 = load i32, i32* %3, align 4, !dbg !10050, !tbaa !9290
  %5 = icmp eq i32 %4, 1, !dbg !10050
  br i1 %5, label %39, label %6, !dbg !10053

6:                                                ; preds = %1
  store i32 1, i32* %3, align 4, !dbg !10054, !tbaa !9290
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10056
  %8 = load volatile i32, i32* %7, align 4, !dbg !10056, !tbaa !9282
  %9 = icmp eq i32 %8, 33, !dbg !10058
  br i1 %9, label %10, label %16, !dbg !10059

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10060
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %11, align 4, !dbg !10060, !tbaa !9295
  %13 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %12, i32 0, i32 5, !dbg !10060
  %14 = load volatile i32, i32* %13, align 4, !dbg !10060, !tbaa !5056
  %15 = or i32 %14, 128, !dbg !10060
  store volatile i32 %15, i32* %13, align 4, !dbg !10060, !tbaa !5056
  br label %16, !dbg !10062

16:                                               ; preds = %10, %6
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !10063
  %18 = load volatile i32, i32* %17, align 4, !dbg !10063, !tbaa !9306
  %19 = icmp eq i32 %18, 34, !dbg !10064
  br i1 %19, label %20, label %38, !dbg !10065

20:                                               ; preds = %16
  %21 = bitcast i32* %2 to i8*, !dbg !10066
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !10066
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10045, metadata !DIExpression()), !dbg !10066
  store volatile i32 0, i32* %2, align 4, !dbg !10066, !tbaa !3726
  %22 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10066
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10066, !tbaa !9295
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 0, !dbg !10066
  %25 = load volatile i32, i32* %24, align 4, !dbg !10066, !tbaa !9567
  store volatile i32 %25, i32* %2, align 4, !dbg !10066, !tbaa !3726
  %26 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 1, !dbg !10066
  %27 = load volatile i32, i32* %26, align 4, !dbg !10066, !tbaa !9527
  store volatile i32 %27, i32* %2, align 4, !dbg !10066, !tbaa !3726
  %28 = load volatile i32, i32* %2, align 4, !dbg !10066, !tbaa !3726
  %29 = bitcast i32* %2 to i8*, !dbg !10067
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29), !dbg !10067
  %30 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 3, !dbg !10068
  %31 = load volatile i32, i32* %30, align 4, !dbg !10068, !tbaa !5168
  %32 = or i32 %31, 256, !dbg !10068
  store volatile i32 %32, i32* %30, align 4, !dbg !10068, !tbaa !5168
  %33 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 5, !dbg !10069
  %34 = load volatile i32, i32* %33, align 4, !dbg !10069, !tbaa !5056
  %35 = or i32 %34, 1, !dbg !10069
  store volatile i32 %35, i32* %33, align 4, !dbg !10069, !tbaa !5056
  %36 = load volatile i32, i32* %33, align 4, !dbg !10070, !tbaa !5056
  %37 = or i32 %36, 64, !dbg !10070
  store volatile i32 %37, i32* %33, align 4, !dbg !10070, !tbaa !5056
  br label %38, !dbg !10071

38:                                               ; preds = %16, %20
  store i32 0, i32* %3, align 4, !dbg !10072, !tbaa !9290
  br label %39, !dbg !10074

39:                                               ; preds = %1, %38
  %40 = phi i32 [ 0, %38 ], [ 2, %1 ], !dbg !10049
  ret i32 %40, !dbg !10075
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_DMAStop(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !10076 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10078, metadata !DIExpression()), !dbg !10080
  call void @llvm.dbg.value(metadata i32 0, metadata !10079, metadata !DIExpression()), !dbg !10080
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10081
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10081, !tbaa !9295
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !10081
  %5 = load volatile i32, i32* %4, align 4, !dbg !10081, !tbaa !5056
  %6 = and i32 %5, 128, !dbg !10081
  %7 = icmp ne i32 %6, 0, !dbg !10081
  call void @llvm.dbg.value(metadata i1 %7, metadata !10079, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10080
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10082
  %9 = load volatile i32, i32* %8, align 4, !dbg !10082, !tbaa !9282
  %10 = icmp eq i32 %9, 33, !dbg !10084
  %11 = select i1 %10, i1 %7, i1 false, !dbg !10085
  br i1 %11, label %12, label %21, !dbg !10085

12:                                               ; preds = %1
  %13 = load volatile i32, i32* %4, align 4, !dbg !10086, !tbaa !5056
  %14 = and i32 %13, -129, !dbg !10086
  store volatile i32 %14, i32* %4, align 4, !dbg !10086, !tbaa !5056
  %15 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !10088
  %16 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %15, align 4, !dbg !10088, !tbaa !9788
  %17 = icmp eq %struct.__DMA_HandleTypeDef* %16, null, !dbg !10090
  br i1 %17, label %20, label %18, !dbg !10091

18:                                               ; preds = %12
  %19 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %16) #34, !dbg !10092
  br label %20, !dbg !10094

20:                                               ; preds = %18, %12
  call fastcc void @UART_EndTxTransfer(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10095
  br label %21, !dbg !10096

21:                                               ; preds = %20, %1
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10097, !tbaa !9295
  %23 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %22, i32 0, i32 5, !dbg !10097
  %24 = load volatile i32, i32* %23, align 4, !dbg !10097, !tbaa !5056
  %25 = and i32 %24, 64, !dbg !10097
  %26 = icmp ne i32 %25, 0, !dbg !10097
  call void @llvm.dbg.value(metadata i1 %26, metadata !10079, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10080
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !10098
  %28 = load volatile i32, i32* %27, align 4, !dbg !10098, !tbaa !9306
  %29 = icmp eq i32 %28, 34, !dbg !10100
  %30 = select i1 %29, i1 %26, i1 false, !dbg !10101
  br i1 %30, label %31, label %40, !dbg !10101

31:                                               ; preds = %21
  %32 = load volatile i32, i32* %23, align 4, !dbg !10102, !tbaa !5056
  %33 = and i32 %32, -65, !dbg !10102
  store volatile i32 %33, i32* %23, align 4, !dbg !10102, !tbaa !5056
  %34 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !10104
  %35 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %34, align 4, !dbg !10104, !tbaa !9944
  %36 = icmp eq %struct.__DMA_HandleTypeDef* %35, null, !dbg !10106
  br i1 %36, label %39, label %37, !dbg !10107

37:                                               ; preds = %31
  %38 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %35) #34, !dbg !10108
  br label %39, !dbg !10110

39:                                               ; preds = %37, %31
  call fastcc void @UART_EndRxTransfer(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10111
  br label %40, !dbg !10112

40:                                               ; preds = %39, %21
  ret i32 0, !dbg !10113
}

declare !dbg !10114 dso_local i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef) local_unnamed_addr #33

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Abort(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !10117 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10119, metadata !DIExpression()), !dbg !10120
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10121
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10121, !tbaa !9295
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !10121
  %5 = load volatile i32, i32* %4, align 4, !dbg !10121, !tbaa !5168
  %6 = and i32 %5, -481, !dbg !10121
  store volatile i32 %6, i32* %4, align 4, !dbg !10121, !tbaa !5168
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !10122
  %8 = load volatile i32, i32* %7, align 4, !dbg !10122, !tbaa !5056
  %9 = and i32 %8, -2, !dbg !10122
  store volatile i32 %9, i32* %7, align 4, !dbg !10122, !tbaa !5056
  %10 = load volatile i32, i32* %7, align 4, !dbg !10123, !tbaa !5056
  %11 = and i32 %10, 128, !dbg !10123
  %12 = icmp eq i32 %11, 0, !dbg !10123
  br i1 %12, label %29, label %13, !dbg !10125

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %7, align 4, !dbg !10126, !tbaa !5056
  %15 = and i32 %14, -129, !dbg !10126
  store volatile i32 %15, i32* %7, align 4, !dbg !10126, !tbaa !5056
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !10128
  %17 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !10128, !tbaa !9788
  %18 = icmp eq %struct.__DMA_HandleTypeDef* %17, null, !dbg !10130
  br i1 %18, label %29, label %19, !dbg !10131

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %17, i32 0, i32 8, !dbg !10132
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %20, align 4, !dbg !10134, !tbaa !9801
  %21 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %17) #34, !dbg !10135
  %22 = icmp eq i32 %21, 0, !dbg !10137
  br i1 %22, label %29, label %23, !dbg !10138

23:                                               ; preds = %19
  %24 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !10139, !tbaa !9788
  %25 = call i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef %24) #34, !dbg !10142
  %26 = icmp eq i32 %25, 32, !dbg !10143
  br i1 %26, label %27, label %29, !dbg !10144

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !10145
  store volatile i32 16, i32* %28, align 4, !dbg !10147, !tbaa !9302
  br label %57, !dbg !10148

29:                                               ; preds = %13, %23, %19, %1
  %30 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10149, !tbaa !9295
  %31 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %30, i32 0, i32 5, !dbg !10149
  %32 = load volatile i32, i32* %31, align 4, !dbg !10149, !tbaa !5056
  %33 = and i32 %32, 64, !dbg !10149
  %34 = icmp eq i32 %33, 0, !dbg !10149
  br i1 %34, label %51, label %35, !dbg !10151

35:                                               ; preds = %29
  %36 = load volatile i32, i32* %31, align 4, !dbg !10152, !tbaa !5056
  %37 = and i32 %36, -65, !dbg !10152
  store volatile i32 %37, i32* %31, align 4, !dbg !10152, !tbaa !5056
  %38 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !10154
  %39 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %38, align 4, !dbg !10154, !tbaa !9944
  %40 = icmp eq %struct.__DMA_HandleTypeDef* %39, null, !dbg !10156
  br i1 %40, label %51, label %41, !dbg !10157

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %39, i32 0, i32 8, !dbg !10158
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %42, align 4, !dbg !10160, !tbaa !9801
  %43 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %39) #34, !dbg !10161
  %44 = icmp eq i32 %43, 0, !dbg !10163
  br i1 %44, label %51, label %45, !dbg !10164

45:                                               ; preds = %41
  %46 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %38, align 4, !dbg !10165, !tbaa !9944
  %47 = call i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef %46) #34, !dbg !10168
  %48 = icmp eq i32 %47, 32, !dbg !10169
  br i1 %48, label %49, label %51, !dbg !10170

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !10171
  store volatile i32 16, i32* %50, align 4, !dbg !10173, !tbaa !9302
  br label %57, !dbg !10174

51:                                               ; preds = %35, %45, %41, %29
  %52 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !10175
  store volatile i16 0, i16* %52, align 2, !dbg !10176, !tbaa !9507
  %53 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !10177
  store volatile i16 0, i16* %53, align 2, !dbg !10178, !tbaa !9623
  %54 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !10179
  store volatile i32 0, i32* %54, align 4, !dbg !10180, !tbaa !9302
  %55 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !10181
  store volatile i32 32, i32* %55, align 4, !dbg !10182, !tbaa !9306
  %56 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10183
  store volatile i32 32, i32* %56, align 4, !dbg !10184, !tbaa !9282
  br label %57, !dbg !10185

57:                                               ; preds = %51, %49, %27
  %58 = phi i32 [ 3, %27 ], [ 3, %49 ], [ 0, %51 ], !dbg !10120
  ret i32 %58, !dbg !10186
}

declare !dbg !10187 dso_local i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef) local_unnamed_addr #33

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_AbortTransmit(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !10190 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10192, metadata !DIExpression()), !dbg !10193
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10194
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10194, !tbaa !9295
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !10194
  %5 = load volatile i32, i32* %4, align 4, !dbg !10194, !tbaa !5168
  %6 = and i32 %5, -193, !dbg !10194
  store volatile i32 %6, i32* %4, align 4, !dbg !10194, !tbaa !5168
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !10195
  %8 = load volatile i32, i32* %7, align 4, !dbg !10195, !tbaa !5056
  %9 = and i32 %8, 128, !dbg !10195
  %10 = icmp eq i32 %9, 0, !dbg !10195
  br i1 %10, label %27, label %11, !dbg !10197

11:                                               ; preds = %1
  %12 = load volatile i32, i32* %7, align 4, !dbg !10198, !tbaa !5056
  %13 = and i32 %12, -129, !dbg !10198
  store volatile i32 %13, i32* %7, align 4, !dbg !10198, !tbaa !5056
  %14 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !10200
  %15 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %14, align 4, !dbg !10200, !tbaa !9788
  %16 = icmp eq %struct.__DMA_HandleTypeDef* %15, null, !dbg !10202
  br i1 %16, label %27, label %17, !dbg !10203

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %15, i32 0, i32 8, !dbg !10204
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %18, align 4, !dbg !10206, !tbaa !9801
  %19 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %15) #34, !dbg !10207
  %20 = icmp eq i32 %19, 0, !dbg !10209
  br i1 %20, label %27, label %21, !dbg !10210

21:                                               ; preds = %17
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %14, align 4, !dbg !10211, !tbaa !9788
  %23 = call i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef %22) #34, !dbg !10214
  %24 = icmp eq i32 %23, 32, !dbg !10215
  br i1 %24, label %25, label %27, !dbg !10216

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !10217
  store volatile i32 16, i32* %26, align 4, !dbg !10219, !tbaa !9302
  br label %30, !dbg !10220

27:                                               ; preds = %11, %21, %17, %1
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !10221
  store volatile i16 0, i16* %28, align 2, !dbg !10222, !tbaa !9507
  %29 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10223
  store volatile i32 32, i32* %29, align 4, !dbg !10224, !tbaa !9282
  br label %30, !dbg !10225

30:                                               ; preds = %27, %25
  %31 = phi i32 [ 3, %25 ], [ 0, %27 ], !dbg !10193
  ret i32 %31, !dbg !10226
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_AbortReceive(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !10227 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10229, metadata !DIExpression()), !dbg !10230
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10231
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10231, !tbaa !9295
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !10231
  %5 = load volatile i32, i32* %4, align 4, !dbg !10231, !tbaa !5168
  %6 = and i32 %5, -289, !dbg !10231
  store volatile i32 %6, i32* %4, align 4, !dbg !10231, !tbaa !5168
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !10232
  %8 = load volatile i32, i32* %7, align 4, !dbg !10232, !tbaa !5056
  %9 = and i32 %8, -2, !dbg !10232
  store volatile i32 %9, i32* %7, align 4, !dbg !10232, !tbaa !5056
  %10 = load volatile i32, i32* %7, align 4, !dbg !10233, !tbaa !5056
  %11 = and i32 %10, 64, !dbg !10233
  %12 = icmp eq i32 %11, 0, !dbg !10233
  br i1 %12, label %29, label %13, !dbg !10235

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %7, align 4, !dbg !10236, !tbaa !5056
  %15 = and i32 %14, -65, !dbg !10236
  store volatile i32 %15, i32* %7, align 4, !dbg !10236, !tbaa !5056
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !10238
  %17 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !10238, !tbaa !9944
  %18 = icmp eq %struct.__DMA_HandleTypeDef* %17, null, !dbg !10240
  br i1 %18, label %29, label %19, !dbg !10241

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %17, i32 0, i32 8, !dbg !10242
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %20, align 4, !dbg !10244, !tbaa !9801
  %21 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %17) #34, !dbg !10245
  %22 = icmp eq i32 %21, 0, !dbg !10247
  br i1 %22, label %29, label %23, !dbg !10248

23:                                               ; preds = %19
  %24 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !10249, !tbaa !9944
  %25 = call i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef %24) #34, !dbg !10252
  %26 = icmp eq i32 %25, 32, !dbg !10253
  br i1 %26, label %27, label %29, !dbg !10254

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !10255
  store volatile i32 16, i32* %28, align 4, !dbg !10257, !tbaa !9302
  br label %32, !dbg !10258

29:                                               ; preds = %13, %23, %19, %1
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !10259
  store volatile i16 0, i16* %30, align 2, !dbg !10260, !tbaa !9623
  %31 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !10261
  store volatile i32 32, i32* %31, align 4, !dbg !10262, !tbaa !9306
  br label %32, !dbg !10263

32:                                               ; preds = %29, %27
  %33 = phi i32 [ 3, %27 ], [ 0, %29 ], !dbg !10230
  ret i32 %33, !dbg !10264
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Abort_IT(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !10265 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10267, metadata !DIExpression()), !dbg !10269
  call void @llvm.dbg.value(metadata i32 1, metadata !10268, metadata !DIExpression()), !dbg !10269
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10270
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10270, !tbaa !9295
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !10270
  %5 = load volatile i32, i32* %4, align 4, !dbg !10270, !tbaa !5168
  %6 = and i32 %5, -481, !dbg !10270
  store volatile i32 %6, i32* %4, align 4, !dbg !10270, !tbaa !5168
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !10271
  %8 = load volatile i32, i32* %7, align 4, !dbg !10271, !tbaa !5056
  %9 = and i32 %8, -2, !dbg !10271
  store volatile i32 %9, i32* %7, align 4, !dbg !10271, !tbaa !5056
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !10272
  %11 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %10, align 4, !dbg !10272, !tbaa !9788
  %12 = icmp eq %struct.__DMA_HandleTypeDef* %11, null, !dbg !10274
  br i1 %12, label %19, label %13, !dbg !10275

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %7, align 4, !dbg !10276, !tbaa !5056
  %15 = and i32 %14, 128, !dbg !10276
  %16 = icmp eq i32 %15, 0, !dbg !10276
  %17 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %11, i32 0, i32 8, !dbg !10279
  %18 = select i1 %16, void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)* @UART_DMATxAbortCallback
  store void (%struct.__DMA_HandleTypeDef*)* %18, void (%struct.__DMA_HandleTypeDef*)** %17, align 4, !dbg !10279, !tbaa !9801
  br label %19, !dbg !10280

19:                                               ; preds = %13, %1
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !10280
  %21 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %20, align 4, !dbg !10280, !tbaa !9944
  %22 = icmp eq %struct.__DMA_HandleTypeDef* %21, null, !dbg !10282
  br i1 %22, label %29, label %23, !dbg !10283

23:                                               ; preds = %19
  %24 = load volatile i32, i32* %7, align 4, !dbg !10284, !tbaa !5056
  %25 = and i32 %24, 64, !dbg !10284
  %26 = icmp eq i32 %25, 0, !dbg !10284
  %27 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %21, i32 0, i32 8, !dbg !10287
  %28 = select i1 %26, void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)* @UART_DMARxAbortCallback
  store void (%struct.__DMA_HandleTypeDef*)* %28, void (%struct.__DMA_HandleTypeDef*)** %27, align 4, !dbg !10287, !tbaa !9801
  br label %29, !dbg !10288

29:                                               ; preds = %23, %19
  %30 = load volatile i32, i32* %7, align 4, !dbg !10288, !tbaa !5056
  %31 = and i32 %30, 128, !dbg !10288
  %32 = icmp eq i32 %31, 0, !dbg !10288
  br i1 %32, label %42, label %33, !dbg !10290

33:                                               ; preds = %29
  %34 = load volatile i32, i32* %7, align 4, !dbg !10291, !tbaa !5056
  %35 = and i32 %34, -129, !dbg !10291
  store volatile i32 %35, i32* %7, align 4, !dbg !10291, !tbaa !5056
  br i1 %12, label %42, label %36, !dbg !10293

36:                                               ; preds = %33
  %37 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %11) #34, !dbg !10294
  %38 = icmp eq i32 %37, 0, !dbg !10298
  br i1 %38, label %42, label %39, !dbg !10299

39:                                               ; preds = %36
  %40 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %10, align 4, !dbg !10300, !tbaa !9788
  %41 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %40, i32 0, i32 8, !dbg !10302
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %41, align 4, !dbg !10303, !tbaa !9801
  br label %42, !dbg !10304

42:                                               ; preds = %36, %33, %39, %29
  %43 = phi i32 [ 1, %39 ], [ 1, %33 ], [ 1, %29 ], [ 0, %36 ], !dbg !10269
  call void @llvm.dbg.value(metadata i32 %43, metadata !10268, metadata !DIExpression()), !dbg !10269
  %44 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10305, !tbaa !9295
  %45 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %44, i32 0, i32 5, !dbg !10305
  %46 = load volatile i32, i32* %45, align 4, !dbg !10305, !tbaa !5056
  %47 = and i32 %46, 64, !dbg !10305
  %48 = icmp eq i32 %47, 0, !dbg !10305
  br i1 %48, label %60, label %49, !dbg !10307

49:                                               ; preds = %42
  %50 = load volatile i32, i32* %45, align 4, !dbg !10308, !tbaa !5056
  %51 = and i32 %50, -65, !dbg !10308
  store volatile i32 %51, i32* %45, align 4, !dbg !10308, !tbaa !5056
  %52 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %20, align 4, !dbg !10310, !tbaa !9944
  %53 = icmp eq %struct.__DMA_HandleTypeDef* %52, null, !dbg !10312
  br i1 %53, label %60, label %54, !dbg !10313

54:                                               ; preds = %49
  %55 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %52) #34, !dbg !10314
  %56 = icmp eq i32 %55, 0, !dbg !10317
  br i1 %56, label %60, label %57, !dbg !10318

57:                                               ; preds = %54
  %58 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %20, align 4, !dbg !10319, !tbaa !9944
  %59 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %58, i32 0, i32 8, !dbg !10321
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %59, align 4, !dbg !10322, !tbaa !9801
  call void @llvm.dbg.value(metadata i32 1, metadata !10268, metadata !DIExpression()), !dbg !10269
  br label %60, !dbg !10323

60:                                               ; preds = %54, %49, %57, %42
  %61 = phi i32 [ 1, %57 ], [ %43, %49 ], [ %43, %42 ], [ 0, %54 ], !dbg !10269
  call void @llvm.dbg.value(metadata i32 %61, metadata !10268, metadata !DIExpression()), !dbg !10269
  %62 = icmp eq i32 %61, 1, !dbg !10324
  br i1 %62, label %63, label %69, !dbg !10326

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !10327
  store volatile i16 0, i16* %64, align 2, !dbg !10329, !tbaa !9507
  %65 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !10330
  store volatile i16 0, i16* %65, align 2, !dbg !10331, !tbaa !9623
  %66 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !10332
  store volatile i32 0, i32* %66, align 4, !dbg !10333, !tbaa !9302
  %67 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10334
  store volatile i32 32, i32* %67, align 4, !dbg !10335, !tbaa !9282
  %68 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !10336
  store volatile i32 32, i32* %68, align 4, !dbg !10337, !tbaa !9306
  call void @HAL_UART_AbortCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10338
  br label %69, !dbg !10339

69:                                               ; preds = %63, %60
  ret i32 0, !dbg !10340
}

; Function Attrs: noinline nounwind
define internal void @UART_DMATxAbortCallback(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !10341 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !10343, metadata !DIExpression()), !dbg !10345
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !10346
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !10346
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !10346, !tbaa !9822
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !10344, metadata !DIExpression()), !dbg !10345
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 8, !dbg !10347
  %6 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %5, align 4, !dbg !10347, !tbaa !9788
  %7 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %6, i32 0, i32 8, !dbg !10348
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %7, align 4, !dbg !10349, !tbaa !9801
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 9, !dbg !10350
  %9 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %8, align 4, !dbg !10350, !tbaa !9944
  %10 = icmp eq %struct.__DMA_HandleTypeDef* %9, null, !dbg !10352
  br i1 %10, label %15, label %11, !dbg !10353

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %9, i32 0, i32 8, !dbg !10354
  %13 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %12, align 4, !dbg !10354, !tbaa !9801
  %14 = icmp eq void (%struct.__DMA_HandleTypeDef*)* %13, null, !dbg !10357
  br i1 %14, label %15, label %21, !dbg !10358

15:                                               ; preds = %11, %1
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !10359
  store volatile i16 0, i16* %16, align 2, !dbg !10360, !tbaa !9507
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !10361
  store volatile i16 0, i16* %17, align 2, !dbg !10362, !tbaa !9623
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 13, !dbg !10363
  store volatile i32 0, i32* %18, align 4, !dbg !10364, !tbaa !9302
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 11, !dbg !10365
  store volatile i32 32, i32* %19, align 4, !dbg !10366, !tbaa !9282
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !10367
  store volatile i32 32, i32* %20, align 4, !dbg !10368, !tbaa !9306
  call void @HAL_UART_AbortCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !10369
  br label %21, !dbg !10370

21:                                               ; preds = %11, %15
  ret void, !dbg !10370
}

; Function Attrs: noinline nounwind
define internal void @UART_DMARxAbortCallback(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !10371 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !10373, metadata !DIExpression()), !dbg !10375
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !10376
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !10376
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !10376, !tbaa !9822
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !10374, metadata !DIExpression()), !dbg !10375
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 9, !dbg !10377
  %6 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %5, align 4, !dbg !10377, !tbaa !9944
  %7 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %6, i32 0, i32 8, !dbg !10378
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %7, align 4, !dbg !10379, !tbaa !9801
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 8, !dbg !10380
  %9 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %8, align 4, !dbg !10380, !tbaa !9788
  %10 = icmp eq %struct.__DMA_HandleTypeDef* %9, null, !dbg !10382
  br i1 %10, label %15, label %11, !dbg !10383

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %9, i32 0, i32 8, !dbg !10384
  %13 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %12, align 4, !dbg !10384, !tbaa !9801
  %14 = icmp eq void (%struct.__DMA_HandleTypeDef*)* %13, null, !dbg !10387
  br i1 %14, label %15, label %21, !dbg !10388

15:                                               ; preds = %11, %1
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !10389
  store volatile i16 0, i16* %16, align 2, !dbg !10390, !tbaa !9507
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !10391
  store volatile i16 0, i16* %17, align 2, !dbg !10392, !tbaa !9623
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 13, !dbg !10393
  store volatile i32 0, i32* %18, align 4, !dbg !10394, !tbaa !9302
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 11, !dbg !10395
  store volatile i32 32, i32* %19, align 4, !dbg !10396, !tbaa !9282
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !10397
  store volatile i32 32, i32* %20, align 4, !dbg !10398, !tbaa !9306
  call void @HAL_UART_AbortCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !10399
  br label %21, !dbg !10400

21:                                               ; preds = %11, %15
  ret void, !dbg !10400
}

declare !dbg !10401 dso_local i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef) local_unnamed_addr #33

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_AbortCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !10402 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10404, metadata !DIExpression()), !dbg !10405
  ret void, !dbg !10406
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_AbortTransmit_IT(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !10407 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10409, metadata !DIExpression()), !dbg !10410
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10411
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10411, !tbaa !9295
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !10411
  %5 = load volatile i32, i32* %4, align 4, !dbg !10411, !tbaa !5168
  %6 = and i32 %5, -193, !dbg !10411
  store volatile i32 %6, i32* %4, align 4, !dbg !10411, !tbaa !5168
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !10412
  %8 = load volatile i32, i32* %7, align 4, !dbg !10412, !tbaa !5056
  %9 = and i32 %8, 128, !dbg !10412
  %10 = icmp eq i32 %9, 0, !dbg !10412
  br i1 %10, label %28, label %11, !dbg !10414

11:                                               ; preds = %1
  %12 = load volatile i32, i32* %7, align 4, !dbg !10415, !tbaa !5056
  %13 = and i32 %12, -129, !dbg !10415
  store volatile i32 %13, i32* %7, align 4, !dbg !10415, !tbaa !5056
  %14 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !10417
  %15 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %14, align 4, !dbg !10417, !tbaa !9788
  %16 = icmp eq %struct.__DMA_HandleTypeDef* %15, null, !dbg !10419
  br i1 %16, label %25, label %17, !dbg !10420

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %15, i32 0, i32 8, !dbg !10421
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMATxOnlyAbortCallback, void (%struct.__DMA_HandleTypeDef*)** %18, align 4, !dbg !10423, !tbaa !9801
  %19 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %15) #34, !dbg !10424
  %20 = icmp eq i32 %19, 0, !dbg !10426
  br i1 %20, label %31, label %21, !dbg !10427

21:                                               ; preds = %17
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %14, align 4, !dbg !10428, !tbaa !9788
  %23 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 8, !dbg !10430
  %24 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %23, align 4, !dbg !10430, !tbaa !9801
  call void %24(%struct.__DMA_HandleTypeDef* noundef %22) #34, !dbg !10431
  br label %31, !dbg !10432

25:                                               ; preds = %11
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !10433
  store volatile i16 0, i16* %26, align 2, !dbg !10435, !tbaa !9507
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10436
  store volatile i32 32, i32* %27, align 4, !dbg !10437, !tbaa !9282
  call void @HAL_UART_AbortTransmitCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10438
  br label %31

28:                                               ; preds = %1
  %29 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !10439
  store volatile i16 0, i16* %29, align 2, !dbg !10441, !tbaa !9507
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10442
  store volatile i32 32, i32* %30, align 4, !dbg !10443, !tbaa !9282
  call void @HAL_UART_AbortTransmitCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10444
  br label %31

31:                                               ; preds = %25, %21, %17, %28
  ret i32 0, !dbg !10445
}

; Function Attrs: noinline nounwind
define internal void @UART_DMATxOnlyAbortCallback(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !10446 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !10448, metadata !DIExpression()), !dbg !10450
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !10451
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !10451
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !10451, !tbaa !9822
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !10449, metadata !DIExpression()), !dbg !10450
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !10452
  store volatile i16 0, i16* %5, align 2, !dbg !10453, !tbaa !9507
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 11, !dbg !10454
  store volatile i32 32, i32* %6, align 4, !dbg !10455, !tbaa !9282
  call void @HAL_UART_AbortTransmitCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !10456
  ret void, !dbg !10457
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_AbortTransmitCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !10458 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10460, metadata !DIExpression()), !dbg !10461
  ret void, !dbg !10462
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_AbortReceive_IT(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !10463 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10465, metadata !DIExpression()), !dbg !10466
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10467
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10467, !tbaa !9295
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !10467
  %5 = load volatile i32, i32* %4, align 4, !dbg !10467, !tbaa !5168
  %6 = and i32 %5, -289, !dbg !10467
  store volatile i32 %6, i32* %4, align 4, !dbg !10467, !tbaa !5168
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !10468
  %8 = load volatile i32, i32* %7, align 4, !dbg !10468, !tbaa !5056
  %9 = and i32 %8, -2, !dbg !10468
  store volatile i32 %9, i32* %7, align 4, !dbg !10468, !tbaa !5056
  %10 = load volatile i32, i32* %7, align 4, !dbg !10469, !tbaa !5056
  %11 = and i32 %10, 64, !dbg !10469
  %12 = icmp eq i32 %11, 0, !dbg !10469
  br i1 %12, label %30, label %13, !dbg !10471

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %7, align 4, !dbg !10472, !tbaa !5056
  %15 = and i32 %14, -65, !dbg !10472
  store volatile i32 %15, i32* %7, align 4, !dbg !10472, !tbaa !5056
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !10474
  %17 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !10474, !tbaa !9944
  %18 = icmp eq %struct.__DMA_HandleTypeDef* %17, null, !dbg !10476
  br i1 %18, label %27, label %19, !dbg !10477

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %17, i32 0, i32 8, !dbg !10478
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMARxOnlyAbortCallback, void (%struct.__DMA_HandleTypeDef*)** %20, align 4, !dbg !10480, !tbaa !9801
  %21 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %17) #34, !dbg !10481
  %22 = icmp eq i32 %21, 0, !dbg !10483
  br i1 %22, label %33, label %23, !dbg !10484

23:                                               ; preds = %19
  %24 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !10485, !tbaa !9944
  %25 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %24, i32 0, i32 8, !dbg !10487
  %26 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %25, align 4, !dbg !10487, !tbaa !9801
  call void %26(%struct.__DMA_HandleTypeDef* noundef %24) #34, !dbg !10488
  br label %33, !dbg !10489

27:                                               ; preds = %13
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !10490
  store volatile i16 0, i16* %28, align 2, !dbg !10492, !tbaa !9623
  %29 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !10493
  store volatile i32 32, i32* %29, align 4, !dbg !10494, !tbaa !9306
  call void @HAL_UART_AbortReceiveCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10495
  br label %33

30:                                               ; preds = %1
  %31 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !10496
  store volatile i16 0, i16* %31, align 2, !dbg !10498, !tbaa !9623
  %32 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !10499
  store volatile i32 32, i32* %32, align 4, !dbg !10500, !tbaa !9306
  call void @HAL_UART_AbortReceiveCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10501
  br label %33

33:                                               ; preds = %27, %23, %19, %30
  ret i32 0, !dbg !10502
}

; Function Attrs: noinline nounwind
define internal void @UART_DMARxOnlyAbortCallback(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !10503 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !10505, metadata !DIExpression()), !dbg !10507
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !10508
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !10508
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !10508, !tbaa !9822
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !10506, metadata !DIExpression()), !dbg !10507
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !10509
  store volatile i16 0, i16* %5, align 2, !dbg !10510, !tbaa !9623
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !10511
  store volatile i32 32, i32* %6, align 4, !dbg !10512, !tbaa !9306
  call void @HAL_UART_AbortReceiveCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !10513
  ret void, !dbg !10514
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_AbortReceiveCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !10515 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10517, metadata !DIExpression()), !dbg !10518
  ret void, !dbg !10519
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_UART_IRQHandler(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !10520 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10522, metadata !DIExpression()), !dbg !10528
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10529
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10529, !tbaa !9295
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 0, !dbg !10529
  %5 = load volatile i32, i32* %4, align 4, !dbg !10529, !tbaa !9567
  call void @llvm.dbg.value(metadata i32 %5, metadata !10523, metadata !DIExpression()), !dbg !10528
  %6 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !10530
  %7 = load volatile i32, i32* %6, align 4, !dbg !10530, !tbaa !5168
  call void @llvm.dbg.value(metadata i32 %7, metadata !10524, metadata !DIExpression()), !dbg !10528
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !10531
  %9 = load volatile i32, i32* %8, align 4, !dbg !10531, !tbaa !5056
  call void @llvm.dbg.value(metadata i32 %9, metadata !10525, metadata !DIExpression()), !dbg !10528
  call void @llvm.dbg.value(metadata i32 0, metadata !10526, metadata !DIExpression()), !dbg !10528
  call void @llvm.dbg.value(metadata i32 0, metadata !10527, metadata !DIExpression()), !dbg !10528
  call void @llvm.dbg.value(metadata i32 %5, metadata !10526, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !10528
  %10 = and i32 %5, 32
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %5, 47, !dbg !10532
  %13 = icmp ne i32 %12, 32, !dbg !10532
  %14 = and i32 %7, 32
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %13, i1 true, i1 %15, !dbg !10532
  br i1 %16, label %18, label %17, !dbg !10532

17:                                               ; preds = %1
  call fastcc void @UART_Receive_IT(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10533
  br label %115, !dbg !10538

18:                                               ; preds = %1
  %19 = and i32 %5, 15, !dbg !10539
  call void @llvm.dbg.value(metadata i32 %19, metadata !10526, metadata !DIExpression()), !dbg !10528
  %20 = icmp eq i32 %19, 0, !dbg !10540
  br i1 %20, label %101, label %21, !dbg !10542

21:                                               ; preds = %18
  %22 = and i32 %9, 1, !dbg !10543
  %23 = icmp eq i32 %22, 0, !dbg !10544
  %24 = and i32 %7, 288
  %25 = icmp eq i32 %24, 0
  %26 = select i1 %23, i1 %25, i1 false, !dbg !10545
  br i1 %26, label %101, label %27, !dbg !10545

27:                                               ; preds = %21
  %28 = and i32 %5, 1, !dbg !10546
  %29 = icmp eq i32 %28, 0, !dbg !10549
  %30 = and i32 %7, 256
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %29, i1 true, i1 %31, !dbg !10550
  br i1 %32, label %37, label %33, !dbg !10550

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !10551
  %35 = load volatile i32, i32* %34, align 4, !dbg !10553, !tbaa !9302
  %36 = or i32 %35, 1, !dbg !10553
  store volatile i32 %36, i32* %34, align 4, !dbg !10553, !tbaa !9302
  br label %37, !dbg !10554

37:                                               ; preds = %33, %27
  %38 = and i32 %5, 4, !dbg !10555
  %39 = icmp eq i32 %38, 0, !dbg !10557
  %40 = select i1 %39, i1 true, i1 %23, !dbg !10558
  br i1 %40, label %45, label %41, !dbg !10558

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !10559
  %43 = load volatile i32, i32* %42, align 4, !dbg !10561, !tbaa !9302
  %44 = or i32 %43, 2, !dbg !10561
  store volatile i32 %44, i32* %42, align 4, !dbg !10561, !tbaa !9302
  br label %45, !dbg !10562

45:                                               ; preds = %37, %41
  %46 = and i32 %5, 2, !dbg !10563
  %47 = icmp eq i32 %46, 0, !dbg !10565
  %48 = select i1 %47, i1 true, i1 %23, !dbg !10566
  br i1 %48, label %53, label %49, !dbg !10566

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !10567
  %51 = load volatile i32, i32* %50, align 4, !dbg !10569, !tbaa !9302
  %52 = or i32 %51, 4, !dbg !10569
  store volatile i32 %52, i32* %50, align 4, !dbg !10569, !tbaa !9302
  br label %53, !dbg !10570

53:                                               ; preds = %45, %49
  %54 = and i32 %5, 8, !dbg !10571
  %55 = icmp eq i32 %54, 0, !dbg !10573
  %56 = select i1 %55, i1 true, i1 %23, !dbg !10574
  br i1 %56, label %61, label %57, !dbg !10574

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !10575
  %59 = load volatile i32, i32* %58, align 4, !dbg !10577, !tbaa !9302
  %60 = or i32 %59, 8, !dbg !10577
  store volatile i32 %60, i32* %58, align 4, !dbg !10577, !tbaa !9302
  br label %61, !dbg !10578

61:                                               ; preds = %53, %57
  %62 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !10579
  %63 = load volatile i32, i32* %62, align 4, !dbg !10579, !tbaa !9302
  %64 = icmp eq i32 %63, 0, !dbg !10581
  br i1 %64, label %115, label %65, !dbg !10582

65:                                               ; preds = %61
  %66 = select i1 %11, i1 true, i1 %15, !dbg !10583
  br i1 %66, label %68, label %67, !dbg !10583

67:                                               ; preds = %65
  call fastcc void @UART_Receive_IT(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10586
  br label %68, !dbg !10588

68:                                               ; preds = %67, %65
  %69 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10589, !tbaa !9295
  %70 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %69, i32 0, i32 5, !dbg !10589
  %71 = load volatile i32, i32* %70, align 4, !dbg !10589, !tbaa !5056
  %72 = and i32 %71, 64, !dbg !10589
  %73 = icmp ne i32 %72, 0, !dbg !10589
  call void @llvm.dbg.value(metadata i1 %73, metadata !10527, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10528
  %74 = load volatile i32, i32* %62, align 4, !dbg !10590, !tbaa !9302
  %75 = and i32 %74, 8, !dbg !10592
  %76 = icmp ne i32 %75, 0, !dbg !10593
  %77 = select i1 %76, i1 true, i1 %73, !dbg !10594
  br i1 %77, label %78, label %100, !dbg !10594

78:                                               ; preds = %68
  call fastcc void @UART_EndRxTransfer(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10595
  %79 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10597, !tbaa !9295
  %80 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %79, i32 0, i32 5, !dbg !10597
  %81 = load volatile i32, i32* %80, align 4, !dbg !10597, !tbaa !5056
  %82 = and i32 %81, 64, !dbg !10597
  %83 = icmp eq i32 %82, 0, !dbg !10597
  br i1 %83, label %99, label %84, !dbg !10599

84:                                               ; preds = %78
  %85 = load volatile i32, i32* %80, align 4, !dbg !10600, !tbaa !5056
  %86 = and i32 %85, -65, !dbg !10600
  store volatile i32 %86, i32* %80, align 4, !dbg !10600, !tbaa !5056
  %87 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !10602
  %88 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %87, align 4, !dbg !10602, !tbaa !9944
  %89 = icmp eq %struct.__DMA_HandleTypeDef* %88, null, !dbg !10604
  br i1 %89, label %98, label %90, !dbg !10605

90:                                               ; preds = %84
  %91 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %88, i32 0, i32 8, !dbg !10606
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMAAbortOnError, void (%struct.__DMA_HandleTypeDef*)** %91, align 4, !dbg !10608, !tbaa !9801
  %92 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %88) #34, !dbg !10609
  %93 = icmp eq i32 %92, 0, !dbg !10611
  br i1 %93, label %115, label %94, !dbg !10612

94:                                               ; preds = %90
  %95 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %87, align 4, !dbg !10613, !tbaa !9944
  %96 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %95, i32 0, i32 8, !dbg !10615
  %97 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %96, align 4, !dbg !10615, !tbaa !9801
  call void %97(%struct.__DMA_HandleTypeDef* noundef %95) #34, !dbg !10616
  br label %115, !dbg !10617

98:                                               ; preds = %84
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10618
  br label %115

99:                                               ; preds = %78
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10620
  br label %115

100:                                              ; preds = %68
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10622
  store volatile i32 0, i32* %62, align 4, !dbg !10624, !tbaa !9302
  br label %115

101:                                              ; preds = %21, %18
  %102 = and i32 %5, 128, !dbg !10625
  %103 = icmp eq i32 %102, 0, !dbg !10627
  %104 = and i32 %7, 128
  %105 = icmp eq i32 %104, 0
  %106 = select i1 %103, i1 true, i1 %105, !dbg !10628
  br i1 %106, label %108, label %107, !dbg !10628

107:                                              ; preds = %101
  call fastcc void @UART_Transmit_IT(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10629
  br label %115, !dbg !10631

108:                                              ; preds = %101
  %109 = and i32 %5, 64, !dbg !10632
  %110 = icmp eq i32 %109, 0, !dbg !10634
  %111 = and i32 %7, 64
  %112 = icmp eq i32 %111, 0
  %113 = select i1 %110, i1 true, i1 %112, !dbg !10635
  br i1 %113, label %115, label %114, !dbg !10635

114:                                              ; preds = %108
  call fastcc void @UART_EndTransmit_IT(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10636
  br label %115, !dbg !10638

115:                                              ; preds = %108, %61, %99, %90, %94, %98, %100, %114, %107, %17
  ret void, !dbg !10639
}

; Function Attrs: noinline nounwind
define internal fastcc void @UART_Receive_IT(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #3 !dbg !10640 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10642, metadata !DIExpression()), !dbg !10644
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !10645
  %3 = load volatile i32, i32* %2, align 4, !dbg !10645, !tbaa !9306
  %4 = icmp eq i32 %3, 34, !dbg !10647
  br i1 %4, label %5, label %63, !dbg !10648

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1, !dbg !10649
  %7 = load i32, i32* %6, align 4, !dbg !10649, !tbaa !9325
  %8 = icmp eq i32 %7, 4096, !dbg !10652
  br i1 %8, label %9, label %29, !dbg !10653

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !10654
  %11 = bitcast i8** %10 to i16**, !dbg !10654
  %12 = load i16*, i16** %11, align 4, !dbg !10654, !tbaa !9741
  call void @llvm.dbg.value(metadata i16* %12, metadata !10643, metadata !DIExpression()), !dbg !10644
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3, !dbg !10656
  %14 = load i32, i32* %13, align 4, !dbg !10656, !tbaa !9327
  %15 = icmp eq i32 %14, 0, !dbg !10658
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10659
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %16, align 4, !dbg !10659, !tbaa !9295
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 1, !dbg !10659
  %19 = load volatile i32, i32* %18, align 4, !dbg !10659, !tbaa !9527
  %20 = trunc i32 %19 to i16, !dbg !10659
  br i1 %15, label %21, label %25, !dbg !10660

21:                                               ; preds = %9
  %22 = and i16 %20, 511, !dbg !10661
  store i16 %22, i16* %12, align 2, !dbg !10663, !tbaa !9522
  %23 = load i8*, i8** %10, align 4, !dbg !10664, !tbaa !9741
  %24 = getelementptr inbounds i8, i8* %23, i32 2, !dbg !10664
  store i8* %24, i8** %10, align 4, !dbg !10664, !tbaa !9741
  br label %47, !dbg !10665

25:                                               ; preds = %9
  %26 = and i16 %20, 255, !dbg !10666
  store i16 %26, i16* %12, align 2, !dbg !10668, !tbaa !9522
  %27 = load i8*, i8** %10, align 4, !dbg !10669, !tbaa !9741
  %28 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !10669
  store i8* %28, i8** %10, align 4, !dbg !10669, !tbaa !9741
  br label %47

29:                                               ; preds = %5
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3, !dbg !10670
  %31 = load i32, i32* %30, align 4, !dbg !10670, !tbaa !9327
  %32 = icmp eq i32 %31, 0, !dbg !10673
  %33 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10674
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %33, align 4, !dbg !10674, !tbaa !9295
  %35 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 1, !dbg !10674
  %36 = load volatile i32, i32* %35, align 4, !dbg !10674, !tbaa !9527
  %37 = trunc i32 %36 to i8, !dbg !10674
  br i1 %32, label %38, label %42, !dbg !10675

38:                                               ; preds = %29
  %39 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !10676
  %40 = load i8*, i8** %39, align 4, !dbg !10678, !tbaa !9741
  %41 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !10678
  store i8* %41, i8** %39, align 4, !dbg !10678, !tbaa !9741
  store i8 %37, i8* %40, align 1, !dbg !10679, !tbaa !2851
  br label %47, !dbg !10680

42:                                               ; preds = %29
  %43 = and i8 %37, 127, !dbg !10681
  %44 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !10683
  %45 = load i8*, i8** %44, align 4, !dbg !10684, !tbaa !9741
  %46 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !10684
  store i8* %46, i8** %44, align 4, !dbg !10684, !tbaa !9741
  store i8 %43, i8* %45, align 1, !dbg !10685, !tbaa !2851
  br label %47

47:                                               ; preds = %38, %42, %21, %25
  %48 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !10686
  %49 = load volatile i16, i16* %48, align 2, !dbg !10688, !tbaa !9623
  %50 = add i16 %49, -1, !dbg !10688
  store volatile i16 %50, i16* %48, align 2, !dbg !10688, !tbaa !9623
  %51 = icmp eq i16 %50, 0, !dbg !10689
  br i1 %51, label %52, label %63, !dbg !10690

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10691
  %54 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %53, align 4, !dbg !10691, !tbaa !9295
  %55 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %54, i32 0, i32 3, !dbg !10691
  %56 = load volatile i32, i32* %55, align 4, !dbg !10691, !tbaa !5168
  %57 = and i32 %56, -33, !dbg !10691
  store volatile i32 %57, i32* %55, align 4, !dbg !10691, !tbaa !5168
  %58 = load volatile i32, i32* %55, align 4, !dbg !10693, !tbaa !5168
  %59 = and i32 %58, -257, !dbg !10693
  store volatile i32 %59, i32* %55, align 4, !dbg !10693, !tbaa !5168
  %60 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %54, i32 0, i32 5, !dbg !10694
  %61 = load volatile i32, i32* %60, align 4, !dbg !10694, !tbaa !5056
  %62 = and i32 %61, -2, !dbg !10694
  store volatile i32 %62, i32* %60, align 4, !dbg !10694, !tbaa !5056
  store volatile i32 32, i32* %2, align 4, !dbg !10695, !tbaa !9306
  call void @HAL_UART_RxCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10696
  br label %63, !dbg !10697

63:                                               ; preds = %1, %47, %52
  ret void, !dbg !10698
}

; Function Attrs: noinline nounwind
define internal void @UART_DMAAbortOnError(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !10699 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !10701, metadata !DIExpression()), !dbg !10703
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !10704
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !10704
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !10704, !tbaa !9822
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !10702, metadata !DIExpression()), !dbg !10703
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !10705
  store volatile i16 0, i16* %5, align 2, !dbg !10706, !tbaa !9623
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !10707
  store volatile i16 0, i16* %6, align 2, !dbg !10708, !tbaa !9507
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !10709
  ret void, !dbg !10710
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @UART_Transmit_IT(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #16 !dbg !10711 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10713, metadata !DIExpression()), !dbg !10715
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10716
  %3 = load volatile i32, i32* %2, align 4, !dbg !10716, !tbaa !9282
  %4 = icmp eq i32 %3, 33, !dbg !10718
  br i1 %4, label %5, label %48, !dbg !10719

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1, !dbg !10720
  %7 = load i32, i32* %6, align 4, !dbg !10720, !tbaa !9325
  %8 = icmp eq i32 %7, 4096, !dbg !10723
  %9 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 2, !dbg !10724
  br i1 %8, label %10, label %27, !dbg !10725

10:                                               ; preds = %5
  %11 = bitcast i8** %9 to i16**, !dbg !10726
  %12 = load i16*, i16** %11, align 4, !dbg !10726, !tbaa !9705
  call void @llvm.dbg.value(metadata i16* %12, metadata !10714, metadata !DIExpression()), !dbg !10715
  %13 = load i16, i16* %12, align 2, !dbg !10728, !tbaa !9522
  %14 = and i16 %13, 511, !dbg !10729
  %15 = zext i16 %14 to i32, !dbg !10730
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10731
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %16, align 4, !dbg !10731, !tbaa !9295
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 1, !dbg !10732
  store volatile i32 %15, i32* %18, align 4, !dbg !10733, !tbaa !9527
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3, !dbg !10734
  %20 = load i32, i32* %19, align 4, !dbg !10734, !tbaa !9327
  %21 = icmp eq i32 %20, 0, !dbg !10736
  %22 = load i8*, i8** %9, align 4, !dbg !10737, !tbaa !9705
  br i1 %21, label %23, label %25, !dbg !10738

23:                                               ; preds = %10
  %24 = getelementptr inbounds i8, i8* %22, i32 2, !dbg !10739
  store i8* %24, i8** %9, align 4, !dbg !10739, !tbaa !9705
  br label %35, !dbg !10741

25:                                               ; preds = %10
  %26 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !10742
  store i8* %26, i8** %9, align 4, !dbg !10742, !tbaa !9705
  br label %35

27:                                               ; preds = %5
  %28 = load i8*, i8** %9, align 4, !dbg !10744, !tbaa !9705
  %29 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !10744
  store i8* %29, i8** %9, align 4, !dbg !10744, !tbaa !9705
  %30 = load i8, i8* %28, align 1, !dbg !10746, !tbaa !2851
  %31 = zext i8 %30 to i32, !dbg !10747
  %32 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10748
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10748, !tbaa !9295
  %34 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %33, i32 0, i32 1, !dbg !10749
  store volatile i32 %31, i32* %34, align 4, !dbg !10750, !tbaa !9527
  br label %35

35:                                               ; preds = %23, %25, %27
  %36 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !10751
  %37 = load volatile i16, i16* %36, align 2, !dbg !10753, !tbaa !9507
  %38 = add i16 %37, -1, !dbg !10753
  store volatile i16 %38, i16* %36, align 2, !dbg !10753, !tbaa !9507
  %39 = icmp eq i16 %38, 0, !dbg !10754
  br i1 %39, label %40, label %48, !dbg !10755

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10756
  %42 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %41, align 4, !dbg !10756, !tbaa !9295
  %43 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %42, i32 0, i32 3, !dbg !10756
  %44 = load volatile i32, i32* %43, align 4, !dbg !10756, !tbaa !5168
  %45 = and i32 %44, -129, !dbg !10756
  store volatile i32 %45, i32* %43, align 4, !dbg !10756, !tbaa !5168
  %46 = load volatile i32, i32* %43, align 4, !dbg !10758, !tbaa !5168
  %47 = or i32 %46, 64, !dbg !10758
  store volatile i32 %47, i32* %43, align 4, !dbg !10758, !tbaa !5168
  br label %48, !dbg !10759

48:                                               ; preds = %1, %35, %40
  ret void, !dbg !10760
}

; Function Attrs: noinline nounwind
define internal fastcc void @UART_EndTransmit_IT(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #3 !dbg !10761 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10763, metadata !DIExpression()), !dbg !10764
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10765
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10765, !tbaa !9295
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !10765
  %5 = load volatile i32, i32* %4, align 4, !dbg !10765, !tbaa !5168
  %6 = and i32 %5, -65, !dbg !10765
  store volatile i32 %6, i32* %4, align 4, !dbg !10765, !tbaa !5168
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10766
  store volatile i32 32, i32* %7, align 4, !dbg !10767, !tbaa !9282
  call void @HAL_UART_TxCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10768
  ret void, !dbg !10769
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_LIN_SendBreak(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #16 !dbg !10770 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10772, metadata !DIExpression()), !dbg !10773
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !10774
  %3 = load i32, i32* %2, align 4, !dbg !10774, !tbaa !9290
  %4 = icmp eq i32 %3, 1, !dbg !10774
  br i1 %4, label %12, label %5, !dbg !10777

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !10778, !tbaa !9290
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10780
  store volatile i32 36, i32* %6, align 4, !dbg !10781, !tbaa !9282
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10782
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10782, !tbaa !9295
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !10782
  %10 = load volatile i32, i32* %9, align 4, !dbg !10782, !tbaa !5168
  %11 = or i32 %10, 1, !dbg !10782
  store volatile i32 %11, i32* %9, align 4, !dbg !10782, !tbaa !5168
  store volatile i32 32, i32* %6, align 4, !dbg !10783, !tbaa !9282
  store i32 0, i32* %2, align 4, !dbg !10784, !tbaa !9290
  br label %12, !dbg !10786

12:                                               ; preds = %1, %5
  %13 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !10773
  ret i32 %13, !dbg !10787
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_MultiProcessor_EnterMuteMode(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #16 !dbg !10788 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10790, metadata !DIExpression()), !dbg !10791
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !10792
  %3 = load i32, i32* %2, align 4, !dbg !10792, !tbaa !9290
  %4 = icmp eq i32 %3, 1, !dbg !10792
  br i1 %4, label %12, label %5, !dbg !10795

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !10796, !tbaa !9290
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10798
  store volatile i32 36, i32* %6, align 4, !dbg !10799, !tbaa !9282
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10800
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10800, !tbaa !9295
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !10800
  %10 = load volatile i32, i32* %9, align 4, !dbg !10800, !tbaa !5168
  %11 = or i32 %10, 2, !dbg !10800
  store volatile i32 %11, i32* %9, align 4, !dbg !10800, !tbaa !5168
  store volatile i32 32, i32* %6, align 4, !dbg !10801, !tbaa !9282
  store i32 0, i32* %2, align 4, !dbg !10802, !tbaa !9290
  br label %12, !dbg !10804

12:                                               ; preds = %1, %5
  %13 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !10791
  ret i32 %13, !dbg !10805
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_MultiProcessor_ExitMuteMode(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #16 !dbg !10806 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10808, metadata !DIExpression()), !dbg !10809
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !10810
  %3 = load i32, i32* %2, align 4, !dbg !10810, !tbaa !9290
  %4 = icmp eq i32 %3, 1, !dbg !10810
  br i1 %4, label %12, label %5, !dbg !10813

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !10814, !tbaa !9290
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10816
  store volatile i32 36, i32* %6, align 4, !dbg !10817, !tbaa !9282
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10818
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10818, !tbaa !9295
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !10818
  %10 = load volatile i32, i32* %9, align 4, !dbg !10818, !tbaa !5168
  %11 = and i32 %10, -3, !dbg !10818
  store volatile i32 %11, i32* %9, align 4, !dbg !10818, !tbaa !5168
  store volatile i32 32, i32* %6, align 4, !dbg !10819, !tbaa !9282
  store i32 0, i32* %2, align 4, !dbg !10820, !tbaa !9290
  br label %12, !dbg !10822

12:                                               ; preds = %1, %5
  %13 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !10809
  ret i32 %13, !dbg !10823
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_HalfDuplex_EnableTransmitter(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #16 !dbg !10824 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10826, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata i32 0, metadata !10827, metadata !DIExpression()), !dbg !10828
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !10829
  %3 = load i32, i32* %2, align 4, !dbg !10829, !tbaa !9290
  %4 = icmp eq i32 %3, 1, !dbg !10829
  br i1 %4, label %13, label %5, !dbg !10832

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !10833, !tbaa !9290
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10835
  store volatile i32 36, i32* %6, align 4, !dbg !10836, !tbaa !9282
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10837
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10837, !tbaa !9295
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !10838
  %10 = load volatile i32, i32* %9, align 4, !dbg !10838, !tbaa !5168
  call void @llvm.dbg.value(metadata i32 %10, metadata !10827, metadata !DIExpression()), !dbg !10828
  %11 = and i32 %10, -13, !dbg !10839
  call void @llvm.dbg.value(metadata i32 %11, metadata !10827, metadata !DIExpression()), !dbg !10828
  %12 = or i32 %11, 8, !dbg !10840
  call void @llvm.dbg.value(metadata i32 %12, metadata !10827, metadata !DIExpression()), !dbg !10828
  store volatile i32 %12, i32* %9, align 4, !dbg !10841, !tbaa !5168
  store volatile i32 32, i32* %6, align 4, !dbg !10842, !tbaa !9282
  store i32 0, i32* %2, align 4, !dbg !10843, !tbaa !9290
  br label %13, !dbg !10845

13:                                               ; preds = %1, %5
  %14 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !10828
  ret i32 %14, !dbg !10846
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_HalfDuplex_EnableReceiver(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #16 !dbg !10847 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10849, metadata !DIExpression()), !dbg !10851
  call void @llvm.dbg.value(metadata i32 0, metadata !10850, metadata !DIExpression()), !dbg !10851
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !10852
  %3 = load i32, i32* %2, align 4, !dbg !10852, !tbaa !9290
  %4 = icmp eq i32 %3, 1, !dbg !10852
  br i1 %4, label %13, label %5, !dbg !10855

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !10856, !tbaa !9290
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10858
  store volatile i32 36, i32* %6, align 4, !dbg !10859, !tbaa !9282
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10860
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10860, !tbaa !9295
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !10861
  %10 = load volatile i32, i32* %9, align 4, !dbg !10861, !tbaa !5168
  call void @llvm.dbg.value(metadata i32 %10, metadata !10850, metadata !DIExpression()), !dbg !10851
  %11 = and i32 %10, -13, !dbg !10862
  call void @llvm.dbg.value(metadata i32 %11, metadata !10850, metadata !DIExpression()), !dbg !10851
  %12 = or i32 %11, 4, !dbg !10863
  call void @llvm.dbg.value(metadata i32 %12, metadata !10850, metadata !DIExpression()), !dbg !10851
  store volatile i32 %12, i32* %9, align 4, !dbg !10864, !tbaa !5168
  store volatile i32 32, i32* %6, align 4, !dbg !10865, !tbaa !9282
  store i32 0, i32* %2, align 4, !dbg !10866, !tbaa !9290
  br label %13, !dbg !10868

13:                                               ; preds = %1, %5
  %14 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !10851
  ret i32 %14, !dbg !10869
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_UART_GetState(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #17 !dbg !10870 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10874, metadata !DIExpression()), !dbg !10877
  call void @llvm.dbg.value(metadata i32 0, metadata !10875, metadata !DIExpression()), !dbg !10877
  call void @llvm.dbg.value(metadata i32 0, metadata !10876, metadata !DIExpression()), !dbg !10877
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10878
  %3 = load volatile i32, i32* %2, align 4, !dbg !10878, !tbaa !9282
  call void @llvm.dbg.value(metadata i32 %3, metadata !10875, metadata !DIExpression()), !dbg !10877
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !10879
  %5 = load volatile i32, i32* %4, align 4, !dbg !10879, !tbaa !9306
  call void @llvm.dbg.value(metadata i32 %5, metadata !10876, metadata !DIExpression()), !dbg !10877
  %6 = or i32 %5, %3, !dbg !10880
  ret i32 %6, !dbg !10881
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_UART_GetError(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #17 !dbg !10882 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10886, metadata !DIExpression()), !dbg !10887
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !10888
  %3 = load volatile i32, i32* %2, align 4, !dbg !10888, !tbaa !9302
  ret i32 %3, !dbg !10889
}

attributes #0 = { mustprogress noinline norecurse nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nofree nosync nounwind willreturn }
attributes #3 = { noinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { mustprogress noinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nofree nounwind readonly }
attributes #6 = { argmemonly nofree nounwind willreturn }
attributes #7 = { nobuiltin nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { argmemonly nofree nounwind willreturn writeonly }
attributes #10 = { nofree nounwind }
attributes #11 = { nofree nosync nounwind willreturn }
attributes #12 = { mustprogress nofree noinline norecurse nosync nounwind readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nosync nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nosync nounwind readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline norecurse nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline norecurse nosync nounwind readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nosync nounwind readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { noinline noreturn nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nounwind willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { mustprogress nofree noinline nosync nounwind willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline norecurse nosync nounwind willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nofree nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #26 = { mustprogress nofree noinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #27 = { argmemonly nofree nounwind readonly willreturn }
attributes #28 = { argmemonly mustprogress nofree nounwind willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #29 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #30 = { mustprogress noinline noreturn nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #31 = { mustprogress nofree noinline norecurse nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #32 = { mustprogress nofree noinline norecurse nosync nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #33 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #34 = { nounwind }
attributes #35 = { builtin nounwind }
attributes #36 = { noreturn nounwind }
attributes #37 = { noreturn }

!llvm.dbg.cu = !{!6, !470, !520, !1430, !598, !1484, !1538, !949, !1591, !1732, !1829, !1896, !1920, !719, !1923, !2010, !2084, !2181, !2306, !2308}
!llvm.ident = !{!2420, !2420, !2420, !2420, !2420, !2420, !2420, !2420, !2420, !2420, !2420, !2420, !2420, !2420, !2420, !2420, !2420, !2420, !2420, !2420}
!llvm.module.flags = !{!2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "instance", scope: !2, file: !3, line: 157, type: !122, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "USART1_IRQHandler", scope: !3, file: !3, line: 155, type: !4, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, retainedNodes: !121)
!3 = !DIFile(filename: "../examples/stm32f1/ipcommdevice_stm32.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "981e285bab603bfc0f1391c5844e4407")
!4 = !DISubroutineType(types: !5)
!5 = !{null}
!6 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !7, retainedTypes: !16, globals: !117, imports: !159, splitDebugInlining: false, nameTableKind: None)
!7 = !{!8}
!8 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 41, baseType: !10, size: 32, elements: !11, identifier: "_ZTS17HAL_StatusTypeDef")
!9 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "4d6e0bbb91efacee14a68a416f506def")
!10 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!11 = !{!12, !13, !14, !15}
!12 = !DIEnumerator(name: "HAL_OK", value: 0, isUnsigned: true)
!13 = !DIEnumerator(name: "HAL_ERROR", value: 1, isUnsigned: true)
!14 = !DIEnumerator(name: "HAL_BUSY", value: 2, isUnsigned: true)
!15 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3, isUnsigned: true)
!16 = !{!17, !34, !37, !40, !44, !48, !51}
!17 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18, size: 32)
!18 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !19, line: 516, baseType: !20)
!19 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "d2562af6d7239ab46ca8ba238a43c848")
!20 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 507, size: 224, flags: DIFlagTypePassByValue, elements: !21, identifier: "_ZTS13USART_TypeDef")
!21 = !{!22, !28, !29, !30, !31, !32, !33}
!22 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !20, file: !19, line: 509, baseType: !23, size: 32)
!23 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !24)
!24 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !25, line: 48, baseType: !26)
!25 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "ab914e287601b2385e57880e6599aa6b")
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !27, line: 79, baseType: !10)
!27 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "f7024d0682a918b41f94e8be9cd90461")
!28 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !20, file: !19, line: 510, baseType: !23, size: 32, offset: 32)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !20, file: !19, line: 511, baseType: !23, size: 32, offset: 64)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !20, file: !19, line: 512, baseType: !23, size: 32, offset: 96)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !20, file: !19, line: 513, baseType: !23, size: 32, offset: 128)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !20, file: !19, line: 514, baseType: !23, size: 32, offset: 160)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !20, file: !19, line: 515, baseType: !23, size: 32, offset: 192)
!34 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !35, size: 32)
!35 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !19, line: 367, baseType: !36)
!36 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 358, size: 224, flags: DIFlagFwdDecl, identifier: "_ZTS12GPIO_TypeDef")
!37 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !25, line: 36, baseType: !38)
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !27, line: 57, baseType: !39)
!39 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!40 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !41, size: 32)
!41 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "SimCommDevice", scope: !43, file: !42, line: 33, size: 2240, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada13SimCommDeviceE")
!42 = !DIFile(filename: "../cicada/commdevices/simcommdevice.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "a544398dc40a994ae47c8561fb84bc57")
!43 = !DINamespace(name: "Cicada", scope: null)
!44 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 32)
!45 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !25, line: 24, baseType: !46)
!46 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !27, line: 43, baseType: !47)
!47 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!48 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "IPCommTask", file: !3, line: 19, size: 19456, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !49, vtableHolder: !51, identifier: "_ZTS10IPCommTask")
!49 = !{!50, !94, !96, !100, !101, !105, !109, !110, !114}
!50 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !48, baseType: !51, flags: DIFlagPublic, extraData: i32 0)
!51 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Task", scope: !43, file: !52, line: 193, size: 160, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !53, vtableHolder: !51, identifier: "_ZTSN6Cicada4TaskE")
!52 = !DIFile(filename: "../cicada/task.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "c2aeaca9a01dbc0caa84f135ef9fda2b")
!53 = !{!54, !60, !61, !62, !64, !65, !69, !72, !77, !78, !81, !84, !85, !86, !87, !90}
!54 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$Task", scope: !52, file: !52, baseType: !55, size: 32, flags: DIFlagArtificial)
!55 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !56, size: 32)
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "__vtbl_ptr_type", baseType: !57, size: 32)
!57 = !DISubroutineType(types: !58)
!58 = !{!59}
!59 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "_delay", scope: !51, file: !52, line: 283, baseType: !37, size: 16, offset: 32)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "_timeout", scope: !51, file: !52, line: 284, baseType: !24, size: 32, offset: 64)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "_isTimeoutRunning", scope: !51, file: !52, line: 285, baseType: !63, size: 8, offset: 96)
!63 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "_lastRun", scope: !51, file: !52, line: 286, baseType: !24, size: 32, offset: 128)
!65 = !DISubprogram(name: "Task", scope: !51, file: !52, line: 196, type: !66, scopeLine: 196, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!66 = !DISubroutineType(types: !67)
!67 = !{null, !68, !37}
!68 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !51, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!69 = !DISubprogram(name: "~Task", scope: !51, file: !52, line: 198, type: !70, scopeLine: 198, containingType: !51, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!70 = !DISubroutineType(types: !71)
!71 = !{null, !68}
!72 = !DISubprogram(name: "delay", linkageName: "_ZNK6Cicada4Task5delayEv", scope: !51, file: !52, line: 203, type: !73, scopeLine: 203, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!73 = !DISubroutineType(types: !74)
!74 = !{!37, !75}
!75 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !76, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!76 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !51)
!77 = !DISubprogram(name: "setDelay", linkageName: "_ZN6Cicada4Task8setDelayEt", scope: !51, file: !52, line: 212, type: !66, scopeLine: 212, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!78 = !DISubprogram(name: "lastRun", linkageName: "_ZN6Cicada4Task7lastRunEv", scope: !51, file: !52, line: 222, type: !79, scopeLine: 222, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!79 = !DISubroutineType(types: !80)
!80 = !{!24, !68}
!81 = !DISubprogram(name: "setLastRun", linkageName: "_ZN6Cicada4Task10setLastRunEj", scope: !51, file: !52, line: 230, type: !82, scopeLine: 230, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!82 = !DISubroutineType(types: !83)
!83 = !{null, !68, !24}
!84 = !DISubprogram(name: "run", linkageName: "_ZN6Cicada4Task3runEv", scope: !51, file: !52, line: 245, type: !70, scopeLine: 245, containingType: !51, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!85 = !DISubprogram(name: "startTimeout", linkageName: "_ZN6Cicada4Task12startTimeoutEv", scope: !51, file: !52, line: 251, type: !70, scopeLine: 251, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!86 = !DISubprogram(name: "resetTimeout", linkageName: "_ZN6Cicada4Task12resetTimeoutEv", scope: !51, file: !52, line: 262, type: !70, scopeLine: 262, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!87 = !DISubprogram(name: "isTimeout", linkageName: "_ZN6Cicada4Task9isTimeoutEj", scope: !51, file: !52, line: 272, type: !88, scopeLine: 272, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!88 = !DISubroutineType(types: !89)
!89 = !{!63, !68, !24}
!90 = !DISubprogram(name: "Task", scope: !51, file: !52, line: 281, type: !91, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!91 = !DISubroutineType(types: !92)
!92 = !{null, !68, !93}
!93 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !76, size: 32)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "_commBufferSize", scope: !48, file: !3, line: 84, baseType: !95, flags: DIFlagStaticMember, extraData: i16 1200)
!95 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !37)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "_commReadBuffer", scope: !48, file: !3, line: 85, baseType: !97, size: 9600, offset: 160)
!97 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 9600, elements: !98)
!98 = !{!99}
!99 = !DISubrange(count: 1200)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "_commWriteBuffer", scope: !48, file: !3, line: 86, baseType: !97, size: 9600, offset: 9760)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "m_detector", scope: !48, file: !3, line: 88, baseType: !102, size: 32, offset: 19360)
!102 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !103, size: 32)
!103 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "ModemDetect", scope: !43, file: !104, line: 39, size: 2624, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada11ModemDetectE")
!104 = !DIFile(filename: "../cicada/commdevices/modemdetect.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "b1dec331329dd985cf66a617d112eb19")
!105 = !DIDerivedType(tag: DW_TAG_member, name: "m_commDev", scope: !48, file: !3, line: 89, baseType: !106, size: 32, offset: 19392)
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "ATCommDevice", scope: !43, file: !108, line: 39, size: 1856, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada12ATCommDeviceE")
!108 = !DIFile(filename: "../cicada/commdevices/atcommdevice.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "533b96ced66a81acd2797c3eeacc1c13")
!109 = !DIDerivedType(tag: DW_TAG_member, name: "m_i", scope: !48, file: !3, line: 90, baseType: !59, size: 32, offset: 19424)
!110 = !DISubprogram(name: "IPCommTask", scope: !48, file: !3, line: 22, type: !111, scopeLine: 22, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!111 = !DISubroutineType(types: !112)
!112 = !{null, !113, !102}
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!114 = !DISubprogram(name: "run", linkageName: "_ZN10IPCommTask3runEv", scope: !48, file: !3, line: 27, type: !115, scopeLine: 27, containingType: !48, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!115 = !DISubroutineType(types: !116)
!116 = !{null, !113}
!117 = !{!0, !118, !125, !133}
!118 = !DIGlobalVariableExpression(var: !119, expr: !DIExpression())
!119 = distinct !DIGlobalVariable(name: "instance", scope: !120, file: !3, line: 163, type: !122, isLocal: true, isDefinition: true)
!120 = distinct !DISubprogram(name: "USART2_IRQHandler", scope: !3, file: !3, line: 161, type: !4, scopeLine: 162, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, retainedNodes: !121)
!121 = !{}
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 32)
!123 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Stm32Uart", scope: !43, file: !124, line: 51, size: 1536, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada9Stm32UartE")
!124 = !DIFile(filename: "../cicada/platform/stm32f1/stm32uart.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "f1205a68111afe9a0868ac35ca31b4e6")
!125 = !DIGlobalVariableExpression(var: !126, expr: !DIExpression())
!126 = distinct !DIGlobalVariable(name: "serial", scope: !127, file: !3, line: 169, type: !122, isLocal: true, isDefinition: true)
!127 = distinct !DISubprogram(name: "_putchar", scope: !3, file: !3, line: 167, type: !128, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, retainedNodes: !131)
!128 = !DISubroutineType(types: !129)
!129 = !{null, !130}
!130 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!131 = !{!132}
!132 = !DILocalVariable(name: "c", arg: 1, scope: !127, file: !3, line: 167, type: !130)
!133 = !DIGlobalVariableExpression(var: !134, expr: !DIExpression())
!134 = distinct !DIGlobalVariable(name: "entrypoint", scope: !135, file: !3, line: 31, type: !45, isLocal: false, isDefinition: true)
!135 = distinct !DISubprogram(name: "run", linkageName: "_ZN10IPCommTask3runEv", scope: !48, file: !3, line: 27, type: !115, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !114, retainedNodes: !136)
!136 = !{!137, !139, !140, !147, !156, !157}
!137 = !DILocalVariable(name: "this", arg: 1, scope: !135, type: !138, flags: DIFlagArtificial | DIFlagObjectPointer)
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 32)
!139 = !DILocalVariable(name: "simCommDev", scope: !135, file: !3, line: 29, type: !40)
!140 = !DILocalVariable(name: "str", scope: !141, file: !3, line: 51, type: !143)
!141 = distinct !DILexicalBlock(scope: !142, file: !3, line: 50, column: 9)
!142 = distinct !DILexicalBlock(scope: !135, file: !3, line: 31, column: 9)
!143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 568, elements: !145)
!144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !130)
!145 = !{!146}
!146 = !DISubrange(count: 71)
!147 = !DILocalVariable(name: "buf", scope: !148, file: !3, line: 62, type: !153)
!148 = distinct !DILexicalBlock(scope: !149, file: !3, line: 61, column: 46)
!149 = distinct !DILexicalBlock(scope: !150, file: !3, line: 61, column: 17)
!150 = distinct !DILexicalBlock(scope: !151, file: !3, line: 60, column: 41)
!151 = distinct !DILexicalBlock(scope: !152, file: !3, line: 60, column: 9)
!152 = distinct !DILexicalBlock(scope: !142, file: !3, line: 60, column: 9)
!153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 328, elements: !154)
!154 = !{!155}
!155 = !DISubrange(count: 41)
!156 = !DILocalVariable(name: "bytesRead", scope: !148, file: !3, line: 63, type: !37)
!157 = !DILocalVariable(name: "i", scope: !158, file: !3, line: 64, type: !59)
!158 = distinct !DILexicalBlock(scope: !148, file: !3, line: 64, column: 17)
!159 = !{!160, !166, !170, !173, !177, !180, !182, !184, !186, !189, !192, !195, !198, !201, !204, !205, !206, !207, !211, !213, !215, !217, !219, !222, !225, !228, !231, !234, !237, !243, !247, !254, !256, !261, !267, !271, !275, !288, !292, !296, !300, !304, !309, !313, !317, !321, !325, !331, !335, !339, !341, !345, !349, !354, !358, !363, !365, !371, !375, !382, !384, !388, !392, !396, !400, !404, !409, !414, !415, !416, !417, !419, !420, !421, !422, !423, !424, !425, !427, !428, !429, !430, !431, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459}
!160 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !162, file: !165, line: 47)
!161 = !DINamespace(name: "std", scope: null)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !25, line: 20, baseType: !163)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !27, line: 41, baseType: !164)
!164 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!165 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/cstdint", directory: "/home/mjshen/RTOSExploration")
!166 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !167, file: !165, line: 48)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !25, line: 32, baseType: !168)
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int16_t", file: !27, line: 55, baseType: !169)
!169 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!170 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !171, file: !165, line: 49)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !25, line: 44, baseType: !172)
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !27, line: 77, baseType: !59)
!173 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !174, file: !165, line: 50)
!174 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !25, line: 56, baseType: !175)
!175 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !27, line: 103, baseType: !176)
!176 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!177 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !178, file: !165, line: 52)
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast8_t", file: !179, line: 51, baseType: !164)
!179 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdint.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "a169a1d650067906a9e00519a9405ebb")
!180 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !181, file: !165, line: 53)
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast16_t", file: !179, line: 61, baseType: !169)
!182 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !183, file: !165, line: 54)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast32_t", file: !179, line: 71, baseType: !59)
!184 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !185, file: !165, line: 55)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast64_t", file: !179, line: 81, baseType: !176)
!186 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !187, file: !165, line: 57)
!187 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least8_t", file: !179, line: 21, baseType: !188)
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least8_t", file: !27, line: 134, baseType: !164)
!189 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !190, file: !165, line: 58)
!190 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least16_t", file: !179, line: 27, baseType: !191)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least16_t", file: !27, line: 160, baseType: !169)
!192 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !193, file: !165, line: 59)
!193 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least32_t", file: !179, line: 33, baseType: !194)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least32_t", file: !27, line: 182, baseType: !59)
!195 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !196, file: !165, line: 60)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least64_t", file: !179, line: 39, baseType: !197)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !27, line: 200, baseType: !176)
!198 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !199, file: !165, line: 62)
!199 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !25, line: 67, baseType: !200)
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !27, line: 214, baseType: !176)
!201 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !202, file: !165, line: 63)
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !25, line: 77, baseType: !203)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intptr_t", file: !27, line: 230, baseType: !59)
!204 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !45, file: !165, line: 65)
!205 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !37, file: !165, line: 66)
!206 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !24, file: !165, line: 67)
!207 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !208, file: !165, line: 68)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !25, line: 60, baseType: !209)
!209 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !27, line: 105, baseType: !210)
!210 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!211 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !212, file: !165, line: 70)
!212 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast8_t", file: !179, line: 52, baseType: !47)
!213 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !214, file: !165, line: 71)
!214 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast16_t", file: !179, line: 62, baseType: !39)
!215 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !216, file: !165, line: 72)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast32_t", file: !179, line: 72, baseType: !10)
!217 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !218, file: !165, line: 73)
!218 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast64_t", file: !179, line: 82, baseType: !210)
!219 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !220, file: !165, line: 75)
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least8_t", file: !179, line: 22, baseType: !221)
!221 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least8_t", file: !27, line: 136, baseType: !47)
!222 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !223, file: !165, line: 76)
!223 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least16_t", file: !179, line: 28, baseType: !224)
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least16_t", file: !27, line: 162, baseType: !39)
!225 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !226, file: !165, line: 77)
!226 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least32_t", file: !179, line: 34, baseType: !227)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least32_t", file: !27, line: 184, baseType: !10)
!228 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !229, file: !165, line: 78)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !179, line: 40, baseType: !230)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least64_t", file: !27, line: 202, baseType: !210)
!231 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !232, file: !165, line: 80)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !25, line: 72, baseType: !233)
!233 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !27, line: 222, baseType: !210)
!234 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !235, file: !165, line: 81)
!235 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !25, line: 82, baseType: !236)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintptr_t", file: !27, line: 232, baseType: !10)
!237 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !238, file: !242, line: 52)
!238 = !DISubprogram(name: "abs", scope: !239, file: !239, line: 70, type: !240, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!239 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdlib.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "ce64a6a93b8b46525165e9738bae1257")
!240 = !DISubroutineType(types: !241)
!241 = !{!59, !59}
!242 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/bits/std_abs.h", directory: "/home/mjshen/RTOSExploration")
!243 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !244, file: !246, line: 127)
!244 = !DIDerivedType(tag: DW_TAG_typedef, name: "div_t", file: !239, line: 39, baseType: !245)
!245 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !239, line: 35, size: 64, flags: DIFlagFwdDecl, identifier: "_ZTS5div_t")
!246 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/cstdlib", directory: "/home/mjshen/RTOSExploration")
!247 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !248, file: !246, line: 128)
!248 = !DIDerivedType(tag: DW_TAG_typedef, name: "ldiv_t", file: !239, line: 45, baseType: !249)
!249 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !239, line: 41, size: 64, flags: DIFlagTypePassByValue, elements: !250, identifier: "_ZTS6ldiv_t")
!250 = !{!251, !253}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !249, file: !239, line: 43, baseType: !252, size: 32)
!252 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !249, file: !239, line: 44, baseType: !252, size: 32, offset: 32)
!254 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !255, file: !246, line: 130)
!255 = !DISubprogram(name: "abort", scope: !239, file: !239, line: 69, type: !4, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized)
!256 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !257, file: !246, line: 134)
!257 = !DISubprogram(name: "atexit", scope: !239, file: !239, line: 76, type: !258, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!258 = !DISubroutineType(types: !259)
!259 = !{!59, !260}
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 32)
!261 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !262, file: !246, line: 140)
!262 = !DISubprogram(name: "atof", scope: !239, file: !239, line: 77, type: !263, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!263 = !DISubroutineType(types: !264)
!264 = !{!265, !266}
!265 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!267 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !268, file: !246, line: 141)
!268 = !DISubprogram(name: "atoi", scope: !239, file: !239, line: 81, type: !269, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!269 = !DISubroutineType(types: !270)
!270 = !{!59, !266}
!271 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !272, file: !246, line: 142)
!272 = !DISubprogram(name: "atol", scope: !239, file: !239, line: 83, type: !273, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!273 = !DISubroutineType(types: !274)
!274 = !{!252, !266}
!275 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !276, file: !246, line: 143)
!276 = !DISubprogram(name: "bsearch", scope: !239, file: !239, line: 85, type: !277, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!277 = !DISubroutineType(types: !278)
!278 = !{!279, !280, !280, !282, !282, !284}
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 32)
!281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !283, line: 46, baseType: !10)
!283 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "", checksumkind: CSK_MD5, checksum: "2499dd2361b915724b073282bea3a7bc")
!284 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !239, line: 57, baseType: !285)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 32)
!286 = !DISubroutineType(types: !287)
!287 = !{!59, !280, !280}
!288 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !289, file: !246, line: 144)
!289 = !DISubprogram(name: "calloc", scope: !239, file: !239, line: 90, type: !290, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!290 = !DISubroutineType(types: !291)
!291 = !{!279, !282, !282}
!292 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !293, file: !246, line: 145)
!293 = !DISubprogram(name: "div", scope: !239, file: !239, line: 92, type: !294, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!294 = !DISubroutineType(types: !295)
!295 = !{!244, !59, !59}
!296 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !297, file: !246, line: 146)
!297 = !DISubprogram(name: "exit", scope: !239, file: !239, line: 93, type: !298, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized)
!298 = !DISubroutineType(types: !299)
!299 = !{null, !59}
!300 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !301, file: !246, line: 147)
!301 = !DISubprogram(name: "free", scope: !239, file: !239, line: 94, type: !302, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!302 = !DISubroutineType(types: !303)
!303 = !{null, !279}
!304 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !305, file: !246, line: 148)
!305 = !DISubprogram(name: "getenv", scope: !239, file: !239, line: 95, type: !306, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!306 = !DISubroutineType(types: !307)
!307 = !{!308, !266}
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 32)
!309 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !310, file: !246, line: 149)
!310 = !DISubprogram(name: "labs", scope: !239, file: !239, line: 106, type: !311, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!311 = !DISubroutineType(types: !312)
!312 = !{!252, !252}
!313 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !314, file: !246, line: 150)
!314 = !DISubprogram(name: "ldiv", scope: !239, file: !239, line: 107, type: !315, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!315 = !DISubroutineType(types: !316)
!316 = !{!248, !252, !252}
!317 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !318, file: !246, line: 151)
!318 = !DISubprogram(name: "malloc", scope: !239, file: !239, line: 108, type: !319, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!319 = !DISubroutineType(types: !320)
!320 = !{!279, !282}
!321 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !322, file: !246, line: 153)
!322 = !DISubprogram(name: "mblen", scope: !239, file: !239, line: 109, type: !323, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!323 = !DISubroutineType(types: !324)
!324 = !{!59, !266, !282}
!325 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !326, file: !246, line: 154)
!326 = !DISubprogram(name: "mbstowcs", scope: !239, file: !239, line: 115, type: !327, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!327 = !DISubroutineType(types: !328)
!328 = !{!282, !329, !266, !282}
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 32)
!330 = !DIBasicType(name: "wchar_t", size: 32, encoding: DW_ATE_unsigned)
!331 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !332, file: !246, line: 155)
!332 = !DISubprogram(name: "mbtowc", scope: !239, file: !239, line: 111, type: !333, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!333 = !DISubroutineType(types: !334)
!334 = !{!59, !329, !266, !282}
!335 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !336, file: !246, line: 157)
!336 = !DISubprogram(name: "qsort", scope: !239, file: !239, line: 143, type: !337, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!337 = !DISubroutineType(types: !338)
!338 = !{null, !279, !282, !282, !284}
!339 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !340, file: !246, line: 163)
!340 = !DISubprogram(name: "rand", scope: !239, file: !239, line: 144, type: !57, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!341 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !342, file: !246, line: 164)
!342 = !DISubprogram(name: "realloc", scope: !239, file: !239, line: 145, type: !343, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!343 = !DISubroutineType(types: !344)
!344 = !{!279, !279, !282}
!345 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !346, file: !246, line: 165)
!346 = !DISubprogram(name: "srand", scope: !239, file: !239, line: 159, type: !347, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!347 = !DISubroutineType(types: !348)
!348 = !{null, !10}
!349 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !350, file: !246, line: 166)
!350 = !DISubprogram(name: "strtod", scope: !239, file: !239, line: 160, type: !351, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!351 = !DISubroutineType(types: !352)
!352 = !{!265, !266, !353}
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 32)
!354 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !355, file: !246, line: 167)
!355 = !DISubprogram(name: "strtol", scope: !239, file: !239, line: 171, type: !356, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!356 = !DISubroutineType(types: !357)
!357 = !{!252, !266, !353, !59}
!358 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !359, file: !246, line: 168)
!359 = !DISubprogram(name: "strtoul", scope: !239, file: !239, line: 173, type: !360, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!360 = !DISubroutineType(types: !361)
!361 = !{!362, !266, !353, !59}
!362 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!363 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !364, file: !246, line: 169)
!364 = !DISubprogram(name: "system", scope: !239, file: !239, line: 191, type: !269, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!365 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !366, file: !246, line: 171)
!366 = !DISubprogram(name: "wcstombs", scope: !239, file: !239, line: 117, type: !367, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!367 = !DISubroutineType(types: !368)
!368 = !{!282, !308, !369, !282}
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 32)
!370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !330)
!371 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !372, file: !246, line: 172)
!372 = !DISubprogram(name: "wctomb", scope: !239, file: !239, line: 113, type: !373, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!373 = !DISubroutineType(types: !374)
!374 = !{!59, !308, !330}
!375 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !377, file: !246, line: 200)
!376 = !DINamespace(name: "__gnu_cxx", scope: null)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "lldiv_t", file: !239, line: 52, baseType: !378)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !239, line: 48, size: 128, flags: DIFlagTypePassByValue, elements: !379, identifier: "_ZTS7lldiv_t")
!379 = !{!380, !381}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !378, file: !239, line: 50, baseType: !176, size: 64)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !378, file: !239, line: 51, baseType: !176, size: 64, offset: 64)
!382 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !383, file: !246, line: 206)
!383 = !DISubprogram(name: "_Exit", scope: !239, file: !239, line: 202, type: !298, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized)
!384 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !385, file: !246, line: 210)
!385 = !DISubprogram(name: "llabs", scope: !239, file: !239, line: 267, type: !386, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!386 = !DISubroutineType(types: !387)
!387 = !{!176, !176}
!388 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !389, file: !246, line: 216)
!389 = !DISubprogram(name: "lldiv", scope: !239, file: !239, line: 268, type: !390, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!390 = !DISubroutineType(types: !391)
!391 = !{!377, !176, !176}
!392 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !393, file: !246, line: 227)
!393 = !DISubprogram(name: "atoll", scope: !239, file: !239, line: 263, type: !394, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!394 = !DISubroutineType(types: !395)
!395 = !{!176, !266}
!396 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !397, file: !246, line: 228)
!397 = !DISubprogram(name: "strtoll", scope: !239, file: !239, line: 269, type: !398, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!398 = !DISubroutineType(types: !399)
!399 = !{!176, !266, !353, !59}
!400 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !401, file: !246, line: 229)
!401 = !DISubprogram(name: "strtoull", scope: !239, file: !239, line: 273, type: !402, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!402 = !DISubroutineType(types: !403)
!403 = !{!210, !266, !353, !59}
!404 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !405, file: !246, line: 231)
!405 = !DISubprogram(name: "strtof", scope: !239, file: !239, line: 163, type: !406, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!406 = !DISubroutineType(types: !407)
!407 = !{!408, !266, !353}
!408 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!409 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !410, file: !246, line: 232)
!410 = !DISubprogram(name: "strtold", scope: !239, file: !239, line: 324, type: !411, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!411 = !DISubroutineType(types: !412)
!412 = !{!413, !266, !353}
!413 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!414 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !377, file: !246, line: 240)
!415 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !383, file: !246, line: 242)
!416 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !385, file: !246, line: 244)
!417 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !418, file: !246, line: 245)
!418 = !DISubprogram(name: "div", linkageName: "_ZN9__gnu_cxx3divExx", scope: !376, file: !246, line: 213, type: !390, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!419 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !389, file: !246, line: 246)
!420 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !393, file: !246, line: 248)
!421 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !405, file: !246, line: 249)
!422 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !397, file: !246, line: 250)
!423 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !401, file: !246, line: 251)
!424 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !410, file: !246, line: 252)
!425 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !255, file: !426, line: 38)
!426 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/stdlib.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "74812296ae1ebf65f0c19983efc04bc1")
!427 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !257, file: !426, line: 39)
!428 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !297, file: !426, line: 40)
!429 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !244, file: !426, line: 51)
!430 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !248, file: !426, line: 52)
!431 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !432, file: !426, line: 54)
!432 = !DISubprogram(name: "abs", linkageName: "_ZSt3abse", scope: !161, file: !242, line: 79, type: !433, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!433 = !DISubroutineType(types: !434)
!434 = !{!413, !413}
!435 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !262, file: !426, line: 55)
!436 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !268, file: !426, line: 56)
!437 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !272, file: !426, line: 57)
!438 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !276, file: !426, line: 58)
!439 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !289, file: !426, line: 59)
!440 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !418, file: !426, line: 60)
!441 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !301, file: !426, line: 61)
!442 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !305, file: !426, line: 62)
!443 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !310, file: !426, line: 63)
!444 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !314, file: !426, line: 64)
!445 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !318, file: !426, line: 65)
!446 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !322, file: !426, line: 67)
!447 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !326, file: !426, line: 68)
!448 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !332, file: !426, line: 69)
!449 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !336, file: !426, line: 71)
!450 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !340, file: !426, line: 72)
!451 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !342, file: !426, line: 73)
!452 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !346, file: !426, line: 74)
!453 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !350, file: !426, line: 75)
!454 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !355, file: !426, line: 76)
!455 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !359, file: !426, line: 77)
!456 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !364, file: !426, line: 78)
!457 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !366, file: !426, line: 80)
!458 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !372, file: !426, line: 81)
!459 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !6, entity: !43, file: !3, line: 15)
!460 = !DIGlobalVariableExpression(var: !461, expr: !DIExpression())
!461 = distinct !DIGlobalVariable(name: "pow10", scope: !462, file: !463, line: 311, type: !515, isLocal: true, isDefinition: true)
!462 = distinct !DISubprogram(name: "_ftoa", scope: !463, file: !463, line: 299, type: !464, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !470, retainedNodes: !482)
!463 = !DIFile(filename: "../dep/printf/src/printf.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "7383fa86adf0d25d8eda174a9b330d6a")
!464 = !DISubroutineType(types: !465)
!465 = !{!282, !466, !308, !282, !282, !265, !10, !10, !10}
!466 = !DIDerivedType(tag: DW_TAG_typedef, name: "out_fct_type", file: !463, line: 97, baseType: !467)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 32)
!468 = !DISubroutineType(types: !469)
!469 = !{null, !130, !279, !282, !282}
!470 = distinct !DICompileUnit(language: DW_LANG_C99, file: !463, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !471, globals: !481, splitDebugInlining: false, nameTableKind: None)
!471 = !{!282, !308, !235, !10, !59, !210, !362, !130, !169, !47, !39, !265, !472}
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 32)
!473 = !DIDerivedType(tag: DW_TAG_typedef, name: "out_fct_wrap_type", file: !463, line: 104, baseType: !474)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 101, size: 64, elements: !475)
!475 = !{!476, !480}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "fct", scope: !474, file: !463, line: 102, baseType: !477, size: 32)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 32)
!478 = !DISubroutineType(types: !479)
!479 = !{null, !130, !279}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !474, file: !463, line: 103, baseType: !279, size: 32, offset: 32)
!481 = !{!460}
!482 = !{!483, !484, !485, !486, !487, !488, !489, !490, !491, !493, !497, !498, !499, !501, !503, !504, !505, !506, !509, !513}
!483 = !DILocalVariable(name: "out", arg: 1, scope: !462, file: !463, line: 299, type: !466)
!484 = !DILocalVariable(name: "buffer", arg: 2, scope: !462, file: !463, line: 299, type: !308)
!485 = !DILocalVariable(name: "idx", arg: 3, scope: !462, file: !463, line: 299, type: !282)
!486 = !DILocalVariable(name: "maxlen", arg: 4, scope: !462, file: !463, line: 299, type: !282)
!487 = !DILocalVariable(name: "value", arg: 5, scope: !462, file: !463, line: 299, type: !265)
!488 = !DILocalVariable(name: "prec", arg: 6, scope: !462, file: !463, line: 299, type: !10)
!489 = !DILocalVariable(name: "width", arg: 7, scope: !462, file: !463, line: 299, type: !10)
!490 = !DILocalVariable(name: "flags", arg: 8, scope: !462, file: !463, line: 299, type: !10)
!491 = !DILocalVariable(name: "start_idx", scope: !462, file: !463, line: 301, type: !492)
!492 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !282)
!493 = !DILocalVariable(name: "buf", scope: !462, file: !463, line: 303, type: !494)
!494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 256, elements: !495)
!495 = !{!496}
!496 = !DISubrange(count: 32)
!497 = !DILocalVariable(name: "len", scope: !462, file: !463, line: 304, type: !282)
!498 = !DILocalVariable(name: "diff", scope: !462, file: !463, line: 305, type: !265)
!499 = !DILocalVariable(name: "thres_max", scope: !462, file: !463, line: 308, type: !500)
!500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !265)
!501 = !DILocalVariable(name: "negative", scope: !462, file: !463, line: 322, type: !502)
!502 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!503 = !DILocalVariable(name: "whole", scope: !462, file: !463, line: 338, type: !59)
!504 = !DILocalVariable(name: "tmp", scope: !462, file: !463, line: 339, type: !265)
!505 = !DILocalVariable(name: "frac", scope: !462, file: !463, line: 340, type: !362)
!506 = !DILocalVariable(name: "count", scope: !507, file: !463, line: 373, type: !10)
!507 = distinct !DILexicalBlock(scope: !508, file: !463, line: 372, column: 8)
!508 = distinct !DILexicalBlock(scope: !462, file: !463, line: 364, column: 7)
!509 = !DILocalVariable(name: "i", scope: !510, file: !463, line: 424, type: !282)
!510 = distinct !DILexicalBlock(scope: !511, file: !463, line: 424, column: 5)
!511 = distinct !DILexicalBlock(scope: !512, file: !463, line: 423, column: 58)
!512 = distinct !DILexicalBlock(scope: !462, file: !463, line: 423, column: 7)
!513 = !DILocalVariable(name: "i", scope: !514, file: !463, line: 430, type: !282)
!514 = distinct !DILexicalBlock(scope: !462, file: !463, line: 430, column: 3)
!515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !500, size: 640, elements: !516)
!516 = !{!517}
!517 = !DISubrange(count: 10)
!518 = !DIGlobalVariableExpression(var: !519, expr: !DIExpression())
!519 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !520, file: !521, line: 124, type: !593, isLocal: false, isDefinition: true)
!520 = distinct !DICompileUnit(language: DW_LANG_C99, file: !521, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !522, retainedTypes: !528, globals: !584, splitDebugInlining: false, nameTableKind: None)
!521 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/system_stm32f1xx.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "2e873de3002e5d783190a46ff1c7da2d")
!522 = !{!523}
!523 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !524, line: 151, baseType: !10, size: 32, elements: !525)
!524 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "dc4ed8bdf8589b30d30d93eb6ee6ca27")
!525 = !{!526, !527}
!526 = !DIEnumerator(name: "RESET", value: 0)
!527 = !DIEnumerator(name: "SET", value: 1)
!528 = !{!529, !543, !24}
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 32)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !19, line: 438, baseType: !531)
!531 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 424, size: 320, elements: !532)
!532 = !{!533, !534, !535, !536, !537, !538, !539, !540, !541, !542}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !531, file: !19, line: 426, baseType: !23, size: 32)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !531, file: !19, line: 427, baseType: !23, size: 32, offset: 32)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !531, file: !19, line: 428, baseType: !23, size: 32, offset: 64)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !531, file: !19, line: 429, baseType: !23, size: 32, offset: 96)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !531, file: !19, line: 430, baseType: !23, size: 32, offset: 128)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !531, file: !19, line: 431, baseType: !23, size: 32, offset: 160)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !531, file: !19, line: 432, baseType: !23, size: 32, offset: 192)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !531, file: !19, line: 433, baseType: !23, size: 32, offset: 224)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !531, file: !19, line: 434, baseType: !23, size: 32, offset: 256)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !531, file: !19, line: 435, baseType: !23, size: 32, offset: 288)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 32)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !545, line: 397, baseType: !546)
!545 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build")
!546 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !545, line: 374, size: 1120, elements: !547)
!547 = !{!548, !550, !551, !552, !553, !554, !555, !560, !561, !562, !563, !564, !565, !566, !567, !571, !572, !573, !577, !581, !583}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !546, file: !545, line: 376, baseType: !549, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !23)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !546, file: !545, line: 377, baseType: !23, size: 32, offset: 32)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !546, file: !545, line: 378, baseType: !23, size: 32, offset: 64)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !546, file: !545, line: 379, baseType: !23, size: 32, offset: 96)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !546, file: !545, line: 380, baseType: !23, size: 32, offset: 128)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !546, file: !545, line: 381, baseType: !23, size: 32, offset: 160)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !546, file: !545, line: 382, baseType: !556, size: 96, offset: 192)
!556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !557, size: 96, elements: !558)
!557 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !45)
!558 = !{!559}
!559 = !DISubrange(count: 12)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !546, file: !545, line: 383, baseType: !23, size: 32, offset: 288)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !546, file: !545, line: 384, baseType: !23, size: 32, offset: 320)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !546, file: !545, line: 385, baseType: !23, size: 32, offset: 352)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !546, file: !545, line: 386, baseType: !23, size: 32, offset: 384)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !546, file: !545, line: 387, baseType: !23, size: 32, offset: 416)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !546, file: !545, line: 388, baseType: !23, size: 32, offset: 448)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !546, file: !545, line: 389, baseType: !23, size: 32, offset: 480)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !546, file: !545, line: 390, baseType: !568, size: 64, offset: 512)
!568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !549, size: 64, elements: !569)
!569 = !{!570}
!570 = !DISubrange(count: 2)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !546, file: !545, line: 391, baseType: !549, size: 32, offset: 576)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !546, file: !545, line: 392, baseType: !549, size: 32, offset: 608)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !546, file: !545, line: 393, baseType: !574, size: 128, offset: 640)
!574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !549, size: 128, elements: !575)
!575 = !{!576}
!576 = !DISubrange(count: 4)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !546, file: !545, line: 394, baseType: !578, size: 160, offset: 768)
!578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !549, size: 160, elements: !579)
!579 = !{!580}
!580 = !DISubrange(count: 5)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !546, file: !545, line: 395, baseType: !582, size: 160, offset: 928)
!582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 160, elements: !579)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !546, file: !545, line: 396, baseType: !23, size: 32, offset: 1088)
!584 = !{!585, !518, !587}
!585 = !DIGlobalVariableExpression(var: !586, expr: !DIExpression())
!586 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !520, file: !521, line: 123, type: !24, isLocal: false, isDefinition: true)
!587 = !DIGlobalVariableExpression(var: !588, expr: !DIExpression())
!588 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !520, file: !521, line: 125, type: !589, isLocal: false, isDefinition: true)
!589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !590, size: 64, elements: !591)
!590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !45)
!591 = !{!592}
!592 = !DISubrange(count: 8)
!593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !590, size: 128, elements: !594)
!594 = !{!595}
!595 = !DISubrange(count: 16)
!596 = !DIGlobalVariableExpression(var: !597, expr: !DIExpression())
!597 = distinct !DIGlobalVariable(name: "uwTickPrio", scope: !598, file: !599, line: 80, type: !24, isLocal: false, isDefinition: true)
!598 = distinct !DICompileUnit(language: DW_LANG_C99, file: !599, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !600, retainedTypes: !668, globals: !711, splitDebugInlining: false, nameTableKind: None)
!599 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "1a5fa7b79e9e470cf817b81d791a6ccb")
!600 = !{!601, !608, !614}
!601 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !602, line: 49, baseType: !10, size: 32, elements: !603)
!602 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "5eab64b252ccd159497a11d87d26bc0b")
!603 = !{!604, !605, !606, !607}
!604 = !DIEnumerator(name: "HAL_TICK_FREQ_10HZ", value: 100)
!605 = !DIEnumerator(name: "HAL_TICK_FREQ_100HZ", value: 10)
!606 = !DIEnumerator(name: "HAL_TICK_FREQ_1KHZ", value: 1)
!607 = !DIEnumerator(name: "HAL_TICK_FREQ_DEFAULT", value: 1)
!608 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 41, baseType: !10, size: 32, elements: !609)
!609 = !{!610, !611, !612, !613}
!610 = !DIEnumerator(name: "HAL_OK", value: 0)
!611 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!612 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!613 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!614 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !19, line: 69, baseType: !59, size: 32, elements: !615)
!615 = !{!616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667}
!616 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!617 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!618 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!619 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!620 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!621 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!622 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!623 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!624 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!625 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!626 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!627 = !DIEnumerator(name: "TAMPER_IRQn", value: 2)
!628 = !DIEnumerator(name: "RTC_IRQn", value: 3)
!629 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!630 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!631 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!632 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!633 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!634 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!635 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!636 = !DIEnumerator(name: "DMA1_Channel1_IRQn", value: 11)
!637 = !DIEnumerator(name: "DMA1_Channel2_IRQn", value: 12)
!638 = !DIEnumerator(name: "DMA1_Channel3_IRQn", value: 13)
!639 = !DIEnumerator(name: "DMA1_Channel4_IRQn", value: 14)
!640 = !DIEnumerator(name: "DMA1_Channel5_IRQn", value: 15)
!641 = !DIEnumerator(name: "DMA1_Channel6_IRQn", value: 16)
!642 = !DIEnumerator(name: "DMA1_Channel7_IRQn", value: 17)
!643 = !DIEnumerator(name: "ADC1_2_IRQn", value: 18)
!644 = !DIEnumerator(name: "USB_HP_CAN1_TX_IRQn", value: 19)
!645 = !DIEnumerator(name: "USB_LP_CAN1_RX0_IRQn", value: 20)
!646 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!647 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!648 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!649 = !DIEnumerator(name: "TIM1_BRK_IRQn", value: 24)
!650 = !DIEnumerator(name: "TIM1_UP_IRQn", value: 25)
!651 = !DIEnumerator(name: "TIM1_TRG_COM_IRQn", value: 26)
!652 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!653 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!654 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!655 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!656 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!657 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!658 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!659 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!660 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!661 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!662 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!663 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!664 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!665 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!666 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!667 = !DIEnumerator(name: "USBWakeUp_IRQn", value: 42)
!668 = !{!669, !24, !682, !696, !704, !710}
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 32)
!670 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !19, line: 336, baseType: !671)
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 325, size: 288, elements: !672)
!672 = !{!673, !674, !675, !676, !677, !678, !679, !680, !681}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !671, file: !19, line: 327, baseType: !23, size: 32)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !671, file: !19, line: 328, baseType: !23, size: 32, offset: 32)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !671, file: !19, line: 329, baseType: !23, size: 32, offset: 64)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !671, file: !19, line: 330, baseType: !23, size: 32, offset: 96)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !671, file: !19, line: 331, baseType: !23, size: 32, offset: 128)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "AR", scope: !671, file: !19, line: 332, baseType: !23, size: 32, offset: 160)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !671, file: !19, line: 333, baseType: !23, size: 32, offset: 192)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !671, file: !19, line: 334, baseType: !23, size: 32, offset: 224)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR", scope: !671, file: !19, line: 335, baseType: !23, size: 32, offset: 256)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !19, line: 438, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 424, size: 320, elements: !685)
!685 = !{!686, !687, !688, !689, !690, !691, !692, !693, !694, !695}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !684, file: !19, line: 426, baseType: !23, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !684, file: !19, line: 427, baseType: !23, size: 32, offset: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !684, file: !19, line: 428, baseType: !23, size: 32, offset: 64)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !684, file: !19, line: 429, baseType: !23, size: 32, offset: 96)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !684, file: !19, line: 430, baseType: !23, size: 32, offset: 128)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !684, file: !19, line: 431, baseType: !23, size: 32, offset: 160)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !684, file: !19, line: 432, baseType: !23, size: 32, offset: 192)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !684, file: !19, line: 433, baseType: !23, size: 32, offset: 224)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !684, file: !19, line: 434, baseType: !23, size: 32, offset: 256)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !684, file: !19, line: 435, baseType: !23, size: 32, offset: 288)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 32)
!697 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !545, line: 700, baseType: !698)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !545, line: 694, size: 128, elements: !699)
!699 = !{!700, !701, !702, !703}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !698, file: !545, line: 696, baseType: !23, size: 32)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !698, file: !545, line: 697, baseType: !23, size: 32, offset: 32)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !698, file: !545, line: 698, baseType: !23, size: 32, offset: 64)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !698, file: !545, line: 699, baseType: !549, size: 32, offset: 96)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 32)
!705 = !DIDerivedType(tag: DW_TAG_typedef, name: "DBGMCU_TypeDef", file: !19, line: 285, baseType: !706)
!706 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 281, size: 64, elements: !707)
!707 = !{!708, !709}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "IDCODE", scope: !706, file: !19, line: 283, baseType: !23, size: 32)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !706, file: !19, line: 284, baseType: !23, size: 32, offset: 32)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 32)
!711 = !{!596, !712, !715}
!712 = !DIGlobalVariableExpression(var: !713, expr: !DIExpression())
!713 = distinct !DIGlobalVariable(name: "uwTickFreq", scope: !598, file: !599, line: 81, type: !714, isLocal: false, isDefinition: true)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_TickFreqTypeDef", file: !602, line: 55, baseType: !601)
!715 = !DIGlobalVariableExpression(var: !716, expr: !DIExpression())
!716 = distinct !DIGlobalVariable(name: "uwTick", scope: !598, file: !599, line: 79, type: !23, isLocal: false, isDefinition: true)
!717 = !DIGlobalVariableExpression(var: !718, expr: !DIExpression())
!718 = distinct !DIGlobalVariable(name: "instance", linkageName: "_ZN6Cicada9Stm32Uart8instanceE", scope: !719, file: !720, line: 32, type: !824, isLocal: false, isDefinition: true, declaration: !823)
!719 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !720, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !721, retainedTypes: !738, globals: !944, imports: !945, splitDebugInlining: false, nameTableKind: None)
!720 = !DIFile(filename: "../cicada/platform/stm32f1/stm32uart.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "3cfb26aba75e1df83974cb6e4fff6457")
!721 = !{!722, !8, !723, !727}
!722 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, file: !19, line: 69, baseType: !59, size: 32, elements: !615, identifier: "_ZTS9IRQn_Type")
!723 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 52, baseType: !10, size: 32, elements: !724, identifier: "_ZTS15HAL_LockTypeDef")
!724 = !{!725, !726}
!725 = !DIEnumerator(name: "HAL_UNLOCKED", value: 0, isUnsigned: true)
!726 = !DIEnumerator(name: "HAL_LOCKED", value: 1, isUnsigned: true)
!727 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, file: !728, line: 117, baseType: !10, size: 32, elements: !729, identifier: "_ZTS21HAL_UART_StateTypeDef")
!728 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "74469f61b271b78e5ff5784cb5eb97d1")
!729 = !{!730, !731, !732, !733, !734, !735, !736, !737}
!730 = !DIEnumerator(name: "HAL_UART_STATE_RESET", value: 0, isUnsigned: true)
!731 = !DIEnumerator(name: "HAL_UART_STATE_READY", value: 32, isUnsigned: true)
!732 = !DIEnumerator(name: "HAL_UART_STATE_BUSY", value: 36, isUnsigned: true)
!733 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_TX", value: 33, isUnsigned: true)
!734 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_RX", value: 34, isUnsigned: true)
!735 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_TX_RX", value: 35, isUnsigned: true)
!736 = !DIEnumerator(name: "HAL_UART_STATE_TIMEOUT", value: 160, isUnsigned: true)
!737 = !DIEnumerator(name: "HAL_UART_STATE_ERROR", value: 224, isUnsigned: true)
!738 = !{!24, !17, !739, !749, !34, !45, !37, !171, !763, !793, !818}
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 32)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "AFIO_TypeDef", file: !19, line: 380, baseType: !741)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 373, size: 256, flags: DIFlagTypePassByValue, elements: !742, identifier: "_ZTS12AFIO_TypeDef")
!742 = !{!743, !744, !745, !747, !748}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "EVCR", scope: !741, file: !19, line: 375, baseType: !23, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "MAPR", scope: !741, file: !19, line: 376, baseType: !23, size: 32, offset: 32)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !741, file: !19, line: 377, baseType: !746, size: 128, offset: 64)
!746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 128, elements: !575)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !741, file: !19, line: 378, baseType: !24, size: 32, offset: 192)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "MAPR2", scope: !741, file: !19, line: 379, baseType: !23, size: 32, offset: 224)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 32)
!750 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !19, line: 438, baseType: !751)
!751 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 424, size: 320, flags: DIFlagTypePassByValue, elements: !752, identifier: "_ZTS11RCC_TypeDef")
!752 = !{!753, !754, !755, !756, !757, !758, !759, !760, !761, !762}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !751, file: !19, line: 426, baseType: !23, size: 32)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !751, file: !19, line: 427, baseType: !23, size: 32, offset: 32)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !751, file: !19, line: 428, baseType: !23, size: 32, offset: 64)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !751, file: !19, line: 429, baseType: !23, size: 32, offset: 96)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !751, file: !19, line: 430, baseType: !23, size: 32, offset: 128)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !751, file: !19, line: 431, baseType: !23, size: 32, offset: 160)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !751, file: !19, line: 432, baseType: !23, size: 32, offset: 192)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !751, file: !19, line: 433, baseType: !23, size: 32, offset: 224)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !751, file: !19, line: 434, baseType: !23, size: 32, offset: 256)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !751, file: !19, line: 435, baseType: !23, size: 32, offset: 288)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 32)
!764 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !545, line: 355, baseType: !765)
!765 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !545, line: 340, size: 28704, flags: DIFlagTypePassByValue, elements: !766, identifier: "_ZTS9NVIC_Type")
!766 = !{!767, !769, !773, !774, !775, !776, !777, !778, !779, !780, !784, !788, !792}
!767 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !765, file: !545, line: 342, baseType: !768, size: 256)
!768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 256, elements: !591)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !765, file: !545, line: 343, baseType: !770, size: 768, offset: 256)
!770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 768, elements: !771)
!771 = !{!772}
!772 = !DISubrange(count: 24)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !765, file: !545, line: 344, baseType: !768, size: 256, offset: 1024)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !765, file: !545, line: 345, baseType: !770, size: 768, offset: 1280)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !765, file: !545, line: 346, baseType: !768, size: 256, offset: 2048)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !765, file: !545, line: 347, baseType: !770, size: 768, offset: 2304)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !765, file: !545, line: 348, baseType: !768, size: 256, offset: 3072)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !765, file: !545, line: 349, baseType: !770, size: 768, offset: 3328)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !765, file: !545, line: 350, baseType: !768, size: 256, offset: 4096)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !765, file: !545, line: 351, baseType: !781, size: 1792, offset: 4352)
!781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 1792, elements: !782)
!782 = !{!783}
!783 = !DISubrange(count: 56)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !765, file: !545, line: 352, baseType: !785, size: 1920, offset: 6144)
!785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !557, size: 1920, elements: !786)
!786 = !{!787}
!787 = !DISubrange(count: 240)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !765, file: !545, line: 353, baseType: !789, size: 20608, offset: 8064)
!789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 20608, elements: !790)
!790 = !{!791}
!791 = !DISubrange(count: 644)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !765, file: !545, line: 354, baseType: !23, size: 32, offset: 28672)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 32)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !545, line: 397, baseType: !795)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !545, line: 374, size: 1120, flags: DIFlagTypePassByValue, elements: !796, identifier: "_ZTS8SCB_Type")
!796 = !{!797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !795, file: !545, line: 376, baseType: !549, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !795, file: !545, line: 377, baseType: !23, size: 32, offset: 32)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !795, file: !545, line: 378, baseType: !23, size: 32, offset: 64)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !795, file: !545, line: 379, baseType: !23, size: 32, offset: 96)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !795, file: !545, line: 380, baseType: !23, size: 32, offset: 128)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !795, file: !545, line: 381, baseType: !23, size: 32, offset: 160)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !795, file: !545, line: 382, baseType: !556, size: 96, offset: 192)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !795, file: !545, line: 383, baseType: !23, size: 32, offset: 288)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !795, file: !545, line: 384, baseType: !23, size: 32, offset: 320)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !795, file: !545, line: 385, baseType: !23, size: 32, offset: 352)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !795, file: !545, line: 386, baseType: !23, size: 32, offset: 384)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !795, file: !545, line: 387, baseType: !23, size: 32, offset: 416)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !795, file: !545, line: 388, baseType: !23, size: 32, offset: 448)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !795, file: !545, line: 389, baseType: !23, size: 32, offset: 480)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !795, file: !545, line: 390, baseType: !568, size: 64, offset: 512)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !795, file: !545, line: 391, baseType: !549, size: 32, offset: 576)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !795, file: !545, line: 392, baseType: !549, size: 32, offset: 608)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !795, file: !545, line: 393, baseType: !574, size: 128, offset: 640)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !795, file: !545, line: 394, baseType: !578, size: 160, offset: 768)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !795, file: !545, line: 395, baseType: !582, size: 160, offset: 928)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !795, file: !545, line: 396, baseType: !23, size: 32, offset: 1088)
!818 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Stm32Uart", scope: !43, file: !124, line: 51, size: 1536, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !819, vtableHolder: !920)
!819 = !{!820, !823, !826, !827, !863, !864, !865, !866, !868, !874, !877, !880, !883, !886, !889, !890, !893, !894, !899, !903, !904, !905, !908, !909, !913, !917}
!820 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !818, baseType: !821, flags: DIFlagPublic, extraData: i32 0)
!821 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "BufferedSerial", scope: !43, file: !822, line: 42, size: 832, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada14BufferedSerialE")
!822 = !DIFile(filename: "../cicada/bufferedserial.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "b9c9871d742db1af5ee8abb5df52fc59")
!823 = !DIDerivedType(tag: DW_TAG_member, name: "instance", scope: !818, file: !124, line: 120, baseType: !824, flags: DIFlagStaticMember)
!824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !825, size: 128, elements: !575)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 32)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !818, file: !124, line: 122, baseType: !45, size: 8, offset: 832)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "_handle", scope: !818, file: !124, line: 123, baseType: !828, size: 576, offset: 864)
!828 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_HandleTypeDef", file: !728, line: 189, baseType: !829)
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__UART_HandleTypeDef", file: !728, line: 141, size: 576, flags: DIFlagTypePassByValue, elements: !830, identifier: "_ZTS20__UART_HandleTypeDef")
!830 = !{!831, !832, !843, !844, !845, !847, !848, !849, !850, !855, !856, !858, !861, !862}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "Instance", scope: !829, file: !728, line: 143, baseType: !17, size: 32)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "Init", scope: !829, file: !728, line: 145, baseType: !833, size: 224, offset: 32)
!833 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_InitTypeDef", file: !728, line: 76, baseType: !834)
!834 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !728, line: 47, size: 224, flags: DIFlagTypePassByValue, elements: !835, identifier: "_ZTS16UART_InitTypeDef")
!835 = !{!836, !837, !838, !839, !840, !841, !842}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "BaudRate", scope: !834, file: !728, line: 49, baseType: !24, size: 32)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "WordLength", scope: !834, file: !728, line: 54, baseType: !24, size: 32, offset: 32)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "StopBits", scope: !834, file: !728, line: 57, baseType: !24, size: 32, offset: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "Parity", scope: !834, file: !728, line: 60, baseType: !24, size: 32, offset: 96)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !834, file: !728, line: 67, baseType: !24, size: 32, offset: 128)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "HwFlowCtl", scope: !834, file: !728, line: 70, baseType: !24, size: 32, offset: 160)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "OverSampling", scope: !834, file: !728, line: 73, baseType: !24, size: 32, offset: 192)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "pTxBuffPtr", scope: !829, file: !728, line: 147, baseType: !44, size: 32, offset: 256)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "TxXferSize", scope: !829, file: !728, line: 149, baseType: !37, size: 16, offset: 288)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "TxXferCount", scope: !829, file: !728, line: 151, baseType: !846, size: 16, offset: 304)
!846 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !37)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "pRxBuffPtr", scope: !829, file: !728, line: 153, baseType: !44, size: 32, offset: 320)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "RxXferSize", scope: !829, file: !728, line: 155, baseType: !37, size: 16, offset: 352)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "RxXferCount", scope: !829, file: !728, line: 157, baseType: !846, size: 16, offset: 368)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "hdmatx", scope: !829, file: !728, line: 159, baseType: !851, size: 32, offset: 384)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 32)
!852 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_HandleTypeDef", file: !853, line: 137, baseType: !854)
!853 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "dd8e7645a79a80f8166404bb078b3d4e")
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__DMA_HandleTypeDef", file: !853, line: 111, size: 576, flags: DIFlagFwdDecl, identifier: "_ZTS19__DMA_HandleTypeDef")
!855 = !DIDerivedType(tag: DW_TAG_member, name: "hdmarx", scope: !829, file: !728, line: 161, baseType: !851, size: 32, offset: 416)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "Lock", scope: !829, file: !728, line: 163, baseType: !857, size: 32, offset: 448)
!857 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_LockTypeDef", file: !9, line: 56, baseType: !723)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "gState", scope: !829, file: !728, line: 165, baseType: !859, size: 32, offset: 480)
!859 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !860)
!860 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_UART_StateTypeDef", file: !728, line: 136, baseType: !727)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "RxState", scope: !829, file: !728, line: 169, baseType: !859, size: 32, offset: 512)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "ErrorCode", scope: !829, file: !728, line: 172, baseType: !23, size: 32, offset: 544)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "_uartPort", scope: !818, file: !124, line: 124, baseType: !34, size: 32, offset: 1440)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "_txPin", scope: !818, file: !124, line: 125, baseType: !37, size: 16, offset: 1472)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "_rxPin", scope: !818, file: !124, line: 126, baseType: !37, size: 16, offset: 1488)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "_uartInterruptInstance", scope: !818, file: !124, line: 127, baseType: !867, size: 32, offset: 1504)
!867 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !19, line: 126, baseType: !722)
!868 = !DISubprogram(name: "Stm32Uart", scope: !818, file: !124, line: 66, type: !869, scopeLine: 66, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!869 = !DISubroutineType(types: !870)
!870 = !{null, !871, !308, !308, !872, !17, !34, !37, !37}
!871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!872 = !DIDerivedType(tag: DW_TAG_typedef, name: "Size", scope: !43, file: !873, line: 32, baseType: !208)
!873 = !DIFile(filename: "../cicada/types.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "6dfa4c2c933d4c520c13fa7638528c51")
!874 = !DISubprogram(name: "Stm32Uart", scope: !818, file: !124, line: 83, type: !875, scopeLine: 83, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!875 = !DISubroutineType(types: !876)
!876 = !{null, !871, !308, !308, !872, !872, !17, !34, !37, !37}
!877 = !DISubprogram(name: "~Stm32Uart", scope: !818, file: !124, line: 86, type: !878, scopeLine: 86, containingType: !818, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!878 = !DISubroutineType(types: !879)
!879 = !{null, !871}
!880 = !DISubprogram(name: "getInstance", linkageName: "_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef", scope: !818, file: !124, line: 88, type: !881, scopeLine: 88, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!881 = !DISubroutineType(types: !882)
!882 = !{!825, !17}
!883 = !DISubprogram(name: "open", linkageName: "_ZN6Cicada9Stm32Uart4openEv", scope: !818, file: !124, line: 93, type: !884, scopeLine: 93, containingType: !818, virtualIndex: 15, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!884 = !DISubroutineType(types: !885)
!885 = !{!63, !871}
!886 = !DISubprogram(name: "open", linkageName: "_ZN6Cicada9Stm32Uart4openEh", scope: !818, file: !124, line: 100, type: !887, scopeLine: 100, containingType: !818, virtualIndex: 16, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!887 = !DISubroutineType(types: !888)
!888 = !{!63, !871, !45}
!889 = !DISubprogram(name: "isOpen", linkageName: "_ZN6Cicada9Stm32Uart6isOpenEv", scope: !818, file: !124, line: 102, type: !884, scopeLine: 102, containingType: !818, virtualIndex: 17, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!890 = !DISubprogram(name: "setSerialConfig", linkageName: "_ZN6Cicada9Stm32Uart15setSerialConfigEjh", scope: !818, file: !124, line: 103, type: !891, scopeLine: 103, containingType: !818, virtualIndex: 18, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!891 = !DISubroutineType(types: !892)
!892 = !{!63, !871, !24, !45}
!893 = !DISubprogram(name: "close", linkageName: "_ZN6Cicada9Stm32Uart5closeEv", scope: !818, file: !124, line: 104, type: !878, scopeLine: 104, containingType: !818, virtualIndex: 19, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!894 = !DISubprogram(name: "portName", linkageName: "_ZNK6Cicada9Stm32Uart8portNameEv", scope: !818, file: !124, line: 105, type: !895, scopeLine: 105, containingType: !818, virtualIndex: 20, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!895 = !DISubroutineType(types: !896)
!896 = !{!266, !897}
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !818)
!899 = !DISubprogram(name: "rawRead", linkageName: "_ZN6Cicada9Stm32Uart7rawReadERh", scope: !818, file: !124, line: 106, type: !900, scopeLine: 106, containingType: !818, virtualIndex: 21, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!900 = !DISubroutineType(types: !901)
!901 = !{!63, !871, !902}
!902 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !45, size: 32)
!903 = !DISubprogram(name: "rawWrite", linkageName: "_ZN6Cicada9Stm32Uart8rawWriteEh", scope: !818, file: !124, line: 107, type: !887, scopeLine: 107, containingType: !818, virtualIndex: 22, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!904 = !DISubprogram(name: "startTransmit", linkageName: "_ZN6Cicada9Stm32Uart13startTransmitEv", scope: !818, file: !124, line: 108, type: !878, scopeLine: 108, containingType: !818, virtualIndex: 23, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!905 = !DISubprogram(name: "writeBufferProcessed", linkageName: "_ZNK6Cicada9Stm32Uart20writeBufferProcessedEv", scope: !818, file: !124, line: 109, type: !906, scopeLine: 109, containingType: !818, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!906 = !DISubroutineType(types: !907)
!907 = !{!63, !897}
!908 = !DISubprogram(name: "handleInterrupt", linkageName: "_ZN6Cicada9Stm32Uart15handleInterruptEv", scope: !818, file: !124, line: 111, type: !878, scopeLine: 111, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!909 = !DISubprogram(name: "Stm32Uart", scope: !818, file: !124, line: 115, type: !910, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!910 = !DISubroutineType(types: !911)
!911 = !{null, !871, !912}
!912 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !898, size: 32)
!913 = !DISubprogram(name: "operator=", linkageName: "_ZN6Cicada9Stm32UartaSERKS0_", scope: !818, file: !124, line: 116, type: !914, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!914 = !DISubroutineType(types: !915)
!915 = !{!916, !871, !912}
!916 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !818, size: 32)
!917 = !DISubprogram(name: "init", linkageName: "_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef", scope: !818, file: !124, line: 118, type: !918, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!918 = !DISubroutineType(types: !919)
!919 = !{null, !871, !17}
!920 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "ICommDevice", scope: !43, file: !921, line: 43, size: 32, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !922, vtableHolder: !920, identifier: "_ZTSN6Cicada11ICommDeviceE")
!921 = !DIFile(filename: "../cicada/icommdevice.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e83d2959922f5020d303a6315b56c6e9")
!922 = !{!923, !924, !928, !933, !934, !937, !940}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$ICommDevice", scope: !921, file: !921, baseType: !55, size: 32, flags: DIFlagArtificial)
!924 = !DISubprogram(name: "~ICommDevice", scope: !920, file: !921, line: 46, type: !925, scopeLine: 46, containingType: !920, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!925 = !DISubroutineType(types: !926)
!926 = !{null, !927}
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!928 = !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada11ICommDevice14bytesAvailableEv", scope: !920, file: !921, line: 52, type: !929, scopeLine: 52, containingType: !920, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!929 = !DISubroutineType(types: !930)
!930 = !{!872, !931}
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !920)
!933 = !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada11ICommDevice14spaceAvailableEv", scope: !920, file: !921, line: 60, type: !929, scopeLine: 60, containingType: !920, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!934 = !DISubprogram(name: "writeBufferProcessed", linkageName: "_ZNK6Cicada11ICommDevice20writeBufferProcessedEv", scope: !920, file: !921, line: 71, type: !935, scopeLine: 71, containingType: !920, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!935 = !DISubroutineType(types: !936)
!936 = !{!63, !931}
!937 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada11ICommDevice4readEPhy", scope: !920, file: !921, line: 85, type: !938, scopeLine: 85, containingType: !920, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!938 = !DISubroutineType(types: !939)
!939 = !{!872, !927, !44, !872}
!940 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada11ICommDevice5writeEPKhy", scope: !920, file: !921, line: 98, type: !941, scopeLine: 98, containingType: !920, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!941 = !DISubroutineType(types: !942)
!942 = !{!872, !927, !943, !872}
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 32)
!944 = !{!717}
!945 = !{!160, !166, !170, !173, !177, !180, !182, !184, !186, !189, !192, !195, !198, !201, !204, !205, !206, !207, !211, !213, !215, !217, !219, !222, !225, !228, !231, !234, !946}
!946 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !719, entity: !43, file: !720, line: 28)
!947 = !DIGlobalVariableExpression(var: !948, expr: !DIExpression())
!948 = distinct !DIGlobalVariable(name: "_lineEndStr", linkageName: "_ZN6Cicada12ATCommDevice11_lineEndStrE", scope: !949, file: !950, line: 35, type: !266, isLocal: false, isDefinition: true, declaration: !1033)
!949 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !950, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !951, globals: !1069, imports: !1074, splitDebugInlining: false, nameTableKind: None)
!950 = !DIFile(filename: "../cicada/commdevices/atcommdevice.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "2c00a0b2c5bf95afd2d356500bb68c03")
!951 = !{!943, !59, !44, !952}
!952 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "ATCommDevice", scope: !43, file: !108, line: 39, size: 1856, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !953, vtableHolder: !920)
!953 = !{!954, !957, !1022, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1039, !1042, !1045, !1048, !1051, !1054, !1057, !1058, !1061, !1064, !1065, !1066}
!954 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !952, baseType: !955, flags: DIFlagPublic, extraData: i32 0)
!955 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "IPCommDevice", scope: !43, file: !956, line: 42, size: 1152, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada12IPCommDeviceE")
!956 = !DIFile(filename: "../cicada/commdevices/ipcommdevice.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "5231d389687db9c7b4a2dc5416c977bf")
!957 = !DIDerivedType(tag: DW_TAG_member, name: "_serial", scope: !952, file: !108, line: 83, baseType: !958, size: 32, offset: 1120, flags: DIFlagProtected)
!958 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !959, size: 32)
!959 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "IBufferedSerial", scope: !43, file: !960, line: 39, size: 64, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !961, vtableHolder: !920, identifier: "_ZTSN6Cicada15IBufferedSerialE")
!960 = !DIFile(filename: "../cicada/ibufferedserial.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "0e5db7c0b86651abb573e233dc791166")
!961 = !{!962, !963, !992, !996, !999, !1002, !1005, !1008, !1011, !1016, !1017, !1018, !1021}
!962 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !959, baseType: !920, flags: DIFlagPublic, extraData: i32 0)
!963 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !959, baseType: !964, offset: 32, flags: DIFlagPublic, extraData: i32 0)
!964 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "ISerial", scope: !43, file: !965, line: 37, size: 32, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !966, vtableHolder: !964, identifier: "_ZTSN6Cicada7ISerialE")
!965 = !DIFile(filename: "../cicada/iserial.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e3dc53a2acd15a8e90c357a32168f40f")
!966 = !{!967, !968, !972, !975, !976, !979, !980, !985, !988, !991}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$ISerial", scope: !965, file: !965, baseType: !55, size: 32, flags: DIFlagArtificial)
!968 = !DISubprogram(name: "~ISerial", scope: !964, file: !965, line: 40, type: !969, scopeLine: 40, containingType: !964, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!969 = !DISubroutineType(types: !970)
!970 = !{null, !971}
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!972 = !DISubprogram(name: "open", linkageName: "_ZN6Cicada7ISerial4openEv", scope: !964, file: !965, line: 46, type: !973, scopeLine: 46, containingType: !964, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!973 = !DISubroutineType(types: !974)
!974 = !{!63, !971}
!975 = !DISubprogram(name: "isOpen", linkageName: "_ZN6Cicada7ISerial6isOpenEv", scope: !964, file: !965, line: 52, type: !973, scopeLine: 52, containingType: !964, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!976 = !DISubprogram(name: "setSerialConfig", linkageName: "_ZN6Cicada7ISerial15setSerialConfigEjh", scope: !964, file: !965, line: 60, type: !977, scopeLine: 60, containingType: !964, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!977 = !DISubroutineType(types: !978)
!978 = !{!63, !971, !24, !45}
!979 = !DISubprogram(name: "close", linkageName: "_ZN6Cicada7ISerial5closeEv", scope: !964, file: !965, line: 65, type: !969, scopeLine: 65, containingType: !964, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!980 = !DISubprogram(name: "portName", linkageName: "_ZNK6Cicada7ISerial8portNameEv", scope: !964, file: !965, line: 71, type: !981, scopeLine: 71, containingType: !964, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!981 = !DISubroutineType(types: !982)
!982 = !{!266, !983}
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !964)
!985 = !DISubprogram(name: "rawRead", linkageName: "_ZN6Cicada7ISerial7rawReadERh", scope: !964, file: !965, line: 80, type: !986, scopeLine: 80, containingType: !964, virtualIndex: 7, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!986 = !DISubroutineType(types: !987)
!987 = !{!63, !971, !902}
!988 = !DISubprogram(name: "rawWrite", linkageName: "_ZN6Cicada7ISerial8rawWriteEh", scope: !964, file: !965, line: 87, type: !989, scopeLine: 87, containingType: !964, virtualIndex: 8, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!989 = !DISubroutineType(types: !990)
!990 = !{!63, !971, !45}
!991 = !DISubprogram(name: "startTransmit", linkageName: "_ZN6Cicada7ISerial13startTransmitEv", scope: !964, file: !965, line: 93, type: !969, scopeLine: 93, containingType: !964, virtualIndex: 9, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!992 = !DISubprogram(name: "~IBufferedSerial", scope: !959, file: !960, line: 42, type: !993, scopeLine: 42, containingType: !959, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!993 = !DISubroutineType(types: !994)
!994 = !{null, !995}
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!996 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada15IBufferedSerial4readEPhy", scope: !959, file: !960, line: 44, type: !997, scopeLine: 44, containingType: !959, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!997 = !DISubroutineType(types: !998)
!998 = !{!872, !995, !44, !872}
!999 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada15IBufferedSerial5writeEPKhy", scope: !959, file: !960, line: 45, type: !1000, scopeLine: 45, containingType: !959, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!872, !995, !943, !872}
!1002 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada15IBufferedSerial4readEv", scope: !959, file: !960, line: 51, type: !1003, scopeLine: 51, containingType: !959, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1003 = !DISubroutineType(types: !1004)
!1004 = !{!45, !995}
!1005 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada15IBufferedSerial5writeEPKh", scope: !959, file: !960, line: 62, type: !1006, scopeLine: 62, containingType: !959, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{!872, !995, !943}
!1008 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada15IBufferedSerial5writeEh", scope: !959, file: !960, line: 68, type: !1009, scopeLine: 68, containingType: !959, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1009 = !DISubroutineType(types: !1010)
!1010 = !{null, !995, !45}
!1011 = !DISubprogram(name: "canReadLine", linkageName: "_ZNK6Cicada15IBufferedSerial11canReadLineEv", scope: !959, file: !960, line: 73, type: !1012, scopeLine: 73, containingType: !959, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1012 = !DISubroutineType(types: !1013)
!1013 = !{!63, !1014}
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !959)
!1016 = !DISubprogram(name: "readLine", linkageName: "_ZN6Cicada15IBufferedSerial8readLineEPhy", scope: !959, file: !960, line: 85, type: !997, scopeLine: 85, containingType: !959, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1017 = !DISubprogram(name: "flushReceiveBuffers", linkageName: "_ZN6Cicada15IBufferedSerial19flushReceiveBuffersEv", scope: !959, file: !960, line: 90, type: !993, scopeLine: 90, containingType: !959, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1018 = !DISubprogram(name: "readBufferSize", linkageName: "_ZN6Cicada15IBufferedSerial14readBufferSizeEv", scope: !959, file: !960, line: 95, type: !1019, scopeLine: 95, containingType: !959, virtualIndex: 13, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!872, !995}
!1021 = !DISubprogram(name: "writeBufferSize", linkageName: "_ZN6Cicada15IBufferedSerial15writeBufferSizeEv", scope: !959, file: !960, line: 96, type: !1019, scopeLine: 96, containingType: !959, virtualIndex: 14, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "_lineBuffer", scope: !952, file: !108, line: 85, baseType: !1023, size: 488, offset: 1152, flags: DIFlagProtected)
!1023 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 488, elements: !1024)
!1024 = !{!1025}
!1025 = !DISubrange(count: 61)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "_lbFill", scope: !952, file: !108, line: 86, baseType: !45, size: 8, offset: 1640, flags: DIFlagProtected)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "_sendState", scope: !952, file: !108, line: 88, baseType: !162, size: 8, offset: 1648, flags: DIFlagProtected)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "_replyState", scope: !952, file: !108, line: 89, baseType: !162, size: 8, offset: 1656, flags: DIFlagProtected)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "_bytesToWrite", scope: !952, file: !108, line: 90, baseType: !872, size: 64, offset: 1664, flags: DIFlagProtected)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "_bytesToReceive", scope: !952, file: !108, line: 91, baseType: !872, size: 64, offset: 1728, flags: DIFlagProtected)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "_bytesToRead", scope: !952, file: !108, line: 92, baseType: !872, size: 64, offset: 1792, flags: DIFlagProtected)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "_okStr", scope: !952, file: !108, line: 94, baseType: !266, flags: DIFlagProtected | DIFlagStaticMember)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "_lineEndStr", scope: !952, file: !108, line: 95, baseType: !266, flags: DIFlagProtected | DIFlagStaticMember)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "_quoteEndStr", scope: !952, file: !108, line: 96, baseType: !266, flags: DIFlagProtected | DIFlagStaticMember)
!1035 = !DISubprogram(name: "ATCommDevice", scope: !952, file: !108, line: 42, type: !1036, scopeLine: 42, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{null, !1038, !958, !44, !44, !872}
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1039 = !DISubprogram(name: "ATCommDevice", scope: !952, file: !108, line: 44, type: !1040, scopeLine: 44, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1040 = !DISubroutineType(types: !1041)
!1041 = !{null, !1038, !958, !44, !44, !872, !872}
!1042 = !DISubprogram(name: "~ATCommDevice", scope: !952, file: !108, line: 46, type: !1043, scopeLine: 46, containingType: !952, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1043 = !DISubroutineType(types: !1044)
!1044 = !{null, !1038}
!1045 = !DISubprogram(name: "serialWrite", linkageName: "_ZN6Cicada12ATCommDevice11serialWriteEPc", scope: !952, file: !108, line: 59, type: !1046, scopeLine: 59, containingType: !952, virtualIndex: 13, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!872, !1038, !308}
!1048 = !DISubprogram(name: "serialRead", linkageName: "_ZN6Cicada12ATCommDevice10serialReadEPcy", scope: !952, file: !108, line: 71, type: !1049, scopeLine: 71, containingType: !952, virtualIndex: 14, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{!872, !1038, !308, !872}
!1051 = !DISubprogram(name: "logStates", linkageName: "_ZN6Cicada12ATCommDevice9logStatesEaa", scope: !952, file: !108, line: 74, type: !1052, scopeLine: 74, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{null, !1038, !162, !162}
!1054 = !DISubprogram(name: "handleDisconnect", linkageName: "_ZN6Cicada12ATCommDevice16handleDisconnectEa", scope: !952, file: !108, line: 75, type: !1055, scopeLine: 75, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!63, !1038, !162}
!1057 = !DISubprogram(name: "handleConnect", linkageName: "_ZN6Cicada12ATCommDevice13handleConnectEa", scope: !952, file: !108, line: 76, type: !1055, scopeLine: 76, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1058 = !DISubprogram(name: "sendCommand", linkageName: "_ZN6Cicada12ATCommDevice11sendCommandEPKc", scope: !952, file: !108, line: 77, type: !1059, scopeLine: 77, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{null, !1038, !266}
!1061 = !DISubprogram(name: "prepareSending", linkageName: "_ZN6Cicada12ATCommDevice14prepareSendingEb", scope: !952, file: !108, line: 78, type: !1062, scopeLine: 78, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!63, !1038, !63}
!1064 = !DISubprogram(name: "sendData", linkageName: "_ZN6Cicada12ATCommDevice8sendDataEv", scope: !952, file: !108, line: 79, type: !1043, scopeLine: 79, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1065 = !DISubprogram(name: "flushReadBuffer", linkageName: "_ZN6Cicada12ATCommDevice15flushReadBufferEv", scope: !952, file: !108, line: 80, type: !1043, scopeLine: 80, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1066 = !DISubprogram(name: "receive", linkageName: "_ZN6Cicada12ATCommDevice7receiveEv", scope: !952, file: !108, line: 81, type: !1067, scopeLine: 81, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{!63, !1038}
!1069 = !{!1070, !947, !1072}
!1070 = !DIGlobalVariableExpression(var: !1071, expr: !DIExpression())
!1071 = distinct !DIGlobalVariable(name: "_okStr", linkageName: "_ZN6Cicada12ATCommDevice6_okStrE", scope: !949, file: !950, line: 34, type: !266, isLocal: false, isDefinition: true, declaration: !1032)
!1072 = !DIGlobalVariableExpression(var: !1073, expr: !DIExpression())
!1073 = distinct !DIGlobalVariable(name: "_quoteEndStr", linkageName: "_ZN6Cicada12ATCommDevice12_quoteEndStrE", scope: !949, file: !950, line: 36, type: !266, isLocal: false, isDefinition: true, declaration: !1034)
!1074 = !{!160, !166, !170, !173, !177, !180, !182, !184, !186, !189, !192, !195, !198, !201, !204, !205, !206, !207, !211, !213, !215, !217, !219, !222, !225, !228, !231, !234, !1075, !1080, !1084, !1088, !1094, !1098, !1105, !1109, !1114, !1190, !1192, !1197, !1201, !1203, !1205, !1207, !1209, !1214, !1218, !1222, !1226, !1230, !1234, !1238, !1242, !1244, !1248, !1254, !1258, !1262, !1264, !1266, !1270, !1274, !1276, !1278, !1280, !1282, !1286, !1288, !1290, !1294, !1298, !1302, !1306, !1310, !1314, !1316, !1325, !1329, !1333, !1337, !1339, !1341, !1345, !1349, !1350, !1351, !1352, !1353, !1354, !1363, !1367, !1371, !1373, !1377, !1381, !1383, !1385, !1387, !1391, !1395, !1399, !1403, !1407, !1409, !1411, !1413, !1417, !1421, !1425, !1427, !1429}
!1075 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1076, file: !1079, line: 58)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "imaxdiv_t", file: !1077, line: 315, baseType: !1078)
!1077 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/inttypes.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "1342af5b7f05910ff6fa824a20b79245")
!1078 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1077, line: 312, size: 128, flags: DIFlagFwdDecl, identifier: "_ZTS9imaxdiv_t")
!1079 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/cinttypes", directory: "/home/mjshen/RTOSExploration")
!1080 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1081, file: !1079, line: 61)
!1081 = !DISubprogram(name: "imaxabs", scope: !1077, file: !1077, line: 323, type: !1082, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!199, !199}
!1084 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1085, file: !1079, line: 62)
!1085 = !DISubprogram(name: "imaxdiv", scope: !1077, file: !1077, line: 324, type: !1086, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!1076, !199, !199}
!1088 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1089, file: !1079, line: 68)
!1089 = !DISubprogram(name: "strtoimax", scope: !1077, file: !1077, line: 325, type: !1090, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!199, !1092, !1093, !59}
!1092 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !266)
!1093 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !353)
!1094 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1095, file: !1079, line: 69)
!1095 = !DISubprogram(name: "strtoumax", scope: !1077, file: !1077, line: 327, type: !1096, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{!232, !1092, !1093, !59}
!1098 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1099, file: !1079, line: 72)
!1099 = !DISubprogram(name: "wcstoimax", scope: !1077, file: !1077, line: 329, type: !1100, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{!199, !1102, !1103, !59}
!1102 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !369)
!1103 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1104)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 32)
!1105 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1106, file: !1079, line: 73)
!1106 = !DISubprogram(name: "wcstoumax", scope: !1077, file: !1077, line: 331, type: !1107, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{!232, !1102, !1103, !59}
!1109 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1110, file: !1113, line: 58)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "max_align_t", file: !1111, line: 24, baseType: !1112)
!1111 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/__stddef_max_align_t.h", directory: "", checksumkind: CSK_MD5, checksum: "48e8e2456f77e6cda35d245130fa7259")
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1111, line: 19, size: 128, flags: DIFlagFwdDecl, identifier: "_ZTS11max_align_t")
!1113 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/cstddef", directory: "/home/mjshen/RTOSExploration")
!1114 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1115, file: !1189, line: 98)
!1115 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1116, line: 66, baseType: !1117)
!1116 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "f9fec3134fbe599333115bffe9fa8133")
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !1118, line: 292, baseType: !1119)
!1118 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "c7a2657565d7077fe3d3f464b271e0ba")
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !1118, line: 186, size: 832, flags: DIFlagTypePassByValue, elements: !1120, identifier: "_ZTS7__sFILE")
!1120 = !{!1121, !1123, !1124, !1125, !1126, !1127, !1132, !1133, !1134, !1140, !1144, !1150, !1154, !1155, !1156, !1157, !1161, !1165, !1166, !1167, !1169, !1170, !1176, !1188}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !1119, file: !1118, line: 187, baseType: !1122, size: 32)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 32)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !1119, file: !1118, line: 188, baseType: !59, size: 32, offset: 32)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !1119, file: !1118, line: 189, baseType: !59, size: 32, offset: 64)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1119, file: !1118, line: 190, baseType: !169, size: 16, offset: 96)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !1119, file: !1118, line: 191, baseType: !169, size: 16, offset: 112)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !1119, file: !1118, line: 192, baseType: !1128, size: 64, offset: 128)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !1118, line: 122, size: 64, flags: DIFlagTypePassByValue, elements: !1129, identifier: "_ZTS6__sbuf")
!1129 = !{!1130, !1131}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !1128, file: !1118, line: 123, baseType: !1122, size: 32)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !1128, file: !1118, line: 124, baseType: !59, size: 32, offset: 32)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !1119, file: !1118, line: 193, baseType: !59, size: 32, offset: 192)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !1119, file: !1118, line: 200, baseType: !279, size: 32, offset: 224)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !1119, file: !1118, line: 202, baseType: !1135, size: 32, offset: 256)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 32)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{!59, !1138, !279, !308, !59}
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 32)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !1118, line: 613, size: 8512, flags: DIFlagFwdDecl, identifier: "_ZTS6_reent")
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !1119, file: !1118, line: 204, baseType: !1141, size: 32, offset: 288)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 32)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{!59, !1138, !279, !266, !59}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !1119, file: !1118, line: 207, baseType: !1145, size: 32, offset: 320)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 32)
!1146 = !DISubroutineType(types: !1147)
!1147 = !{!1148, !1138, !279, !1148, !59}
!1148 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !1149, line: 116, baseType: !252)
!1149 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "b45aad52ebaa1042158f2766af29f8e2")
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !1119, file: !1118, line: 208, baseType: !1151, size: 32, offset: 352)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 32)
!1152 = !DISubroutineType(types: !1153)
!1153 = !{!59, !1138, !279}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !1119, file: !1118, line: 211, baseType: !1128, size: 64, offset: 384)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !1119, file: !1118, line: 212, baseType: !1122, size: 32, offset: 448)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !1119, file: !1118, line: 213, baseType: !59, size: 32, offset: 480)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !1119, file: !1118, line: 216, baseType: !1158, size: 24, offset: 512)
!1158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 24, elements: !1159)
!1159 = !{!1160}
!1160 = !DISubrange(count: 3)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !1119, file: !1118, line: 217, baseType: !1162, size: 8, offset: 536)
!1162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 8, elements: !1163)
!1163 = !{!1164}
!1164 = !DISubrange(count: 1)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !1119, file: !1118, line: 220, baseType: !1128, size: 64, offset: 544)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !1119, file: !1118, line: 223, baseType: !59, size: 32, offset: 608)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1119, file: !1118, line: 224, baseType: !1168, size: 32, offset: 640)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !1149, line: 46, baseType: !252)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !1119, file: !1118, line: 227, baseType: !1138, size: 32, offset: 672)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1119, file: !1118, line: 231, baseType: !1171, size: 32, offset: 704)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !1118, line: 35, baseType: !1172)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !1173, line: 34, baseType: !1174)
!1173 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "9390f2fa4a45b9ec624c9a037c5d6ca9")
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 32)
!1175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !1173, line: 33, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTS6__lock")
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !1119, file: !1118, line: 233, baseType: !1177, size: 64, offset: 736)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !1149, line: 170, baseType: !1178)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1149, line: 162, size: 64, flags: DIFlagTypePassByValue, elements: !1179, identifier: "_ZTS10_mbstate_t")
!1179 = !{!1180, !1181}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1178, file: !1149, line: 164, baseType: !59, size: 32)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1178, file: !1149, line: 169, baseType: !1182, size: 32, offset: 32)
!1182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1178, file: !1149, line: 165, size: 32, flags: DIFlagTypePassByValue, elements: !1183, identifier: "_ZTSN10_mbstate_tUt_E")
!1183 = !{!1184, !1186}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1182, file: !1149, line: 167, baseType: !1185, size: 32)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !283, line: 116, baseType: !59)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1182, file: !1149, line: 168, baseType: !1187, size: 32)
!1187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 32, elements: !575)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1119, file: !1118, line: 234, baseType: !59, size: 32, offset: 800)
!1189 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/cstdio", directory: "/home/mjshen/RTOSExploration")
!1190 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1191, file: !1189, line: 99)
!1191 = !DIDerivedType(tag: DW_TAG_typedef, name: "fpos_t", file: !1116, line: 73, baseType: !1148)
!1192 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1193, file: !1189, line: 101)
!1193 = !DISubprogram(name: "clearerr", scope: !1116, file: !1116, line: 238, type: !1194, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{null, !1196}
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1197 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1198, file: !1189, line: 102)
!1198 = !DISubprogram(name: "fclose", scope: !1116, file: !1116, line: 191, type: !1199, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{!59, !1196}
!1201 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1202, file: !1189, line: 103)
!1202 = !DISubprogram(name: "feof", scope: !1116, file: !1116, line: 239, type: !1199, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1203 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1204, file: !1189, line: 104)
!1204 = !DISubprogram(name: "ferror", scope: !1116, file: !1116, line: 240, type: !1199, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1205 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1206, file: !1189, line: 105)
!1206 = !DISubprogram(name: "fflush", scope: !1116, file: !1116, line: 192, type: !1199, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1207 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1208, file: !1189, line: 106)
!1208 = !DISubprogram(name: "fgetc", scope: !1116, file: !1116, line: 212, type: !1199, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1209 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1210, file: !1189, line: 107)
!1210 = !DISubprogram(name: "fgetpos", scope: !1116, file: !1116, line: 228, type: !1211, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1211 = !DISubroutineType(types: !1212)
!1212 = !{!59, !1196, !1213}
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 32)
!1214 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1215, file: !1189, line: 108)
!1215 = !DISubprogram(name: "fgets", scope: !1116, file: !1116, line: 213, type: !1216, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1216 = !DISubroutineType(types: !1217)
!1217 = !{!308, !308, !59, !1196}
!1218 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1219, file: !1189, line: 109)
!1219 = !DISubprogram(name: "fopen", scope: !1116, file: !1116, line: 243, type: !1220, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1220 = !DISubroutineType(types: !1221)
!1221 = !{!1196, !266, !266}
!1222 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1223, file: !1189, line: 110)
!1223 = !DISubprogram(name: "fprintf", scope: !1116, file: !1116, line: 196, type: !1224, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1224 = !DISubroutineType(types: !1225)
!1225 = !{!59, !1196, !266, null}
!1226 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1227, file: !1189, line: 111)
!1227 = !DISubprogram(name: "fputc", scope: !1116, file: !1116, line: 214, type: !1228, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!59, !59, !1196}
!1230 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1231, file: !1189, line: 112)
!1231 = !DISubprogram(name: "fputs", scope: !1116, file: !1116, line: 215, type: !1232, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{!59, !266, !1196}
!1234 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1235, file: !1189, line: 113)
!1235 = !DISubprogram(name: "fread", scope: !1116, file: !1116, line: 223, type: !1236, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1236 = !DISubroutineType(types: !1237)
!1237 = !{!282, !279, !282, !282, !1196}
!1238 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1239, file: !1189, line: 114)
!1239 = !DISubprogram(name: "freopen", scope: !1116, file: !1116, line: 193, type: !1240, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{!1196, !266, !266, !1196}
!1242 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1243, file: !1189, line: 115)
!1243 = !DISubprogram(name: "fscanf", scope: !1116, file: !1116, line: 198, type: !1224, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1244 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1245, file: !1189, line: 116)
!1245 = !DISubprogram(name: "fseek", scope: !1116, file: !1116, line: 230, type: !1246, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1246 = !DISubroutineType(types: !1247)
!1247 = !{!59, !1196, !252, !59}
!1248 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1249, file: !1189, line: 117)
!1249 = !DISubprogram(name: "fsetpos", scope: !1116, file: !1116, line: 234, type: !1250, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1250 = !DISubroutineType(types: !1251)
!1251 = !{!59, !1196, !1252}
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1191)
!1254 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1255, file: !1189, line: 118)
!1255 = !DISubprogram(name: "ftell", scope: !1116, file: !1116, line: 236, type: !1256, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1256 = !DISubroutineType(types: !1257)
!1257 = !{!252, !1196}
!1258 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1259, file: !1189, line: 119)
!1259 = !DISubprogram(name: "fwrite", scope: !1116, file: !1116, line: 224, type: !1260, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1260 = !DISubroutineType(types: !1261)
!1261 = !{!282, !280, !282, !282, !1196}
!1262 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1263, file: !1189, line: 120)
!1263 = !DISubprogram(name: "getc", scope: !1116, file: !1116, line: 216, type: !1199, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1264 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1265, file: !1189, line: 121)
!1265 = !DISubprogram(name: "getchar", scope: !1116, file: !1116, line: 217, type: !57, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1266 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1267, file: !1189, line: 126)
!1267 = !DISubprogram(name: "perror", scope: !1116, file: !1116, line: 241, type: !1268, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{null, !266}
!1270 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1271, file: !1189, line: 127)
!1271 = !DISubprogram(name: "printf", scope: !1116, file: !1116, line: 200, type: !1272, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1272 = !DISubroutineType(types: !1273)
!1273 = !{!59, !266, null}
!1274 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1275, file: !1189, line: 128)
!1275 = !DISubprogram(name: "putc", scope: !1116, file: !1116, line: 219, type: !1228, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1276 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1277, file: !1189, line: 129)
!1277 = !DISubprogram(name: "putchar", scope: !1116, file: !1116, line: 220, type: !240, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1278 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1279, file: !1189, line: 130)
!1279 = !DISubprogram(name: "puts", scope: !1116, file: !1116, line: 221, type: !269, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1280 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1281, file: !1189, line: 131)
!1281 = !DISubprogram(name: "remove", scope: !1116, file: !1116, line: 246, type: !269, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1282 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1283, file: !1189, line: 132)
!1283 = !DISubprogram(name: "rename", scope: !1116, file: !1116, line: 247, type: !1284, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1284 = !DISubroutineType(types: !1285)
!1285 = !{!59, !266, !266}
!1286 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1287, file: !1189, line: 133)
!1287 = !DISubprogram(name: "rewind", scope: !1116, file: !1116, line: 237, type: !1194, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1288 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1289, file: !1189, line: 134)
!1289 = !DISubprogram(name: "scanf", scope: !1116, file: !1116, line: 202, type: !1272, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1290 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1291, file: !1189, line: 135)
!1291 = !DISubprogram(name: "setbuf", scope: !1116, file: !1116, line: 194, type: !1292, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{null, !1196, !308}
!1294 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1295, file: !1189, line: 136)
!1295 = !DISubprogram(name: "setvbuf", scope: !1116, file: !1116, line: 195, type: !1296, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1296 = !DISubroutineType(types: !1297)
!1297 = !{!59, !1196, !308, !59, !282}
!1298 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1299, file: !1189, line: 137)
!1299 = !DISubprogram(name: "sprintf", scope: !1116, file: !1116, line: 244, type: !1300, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{!59, !308, !266, null}
!1302 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1303, file: !1189, line: 138)
!1303 = !DISubprogram(name: "sscanf", scope: !1116, file: !1116, line: 204, type: !1304, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{!59, !266, !266, null}
!1306 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1307, file: !1189, line: 139)
!1307 = !DISubprogram(name: "tmpfile", scope: !1116, file: !1116, line: 186, type: !1308, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{!1196}
!1310 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1311, file: !1189, line: 141)
!1311 = !DISubprogram(name: "tmpnam", scope: !1116, file: !1116, line: 187, type: !1312, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!308, !308}
!1314 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1315, file: !1189, line: 143)
!1315 = !DISubprogram(name: "ungetc", scope: !1116, file: !1116, line: 222, type: !1228, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1316 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1317, file: !1189, line: 144)
!1317 = !DISubprogram(name: "vfprintf", scope: !1116, file: !1116, line: 206, type: !1318, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1318 = !DISubroutineType(types: !1319)
!1319 = !{!59, !1196, !266, !1320}
!1320 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1321, line: 32, baseType: !1322)
!1321 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "", checksumkind: CSK_MD5, checksum: "4de3cbd931b589d291e5c39387aecf82")
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1323, baseType: !1324)
!1323 = !DIFile(filename: "../cicada/commdevices/atcommdevice.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build")
!1324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", scope: !161, file: !1323, size: 32, flags: DIFlagFwdDecl, identifier: "_ZTSSt9__va_list")
!1325 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1326, file: !1189, line: 145)
!1326 = !DISubprogram(name: "vprintf", scope: !1116, file: !1116, line: 208, type: !1327, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{!59, !266, !1320}
!1329 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1330, file: !1189, line: 146)
!1330 = !DISubprogram(name: "vsprintf", scope: !1116, file: !1116, line: 210, type: !1331, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1331 = !DISubroutineType(types: !1332)
!1332 = !{!59, !308, !266, !1320}
!1333 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !1334, file: !1189, line: 175)
!1334 = !DISubprogram(name: "snprintf", scope: !1116, file: !1116, line: 266, type: !1335, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1335 = !DISubroutineType(types: !1336)
!1336 = !{!59, !308, !282, !266, null}
!1337 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !1338, file: !1189, line: 176)
!1338 = !DISubprogram(name: "vfscanf", scope: !1116, file: !1116, line: 270, type: !1318, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1339 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !1340, file: !1189, line: 177)
!1340 = !DISubprogram(name: "vscanf", scope: !1116, file: !1116, line: 272, type: !1327, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1341 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !1342, file: !1189, line: 178)
!1342 = !DISubprogram(name: "vsnprintf", scope: !1116, file: !1116, line: 268, type: !1343, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1343 = !DISubroutineType(types: !1344)
!1344 = !{!59, !308, !282, !266, !1320}
!1345 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !1346, file: !1189, line: 179)
!1346 = !DISubprogram(name: "vsscanf", scope: !1116, file: !1116, line: 274, type: !1347, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1347 = !DISubroutineType(types: !1348)
!1348 = !{!59, !266, !266, !1320}
!1349 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1334, file: !1189, line: 185)
!1350 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1338, file: !1189, line: 186)
!1351 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1340, file: !1189, line: 187)
!1352 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1342, file: !1189, line: 188)
!1353 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1346, file: !1189, line: 189)
!1354 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1355, file: !1362, line: 77)
!1355 = !DISubprogram(name: "memchr", scope: !1356, file: !1356, line: 29, type: !1357, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1356 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/string.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "00b3471f69c722645cab66876c511e27")
!1357 = !DISubroutineType(types: !1358)
!1358 = !{!279, !280, !59, !1359}
!1359 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1360, line: 40, baseType: !1361)
!1360 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/strings.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "dceb1b71cd72987b246237af8552faba")
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "__size_t", file: !1149, line: 131, baseType: !10)
!1362 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/cstring", directory: "/home/mjshen/RTOSExploration")
!1363 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1364, file: !1362, line: 78)
!1364 = !DISubprogram(name: "memcmp", scope: !1356, file: !1356, line: 30, type: !1365, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1365 = !DISubroutineType(types: !1366)
!1366 = !{!59, !280, !280, !1359}
!1367 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1368, file: !1362, line: 79)
!1368 = !DISubprogram(name: "memcpy", scope: !1356, file: !1356, line: 31, type: !1369, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1369 = !DISubroutineType(types: !1370)
!1370 = !{!279, !279, !280, !1359}
!1371 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1372, file: !1362, line: 80)
!1372 = !DISubprogram(name: "memmove", scope: !1356, file: !1356, line: 32, type: !1369, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1373 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1374, file: !1362, line: 81)
!1374 = !DISubprogram(name: "memset", scope: !1356, file: !1356, line: 33, type: !1375, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1375 = !DISubroutineType(types: !1376)
!1376 = !{!279, !279, !59, !1359}
!1377 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1378, file: !1362, line: 82)
!1378 = !DISubprogram(name: "strcat", scope: !1356, file: !1356, line: 34, type: !1379, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1379 = !DISubroutineType(types: !1380)
!1380 = !{!308, !308, !266}
!1381 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1382, file: !1362, line: 83)
!1382 = !DISubprogram(name: "strcmp", scope: !1356, file: !1356, line: 36, type: !1284, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1383 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1384, file: !1362, line: 84)
!1384 = !DISubprogram(name: "strcoll", scope: !1356, file: !1356, line: 37, type: !1284, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1385 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1386, file: !1362, line: 85)
!1386 = !DISubprogram(name: "strcpy", scope: !1356, file: !1356, line: 38, type: !1379, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1387 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1388, file: !1362, line: 86)
!1388 = !DISubprogram(name: "strcspn", scope: !1356, file: !1356, line: 39, type: !1389, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1389 = !DISubroutineType(types: !1390)
!1390 = !{!1359, !266, !266}
!1391 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1392, file: !1362, line: 87)
!1392 = !DISubprogram(name: "strerror", scope: !1356, file: !1356, line: 40, type: !1393, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1393 = !DISubroutineType(types: !1394)
!1394 = !{!308, !59}
!1395 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1396, file: !1362, line: 88)
!1396 = !DISubprogram(name: "strlen", scope: !1356, file: !1356, line: 41, type: !1397, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1397 = !DISubroutineType(types: !1398)
!1398 = !{!1359, !266}
!1399 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1400, file: !1362, line: 89)
!1400 = !DISubprogram(name: "strncat", scope: !1356, file: !1356, line: 42, type: !1401, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1401 = !DISubroutineType(types: !1402)
!1402 = !{!308, !308, !266, !1359}
!1403 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1404, file: !1362, line: 90)
!1404 = !DISubprogram(name: "strncmp", scope: !1356, file: !1356, line: 43, type: !1405, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1405 = !DISubroutineType(types: !1406)
!1406 = !{!59, !266, !266, !1359}
!1407 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1408, file: !1362, line: 91)
!1408 = !DISubprogram(name: "strncpy", scope: !1356, file: !1356, line: 44, type: !1401, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1409 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1410, file: !1362, line: 92)
!1410 = !DISubprogram(name: "strspn", scope: !1356, file: !1356, line: 47, type: !1389, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1411 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1412, file: !1362, line: 93)
!1412 = !DISubprogram(name: "strtok", scope: !1356, file: !1356, line: 50, type: !1379, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1413 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1414, file: !1362, line: 94)
!1414 = !DISubprogram(name: "strxfrm", scope: !1356, file: !1356, line: 52, type: !1415, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1415 = !DISubroutineType(types: !1416)
!1416 = !{!1359, !308, !266, !1359}
!1417 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1418, file: !1362, line: 95)
!1418 = !DISubprogram(name: "strchr", scope: !1356, file: !1356, line: 35, type: !1419, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1419 = !DISubroutineType(types: !1420)
!1420 = !{!308, !266, !59}
!1421 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1422, file: !1362, line: 96)
!1422 = !DISubprogram(name: "strpbrk", scope: !1356, file: !1356, line: 45, type: !1423, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1423 = !DISubroutineType(types: !1424)
!1424 = !{!308, !266, !266}
!1425 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1426, file: !1362, line: 97)
!1426 = !DISubprogram(name: "strrchr", scope: !1356, file: !1356, line: 46, type: !1419, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1427 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1428, file: !1362, line: 98)
!1428 = !DISubprogram(name: "strstr", scope: !1356, file: !1356, line: 48, type: !1423, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1429 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !949, entity: !43, file: !950, line: 32)
!1430 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1431, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1432, retainedTypes: !1437, splitDebugInlining: false, nameTableKind: None)
!1431 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "bf5d5e021854d33cea3d58ed6b9d5087")
!1432 = !{!608, !523, !1433}
!1433 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !524, line: 157, baseType: !10, size: 32, elements: !1434)
!1434 = !{!1435, !1436}
!1435 = !DIEnumerator(name: "DISABLE", value: 0)
!1436 = !DIEnumerator(name: "ENABLE", value: 1)
!1437 = !{!1438, !24, !279, !45, !1452, !1453, !1459, !37, !1472, !1483}
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 32)
!1439 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !19, line: 438, baseType: !1440)
!1440 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 424, size: 320, elements: !1441)
!1441 = !{!1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1440, file: !19, line: 426, baseType: !23, size: 32)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1440, file: !19, line: 427, baseType: !23, size: 32, offset: 32)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1440, file: !19, line: 428, baseType: !23, size: 32, offset: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1440, file: !19, line: 429, baseType: !23, size: 32, offset: 96)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1440, file: !19, line: 430, baseType: !23, size: 32, offset: 128)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1440, file: !19, line: 431, baseType: !23, size: 32, offset: 160)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1440, file: !19, line: 432, baseType: !23, size: 32, offset: 192)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1440, file: !19, line: 433, baseType: !23, size: 32, offset: 224)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1440, file: !19, line: 434, baseType: !23, size: 32, offset: 256)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1440, file: !19, line: 435, baseType: !23, size: 32, offset: 288)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 32)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 32)
!1454 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !19, line: 418, baseType: !1455)
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 414, size: 64, elements: !1456)
!1456 = !{!1457, !1458}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1455, file: !19, line: 416, baseType: !23, size: 32)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1455, file: !19, line: 417, baseType: !23, size: 32, offset: 32)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 32)
!1460 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !19, line: 336, baseType: !1461)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 325, size: 288, elements: !1462)
!1462 = !{!1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !1461, file: !19, line: 327, baseType: !23, size: 32)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !1461, file: !19, line: 328, baseType: !23, size: 32, offset: 32)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !1461, file: !19, line: 329, baseType: !23, size: 32, offset: 64)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1461, file: !19, line: 330, baseType: !23, size: 32, offset: 96)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1461, file: !19, line: 331, baseType: !23, size: 32, offset: 128)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "AR", scope: !1461, file: !19, line: 332, baseType: !23, size: 32, offset: 160)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1461, file: !19, line: 333, baseType: !23, size: 32, offset: 192)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !1461, file: !19, line: 334, baseType: !23, size: 32, offset: 224)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR", scope: !1461, file: !19, line: 335, baseType: !23, size: 32, offset: 256)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 32)
!1473 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !19, line: 367, baseType: !1474)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 358, size: 224, elements: !1475)
!1475 = !{!1476, !1477, !1478, !1479, !1480, !1481, !1482}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "CRL", scope: !1474, file: !19, line: 360, baseType: !23, size: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "CRH", scope: !1474, file: !19, line: 361, baseType: !23, size: 32, offset: 32)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1474, file: !19, line: 362, baseType: !23, size: 32, offset: 64)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1474, file: !19, line: 363, baseType: !23, size: 32, offset: 96)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1474, file: !19, line: 364, baseType: !23, size: 32, offset: 128)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1474, file: !19, line: 365, baseType: !23, size: 32, offset: 160)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1474, file: !19, line: 366, baseType: !23, size: 32, offset: 192)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 32)
!1484 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1485, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1486, retainedTypes: !1487, splitDebugInlining: false, nameTableKind: None)
!1485 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "83cb8d6817603f64d73dca2a0b01efa1")
!1486 = !{!614}
!1487 = !{!1488, !24, !1496, !171, !45, !1521}
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 32)
!1489 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !545, line: 700, baseType: !1490)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !545, line: 694, size: 128, elements: !1491)
!1491 = !{!1492, !1493, !1494, !1495}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1490, file: !545, line: 696, baseType: !23, size: 32)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1490, file: !545, line: 697, baseType: !23, size: 32, offset: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1490, file: !545, line: 698, baseType: !23, size: 32, offset: 64)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1490, file: !545, line: 699, baseType: !549, size: 32, offset: 96)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 32)
!1497 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !545, line: 397, baseType: !1498)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !545, line: 374, size: 1120, elements: !1499)
!1499 = !{!1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1498, file: !545, line: 376, baseType: !549, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1498, file: !545, line: 377, baseType: !23, size: 32, offset: 32)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1498, file: !545, line: 378, baseType: !23, size: 32, offset: 64)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1498, file: !545, line: 379, baseType: !23, size: 32, offset: 96)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1498, file: !545, line: 380, baseType: !23, size: 32, offset: 128)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1498, file: !545, line: 381, baseType: !23, size: 32, offset: 160)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1498, file: !545, line: 382, baseType: !556, size: 96, offset: 192)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1498, file: !545, line: 383, baseType: !23, size: 32, offset: 288)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1498, file: !545, line: 384, baseType: !23, size: 32, offset: 320)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1498, file: !545, line: 385, baseType: !23, size: 32, offset: 352)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1498, file: !545, line: 386, baseType: !23, size: 32, offset: 384)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1498, file: !545, line: 387, baseType: !23, size: 32, offset: 416)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1498, file: !545, line: 388, baseType: !23, size: 32, offset: 448)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1498, file: !545, line: 389, baseType: !23, size: 32, offset: 480)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1498, file: !545, line: 390, baseType: !568, size: 64, offset: 512)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1498, file: !545, line: 391, baseType: !549, size: 32, offset: 576)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1498, file: !545, line: 392, baseType: !549, size: 32, offset: 608)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1498, file: !545, line: 393, baseType: !574, size: 128, offset: 640)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1498, file: !545, line: 394, baseType: !578, size: 160, offset: 768)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1498, file: !545, line: 395, baseType: !582, size: 160, offset: 928)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1498, file: !545, line: 396, baseType: !23, size: 32, offset: 1088)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 32)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !545, line: 355, baseType: !1523)
!1523 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !545, line: 340, size: 28704, elements: !1524)
!1524 = !{!1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1523, file: !545, line: 342, baseType: !768, size: 256)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1523, file: !545, line: 343, baseType: !770, size: 768, offset: 256)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1523, file: !545, line: 344, baseType: !768, size: 256, offset: 1024)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !1523, file: !545, line: 345, baseType: !770, size: 768, offset: 1280)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1523, file: !545, line: 346, baseType: !768, size: 256, offset: 2048)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1523, file: !545, line: 347, baseType: !770, size: 768, offset: 2304)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1523, file: !545, line: 348, baseType: !768, size: 256, offset: 3072)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1523, file: !545, line: 349, baseType: !770, size: 768, offset: 3328)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1523, file: !545, line: 350, baseType: !768, size: 256, offset: 4096)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1523, file: !545, line: 351, baseType: !781, size: 1792, offset: 4352)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1523, file: !545, line: 352, baseType: !785, size: 1920, offset: 6144)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1523, file: !545, line: 353, baseType: !789, size: 20608, offset: 8064)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1523, file: !545, line: 354, baseType: !23, size: 32, offset: 28672)
!1538 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1539, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1540, retainedTypes: !1546, splitDebugInlining: false, nameTableKind: None)
!1539 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "de98d9c05272efa2ca465428751dd1b5")
!1540 = !{!1541, !608}
!1541 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1542, line: 65, baseType: !10, size: 32, elements: !1543)
!1542 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "b5ff32b0624c591654a3e02ee400cffe")
!1543 = !{!1544, !1545}
!1544 = !DIEnumerator(name: "GPIO_PIN_RESET", value: 0)
!1545 = !DIEnumerator(name: "GPIO_PIN_SET", value: 1)
!1546 = !{!24, !37, !1547, !1561, !1570, !1581}
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 32)
!1548 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !19, line: 438, baseType: !1549)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 424, size: 320, elements: !1550)
!1550 = !{!1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1549, file: !19, line: 426, baseType: !23, size: 32)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1549, file: !19, line: 427, baseType: !23, size: 32, offset: 32)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1549, file: !19, line: 428, baseType: !23, size: 32, offset: 64)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1549, file: !19, line: 429, baseType: !23, size: 32, offset: 96)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1549, file: !19, line: 430, baseType: !23, size: 32, offset: 128)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1549, file: !19, line: 431, baseType: !23, size: 32, offset: 160)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1549, file: !19, line: 432, baseType: !23, size: 32, offset: 192)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1549, file: !19, line: 433, baseType: !23, size: 32, offset: 224)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1549, file: !19, line: 434, baseType: !23, size: 32, offset: 256)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1549, file: !19, line: 435, baseType: !23, size: 32, offset: 288)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 32)
!1562 = !DIDerivedType(tag: DW_TAG_typedef, name: "AFIO_TypeDef", file: !19, line: 380, baseType: !1563)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 373, size: 256, elements: !1564)
!1564 = !{!1565, !1566, !1567, !1568, !1569}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "EVCR", scope: !1563, file: !19, line: 375, baseType: !23, size: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "MAPR", scope: !1563, file: !19, line: 376, baseType: !23, size: 32, offset: 32)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1563, file: !19, line: 377, baseType: !746, size: 128, offset: 64)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1563, file: !19, line: 378, baseType: !24, size: 32, offset: 192)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "MAPR2", scope: !1563, file: !19, line: 379, baseType: !23, size: 32, offset: 224)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !19, line: 367, baseType: !1572)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 358, size: 224, elements: !1573)
!1573 = !{!1574, !1575, !1576, !1577, !1578, !1579, !1580}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "CRL", scope: !1572, file: !19, line: 360, baseType: !23, size: 32)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "CRH", scope: !1572, file: !19, line: 361, baseType: !23, size: 32, offset: 32)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1572, file: !19, line: 362, baseType: !23, size: 32, offset: 64)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1572, file: !19, line: 363, baseType: !23, size: 32, offset: 96)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1572, file: !19, line: 364, baseType: !23, size: 32, offset: 128)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1572, file: !19, line: 365, baseType: !23, size: 32, offset: 160)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1572, file: !19, line: 366, baseType: !23, size: 32, offset: 192)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 32)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !19, line: 319, baseType: !1583)
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 311, size: 192, elements: !1584)
!1584 = !{!1585, !1586, !1587, !1588, !1589, !1590}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1583, file: !19, line: 313, baseType: !23, size: 32)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !1583, file: !19, line: 314, baseType: !23, size: 32, offset: 32)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !1583, file: !19, line: 315, baseType: !23, size: 32, offset: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !1583, file: !19, line: 316, baseType: !23, size: 32, offset: 96)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !1583, file: !19, line: 317, baseType: !23, size: 32, offset: 128)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !1583, file: !19, line: 318, baseType: !23, size: 32, offset: 160)
!1591 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1592, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1593, retainedTypes: !1729, imports: !1730, splitDebugInlining: false, nameTableKind: None)
!1592 = !DIFile(filename: "../cicada/commdevices/ipcommdevice.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "c1f12208d19013c4901343b372e157b9")
!1593 = !{!1594, !1624}
!1594 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "ConnectState", scope: !1595, file: !956, line: 68, baseType: !10, size: 32, elements: !1721, identifier: "_ZTSN6Cicada12IPCommDevice12ConnectStateE")
!1595 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "IPCommDevice", scope: !43, file: !956, line: 42, size: 1152, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1596, vtableHolder: !920)
!1596 = !{!1597, !1628, !1629, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1691, !1694, !1697, !1700, !1703, !1704, !1705, !1706, !1711, !1712, !1715, !1718}
!1597 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1595, baseType: !1598, flags: DIFlagPublic, extraData: i32 0)
!1598 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "IIPCommDevice", scope: !43, file: !1599, line: 32, size: 32, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1600, vtableHolder: !920, identifier: "_ZTSN6Cicada13IIPCommDeviceE")
!1599 = !DIFile(filename: "../cicada/commdevices/iipcommdevice.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "5bf8a05cddb71511a58831ad901c2c26")
!1600 = !{!1601, !1617, !1621}
!1601 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1598, baseType: !1602, flags: DIFlagPublic, extraData: i32 0)
!1602 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "IStatefulDevice", scope: !43, file: !1603, line: 38, size: 32, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1604, vtableHolder: !920, identifier: "_ZTSN6Cicada15IStatefulDeviceE")
!1603 = !DIFile(filename: "../cicada/istatefuldevice.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "712993ae5fefe5852fb5c94951a13de4")
!1604 = !{!1605, !1606, !1610, !1613, !1614, !1615, !1616}
!1605 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1602, baseType: !920, flags: DIFlagPublic, extraData: i32 0)
!1606 = !DISubprogram(name: "~IStatefulDevice", scope: !1602, file: !1603, line: 41, type: !1607, scopeLine: 41, containingType: !1602, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1607 = !DISubroutineType(types: !1608)
!1608 = !{null, !1609}
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1610 = !DISubprogram(name: "connect", linkageName: "_ZN6Cicada15IStatefulDevice7connectEv", scope: !1602, file: !1603, line: 46, type: !1611, scopeLine: 46, containingType: !1602, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1611 = !DISubroutineType(types: !1612)
!1612 = !{!63, !1609}
!1613 = !DISubprogram(name: "disconnect", linkageName: "_ZN6Cicada15IStatefulDevice10disconnectEv", scope: !1602, file: !1603, line: 51, type: !1607, scopeLine: 51, containingType: !1602, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1614 = !DISubprogram(name: "isConnected", linkageName: "_ZN6Cicada15IStatefulDevice11isConnectedEv", scope: !1602, file: !1603, line: 58, type: !1611, scopeLine: 58, containingType: !1602, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1615 = !DISubprogram(name: "isIdle", linkageName: "_ZN6Cicada15IStatefulDevice6isIdleEv", scope: !1602, file: !1603, line: 65, type: !1611, scopeLine: 65, containingType: !1602, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1616 = !DISubprogram(name: "resetStates", linkageName: "_ZN6Cicada15IStatefulDevice11resetStatesEv", scope: !1602, file: !1603, line: 70, type: !1607, scopeLine: 70, containingType: !1602, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1617 = !DISubprogram(name: "~IIPCommDevice", scope: !1598, file: !1599, line: 35, type: !1618, scopeLine: 35, containingType: !1598, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1618 = !DISubroutineType(types: !1619)
!1619 = !{null, !1620}
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1621 = !DISubprogram(name: "setHostPort", linkageName: "_ZN6Cicada13IIPCommDevice11setHostPortEPKctNS0_14ConnectionTypeE", scope: !1598, file: !1599, line: 47, type: !1622, scopeLine: 47, containingType: !1598, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1622 = !DISubroutineType(types: !1623)
!1623 = !{null, !1620, !266, !37, !1624}
!1624 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "ConnectionType", scope: !1598, file: !1599, line: 37, baseType: !10, size: 32, elements: !1625, identifier: "_ZTSN6Cicada13IIPCommDevice14ConnectionTypeE")
!1625 = !{!1626, !1627}
!1626 = !DIEnumerator(name: "UDP", value: 0, isUnsigned: true)
!1627 = !DIEnumerator(name: "TCP", value: 1, isUnsigned: true)
!1628 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1595, baseType: !51, offset: 32, flags: DIFlagPublic, extraData: i32 0)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "_readBuffer", scope: !1595, file: !956, line: 78, baseType: !1630, size: 384, offset: 192, flags: DIFlagProtected)
!1630 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "CircularBuffer<unsigned char>", scope: !43, file: !1631, line: 39, size: 384, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1632, vtableHolder: !1630, templateParams: !1678, identifier: "_ZTSN6Cicada14CircularBufferIhEE")
!1631 = !DIFile(filename: "../cicada/circularbuffer.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "eefa34d28a75acab61b1e5f45f9ba1dd")
!1632 = !{!1633, !1634, !1635, !1636, !1637, !1639, !1640, !1644, !1647, !1652, !1655, !1658, !1661, !1662, !1663, !1668, !1669, !1672, !1673, !1674}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$CircularBuffer", scope: !1631, file: !1631, baseType: !55, size: 32, flags: DIFlagArtificial)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "_writeHead", scope: !1630, file: !1631, line: 196, baseType: !872, size: 64, offset: 64)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "_readHead", scope: !1630, file: !1631, line: 197, baseType: !872, size: 64, offset: 128)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "_availableData", scope: !1630, file: !1631, line: 198, baseType: !872, size: 64, offset: 192)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "_bufferSize", scope: !1630, file: !1631, line: 199, baseType: !1638, size: 64, offset: 256)
!1638 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !872)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "_buffer", scope: !1630, file: !1631, line: 200, baseType: !1122, size: 32, offset: 320)
!1640 = !DISubprogram(name: "CircularBuffer", scope: !1630, file: !1631, line: 48, type: !1641, scopeLine: 48, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1641 = !DISubroutineType(types: !1642)
!1642 = !{null, !1643, !1122, !872}
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1644 = !DISubprogram(name: "~CircularBuffer", scope: !1630, file: !1631, line: 56, type: !1645, scopeLine: 56, containingType: !1630, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1645 = !DISubroutineType(types: !1646)
!1646 = !{null, !1643}
!1647 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIhE4pushEPKhy", scope: !1630, file: !1631, line: 65, type: !1648, scopeLine: 65, containingType: !1630, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1648 = !DISubroutineType(types: !1649)
!1649 = !{!872, !1643, !1650, !872}
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 32)
!1651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !47)
!1652 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIhE4pushEh", scope: !1630, file: !1631, line: 88, type: !1653, scopeLine: 88, containingType: !1630, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1653 = !DISubroutineType(types: !1654)
!1654 = !{null, !1643, !47}
!1655 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIhE4pullEPhy", scope: !1630, file: !1631, line: 102, type: !1656, scopeLine: 102, containingType: !1630, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1656 = !DISubroutineType(types: !1657)
!1657 = !{!872, !1643, !1122, !872}
!1658 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIhE4pullEv", scope: !1630, file: !1631, line: 124, type: !1659, scopeLine: 124, containingType: !1630, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1659 = !DISubroutineType(types: !1660)
!1660 = !{!47, !1643}
!1661 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada14CircularBufferIhE4readEv", scope: !1630, file: !1631, line: 140, type: !1659, scopeLine: 140, containingType: !1630, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1662 = !DISubprogram(name: "flush", linkageName: "_ZN6Cicada14CircularBufferIhE5flushEv", scope: !1630, file: !1631, line: 148, type: !1645, scopeLine: 148, containingType: !1630, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1663 = !DISubprogram(name: "isEmpty", linkageName: "_ZNK6Cicada14CircularBufferIhE7isEmptyEv", scope: !1630, file: !1631, line: 158, type: !1664, scopeLine: 158, containingType: !1630, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1664 = !DISubroutineType(types: !1665)
!1665 = !{!63, !1666}
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1630)
!1668 = !DISubprogram(name: "isFull", linkageName: "_ZNK6Cicada14CircularBufferIhE6isFullEv", scope: !1630, file: !1631, line: 166, type: !1664, scopeLine: 166, containingType: !1630, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1669 = !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv", scope: !1630, file: !1631, line: 174, type: !1670, scopeLine: 174, containingType: !1630, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1670 = !DISubroutineType(types: !1671)
!1671 = !{!872, !1666}
!1672 = !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv", scope: !1630, file: !1631, line: 182, type: !1670, scopeLine: 182, containingType: !1630, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1673 = !DISubprogram(name: "size", linkageName: "_ZNK6Cicada14CircularBufferIhE4sizeEv", scope: !1630, file: !1631, line: 190, type: !1670, scopeLine: 190, containingType: !1630, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1674 = !DISubprogram(name: "incrementOrResetHead", linkageName: "_ZN6Cicada14CircularBufferIhE20incrementOrResetHeadERy", scope: !1630, file: !1631, line: 202, type: !1675, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1675 = !DISubroutineType(types: !1676)
!1676 = !{null, !1643, !1677}
!1677 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !872, size: 32)
!1678 = !{!1679}
!1679 = !DITemplateTypeParameter(name: "T", type: !47)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "_writeBuffer", scope: !1595, file: !956, line: 79, baseType: !1630, size: 384, offset: 576, flags: DIFlagProtected)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "_type", scope: !1595, file: !956, line: 80, baseType: !1624, size: 32, offset: 960, flags: DIFlagProtected)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "_host", scope: !1595, file: !956, line: 81, baseType: !266, size: 32, offset: 992, flags: DIFlagProtected)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "_port", scope: !1595, file: !956, line: 82, baseType: !37, size: 16, offset: 1024, flags: DIFlagProtected)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "_stateBooleans", scope: !1595, file: !956, line: 83, baseType: !45, size: 8, offset: 1040, flags: DIFlagProtected)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "_connectState", scope: !1595, file: !956, line: 84, baseType: !1594, size: 32, offset: 1056, flags: DIFlagProtected)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "_waitForReply", scope: !1595, file: !956, line: 85, baseType: !266, size: 32, offset: 1088, flags: DIFlagProtected)
!1687 = !DISubprogram(name: "IPCommDevice", scope: !1595, file: !956, line: 51, type: !1688, scopeLine: 51, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1688 = !DISubroutineType(types: !1689)
!1689 = !{null, !1690, !44, !44, !872}
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1691 = !DISubprogram(name: "IPCommDevice", scope: !1595, file: !956, line: 52, type: !1692, scopeLine: 52, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{null, !1690, !44, !44, !872, !872}
!1694 = !DISubprogram(name: "~IPCommDevice", scope: !1595, file: !956, line: 54, type: !1695, scopeLine: 54, containingType: !1595, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1695 = !DISubroutineType(types: !1696)
!1696 = !{null, !1690}
!1697 = !DISubprogram(name: "setHostPort", linkageName: "_ZN6Cicada12IPCommDevice11setHostPortEPKctNS_13IIPCommDevice14ConnectionTypeE", scope: !1595, file: !956, line: 56, type: !1698, scopeLine: 56, containingType: !1595, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1698 = !DISubroutineType(types: !1699)
!1699 = !{null, !1690, !266, !37, !1624}
!1700 = !DISubprogram(name: "connect", linkageName: "_ZN6Cicada12IPCommDevice7connectEv", scope: !1595, file: !956, line: 57, type: !1701, scopeLine: 57, containingType: !1595, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1701 = !DISubroutineType(types: !1702)
!1702 = !{!63, !1690}
!1703 = !DISubprogram(name: "disconnect", linkageName: "_ZN6Cicada12IPCommDevice10disconnectEv", scope: !1595, file: !956, line: 58, type: !1695, scopeLine: 58, containingType: !1595, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1704 = !DISubprogram(name: "isConnected", linkageName: "_ZN6Cicada12IPCommDevice11isConnectedEv", scope: !1595, file: !956, line: 59, type: !1701, scopeLine: 59, containingType: !1595, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1705 = !DISubprogram(name: "isIdle", linkageName: "_ZN6Cicada12IPCommDevice6isIdleEv", scope: !1595, file: !956, line: 60, type: !1701, scopeLine: 60, containingType: !1595, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1706 = !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada12IPCommDevice14bytesAvailableEv", scope: !1595, file: !956, line: 61, type: !1707, scopeLine: 61, containingType: !1595, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1707 = !DISubroutineType(types: !1708)
!1708 = !{!872, !1709}
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1595)
!1711 = !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada12IPCommDevice14spaceAvailableEv", scope: !1595, file: !956, line: 62, type: !1707, scopeLine: 62, containingType: !1595, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1712 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada12IPCommDevice4readEPhy", scope: !1595, file: !956, line: 63, type: !1713, scopeLine: 63, containingType: !1595, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1713 = !DISubroutineType(types: !1714)
!1714 = !{!872, !1690, !44, !872}
!1715 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada12IPCommDevice5writeEPKhy", scope: !1595, file: !956, line: 64, type: !1716, scopeLine: 64, containingType: !1595, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1716 = !DISubroutineType(types: !1717)
!1717 = !{!872, !1690, !943, !872}
!1718 = !DISubprogram(name: "writeBufferProcessed", linkageName: "_ZNK6Cicada12IPCommDevice20writeBufferProcessedEv", scope: !1595, file: !956, line: 65, type: !1719, scopeLine: 65, containingType: !1595, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1719 = !DISubroutineType(types: !1720)
!1720 = !{!63, !1709}
!1721 = !{!1722, !1723, !1724, !1725, !1726, !1727, !1728}
!1722 = !DIEnumerator(name: "notConnected", value: 0, isUnsigned: true)
!1723 = !DIEnumerator(name: "intermediate", value: 1, isUnsigned: true)
!1724 = !DIEnumerator(name: "connected", value: 2, isUnsigned: true)
!1725 = !DIEnumerator(name: "transmitting", value: 3, isUnsigned: true)
!1726 = !DIEnumerator(name: "receiving", value: 4, isUnsigned: true)
!1727 = !DIEnumerator(name: "generalError", value: 5, isUnsigned: true)
!1728 = !DIEnumerator(name: "dnsError", value: 6, isUnsigned: true)
!1729 = !{!1595, !1598, !1602, !920, !51, !1630}
!1730 = !{!160, !166, !170, !173, !177, !180, !182, !184, !186, !189, !192, !195, !198, !201, !204, !205, !206, !207, !211, !213, !215, !217, !219, !222, !225, !228, !231, !234, !1109, !1731}
!1731 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1591, entity: !43, file: !1592, line: 27)
!1732 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1733, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1734, retainedTypes: !1795, imports: !1796, splitDebugInlining: false, nameTableKind: None)
!1733 = !DIFile(filename: "../cicada/commdevices/simcommdevice.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "604b608b821a2670d76d7b839c3273cc")
!1734 = !{!1594, !1735}
!1735 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "RequestIDType", scope: !1736, file: !42, line: 88, baseType: !10, size: 32, elements: !1788, identifier: "_ZTSN6Cicada13SimCommDevice13RequestIDTypeE")
!1736 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "SimCommDevice", scope: !43, file: !42, line: 33, size: 2240, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1737, vtableHolder: !920)
!1737 = !{!1738, !1739, !1740, !1742, !1744, !1745, !1746, !1750, !1753, !1756, !1757, !1760, !1763, !1764, !1765, !1766, !1769, !1772, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785}
!1738 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1736, baseType: !107, flags: DIFlagPublic, extraData: i32 0)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "_apn", scope: !1736, file: !42, line: 120, baseType: !266, size: 32, offset: 1856, flags: DIFlagProtected)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "_ip", scope: !1736, file: !42, line: 122, baseType: !1741, size: 128, offset: 1888, flags: DIFlagProtected)
!1741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 128, elements: !594)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "_idStringBuffer", scope: !1736, file: !42, line: 124, baseType: !1743, size: 192, offset: 2016, flags: DIFlagProtected)
!1743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 192, elements: !771)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "_rssi", scope: !1736, file: !42, line: 126, baseType: !45, size: 8, offset: 2208, flags: DIFlagProtected)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "_modemMaxReceiveSize", scope: !1736, file: !42, line: 128, baseType: !37, size: 16, offset: 2224, flags: DIFlagProtected)
!1746 = !DISubprogram(name: "SimCommDevice", scope: !1736, file: !42, line: 36, type: !1747, scopeLine: 36, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1747 = !DISubroutineType(types: !1748)
!1748 = !{null, !1749, !958, !44, !44, !872}
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1750 = !DISubprogram(name: "SimCommDevice", scope: !1736, file: !42, line: 38, type: !1751, scopeLine: 38, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1751 = !DISubroutineType(types: !1752)
!1752 = !{null, !1749, !958, !44, !44, !872, !872}
!1753 = !DISubprogram(name: "~SimCommDevice", scope: !1736, file: !42, line: 40, type: !1754, scopeLine: 40, containingType: !1736, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1754 = !DISubroutineType(types: !1755)
!1755 = !{null, !1749}
!1756 = !DISubprogram(name: "resetStates", linkageName: "_ZN6Cicada13SimCommDevice11resetStatesEv", scope: !1736, file: !42, line: 48, type: !1754, scopeLine: 48, containingType: !1736, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1757 = !DISubprogram(name: "setApn", linkageName: "_ZN6Cicada13SimCommDevice6setApnEPKc", scope: !1736, file: !42, line: 54, type: !1758, scopeLine: 54, containingType: !1736, virtualIndex: 15, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1758 = !DISubroutineType(types: !1759)
!1759 = !{null, !1749, !266}
!1760 = !DISubprogram(name: "connect", linkageName: "_ZN6Cicada13SimCommDevice7connectEv", scope: !1736, file: !42, line: 56, type: !1761, scopeLine: 56, containingType: !1736, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1761 = !DISubroutineType(types: !1762)
!1762 = !{!63, !1749}
!1763 = !DISubprogram(name: "serialLock", linkageName: "_ZN6Cicada13SimCommDevice10serialLockEv", scope: !1736, file: !42, line: 64, type: !1761, scopeLine: 64, containingType: !1736, virtualIndex: 16, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1764 = !DISubprogram(name: "serialUnlock", linkageName: "_ZN6Cicada13SimCommDevice12serialUnlockEv", scope: !1736, file: !42, line: 69, type: !1754, scopeLine: 69, containingType: !1736, virtualIndex: 17, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1765 = !DISubprogram(name: "requestRSSI", linkageName: "_ZN6Cicada13SimCommDevice11requestRSSIEv", scope: !1736, file: !42, line: 75, type: !1754, scopeLine: 75, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1766 = !DISubprogram(name: "getRSSI", linkageName: "_ZN6Cicada13SimCommDevice7getRSSIEv", scope: !1736, file: !42, line: 86, type: !1767, scopeLine: 86, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1767 = !DISubroutineType(types: !1768)
!1768 = !{!45, !1749}
!1769 = !DISubprogram(name: "requestIDString", linkageName: "_ZN6Cicada13SimCommDevice15requestIDStringENS0_13RequestIDTypeE", scope: !1736, file: !42, line: 95, type: !1770, scopeLine: 95, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1770 = !DISubroutineType(types: !1771)
!1771 = !{null, !1749, !1735}
!1772 = !DISubprogram(name: "getIDString", linkageName: "_ZN6Cicada13SimCommDevice11getIDStringEv", scope: !1736, file: !42, line: 105, type: !1773, scopeLine: 105, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1773 = !DISubroutineType(types: !1774)
!1774 = !{!308, !1749}
!1775 = !DISubprogram(name: "fillLineBuffer", linkageName: "_ZN6Cicada13SimCommDevice14fillLineBufferEv", scope: !1736, file: !42, line: 108, type: !1761, scopeLine: 108, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1776 = !DISubprogram(name: "parseDnsReply", linkageName: "_ZN6Cicada13SimCommDevice13parseDnsReplyEv", scope: !1736, file: !42, line: 109, type: !1761, scopeLine: 109, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1777 = !DISubprogram(name: "parseCiprxget4", linkageName: "_ZN6Cicada13SimCommDevice14parseCiprxget4Ev", scope: !1736, file: !42, line: 110, type: !1761, scopeLine: 110, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1778 = !DISubprogram(name: "parseCiprxget2", linkageName: "_ZN6Cicada13SimCommDevice14parseCiprxget2Ev", scope: !1736, file: !42, line: 111, type: !1761, scopeLine: 111, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1779 = !DISubprogram(name: "parseCsq", linkageName: "_ZN6Cicada13SimCommDevice8parseCsqEv", scope: !1736, file: !42, line: 112, type: !1761, scopeLine: 112, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1780 = !DISubprogram(name: "parseIDReply", linkageName: "_ZN6Cicada13SimCommDevice12parseIDReplyEv", scope: !1736, file: !42, line: 113, type: !1761, scopeLine: 113, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1781 = !DISubprogram(name: "checkConnectionState", linkageName: "_ZN6Cicada13SimCommDevice20checkConnectionStateEPKc", scope: !1736, file: !42, line: 114, type: !1758, scopeLine: 114, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1782 = !DISubprogram(name: "sendDnsQuery", linkageName: "_ZN6Cicada13SimCommDevice12sendDnsQueryEv", scope: !1736, file: !42, line: 115, type: !1761, scopeLine: 115, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1783 = !DISubprogram(name: "sendCipstart", linkageName: "_ZN6Cicada13SimCommDevice12sendCipstartEPKc", scope: !1736, file: !42, line: 116, type: !1758, scopeLine: 116, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1784 = !DISubprogram(name: "sendCiprxget2", linkageName: "_ZN6Cicada13SimCommDevice13sendCiprxget2Ev", scope: !1736, file: !42, line: 117, type: !1761, scopeLine: 117, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1785 = !DISubprogram(name: "sendIDRequest", linkageName: "_ZN6Cicada13SimCommDevice13sendIDRequestEPKc", scope: !1736, file: !42, line: 118, type: !1786, scopeLine: 118, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1786 = !DISubroutineType(types: !1787)
!1787 = !{!63, !1749, !266}
!1788 = !{!1789, !1790, !1791, !1792, !1793, !1794}
!1789 = !DIEnumerator(name: "noRequest", value: 0, isUnsigned: true)
!1790 = !DIEnumerator(name: "manufacturer", value: 1, isUnsigned: true)
!1791 = !DIEnumerator(name: "model", value: 2, isUnsigned: true)
!1792 = !DIEnumerator(name: "imei", value: 3, isUnsigned: true)
!1793 = !DIEnumerator(name: "imsi", value: 4, isUnsigned: true)
!1794 = !DIEnumerator(name: "iccid", value: 5, isUnsigned: true)
!1795 = !{!943, !10, !1735, !1736}
!1796 = !{!160, !166, !170, !173, !177, !180, !182, !184, !186, !189, !192, !195, !198, !201, !204, !205, !206, !207, !211, !213, !215, !217, !219, !222, !225, !228, !231, !234, !1075, !1080, !1084, !1088, !1094, !1098, !1105, !1109, !1114, !1190, !1192, !1197, !1201, !1203, !1205, !1207, !1209, !1214, !1218, !1222, !1226, !1230, !1234, !1238, !1242, !1244, !1248, !1254, !1258, !1262, !1264, !1266, !1270, !1274, !1276, !1278, !1280, !1282, !1286, !1288, !1290, !1294, !1298, !1302, !1306, !1310, !1314, !1797, !1804, !1808, !1333, !1812, !1814, !1816, !1820, !1349, !1824, !1825, !1826, !1827, !1354, !1363, !1367, !1371, !1373, !1377, !1381, !1383, !1385, !1387, !1391, !1395, !1399, !1403, !1407, !1409, !1411, !1413, !1417, !1421, !1425, !1427, !1828}
!1797 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1798, file: !1189, line: 144)
!1798 = !DISubprogram(name: "vfprintf", scope: !1116, file: !1116, line: 206, type: !1799, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{!59, !1196, !266, !1801}
!1801 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1321, line: 32, baseType: !1802)
!1802 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1803, baseType: !1324)
!1803 = !DIFile(filename: "../cicada/commdevices/simcommdevice.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build")
!1804 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1805, file: !1189, line: 145)
!1805 = !DISubprogram(name: "vprintf", scope: !1116, file: !1116, line: 208, type: !1806, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1806 = !DISubroutineType(types: !1807)
!1807 = !{!59, !266, !1801}
!1808 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1809, file: !1189, line: 146)
!1809 = !DISubprogram(name: "vsprintf", scope: !1116, file: !1116, line: 210, type: !1810, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1810 = !DISubroutineType(types: !1811)
!1811 = !{!59, !308, !266, !1801}
!1812 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !1813, file: !1189, line: 176)
!1813 = !DISubprogram(name: "vfscanf", scope: !1116, file: !1116, line: 270, type: !1799, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1814 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !1815, file: !1189, line: 177)
!1815 = !DISubprogram(name: "vscanf", scope: !1116, file: !1116, line: 272, type: !1806, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1816 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !1817, file: !1189, line: 178)
!1817 = !DISubprogram(name: "vsnprintf", scope: !1116, file: !1116, line: 268, type: !1818, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{!59, !308, !282, !266, !1801}
!1820 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !1821, file: !1189, line: 179)
!1821 = !DISubprogram(name: "vsscanf", scope: !1116, file: !1116, line: 274, type: !1822, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1822 = !DISubroutineType(types: !1823)
!1823 = !{!59, !266, !266, !1801}
!1824 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1813, file: !1189, line: 186)
!1825 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1815, file: !1189, line: 187)
!1826 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1817, file: !1189, line: 188)
!1827 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1821, file: !1189, line: 189)
!1828 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1732, entity: !43, file: !1733, line: 30)
!1829 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1830, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1831, retainedTypes: !1885, imports: !1886, splitDebugInlining: false, nameTableKind: None)
!1830 = !DIFile(filename: "../cicada/commdevices/modemdetect.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "0e3339b9e46a97a5370ea7ba2ecf9689")
!1831 = !{!1832}
!1832 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "DetectState", scope: !1833, file: !104, line: 87, baseType: !10, size: 32, elements: !1874, identifier: "_ZTSN6Cicada11ModemDetect11DetectStateE")
!1833 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "ModemDetect", scope: !43, file: !104, line: 39, size: 2624, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1834, vtableHolder: !51)
!1834 = !{!1835, !1836, !1853, !1854, !1855, !1856, !1857, !1861, !1864, !1867, !1870, !1873}
!1835 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1833, baseType: !51, flags: DIFlagPublic, extraData: i32 0)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "_md", scope: !1833, file: !104, line: 83, baseType: !1837, size: 2304, offset: 192)
!1837 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ModemDriver", scope: !1833, file: !104, line: 77, size: 2304, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1838, identifier: "_ZTSN6Cicada11ModemDetect11ModemDriverE")
!1838 = !{!1839, !1842, !1845, !1848, !1852}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "sim800", scope: !1837, file: !104, line: 80, baseType: !1840, size: 2304)
!1840 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Sim800CommDevice", scope: !43, file: !1841, line: 37, size: 2304, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada16Sim800CommDeviceE")
!1841 = !DIFile(filename: "../cicada/commdevices/sim800.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "f0c67714baea407d5f31eaa148fd744f")
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "sim7x00", scope: !1837, file: !104, line: 81, baseType: !1843, size: 2304)
!1843 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Sim7x00CommDevice", scope: !43, file: !1844, line: 37, size: 2304, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada17Sim7x00CommDeviceE")
!1844 = !DIFile(filename: "../cicada/commdevices/sim7x00.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "30d5ae4b8933cfe435d43c0ed0910d29")
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "espressif", scope: !1837, file: !104, line: 82, baseType: !1846, size: 2112)
!1846 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "EspressifDevice", scope: !43, file: !1847, line: 39, size: 2112, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada15EspressifDeviceE")
!1847 = !DIFile(filename: "../cicada/commdevices/espressif.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "39baf4b7a972455ea12fcffe3f2fe32e")
!1848 = !DISubprogram(name: "ModemDriver", scope: !1837, file: !104, line: 78, type: !1849, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1849 = !DISubroutineType(types: !1850)
!1850 = !{null, !1851}
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1852 = !DISubprogram(name: "~ModemDriver", scope: !1837, file: !104, line: 79, type: !1849, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "_serial", scope: !1833, file: !104, line: 85, baseType: !958, size: 32, offset: 2496)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "_detectState", scope: !1833, file: !104, line: 98, baseType: !1832, size: 32, offset: 2528)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "_startDetection", scope: !1833, file: !104, line: 100, baseType: !63, size: 8, offset: 2560)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "_detectedModem", scope: !1833, file: !104, line: 101, baseType: !106, size: 32, offset: 2592)
!1857 = !DISubprogram(name: "ModemDetect", scope: !1833, file: !104, line: 42, type: !1858, scopeLine: 42, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1858 = !DISubroutineType(types: !1859)
!1859 = !{null, !1860, !958}
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1861 = !DISubprogram(name: "startDetection", linkageName: "_ZN6Cicada11ModemDetect14startDetectionEv", scope: !1833, file: !104, line: 47, type: !1862, scopeLine: 47, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1862 = !DISubroutineType(types: !1863)
!1863 = !{null, !1860}
!1864 = !DISubprogram(name: "modemDetected", linkageName: "_ZN6Cicada11ModemDetect13modemDetectedEv", scope: !1833, file: !104, line: 53, type: !1865, scopeLine: 53, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1865 = !DISubroutineType(types: !1866)
!1866 = !{!63, !1860}
!1867 = !DISubprogram(name: "getDetectedModem", linkageName: "_ZN6Cicada11ModemDetect16getDetectedModemEPhS1_yy", scope: !1833, file: !104, line: 63, type: !1868, scopeLine: 63, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1868 = !DISubroutineType(types: !1869)
!1869 = !{!106, !1860, !44, !44, !872, !872}
!1870 = !DISubprogram(name: "getDetectedModem", linkageName: "_ZN6Cicada11ModemDetect16getDetectedModemEv", scope: !1833, file: !104, line: 69, type: !1871, scopeLine: 69, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1871 = !DISubroutineType(types: !1872)
!1872 = !{!106, !1860}
!1873 = !DISubprogram(name: "run", linkageName: "_ZN6Cicada11ModemDetect3runEv", scope: !1833, file: !104, line: 74, type: !1862, scopeLine: 74, containingType: !1833, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1874 = !{!1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884}
!1875 = !DIEnumerator(name: "noState", value: 0, isUnsigned: true)
!1876 = !DIEnumerator(name: "beginState", value: 1, isUnsigned: true)
!1877 = !DIEnumerator(name: "errorState", value: 2, isUnsigned: true)
!1878 = !DIEnumerator(name: "cgmmSent", value: 3, isUnsigned: true)
!1879 = !DIEnumerator(name: "gmrSent", value: 4, isUnsigned: true)
!1880 = !DIEnumerator(name: "espressifWaitOk", value: 5, isUnsigned: true)
!1881 = !DIEnumerator(name: "modemDetectedState", value: 6, isUnsigned: true)
!1882 = !DIEnumerator(name: "detectedSim800", value: 7, isUnsigned: true)
!1883 = !DIEnumerator(name: "detectedSim7x00", value: 8, isUnsigned: true)
!1884 = !DIEnumerator(name: "detectedEspressif", value: 9, isUnsigned: true)
!1885 = !{!943, !44, !1833, !51, !1837}
!1886 = !{!160, !166, !170, !173, !177, !180, !182, !184, !186, !189, !192, !195, !198, !201, !204, !205, !206, !207, !211, !213, !215, !217, !219, !222, !225, !228, !231, !234, !1354, !1363, !1367, !1371, !1373, !1377, !1381, !1383, !1385, !1387, !1391, !1395, !1399, !1403, !1407, !1409, !1411, !1413, !1417, !1421, !1425, !1427, !1887, !1891, !1895}
!1887 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1888, file: !1889, line: 58)
!1888 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "exception_ptr", scope: !1890, file: !1889, line: 80, size: 32, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSNSt15__exception_ptr13exception_ptrE")
!1889 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "9bda7d21a11cfdb902745e8f6fa7810a")
!1890 = !DINamespace(name: "__exception_ptr", scope: !161)
!1891 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1890, entity: !1892, file: !1889, line: 74)
!1892 = !DISubprogram(name: "rethrow_exception", linkageName: "_ZSt17rethrow_exceptionNSt15__exception_ptr13exception_ptrE", scope: !161, file: !1889, line: 70, type: !1893, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized)
!1893 = !DISubroutineType(types: !1894)
!1894 = !{null, !1888}
!1895 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1829, entity: !43, file: !1830, line: 28)
!1896 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1897, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1898, imports: !1918, splitDebugInlining: false, nameTableKind: None)
!1897 = !DIFile(filename: "../cicada/scheduler.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e3803bdb34845899b60a060630b7fca8")
!1898 = !{!1899}
!1899 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Scheduler", scope: !43, file: !1900, line: 53, size: 96, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !1901, identifier: "_ZTSN6Cicada9SchedulerE")
!1900 = !DIFile(filename: "../cicada/scheduler.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "040734eea83ce445208abbcb76b1b1f5")
!1901 = !{!1902, !1906, !1909, !1910, !1914, !1917}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "_tickFunction", scope: !1899, file: !1900, line: 77, baseType: !1903, size: 32)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 32)
!1904 = !DISubroutineType(types: !1905)
!1905 = !{!24}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "_taskList", scope: !1899, file: !1900, line: 78, baseType: !1907, size: 32, offset: 32)
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 32)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !51, size: 32)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "_currentTask", scope: !1899, file: !1900, line: 79, baseType: !1907, size: 32, offset: 64)
!1910 = !DISubprogram(name: "Scheduler", scope: !1899, file: !1900, line: 62, type: !1911, scopeLine: 62, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1911 = !DISubroutineType(types: !1912)
!1912 = !{null, !1913, !1903, !1907}
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1914 = !DISubprogram(name: "runTask", linkageName: "_ZN6Cicada9Scheduler7runTaskEv", scope: !1899, file: !1900, line: 68, type: !1915, scopeLine: 68, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1915 = !DISubroutineType(types: !1916)
!1916 = !{null, !1913}
!1917 = !DISubprogram(name: "start", linkageName: "_ZN6Cicada9Scheduler5startEv", scope: !1899, file: !1900, line: 74, type: !1915, scopeLine: 74, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1918 = !{!1109, !1919}
!1919 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1896, entity: !43, file: !1897, line: 27)
!1920 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1921, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, imports: !1922, splitDebugInlining: false, nameTableKind: None)
!1921 = !DIFile(filename: "../cicada/platform/stm32f1/tick_stm32.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "2e21bec54557ce151e165eda219ada53")
!1922 = !{!160, !166, !170, !173, !177, !180, !182, !184, !186, !189, !192, !195, !198, !201, !204, !205, !206, !207, !211, !213, !215, !217, !219, !222, !225, !228, !231, !234}
!1923 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1924, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1925, retainedTypes: !1973, globals: !1974, imports: !1977, splitDebugInlining: false, nameTableKind: None)
!1924 = !DIFile(filename: "../cicada/commdevices/sim7x00.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e3a1f48206d5866dbd909de4a725c52c")
!1925 = !{!1926, !1962, !1594, !1624}
!1926 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "SendState", scope: !1927, file: !1844, line: 124, baseType: !10, size: 32, elements: !1941, identifier: "_ZTSN6Cicada17Sim7x00CommDevice9SendStateE")
!1927 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Sim7x00CommDevice", scope: !43, file: !1844, line: 37, size: 2304, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1928, vtableHolder: !920)
!1928 = !{!1929, !1930, !1931, !1935, !1938}
!1929 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1927, baseType: !41, flags: DIFlagPublic, extraData: i32 0)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "iccidCommand", scope: !1927, file: !1844, line: 148, baseType: !266, size: 32, offset: 2240)
!1931 = !DISubprogram(name: "Sim7x00CommDevice", scope: !1927, file: !1844, line: 43, type: !1932, scopeLine: 43, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1932 = !DISubroutineType(types: !1933)
!1933 = !{null, !1934, !958, !44, !44, !872}
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1935 = !DISubprogram(name: "Sim7x00CommDevice", scope: !1927, file: !1844, line: 46, type: !1936, scopeLine: 46, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1936 = !DISubroutineType(types: !1937)
!1937 = !{null, !1934, !958, !44, !44, !872, !872}
!1938 = !DISubprogram(name: "run", linkageName: "_ZN6Cicada17Sim7x00CommDevice3runEv", scope: !1927, file: !1844, line: 109, type: !1939, scopeLine: 109, containingType: !1927, virtualIndex: 18, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1939 = !DISubroutineType(types: !1940)
!1940 = !{null, !1934}
!1941 = !{!1722, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961}
!1942 = !DIEnumerator(name: "serialError", value: 1, isUnsigned: true)
!1943 = !DIEnumerator(name: "dnsError", value: 2, isUnsigned: true)
!1944 = !DIEnumerator(name: "connecting", value: 3, isUnsigned: true)
!1945 = !DIEnumerator(name: "sendCgsockcont", value: 4, isUnsigned: true)
!1946 = !DIEnumerator(name: "sendCsocksetpn", value: 5, isUnsigned: true)
!1947 = !DIEnumerator(name: "sendCipmode", value: 6, isUnsigned: true)
!1948 = !DIEnumerator(name: "sendNetopen", value: 7, isUnsigned: true)
!1949 = !DIEnumerator(name: "sendCiprxget", value: 8, isUnsigned: true)
!1950 = !DIEnumerator(name: "sendDnsQuery", value: 9, isUnsigned: true)
!1951 = !DIEnumerator(name: "sendCipopen", value: 10, isUnsigned: true)
!1952 = !DIEnumerator(name: "finalizeConnect", value: 11, isUnsigned: true)
!1953 = !DIEnumerator(name: "connected", value: 12, isUnsigned: true)
!1954 = !DIEnumerator(name: "sendData", value: 13, isUnsigned: true)
!1955 = !DIEnumerator(name: "sendCiprxget4", value: 14, isUnsigned: true)
!1956 = !DIEnumerator(name: "sendCiprxget2", value: 15, isUnsigned: true)
!1957 = !DIEnumerator(name: "waitReceive", value: 16, isUnsigned: true)
!1958 = !DIEnumerator(name: "receiving", value: 17, isUnsigned: true)
!1959 = !DIEnumerator(name: "ipUnconnected", value: 18, isUnsigned: true)
!1960 = !DIEnumerator(name: "sendNetclose", value: 19, isUnsigned: true)
!1961 = !DIEnumerator(name: "finalizeDisconnect", value: 20, isUnsigned: true)
!1962 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReplyState", scope: !1927, file: !1844, line: 112, baseType: !10, size: 32, elements: !1963, identifier: "_ZTSN6Cicada17Sim7x00CommDevice10ReplyStateE")
!1963 = !{!1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972}
!1964 = !DIEnumerator(name: "okReply", value: 0, isUnsigned: true)
!1965 = !DIEnumerator(name: "csq", value: 1, isUnsigned: true)
!1966 = !DIEnumerator(name: "requestID", value: 2, isUnsigned: true)
!1967 = !DIEnumerator(name: "expectConnect", value: 3, isUnsigned: true)
!1968 = !DIEnumerator(name: "netopen", value: 4, isUnsigned: true)
!1969 = !DIEnumerator(name: "cdnsgip", value: 5, isUnsigned: true)
!1970 = !DIEnumerator(name: "cipopen", value: 6, isUnsigned: true)
!1971 = !DIEnumerator(name: "ciprxget4", value: 7, isUnsigned: true)
!1972 = !DIEnumerator(name: "ciprxget2", value: 8, isUnsigned: true)
!1973 = !{!943, !1927}
!1974 = !{!1975}
!1975 = !DIGlobalVariableExpression(var: !1976, expr: !DIExpression(DW_OP_constu, 1500, DW_OP_stack_value))
!1976 = distinct !DIGlobalVariable(name: "SIM7x00_MAX_RX", scope: !1923, file: !1924, line: 33, type: !95, isLocal: true, isDefinition: true)
!1977 = !{!160, !166, !170, !173, !177, !180, !182, !184, !186, !189, !192, !195, !198, !201, !204, !205, !206, !207, !211, !213, !215, !217, !219, !222, !225, !228, !231, !234, !1109, !1114, !1190, !1192, !1197, !1201, !1203, !1205, !1207, !1209, !1214, !1218, !1222, !1226, !1230, !1234, !1238, !1242, !1244, !1248, !1254, !1258, !1262, !1264, !1266, !1270, !1274, !1276, !1278, !1280, !1282, !1286, !1288, !1290, !1294, !1298, !1302, !1306, !1310, !1314, !1978, !1985, !1989, !1333, !1993, !1995, !1997, !2001, !1349, !2005, !2006, !2007, !2008, !1354, !1363, !1367, !1371, !1373, !1377, !1381, !1383, !1385, !1387, !1391, !1395, !1399, !1403, !1407, !1409, !1411, !1413, !1417, !1421, !1425, !1427, !2009}
!1978 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1979, file: !1189, line: 144)
!1979 = !DISubprogram(name: "vfprintf", scope: !1116, file: !1116, line: 206, type: !1980, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1980 = !DISubroutineType(types: !1981)
!1981 = !{!59, !1196, !266, !1982}
!1982 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1321, line: 32, baseType: !1983)
!1983 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1984, baseType: !1324)
!1984 = !DIFile(filename: "../cicada/commdevices/sim7x00.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build")
!1985 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1986, file: !1189, line: 145)
!1986 = !DISubprogram(name: "vprintf", scope: !1116, file: !1116, line: 208, type: !1987, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1987 = !DISubroutineType(types: !1988)
!1988 = !{!59, !266, !1982}
!1989 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1990, file: !1189, line: 146)
!1990 = !DISubprogram(name: "vsprintf", scope: !1116, file: !1116, line: 210, type: !1991, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1991 = !DISubroutineType(types: !1992)
!1992 = !{!59, !308, !266, !1982}
!1993 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !1994, file: !1189, line: 176)
!1994 = !DISubprogram(name: "vfscanf", scope: !1116, file: !1116, line: 270, type: !1980, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1995 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !1996, file: !1189, line: 177)
!1996 = !DISubprogram(name: "vscanf", scope: !1116, file: !1116, line: 272, type: !1987, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1997 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !1998, file: !1189, line: 178)
!1998 = !DISubprogram(name: "vsnprintf", scope: !1116, file: !1116, line: 268, type: !1999, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1999 = !DISubroutineType(types: !2000)
!2000 = !{!59, !308, !282, !266, !1982}
!2001 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !2002, file: !1189, line: 179)
!2002 = !DISubprogram(name: "vsscanf", scope: !1116, file: !1116, line: 274, type: !2003, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2003 = !DISubroutineType(types: !2004)
!2004 = !{!59, !266, !266, !1982}
!2005 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1994, file: !1189, line: 186)
!2006 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1996, file: !1189, line: 187)
!2007 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !1998, file: !1189, line: 188)
!2008 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !2002, file: !1189, line: 189)
!2009 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1923, entity: !43, file: !1924, line: 31)
!2010 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !2011, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2012, retainedTypes: !2047, globals: !2048, imports: !2051, splitDebugInlining: false, nameTableKind: None)
!2011 = !DIFile(filename: "../cicada/commdevices/sim800.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e30a36c675c582fe342f8e2ec5cc13ce")
!2012 = !{!2013, !2040, !1594, !1624}
!2013 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "SendState", scope: !2014, file: !1841, line: 117, baseType: !10, size: 32, elements: !2028, identifier: "_ZTSN6Cicada16Sim800CommDevice9SendStateE")
!2014 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Sim800CommDevice", scope: !43, file: !1841, line: 37, size: 2304, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !2015, vtableHolder: !920)
!2015 = !{!2016, !2017, !2018, !2022, !2025}
!2016 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !2014, baseType: !41, flags: DIFlagPublic, extraData: i32 0)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "iccidCommand", scope: !2014, file: !1841, line: 142, baseType: !266, size: 32, offset: 2240)
!2018 = !DISubprogram(name: "Sim800CommDevice", scope: !2014, file: !1841, line: 43, type: !2019, scopeLine: 43, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2019 = !DISubroutineType(types: !2020)
!2020 = !{null, !2021, !958, !44, !44, !872}
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!2022 = !DISubprogram(name: "Sim800CommDevice", scope: !2014, file: !1841, line: 46, type: !2023, scopeLine: 46, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2023 = !DISubroutineType(types: !2024)
!2024 = !{null, !2021, !958, !44, !44, !872, !872}
!2025 = !DISubprogram(name: "run", linkageName: "_ZN6Cicada16Sim800CommDevice3runEv", scope: !2014, file: !1841, line: 112, type: !2026, scopeLine: 112, containingType: !2014, virtualIndex: 18, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2026 = !DISubroutineType(types: !2027)
!2027 = !{null, !2021}
!2028 = !{!1722, !1942, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !1950, !2036, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !2037, !2038, !2039}
!2029 = !DIEnumerator(name: "connecting", value: 2, isUnsigned: true)
!2030 = !DIEnumerator(name: "sendCiprxget", value: 3, isUnsigned: true)
!2031 = !DIEnumerator(name: "sendCipmux", value: 4, isUnsigned: true)
!2032 = !DIEnumerator(name: "sendCipsprt", value: 5, isUnsigned: true)
!2033 = !DIEnumerator(name: "sendCstt", value: 6, isUnsigned: true)
!2034 = !DIEnumerator(name: "sendCiicr", value: 7, isUnsigned: true)
!2035 = !DIEnumerator(name: "sendCifsr", value: 8, isUnsigned: true)
!2036 = !DIEnumerator(name: "sendCipstart", value: 10, isUnsigned: true)
!2037 = !DIEnumerator(name: "sendCipclose", value: 19, isUnsigned: true)
!2038 = !DIEnumerator(name: "sendCipshut", value: 20, isUnsigned: true)
!2039 = !DIEnumerator(name: "finalizeDisconnect", value: 21, isUnsigned: true)
!2040 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReplyState", scope: !2014, file: !1841, line: 115, baseType: !10, size: 32, elements: !2041, identifier: "_ZTSN6Cicada16Sim800CommDevice10ReplyStateE")
!2041 = !{!1964, !1965, !1966, !2042, !2043, !2044, !2045, !2046}
!2042 = !DIEnumerator(name: "cifsr", value: 3, isUnsigned: true)
!2043 = !DIEnumerator(name: "cdnsgip", value: 4, isUnsigned: true)
!2044 = !DIEnumerator(name: "cipstart", value: 5, isUnsigned: true)
!2045 = !DIEnumerator(name: "ciprxget4", value: 6, isUnsigned: true)
!2046 = !DIEnumerator(name: "ciprxget2", value: 7, isUnsigned: true)
!2047 = !{!943, !2014}
!2048 = !{!2049}
!2049 = !DIGlobalVariableExpression(var: !2050, expr: !DIExpression(DW_OP_constu, 1460, DW_OP_stack_value))
!2050 = distinct !DIGlobalVariable(name: "SIM800_MAX_RX", scope: !2010, file: !2011, line: 32, type: !95, isLocal: true, isDefinition: true)
!2051 = !{!160, !166, !170, !173, !177, !180, !182, !184, !186, !189, !192, !195, !198, !201, !204, !205, !206, !207, !211, !213, !215, !217, !219, !222, !225, !228, !231, !234, !1109, !1114, !1190, !1192, !1197, !1201, !1203, !1205, !1207, !1209, !1214, !1218, !1222, !1226, !1230, !1234, !1238, !1242, !1244, !1248, !1254, !1258, !1262, !1264, !1266, !1270, !1274, !1276, !1278, !1280, !1282, !1286, !1288, !1290, !1294, !1298, !1302, !1306, !1310, !1314, !2052, !2059, !2063, !1333, !2067, !2069, !2071, !2075, !1349, !2079, !2080, !2081, !2082, !1354, !1363, !1367, !1371, !1373, !1377, !1381, !1383, !1385, !1387, !1391, !1395, !1399, !1403, !1407, !1409, !1411, !1413, !1417, !1421, !1425, !1427, !2083}
!2052 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !2053, file: !1189, line: 144)
!2053 = !DISubprogram(name: "vfprintf", scope: !1116, file: !1116, line: 206, type: !2054, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2054 = !DISubroutineType(types: !2055)
!2055 = !{!59, !1196, !266, !2056}
!2056 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1321, line: 32, baseType: !2057)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2058, baseType: !1324)
!2058 = !DIFile(filename: "../cicada/commdevices/sim800.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build")
!2059 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !2060, file: !1189, line: 145)
!2060 = !DISubprogram(name: "vprintf", scope: !1116, file: !1116, line: 208, type: !2061, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2061 = !DISubroutineType(types: !2062)
!2062 = !{!59, !266, !2056}
!2063 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !2064, file: !1189, line: 146)
!2064 = !DISubprogram(name: "vsprintf", scope: !1116, file: !1116, line: 210, type: !2065, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2065 = !DISubroutineType(types: !2066)
!2066 = !{!59, !308, !266, !2056}
!2067 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !2068, file: !1189, line: 176)
!2068 = !DISubprogram(name: "vfscanf", scope: !1116, file: !1116, line: 270, type: !2054, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2069 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !2070, file: !1189, line: 177)
!2070 = !DISubprogram(name: "vscanf", scope: !1116, file: !1116, line: 272, type: !2061, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2071 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !2072, file: !1189, line: 178)
!2072 = !DISubprogram(name: "vsnprintf", scope: !1116, file: !1116, line: 268, type: !2073, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2073 = !DISubroutineType(types: !2074)
!2074 = !{!59, !308, !282, !266, !2056}
!2075 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !2076, file: !1189, line: 179)
!2076 = !DISubprogram(name: "vsscanf", scope: !1116, file: !1116, line: 274, type: !2077, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2077 = !DISubroutineType(types: !2078)
!2078 = !{!59, !266, !266, !2056}
!2079 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !2068, file: !1189, line: 186)
!2080 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !2070, file: !1189, line: 187)
!2081 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !2072, file: !1189, line: 188)
!2082 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !2076, file: !1189, line: 189)
!2083 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !2010, entity: !43, file: !2011, line: 30)
!2084 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !2085, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2086, retainedTypes: !2144, globals: !2145, imports: !2148, splitDebugInlining: false, nameTableKind: None)
!2085 = !DIFile(filename: "../cicada/commdevices/espressif.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e5cb6288c98d146a09f04c0af8a66428")
!2086 = !{!1594, !1624, !2087, !2127}
!2087 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReplyState", scope: !2088, file: !1847, line: 142, baseType: !10, size: 32, elements: !2123, identifier: "_ZTSN6Cicada15EspressifDevice10ReplyStateE")
!2088 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "EspressifDevice", scope: !43, file: !1847, line: 39, size: 2112, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !2089, vtableHolder: !920)
!2089 = !{!2090, !2091, !2092, !2093, !2097, !2101, !2104, !2107, !2108, !2111, !2112, !2115, !2116, !2119, !2120, !2121, !2122}
!2090 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !2088, baseType: !107, flags: DIFlagPublic, extraData: i32 0)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "_ssid", scope: !2088, file: !1847, line: 170, baseType: !266, size: 32, offset: 1856, flags: DIFlagProtected)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "_passwd", scope: !2088, file: !1847, line: 171, baseType: !266, size: 32, offset: 1888, flags: DIFlagProtected)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "_macStringBuffer", scope: !2088, file: !1847, line: 173, baseType: !2094, size: 144, offset: 1920, flags: DIFlagProtected)
!2094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 144, elements: !2095)
!2095 = !{!2096}
!2096 = !DISubrange(count: 18)
!2097 = !DISubprogram(name: "EspressifDevice", scope: !2088, file: !1847, line: 42, type: !2098, scopeLine: 42, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2098 = !DISubroutineType(types: !2099)
!2099 = !{null, !2100, !958, !44, !44, !872}
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!2101 = !DISubprogram(name: "EspressifDevice", scope: !2088, file: !1847, line: 44, type: !2102, scopeLine: 44, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2102 = !DISubroutineType(types: !2103)
!2103 = !{null, !2100, !958, !44, !44, !872, !872}
!2104 = !DISubprogram(name: "~EspressifDevice", scope: !2088, file: !1847, line: 46, type: !2105, scopeLine: 46, containingType: !2088, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2105 = !DISubroutineType(types: !2106)
!2106 = !{null, !2100}
!2107 = !DISubprogram(name: "resetStates", linkageName: "_ZN6Cicada15EspressifDevice11resetStatesEv", scope: !2088, file: !1847, line: 54, type: !2105, scopeLine: 54, containingType: !2088, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2108 = !DISubprogram(name: "setSSID", linkageName: "_ZN6Cicada15EspressifDevice7setSSIDEPKc", scope: !2088, file: !1847, line: 60, type: !2109, scopeLine: 60, containingType: !2088, virtualIndex: 15, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2109 = !DISubroutineType(types: !2110)
!2110 = !{null, !2100, !266}
!2111 = !DISubprogram(name: "setPassword", linkageName: "_ZN6Cicada15EspressifDevice11setPasswordEPKc", scope: !2088, file: !1847, line: 66, type: !2109, scopeLine: 66, containingType: !2088, virtualIndex: 16, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2112 = !DISubprogram(name: "connect", linkageName: "_ZN6Cicada15EspressifDevice7connectEv", scope: !2088, file: !1847, line: 68, type: !2113, scopeLine: 68, containingType: !2088, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2113 = !DISubroutineType(types: !2114)
!2114 = !{!63, !2100}
!2115 = !DISubprogram(name: "requestMac", linkageName: "_ZN6Cicada15EspressifDevice10requestMacEv", scope: !2088, file: !1847, line: 75, type: !2105, scopeLine: 75, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2116 = !DISubprogram(name: "getMacString", linkageName: "_ZN6Cicada15EspressifDevice12getMacStringEv", scope: !2088, file: !1847, line: 85, type: !2117, scopeLine: 85, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2117 = !DISubroutineType(types: !2118)
!2118 = !{!308, !2100}
!2119 = !DISubprogram(name: "run", linkageName: "_ZN6Cicada15EspressifDevice3runEv", scope: !2088, file: !1847, line: 140, type: !2105, scopeLine: 140, containingType: !2088, virtualIndex: 17, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2120 = !DISubprogram(name: "fillLineBuffer", linkageName: "_ZN6Cicada15EspressifDevice14fillLineBufferEv", scope: !2088, file: !1847, line: 166, type: !2113, scopeLine: 166, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2121 = !DISubprogram(name: "sendCiprcvdata", linkageName: "_ZN6Cicada15EspressifDevice14sendCiprcvdataEv", scope: !2088, file: !1847, line: 167, type: !2113, scopeLine: 167, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2122 = !DISubprogram(name: "parseCiprecvdata", linkageName: "_ZN6Cicada15EspressifDevice16parseCiprecvdataEv", scope: !2088, file: !1847, line: 168, type: !2113, scopeLine: 168, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2123 = !{!1964, !2124, !2125, !2126}
!2124 = !DIEnumerator(name: "waitCiprecvdata", value: 1, isUnsigned: true)
!2125 = !DIEnumerator(name: "parseStateCiprecvdata", value: 2, isUnsigned: true)
!2126 = !DIEnumerator(name: "reqMac", value: 3, isUnsigned: true)
!2127 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "SendState", scope: !2088, file: !1847, line: 144, baseType: !10, size: 32, elements: !2128, identifier: "_ZTSN6Cicada15EspressifDevice9SendStateE")
!2128 = !{!1722, !1942, !2029, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143}
!2129 = !DIEnumerator(name: "sendCwmode", value: 3, isUnsigned: true)
!2130 = !DIEnumerator(name: "sendCwjap", value: 4, isUnsigned: true)
!2131 = !DIEnumerator(name: "sendCiprecvmode", value: 5, isUnsigned: true)
!2132 = !DIEnumerator(name: "sendCipmux", value: 6, isUnsigned: true)
!2133 = !DIEnumerator(name: "sendCipmode", value: 7, isUnsigned: true)
!2134 = !DIEnumerator(name: "sendCipstart", value: 8, isUnsigned: true)
!2135 = !DIEnumerator(name: "finalizeConnect", value: 9, isUnsigned: true)
!2136 = !DIEnumerator(name: "connected", value: 10, isUnsigned: true)
!2137 = !DIEnumerator(name: "sendDataState", value: 11, isUnsigned: true)
!2138 = !DIEnumerator(name: "sendCiprecvdata", value: 12, isUnsigned: true)
!2139 = !DIEnumerator(name: "waitReceive", value: 13, isUnsigned: true)
!2140 = !DIEnumerator(name: "receiving", value: 14, isUnsigned: true)
!2141 = !DIEnumerator(name: "sendCipclose", value: 15, isUnsigned: true)
!2142 = !DIEnumerator(name: "sendCwqap", value: 16, isUnsigned: true)
!2143 = !DIEnumerator(name: "finalizeDisconnect", value: 17, isUnsigned: true)
!2144 = !{!10, !943, !2088}
!2145 = !{!2146}
!2146 = !DIGlobalVariableExpression(var: !2147, expr: !DIExpression(DW_OP_constu, 2048, DW_OP_stack_value))
!2147 = distinct !DIGlobalVariable(name: "ESPRESSIF_MAX_RX", scope: !2084, file: !2085, line: 31, type: !95, isLocal: true, isDefinition: true)
!2148 = !{!160, !166, !170, !173, !177, !180, !182, !184, !186, !189, !192, !195, !198, !201, !204, !205, !206, !207, !211, !213, !215, !217, !219, !222, !225, !228, !231, !234, !1114, !1190, !1192, !1197, !1201, !1203, !1205, !1207, !1209, !1214, !1218, !1222, !1226, !1230, !1234, !1238, !1242, !1244, !1248, !1254, !1258, !1262, !1264, !1266, !1270, !1274, !1276, !1278, !1280, !1282, !1286, !1288, !1290, !1294, !1298, !1302, !1306, !1310, !1314, !2149, !2156, !2160, !1333, !2164, !2166, !2168, !2172, !1349, !2176, !2177, !2178, !2179, !1354, !1363, !1367, !1371, !1373, !1377, !1381, !1383, !1385, !1387, !1391, !1395, !1399, !1403, !1407, !1409, !1411, !1413, !1417, !1421, !1425, !1427, !2180}
!2149 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !2150, file: !1189, line: 144)
!2150 = !DISubprogram(name: "vfprintf", scope: !1116, file: !1116, line: 206, type: !2151, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2151 = !DISubroutineType(types: !2152)
!2152 = !{!59, !1196, !266, !2153}
!2153 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1321, line: 32, baseType: !2154)
!2154 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2155, baseType: !1324)
!2155 = !DIFile(filename: "../cicada/commdevices/espressif.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build")
!2156 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !2157, file: !1189, line: 145)
!2157 = !DISubprogram(name: "vprintf", scope: !1116, file: !1116, line: 208, type: !2158, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2158 = !DISubroutineType(types: !2159)
!2159 = !{!59, !266, !2153}
!2160 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !2161, file: !1189, line: 146)
!2161 = !DISubprogram(name: "vsprintf", scope: !1116, file: !1116, line: 210, type: !2162, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2162 = !DISubroutineType(types: !2163)
!2163 = !{!59, !308, !266, !2153}
!2164 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !2165, file: !1189, line: 176)
!2165 = !DISubprogram(name: "vfscanf", scope: !1116, file: !1116, line: 270, type: !2151, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2166 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !2167, file: !1189, line: 177)
!2167 = !DISubprogram(name: "vscanf", scope: !1116, file: !1116, line: 272, type: !2158, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2168 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !2169, file: !1189, line: 178)
!2169 = !DISubprogram(name: "vsnprintf", scope: !1116, file: !1116, line: 268, type: !2170, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2170 = !DISubroutineType(types: !2171)
!2171 = !{!59, !308, !282, !266, !2153}
!2172 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !376, entity: !2173, file: !1189, line: 179)
!2173 = !DISubprogram(name: "vsscanf", scope: !1116, file: !1116, line: 274, type: !2174, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2174 = !DISubroutineType(types: !2175)
!2175 = !{!59, !266, !266, !2153}
!2176 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !2165, file: !1189, line: 186)
!2177 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !2167, file: !1189, line: 187)
!2178 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !2169, file: !1189, line: 188)
!2179 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !161, entity: !2173, file: !1189, line: 189)
!2180 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !2084, entity: !43, file: !2085, line: 29)
!2181 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !2182, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2183, imports: !2304, splitDebugInlining: false, nameTableKind: None)
!2182 = !DIFile(filename: "../cicada/bufferedserial.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "0c50e54046b616f386000f55e6143c47")
!2183 = !{!2184, !959, !920, !964, !2188, !2192}
!2184 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "BufferedSerial", scope: !43, file: !822, line: 42, size: 832, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !2185, vtableHolder: !920)
!2185 = !{!2186, !2187, !2262, !2263, !2267, !2270, !2275, !2276, !2279, !2282, !2285, !2288, !2291, !2294, !2295, !2298, !2301, !2302, !2303}
!2186 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !2184, baseType: !959, flags: DIFlagPublic, extraData: i32 0)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "_readBuffer", scope: !2184, file: !822, line: 105, baseType: !2188, size: 384, offset: 64, flags: DIFlagProtected)
!2188 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "LineCircularBuffer", scope: !43, file: !2189, line: 38, size: 384, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !2190, vtableHolder: !2192, identifier: "_ZTSN6Cicada18LineCircularBufferE")
!2189 = !DIFile(filename: "../cicada/linecircularbuffer.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "7c64ede70efe975ae69caea246f4ce64")
!2190 = !{!2191, !2236, !2237, !2241, !2244, !2247, !2250, !2253, !2258, !2259}
!2191 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !2188, baseType: !2192, flags: DIFlagPublic, extraData: i32 0)
!2192 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "CircularBuffer<char>", scope: !43, file: !1631, line: 39, size: 384, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !2193, vtableHolder: !2192, templateParams: !2234, identifier: "_ZTSN6Cicada14CircularBufferIcEE")
!2193 = !{!1633, !2194, !2195, !2196, !2197, !2198, !2199, !2203, !2206, !2209, !2212, !2215, !2218, !2219, !2220, !2225, !2226, !2229, !2230, !2231}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "_writeHead", scope: !2192, file: !1631, line: 196, baseType: !872, size: 64, offset: 64)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "_readHead", scope: !2192, file: !1631, line: 197, baseType: !872, size: 64, offset: 128)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "_availableData", scope: !2192, file: !1631, line: 198, baseType: !872, size: 64, offset: 192)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "_bufferSize", scope: !2192, file: !1631, line: 199, baseType: !1638, size: 64, offset: 256)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "_buffer", scope: !2192, file: !1631, line: 200, baseType: !308, size: 32, offset: 320)
!2199 = !DISubprogram(name: "CircularBuffer", scope: !2192, file: !1631, line: 48, type: !2200, scopeLine: 48, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2200 = !DISubroutineType(types: !2201)
!2201 = !{null, !2202, !308, !872}
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!2203 = !DISubprogram(name: "~CircularBuffer", scope: !2192, file: !1631, line: 56, type: !2204, scopeLine: 56, containingType: !2192, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2204 = !DISubroutineType(types: !2205)
!2205 = !{null, !2202}
!2206 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIcE4pushEPKcy", scope: !2192, file: !1631, line: 65, type: !2207, scopeLine: 65, containingType: !2192, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{!872, !2202, !266, !872}
!2209 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIcE4pushEc", scope: !2192, file: !1631, line: 88, type: !2210, scopeLine: 88, containingType: !2192, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2210 = !DISubroutineType(types: !2211)
!2211 = !{null, !2202, !130}
!2212 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIcE4pullEPcy", scope: !2192, file: !1631, line: 102, type: !2213, scopeLine: 102, containingType: !2192, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2213 = !DISubroutineType(types: !2214)
!2214 = !{!872, !2202, !308, !872}
!2215 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIcE4pullEv", scope: !2192, file: !1631, line: 124, type: !2216, scopeLine: 124, containingType: !2192, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2216 = !DISubroutineType(types: !2217)
!2217 = !{!130, !2202}
!2218 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada14CircularBufferIcE4readEv", scope: !2192, file: !1631, line: 140, type: !2216, scopeLine: 140, containingType: !2192, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2219 = !DISubprogram(name: "flush", linkageName: "_ZN6Cicada14CircularBufferIcE5flushEv", scope: !2192, file: !1631, line: 148, type: !2204, scopeLine: 148, containingType: !2192, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2220 = !DISubprogram(name: "isEmpty", linkageName: "_ZNK6Cicada14CircularBufferIcE7isEmptyEv", scope: !2192, file: !1631, line: 158, type: !2221, scopeLine: 158, containingType: !2192, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2221 = !DISubroutineType(types: !2222)
!2222 = !{!63, !2223}
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!2224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2192)
!2225 = !DISubprogram(name: "isFull", linkageName: "_ZNK6Cicada14CircularBufferIcE6isFullEv", scope: !2192, file: !1631, line: 166, type: !2221, scopeLine: 166, containingType: !2192, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2226 = !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv", scope: !2192, file: !1631, line: 174, type: !2227, scopeLine: 174, containingType: !2192, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2227 = !DISubroutineType(types: !2228)
!2228 = !{!872, !2223}
!2229 = !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv", scope: !2192, file: !1631, line: 182, type: !2227, scopeLine: 182, containingType: !2192, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2230 = !DISubprogram(name: "size", linkageName: "_ZNK6Cicada14CircularBufferIcE4sizeEv", scope: !2192, file: !1631, line: 190, type: !2227, scopeLine: 190, containingType: !2192, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2231 = !DISubprogram(name: "incrementOrResetHead", linkageName: "_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy", scope: !2192, file: !1631, line: 202, type: !2232, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2232 = !DISubroutineType(types: !2233)
!2233 = !{null, !2202, !1677}
!2234 = !{!2235}
!2235 = !DITemplateTypeParameter(name: "T", type: !130)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "_bufferedLines", scope: !2188, file: !2189, line: 130, baseType: !37, size: 16, offset: 352)
!2237 = !DISubprogram(name: "LineCircularBuffer", scope: !2188, file: !2189, line: 41, type: !2238, scopeLine: 41, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2238 = !DISubroutineType(types: !2239)
!2239 = !{null, !2240, !308, !872}
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!2241 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada18LineCircularBuffer4pushEPKcy", scope: !2188, file: !2189, line: 46, type: !2242, scopeLine: 46, containingType: !2188, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2242 = !DISubroutineType(types: !2243)
!2243 = !{!872, !2240, !266, !872}
!2244 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada18LineCircularBuffer4pushEc", scope: !2188, file: !2189, line: 60, type: !2245, scopeLine: 60, containingType: !2188, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2245 = !DISubroutineType(types: !2246)
!2246 = !{null, !2240, !130}
!2247 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada18LineCircularBuffer4pullEPcy", scope: !2188, file: !2189, line: 69, type: !2248, scopeLine: 69, containingType: !2188, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2248 = !DISubroutineType(types: !2249)
!2249 = !{!872, !2240, !308, !872}
!2250 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada18LineCircularBuffer4pullEv", scope: !2188, file: !2189, line: 83, type: !2251, scopeLine: 83, containingType: !2188, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2251 = !DISubroutineType(types: !2252)
!2252 = !{!130, !2240}
!2253 = !DISubprogram(name: "numBufferedLines", linkageName: "_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv", scope: !2188, file: !2189, line: 97, type: !2254, scopeLine: 97, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2254 = !DISubroutineType(types: !2255)
!2255 = !{!37, !2256}
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!2257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2188)
!2258 = !DISubprogram(name: "readLine", linkageName: "_ZN6Cicada18LineCircularBuffer8readLineEPcy", scope: !2188, file: !2189, line: 108, type: !2248, scopeLine: 108, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2259 = !DISubprogram(name: "flush", linkageName: "_ZN6Cicada18LineCircularBuffer5flushEv", scope: !2188, file: !2189, line: 123, type: !2260, scopeLine: 123, containingType: !2188, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2260 = !DISubroutineType(types: !2261)
!2261 = !{null, !2240}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "_writeBuffer", scope: !2184, file: !822, line: 106, baseType: !2188, size: 384, offset: 448, flags: DIFlagProtected)
!2263 = !DISubprogram(name: "BufferedSerial", scope: !2184, file: !822, line: 54, type: !2264, scopeLine: 54, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2264 = !DISubroutineType(types: !2265)
!2265 = !{null, !2266, !308, !308, !872, !872}
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!2267 = !DISubprogram(name: "BufferedSerial", scope: !2184, file: !822, line: 64, type: !2268, scopeLine: 64, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2268 = !DISubroutineType(types: !2269)
!2269 = !{null, !2266, !308, !308, !872}
!2270 = !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14BufferedSerial14bytesAvailableEv", scope: !2184, file: !822, line: 66, type: !2271, scopeLine: 66, containingType: !2184, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2271 = !DISubroutineType(types: !2272)
!2272 = !{!872, !2273}
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!2274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2184)
!2275 = !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14BufferedSerial14spaceAvailableEv", scope: !2184, file: !822, line: 68, type: !2271, scopeLine: 68, containingType: !2184, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2276 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada14BufferedSerial4readEPhy", scope: !2184, file: !822, line: 70, type: !2277, scopeLine: 70, containingType: !2184, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2277 = !DISubroutineType(types: !2278)
!2278 = !{!872, !2266, !44, !872}
!2279 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada14BufferedSerial4readEv", scope: !2184, file: !822, line: 72, type: !2280, scopeLine: 72, containingType: !2184, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2280 = !DISubroutineType(types: !2281)
!2281 = !{!45, !2266}
!2282 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEPKhy", scope: !2184, file: !822, line: 74, type: !2283, scopeLine: 74, containingType: !2184, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2283 = !DISubroutineType(types: !2284)
!2284 = !{!872, !2266, !943, !872}
!2285 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEPKh", scope: !2184, file: !822, line: 76, type: !2286, scopeLine: 76, containingType: !2184, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2286 = !DISubroutineType(types: !2287)
!2287 = !{!872, !2266, !943}
!2288 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEh", scope: !2184, file: !822, line: 78, type: !2289, scopeLine: 78, containingType: !2184, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2289 = !DISubroutineType(types: !2290)
!2290 = !{null, !2266, !45}
!2291 = !DISubprogram(name: "canReadLine", linkageName: "_ZNK6Cicada14BufferedSerial11canReadLineEv", scope: !2184, file: !822, line: 80, type: !2292, scopeLine: 80, containingType: !2184, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2292 = !DISubroutineType(types: !2293)
!2293 = !{!63, !2273}
!2294 = !DISubprogram(name: "readLine", linkageName: "_ZN6Cicada14BufferedSerial8readLineEPhy", scope: !2184, file: !822, line: 91, type: !2277, scopeLine: 91, containingType: !2184, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2295 = !DISubprogram(name: "flushReceiveBuffers", linkageName: "_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv", scope: !2184, file: !822, line: 93, type: !2296, scopeLine: 93, containingType: !2184, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2296 = !DISubroutineType(types: !2297)
!2297 = !{null, !2266}
!2298 = !DISubprogram(name: "readBufferSize", linkageName: "_ZN6Cicada14BufferedSerial14readBufferSizeEv", scope: !2184, file: !822, line: 95, type: !2299, scopeLine: 95, containingType: !2184, virtualIndex: 13, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2299 = !DISubroutineType(types: !2300)
!2300 = !{!872, !2266}
!2301 = !DISubprogram(name: "writeBufferSize", linkageName: "_ZN6Cicada14BufferedSerial15writeBufferSizeEv", scope: !2184, file: !822, line: 96, type: !2299, scopeLine: 96, containingType: !2184, virtualIndex: 14, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2302 = !DISubprogram(name: "transferToAndFromBuffer", linkageName: "_ZN6Cicada14BufferedSerial23transferToAndFromBufferEv", scope: !2184, file: !822, line: 102, type: !2296, scopeLine: 102, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2303 = !DISubprogram(name: "copyToBuffer", linkageName: "_ZN6Cicada14BufferedSerial12copyToBufferEh", scope: !2184, file: !822, line: 109, type: !2289, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2304 = !{!160, !166, !170, !173, !177, !180, !182, !184, !186, !189, !192, !195, !198, !201, !204, !205, !206, !207, !211, !213, !215, !217, !219, !222, !225, !228, !231, !234, !2305}
!2305 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !2181, entity: !43, file: !2182, line: 28)
!2306 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !2307, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2307 = !DIFile(filename: "../cicada/platform/stm32f1/irq_stm32.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e34a510e3cc4f838fcfeb73936339393")
!2308 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2309, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2310, retainedTypes: !2331, splitDebugInlining: false, nameTableKind: None)
!2309 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "16c165b28ca3d4a5c8d7d66f2c899e26")
!2310 = !{!608, !2311, !2315, !2321, !523}
!2311 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 52, baseType: !10, size: 32, elements: !2312)
!2312 = !{!2313, !2314}
!2313 = !DIEnumerator(name: "HAL_UNLOCKED", value: 0)
!2314 = !DIEnumerator(name: "HAL_LOCKED", value: 1)
!2315 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !853, line: 78, baseType: !10, size: 32, elements: !2316)
!2316 = !{!2317, !2318, !2319, !2320}
!2317 = !DIEnumerator(name: "HAL_DMA_STATE_RESET", value: 0)
!2318 = !DIEnumerator(name: "HAL_DMA_STATE_READY", value: 1)
!2319 = !DIEnumerator(name: "HAL_DMA_STATE_BUSY", value: 2)
!2320 = !DIEnumerator(name: "HAL_DMA_STATE_TIMEOUT", value: 3)
!2321 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !728, line: 117, baseType: !10, size: 32, elements: !2322)
!2322 = !{!2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330}
!2323 = !DIEnumerator(name: "HAL_UART_STATE_RESET", value: 0)
!2324 = !DIEnumerator(name: "HAL_UART_STATE_READY", value: 32)
!2325 = !DIEnumerator(name: "HAL_UART_STATE_BUSY", value: 36)
!2326 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_TX", value: 33)
!2327 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_RX", value: 34)
!2328 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_TX_RX", value: 35)
!2329 = !DIEnumerator(name: "HAL_UART_STATE_TIMEOUT", value: 160)
!2330 = !DIEnumerator(name: "HAL_UART_STATE_ERROR", value: 224)
!2331 = !{!279, !24, !2332, !37, !45, !710, !2333, !2334, !2368, !2339}
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 32)
!2333 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_UART_StateTypeDef", file: !728, line: 136, baseType: !2321)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 32)
!2335 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_HandleTypeDef", file: !728, line: 189, baseType: !2336)
!2336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__UART_HandleTypeDef", file: !728, line: 141, size: 576, elements: !2337)
!2337 = !{!2338, !2350, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2414, !2415, !2416, !2418, !2419}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "Instance", scope: !2336, file: !728, line: 143, baseType: !2339, size: 32)
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2340, size: 32)
!2340 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !19, line: 516, baseType: !2341)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 507, size: 224, elements: !2342)
!2342 = !{!2343, !2344, !2345, !2346, !2347, !2348, !2349}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2341, file: !19, line: 509, baseType: !23, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !2341, file: !19, line: 510, baseType: !23, size: 32, offset: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !2341, file: !19, line: 511, baseType: !23, size: 32, offset: 64)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !2341, file: !19, line: 512, baseType: !23, size: 32, offset: 96)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !2341, file: !19, line: 513, baseType: !23, size: 32, offset: 128)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !2341, file: !19, line: 514, baseType: !23, size: 32, offset: 160)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !2341, file: !19, line: 515, baseType: !23, size: 32, offset: 192)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "Init", scope: !2336, file: !728, line: 145, baseType: !2351, size: 224, offset: 32)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_InitTypeDef", file: !728, line: 76, baseType: !2352)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !728, line: 47, size: 224, elements: !2353)
!2353 = !{!2354, !2355, !2356, !2357, !2358, !2359, !2360}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "BaudRate", scope: !2352, file: !728, line: 49, baseType: !24, size: 32)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "WordLength", scope: !2352, file: !728, line: 54, baseType: !24, size: 32, offset: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "StopBits", scope: !2352, file: !728, line: 57, baseType: !24, size: 32, offset: 64)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "Parity", scope: !2352, file: !728, line: 60, baseType: !24, size: 32, offset: 96)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !2352, file: !728, line: 67, baseType: !24, size: 32, offset: 128)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "HwFlowCtl", scope: !2352, file: !728, line: 70, baseType: !24, size: 32, offset: 160)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "OverSampling", scope: !2352, file: !728, line: 73, baseType: !24, size: 32, offset: 192)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "pTxBuffPtr", scope: !2336, file: !728, line: 147, baseType: !44, size: 32, offset: 256)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "TxXferSize", scope: !2336, file: !728, line: 149, baseType: !37, size: 16, offset: 288)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "TxXferCount", scope: !2336, file: !728, line: 151, baseType: !846, size: 16, offset: 304)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "pRxBuffPtr", scope: !2336, file: !728, line: 153, baseType: !44, size: 32, offset: 320)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "RxXferSize", scope: !2336, file: !728, line: 155, baseType: !37, size: 16, offset: 352)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "RxXferCount", scope: !2336, file: !728, line: 157, baseType: !846, size: 16, offset: 368)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "hdmatx", scope: !2336, file: !728, line: 159, baseType: !2368, size: 32, offset: 384)
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_HandleTypeDef", file: !853, line: 137, baseType: !2370)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__DMA_HandleTypeDef", file: !853, line: 111, size: 576, elements: !2371)
!2371 = !{!2372, !2381, !2392, !2394, !2396, !2397, !2402, !2403, !2404, !2405, !2406, !2413}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "Instance", scope: !2370, file: !853, line: 113, baseType: !2373, size: 32)
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 32)
!2374 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_Channel_TypeDef", file: !19, line: 297, baseType: !2375)
!2375 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 291, size: 128, elements: !2376)
!2376 = !{!2377, !2378, !2379, !2380}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2375, file: !19, line: 293, baseType: !23, size: 32)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "CNDTR", scope: !2375, file: !19, line: 294, baseType: !23, size: 32, offset: 32)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "CPAR", scope: !2375, file: !19, line: 295, baseType: !23, size: 32, offset: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "CMAR", scope: !2375, file: !19, line: 296, baseType: !23, size: 32, offset: 96)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "Init", scope: !2370, file: !853, line: 115, baseType: !2382, size: 224, offset: 32)
!2382 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_InitTypeDef", file: !853, line: 73, baseType: !2383)
!2383 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !853, line: 48, size: 224, elements: !2384)
!2384 = !{!2385, !2386, !2387, !2388, !2389, !2390, !2391}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "Direction", scope: !2383, file: !853, line: 50, baseType: !24, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphInc", scope: !2383, file: !853, line: 54, baseType: !24, size: 32, offset: 32)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "MemInc", scope: !2383, file: !853, line: 57, baseType: !24, size: 32, offset: 64)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphDataAlignment", scope: !2383, file: !853, line: 60, baseType: !24, size: 32, offset: 96)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "MemDataAlignment", scope: !2383, file: !853, line: 63, baseType: !24, size: 32, offset: 128)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !2383, file: !853, line: 66, baseType: !24, size: 32, offset: 160)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "Priority", scope: !2383, file: !853, line: 71, baseType: !24, size: 32, offset: 192)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "Lock", scope: !2370, file: !853, line: 117, baseType: !2393, size: 32, offset: 256)
!2393 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_LockTypeDef", file: !9, line: 56, baseType: !2311)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "State", scope: !2370, file: !853, line: 119, baseType: !2395, size: 32, offset: 288)
!2395 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_DMA_StateTypeDef", file: !853, line: 84, baseType: !2315)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "Parent", scope: !2370, file: !853, line: 121, baseType: !279, size: 32, offset: 320)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "XferCpltCallback", scope: !2370, file: !853, line: 123, baseType: !2398, size: 32, offset: 352)
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 32)
!2399 = !DISubroutineType(types: !2400)
!2400 = !{null, !2401}
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "XferHalfCpltCallback", scope: !2370, file: !853, line: 125, baseType: !2398, size: 32, offset: 384)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "XferErrorCallback", scope: !2370, file: !853, line: 127, baseType: !2398, size: 32, offset: 416)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "XferAbortCallback", scope: !2370, file: !853, line: 129, baseType: !2398, size: 32, offset: 448)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "ErrorCode", scope: !2370, file: !853, line: 131, baseType: !23, size: 32, offset: 480)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "DmaBaseAddress", scope: !2370, file: !853, line: 133, baseType: !2407, size: 32, offset: 512)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_TypeDef", file: !19, line: 303, baseType: !2409)
!2409 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 299, size: 64, elements: !2410)
!2410 = !{!2411, !2412}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !2409, file: !19, line: 301, baseType: !23, size: 32)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "IFCR", scope: !2409, file: !19, line: 302, baseType: !23, size: 32, offset: 32)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "ChannelIndex", scope: !2370, file: !853, line: 135, baseType: !24, size: 32, offset: 544)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "hdmarx", scope: !2336, file: !728, line: 161, baseType: !2368, size: 32, offset: 416)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "Lock", scope: !2336, file: !728, line: 163, baseType: !2393, size: 32, offset: 448)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "gState", scope: !2336, file: !728, line: 165, baseType: !2417, size: 32, offset: 480)
!2417 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2333)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "RxState", scope: !2336, file: !728, line: 169, baseType: !2417, size: 32, offset: 512)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "ErrorCode", scope: !2336, file: !728, line: 172, baseType: !23, size: 32, offset: 544)
!2420 = !{!"Ubuntu clang version 14.0.6"}
!2421 = !{i32 7, !"Dwarf Version", i32 5}
!2422 = !{i32 2, !"Debug Info Version", i32 3}
!2423 = !{i32 1, !"wchar_size", i32 4}
!2424 = !{i32 1, !"min_enum_size", i32 4}
!2425 = !{i32 1, !"branch-target-enforcement", i32 0}
!2426 = !{i32 1, !"sign-return-address", i32 0}
!2427 = !{i32 1, !"sign-return-address-all", i32 0}
!2428 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2429 = !{i32 7, !"frame-pointer", i32 2}
!2430 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 93, type: !2431, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, retainedNodes: !2433)
!2431 = !DISubroutineType(types: !2432)
!2432 = !{!59, !59, !353}
!2433 = !{!2434, !2435, !2436, !2437, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2450}
!2434 = !DILocalVariable(name: "argc", arg: 1, scope: !2430, file: !3, line: 93, type: !59)
!2435 = !DILocalVariable(name: "argv", arg: 2, scope: !2430, file: !3, line: 93, type: !353)
!2436 = !DILocalVariable(name: "serialBufferSize", scope: !2430, file: !3, line: 101, type: !95)
!2437 = !DILocalVariable(name: "readBufferDebug", scope: !2430, file: !3, line: 102, type: !2438)
!2438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 12032, elements: !2439)
!2439 = !{!2440}
!2440 = !DISubrange(count: 1504)
!2441 = !DILocalVariable(name: "writeBufferDebug", scope: !2430, file: !3, line: 103, type: !2438)
!2442 = !DILocalVariable(name: "debug", scope: !2430, file: !3, line: 104, type: !123)
!2443 = !DILocalVariable(name: "readBufferSerial", scope: !2430, file: !3, line: 105, type: !2438)
!2444 = !DILocalVariable(name: "writeBufferSerial", scope: !2430, file: !3, line: 106, type: !2438)
!2445 = !DILocalVariable(name: "serial", scope: !2430, file: !3, line: 107, type: !123)
!2446 = !DILocalVariable(name: "detector", scope: !2430, file: !3, line: 110, type: !103)
!2447 = !DILocalVariable(name: "task", scope: !2430, file: !3, line: 112, type: !48)
!2448 = !DILocalVariable(name: "taskList", scope: !2430, file: !3, line: 114, type: !2449)
!2449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1908, size: 96, elements: !1159)
!2450 = !DILocalVariable(name: "s", scope: !2430, file: !3, line: 116, type: !1899)
!2451 = !DILocation(line: 0, scope: !2430)
!2452 = !DILocation(line: 96, column: 5, scope: !2430)
!2453 = !DILocation(line: 97, column: 5, scope: !2430)
!2454 = !DILocation(line: 99, column: 5, scope: !2430)
!2455 = !DILocation(line: 102, column: 5, scope: !2430)
!2456 = !DILocation(line: 102, column: 10, scope: !2430)
!2457 = !DILocation(line: 103, column: 5, scope: !2430)
!2458 = !DILocation(line: 103, column: 10, scope: !2430)
!2459 = !DILocation(line: 104, column: 5, scope: !2430)
!2460 = !DILocation(line: 104, column: 15, scope: !2430)
!2461 = !DILocation(line: 105, column: 5, scope: !2430)
!2462 = !DILocation(line: 105, column: 10, scope: !2430)
!2463 = !DILocation(line: 106, column: 5, scope: !2430)
!2464 = !DILocation(line: 106, column: 10, scope: !2430)
!2465 = !DILocation(line: 107, column: 5, scope: !2430)
!2466 = !DILocation(line: 107, column: 15, scope: !2430)
!2467 = !DILocation(line: 110, column: 5, scope: !2430)
!2468 = !DILocation(line: 110, column: 17, scope: !2430)
!2469 = !DILocation(line: 110, column: 26, scope: !2430)
!2470 = !DILocation(line: 112, column: 5, scope: !2430)
!2471 = !DILocation(line: 112, column: 16, scope: !2430)
!2472 = !DILocation(line: 114, column: 5, scope: !2430)
!2473 = !DILocation(line: 114, column: 11, scope: !2430)
!2474 = !DILocation(line: 114, column: 24, scope: !2430)
!2475 = !DILocation(line: 114, column: 26, scope: !2430)
!2476 = !{!2477, !2477, i64 0}
!2477 = !{!"any pointer", !2478, i64 0}
!2478 = !{!"omnipotent char", !2479, i64 0}
!2479 = !{!"Simple C++ TBAA"}
!2480 = !DILocation(line: 114, column: 33, scope: !2430)
!2481 = !DILocation(line: 116, column: 5, scope: !2430)
!2482 = !DILocation(line: 116, column: 15, scope: !2430)
!2483 = !DILocation(line: 117, column: 11, scope: !2430)
!2484 = !DILocation(line: 118, column: 7, scope: !2430)
!2485 = !DILocation(line: 119, column: 1, scope: !2430)
!2486 = distinct !DISubprogram(name: "SystemClock_Config", linkageName: "_ZL18SystemClock_Configv", scope: !3, file: !3, line: 121, type: !4, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !6, retainedNodes: !2487)
!2487 = !{!2488, !2508}
!2488 = !DILocalVariable(name: "RCC_OscInitStruct", scope: !2486, file: !3, line: 123, type: !2489)
!2489 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !2490, line: 261, baseType: !2491)
!2490 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "49bf7e29630a7d603739687645591a41")
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2490, line: 228, size: 320, flags: DIFlagTypePassByValue, elements: !2492, identifier: "_ZTS18RCC_OscInitTypeDef")
!2492 = !{!2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !2491, file: !2490, line: 230, baseType: !24, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !2491, file: !2490, line: 238, baseType: !24, size: 32, offset: 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "HSEPredivValue", scope: !2491, file: !2490, line: 241, baseType: !24, size: 32, offset: 64)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !2491, file: !2490, line: 244, baseType: !24, size: 32, offset: 96)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !2491, file: !2490, line: 247, baseType: !24, size: 32, offset: 128)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !2491, file: !2490, line: 250, baseType: !24, size: 32, offset: 160)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !2491, file: !2490, line: 253, baseType: !24, size: 32, offset: 192)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !2491, file: !2490, line: 256, baseType: !2501, size: 96, offset: 224)
!2501 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !2502, line: 59, baseType: !2503)
!2502 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "3e0cb02f236e8f5a4c479e8d7b418957")
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2502, line: 49, size: 96, flags: DIFlagTypePassByValue, elements: !2504, identifier: "_ZTS18RCC_PLLInitTypeDef")
!2504 = !{!2505, !2506, !2507}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !2503, file: !2502, line: 51, baseType: !24, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !2503, file: !2502, line: 54, baseType: !24, size: 32, offset: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !2503, file: !2502, line: 57, baseType: !24, size: 32, offset: 64)
!2508 = !DILocalVariable(name: "RCC_ClkInitStruct", scope: !2486, file: !3, line: 124, type: !2509)
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !2502, line: 80, baseType: !2510)
!2510 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2502, line: 64, size: 160, flags: DIFlagTypePassByValue, elements: !2511, identifier: "_ZTS18RCC_ClkInitTypeDef")
!2511 = !{!2512, !2513, !2514, !2515, !2516}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !2510, file: !2502, line: 66, baseType: !24, size: 32)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !2510, file: !2502, line: 69, baseType: !24, size: 32, offset: 32)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !2510, file: !2502, line: 72, baseType: !24, size: 32, offset: 64)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !2510, file: !2502, line: 75, baseType: !24, size: 32, offset: 96)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !2510, file: !2502, line: 78, baseType: !24, size: 32, offset: 128)
!2517 = !DILocation(line: 123, column: 5, scope: !2486)
!2518 = !DILocation(line: 123, column: 24, scope: !2486)
!2519 = !DILocation(line: 124, column: 5, scope: !2486)
!2520 = !DILocation(line: 124, column: 24, scope: !2486)
!2521 = !DILocation(line: 128, column: 23, scope: !2486)
!2522 = !DILocation(line: 128, column: 38, scope: !2486)
!2523 = !{!2524, !2525, i64 0}
!2524 = !{!"_ZTS18RCC_OscInitTypeDef", !2525, i64 0, !2525, i64 4, !2525, i64 8, !2525, i64 12, !2525, i64 16, !2525, i64 20, !2525, i64 24, !2526, i64 28}
!2525 = !{!"int", !2478, i64 0}
!2526 = !{!"_ZTS18RCC_PLLInitTypeDef", !2525, i64 0, !2525, i64 4, !2525, i64 8}
!2527 = !DILocation(line: 129, column: 23, scope: !2486)
!2528 = !DILocation(line: 129, column: 32, scope: !2486)
!2529 = !{!2524, !2525, i64 16}
!2530 = !DILocation(line: 130, column: 23, scope: !2486)
!2531 = !DILocation(line: 130, column: 43, scope: !2486)
!2532 = !{!2524, !2525, i64 20}
!2533 = !DILocation(line: 131, column: 27, scope: !2486)
!2534 = !DILocation(line: 131, column: 36, scope: !2486)
!2535 = !{!2524, !2525, i64 28}
!2536 = !DILocation(line: 132, column: 27, scope: !2486)
!2537 = !DILocation(line: 132, column: 37, scope: !2486)
!2538 = !{!2524, !2525, i64 32}
!2539 = !DILocation(line: 133, column: 27, scope: !2486)
!2540 = !DILocation(line: 133, column: 34, scope: !2486)
!2541 = !{!2524, !2525, i64 36}
!2542 = !DILocation(line: 134, column: 5, scope: !2486)
!2543 = !DILocation(line: 138, column: 23, scope: !2486)
!2544 = !DILocation(line: 139, column: 9, scope: !2486)
!2545 = !{!2546, !2525, i64 0}
!2546 = !{!"_ZTS18RCC_ClkInitTypeDef", !2525, i64 0, !2525, i64 4, !2525, i64 8, !2525, i64 12, !2525, i64 16}
!2547 = !DILocation(line: 140, column: 23, scope: !2486)
!2548 = !DILocation(line: 140, column: 36, scope: !2486)
!2549 = !{!2546, !2525, i64 4}
!2550 = !DILocation(line: 141, column: 23, scope: !2486)
!2551 = !DILocation(line: 141, column: 37, scope: !2486)
!2552 = !{!2546, !2525, i64 8}
!2553 = !DILocation(line: 142, column: 23, scope: !2486)
!2554 = !DILocation(line: 142, column: 38, scope: !2486)
!2555 = !{!2546, !2525, i64 12}
!2556 = !DILocation(line: 143, column: 23, scope: !2486)
!2557 = !DILocation(line: 143, column: 38, scope: !2486)
!2558 = !{!2546, !2525, i64 16}
!2559 = !DILocation(line: 145, column: 5, scope: !2486)
!2560 = !DILocation(line: 146, column: 1, scope: !2486)
!2561 = distinct !DISubprogram(name: "IPCommTask", linkageName: "_ZN10IPCommTaskC2ERN6Cicada11ModemDetectE", scope: !48, file: !3, line: 22, type: !111, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !110, retainedNodes: !2562)
!2562 = !{!2563, !2564}
!2563 = !DILocalVariable(name: "this", arg: 1, scope: !2561, type: !138, flags: DIFlagArtificial | DIFlagObjectPointer)
!2564 = !DILocalVariable(name: "detector", arg: 2, scope: !2561, file: !3, line: 22, type: !102)
!2565 = !DILocation(line: 0, scope: !2561)
!2566 = !DILocation(line: 25, column: 16, scope: !2561)
!2567 = !DILocation(line: 22, column: 5, scope: !2561)
!2568 = !{!2569, !2569, i64 0}
!2569 = !{!"vtable pointer", !2479, i64 0}
!2570 = !DILocation(line: 23, column: 9, scope: !2561)
!2571 = !DILocation(line: 24, column: 9, scope: !2561)
!2572 = !{!2573, !2477, i64 2424}
!2573 = !{!"_ZTS10IPCommTask", !2478, i64 20, !2478, i64 1220, !2477, i64 2420, !2477, i64 2424, !2525, i64 2428}
!2574 = !DILocation(line: 25, column: 9, scope: !2561)
!2575 = !{!2573, !2525, i64 2428}
!2576 = !DILocation(line: 25, column: 17, scope: !2561)
!2577 = distinct !DISubprogram(name: "~Task", linkageName: "_ZN6Cicada4TaskD2Ev", scope: !51, file: !52, line: 198, type: !70, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !69, retainedNodes: !2578)
!2578 = !{!2579}
!2579 = !DILocalVariable(name: "this", arg: 1, scope: !2577, type: !1908, flags: DIFlagArtificial | DIFlagObjectPointer)
!2580 = !DILocation(line: 0, scope: !2577)
!2581 = !DILocation(line: 198, column: 22, scope: !2577)
!2582 = distinct !DISubprogram(name: "~ModemDetect", linkageName: "_ZN6Cicada11ModemDetectD2Ev", scope: !103, file: !104, line: 39, type: !2583, scopeLine: 39, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !2586, retainedNodes: !2587)
!2583 = !DISubroutineType(types: !2584)
!2584 = !{null, !2585}
!2585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!2586 = !DISubprogram(name: "~ModemDetect", scope: !103, type: !2583, containingType: !103, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2587 = !{!2588}
!2588 = !DILocalVariable(name: "this", arg: 1, scope: !2582, type: !2589, flags: DIFlagArtificial | DIFlagObjectPointer)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2590 = !DILocation(line: 0, scope: !2582)
!2591 = !DILocation(line: 39, column: 7, scope: !2582)
!2592 = !DILocation(line: 39, column: 7, scope: !2593)
!2593 = distinct !DILexicalBlock(scope: !2582, file: !104, line: 39, column: 7)
!2594 = distinct !DISubprogram(name: "~ModemDriver", linkageName: "_ZN6Cicada11ModemDetect11ModemDriverD2Ev", scope: !1837, file: !104, line: 79, type: !1849, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !1852, retainedNodes: !2595)
!2595 = !{!2596}
!2596 = !DILocalVariable(name: "this", arg: 1, scope: !2594, type: !2597, flags: DIFlagArtificial | DIFlagObjectPointer)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 32)
!2598 = !DILocation(line: 0, scope: !2594)
!2599 = !DILocation(line: 79, column: 25, scope: !2594)
!2600 = distinct !DISubprogram(name: "Task", linkageName: "_ZN6Cicada4TaskC2Et", scope: !51, file: !52, line: 196, type: !66, scopeLine: 196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !65, retainedNodes: !2601)
!2601 = !{!2602, !2603}
!2602 = !DILocalVariable(name: "this", arg: 1, scope: !2600, type: !1908, flags: DIFlagArtificial | DIFlagObjectPointer)
!2603 = !DILocalVariable(name: "initialDelay", arg: 2, scope: !2600, file: !52, line: 196, type: !37)
!2604 = !DILocation(line: 0, scope: !2600)
!2605 = !DILocation(line: 196, column: 73, scope: !2600)
!2606 = !DILocation(line: 196, column: 39, scope: !2600)
!2607 = !{!2608, !2609, i64 4}
!2608 = !{!"_ZTSN6Cicada4TaskE", !2609, i64 4, !2525, i64 8, !2610, i64 12, !2525, i64 16}
!2609 = !{!"short", !2478, i64 0}
!2610 = !{!"bool", !2478, i64 0}
!2611 = !DILocation(line: 285, column: 10, scope: !2600)
!2612 = !{!2608, !2610, i64 12}
!2613 = !DILocation(line: 196, column: 61, scope: !2600)
!2614 = !{!2608, !2525, i64 16}
!2615 = !DILocation(line: 196, column: 74, scope: !2600)
!2616 = distinct !DISubprogram(name: "~IPCommTask", linkageName: "_ZN10IPCommTaskD0Ev", scope: !48, file: !3, line: 19, type: !115, scopeLine: 19, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !2617, retainedNodes: !2618)
!2617 = !DISubprogram(name: "~IPCommTask", scope: !48, type: !115, containingType: !48, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2618 = !{!2619}
!2619 = !DILocalVariable(name: "this", arg: 1, scope: !2616, type: !138, flags: DIFlagArtificial | DIFlagObjectPointer)
!2620 = !DILocation(line: 0, scope: !2616)
!2621 = !DILocation(line: 19, column: 7, scope: !2616)
!2622 = !DILocation(line: 0, scope: !135)
!2623 = !DILocation(line: 31, column: 9, scope: !135)
!2624 = !{!2478, !2478, i64 0}
!2625 = !DILocation(line: 33, column: 9, scope: !142)
!2626 = !{!2573, !2477, i64 2420}
!2627 = !DILocation(line: 33, column: 20, scope: !142)
!2628 = !DILocation(line: 35, column: 9, scope: !142)
!2629 = !DILocation(line: 35, column: 9, scope: !2630)
!2630 = distinct !DILexicalBlock(scope: !142, file: !3, line: 35, column: 9)
!2631 = !DILocation(line: 36, column: 21, scope: !142)
!2632 = !DILocation(line: 36, column: 49, scope: !142)
!2633 = !DILocation(line: 36, column: 66, scope: !142)
!2634 = !DILocation(line: 36, column: 32, scope: !142)
!2635 = !DILocation(line: 36, column: 9, scope: !142)
!2636 = !DILocation(line: 36, column: 19, scope: !142)
!2637 = !DILocation(line: 38, column: 9, scope: !142)
!2638 = !DILocation(line: 40, column: 51, scope: !142)
!2639 = !DILocation(line: 40, column: 22, scope: !142)
!2640 = !DILocation(line: 41, column: 13, scope: !2641)
!2641 = distinct !DILexicalBlock(scope: !142, file: !3, line: 41, column: 13)
!2642 = !DILocation(line: 41, column: 13, scope: !142)
!2643 = !DILocation(line: 42, column: 25, scope: !2641)
!2644 = !DILocation(line: 42, column: 13, scope: !2641)
!2645 = !DILocation(line: 43, column: 9, scope: !142)
!2646 = !DILocation(line: 43, column: 20, scope: !142)
!2647 = !DILocation(line: 44, column: 9, scope: !142)
!2648 = !DILocation(line: 44, column: 20, scope: !142)
!2649 = !DILocation(line: 46, column: 9, scope: !142)
!2650 = !DILocation(line: 46, column: 9, scope: !2651)
!2651 = distinct !DILexicalBlock(scope: !142, file: !3, line: 46, column: 9)
!2652 = !DILocation(line: 48, column: 9, scope: !142)
!2653 = !DILocation(line: 51, column: 13, scope: !141)
!2654 = !DILocation(line: 51, column: 24, scope: !141)
!2655 = !DILocation(line: 55, column: 13, scope: !141)
!2656 = !DILocation(line: 55, column: 24, scope: !141)
!2657 = !DILocation(line: 56, column: 9, scope: !142)
!2658 = !DILocation(line: 58, column: 9, scope: !142)
!2659 = !DILocation(line: 58, column: 9, scope: !2660)
!2660 = distinct !DILexicalBlock(scope: !142, file: !3, line: 58, column: 9)
!2661 = !DILocation(line: 60, column: 14, scope: !152)
!2662 = !DILocation(line: 60, column: 18, scope: !152)
!2663 = !DILocation(line: 60, column: 23, scope: !151)
!2664 = !DILocation(line: 60, column: 27, scope: !151)
!2665 = !DILocation(line: 0, scope: !142)
!2666 = !DILocation(line: 60, column: 9, scope: !152)
!2667 = !DILocation(line: 61, column: 28, scope: !149)
!2668 = !DILocation(line: 61, column: 17, scope: !149)
!2669 = !DILocation(line: 61, column: 17, scope: !150)
!2670 = !DILocation(line: 62, column: 17, scope: !148)
!2671 = !DILocation(line: 62, column: 22, scope: !148)
!2672 = !DILocation(line: 63, column: 38, scope: !148)
!2673 = !DILocation(line: 63, column: 49, scope: !148)
!2674 = !DILocation(line: 0, scope: !148)
!2675 = !DILocation(line: 0, scope: !158)
!2676 = !DILocation(line: 64, column: 35, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !158, file: !3, line: 64, column: 17)
!2678 = !DILocation(line: 64, column: 17, scope: !158)
!2679 = !DILocation(line: 70, column: 13, scope: !149)
!2680 = !DILocation(line: 70, column: 13, scope: !148)
!2681 = !DILocation(line: 65, column: 25, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !2683, file: !3, line: 65, column: 25)
!2683 = distinct !DILexicalBlock(scope: !2677, file: !3, line: 64, column: 53)
!2684 = !DILocation(line: 65, column: 32, scope: !2682)
!2685 = !DILocation(line: 65, column: 25, scope: !2683)
!2686 = !DILocation(line: 66, column: 25, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2682, file: !3, line: 65, column: 41)
!2688 = !DILocation(line: 67, column: 21, scope: !2687)
!2689 = !DILocation(line: 68, column: 30, scope: !2683)
!2690 = !DILocation(line: 68, column: 21, scope: !2683)
!2691 = !DILocation(line: 64, column: 49, scope: !2677)
!2692 = distinct !{!2692, !2678, !2693, !2694, !2695}
!2693 = !DILocation(line: 69, column: 17, scope: !158)
!2694 = !{!"llvm.loop.mustprogress"}
!2695 = !{!"llvm.loop.unroll.disable"}
!2696 = !DILocation(line: 71, column: 17, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !149, file: !3, line: 70, column: 20)
!2698 = !DILocation(line: 60, column: 34, scope: !151)
!2699 = !DILocation(line: 60, column: 37, scope: !151)
!2700 = !DILocation(line: 60, column: 9, scope: !151)
!2701 = distinct !{!2701, !2666, !2702, !2694, !2695}
!2702 = !DILocation(line: 73, column: 9, scope: !152)
!2703 = !DILocation(line: 75, column: 20, scope: !142)
!2704 = !DILocation(line: 76, column: 9, scope: !142)
!2705 = !DILocation(line: 76, column: 9, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !142, file: !3, line: 76, column: 9)
!2707 = !DILocation(line: 78, column: 9, scope: !142)
!2708 = !DILocation(line: 80, column: 9, scope: !142)
!2709 = !DILocation(line: 81, column: 5, scope: !135)
!2710 = distinct !DISubprogram(name: "setDelay", linkageName: "_ZN6Cicada4Task8setDelayEt", scope: !51, file: !52, line: 212, type: !66, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !77, retainedNodes: !2711)
!2711 = !{!2712, !2713}
!2712 = !DILocalVariable(name: "this", arg: 1, scope: !2710, type: !1908, flags: DIFlagArtificial | DIFlagObjectPointer)
!2713 = !DILocalVariable(name: "delay", arg: 2, scope: !2710, file: !52, line: 212, type: !37)
!2714 = !DILocation(line: 0, scope: !2710)
!2715 = !DILocation(line: 214, column: 9, scope: !2710)
!2716 = !DILocation(line: 214, column: 16, scope: !2710)
!2717 = !DILocation(line: 215, column: 5, scope: !2710)
!2718 = !DILocation(line: 0, scope: !127)
!2719 = !DILocation(line: 170, column: 10, scope: !2720)
!2720 = distinct !DILexicalBlock(scope: !127, file: !3, line: 170, column: 9)
!2721 = !DILocation(line: 170, column: 9, scope: !127)
!2722 = !DILocation(line: 171, column: 18, scope: !2723)
!2723 = distinct !DILexicalBlock(scope: !2720, file: !3, line: 170, column: 18)
!2724 = !DILocation(line: 171, column: 16, scope: !2723)
!2725 = !DILocation(line: 172, column: 5, scope: !2723)
!2726 = !DILocation(line: 173, column: 5, scope: !127)
!2727 = !DILocation(line: 173, column: 13, scope: !127)
!2728 = !DILocation(line: 174, column: 1, scope: !127)
!2729 = distinct !DISubprogram(name: "~Task", linkageName: "_ZN6Cicada4TaskD0Ev", scope: !51, file: !52, line: 198, type: !70, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !69, retainedNodes: !2730)
!2730 = !{!2731}
!2731 = !DILocalVariable(name: "this", arg: 1, scope: !2729, type: !1908, flags: DIFlagArtificial | DIFlagObjectPointer)
!2732 = !DILocation(line: 0, scope: !2729)
!2733 = !DILocation(line: 198, column: 21, scope: !2729)
!2734 = distinct !DISubprogram(name: "SysTick_Handler", scope: !3, file: !3, line: 150, type: !4, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, retainedNodes: !121)
!2735 = !DILocation(line: 152, column: 5, scope: !2734)
!2736 = !DILocation(line: 153, column: 1, scope: !2734)
!2737 = !DILocation(line: 157, column: 5, scope: !2)
!2738 = !{!"branch_weights", i32 1, i32 1048575}
!2739 = !DILocation(line: 157, column: 34, scope: !2)
!2740 = !DILocation(line: 158, column: 5, scope: !2)
!2741 = !DILocation(line: 158, column: 15, scope: !2)
!2742 = !DILocation(line: 159, column: 1, scope: !2)
!2743 = !DILocation(line: 163, column: 5, scope: !120)
!2744 = !DILocation(line: 163, column: 34, scope: !120)
!2745 = !DILocation(line: 164, column: 5, scope: !120)
!2746 = !DILocation(line: 164, column: 15, scope: !120)
!2747 = !DILocation(line: 165, column: 1, scope: !120)
!2748 = distinct !DISubprogram(name: "printf_", scope: !463, file: !463, line: 720, type: !1272, scopeLine: 721, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !470, retainedNodes: !2749)
!2749 = !{!2750, !2751, !2758, !2760}
!2750 = !DILocalVariable(name: "format", arg: 1, scope: !2748, file: !463, line: 720, type: !266)
!2751 = !DILocalVariable(name: "va", scope: !2748, file: !463, line: 722, type: !2752)
!2752 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1321, line: 14, baseType: !2753)
!2753 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2754, baseType: !2755)
!2754 = !DIFile(filename: "../dep/printf/src/printf.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build")
!2755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !2756)
!2756 = !{!2757}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !2755, file: !2754, line: 722, baseType: !279, size: 32)
!2758 = !DILocalVariable(name: "buffer", scope: !2748, file: !463, line: 724, type: !2759)
!2759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 8, elements: !1163)
!2760 = !DILocalVariable(name: "ret", scope: !2748, file: !463, line: 725, type: !2761)
!2761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !59)
!2762 = !DILocation(line: 0, scope: !2748)
!2763 = !DILocation(line: 722, column: 3, scope: !2748)
!2764 = !DILocation(line: 722, column: 11, scope: !2748)
!2765 = !DILocation(line: 723, column: 3, scope: !2748)
!2766 = !DILocation(line: 724, column: 3, scope: !2748)
!2767 = !DILocation(line: 724, column: 8, scope: !2748)
!2768 = !DILocation(line: 725, column: 19, scope: !2748)
!2769 = !DILocation(line: 726, column: 3, scope: !2748)
!2770 = !DILocation(line: 728, column: 1, scope: !2748)
!2771 = !DILocation(line: 727, column: 3, scope: !2748)
!2772 = distinct !DISubprogram(name: "_out_char", scope: !463, file: !463, line: 124, type: !468, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !470, retainedNodes: !2773)
!2773 = !{!2774, !2775, !2776, !2777}
!2774 = !DILocalVariable(name: "character", arg: 1, scope: !2772, file: !463, line: 124, type: !130)
!2775 = !DILocalVariable(name: "buffer", arg: 2, scope: !2772, file: !463, line: 124, type: !279)
!2776 = !DILocalVariable(name: "idx", arg: 3, scope: !2772, file: !463, line: 124, type: !282)
!2777 = !DILocalVariable(name: "maxlen", arg: 4, scope: !2772, file: !463, line: 124, type: !282)
!2778 = !DILocation(line: 0, scope: !2772)
!2779 = !DILocation(line: 127, column: 7, scope: !2780)
!2780 = distinct !DILexicalBlock(scope: !2772, file: !463, line: 127, column: 7)
!2781 = !DILocation(line: 127, column: 7, scope: !2772)
!2782 = !DILocation(line: 128, column: 5, scope: !2783)
!2783 = distinct !DILexicalBlock(scope: !2780, file: !463, line: 127, column: 18)
!2784 = !DILocation(line: 129, column: 3, scope: !2783)
!2785 = !DILocation(line: 130, column: 1, scope: !2772)
!2786 = distinct !DISubprogram(name: "_vsnprintf", scope: !463, file: !463, line: 447, type: !2787, scopeLine: 448, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !470, retainedNodes: !2789)
!2787 = !DISubroutineType(types: !2788)
!2788 = !{!59, !466, !308, !492, !266, !2752}
!2789 = !{!2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2805, !2811, !2814, !2820, !2824, !2826, !2832, !2834, !2836, !2837}
!2790 = !DILocalVariable(name: "out", arg: 1, scope: !2786, file: !463, line: 447, type: !466)
!2791 = !DILocalVariable(name: "buffer", arg: 2, scope: !2786, file: !463, line: 447, type: !308)
!2792 = !DILocalVariable(name: "maxlen", arg: 3, scope: !2786, file: !463, line: 447, type: !492)
!2793 = !DILocalVariable(name: "format", arg: 4, scope: !2786, file: !463, line: 447, type: !266)
!2794 = !DILocalVariable(name: "va", arg: 5, scope: !2786, file: !463, line: 447, type: !2752)
!2795 = !DILocalVariable(name: "flags", scope: !2786, file: !463, line: 449, type: !10)
!2796 = !DILocalVariable(name: "width", scope: !2786, file: !463, line: 449, type: !10)
!2797 = !DILocalVariable(name: "precision", scope: !2786, file: !463, line: 449, type: !10)
!2798 = !DILocalVariable(name: "n", scope: !2786, file: !463, line: 449, type: !10)
!2799 = !DILocalVariable(name: "idx", scope: !2786, file: !463, line: 450, type: !282)
!2800 = !DILocalVariable(name: "w", scope: !2801, file: !463, line: 490, type: !2761)
!2801 = distinct !DILexicalBlock(scope: !2802, file: !463, line: 489, column: 30)
!2802 = distinct !DILexicalBlock(scope: !2803, file: !463, line: 489, column: 14)
!2803 = distinct !DILexicalBlock(scope: !2804, file: !463, line: 486, column: 9)
!2804 = distinct !DILexicalBlock(scope: !2786, file: !463, line: 458, column: 3)
!2805 = !DILocalVariable(name: "prec", scope: !2806, file: !463, line: 510, type: !2761)
!2806 = distinct !DILexicalBlock(scope: !2807, file: !463, line: 509, column: 32)
!2807 = distinct !DILexicalBlock(scope: !2808, file: !463, line: 509, column: 16)
!2808 = distinct !DILexicalBlock(scope: !2809, file: !463, line: 506, column: 11)
!2809 = distinct !DILexicalBlock(scope: !2810, file: !463, line: 503, column: 25)
!2810 = distinct !DILexicalBlock(scope: !2804, file: !463, line: 503, column: 9)
!2811 = !DILocalVariable(name: "base", scope: !2812, file: !463, line: 562, type: !10)
!2812 = distinct !DILexicalBlock(scope: !2813, file: !463, line: 560, column: 18)
!2813 = distinct !DILexicalBlock(scope: !2804, file: !463, line: 553, column: 22)
!2814 = !DILocalVariable(name: "value", scope: !2815, file: !463, line: 596, type: !2819)
!2815 = distinct !DILexicalBlock(scope: !2816, file: !463, line: 594, column: 40)
!2816 = distinct !DILexicalBlock(scope: !2817, file: !463, line: 594, column: 15)
!2817 = distinct !DILexicalBlock(scope: !2818, file: !463, line: 592, column: 51)
!2818 = distinct !DILexicalBlock(scope: !2812, file: !463, line: 592, column: 13)
!2819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !176)
!2820 = !DILocalVariable(name: "value", scope: !2821, file: !463, line: 601, type: !2823)
!2821 = distinct !DILexicalBlock(scope: !2822, file: !463, line: 600, column: 40)
!2822 = distinct !DILexicalBlock(scope: !2816, file: !463, line: 600, column: 20)
!2823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !252)
!2824 = !DILocalVariable(name: "value", scope: !2825, file: !463, line: 605, type: !2761)
!2825 = distinct !DILexicalBlock(scope: !2822, file: !463, line: 604, column: 16)
!2826 = !DILocalVariable(name: "value", scope: !2827, file: !463, line: 620, type: !2831)
!2827 = distinct !DILexicalBlock(scope: !2828, file: !463, line: 619, column: 16)
!2828 = distinct !DILexicalBlock(scope: !2829, file: !463, line: 616, column: 20)
!2829 = distinct !DILexicalBlock(scope: !2830, file: !463, line: 611, column: 15)
!2830 = distinct !DILexicalBlock(scope: !2818, file: !463, line: 609, column: 14)
!2831 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10)
!2832 = !DILocalVariable(name: "l", scope: !2833, file: !463, line: 635, type: !10)
!2833 = distinct !DILexicalBlock(scope: !2813, file: !463, line: 634, column: 18)
!2834 = !DILocalVariable(name: "p", scope: !2835, file: !463, line: 655, type: !266)
!2835 = distinct !DILexicalBlock(scope: !2813, file: !463, line: 654, column: 18)
!2836 = !DILocalVariable(name: "l", scope: !2835, file: !463, line: 656, type: !10)
!2837 = !DILocalVariable(name: "is_ll", scope: !2838, file: !463, line: 684, type: !2839)
!2838 = distinct !DILexicalBlock(scope: !2813, file: !463, line: 680, column: 18)
!2839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !502)
!2840 = !DILocation(line: 0, scope: !2786)
!2841 = !{!2842, !2842, i64 0}
!2842 = !{!"any pointer", !2843, i64 0}
!2843 = !{!"omnipotent char", !2844, i64 0}
!2844 = !{!"Simple C/C++ TBAA"}
!2845 = !DILocation(line: 452, column: 8, scope: !2846)
!2846 = distinct !DILexicalBlock(scope: !2786, file: !463, line: 452, column: 7)
!2847 = !DILocation(line: 452, column: 7, scope: !2786)
!2848 = !DILocation(line: 457, column: 3, scope: !2786)
!2849 = !DILocation(line: 457, column: 11, scope: !2786)
!2850 = !DILocation(line: 457, column: 10, scope: !2786)
!2851 = !{!2843, !2843, i64 0}
!2852 = !DILocation(line: 462, column: 31, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2854, file: !463, line: 460, column: 25)
!2854 = distinct !DILexicalBlock(scope: !2804, file: !463, line: 460, column: 9)
!2855 = !DILocation(line: 462, column: 7, scope: !2853)
!2856 = !{void (i8, i8*, i32, i32)* @_out_buffer, void (i8, i8*, i32, i32)* @_out_char, void (i8, i8*, i32, i32)* @_out_fct, void (i8, i8*, i32, i32)* @_out_null}
!2857 = !DILocation(line: 463, column: 13, scope: !2853)
!2858 = !DILocation(line: 464, column: 7, scope: !2853)
!2859 = distinct !{!2859, !2848, !2860, !2694, !2695}
!2860 = !DILocation(line: 708, column: 3, scope: !2786)
!2861 = !DILocation(line: 468, column: 13, scope: !2862)
!2862 = distinct !DILexicalBlock(scope: !2854, file: !463, line: 466, column: 10)
!2863 = !DILocation(line: 473, column: 5, scope: !2804)
!2864 = !DILocation(line: 472, column: 11, scope: !2804)
!2865 = !DILocation(line: 474, column: 16, scope: !2866)
!2866 = distinct !DILexicalBlock(scope: !2804, file: !463, line: 473, column: 8)
!2867 = !DILocation(line: 474, column: 15, scope: !2866)
!2868 = !DILocation(line: 474, column: 7, scope: !2866)
!2869 = !DILocation(line: 475, column: 25, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2866, file: !463, line: 474, column: 24)
!2871 = !DILocation(line: 475, column: 49, scope: !2870)
!2872 = !DILocation(line: 475, column: 61, scope: !2870)
!2873 = !DILocation(line: 476, column: 25, scope: !2870)
!2874 = !DILocation(line: 476, column: 49, scope: !2870)
!2875 = !DILocation(line: 476, column: 61, scope: !2870)
!2876 = !DILocation(line: 477, column: 25, scope: !2870)
!2877 = !DILocation(line: 477, column: 49, scope: !2870)
!2878 = !DILocation(line: 477, column: 61, scope: !2870)
!2879 = !DILocation(line: 478, column: 25, scope: !2870)
!2880 = !DILocation(line: 478, column: 49, scope: !2870)
!2881 = !DILocation(line: 478, column: 61, scope: !2870)
!2882 = !DILocation(line: 479, column: 25, scope: !2870)
!2883 = !DILocation(line: 479, column: 49, scope: !2870)
!2884 = !DILocation(line: 479, column: 61, scope: !2870)
!2885 = !DILocation(line: 0, scope: !2870)
!2886 = !DILocation(line: 0, scope: !2804)
!2887 = !DILocation(line: 482, column: 5, scope: !2866)
!2888 = distinct !{!2888, !2863, !2889, !2694, !2695}
!2889 = !DILocation(line: 482, column: 15, scope: !2804)
!2890 = !DILocation(line: 486, column: 20, scope: !2803)
!2891 = !DILocation(line: 486, column: 19, scope: !2803)
!2892 = !DILocation(line: 486, column: 9, scope: !2803)
!2893 = !DILocation(line: 486, column: 9, scope: !2804)
!2894 = !DILocation(line: 487, column: 15, scope: !2895)
!2895 = distinct !DILexicalBlock(scope: !2803, file: !463, line: 486, column: 29)
!2896 = !DILocation(line: 488, column: 5, scope: !2895)
!2897 = !DILocation(line: 489, column: 22, scope: !2802)
!2898 = !DILocation(line: 489, column: 14, scope: !2803)
!2899 = !DILocation(line: 490, column: 21, scope: !2801)
!2900 = !DILocation(line: 0, scope: !2801)
!2901 = !DILocation(line: 491, column: 13, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2801, file: !463, line: 491, column: 11)
!2903 = !DILocation(line: 491, column: 11, scope: !2801)
!2904 = !DILocation(line: 498, column: 13, scope: !2801)
!2905 = !DILocation(line: 499, column: 5, scope: !2801)
!2906 = !DILocation(line: 503, column: 10, scope: !2810)
!2907 = !DILocation(line: 503, column: 9, scope: !2810)
!2908 = !DILocation(line: 503, column: 17, scope: !2810)
!2909 = !DILocation(line: 503, column: 9, scope: !2804)
!2910 = !DILocation(line: 504, column: 13, scope: !2809)
!2911 = !DILocation(line: 505, column: 13, scope: !2809)
!2912 = !DILocation(line: 506, column: 21, scope: !2808)
!2913 = !DILocation(line: 506, column: 11, scope: !2808)
!2914 = !DILocation(line: 506, column: 11, scope: !2809)
!2915 = !DILocation(line: 507, column: 21, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !2808, file: !463, line: 506, column: 31)
!2917 = !DILocation(line: 508, column: 7, scope: !2916)
!2918 = !DILocation(line: 509, column: 24, scope: !2807)
!2919 = !DILocation(line: 509, column: 16, scope: !2808)
!2920 = !DILocation(line: 510, column: 31, scope: !2806)
!2921 = !DILocation(line: 0, scope: !2806)
!2922 = !DILocation(line: 511, column: 26, scope: !2806)
!2923 = !DILocation(line: 511, column: 21, scope: !2806)
!2924 = !DILocation(line: 512, column: 15, scope: !2806)
!2925 = !DILocation(line: 513, column: 7, scope: !2806)
!2926 = !DILocation(line: 517, column: 14, scope: !2804)
!2927 = !DILocation(line: 517, column: 13, scope: !2804)
!2928 = !DILocation(line: 517, column: 5, scope: !2804)
!2929 = !DILocation(line: 519, column: 15, scope: !2930)
!2930 = distinct !DILexicalBlock(scope: !2804, file: !463, line: 517, column: 22)
!2931 = !DILocation(line: 520, column: 15, scope: !2930)
!2932 = !DILocation(line: 521, column: 13, scope: !2933)
!2933 = distinct !DILexicalBlock(scope: !2930, file: !463, line: 521, column: 13)
!2934 = !DILocation(line: 521, column: 21, scope: !2933)
!2935 = !DILocation(line: 521, column: 13, scope: !2930)
!2936 = !DILocation(line: 522, column: 17, scope: !2937)
!2937 = distinct !DILexicalBlock(scope: !2933, file: !463, line: 521, column: 29)
!2938 = !DILocation(line: 523, column: 17, scope: !2937)
!2939 = !DILocation(line: 524, column: 9, scope: !2937)
!2940 = !DILocation(line: 527, column: 15, scope: !2930)
!2941 = !DILocation(line: 528, column: 15, scope: !2930)
!2942 = !DILocation(line: 529, column: 13, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2930, file: !463, line: 529, column: 13)
!2944 = !DILocation(line: 529, column: 21, scope: !2943)
!2945 = !DILocation(line: 529, column: 13, scope: !2930)
!2946 = !DILocation(line: 530, column: 17, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !2943, file: !463, line: 529, column: 29)
!2948 = !DILocation(line: 531, column: 17, scope: !2947)
!2949 = !DILocation(line: 532, column: 9, scope: !2947)
!2950 = !DILocation(line: 536, column: 15, scope: !2930)
!2951 = !DILocation(line: 537, column: 15, scope: !2930)
!2952 = !DILocation(line: 538, column: 9, scope: !2930)
!2953 = !DILocation(line: 541, column: 15, scope: !2930)
!2954 = !DILocation(line: 542, column: 15, scope: !2930)
!2955 = !DILocation(line: 543, column: 9, scope: !2930)
!2956 = !DILocation(line: 545, column: 15, scope: !2930)
!2957 = !DILocation(line: 546, column: 15, scope: !2930)
!2958 = !DILocation(line: 547, column: 9, scope: !2930)
!2959 = !DILocation(line: 553, column: 14, scope: !2804)
!2960 = !DILocation(line: 553, column: 13, scope: !2804)
!2961 = !DILocation(line: 553, column: 5, scope: !2804)
!2962 = !DILocation(line: 0, scope: !2812)
!2963 = !DILocation(line: 568, column: 9, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !2965, file: !463, line: 566, column: 34)
!2965 = distinct !DILexicalBlock(scope: !2966, file: !463, line: 566, column: 18)
!2966 = distinct !DILexicalBlock(scope: !2812, file: !463, line: 563, column: 13)
!2967 = !DILocation(line: 571, column: 9, scope: !2968)
!2968 = distinct !DILexicalBlock(scope: !2969, file: !463, line: 569, column: 34)
!2969 = distinct !DILexicalBlock(scope: !2965, file: !463, line: 569, column: 18)
!2970 = !DILocation(line: 574, column: 17, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2969, file: !463, line: 572, column: 14)
!2972 = !DILocation(line: 0, scope: !2966)
!2973 = !DILocation(line: 577, column: 21, scope: !2974)
!2974 = distinct !DILexicalBlock(scope: !2812, file: !463, line: 577, column: 13)
!2975 = !DILocation(line: 577, column: 13, scope: !2812)
!2976 = !DILocation(line: 582, column: 30, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2812, file: !463, line: 582, column: 13)
!2978 = !DILocation(line: 583, column: 17, scope: !2979)
!2979 = distinct !DILexicalBlock(scope: !2977, file: !463, line: 582, column: 51)
!2980 = !DILocation(line: 584, column: 9, scope: !2979)
!2981 = !DILocation(line: 587, column: 19, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2812, file: !463, line: 587, column: 13)
!2983 = !DILocation(line: 587, column: 13, scope: !2812)
!2984 = !DILocation(line: 592, column: 30, scope: !2818)
!2985 = !DILocation(line: 594, column: 21, scope: !2816)
!2986 = !DILocation(line: 594, column: 15, scope: !2817)
!2987 = !DILocation(line: 596, column: 37, scope: !2815)
!2988 = !DILocation(line: 0, scope: !2815)
!2989 = !DILocation(line: 597, column: 82, scope: !2815)
!2990 = !DILocation(line: 597, column: 120, scope: !2815)
!2991 = !DILocation(line: 597, column: 125, scope: !2815)
!2992 = !DILocation(line: 597, column: 19, scope: !2815)
!2993 = !DILocation(line: 599, column: 11, scope: !2815)
!2994 = !DILocation(line: 600, column: 26, scope: !2822)
!2995 = !DILocation(line: 600, column: 20, scope: !2816)
!2996 = !DILocation(line: 601, column: 32, scope: !2821)
!2997 = !DILocation(line: 0, scope: !2821)
!2998 = !DILocation(line: 602, column: 72, scope: !2821)
!2999 = !DILocation(line: 602, column: 110, scope: !2821)
!3000 = !DILocation(line: 602, column: 19, scope: !2821)
!3001 = !DILocation(line: 603, column: 11, scope: !2821)
!3002 = !DILocation(line: 605, column: 38, scope: !2825)
!3003 = !DILocation(line: 605, column: 31, scope: !2825)
!3004 = !DILocation(line: 605, column: 60, scope: !2825)
!3005 = !DILocation(line: 605, column: 54, scope: !2825)
!3006 = !DILocation(line: 605, column: 85, scope: !2825)
!3007 = !DILocation(line: 0, scope: !2825)
!3008 = !DILocation(line: 605, column: 78, scope: !2825)
!3009 = !DILocation(line: 605, column: 102, scope: !2825)
!3010 = !DILocation(line: 606, column: 71, scope: !2825)
!3011 = !DILocation(line: 606, column: 109, scope: !2825)
!3012 = !DILocation(line: 606, column: 19, scope: !2825)
!3013 = !DILocation(line: 611, column: 21, scope: !2829)
!3014 = !DILocation(line: 611, column: 15, scope: !2830)
!3015 = !DILocation(line: 613, column: 61, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !2829, file: !463, line: 611, column: 40)
!3017 = !DILocation(line: 613, column: 100, scope: !3016)
!3018 = !DILocation(line: 613, column: 19, scope: !3016)
!3019 = !DILocation(line: 615, column: 11, scope: !3016)
!3020 = !DILocation(line: 616, column: 26, scope: !2828)
!3021 = !DILocation(line: 616, column: 20, scope: !2829)
!3022 = !DILocation(line: 617, column: 56, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !2828, file: !463, line: 616, column: 40)
!3024 = !DILocation(line: 617, column: 19, scope: !3023)
!3025 = !DILocation(line: 618, column: 11, scope: !3023)
!3026 = !DILocation(line: 620, column: 47, scope: !2827)
!3027 = !DILocation(line: 620, column: 40, scope: !2827)
!3028 = !DILocation(line: 620, column: 78, scope: !2827)
!3029 = !DILocation(line: 620, column: 63, scope: !2827)
!3030 = !DILocation(line: 620, column: 112, scope: !2827)
!3031 = !DILocation(line: 0, scope: !2827)
!3032 = !DILocation(line: 620, column: 105, scope: !2827)
!3033 = !DILocation(line: 621, column: 19, scope: !2827)
!3034 = !DILocation(line: 0, scope: !2818)
!3035 = !DILocation(line: 624, column: 15, scope: !2812)
!3036 = !DILocation(line: 630, column: 47, scope: !2813)
!3037 = !DILocation(line: 630, column: 15, scope: !2813)
!3038 = !DILocation(line: 631, column: 15, scope: !2813)
!3039 = !DILocation(line: 632, column: 9, scope: !2813)
!3040 = !DILocation(line: 0, scope: !2833)
!3041 = !DILocation(line: 637, column: 21, scope: !3042)
!3042 = distinct !DILexicalBlock(scope: !2833, file: !463, line: 637, column: 13)
!3043 = !DILocation(line: 637, column: 13, scope: !2833)
!3044 = !DILocation(line: 638, column: 22, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3042, file: !463, line: 637, column: 36)
!3046 = !DILocation(line: 638, column: 11, scope: !3045)
!3047 = !DILocation(line: 639, column: 33, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3045, file: !463, line: 638, column: 31)
!3049 = !DILocation(line: 639, column: 13, scope: !3048)
!3050 = !DILocation(line: 638, column: 19, scope: !3045)
!3051 = distinct !{!3051, !3046, !3052, !2694, !2695}
!3052 = !DILocation(line: 640, column: 11, scope: !3045)
!3053 = !DILocation(line: 450, column: 10, scope: !2786)
!3054 = !DILocation(line: 643, column: 19, scope: !2833)
!3055 = !DILocation(line: 643, column: 13, scope: !2833)
!3056 = !DILocation(line: 643, column: 47, scope: !2833)
!3057 = !DILocation(line: 643, column: 9, scope: !2833)
!3058 = !DILocation(line: 645, column: 13, scope: !2833)
!3059 = !DILocation(line: 646, column: 19, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3061, file: !463, line: 645, column: 33)
!3061 = distinct !DILexicalBlock(scope: !2833, file: !463, line: 645, column: 13)
!3062 = !DILocation(line: 647, column: 33, scope: !3063)
!3063 = distinct !DILexicalBlock(scope: !3060, file: !463, line: 646, column: 31)
!3064 = !DILocation(line: 647, column: 13, scope: !3063)
!3065 = !DILocation(line: 646, column: 22, scope: !3060)
!3066 = !DILocation(line: 646, column: 11, scope: !3060)
!3067 = distinct !{!3067, !3066, !3068, !2694, !2695}
!3068 = !DILocation(line: 648, column: 11, scope: !3060)
!3069 = !DILocation(line: 650, column: 15, scope: !2833)
!3070 = !DILocation(line: 655, column: 25, scope: !2835)
!3071 = !DILocation(line: 0, scope: !2835)
!3072 = !DILocation(line: 656, column: 40, scope: !2835)
!3073 = !DILocation(line: 656, column: 26, scope: !2835)
!3074 = !DILocation(line: 658, column: 19, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !2835, file: !463, line: 658, column: 13)
!3076 = !DILocation(line: 658, column: 13, scope: !2835)
!3077 = !DILocation(line: 661, column: 21, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !2835, file: !463, line: 661, column: 13)
!3079 = !DILocation(line: 661, column: 13, scope: !2835)
!3080 = !DILocation(line: 662, column: 19, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3078, file: !463, line: 661, column: 36)
!3082 = !DILocation(line: 662, column: 22, scope: !3081)
!3083 = !DILocation(line: 662, column: 11, scope: !3081)
!3084 = !DILocation(line: 663, column: 33, scope: !3085)
!3085 = distinct !DILexicalBlock(scope: !3081, file: !463, line: 662, column: 31)
!3086 = !DILocation(line: 663, column: 13, scope: !3085)
!3087 = distinct !{!3087, !3083, !3088, !2694, !2695}
!3088 = !DILocation(line: 664, column: 11, scope: !3081)
!3089 = !DILocation(line: 667, column: 17, scope: !2835)
!3090 = !DILocation(line: 667, column: 20, scope: !2835)
!3091 = !DILocation(line: 667, column: 26, scope: !2835)
!3092 = !DILocation(line: 667, column: 57, scope: !2835)
!3093 = !DILocation(line: 667, column: 69, scope: !2835)
!3094 = !DILocation(line: 667, column: 9, scope: !2835)
!3095 = !DILocation(line: 668, column: 18, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !2835, file: !463, line: 667, column: 74)
!3097 = !DILocation(line: 668, column: 34, scope: !3096)
!3098 = !DILocation(line: 668, column: 11, scope: !3096)
!3099 = distinct !{!3099, !3094, !3100, !2694, !2695}
!3100 = !DILocation(line: 669, column: 9, scope: !2835)
!3101 = !DILocation(line: 671, column: 13, scope: !2835)
!3102 = !DILocation(line: 672, column: 19, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3104, file: !463, line: 671, column: 33)
!3104 = distinct !DILexicalBlock(scope: !2835, file: !463, line: 671, column: 13)
!3105 = !DILocation(line: 673, column: 33, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3103, file: !463, line: 672, column: 31)
!3107 = !DILocation(line: 673, column: 13, scope: !3106)
!3108 = !DILocation(line: 672, column: 22, scope: !3103)
!3109 = !DILocation(line: 672, column: 11, scope: !3103)
!3110 = distinct !{!3110, !3109, !3111, !2694, !2695}
!3111 = !DILocation(line: 674, column: 11, scope: !3103)
!3112 = !DILocation(line: 676, column: 15, scope: !2835)
!3113 = !DILocation(line: 682, column: 15, scope: !2838)
!3114 = !DILocation(line: 0, scope: !2838)
!3115 = !DILocation(line: 690, column: 81, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3117, file: !463, line: 688, column: 14)
!3117 = distinct !DILexicalBlock(scope: !2838, file: !463, line: 685, column: 13)
!3118 = !DILocation(line: 690, column: 70, scope: !3116)
!3119 = !DILocation(line: 690, column: 17, scope: !3116)
!3120 = !DILocation(line: 694, column: 15, scope: !2838)
!3121 = !DILocation(line: 699, column: 29, scope: !2813)
!3122 = !DILocation(line: 699, column: 9, scope: !2813)
!3123 = !DILocation(line: 700, column: 15, scope: !2813)
!3124 = !DILocation(line: 701, column: 9, scope: !2813)
!3125 = !DILocation(line: 704, column: 33, scope: !2813)
!3126 = !DILocation(line: 704, column: 9, scope: !2813)
!3127 = !DILocation(line: 705, column: 15, scope: !2813)
!3128 = !DILocation(line: 706, column: 9, scope: !2813)
!3129 = !DILocation(line: 711, column: 28, scope: !2786)
!3130 = !DILocation(line: 711, column: 24, scope: !2786)
!3131 = !DILocation(line: 711, column: 3, scope: !2786)
!3132 = !DILocation(line: 714, column: 3, scope: !2786)
!3133 = distinct !DISubprogram(name: "_out_null", scope: !463, file: !463, line: 117, type: !468, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !470, retainedNodes: !3134)
!3134 = !{!3135, !3136, !3137, !3138}
!3135 = !DILocalVariable(name: "character", arg: 1, scope: !3133, file: !463, line: 117, type: !130)
!3136 = !DILocalVariable(name: "buffer", arg: 2, scope: !3133, file: !463, line: 117, type: !279)
!3137 = !DILocalVariable(name: "idx", arg: 3, scope: !3133, file: !463, line: 117, type: !282)
!3138 = !DILocalVariable(name: "maxlen", arg: 4, scope: !3133, file: !463, line: 117, type: !282)
!3139 = !DILocation(line: 0, scope: !3133)
!3140 = !DILocation(line: 120, column: 1, scope: !3133)
!3141 = distinct !DISubprogram(name: "_out_buffer", scope: !463, file: !463, line: 108, type: !468, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !470, retainedNodes: !3142)
!3142 = !{!3143, !3144, !3145, !3146}
!3143 = !DILocalVariable(name: "character", arg: 1, scope: !3141, file: !463, line: 108, type: !130)
!3144 = !DILocalVariable(name: "buffer", arg: 2, scope: !3141, file: !463, line: 108, type: !279)
!3145 = !DILocalVariable(name: "idx", arg: 3, scope: !3141, file: !463, line: 108, type: !282)
!3146 = !DILocalVariable(name: "maxlen", arg: 4, scope: !3141, file: !463, line: 108, type: !282)
!3147 = !DILocation(line: 0, scope: !3141)
!3148 = !DILocation(line: 110, column: 11, scope: !3149)
!3149 = distinct !DILexicalBlock(scope: !3141, file: !463, line: 110, column: 7)
!3150 = !DILocation(line: 110, column: 7, scope: !3141)
!3151 = !DILocation(line: 111, column: 5, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !3149, file: !463, line: 110, column: 21)
!3153 = !DILocation(line: 111, column: 26, scope: !3152)
!3154 = !DILocation(line: 112, column: 3, scope: !3152)
!3155 = !DILocation(line: 113, column: 1, scope: !3141)
!3156 = distinct !DISubprogram(name: "_out_fct", scope: !463, file: !463, line: 134, type: !468, scopeLine: 135, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !470, retainedNodes: !3157)
!3157 = !{!3158, !3159, !3160, !3161}
!3158 = !DILocalVariable(name: "character", arg: 1, scope: !3156, file: !463, line: 134, type: !130)
!3159 = !DILocalVariable(name: "buffer", arg: 2, scope: !3156, file: !463, line: 134, type: !279)
!3160 = !DILocalVariable(name: "idx", arg: 3, scope: !3156, file: !463, line: 134, type: !282)
!3161 = !DILocalVariable(name: "maxlen", arg: 4, scope: !3156, file: !463, line: 134, type: !282)
!3162 = !DILocation(line: 0, scope: !3156)
!3163 = !DILocation(line: 137, column: 7, scope: !3164)
!3164 = distinct !DILexicalBlock(scope: !3156, file: !463, line: 137, column: 7)
!3165 = !DILocation(line: 137, column: 7, scope: !3156)
!3166 = !DILocation(line: 139, column: 35, scope: !3167)
!3167 = distinct !DILexicalBlock(scope: !3164, file: !463, line: 137, column: 18)
!3168 = !{!3169, !2842, i64 0}
!3169 = !{!"", !2842, i64 0, !2842, i64 4}
!3170 = !DILocation(line: 139, column: 80, scope: !3167)
!3171 = !{!3169, !2842, i64 4}
!3172 = !DILocation(line: 139, column: 5, scope: !3167)
!3173 = !DILocation(line: 140, column: 3, scope: !3167)
!3174 = !DILocation(line: 141, column: 1, scope: !3156)
!3175 = distinct !DISubprogram(name: "_is_digit", scope: !463, file: !463, line: 156, type: !3176, scopeLine: 157, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !470, retainedNodes: !3178)
!3176 = !DISubroutineType(types: !3177)
!3177 = !{!502, !130}
!3178 = !{!3179}
!3179 = !DILocalVariable(name: "ch", arg: 1, scope: !3175, file: !463, line: 156, type: !130)
!3180 = !DILocation(line: 0, scope: !3175)
!3181 = !DILocation(line: 158, column: 22, scope: !3175)
!3182 = !DILocation(line: 158, column: 3, scope: !3175)
!3183 = distinct !DISubprogram(name: "_atoi", scope: !463, file: !463, line: 163, type: !3184, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !470, retainedNodes: !3187)
!3184 = !DISubroutineType(types: !3185)
!3185 = !{!10, !3186}
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 32)
!3187 = !{!3188, !3189}
!3188 = !DILocalVariable(name: "str", arg: 1, scope: !3183, file: !463, line: 163, type: !3186)
!3189 = !DILocalVariable(name: "i", scope: !3183, file: !463, line: 165, type: !10)
!3190 = !DILocation(line: 0, scope: !3183)
!3191 = !DILocation(line: 166, column: 21, scope: !3183)
!3192 = !DILocation(line: 166, column: 20, scope: !3183)
!3193 = !DILocation(line: 166, column: 10, scope: !3183)
!3194 = !DILocation(line: 166, column: 3, scope: !3183)
!3195 = !DILocation(line: 167, column: 11, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3183, file: !463, line: 166, column: 28)
!3197 = !DILocation(line: 167, column: 42, scope: !3196)
!3198 = !DILocation(line: 167, column: 34, scope: !3196)
!3199 = !DILocation(line: 167, column: 46, scope: !3196)
!3200 = !DILocation(line: 167, column: 17, scope: !3196)
!3201 = distinct !{!3201, !3194, !3202, !2694, !2695}
!3202 = !DILocation(line: 168, column: 3, scope: !3183)
!3203 = !DILocation(line: 169, column: 3, scope: !3183)
!3204 = distinct !DISubprogram(name: "_ntoa_long_long", scope: !463, file: !463, line: 274, type: !3205, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !470, retainedNodes: !3207)
!3205 = !DISubroutineType(types: !3206)
!3206 = !{!282, !466, !308, !282, !282, !210, !502, !210, !10, !10, !10}
!3207 = !{!3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220}
!3208 = !DILocalVariable(name: "out", arg: 1, scope: !3204, file: !463, line: 274, type: !466)
!3209 = !DILocalVariable(name: "buffer", arg: 2, scope: !3204, file: !463, line: 274, type: !308)
!3210 = !DILocalVariable(name: "idx", arg: 3, scope: !3204, file: !463, line: 274, type: !282)
!3211 = !DILocalVariable(name: "maxlen", arg: 4, scope: !3204, file: !463, line: 274, type: !282)
!3212 = !DILocalVariable(name: "value", arg: 5, scope: !3204, file: !463, line: 274, type: !210)
!3213 = !DILocalVariable(name: "negative", arg: 6, scope: !3204, file: !463, line: 274, type: !502)
!3214 = !DILocalVariable(name: "base", arg: 7, scope: !3204, file: !463, line: 274, type: !210)
!3215 = !DILocalVariable(name: "prec", arg: 8, scope: !3204, file: !463, line: 274, type: !10)
!3216 = !DILocalVariable(name: "width", arg: 9, scope: !3204, file: !463, line: 274, type: !10)
!3217 = !DILocalVariable(name: "flags", arg: 10, scope: !3204, file: !463, line: 274, type: !10)
!3218 = !DILocalVariable(name: "buf", scope: !3204, file: !463, line: 276, type: !494)
!3219 = !DILocalVariable(name: "len", scope: !3204, file: !463, line: 277, type: !282)
!3220 = !DILocalVariable(name: "digit", scope: !3221, file: !463, line: 287, type: !144)
!3221 = distinct !DILexicalBlock(scope: !3222, file: !463, line: 286, column: 8)
!3222 = distinct !DILexicalBlock(scope: !3223, file: !463, line: 285, column: 44)
!3223 = distinct !DILexicalBlock(scope: !3204, file: !463, line: 285, column: 7)
!3224 = !DILocation(line: 0, scope: !3204)
!3225 = !DILocation(line: 276, column: 3, scope: !3204)
!3226 = !DILocation(line: 276, column: 8, scope: !3204)
!3227 = !DILocation(line: 280, column: 8, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3204, file: !463, line: 280, column: 7)
!3229 = !DILocation(line: 280, column: 7, scope: !3204)
!3230 = !DILocation(line: 285, column: 15, scope: !3223)
!3231 = !DILocation(line: 285, column: 34, scope: !3223)
!3232 = !DILocation(line: 286, column: 5, scope: !3222)
!3233 = !DILocation(line: 289, column: 13, scope: !3221)
!3234 = !DILocation(line: 287, column: 26, scope: !3221)
!3235 = !DILocation(line: 288, column: 20, scope: !3221)
!3236 = !DILocation(line: 0, scope: !3221)
!3237 = !DILocation(line: 288, column: 26, scope: !3221)
!3238 = !DILocation(line: 288, column: 14, scope: !3221)
!3239 = !DILocation(line: 288, column: 7, scope: !3221)
!3240 = !DILocation(line: 288, column: 18, scope: !3221)
!3241 = !DILocation(line: 290, column: 14, scope: !3222)
!3242 = !DILocation(line: 290, column: 20, scope: !3222)
!3243 = !DILocation(line: 290, column: 5, scope: !3221)
!3244 = distinct !{!3244, !3232, !3245, !2694, !2695}
!3245 = !DILocation(line: 290, column: 54, scope: !3222)
!3246 = !DILocation(line: 293, column: 69, scope: !3204)
!3247 = !DILocation(line: 293, column: 10, scope: !3204)
!3248 = !DILocation(line: 294, column: 1, scope: !3204)
!3249 = !DILocation(line: 293, column: 3, scope: !3204)
!3250 = distinct !DISubprogram(name: "_ntoa_long", scope: !463, file: !463, line: 249, type: !3251, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !470, retainedNodes: !3253)
!3251 = !DISubroutineType(types: !3252)
!3252 = !{!282, !466, !308, !282, !282, !362, !502, !362, !10, !10, !10}
!3253 = !{!3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266}
!3254 = !DILocalVariable(name: "out", arg: 1, scope: !3250, file: !463, line: 249, type: !466)
!3255 = !DILocalVariable(name: "buffer", arg: 2, scope: !3250, file: !463, line: 249, type: !308)
!3256 = !DILocalVariable(name: "idx", arg: 3, scope: !3250, file: !463, line: 249, type: !282)
!3257 = !DILocalVariable(name: "maxlen", arg: 4, scope: !3250, file: !463, line: 249, type: !282)
!3258 = !DILocalVariable(name: "value", arg: 5, scope: !3250, file: !463, line: 249, type: !362)
!3259 = !DILocalVariable(name: "negative", arg: 6, scope: !3250, file: !463, line: 249, type: !502)
!3260 = !DILocalVariable(name: "base", arg: 7, scope: !3250, file: !463, line: 249, type: !362)
!3261 = !DILocalVariable(name: "prec", arg: 8, scope: !3250, file: !463, line: 249, type: !10)
!3262 = !DILocalVariable(name: "width", arg: 9, scope: !3250, file: !463, line: 249, type: !10)
!3263 = !DILocalVariable(name: "flags", arg: 10, scope: !3250, file: !463, line: 249, type: !10)
!3264 = !DILocalVariable(name: "buf", scope: !3250, file: !463, line: 251, type: !494)
!3265 = !DILocalVariable(name: "len", scope: !3250, file: !463, line: 252, type: !282)
!3266 = !DILocalVariable(name: "digit", scope: !3267, file: !463, line: 262, type: !144)
!3267 = distinct !DILexicalBlock(scope: !3268, file: !463, line: 261, column: 8)
!3268 = distinct !DILexicalBlock(scope: !3269, file: !463, line: 260, column: 44)
!3269 = distinct !DILexicalBlock(scope: !3250, file: !463, line: 260, column: 7)
!3270 = !DILocation(line: 0, scope: !3250)
!3271 = !DILocation(line: 251, column: 3, scope: !3250)
!3272 = !DILocation(line: 251, column: 8, scope: !3250)
!3273 = !DILocation(line: 255, column: 8, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3250, file: !463, line: 255, column: 7)
!3275 = !DILocation(line: 255, column: 7, scope: !3250)
!3276 = !DILocation(line: 260, column: 15, scope: !3269)
!3277 = !DILocation(line: 260, column: 34, scope: !3269)
!3278 = !DILocation(line: 261, column: 5, scope: !3268)
!3279 = !DILocation(line: 264, column: 13, scope: !3267)
!3280 = !DILocation(line: 263, column: 20, scope: !3267)
!3281 = !DILocation(line: 0, scope: !3267)
!3282 = !DILocation(line: 263, column: 26, scope: !3267)
!3283 = !DILocation(line: 263, column: 14, scope: !3267)
!3284 = !DILocation(line: 263, column: 7, scope: !3267)
!3285 = !DILocation(line: 263, column: 18, scope: !3267)
!3286 = !DILocation(line: 265, column: 14, scope: !3268)
!3287 = !DILocation(line: 265, column: 20, scope: !3268)
!3288 = !DILocation(line: 265, column: 5, scope: !3267)
!3289 = distinct !{!3289, !3278, !3290, !2694, !2695}
!3290 = !DILocation(line: 265, column: 54, scope: !3268)
!3291 = !DILocation(line: 268, column: 10, scope: !3250)
!3292 = !DILocation(line: 269, column: 1, scope: !3250)
!3293 = !DILocation(line: 268, column: 3, scope: !3250)
!3294 = !DILocation(line: 0, scope: !462)
!3295 = !DILocation(line: 303, column: 3, scope: !462)
!3296 = !DILocation(line: 303, column: 8, scope: !462)
!3297 = !DILocation(line: 314, column: 13, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !462, file: !463, line: 314, column: 7)
!3299 = !DILocation(line: 314, column: 7, scope: !462)
!3300 = !DILocation(line: 315, column: 25, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3298, file: !463, line: 314, column: 23)
!3302 = !DILocation(line: 315, column: 5, scope: !3301)
!3303 = !DILocation(line: 316, column: 25, scope: !3301)
!3304 = !DILocation(line: 316, column: 5, scope: !3301)
!3305 = !DILocation(line: 317, column: 25, scope: !3301)
!3306 = !DILocation(line: 317, column: 5, scope: !3301)
!3307 = !DILocation(line: 318, column: 5, scope: !3301)
!3308 = !DILocation(line: 323, column: 13, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !462, file: !463, line: 323, column: 7)
!3310 = !DILocation(line: 323, column: 7, scope: !462)
!3311 = !DILocation(line: 329, column: 15, scope: !3312)
!3312 = distinct !DILexicalBlock(scope: !462, file: !463, line: 329, column: 7)
!3313 = !DILocation(line: 329, column: 7, scope: !462)
!3314 = !DILocation(line: 333, column: 42, scope: !462)
!3315 = !DILocation(line: 333, column: 3, scope: !462)
!3316 = !DILocation(line: 334, column: 16, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !462, file: !463, line: 333, column: 58)
!3318 = !DILocation(line: 334, column: 12, scope: !3317)
!3319 = !DILocation(line: 335, column: 9, scope: !3317)
!3320 = distinct !{!3320, !3315, !3321, !2694, !2695}
!3321 = !DILocation(line: 336, column: 3, scope: !462)
!3322 = !DILocation(line: 333, column: 15, scope: !462)
!3323 = !DILocation(line: 338, column: 15, scope: !462)
!3324 = !DILocation(line: 339, column: 25, scope: !462)
!3325 = !DILocation(line: 339, column: 23, scope: !462)
!3326 = !DILocation(line: 339, column: 34, scope: !462)
!3327 = !{!3328, !3328, i64 0}
!3328 = !{!"double", !2843, i64 0}
!3329 = !DILocation(line: 339, column: 32, scope: !462)
!3330 = !DILocation(line: 340, column: 24, scope: !462)
!3331 = !DILocation(line: 341, column: 16, scope: !462)
!3332 = !DILocation(line: 341, column: 14, scope: !462)
!3333 = !DILocation(line: 343, column: 12, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !462, file: !463, line: 343, column: 7)
!3335 = !DILocation(line: 343, column: 7, scope: !462)
!3336 = !DILocation(line: 344, column: 5, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3334, file: !463, line: 343, column: 19)
!3338 = !DILocation(line: 346, column: 9, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3337, file: !463, line: 346, column: 9)
!3340 = !DILocation(line: 346, column: 14, scope: !3339)
!3341 = !DILocation(line: 346, column: 9, scope: !3337)
!3342 = !DILocation(line: 348, column: 7, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3339, file: !463, line: 346, column: 30)
!3344 = !DILocation(line: 349, column: 5, scope: !3343)
!3345 = !DILocation(line: 351, column: 17, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3334, file: !463, line: 351, column: 12)
!3347 = !DILocation(line: 351, column: 12, scope: !3334)
!3348 = !DILocation(line: 353, column: 18, scope: !3349)
!3349 = distinct !DILexicalBlock(scope: !3346, file: !463, line: 353, column: 12)
!3350 = !DILocation(line: 353, column: 25, scope: !3349)
!3351 = !DILocation(line: 360, column: 13, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !462, file: !463, line: 360, column: 7)
!3353 = !DILocation(line: 360, column: 7, scope: !462)
!3354 = !DILocation(line: 364, column: 12, scope: !508)
!3355 = !DILocation(line: 364, column: 7, scope: !462)
!3356 = !DILocation(line: 365, column: 20, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !508, file: !463, line: 364, column: 19)
!3358 = !DILocation(line: 365, column: 18, scope: !3357)
!3359 = !DILocation(line: 366, column: 24, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3357, file: !463, line: 366, column: 9)
!3361 = !DILocation(line: 0, scope: !507)
!3362 = !DILocation(line: 375, column: 5, scope: !507)
!3363 = !DILocation(line: 376, column: 7, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !507, file: !463, line: 375, column: 43)
!3365 = !DILocation(line: 378, column: 18, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3364, file: !463, line: 378, column: 11)
!3367 = !DILocation(line: 377, column: 20, scope: !3364)
!3368 = !DILocation(line: 377, column: 14, scope: !3364)
!3369 = !DILocation(line: 377, column: 7, scope: !3364)
!3370 = !DILocation(line: 377, column: 18, scope: !3364)
!3371 = !DILocation(line: 378, column: 11, scope: !3364)
!3372 = distinct !{!3372, !3362, !3373, !2694, !2695}
!3373 = !DILocation(line: 381, column: 5, scope: !507)
!3374 = !DILocation(line: 383, column: 17, scope: !507)
!3375 = !DILocation(line: 383, column: 44, scope: !507)
!3376 = !DILocation(line: 383, column: 53, scope: !507)
!3377 = !DILocation(line: 384, column: 14, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !507, file: !463, line: 383, column: 63)
!3379 = !DILocation(line: 384, column: 7, scope: !3378)
!3380 = !DILocation(line: 384, column: 18, scope: !3378)
!3381 = distinct !{!3381, !3382, !3383, !2694, !2695}
!3382 = !DILocation(line: 383, column: 5, scope: !507)
!3383 = !DILocation(line: 385, column: 5, scope: !507)
!3384 = !DILocation(line: 386, column: 9, scope: !507)
!3385 = !DILocation(line: 388, column: 14, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3387, file: !463, line: 386, column: 40)
!3387 = distinct !DILexicalBlock(scope: !507, file: !463, line: 386, column: 9)
!3388 = !DILocation(line: 388, column: 7, scope: !3386)
!3389 = !DILocation(line: 388, column: 18, scope: !3386)
!3390 = !DILocation(line: 389, column: 5, scope: !3386)
!3391 = !DILocation(line: 393, column: 14, scope: !462)
!3392 = !DILocation(line: 393, column: 3, scope: !462)
!3393 = !DILocation(line: 395, column: 17, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3395, file: !463, line: 395, column: 9)
!3395 = distinct !DILexicalBlock(scope: !462, file: !463, line: 393, column: 41)
!3396 = !DILocation(line: 394, column: 18, scope: !3395)
!3397 = !DILocation(line: 394, column: 12, scope: !3395)
!3398 = !DILocation(line: 394, column: 5, scope: !3395)
!3399 = !DILocation(line: 394, column: 16, scope: !3395)
!3400 = !DILocation(line: 395, column: 9, scope: !3395)
!3401 = distinct !{!3401, !3392, !3402, !2694, !2695}
!3402 = !DILocation(line: 398, column: 3, scope: !462)
!3403 = !DILocation(line: 401, column: 15, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !462, file: !463, line: 401, column: 7)
!3405 = !DILocation(line: 401, column: 29, scope: !3404)
!3406 = !DILocation(line: 402, column: 9, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3408, file: !463, line: 402, column: 9)
!3408 = distinct !DILexicalBlock(scope: !3404, file: !463, line: 401, column: 57)
!3409 = !DILocation(line: 402, column: 15, scope: !3407)
!3410 = !DILocation(line: 402, column: 28, scope: !3407)
!3411 = !DILocation(line: 405, column: 17, scope: !3408)
!3412 = !DILocation(line: 405, column: 26, scope: !3408)
!3413 = !DILocation(line: 405, column: 5, scope: !3408)
!3414 = !DILocation(line: 406, column: 18, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3408, file: !463, line: 405, column: 62)
!3416 = !DILocation(line: 410, column: 11, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !462, file: !463, line: 410, column: 7)
!3418 = !DILocation(line: 410, column: 7, scope: !462)
!3419 = !DILocation(line: 411, column: 9, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3417, file: !463, line: 410, column: 38)
!3421 = !DILocation(line: 414, column: 20, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3423, file: !463, line: 414, column: 14)
!3423 = distinct !DILexicalBlock(scope: !3420, file: !463, line: 411, column: 9)
!3424 = !DILocation(line: 414, column: 14, scope: !3423)
!3425 = !DILocation(line: 417, column: 20, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3422, file: !463, line: 417, column: 14)
!3427 = !DILocation(line: 417, column: 14, scope: !3422)
!3428 = !DILocation(line: 0, scope: !3423)
!3429 = !DILocation(line: 423, column: 29, scope: !512)
!3430 = !DILocation(line: 0, scope: !510)
!3431 = !DILocation(line: 425, column: 27, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3433, file: !463, line: 424, column: 42)
!3433 = distinct !DILexicalBlock(scope: !510, file: !463, line: 424, column: 5)
!3434 = !DILocation(line: 425, column: 7, scope: !3432)
!3435 = !DILocation(line: 424, column: 38, scope: !3433)
!3436 = !DILocation(line: 424, column: 28, scope: !3433)
!3437 = !DILocation(line: 424, column: 5, scope: !510)
!3438 = distinct !{!3438, !3437, !3439, !2694, !2695}
!3439 = !DILocation(line: 426, column: 5, scope: !510)
!3440 = !DILocation(line: 0, scope: !514)
!3441 = !DILocation(line: 430, column: 25, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !514, file: !463, line: 430, column: 3)
!3443 = !DILocation(line: 430, column: 3, scope: !514)
!3444 = !DILocation(line: 435, column: 7, scope: !462)
!3445 = !DILocation(line: 431, column: 21, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3442, file: !463, line: 430, column: 37)
!3447 = !DILocation(line: 431, column: 9, scope: !3446)
!3448 = !DILocation(line: 431, column: 39, scope: !3446)
!3449 = !DILocation(line: 431, column: 5, scope: !3446)
!3450 = !DILocation(line: 430, column: 33, scope: !3442)
!3451 = distinct !{!3451, !3443, !3452, !2694, !2695}
!3452 = !DILocation(line: 432, column: 3, scope: !514)
!3453 = !DILocation(line: 437, column: 27, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3455, file: !463, line: 436, column: 37)
!3455 = distinct !DILexicalBlock(scope: !3456, file: !463, line: 435, column: 27)
!3456 = distinct !DILexicalBlock(scope: !462, file: !463, line: 435, column: 7)
!3457 = !DILocation(line: 437, column: 7, scope: !3454)
!3458 = !DILocation(line: 436, column: 16, scope: !3455)
!3459 = !DILocation(line: 436, column: 28, scope: !3455)
!3460 = !DILocation(line: 436, column: 5, scope: !3455)
!3461 = distinct !{!3461, !3460, !3462, !2694, !2695}
!3462 = !DILocation(line: 438, column: 5, scope: !3455)
!3463 = !DILocation(line: 442, column: 1, scope: !462)
!3464 = distinct !DISubprogram(name: "_strnlen_s", scope: !463, file: !463, line: 146, type: !3465, scopeLine: 147, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !470, retainedNodes: !3467)
!3465 = !DISubroutineType(types: !3466)
!3466 = !{!10, !266, !282}
!3467 = !{!3468, !3469, !3470}
!3468 = !DILocalVariable(name: "str", arg: 1, scope: !3464, file: !463, line: 146, type: !266)
!3469 = !DILocalVariable(name: "maxsize", arg: 2, scope: !3464, file: !463, line: 146, type: !282)
!3470 = !DILocalVariable(name: "s", scope: !3464, file: !463, line: 148, type: !266)
!3471 = !DILocation(line: 0, scope: !3464)
!3472 = !DILocation(line: 149, column: 17, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3474, file: !463, line: 149, column: 3)
!3474 = distinct !DILexicalBlock(scope: !3464, file: !463, line: 149, column: 3)
!3475 = !DILocation(line: 149, column: 20, scope: !3473)
!3476 = !DILocation(line: 149, column: 30, scope: !3473)
!3477 = !DILocation(line: 149, column: 34, scope: !3473)
!3478 = distinct !{!3478, !3479, !3480, !2694, !2695}
!3479 = !DILocation(line: 149, column: 3, scope: !3474)
!3480 = !DILocation(line: 149, column: 38, scope: !3474)
!3481 = !DILocation(line: 0, scope: !3474)
!3482 = !DILocation(line: 150, column: 27, scope: !3464)
!3483 = !DILocation(line: 150, column: 3, scope: !3464)
!3484 = distinct !DISubprogram(name: "_ntoa_format", scope: !463, file: !463, line: 174, type: !3485, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !470, retainedNodes: !3487)
!3485 = !DISubroutineType(types: !3486)
!3486 = !{!282, !466, !308, !282, !282, !308, !282, !502, !10, !10, !10, !10}
!3487 = !{!3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500, !3504}
!3488 = !DILocalVariable(name: "out", arg: 1, scope: !3484, file: !463, line: 174, type: !466)
!3489 = !DILocalVariable(name: "buffer", arg: 2, scope: !3484, file: !463, line: 174, type: !308)
!3490 = !DILocalVariable(name: "idx", arg: 3, scope: !3484, file: !463, line: 174, type: !282)
!3491 = !DILocalVariable(name: "maxlen", arg: 4, scope: !3484, file: !463, line: 174, type: !282)
!3492 = !DILocalVariable(name: "buf", arg: 5, scope: !3484, file: !463, line: 174, type: !308)
!3493 = !DILocalVariable(name: "len", arg: 6, scope: !3484, file: !463, line: 174, type: !282)
!3494 = !DILocalVariable(name: "negative", arg: 7, scope: !3484, file: !463, line: 174, type: !502)
!3495 = !DILocalVariable(name: "base", arg: 8, scope: !3484, file: !463, line: 174, type: !10)
!3496 = !DILocalVariable(name: "prec", arg: 9, scope: !3484, file: !463, line: 174, type: !10)
!3497 = !DILocalVariable(name: "width", arg: 10, scope: !3484, file: !463, line: 174, type: !10)
!3498 = !DILocalVariable(name: "flags", arg: 11, scope: !3484, file: !463, line: 174, type: !10)
!3499 = !DILocalVariable(name: "start_idx", scope: !3484, file: !463, line: 176, type: !492)
!3500 = !DILocalVariable(name: "i", scope: !3501, file: !463, line: 227, type: !282)
!3501 = distinct !DILexicalBlock(scope: !3502, file: !463, line: 227, column: 5)
!3502 = distinct !DILexicalBlock(scope: !3503, file: !463, line: 226, column: 58)
!3503 = distinct !DILexicalBlock(scope: !3484, file: !463, line: 226, column: 7)
!3504 = !DILocalVariable(name: "i", scope: !3505, file: !463, line: 233, type: !282)
!3505 = distinct !DILexicalBlock(scope: !3484, file: !463, line: 233, column: 3)
!3506 = !DILocation(line: 0, scope: !3484)
!3507 = !DILocation(line: 179, column: 15, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3484, file: !463, line: 179, column: 7)
!3509 = !DILocation(line: 179, column: 7, scope: !3484)
!3510 = !DILocation(line: 180, column: 9, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3512, file: !463, line: 180, column: 9)
!3512 = distinct !DILexicalBlock(scope: !3508, file: !463, line: 179, column: 30)
!3513 = !DILocation(line: 180, column: 15, scope: !3511)
!3514 = !DILocation(line: 180, column: 25, scope: !3511)
!3515 = !DILocation(line: 180, column: 42, scope: !3511)
!3516 = !DILocation(line: 180, column: 55, scope: !3511)
!3517 = !DILocation(line: 183, column: 17, scope: !3512)
!3518 = !DILocation(line: 183, column: 25, scope: !3512)
!3519 = !DILocation(line: 183, column: 5, scope: !3512)
!3520 = !DILocation(line: 184, column: 18, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3512, file: !463, line: 183, column: 61)
!3522 = !DILocation(line: 186, column: 36, scope: !3512)
!3523 = !DILocation(line: 186, column: 44, scope: !3512)
!3524 = !DILocation(line: 186, column: 53, scope: !3512)
!3525 = !DILocation(line: 187, column: 14, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3512, file: !463, line: 186, column: 89)
!3527 = !DILocation(line: 187, column: 7, scope: !3526)
!3528 = !DILocation(line: 187, column: 18, scope: !3526)
!3529 = distinct !{!3529, !3530, !3531, !2694, !2695}
!3530 = !DILocation(line: 186, column: 5, scope: !3512)
!3531 = !DILocation(line: 188, column: 5, scope: !3512)
!3532 = !DILocation(line: 192, column: 13, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3484, file: !463, line: 192, column: 7)
!3534 = !DILocation(line: 192, column: 7, scope: !3484)
!3535 = !DILocation(line: 193, column: 17, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3537, file: !463, line: 193, column: 9)
!3537 = distinct !DILexicalBlock(scope: !3533, file: !463, line: 192, column: 27)
!3538 = !DILocation(line: 193, column: 36, scope: !3536)
!3539 = !DILocation(line: 193, column: 52, scope: !3536)
!3540 = !DILocation(line: 193, column: 61, scope: !3536)
!3541 = !DILocation(line: 194, column: 10, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3536, file: !463, line: 193, column: 81)
!3543 = !DILocation(line: 195, column: 11, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3542, file: !463, line: 195, column: 11)
!3545 = !DILocation(line: 195, column: 15, scope: !3544)
!3546 = !DILocation(line: 199, column: 15, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3537, file: !463, line: 199, column: 9)
!3548 = !DILocation(line: 199, column: 23, scope: !3547)
!3549 = !DILocation(line: 199, column: 34, scope: !3547)
!3550 = !DILocation(line: 199, column: 53, scope: !3547)
!3551 = !DILocation(line: 202, column: 38, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3547, file: !463, line: 202, column: 14)
!3553 = !DILocation(line: 202, column: 57, scope: !3552)
!3554 = !DILocation(line: 205, column: 20, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3552, file: !463, line: 205, column: 14)
!3556 = !DILocation(line: 205, column: 27, scope: !3555)
!3557 = !DILocation(line: 0, scope: !3547)
!3558 = !DILocation(line: 208, column: 13, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3537, file: !463, line: 208, column: 9)
!3560 = !DILocation(line: 0, scope: !3537)
!3561 = !DILocation(line: 208, column: 9, scope: !3537)
!3562 = !DILocation(line: 209, column: 14, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3559, file: !463, line: 208, column: 40)
!3564 = !DILocation(line: 209, column: 7, scope: !3563)
!3565 = !DILocation(line: 209, column: 18, scope: !3563)
!3566 = !DILocation(line: 210, column: 5, scope: !3563)
!3567 = !DILocation(line: 213, column: 11, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3484, file: !463, line: 213, column: 7)
!3569 = !DILocation(line: 213, column: 7, scope: !3484)
!3570 = !DILocation(line: 214, column: 9, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3568, file: !463, line: 213, column: 38)
!3572 = !DILocation(line: 217, column: 20, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3574, file: !463, line: 217, column: 14)
!3574 = distinct !DILexicalBlock(scope: !3571, file: !463, line: 214, column: 9)
!3575 = !DILocation(line: 217, column: 14, scope: !3574)
!3576 = !DILocation(line: 220, column: 20, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3573, file: !463, line: 220, column: 14)
!3578 = !DILocation(line: 220, column: 14, scope: !3573)
!3579 = !DILocation(line: 0, scope: !3574)
!3580 = !DILocation(line: 226, column: 29, scope: !3503)
!3581 = !DILocation(line: 0, scope: !3501)
!3582 = !DILocation(line: 228, column: 27, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3584, file: !463, line: 227, column: 42)
!3584 = distinct !DILexicalBlock(scope: !3501, file: !463, line: 227, column: 5)
!3585 = !DILocation(line: 228, column: 7, scope: !3583)
!3586 = !DILocation(line: 227, column: 38, scope: !3584)
!3587 = !DILocation(line: 227, column: 28, scope: !3584)
!3588 = !DILocation(line: 227, column: 5, scope: !3501)
!3589 = distinct !{!3589, !3588, !3590, !2694, !2695}
!3590 = !DILocation(line: 229, column: 5, scope: !3501)
!3591 = !DILocation(line: 0, scope: !3505)
!3592 = !DILocation(line: 233, column: 25, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3505, file: !463, line: 233, column: 3)
!3594 = !DILocation(line: 233, column: 3, scope: !3505)
!3595 = !DILocation(line: 238, column: 7, scope: !3484)
!3596 = !DILocation(line: 234, column: 21, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3593, file: !463, line: 233, column: 37)
!3598 = !DILocation(line: 234, column: 9, scope: !3597)
!3599 = !DILocation(line: 234, column: 39, scope: !3597)
!3600 = !DILocation(line: 234, column: 5, scope: !3597)
!3601 = !DILocation(line: 233, column: 33, scope: !3593)
!3602 = distinct !{!3602, !3594, !3603, !2694, !2695}
!3603 = !DILocation(line: 235, column: 3, scope: !3505)
!3604 = !DILocation(line: 240, column: 27, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3606, file: !463, line: 239, column: 37)
!3606 = distinct !DILexicalBlock(scope: !3607, file: !463, line: 238, column: 27)
!3607 = distinct !DILexicalBlock(scope: !3484, file: !463, line: 238, column: 7)
!3608 = !DILocation(line: 240, column: 7, scope: !3605)
!3609 = !DILocation(line: 239, column: 16, scope: !3606)
!3610 = !DILocation(line: 239, column: 28, scope: !3606)
!3611 = !DILocation(line: 239, column: 5, scope: !3606)
!3612 = distinct !{!3612, !3611, !3613, !2694, !2695}
!3613 = !DILocation(line: 241, column: 5, scope: !3606)
!3614 = !DILocation(line: 244, column: 3, scope: !3484)
!3615 = distinct !DISubprogram(name: "sprintf_", scope: !463, file: !463, line: 731, type: !1300, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !470, retainedNodes: !3616)
!3616 = !{!3617, !3618, !3619, !3620}
!3617 = !DILocalVariable(name: "buffer", arg: 1, scope: !3615, file: !463, line: 731, type: !308)
!3618 = !DILocalVariable(name: "format", arg: 2, scope: !3615, file: !463, line: 731, type: !266)
!3619 = !DILocalVariable(name: "va", scope: !3615, file: !463, line: 733, type: !2752)
!3620 = !DILocalVariable(name: "ret", scope: !3615, file: !463, line: 735, type: !2761)
!3621 = !DILocation(line: 0, scope: !3615)
!3622 = !DILocation(line: 733, column: 3, scope: !3615)
!3623 = !DILocation(line: 733, column: 11, scope: !3615)
!3624 = !DILocation(line: 734, column: 3, scope: !3615)
!3625 = !DILocation(line: 735, column: 19, scope: !3615)
!3626 = !DILocation(line: 736, column: 3, scope: !3615)
!3627 = !DILocation(line: 738, column: 1, scope: !3615)
!3628 = !DILocation(line: 737, column: 3, scope: !3615)
!3629 = distinct !DISubprogram(name: "snprintf_", scope: !463, file: !463, line: 741, type: !1335, scopeLine: 742, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !470, retainedNodes: !3630)
!3630 = !{!3631, !3632, !3633, !3634, !3635}
!3631 = !DILocalVariable(name: "buffer", arg: 1, scope: !3629, file: !463, line: 741, type: !308)
!3632 = !DILocalVariable(name: "count", arg: 2, scope: !3629, file: !463, line: 741, type: !282)
!3633 = !DILocalVariable(name: "format", arg: 3, scope: !3629, file: !463, line: 741, type: !266)
!3634 = !DILocalVariable(name: "va", scope: !3629, file: !463, line: 743, type: !2752)
!3635 = !DILocalVariable(name: "ret", scope: !3629, file: !463, line: 745, type: !2761)
!3636 = !DILocation(line: 0, scope: !3629)
!3637 = !DILocation(line: 743, column: 3, scope: !3629)
!3638 = !DILocation(line: 743, column: 11, scope: !3629)
!3639 = !DILocation(line: 744, column: 3, scope: !3629)
!3640 = !DILocation(line: 745, column: 19, scope: !3629)
!3641 = !DILocation(line: 746, column: 3, scope: !3629)
!3642 = !DILocation(line: 748, column: 1, scope: !3629)
!3643 = !DILocation(line: 747, column: 3, scope: !3629)
!3644 = distinct !DISubprogram(name: "vsnprintf_", scope: !463, file: !463, line: 751, type: !3645, scopeLine: 752, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !470, retainedNodes: !3647)
!3645 = !DISubroutineType(types: !3646)
!3646 = !{!59, !308, !282, !266, !2752}
!3647 = !{!3648, !3649, !3650, !3651}
!3648 = !DILocalVariable(name: "buffer", arg: 1, scope: !3644, file: !463, line: 751, type: !308)
!3649 = !DILocalVariable(name: "count", arg: 2, scope: !3644, file: !463, line: 751, type: !282)
!3650 = !DILocalVariable(name: "format", arg: 3, scope: !3644, file: !463, line: 751, type: !266)
!3651 = !DILocalVariable(name: "va", arg: 4, scope: !3644, file: !463, line: 751, type: !2752)
!3652 = !DILocation(line: 0, scope: !3644)
!3653 = !DILocation(line: 753, column: 10, scope: !3644)
!3654 = !DILocation(line: 753, column: 3, scope: !3644)
!3655 = distinct !DISubprogram(name: "fctprintf", scope: !463, file: !463, line: 757, type: !3656, scopeLine: 758, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !470, retainedNodes: !3658)
!3656 = !DISubroutineType(types: !3657)
!3657 = !{!59, !477, !279, !266, null}
!3658 = !{!3659, !3660, !3661, !3662, !3663, !3665}
!3659 = !DILocalVariable(name: "out", arg: 1, scope: !3655, file: !463, line: 757, type: !477)
!3660 = !DILocalVariable(name: "arg", arg: 2, scope: !3655, file: !463, line: 757, type: !279)
!3661 = !DILocalVariable(name: "format", arg: 3, scope: !3655, file: !463, line: 757, type: !266)
!3662 = !DILocalVariable(name: "va", scope: !3655, file: !463, line: 759, type: !2752)
!3663 = !DILocalVariable(name: "out_fct_wrap", scope: !3655, file: !463, line: 761, type: !3664)
!3664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!3665 = !DILocalVariable(name: "ret", scope: !3655, file: !463, line: 762, type: !2761)
!3666 = !DILocation(line: 0, scope: !3655)
!3667 = !DILocation(line: 759, column: 3, scope: !3655)
!3668 = !DILocation(line: 759, column: 11, scope: !3655)
!3669 = !DILocation(line: 760, column: 3, scope: !3655)
!3670 = !DILocation(line: 761, column: 3, scope: !3655)
!3671 = !DILocation(line: 761, column: 27, scope: !3655)
!3672 = !DILocation(line: 761, column: 42, scope: !3655)
!3673 = !DILocation(line: 762, column: 19, scope: !3655)
!3674 = !DILocation(line: 763, column: 3, scope: !3655)
!3675 = !DILocation(line: 765, column: 1, scope: !3655)
!3676 = !DILocation(line: 764, column: 3, scope: !3655)
!3677 = distinct !DISubprogram(name: "SystemInit", scope: !521, file: !521, line: 157, type: !4, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !520, retainedNodes: !121)
!3678 = !DILocation(line: 161, column: 11, scope: !3677)
!3679 = !{!3680, !3681, i64 0}
!3680 = !{!"", !3681, i64 0, !3681, i64 4, !3681, i64 8, !3681, i64 12, !3681, i64 16, !3681, i64 20, !3681, i64 24, !3681, i64 28, !3681, i64 32, !3681, i64 36}
!3681 = !{!"int", !2843, i64 0}
!3682 = !DILocation(line: 165, column: 13, scope: !3677)
!3683 = !{!3680, !3681, i64 4}
!3684 = !DILocation(line: 171, column: 11, scope: !3677)
!3685 = !DILocation(line: 174, column: 11, scope: !3677)
!3686 = !DILocation(line: 177, column: 13, scope: !3677)
!3687 = !DILocation(line: 196, column: 12, scope: !3677)
!3688 = !{!3680, !3681, i64 8}
!3689 = !DILocation(line: 208, column: 13, scope: !3677)
!3690 = !{!3691, !3681, i64 8}
!3691 = !{!"", !3681, i64 0, !3681, i64 4, !3681, i64 8, !3681, i64 12, !3681, i64 16, !3681, i64 20, !2843, i64 24, !3681, i64 36, !3681, i64 40, !3681, i64 44, !3681, i64 48, !3681, i64 52, !3681, i64 56, !3681, i64 60, !2843, i64 64, !3681, i64 72, !3681, i64 76, !2843, i64 80, !2843, i64 96, !2843, i64 116, !3681, i64 136}
!3692 = !DILocation(line: 210, column: 1, scope: !3677)
!3693 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !521, file: !521, line: 247, type: !4, scopeLine: 248, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !520, retainedNodes: !3694)
!3694 = !{!3695, !3696, !3697}
!3695 = !DILocalVariable(name: "tmp", scope: !3693, file: !521, line: 249, type: !24)
!3696 = !DILocalVariable(name: "pllmull", scope: !3693, file: !521, line: 249, type: !24)
!3697 = !DILocalVariable(name: "pllsource", scope: !3693, file: !521, line: 249, type: !24)
!3698 = !DILocation(line: 0, scope: !3693)
!3699 = !DILocation(line: 260, column: 14, scope: !3693)
!3700 = !DILocation(line: 260, column: 19, scope: !3693)
!3701 = !DILocation(line: 262, column: 3, scope: !3693)
!3702 = !DILocation(line: 273, column: 22, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3693, file: !521, line: 263, column: 3)
!3704 = !DILocation(line: 274, column: 24, scope: !3703)
!3705 = !DILocation(line: 274, column: 29, scope: !3703)
!3706 = !DILocation(line: 277, column: 27, scope: !3703)
!3707 = !DILocation(line: 277, column: 35, scope: !3703)
!3708 = !DILocation(line: 279, column: 21, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3703, file: !521, line: 279, column: 11)
!3710 = !DILocation(line: 279, column: 11, scope: !3703)
!3711 = !DILocation(line: 282, column: 45, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3709, file: !521, line: 280, column: 7)
!3713 = !DILocation(line: 283, column: 7, scope: !3712)
!3714 = !DILocation(line: 292, column: 19, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3716, file: !521, line: 292, column: 13)
!3716 = distinct !DILexicalBlock(scope: !3709, file: !521, line: 285, column: 7)
!3717 = !DILocation(line: 292, column: 24, scope: !3715)
!3718 = !DILocation(line: 292, column: 45, scope: !3715)
!3719 = !DILocation(line: 292, column: 13, scope: !3716)
!3720 = !DILocation(line: 294, column: 47, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3715, file: !521, line: 293, column: 9)
!3722 = !DILocation(line: 295, column: 9, scope: !3721)
!3723 = !DILocation(line: 298, column: 39, scope: !3724)
!3724 = distinct !DILexicalBlock(scope: !3715, file: !521, line: 297, column: 9)
!3725 = !DILocation(line: 0, scope: !3703)
!3726 = !{!3681, !3681, i64 0}
!3727 = !DILocation(line: 350, column: 30, scope: !3693)
!3728 = !DILocation(line: 350, column: 52, scope: !3693)
!3729 = !DILocation(line: 350, column: 9, scope: !3693)
!3730 = !DILocation(line: 352, column: 19, scope: !3693)
!3731 = !DILocation(line: 353, column: 1, scope: !3693)
!3732 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !1431, file: !1431, line: 202, type: !3733, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !3736)
!3733 = !DISubroutineType(types: !3734)
!3734 = !{!3735}
!3735 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !9, line: 47, baseType: !608)
!3736 = !{!3737}
!3737 = !DILocalVariable(name: "tickstart", scope: !3732, file: !1431, line: 204, type: !24)
!3738 = !DILocation(line: 207, column: 15, scope: !3732)
!3739 = !DILocation(line: 0, scope: !3732)
!3740 = !DILocation(line: 210, column: 3, scope: !3732)
!3741 = !DILocation(line: 213, column: 3, scope: !3732)
!3742 = !DILocation(line: 213, column: 10, scope: !3732)
!3743 = !DILocation(line: 213, column: 43, scope: !3732)
!3744 = !DILocation(line: 215, column: 10, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3746, file: !1431, line: 215, column: 9)
!3746 = distinct !DILexicalBlock(scope: !3732, file: !1431, line: 214, column: 3)
!3747 = !DILocation(line: 215, column: 24, scope: !3745)
!3748 = !DILocation(line: 215, column: 37, scope: !3745)
!3749 = !DILocation(line: 215, column: 9, scope: !3746)
!3750 = distinct !{!3750, !3741, !3751, !2694, !2695}
!3751 = !DILocation(line: 219, column: 3, scope: !3732)
!3752 = !DILocation(line: 222, column: 3, scope: !3732)
!3753 = !DILocation(line: 225, column: 15, scope: !3732)
!3754 = !DILocation(line: 228, column: 3, scope: !3732)
!3755 = !DILocation(line: 231, column: 3, scope: !3732)
!3756 = !DILocation(line: 231, column: 10, scope: !3732)
!3757 = !DILocation(line: 231, column: 44, scope: !3732)
!3758 = !DILocation(line: 233, column: 10, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3760, file: !1431, line: 233, column: 9)
!3760 = distinct !DILexicalBlock(scope: !3732, file: !1431, line: 232, column: 3)
!3761 = !DILocation(line: 233, column: 24, scope: !3759)
!3762 = !DILocation(line: 233, column: 37, scope: !3759)
!3763 = !DILocation(line: 233, column: 9, scope: !3760)
!3764 = distinct !{!3764, !3755, !3765, !2694, !2695}
!3765 = !DILocation(line: 237, column: 3, scope: !3732)
!3766 = !DILocation(line: 240, column: 19, scope: !3732)
!3767 = !DILocation(line: 243, column: 20, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3732, file: !1431, line: 243, column: 7)
!3769 = !DILocation(line: 243, column: 7, scope: !3768)
!3770 = !DILocation(line: 243, column: 32, scope: !3768)
!3771 = !DILocation(line: 243, column: 7, scope: !3732)
!3772 = !DILocation(line: 249, column: 15, scope: !3732)
!3773 = !DILocation(line: 252, column: 3, scope: !3732)
!3774 = !DILocation(line: 255, column: 3, scope: !3732)
!3775 = !DILocation(line: 255, column: 10, scope: !3732)
!3776 = !DILocation(line: 255, column: 43, scope: !3732)
!3777 = !DILocation(line: 257, column: 10, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3779, file: !1431, line: 257, column: 9)
!3779 = distinct !DILexicalBlock(scope: !3732, file: !1431, line: 256, column: 3)
!3780 = !DILocation(line: 257, column: 24, scope: !3778)
!3781 = !DILocation(line: 257, column: 37, scope: !3778)
!3782 = !DILocation(line: 257, column: 9, scope: !3779)
!3783 = distinct !{!3783, !3774, !3784, !2694, !2695}
!3784 = !DILocation(line: 261, column: 3, scope: !3732)
!3785 = !DILocation(line: 264, column: 3, scope: !3732)
!3786 = !DILocation(line: 267, column: 15, scope: !3732)
!3787 = !DILocation(line: 270, column: 3, scope: !3732)
!3788 = !DILocation(line: 273, column: 3, scope: !3732)
!3789 = !DILocation(line: 273, column: 10, scope: !3732)
!3790 = !DILocation(line: 273, column: 43, scope: !3732)
!3791 = !DILocation(line: 275, column: 10, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3793, file: !1431, line: 275, column: 9)
!3793 = distinct !DILexicalBlock(scope: !3732, file: !1431, line: 274, column: 3)
!3794 = !DILocation(line: 275, column: 24, scope: !3792)
!3795 = !DILocation(line: 275, column: 37, scope: !3792)
!3796 = !DILocation(line: 275, column: 9, scope: !3793)
!3797 = distinct !{!3797, !3788, !3798, !2694, !2695}
!3798 = !DILocation(line: 279, column: 3, scope: !3732)
!3799 = !DILocation(line: 282, column: 3, scope: !3732)
!3800 = !DILocation(line: 324, column: 3, scope: !3732)
!3801 = !{!3680, !3681, i64 36}
!3802 = !DILocation(line: 327, column: 3, scope: !3732)
!3803 = !DILocation(line: 329, column: 3, scope: !3732)
!3804 = !DILocation(line: 330, column: 1, scope: !3732)
!3805 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !1431, file: !1431, line: 347, type: !3806, scopeLine: 348, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !3826)
!3806 = !DISubroutineType(types: !3807)
!3807 = !{!3735, !3808}
!3808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3809, size: 32)
!3809 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !2490, line: 261, baseType: !3810)
!3810 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2490, line: 228, size: 320, elements: !3811)
!3811 = !{!3812, !3813, !3814, !3815, !3816, !3817, !3818, !3819}
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !3810, file: !2490, line: 230, baseType: !24, size: 32)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !3810, file: !2490, line: 238, baseType: !24, size: 32, offset: 32)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "HSEPredivValue", scope: !3810, file: !2490, line: 241, baseType: !24, size: 32, offset: 64)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !3810, file: !2490, line: 244, baseType: !24, size: 32, offset: 96)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !3810, file: !2490, line: 247, baseType: !24, size: 32, offset: 128)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !3810, file: !2490, line: 250, baseType: !24, size: 32, offset: 160)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !3810, file: !2490, line: 253, baseType: !24, size: 32, offset: 192)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !3810, file: !2490, line: 256, baseType: !3820, size: 96, offset: 224)
!3820 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !2502, line: 59, baseType: !3821)
!3821 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2502, line: 49, size: 96, elements: !3822)
!3822 = !{!3823, !3824, !3825}
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !3821, file: !2502, line: 51, baseType: !24, size: 32)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !3821, file: !2502, line: 54, baseType: !24, size: 32, offset: 32)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !3821, file: !2502, line: 57, baseType: !24, size: 32, offset: 64)
!3826 = !{!3827, !3828, !3829, !3830, !3834}
!3827 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !3805, file: !1431, line: 347, type: !3808)
!3828 = !DILocalVariable(name: "tickstart", scope: !3805, file: !1431, line: 349, type: !24)
!3829 = !DILocalVariable(name: "pll_config", scope: !3805, file: !1431, line: 350, type: !24)
!3830 = !DILocalVariable(name: "pwrclkchanged", scope: !3831, file: !1431, line: 526, type: !3833)
!3831 = distinct !DILexicalBlock(scope: !3832, file: !1431, line: 525, column: 3)
!3832 = distinct !DILexicalBlock(scope: !3805, file: !1431, line: 524, column: 7)
!3833 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !524, line: 155, baseType: !523)
!3834 = !DILocalVariable(name: "tmpreg", scope: !3835, file: !1431, line: 535, type: !23)
!3835 = distinct !DILexicalBlock(scope: !3836, file: !1431, line: 535, column: 7)
!3836 = distinct !DILexicalBlock(scope: !3837, file: !1431, line: 534, column: 5)
!3837 = distinct !DILexicalBlock(scope: !3831, file: !1431, line: 533, column: 9)
!3838 = !DILocation(line: 0, scope: !3805)
!3839 = !DILocation(line: 353, column: 25, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3805, file: !1431, line: 353, column: 7)
!3841 = !DILocation(line: 353, column: 7, scope: !3805)
!3842 = !DILocation(line: 362, column: 28, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3805, file: !1431, line: 362, column: 7)
!3844 = !{!3845, !3681, i64 0}
!3845 = !{!"", !3681, i64 0, !3681, i64 4, !3681, i64 8, !3681, i64 12, !3681, i64 16, !3681, i64 20, !3681, i64 24, !3846, i64 28}
!3846 = !{!"", !3681, i64 0, !3681, i64 4, !3681, i64 8}
!3847 = !DILocation(line: 362, column: 44, scope: !3843)
!3848 = !DILocation(line: 362, column: 70, scope: !3843)
!3849 = !DILocation(line: 362, column: 7, scope: !3805)
!3850 = !DILocation(line: 368, column: 10, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3852, file: !1431, line: 368, column: 9)
!3852 = distinct !DILexicalBlock(scope: !3843, file: !1431, line: 363, column: 3)
!3853 = !DILocation(line: 368, column: 40, scope: !3851)
!3854 = !DILocation(line: 369, column: 9, scope: !3851)
!3855 = !DILocation(line: 369, column: 14, scope: !3851)
!3856 = !DILocation(line: 369, column: 44, scope: !3851)
!3857 = !DILocation(line: 369, column: 79, scope: !3851)
!3858 = !DILocation(line: 369, column: 83, scope: !3851)
!3859 = !DILocation(line: 369, column: 113, scope: !3851)
!3860 = !DILocation(line: 368, column: 9, scope: !3852)
!3861 = !DILocation(line: 371, column: 12, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3863, file: !1431, line: 371, column: 11)
!3863 = distinct !DILexicalBlock(scope: !3851, file: !1431, line: 370, column: 5)
!3864 = !DILocation(line: 371, column: 48, scope: !3862)
!3865 = !DILocation(line: 371, column: 58, scope: !3862)
!3866 = !DILocation(line: 371, column: 81, scope: !3862)
!3867 = !{!3845, !3681, i64 4}
!3868 = !DILocation(line: 371, column: 90, scope: !3862)
!3869 = !DILocation(line: 371, column: 11, scope: !3863)
!3870 = !DILocation(line: 379, column: 7, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3872, file: !1431, line: 379, column: 7)
!3872 = distinct !DILexicalBlock(scope: !3873, file: !1431, line: 379, column: 7)
!3873 = distinct !DILexicalBlock(scope: !3851, file: !1431, line: 377, column: 5)
!3874 = !DILocation(line: 379, column: 7, scope: !3872)
!3875 = !DILocation(line: 379, column: 7, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3871, file: !1431, line: 379, column: 7)
!3877 = !DILocation(line: 379, column: 7, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3879, file: !1431, line: 379, column: 7)
!3879 = distinct !DILexicalBlock(scope: !3871, file: !1431, line: 379, column: 7)
!3880 = !DILocation(line: 379, column: 7, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3882, file: !1431, line: 379, column: 7)
!3882 = distinct !DILexicalBlock(scope: !3879, file: !1431, line: 379, column: 7)
!3883 = !DILocation(line: 379, column: 7, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3882, file: !1431, line: 379, column: 7)
!3885 = !DILocation(line: 0, scope: !3871)
!3886 = !DILocation(line: 383, column: 39, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3873, file: !1431, line: 383, column: 11)
!3888 = !DILocation(line: 0, scope: !3887)
!3889 = !DILocation(line: 383, column: 11, scope: !3873)
!3890 = !DILocation(line: 389, column: 16, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3887, file: !1431, line: 384, column: 7)
!3892 = !DILocation(line: 389, column: 52, scope: !3891)
!3893 = !DILocation(line: 389, column: 9, scope: !3891)
!3894 = !DILocation(line: 391, column: 16, scope: !3895)
!3895 = distinct !DILexicalBlock(scope: !3896, file: !1431, line: 391, column: 15)
!3896 = distinct !DILexicalBlock(scope: !3891, file: !1431, line: 390, column: 9)
!3897 = !DILocation(line: 391, column: 30, scope: !3895)
!3898 = !DILocation(line: 391, column: 43, scope: !3895)
!3899 = !DILocation(line: 391, column: 15, scope: !3896)
!3900 = distinct !{!3900, !3893, !3901, !2694, !2695}
!3901 = !DILocation(line: 395, column: 9, scope: !3891)
!3902 = !DILocation(line: 403, column: 16, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3887, file: !1431, line: 398, column: 7)
!3904 = !DILocation(line: 403, column: 52, scope: !3903)
!3905 = !DILocation(line: 403, column: 9, scope: !3903)
!3906 = !DILocation(line: 405, column: 16, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3908, file: !1431, line: 405, column: 15)
!3908 = distinct !DILexicalBlock(scope: !3903, file: !1431, line: 404, column: 9)
!3909 = !DILocation(line: 405, column: 30, scope: !3907)
!3910 = !DILocation(line: 405, column: 43, scope: !3907)
!3911 = !DILocation(line: 405, column: 15, scope: !3908)
!3912 = distinct !{!3912, !3905, !3913, !2694, !2695}
!3913 = !DILocation(line: 409, column: 9, scope: !3903)
!3914 = !DILocation(line: 414, column: 28, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3805, file: !1431, line: 414, column: 7)
!3916 = !DILocation(line: 414, column: 44, scope: !3915)
!3917 = !DILocation(line: 414, column: 70, scope: !3915)
!3918 = !DILocation(line: 414, column: 7, scope: !3805)
!3919 = !DILocation(line: 421, column: 10, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3921, file: !1431, line: 421, column: 9)
!3921 = distinct !DILexicalBlock(scope: !3915, file: !1431, line: 415, column: 3)
!3922 = !DILocation(line: 421, column: 40, scope: !3920)
!3923 = !DILocation(line: 422, column: 9, scope: !3920)
!3924 = !DILocation(line: 422, column: 14, scope: !3920)
!3925 = !DILocation(line: 422, column: 44, scope: !3920)
!3926 = !DILocation(line: 422, column: 79, scope: !3920)
!3927 = !DILocation(line: 422, column: 83, scope: !3920)
!3928 = !DILocation(line: 422, column: 113, scope: !3920)
!3929 = !DILocation(line: 421, column: 9, scope: !3921)
!3930 = !DILocation(line: 425, column: 12, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3932, file: !1431, line: 425, column: 11)
!3932 = distinct !DILexicalBlock(scope: !3920, file: !1431, line: 423, column: 5)
!3933 = !DILocation(line: 425, column: 48, scope: !3931)
!3934 = !DILocation(line: 425, column: 58, scope: !3931)
!3935 = !DILocation(line: 425, column: 81, scope: !3931)
!3936 = !{!3845, !3681, i64 16}
!3937 = !DILocation(line: 425, column: 90, scope: !3931)
!3938 = !DILocation(line: 425, column: 11, scope: !3932)
!3939 = !DILocation(line: 439, column: 30, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3941, file: !1431, line: 439, column: 11)
!3941 = distinct !DILexicalBlock(scope: !3920, file: !1431, line: 437, column: 5)
!3942 = !DILocation(line: 439, column: 39, scope: !3940)
!3943 = !DILocation(line: 439, column: 11, scope: !3941)
!3944 = !DILocation(line: 442, column: 9, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3940, file: !1431, line: 440, column: 7)
!3946 = !DILocation(line: 445, column: 21, scope: !3945)
!3947 = !DILocation(line: 448, column: 9, scope: !3945)
!3948 = !DILocation(line: 448, column: 16, scope: !3945)
!3949 = !DILocation(line: 448, column: 52, scope: !3945)
!3950 = !DILocation(line: 450, column: 16, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3952, file: !1431, line: 450, column: 15)
!3952 = distinct !DILexicalBlock(scope: !3945, file: !1431, line: 449, column: 9)
!3953 = !DILocation(line: 450, column: 30, scope: !3951)
!3954 = !DILocation(line: 450, column: 43, scope: !3951)
!3955 = !DILocation(line: 450, column: 15, scope: !3952)
!3956 = distinct !{!3956, !3947, !3957, !2694, !2695}
!3957 = !DILocation(line: 454, column: 9, scope: !3945)
!3958 = !DILocation(line: 462, column: 9, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3940, file: !1431, line: 460, column: 7)
!3960 = !DILocation(line: 465, column: 21, scope: !3959)
!3961 = !DILocation(line: 468, column: 9, scope: !3959)
!3962 = !DILocation(line: 468, column: 16, scope: !3959)
!3963 = !DILocation(line: 468, column: 52, scope: !3959)
!3964 = !DILocation(line: 470, column: 16, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3966, file: !1431, line: 470, column: 15)
!3966 = distinct !DILexicalBlock(scope: !3959, file: !1431, line: 469, column: 9)
!3967 = !DILocation(line: 470, column: 30, scope: !3965)
!3968 = !DILocation(line: 470, column: 43, scope: !3965)
!3969 = !DILocation(line: 470, column: 15, scope: !3966)
!3970 = distinct !{!3970, !3961, !3971, !2694, !2695}
!3971 = !DILocation(line: 474, column: 9, scope: !3959)
!3972 = !DILocation(line: 0, scope: !3920)
!3973 = !{!3845, !3681, i64 20}
!3974 = !DILocation(line: 479, column: 28, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3805, file: !1431, line: 479, column: 7)
!3976 = !DILocation(line: 479, column: 44, scope: !3975)
!3977 = !DILocation(line: 479, column: 70, scope: !3975)
!3978 = !DILocation(line: 479, column: 7, scope: !3805)
!3979 = !DILocation(line: 485, column: 28, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3981, file: !1431, line: 485, column: 9)
!3981 = distinct !DILexicalBlock(scope: !3975, file: !1431, line: 480, column: 3)
!3982 = !{!3845, !3681, i64 24}
!3983 = !DILocation(line: 485, column: 37, scope: !3980)
!3984 = !DILocation(line: 485, column: 9, scope: !3981)
!3985 = !DILocation(line: 488, column: 7, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3980, file: !1431, line: 486, column: 5)
!3987 = !DILocation(line: 491, column: 19, scope: !3986)
!3988 = !DILocation(line: 494, column: 7, scope: !3986)
!3989 = !DILocation(line: 494, column: 14, scope: !3986)
!3990 = !DILocation(line: 494, column: 50, scope: !3986)
!3991 = !DILocation(line: 496, column: 14, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3993, file: !1431, line: 496, column: 13)
!3993 = distinct !DILexicalBlock(scope: !3986, file: !1431, line: 495, column: 7)
!3994 = !DILocation(line: 496, column: 28, scope: !3992)
!3995 = !DILocation(line: 496, column: 41, scope: !3992)
!3996 = !DILocation(line: 496, column: 13, scope: !3993)
!3997 = distinct !{!3997, !3988, !3998, !2694, !2695}
!3998 = !DILocation(line: 500, column: 7, scope: !3986)
!3999 = !DILocation(line: 503, column: 7, scope: !3986)
!4000 = !DILocation(line: 504, column: 5, scope: !3986)
!4001 = !DILocation(line: 508, column: 7, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3980, file: !1431, line: 506, column: 5)
!4003 = !DILocation(line: 511, column: 19, scope: !4002)
!4004 = !DILocation(line: 514, column: 7, scope: !4002)
!4005 = !DILocation(line: 514, column: 14, scope: !4002)
!4006 = !DILocation(line: 514, column: 50, scope: !4002)
!4007 = !DILocation(line: 516, column: 14, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !4009, file: !1431, line: 516, column: 13)
!4009 = distinct !DILexicalBlock(scope: !4002, file: !1431, line: 515, column: 7)
!4010 = !DILocation(line: 516, column: 28, scope: !4008)
!4011 = !DILocation(line: 516, column: 41, scope: !4008)
!4012 = !DILocation(line: 516, column: 13, scope: !4009)
!4013 = distinct !{!4013, !4004, !4014, !2694, !2695}
!4014 = !DILocation(line: 520, column: 7, scope: !4002)
!4015 = !DILocation(line: 524, column: 28, scope: !3832)
!4016 = !DILocation(line: 524, column: 44, scope: !3832)
!4017 = !DILocation(line: 524, column: 70, scope: !3832)
!4018 = !DILocation(line: 524, column: 7, scope: !3805)
!4019 = !DILocation(line: 0, scope: !3831)
!4020 = !DILocation(line: 533, column: 9, scope: !3837)
!4021 = !{!3680, !3681, i64 28}
!4022 = !DILocation(line: 533, column: 9, scope: !3831)
!4023 = !DILocation(line: 535, column: 7, scope: !3835)
!4024 = !DILocation(line: 535, column: 7, scope: !3836)
!4025 = !DILocation(line: 537, column: 5, scope: !3836)
!4026 = !DILocation(line: 539, column: 9, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !3831, file: !1431, line: 539, column: 9)
!4028 = !{!4029, !3681, i64 0}
!4029 = !{!"", !3681, i64 0, !3681, i64 4}
!4030 = !DILocation(line: 539, column: 9, scope: !3831)
!4031 = !DILocation(line: 542, column: 7, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4027, file: !1431, line: 540, column: 5)
!4033 = !DILocation(line: 545, column: 19, scope: !4032)
!4034 = !DILocation(line: 547, column: 7, scope: !4032)
!4035 = !DILocation(line: 547, column: 14, scope: !4032)
!4036 = !DILocation(line: 549, column: 14, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4038, file: !1431, line: 549, column: 13)
!4038 = distinct !DILexicalBlock(scope: !4032, file: !1431, line: 548, column: 7)
!4039 = !DILocation(line: 549, column: 28, scope: !4037)
!4040 = !DILocation(line: 549, column: 41, scope: !4037)
!4041 = !DILocation(line: 549, column: 13, scope: !4038)
!4042 = distinct !{!4042, !4034, !4043, !2694, !2695}
!4043 = !DILocation(line: 553, column: 7, scope: !4032)
!4044 = !DILocation(line: 557, column: 5, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !4046, file: !1431, line: 557, column: 5)
!4046 = distinct !DILexicalBlock(scope: !3831, file: !1431, line: 557, column: 5)
!4047 = !{!3845, !3681, i64 12}
!4048 = !DILocation(line: 557, column: 5, scope: !4046)
!4049 = !DILocation(line: 557, column: 5, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4045, file: !1431, line: 557, column: 5)
!4051 = !{!3680, !3681, i64 32}
!4052 = !DILocation(line: 557, column: 5, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4054, file: !1431, line: 557, column: 5)
!4054 = distinct !DILexicalBlock(scope: !4045, file: !1431, line: 557, column: 5)
!4055 = !DILocation(line: 557, column: 5, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !4057, file: !1431, line: 557, column: 5)
!4057 = distinct !DILexicalBlock(scope: !4054, file: !1431, line: 557, column: 5)
!4058 = !DILocation(line: 557, column: 5, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4057, file: !1431, line: 557, column: 5)
!4060 = !DILocation(line: 0, scope: !4045)
!4061 = !DILocation(line: 559, column: 37, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !3831, file: !1431, line: 559, column: 9)
!4063 = !DILocation(line: 0, scope: !4062)
!4064 = !DILocation(line: 559, column: 9, scope: !3831)
!4065 = !DILocation(line: 565, column: 14, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4062, file: !1431, line: 560, column: 5)
!4067 = !DILocation(line: 565, column: 50, scope: !4066)
!4068 = !DILocation(line: 565, column: 7, scope: !4066)
!4069 = !DILocation(line: 567, column: 14, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !4071, file: !1431, line: 567, column: 13)
!4071 = distinct !DILexicalBlock(scope: !4066, file: !1431, line: 566, column: 7)
!4072 = !DILocation(line: 567, column: 28, scope: !4070)
!4073 = !DILocation(line: 567, column: 41, scope: !4070)
!4074 = !DILocation(line: 567, column: 13, scope: !4071)
!4075 = distinct !{!4075, !4068, !4076, !2694, !2695}
!4076 = !DILocation(line: 571, column: 7, scope: !4066)
!4077 = !DILocation(line: 579, column: 14, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4062, file: !1431, line: 574, column: 5)
!4079 = !DILocation(line: 579, column: 50, scope: !4078)
!4080 = !DILocation(line: 579, column: 7, scope: !4078)
!4081 = !DILocation(line: 581, column: 14, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4083, file: !1431, line: 581, column: 13)
!4083 = distinct !DILexicalBlock(scope: !4078, file: !1431, line: 580, column: 7)
!4084 = !DILocation(line: 581, column: 28, scope: !4082)
!4085 = !DILocation(line: 581, column: 41, scope: !4082)
!4086 = !DILocation(line: 581, column: 13, scope: !4083)
!4087 = distinct !{!4087, !4080, !4088, !2694, !2695}
!4088 = !DILocation(line: 585, column: 7, scope: !4078)
!4089 = !DILocation(line: 589, column: 9, scope: !3831)
!4090 = !DILocation(line: 591, column: 7, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4092, file: !1431, line: 590, column: 5)
!4092 = distinct !DILexicalBlock(scope: !3831, file: !1431, line: 589, column: 9)
!4093 = !DILocation(line: 592, column: 5, scope: !4091)
!4094 = !DILocation(line: 688, column: 31, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !3805, file: !1431, line: 688, column: 7)
!4096 = !{!3845, !3681, i64 28}
!4097 = !DILocation(line: 688, column: 41, scope: !4095)
!4098 = !DILocation(line: 688, column: 7, scope: !3805)
!4099 = !DILocation(line: 691, column: 9, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4101, file: !1431, line: 691, column: 9)
!4101 = distinct !DILexicalBlock(scope: !4095, file: !1431, line: 689, column: 3)
!4102 = !DILocation(line: 691, column: 39, scope: !4100)
!4103 = !DILocation(line: 691, column: 9, scope: !4101)
!4104 = !DILocation(line: 693, column: 45, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4106, file: !1431, line: 693, column: 11)
!4106 = distinct !DILexicalBlock(scope: !4100, file: !1431, line: 692, column: 5)
!4107 = !DILocation(line: 0, scope: !4105)
!4108 = !DILocation(line: 693, column: 11, scope: !4106)
!4109 = !DILocation(line: 706, column: 16, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4105, file: !1431, line: 694, column: 7)
!4111 = !DILocation(line: 706, column: 53, scope: !4110)
!4112 = !DILocation(line: 706, column: 9, scope: !4110)
!4113 = !DILocation(line: 708, column: 16, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4115, file: !1431, line: 708, column: 15)
!4115 = distinct !DILexicalBlock(scope: !4110, file: !1431, line: 707, column: 9)
!4116 = !DILocation(line: 708, column: 30, scope: !4114)
!4117 = !DILocation(line: 708, column: 43, scope: !4114)
!4118 = !DILocation(line: 708, column: 15, scope: !4115)
!4119 = distinct !{!4119, !4112, !4120, !2694, !2695}
!4120 = !DILocation(line: 712, column: 9, scope: !4110)
!4121 = !DILocation(line: 716, column: 36, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4110, file: !1431, line: 716, column: 13)
!4123 = !{!3845, !3681, i64 32}
!4124 = !DILocation(line: 716, column: 46, scope: !4122)
!4125 = !DILocation(line: 716, column: 13, scope: !4110)
!4126 = !DILocation(line: 728, column: 11, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4122, file: !1431, line: 717, column: 9)
!4128 = !{!3845, !3681, i64 8}
!4129 = !DILocation(line: 729, column: 9, scope: !4127)
!4130 = !DILocation(line: 732, column: 9, scope: !4110)
!4131 = !{!3845, !3681, i64 36}
!4132 = !DILocation(line: 735, column: 9, scope: !4110)
!4133 = !DILocation(line: 738, column: 21, scope: !4110)
!4134 = !DILocation(line: 741, column: 9, scope: !4110)
!4135 = !DILocation(line: 741, column: 16, scope: !4110)
!4136 = !DILocation(line: 741, column: 53, scope: !4110)
!4137 = !DILocation(line: 743, column: 16, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4139, file: !1431, line: 743, column: 15)
!4139 = distinct !DILexicalBlock(scope: !4110, file: !1431, line: 742, column: 9)
!4140 = !DILocation(line: 743, column: 30, scope: !4138)
!4141 = !DILocation(line: 743, column: 43, scope: !4138)
!4142 = !DILocation(line: 743, column: 15, scope: !4139)
!4143 = distinct !{!4143, !4134, !4144, !2694, !2695}
!4144 = !DILocation(line: 747, column: 9, scope: !4110)
!4145 = !DILocation(line: 758, column: 16, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4105, file: !1431, line: 750, column: 7)
!4147 = !DILocation(line: 758, column: 53, scope: !4146)
!4148 = !DILocation(line: 758, column: 9, scope: !4146)
!4149 = !DILocation(line: 760, column: 16, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4151, file: !1431, line: 760, column: 15)
!4151 = distinct !DILexicalBlock(scope: !4146, file: !1431, line: 759, column: 9)
!4152 = !DILocation(line: 760, column: 30, scope: !4150)
!4153 = !DILocation(line: 760, column: 43, scope: !4150)
!4154 = !DILocation(line: 760, column: 15, scope: !4151)
!4155 = distinct !{!4155, !4148, !4156, !2694, !2695}
!4156 = !DILocation(line: 764, column: 9, scope: !4146)
!4157 = !DILocation(line: 770, column: 45, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4159, file: !1431, line: 770, column: 11)
!4159 = distinct !DILexicalBlock(scope: !4100, file: !1431, line: 768, column: 5)
!4160 = !DILocation(line: 770, column: 11, scope: !4159)
!4161 = !DILocation(line: 777, column: 27, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4158, file: !1431, line: 775, column: 7)
!4163 = !DILocation(line: 778, column: 14, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4162, file: !1431, line: 778, column: 13)
!4165 = !DILocation(line: 778, column: 78, scope: !4164)
!4166 = !DILocation(line: 778, column: 52, scope: !4164)
!4167 = !DILocation(line: 778, column: 89, scope: !4164)
!4168 = !DILocation(line: 779, column: 14, scope: !4164)
!4169 = !DILocation(line: 779, column: 79, scope: !4164)
!4170 = !DILocation(line: 779, column: 53, scope: !4164)
!4171 = !DILocation(line: 778, column: 13, scope: !4162)
!4172 = !DILocation(line: 787, column: 3, scope: !3805)
!4173 = !DILocation(line: 788, column: 1, scope: !3805)
!4174 = distinct !DISubprogram(name: "RCC_Delay", scope: !1431, file: !1431, line: 1365, type: !4175, scopeLine: 1366, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !4177)
!4175 = !DISubroutineType(types: !4176)
!4176 = !{null, !24}
!4177 = !{!4178, !4179}
!4178 = !DILocalVariable(name: "mdelay", arg: 1, scope: !4174, file: !1431, line: 1365, type: !24)
!4179 = !DILocalVariable(name: "Delay", scope: !4174, file: !1431, line: 1367, type: !23)
!4180 = !DILocation(line: 0, scope: !4174)
!4181 = !DILocation(line: 1367, column: 3, scope: !4174)
!4182 = !DILocation(line: 1367, column: 17, scope: !4174)
!4183 = !DILocation(line: 1367, column: 35, scope: !4174)
!4184 = !DILocation(line: 1367, column: 56, scope: !4174)
!4185 = !DILocation(line: 1368, column: 3, scope: !4174)
!4186 = !DILocation(line: 1370, column: 5, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4174, file: !1431, line: 1369, column: 3)
!4188 = !{i64 2149488927}
!4189 = !DILocation(line: 1372, column: 16, scope: !4174)
!4190 = !DILocation(line: 1371, column: 3, scope: !4187)
!4191 = distinct !{!4191, !4185, !4192, !2694, !2695}
!4192 = !DILocation(line: 1372, column: 18, scope: !4174)
!4193 = !DILocation(line: 1373, column: 1, scope: !4174)
!4194 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !1431, file: !1431, line: 813, type: !4195, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !4206)
!4195 = !DISubroutineType(types: !4196)
!4196 = !{!3735, !4197, !24}
!4197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4198, size: 32)
!4198 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !2502, line: 80, baseType: !4199)
!4199 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2502, line: 64, size: 160, elements: !4200)
!4200 = !{!4201, !4202, !4203, !4204, !4205}
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !4199, file: !2502, line: 66, baseType: !24, size: 32)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !4199, file: !2502, line: 69, baseType: !24, size: 32, offset: 32)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !4199, file: !2502, line: 72, baseType: !24, size: 32, offset: 64)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !4199, file: !2502, line: 75, baseType: !24, size: 32, offset: 96)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !4199, file: !2502, line: 78, baseType: !24, size: 32, offset: 128)
!4206 = !{!4207, !4208, !4209}
!4207 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !4194, file: !1431, line: 813, type: !4197)
!4208 = !DILocalVariable(name: "FLatency", arg: 2, scope: !4194, file: !1431, line: 813, type: !24)
!4209 = !DILocalVariable(name: "tickstart", scope: !4194, file: !1431, line: 815, type: !24)
!4210 = !DILocation(line: 0, scope: !4194)
!4211 = !DILocation(line: 818, column: 25, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4194, file: !1431, line: 818, column: 7)
!4213 = !DILocation(line: 818, column: 7, scope: !4194)
!4214 = !DILocation(line: 833, column: 18, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4194, file: !1431, line: 833, column: 7)
!4216 = !{!4217, !3681, i64 0}
!4217 = !{!"", !3681, i64 0, !3681, i64 4, !3681, i64 8, !3681, i64 12, !3681, i64 16, !3681, i64 20, !3681, i64 24, !3681, i64 28, !3681, i64 32}
!4218 = !DILocation(line: 833, column: 16, scope: !4215)
!4219 = !DILocation(line: 833, column: 7, scope: !4194)
!4220 = !DILocation(line: 836, column: 5, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4215, file: !1431, line: 834, column: 3)
!4222 = !DILocation(line: 840, column: 9, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4221, file: !1431, line: 840, column: 9)
!4224 = !DILocation(line: 840, column: 35, scope: !4223)
!4225 = !DILocation(line: 840, column: 9, scope: !4221)
!4226 = !DILocation(line: 848, column: 26, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4194, file: !1431, line: 848, column: 5)
!4228 = !{!4229, !3681, i64 0}
!4229 = !{!"", !3681, i64 0, !3681, i64 4, !3681, i64 8, !3681, i64 12, !3681, i64 16}
!4230 = !DILocation(line: 848, column: 37, scope: !4227)
!4231 = !DILocation(line: 848, column: 59, scope: !4227)
!4232 = !DILocation(line: 848, column: 5, scope: !4194)
!4233 = !DILocation(line: 852, column: 41, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4235, file: !1431, line: 852, column: 9)
!4235 = distinct !DILexicalBlock(scope: !4227, file: !1431, line: 849, column: 3)
!4236 = !DILocation(line: 852, column: 64, scope: !4234)
!4237 = !DILocation(line: 852, column: 9, scope: !4235)
!4238 = !DILocation(line: 854, column: 7, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4234, file: !1431, line: 853, column: 5)
!4240 = !DILocation(line: 855, column: 5, scope: !4239)
!4241 = !DILocation(line: 857, column: 41, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4235, file: !1431, line: 857, column: 9)
!4243 = !DILocation(line: 857, column: 64, scope: !4242)
!4244 = !DILocation(line: 857, column: 9, scope: !4235)
!4245 = !DILocation(line: 859, column: 7, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4242, file: !1431, line: 858, column: 5)
!4247 = !DILocation(line: 860, column: 5, scope: !4246)
!4248 = !DILocation(line: 864, column: 5, scope: !4235)
!4249 = !{!4229, !3681, i64 8}
!4250 = !DILocation(line: 865, column: 3, scope: !4235)
!4251 = !DILocation(line: 868, column: 39, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4194, file: !1431, line: 868, column: 7)
!4253 = !DILocation(line: 868, column: 63, scope: !4252)
!4254 = !DILocation(line: 868, column: 7, scope: !4194)
!4255 = !DILocation(line: 873, column: 28, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4257, file: !1431, line: 873, column: 9)
!4257 = distinct !DILexicalBlock(scope: !4252, file: !1431, line: 869, column: 3)
!4258 = !{!4229, !3681, i64 4}
!4259 = !DILocation(line: 873, column: 9, scope: !4257)
!4260 = !DILocation(line: 876, column: 11, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4262, file: !1431, line: 876, column: 11)
!4262 = distinct !DILexicalBlock(scope: !4256, file: !1431, line: 874, column: 5)
!4263 = !DILocation(line: 876, column: 47, scope: !4261)
!4264 = !DILocation(line: 876, column: 11, scope: !4262)
!4265 = !DILocation(line: 885, column: 11, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4267, file: !1431, line: 885, column: 11)
!4267 = distinct !DILexicalBlock(scope: !4268, file: !1431, line: 883, column: 5)
!4268 = distinct !DILexicalBlock(scope: !4256, file: !1431, line: 882, column: 14)
!4269 = !DILocation(line: 885, column: 47, scope: !4266)
!4270 = !DILocation(line: 885, column: 11, scope: !4267)
!4271 = !DILocation(line: 894, column: 11, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4273, file: !1431, line: 894, column: 11)
!4273 = distinct !DILexicalBlock(scope: !4268, file: !1431, line: 892, column: 5)
!4274 = !DILocation(line: 894, column: 47, scope: !4272)
!4275 = !DILocation(line: 894, column: 11, scope: !4273)
!4276 = !DILocation(line: 899, column: 5, scope: !4257)
!4277 = !DILocation(line: 902, column: 17, scope: !4257)
!4278 = !DILocation(line: 904, column: 5, scope: !4257)
!4279 = !DILocation(line: 904, column: 12, scope: !4257)
!4280 = !DILocation(line: 904, column: 65, scope: !4257)
!4281 = !DILocation(line: 904, column: 78, scope: !4257)
!4282 = !DILocation(line: 904, column: 42, scope: !4257)
!4283 = !DILocation(line: 906, column: 12, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4285, file: !1431, line: 906, column: 11)
!4285 = distinct !DILexicalBlock(scope: !4257, file: !1431, line: 905, column: 5)
!4286 = !DILocation(line: 906, column: 26, scope: !4284)
!4287 = !DILocation(line: 906, column: 39, scope: !4284)
!4288 = !DILocation(line: 906, column: 11, scope: !4285)
!4289 = distinct !{!4289, !4278, !4290, !2694, !2695}
!4290 = !DILocation(line: 910, column: 5, scope: !4257)
!4291 = !DILocation(line: 915, column: 18, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4194, file: !1431, line: 915, column: 7)
!4293 = !DILocation(line: 915, column: 16, scope: !4292)
!4294 = !DILocation(line: 915, column: 7, scope: !4194)
!4295 = !DILocation(line: 918, column: 5, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4292, file: !1431, line: 916, column: 3)
!4297 = !DILocation(line: 922, column: 9, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4296, file: !1431, line: 922, column: 9)
!4299 = !DILocation(line: 922, column: 35, scope: !4298)
!4300 = !DILocation(line: 922, column: 9, scope: !4296)
!4301 = !DILocation(line: 930, column: 26, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4194, file: !1431, line: 930, column: 5)
!4303 = !DILocation(line: 930, column: 37, scope: !4302)
!4304 = !DILocation(line: 930, column: 60, scope: !4302)
!4305 = !DILocation(line: 930, column: 5, scope: !4194)
!4306 = !DILocation(line: 933, column: 5, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4302, file: !1431, line: 931, column: 3)
!4308 = !{!4229, !3681, i64 12}
!4309 = !DILocation(line: 934, column: 3, scope: !4307)
!4310 = !DILocation(line: 937, column: 39, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4194, file: !1431, line: 937, column: 7)
!4312 = !DILocation(line: 937, column: 62, scope: !4311)
!4313 = !DILocation(line: 937, column: 7, scope: !4194)
!4314 = !DILocation(line: 940, column: 5, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4311, file: !1431, line: 938, column: 3)
!4316 = !{!4229, !3681, i64 16}
!4317 = !DILocation(line: 941, column: 3, scope: !4315)
!4318 = !DILocation(line: 944, column: 21, scope: !4194)
!4319 = !DILocation(line: 944, column: 70, scope: !4194)
!4320 = !DILocation(line: 944, column: 92, scope: !4194)
!4321 = !DILocation(line: 944, column: 50, scope: !4194)
!4322 = !DILocation(line: 944, column: 47, scope: !4194)
!4323 = !DILocation(line: 944, column: 19, scope: !4194)
!4324 = !DILocation(line: 947, column: 16, scope: !4194)
!4325 = !DILocation(line: 947, column: 3, scope: !4194)
!4326 = !DILocation(line: 949, column: 3, scope: !4194)
!4327 = !DILocation(line: 950, column: 1, scope: !4194)
!4328 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !1431, file: !1431, line: 1082, type: !1904, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !4329)
!4329 = !{!4330, !4331, !4333, !4334, !4335, !4336, !4337}
!4330 = !DILocalVariable(name: "aPLLMULFactorTable", scope: !4328, file: !1431, line: 1088, type: !593)
!4331 = !DILocalVariable(name: "aPredivFactorTable", scope: !4328, file: !1431, line: 1092, type: !4332)
!4332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !590, size: 16, elements: !569)
!4333 = !DILocalVariable(name: "tmpreg", scope: !4328, file: !1431, line: 1096, type: !24)
!4334 = !DILocalVariable(name: "prediv", scope: !4328, file: !1431, line: 1096, type: !24)
!4335 = !DILocalVariable(name: "pllclk", scope: !4328, file: !1431, line: 1096, type: !24)
!4336 = !DILocalVariable(name: "pllmul", scope: !4328, file: !1431, line: 1096, type: !24)
!4337 = !DILocalVariable(name: "sysclockfreq", scope: !4328, file: !1431, line: 1097, type: !24)
!4338 = !DILocation(line: 1088, column: 17, scope: !4328)
!4339 = !DILocation(line: 1092, column: 17, scope: !4328)
!4340 = !DILocation(line: 0, scope: !4328)
!4341 = !DILocation(line: 1102, column: 17, scope: !4328)
!4342 = !DILocation(line: 1105, column: 18, scope: !4328)
!4343 = !DILocation(line: 1105, column: 3, scope: !4328)
!4344 = !DILocation(line: 1114, column: 73, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4346, file: !1431, line: 1113, column: 5)
!4346 = distinct !DILexicalBlock(scope: !4328, file: !1431, line: 1106, column: 3)
!4347 = !DILocation(line: 1114, column: 16, scope: !4345)
!4348 = !DILocation(line: 1115, column: 19, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4345, file: !1431, line: 1115, column: 11)
!4350 = !DILocation(line: 1115, column: 38, scope: !4349)
!4351 = !DILocation(line: 1115, column: 11, scope: !4345)
!4352 = !DILocation(line: 1120, column: 53, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4349, file: !1431, line: 1116, column: 7)
!4354 = !DILocation(line: 1120, column: 79, scope: !4353)
!4355 = !DILocation(line: 1120, column: 18, scope: !4353)
!4356 = !DILocation(line: 1146, column: 41, scope: !4353)
!4357 = !DILocation(line: 1146, column: 51, scope: !4353)
!4358 = !DILocation(line: 1148, column: 7, scope: !4353)
!4359 = !DILocation(line: 1152, column: 46, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4349, file: !1431, line: 1150, column: 7)
!4361 = !DILocation(line: 0, scope: !4346)
!4362 = !DILocation(line: 1164, column: 3, scope: !4328)
!4363 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !1431, file: !1431, line: 1002, type: !4364, scopeLine: 1003, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !4366)
!4364 = !DISubroutineType(types: !4365)
!4365 = !{null, !24, !24, !24}
!4366 = !{!4367, !4368, !4369, !4370, !4378}
!4367 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !4363, file: !1431, line: 1002, type: !24)
!4368 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !4363, file: !1431, line: 1002, type: !24)
!4369 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !4363, file: !1431, line: 1002, type: !24)
!4370 = !DILocalVariable(name: "gpio", scope: !4363, file: !1431, line: 1004, type: !4371)
!4371 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !1542, line: 60, baseType: !4372)
!4372 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1542, line: 47, size: 128, elements: !4373)
!4373 = !{!4374, !4375, !4376, !4377}
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !4372, file: !1542, line: 49, baseType: !24, size: 32)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !4372, file: !1542, line: 52, baseType: !24, size: 32, offset: 32)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !4372, file: !1542, line: 55, baseType: !24, size: 32, offset: 64)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !4372, file: !1542, line: 58, baseType: !24, size: 32, offset: 96)
!4378 = !DILocalVariable(name: "tmpreg", scope: !4379, file: !1431, line: 1022, type: !23)
!4379 = distinct !DILexicalBlock(scope: !4363, file: !1431, line: 1022, column: 3)
!4380 = !DILocation(line: 0, scope: !4363)
!4381 = !DILocation(line: 1004, column: 3, scope: !4363)
!4382 = !DILocation(line: 1004, column: 20, scope: !4363)
!4383 = !DILocation(line: 1016, column: 8, scope: !4363)
!4384 = !DILocation(line: 1016, column: 18, scope: !4363)
!4385 = !{!4386, !3681, i64 4}
!4386 = !{!"", !3681, i64 0, !3681, i64 4, !3681, i64 8, !3681, i64 12}
!4387 = !DILocation(line: 1017, column: 8, scope: !4363)
!4388 = !DILocation(line: 1017, column: 18, scope: !4363)
!4389 = !{!4386, !3681, i64 12}
!4390 = !DILocation(line: 1018, column: 8, scope: !4363)
!4391 = !DILocation(line: 1018, column: 18, scope: !4363)
!4392 = !{!4386, !3681, i64 8}
!4393 = !DILocation(line: 1019, column: 8, scope: !4363)
!4394 = !DILocation(line: 1019, column: 18, scope: !4363)
!4395 = !{!4386, !3681, i64 0}
!4396 = !DILocation(line: 1022, column: 3, scope: !4379)
!4397 = !{!3680, !3681, i64 24}
!4398 = !DILocation(line: 1022, column: 3, scope: !4363)
!4399 = !DILocation(line: 1024, column: 3, scope: !4363)
!4400 = !DILocation(line: 1027, column: 3, scope: !4363)
!4401 = !DILocation(line: 1028, column: 1, scope: !4363)
!4402 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !1431, file: !1431, line: 1039, type: !4, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !121)
!4403 = !DILocation(line: 1041, column: 38, scope: !4402)
!4404 = !DILocation(line: 1042, column: 1, scope: !4402)
!4405 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !1431, file: !1431, line: 1048, type: !4, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !121)
!4406 = !DILocation(line: 1050, column: 38, scope: !4405)
!4407 = !DILocation(line: 1051, column: 1, scope: !4405)
!4408 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !1431, file: !1431, line: 1176, type: !1904, scopeLine: 1177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !121)
!4409 = !DILocation(line: 1178, column: 10, scope: !4408)
!4410 = !DILocation(line: 1178, column: 3, scope: !4408)
!4411 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !1431, file: !1431, line: 1187, type: !1904, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !121)
!4412 = !DILocation(line: 1190, column: 11, scope: !4411)
!4413 = !DILocation(line: 1190, column: 56, scope: !4411)
!4414 = !DILocation(line: 1190, column: 79, scope: !4411)
!4415 = !DILocation(line: 1190, column: 36, scope: !4411)
!4416 = !DILocation(line: 1190, column: 33, scope: !4411)
!4417 = !DILocation(line: 1190, column: 3, scope: !4411)
!4418 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !1431, file: !1431, line: 1199, type: !1904, scopeLine: 1200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !121)
!4419 = !DILocation(line: 1202, column: 11, scope: !4418)
!4420 = !DILocation(line: 1202, column: 56, scope: !4418)
!4421 = !DILocation(line: 1202, column: 79, scope: !4418)
!4422 = !DILocation(line: 1202, column: 36, scope: !4418)
!4423 = !DILocation(line: 1202, column: 33, scope: !4418)
!4424 = !DILocation(line: 1202, column: 3, scope: !4418)
!4425 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !1431, file: !1431, line: 1212, type: !4426, scopeLine: 1213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !4428)
!4426 = !DISubroutineType(types: !4427)
!4427 = !{null, !3808}
!4428 = !{!4429}
!4429 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !4425, file: !1431, line: 1212, type: !3808)
!4430 = !DILocation(line: 0, scope: !4425)
!4431 = !DILocation(line: 1218, column: 22, scope: !4425)
!4432 = !DILocation(line: 1218, column: 37, scope: !4425)
!4433 = !DILocation(line: 1227, column: 13, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4425, file: !1431, line: 1227, column: 7)
!4435 = !DILocation(line: 1227, column: 16, scope: !4434)
!4436 = !DILocation(line: 1227, column: 33, scope: !4434)
!4437 = !DILocation(line: 1227, column: 7, scope: !4425)
!4438 = !DILocation(line: 1229, column: 24, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4434, file: !1431, line: 1228, column: 3)
!4440 = !DILocation(line: 1229, column: 33, scope: !4439)
!4441 = !DILocation(line: 1230, column: 3, scope: !4439)
!4442 = !DILocation(line: 1231, column: 18, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4434, file: !1431, line: 1231, column: 12)
!4444 = !DILocation(line: 1231, column: 21, scope: !4443)
!4445 = !DILocation(line: 1231, column: 37, scope: !4443)
!4446 = !DILocation(line: 0, scope: !4443)
!4447 = !DILocation(line: 1231, column: 12, scope: !4434)
!4448 = !DILocation(line: 1233, column: 33, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4443, file: !1431, line: 1232, column: 3)
!4450 = !DILocation(line: 1234, column: 3, scope: !4449)
!4451 = !DILocation(line: 1237, column: 33, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4443, file: !1431, line: 1236, column: 3)
!4453 = !DILocation(line: 1239, column: 39, scope: !4425)
!4454 = !DILocation(line: 1239, column: 22, scope: !4425)
!4455 = !DILocation(line: 1239, column: 37, scope: !4425)
!4456 = !DILocation(line: 1242, column: 13, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4425, file: !1431, line: 1242, column: 7)
!4458 = !DILocation(line: 1242, column: 16, scope: !4457)
!4459 = !DILocation(line: 0, scope: !4457)
!4460 = !DILocation(line: 1251, column: 61, scope: !4425)
!4461 = !DILocation(line: 1251, column: 82, scope: !4425)
!4462 = !DILocation(line: 1251, column: 22, scope: !4425)
!4463 = !DILocation(line: 1251, column: 42, scope: !4425)
!4464 = !DILocation(line: 1254, column: 13, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4425, file: !1431, line: 1254, column: 7)
!4466 = !DILocation(line: 1254, column: 18, scope: !4465)
!4467 = !DILocation(line: 1254, column: 37, scope: !4465)
!4468 = !DILocation(line: 1254, column: 7, scope: !4425)
!4469 = !DILocation(line: 1256, column: 24, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4465, file: !1431, line: 1255, column: 3)
!4471 = !DILocation(line: 1256, column: 33, scope: !4470)
!4472 = !DILocation(line: 1257, column: 3, scope: !4470)
!4473 = !DILocation(line: 1258, column: 18, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4465, file: !1431, line: 1258, column: 12)
!4475 = !DILocation(line: 1258, column: 23, scope: !4474)
!4476 = !DILocation(line: 1258, column: 41, scope: !4474)
!4477 = !DILocation(line: 0, scope: !4474)
!4478 = !DILocation(line: 1258, column: 12, scope: !4465)
!4479 = !DILocation(line: 1260, column: 33, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4474, file: !1431, line: 1259, column: 3)
!4481 = !DILocation(line: 1261, column: 3, scope: !4480)
!4482 = !DILocation(line: 1264, column: 33, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4474, file: !1431, line: 1263, column: 3)
!4484 = !DILocation(line: 1268, column: 13, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4425, file: !1431, line: 1268, column: 7)
!4486 = !DILocation(line: 1268, column: 17, scope: !4485)
!4487 = !DILocation(line: 0, scope: !4485)
!4488 = !DILocation(line: 1279, column: 13, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4425, file: !1431, line: 1279, column: 7)
!4490 = !DILocation(line: 1279, column: 16, scope: !4489)
!4491 = !DILocation(line: 1279, column: 32, scope: !4489)
!4492 = !DILocation(line: 1279, column: 7, scope: !4425)
!4493 = !DILocation(line: 0, scope: !4489)
!4494 = !DILocation(line: 1287, column: 54, scope: !4425)
!4495 = !DILocation(line: 1287, column: 59, scope: !4425)
!4496 = !DILocation(line: 1287, column: 26, scope: !4425)
!4497 = !DILocation(line: 1287, column: 36, scope: !4425)
!4498 = !DILocation(line: 1288, column: 51, scope: !4425)
!4499 = !DILocation(line: 1288, column: 56, scope: !4425)
!4500 = !DILocation(line: 1288, column: 26, scope: !4425)
!4501 = !DILocation(line: 1288, column: 33, scope: !4425)
!4502 = !DILocation(line: 1302, column: 1, scope: !4425)
!4503 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !1431, file: !1431, line: 1312, type: !4504, scopeLine: 1313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !4506)
!4504 = !DISubroutineType(types: !4505)
!4505 = !{null, !4197, !710}
!4506 = !{!4507, !4508}
!4507 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !4503, file: !1431, line: 1312, type: !4197)
!4508 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !4503, file: !1431, line: 1312, type: !710)
!4509 = !DILocation(line: 0, scope: !4503)
!4510 = !DILocation(line: 1319, column: 22, scope: !4503)
!4511 = !DILocation(line: 1319, column: 32, scope: !4503)
!4512 = !DILocation(line: 1322, column: 53, scope: !4503)
!4513 = !DILocation(line: 1322, column: 58, scope: !4503)
!4514 = !DILocation(line: 1322, column: 22, scope: !4503)
!4515 = !DILocation(line: 1322, column: 35, scope: !4503)
!4516 = !DILocation(line: 1325, column: 54, scope: !4503)
!4517 = !DILocation(line: 1325, column: 59, scope: !4503)
!4518 = !DILocation(line: 1325, column: 22, scope: !4503)
!4519 = !DILocation(line: 1325, column: 36, scope: !4503)
!4520 = !DILocation(line: 1328, column: 55, scope: !4503)
!4521 = !DILocation(line: 1328, column: 60, scope: !4503)
!4522 = !DILocation(line: 1328, column: 22, scope: !4503)
!4523 = !DILocation(line: 1328, column: 37, scope: !4503)
!4524 = !DILocation(line: 1331, column: 56, scope: !4503)
!4525 = !DILocation(line: 1331, column: 79, scope: !4503)
!4526 = !DILocation(line: 1331, column: 22, scope: !4503)
!4527 = !DILocation(line: 1331, column: 37, scope: !4503)
!4528 = !DILocation(line: 1335, column: 34, scope: !4503)
!4529 = !DILocation(line: 1335, column: 38, scope: !4503)
!4530 = !DILocation(line: 1335, column: 14, scope: !4503)
!4531 = !DILocation(line: 1340, column: 1, scope: !4503)
!4532 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !1431, file: !1431, line: 1347, type: !4, scopeLine: 1348, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !121)
!4533 = !DILocation(line: 1350, column: 7, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4532, file: !1431, line: 1350, column: 7)
!4535 = !DILocation(line: 1350, column: 7, scope: !4532)
!4536 = !DILocation(line: 1353, column: 5, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4534, file: !1431, line: 1351, column: 3)
!4538 = !DILocation(line: 1356, column: 5, scope: !4537)
!4539 = !DILocation(line: 1357, column: 3, scope: !4537)
!4540 = !DILocation(line: 1358, column: 1, scope: !4532)
!4541 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !1431, file: !1431, line: 1379, type: !4, scopeLine: 1380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !121)
!4542 = !DILocation(line: 1384, column: 1, scope: !4541)
!4543 = distinct !DISubprogram(name: "HAL_Init", scope: !599, file: !599, line: 142, type: !3733, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !121)
!4544 = !DILocation(line: 152, column: 3, scope: !4543)
!4545 = !DILocation(line: 157, column: 3, scope: !4543)
!4546 = !DILocation(line: 160, column: 3, scope: !4543)
!4547 = !DILocation(line: 163, column: 3, scope: !4543)
!4548 = !DILocation(line: 166, column: 3, scope: !4543)
!4549 = distinct !DISubprogram(name: "HAL_InitTick", scope: !599, file: !599, line: 234, type: !4550, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !4552)
!4550 = !DISubroutineType(types: !4551)
!4551 = !{!3735, !24}
!4552 = !{!4553}
!4553 = !DILocalVariable(name: "TickPriority", arg: 1, scope: !4549, file: !599, line: 234, type: !24)
!4554 = !DILocation(line: 0, scope: !4549)
!4555 = !DILocation(line: 237, column: 26, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4549, file: !599, line: 237, column: 7)
!4557 = !DILocation(line: 237, column: 53, scope: !4556)
!4558 = !DILocation(line: 237, column: 51, scope: !4556)
!4559 = !DILocation(line: 237, column: 42, scope: !4556)
!4560 = !DILocation(line: 237, column: 7, scope: !4556)
!4561 = !DILocation(line: 237, column: 66, scope: !4556)
!4562 = !DILocation(line: 237, column: 7, scope: !4549)
!4563 = !DILocation(line: 245, column: 5, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4565, file: !599, line: 244, column: 3)
!4565 = distinct !DILexicalBlock(scope: !4549, file: !599, line: 243, column: 7)
!4566 = !DILocation(line: 246, column: 16, scope: !4564)
!4567 = !DILocation(line: 254, column: 3, scope: !4549)
!4568 = !DILocation(line: 255, column: 1, scope: !4549)
!4569 = distinct !DISubprogram(name: "HAL_MspInit", scope: !599, file: !599, line: 200, type: !4, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !121)
!4570 = !DILocation(line: 205, column: 1, scope: !4569)
!4571 = distinct !DISubprogram(name: "HAL_DeInit", scope: !599, file: !599, line: 175, type: !3733, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !121)
!4572 = !DILocation(line: 178, column: 3, scope: !4571)
!4573 = !{!3680, !3681, i64 12}
!4574 = !DILocation(line: 179, column: 3, scope: !4571)
!4575 = !{!3680, !3681, i64 16}
!4576 = !DILocation(line: 181, column: 3, scope: !4571)
!4577 = !DILocation(line: 182, column: 3, scope: !4571)
!4578 = !DILocation(line: 190, column: 3, scope: !4571)
!4579 = !DILocation(line: 193, column: 3, scope: !4571)
!4580 = distinct !DISubprogram(name: "HAL_MspDeInit", scope: !599, file: !599, line: 211, type: !4, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !121)
!4581 = !DILocation(line: 216, column: 1, scope: !4580)
!4582 = distinct !DISubprogram(name: "HAL_IncTick", scope: !599, file: !599, line: 293, type: !4, scopeLine: 294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !121)
!4583 = !DILocation(line: 295, column: 13, scope: !4582)
!4584 = !DILocation(line: 295, column: 10, scope: !4582)
!4585 = !DILocation(line: 296, column: 1, scope: !4582)
!4586 = distinct !DISubprogram(name: "HAL_GetTick", scope: !599, file: !599, line: 304, type: !1904, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !121)
!4587 = !DILocation(line: 306, column: 10, scope: !4586)
!4588 = !DILocation(line: 306, column: 3, scope: !4586)
!4589 = distinct !DISubprogram(name: "HAL_GetTickPrio", scope: !599, file: !599, line: 313, type: !1904, scopeLine: 314, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !121)
!4590 = !DILocation(line: 315, column: 10, scope: !4589)
!4591 = !DILocation(line: 315, column: 3, scope: !4589)
!4592 = distinct !DISubprogram(name: "HAL_SetTickFreq", scope: !599, file: !599, line: 322, type: !4593, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !4595)
!4593 = !DISubroutineType(types: !4594)
!4594 = !{!3735, !714}
!4595 = !{!4596, !4597}
!4596 = !DILocalVariable(name: "Freq", arg: 1, scope: !4592, file: !599, line: 322, type: !714)
!4597 = !DILocalVariable(name: "status", scope: !4592, file: !599, line: 324, type: !3735)
!4598 = !DILocation(line: 0, scope: !4592)
!4599 = !DILocation(line: 327, column: 7, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4592, file: !599, line: 327, column: 7)
!4601 = !DILocation(line: 327, column: 18, scope: !4600)
!4602 = !DILocation(line: 327, column: 7, scope: !4592)
!4603 = !DILocation(line: 330, column: 27, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4600, file: !599, line: 328, column: 3)
!4605 = !DILocation(line: 330, column: 14, scope: !4604)
!4606 = !DILocation(line: 331, column: 16, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4604, file: !599, line: 331, column: 9)
!4608 = !DILocation(line: 331, column: 9, scope: !4604)
!4609 = !DILocation(line: 333, column: 18, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4607, file: !599, line: 332, column: 5)
!4611 = !DILocation(line: 334, column: 5, scope: !4610)
!4612 = !DILocation(line: 337, column: 3, scope: !4592)
!4613 = distinct !DISubprogram(name: "HAL_GetTickFreq", scope: !599, file: !599, line: 344, type: !4614, scopeLine: 345, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !121)
!4614 = !DISubroutineType(types: !4615)
!4615 = !{!714}
!4616 = !DILocation(line: 346, column: 10, scope: !4613)
!4617 = !DILocation(line: 346, column: 3, scope: !4613)
!4618 = distinct !DISubprogram(name: "HAL_Delay", scope: !599, file: !599, line: 360, type: !4175, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !4619)
!4619 = !{!4620, !4621, !4622}
!4620 = !DILocalVariable(name: "Delay", arg: 1, scope: !4618, file: !599, line: 360, type: !24)
!4621 = !DILocalVariable(name: "tickstart", scope: !4618, file: !599, line: 362, type: !24)
!4622 = !DILocalVariable(name: "wait", scope: !4618, file: !599, line: 363, type: !24)
!4623 = !DILocation(line: 0, scope: !4618)
!4624 = !DILocation(line: 362, column: 24, scope: !4618)
!4625 = !DILocation(line: 366, column: 12, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4618, file: !599, line: 366, column: 7)
!4627 = !DILocation(line: 366, column: 7, scope: !4618)
!4628 = !DILocation(line: 371, column: 3, scope: !4618)
!4629 = !DILocation(line: 371, column: 11, scope: !4618)
!4630 = !DILocation(line: 371, column: 25, scope: !4618)
!4631 = !DILocation(line: 371, column: 38, scope: !4618)
!4632 = distinct !{!4632, !4628, !4633, !2694, !2695}
!4633 = !DILocation(line: 373, column: 3, scope: !4618)
!4634 = !DILocation(line: 374, column: 1, scope: !4618)
!4635 = distinct !DISubprogram(name: "HAL_SuspendTick", scope: !599, file: !599, line: 386, type: !4, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !121)
!4636 = !DILocation(line: 389, column: 3, scope: !4635)
!4637 = !DILocation(line: 390, column: 1, scope: !4635)
!4638 = distinct !DISubprogram(name: "HAL_ResumeTick", scope: !599, file: !599, line: 402, type: !4, scopeLine: 403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !121)
!4639 = !DILocation(line: 405, column: 3, scope: !4638)
!4640 = !DILocation(line: 406, column: 1, scope: !4638)
!4641 = distinct !DISubprogram(name: "HAL_GetHalVersion", scope: !599, file: !599, line: 412, type: !1904, scopeLine: 413, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !121)
!4642 = !DILocation(line: 414, column: 3, scope: !4641)
!4643 = distinct !DISubprogram(name: "HAL_GetREVID", scope: !599, file: !599, line: 428, type: !1904, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !121)
!4644 = !DILocation(line: 430, column: 20, scope: !4643)
!4645 = !DILocation(line: 430, column: 28, scope: !4643)
!4646 = !DILocation(line: 430, column: 3, scope: !4643)
!4647 = distinct !DISubprogram(name: "HAL_GetDEVID", scope: !599, file: !599, line: 444, type: !1904, scopeLine: 445, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !121)
!4648 = !DILocation(line: 446, column: 20, scope: !4647)
!4649 = !DILocation(line: 446, column: 28, scope: !4647)
!4650 = !DILocation(line: 446, column: 3, scope: !4647)
!4651 = distinct !DISubprogram(name: "HAL_GetUIDw0", scope: !599, file: !599, line: 453, type: !1904, scopeLine: 454, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !121)
!4652 = !DILocation(line: 455, column: 11, scope: !4651)
!4653 = !DILocation(line: 455, column: 4, scope: !4651)
!4654 = distinct !DISubprogram(name: "HAL_GetUIDw1", scope: !599, file: !599, line: 462, type: !1904, scopeLine: 463, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !121)
!4655 = !DILocation(line: 464, column: 11, scope: !4654)
!4656 = !DILocation(line: 464, column: 4, scope: !4654)
!4657 = distinct !DISubprogram(name: "HAL_GetUIDw2", scope: !599, file: !599, line: 471, type: !1904, scopeLine: 472, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !121)
!4658 = !DILocation(line: 473, column: 11, scope: !4657)
!4659 = !DILocation(line: 473, column: 4, scope: !4657)
!4660 = distinct !DISubprogram(name: "HAL_DBGMCU_EnableDBGSleepMode", scope: !599, file: !599, line: 480, type: !4, scopeLine: 481, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !121)
!4661 = !DILocation(line: 482, column: 3, scope: !4660)
!4662 = !{!4029, !3681, i64 4}
!4663 = !DILocation(line: 483, column: 1, scope: !4660)
!4664 = distinct !DISubprogram(name: "HAL_DBGMCU_DisableDBGSleepMode", scope: !599, file: !599, line: 496, type: !4, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !121)
!4665 = !DILocation(line: 498, column: 3, scope: !4664)
!4666 = !DILocation(line: 499, column: 1, scope: !4664)
!4667 = distinct !DISubprogram(name: "HAL_DBGMCU_EnableDBGStopMode", scope: !599, file: !599, line: 526, type: !4, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !121)
!4668 = !DILocation(line: 528, column: 3, scope: !4667)
!4669 = !DILocation(line: 529, column: 1, scope: !4667)
!4670 = distinct !DISubprogram(name: "HAL_DBGMCU_DisableDBGStopMode", scope: !599, file: !599, line: 542, type: !4, scopeLine: 543, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !121)
!4671 = !DILocation(line: 544, column: 3, scope: !4670)
!4672 = !DILocation(line: 545, column: 1, scope: !4670)
!4673 = distinct !DISubprogram(name: "HAL_DBGMCU_EnableDBGStandbyMode", scope: !599, file: !599, line: 558, type: !4, scopeLine: 559, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !121)
!4674 = !DILocation(line: 560, column: 3, scope: !4673)
!4675 = !DILocation(line: 561, column: 1, scope: !4673)
!4676 = distinct !DISubprogram(name: "HAL_DBGMCU_DisableDBGStandbyMode", scope: !599, file: !599, line: 574, type: !4, scopeLine: 575, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !598, retainedNodes: !121)
!4677 = !DILocation(line: 576, column: 3, scope: !4676)
!4678 = !DILocation(line: 577, column: 1, scope: !4676)
!4679 = distinct !DISubprogram(name: "HAL_NVIC_SetPriorityGrouping", scope: !1485, file: !1485, line: 143, type: !4175, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !4680)
!4680 = !{!4681}
!4681 = !DILocalVariable(name: "PriorityGroup", arg: 1, scope: !4679, file: !1485, line: 143, type: !24)
!4682 = !DILocation(line: 0, scope: !4679)
!4683 = !DILocation(line: 149, column: 3, scope: !4679)
!4684 = !DILocation(line: 150, column: 1, scope: !4679)
!4685 = distinct !DISubprogram(name: "__NVIC_SetPriorityGrouping", scope: !545, file: !545, line: 1480, type: !4175, scopeLine: 1481, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !4686)
!4686 = !{!4687, !4688, !4689}
!4687 = !DILocalVariable(name: "PriorityGroup", arg: 1, scope: !4685, file: !545, line: 1480, type: !24)
!4688 = !DILocalVariable(name: "reg_value", scope: !4685, file: !545, line: 1482, type: !24)
!4689 = !DILocalVariable(name: "PriorityGroupTmp", scope: !4685, file: !545, line: 1483, type: !24)
!4690 = !DILocation(line: 0, scope: !4685)
!4691 = !DILocation(line: 1485, column: 22, scope: !4685)
!4692 = !{!3691, !3681, i64 12}
!4693 = !DILocation(line: 1486, column: 13, scope: !4685)
!4694 = !DILocation(line: 1489, column: 35, scope: !4685)
!4695 = !DILocation(line: 1488, column: 62, scope: !4685)
!4696 = !DILocation(line: 1490, column: 14, scope: !4685)
!4697 = !DILocation(line: 1491, column: 1, scope: !4685)
!4698 = distinct !DISubprogram(name: "HAL_NVIC_SetPriority", scope: !1485, file: !1485, line: 165, type: !4699, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !4702)
!4699 = !DISubroutineType(types: !4700)
!4700 = !{null, !4701, !24, !24}
!4701 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !19, line: 126, baseType: !614)
!4702 = !{!4703, !4704, !4705, !4706}
!4703 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4698, file: !1485, line: 165, type: !4701)
!4704 = !DILocalVariable(name: "PreemptPriority", arg: 2, scope: !4698, file: !1485, line: 165, type: !24)
!4705 = !DILocalVariable(name: "SubPriority", arg: 3, scope: !4698, file: !1485, line: 165, type: !24)
!4706 = !DILocalVariable(name: "prioritygroup", scope: !4698, file: !1485, line: 167, type: !24)
!4707 = !DILocation(line: 0, scope: !4698)
!4708 = !DILocation(line: 173, column: 19, scope: !4698)
!4709 = !{i32 0, i32 8}
!4710 = !DILocation(line: 175, column: 26, scope: !4698)
!4711 = !DILocation(line: 175, column: 3, scope: !4698)
!4712 = !DILocation(line: 176, column: 1, scope: !4698)
!4713 = distinct !DISubprogram(name: "__NVIC_GetPriorityGrouping", scope: !545, file: !545, line: 1499, type: !1904, scopeLine: 1500, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !121)
!4714 = !DILocation(line: 1501, column: 28, scope: !4713)
!4715 = !DILocation(line: 1501, column: 60, scope: !4713)
!4716 = !DILocation(line: 1501, column: 3, scope: !4713)
!4717 = distinct !DISubprogram(name: "NVIC_EncodePriority", scope: !545, file: !545, line: 1686, type: !4718, scopeLine: 1687, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !4720)
!4718 = !DISubroutineType(types: !4719)
!4719 = !{!24, !24, !24, !24}
!4720 = !{!4721, !4722, !4723, !4724, !4725, !4726}
!4721 = !DILocalVariable(name: "PriorityGroup", arg: 1, scope: !4717, file: !545, line: 1686, type: !24)
!4722 = !DILocalVariable(name: "PreemptPriority", arg: 2, scope: !4717, file: !545, line: 1686, type: !24)
!4723 = !DILocalVariable(name: "SubPriority", arg: 3, scope: !4717, file: !545, line: 1686, type: !24)
!4724 = !DILocalVariable(name: "PriorityGroupTmp", scope: !4717, file: !545, line: 1688, type: !24)
!4725 = !DILocalVariable(name: "PreemptPriorityBits", scope: !4717, file: !545, line: 1689, type: !24)
!4726 = !DILocalVariable(name: "SubPriorityBits", scope: !4717, file: !545, line: 1690, type: !24)
!4727 = !DILocation(line: 0, scope: !4717)
!4728 = !DILocation(line: 1688, column: 46, scope: !4717)
!4729 = !DILocation(line: 1692, column: 31, scope: !4717)
!4730 = !DILocation(line: 1692, column: 25, scope: !4717)
!4731 = !DILocation(line: 1693, column: 25, scope: !4717)
!4732 = !DILocation(line: 1696, column: 74, scope: !4717)
!4733 = !DILocation(line: 1696, column: 30, scope: !4717)
!4734 = !DILocation(line: 1696, column: 82, scope: !4717)
!4735 = !DILocation(line: 1697, column: 74, scope: !4717)
!4736 = !DILocation(line: 1697, column: 30, scope: !4717)
!4737 = !DILocation(line: 1696, column: 102, scope: !4717)
!4738 = !DILocation(line: 1695, column: 3, scope: !4717)
!4739 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !545, file: !545, line: 1639, type: !4740, scopeLine: 1640, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !4742)
!4740 = !DISubroutineType(types: !4741)
!4741 = !{null, !4701, !24}
!4742 = !{!4743, !4744}
!4743 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4739, file: !545, line: 1639, type: !4701)
!4744 = !DILocalVariable(name: "priority", arg: 2, scope: !4739, file: !545, line: 1639, type: !24)
!4745 = !DILocation(line: 0, scope: !4739)
!4746 = !DILocation(line: 0, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4739, file: !545, line: 1641, column: 7)
!4748 = !DILocation(line: 1641, column: 7, scope: !4739)
!4749 = !DILocation(line: 1649, column: 1, scope: !4739)
!4750 = distinct !DISubprogram(name: "HAL_NVIC_EnableIRQ", scope: !1485, file: !1485, line: 187, type: !4751, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !4753)
!4751 = !DISubroutineType(types: !4752)
!4752 = !{null, !4701}
!4753 = !{!4754}
!4754 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4750, file: !1485, line: 187, type: !4701)
!4755 = !DILocation(line: 0, scope: !4750)
!4756 = !DILocation(line: 193, column: 3, scope: !4750)
!4757 = !DILocation(line: 194, column: 1, scope: !4750)
!4758 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !545, file: !545, line: 1511, type: !4751, scopeLine: 1512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !4759)
!4759 = !{!4760}
!4760 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4758, file: !545, line: 1511, type: !4701)
!4761 = !DILocation(line: 0, scope: !4758)
!4762 = !DILocation(line: 1513, column: 23, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4758, file: !545, line: 1513, column: 7)
!4764 = !DILocation(line: 1513, column: 7, scope: !4758)
!4765 = !DILocation(line: 1515, column: 81, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4763, file: !545, line: 1514, column: 3)
!4767 = !DILocation(line: 1515, column: 60, scope: !4766)
!4768 = !DILocation(line: 1515, column: 34, scope: !4766)
!4769 = !DILocation(line: 1515, column: 5, scope: !4766)
!4770 = !DILocation(line: 1515, column: 43, scope: !4766)
!4771 = !DILocation(line: 1516, column: 3, scope: !4766)
!4772 = !DILocation(line: 1517, column: 1, scope: !4758)
!4773 = distinct !DISubprogram(name: "HAL_NVIC_DisableIRQ", scope: !1485, file: !1485, line: 203, type: !4751, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !4774)
!4774 = !{!4775}
!4775 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4773, file: !1485, line: 203, type: !4701)
!4776 = !DILocation(line: 0, scope: !4773)
!4777 = !DILocation(line: 209, column: 3, scope: !4773)
!4778 = !DILocation(line: 210, column: 1, scope: !4773)
!4779 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !545, file: !545, line: 1547, type: !4751, scopeLine: 1548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !4780)
!4780 = !{!4781}
!4781 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4779, file: !545, line: 1547, type: !4701)
!4782 = !DILocation(line: 0, scope: !4779)
!4783 = !DILocation(line: 1549, column: 23, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4779, file: !545, line: 1549, column: 7)
!4785 = !DILocation(line: 1549, column: 7, scope: !4779)
!4786 = !DILocation(line: 1551, column: 81, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4784, file: !545, line: 1550, column: 3)
!4788 = !DILocation(line: 1551, column: 60, scope: !4787)
!4789 = !DILocation(line: 1551, column: 34, scope: !4787)
!4790 = !DILocation(line: 1551, column: 5, scope: !4787)
!4791 = !DILocation(line: 1551, column: 43, scope: !4787)
!4792 = !DILocation(line: 879, column: 3, scope: !4793, inlinedAt: !4795)
!4793 = distinct !DISubprogram(name: "__DSB", scope: !4794, file: !4794, line: 877, type: !4, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !121)
!4794 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "ba7e4770884341336138fcec9d34fc09")
!4795 = distinct !DILocation(line: 1552, column: 5, scope: !4787)
!4796 = !{i64 1222529}
!4797 = !DILocation(line: 868, column: 3, scope: !4798, inlinedAt: !4799)
!4798 = distinct !DISubprogram(name: "__ISB", scope: !4794, file: !4794, line: 866, type: !4, scopeLine: 867, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !121)
!4799 = distinct !DILocation(line: 1553, column: 5, scope: !4787)
!4800 = !{i64 1222235}
!4801 = !DILocation(line: 1554, column: 3, scope: !4787)
!4802 = !DILocation(line: 1555, column: 1, scope: !4779)
!4803 = distinct !DISubprogram(name: "HAL_NVIC_SystemReset", scope: !1485, file: !1485, line: 216, type: !4, scopeLine: 217, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !121)
!4804 = !DILocation(line: 219, column: 3, scope: !4803)
!4805 = distinct !DISubprogram(name: "__NVIC_SystemReset", scope: !545, file: !545, line: 1762, type: !4, scopeLine: 1763, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !121)
!4806 = !DILocation(line: 879, column: 3, scope: !4793, inlinedAt: !4807)
!4807 = distinct !DILocation(line: 1764, column: 3, scope: !4805)
!4808 = !DILocation(line: 1767, column: 34, scope: !4805)
!4809 = !DILocation(line: 1767, column: 40, scope: !4805)
!4810 = !DILocation(line: 1767, column: 66, scope: !4805)
!4811 = !DILocation(line: 1766, column: 15, scope: !4805)
!4812 = !DILocation(line: 879, column: 3, scope: !4793, inlinedAt: !4813)
!4813 = distinct !DILocation(line: 1769, column: 3, scope: !4805)
!4814 = !DILocation(line: 1771, column: 3, scope: !4805)
!4815 = !DILocation(line: 1773, column: 5, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4817, file: !545, line: 1772, column: 3)
!4817 = distinct !DILexicalBlock(scope: !4818, file: !545, line: 1771, column: 3)
!4818 = distinct !DILexicalBlock(scope: !4805, file: !545, line: 1771, column: 3)
!4819 = !{i64 2148746398}
!4820 = !DILocation(line: 1771, column: 3, scope: !4817)
!4821 = distinct !{!4821, !4822, !4823, !2695}
!4822 = !DILocation(line: 1771, column: 3, scope: !4818)
!4823 = !DILocation(line: 1774, column: 3, scope: !4818)
!4824 = distinct !DISubprogram(name: "HAL_SYSTICK_Config", scope: !1485, file: !1485, line: 229, type: !4825, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !4827)
!4825 = !DISubroutineType(types: !4826)
!4826 = !{!24, !24}
!4827 = !{!4828}
!4828 = !DILocalVariable(name: "TicksNumb", arg: 1, scope: !4824, file: !1485, line: 229, type: !24)
!4829 = !DILocation(line: 0, scope: !4824)
!4830 = !DILocation(line: 231, column: 11, scope: !4824)
!4831 = !DILocation(line: 231, column: 4, scope: !4824)
!4832 = distinct !DISubprogram(name: "SysTick_Config", scope: !545, file: !545, line: 1834, type: !4825, scopeLine: 1835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !4833)
!4833 = !{!4834}
!4834 = !DILocalVariable(name: "ticks", arg: 1, scope: !4832, file: !545, line: 1834, type: !24)
!4835 = !DILocation(line: 0, scope: !4832)
!4836 = !DILocation(line: 1836, column: 14, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4832, file: !545, line: 1836, column: 7)
!4838 = !DILocation(line: 1836, column: 21, scope: !4837)
!4839 = !DILocation(line: 1836, column: 7, scope: !4832)
!4840 = !DILocation(line: 1841, column: 18, scope: !4832)
!4841 = !DILocation(line: 1842, column: 3, scope: !4832)
!4842 = !DILocation(line: 1843, column: 18, scope: !4832)
!4843 = !DILocation(line: 1844, column: 18, scope: !4832)
!4844 = !DILocation(line: 1847, column: 3, scope: !4832)
!4845 = !DILocation(line: 1848, column: 1, scope: !4832)
!4846 = distinct !DISubprogram(name: "HAL_NVIC_GetPriorityGrouping", scope: !1485, file: !1485, line: 344, type: !1904, scopeLine: 345, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !121)
!4847 = !DILocation(line: 347, column: 10, scope: !4846)
!4848 = !DILocation(line: 347, column: 3, scope: !4846)
!4849 = distinct !DISubprogram(name: "HAL_NVIC_GetPriority", scope: !1485, file: !1485, line: 371, type: !4850, scopeLine: 372, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !4852)
!4850 = !DISubroutineType(types: !4851)
!4851 = !{null, !4701, !24, !710, !710}
!4852 = !{!4853, !4854, !4855, !4856}
!4853 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4849, file: !1485, line: 371, type: !4701)
!4854 = !DILocalVariable(name: "PriorityGroup", arg: 2, scope: !4849, file: !1485, line: 371, type: !24)
!4855 = !DILocalVariable(name: "pPreemptPriority", arg: 3, scope: !4849, file: !1485, line: 371, type: !710)
!4856 = !DILocalVariable(name: "pSubPriority", arg: 4, scope: !4849, file: !1485, line: 371, type: !710)
!4857 = !DILocation(line: 0, scope: !4849)
!4858 = !DILocation(line: 376, column: 23, scope: !4849)
!4859 = !{i32 0, i32 16}
!4860 = !DILocation(line: 376, column: 3, scope: !4849)
!4861 = !DILocation(line: 377, column: 1, scope: !4849)
!4862 = distinct !DISubprogram(name: "__NVIC_GetPriority", scope: !545, file: !545, line: 1661, type: !4863, scopeLine: 1662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !4865)
!4863 = !DISubroutineType(types: !4864)
!4864 = !{!24, !4701}
!4865 = !{!4866}
!4866 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4862, file: !545, line: 1661, type: !4701)
!4867 = !DILocation(line: 0, scope: !4862)
!4868 = !DILocation(line: 1664, column: 7, scope: !4862)
!4869 = !DILocation(line: 0, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4862, file: !545, line: 1664, column: 7)
!4871 = !DILocation(line: 1672, column: 1, scope: !4862)
!4872 = distinct !DISubprogram(name: "NVIC_DecodePriority", scope: !545, file: !545, line: 1713, type: !4873, scopeLine: 1714, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !4876)
!4873 = !DISubroutineType(types: !4874)
!4874 = !{null, !24, !24, !4875, !4875}
!4875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !710)
!4876 = !{!4877, !4878, !4879, !4880, !4881, !4882, !4883}
!4877 = !DILocalVariable(name: "Priority", arg: 1, scope: !4872, file: !545, line: 1713, type: !24)
!4878 = !DILocalVariable(name: "PriorityGroup", arg: 2, scope: !4872, file: !545, line: 1713, type: !24)
!4879 = !DILocalVariable(name: "pPreemptPriority", arg: 3, scope: !4872, file: !545, line: 1713, type: !4875)
!4880 = !DILocalVariable(name: "pSubPriority", arg: 4, scope: !4872, file: !545, line: 1713, type: !4875)
!4881 = !DILocalVariable(name: "PriorityGroupTmp", scope: !4872, file: !545, line: 1715, type: !24)
!4882 = !DILocalVariable(name: "PreemptPriorityBits", scope: !4872, file: !545, line: 1716, type: !24)
!4883 = !DILocalVariable(name: "SubPriorityBits", scope: !4872, file: !545, line: 1717, type: !24)
!4884 = !DILocation(line: 0, scope: !4872)
!4885 = !DILocation(line: 1715, column: 46, scope: !4872)
!4886 = !DILocation(line: 1719, column: 31, scope: !4872)
!4887 = !DILocation(line: 1719, column: 25, scope: !4872)
!4888 = !DILocation(line: 1720, column: 25, scope: !4872)
!4889 = !DILocation(line: 1722, column: 33, scope: !4872)
!4890 = !DILocation(line: 1722, column: 97, scope: !4872)
!4891 = !DILocation(line: 1722, column: 53, scope: !4872)
!4892 = !DILocation(line: 1722, column: 21, scope: !4872)
!4893 = !DILocation(line: 1723, column: 97, scope: !4872)
!4894 = !DILocation(line: 1723, column: 53, scope: !4872)
!4895 = !DILocation(line: 1723, column: 21, scope: !4872)
!4896 = !DILocation(line: 1724, column: 1, scope: !4872)
!4897 = distinct !DISubprogram(name: "HAL_NVIC_SetPendingIRQ", scope: !1485, file: !1485, line: 386, type: !4751, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !4898)
!4898 = !{!4899}
!4899 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4897, file: !1485, line: 386, type: !4701)
!4900 = !DILocation(line: 0, scope: !4897)
!4901 = !DILocation(line: 392, column: 3, scope: !4897)
!4902 = !DILocation(line: 393, column: 1, scope: !4897)
!4903 = distinct !DISubprogram(name: "__NVIC_SetPendingIRQ", scope: !545, file: !545, line: 1585, type: !4751, scopeLine: 1586, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !4904)
!4904 = !{!4905}
!4905 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4903, file: !545, line: 1585, type: !4701)
!4906 = !DILocation(line: 0, scope: !4903)
!4907 = !DILocation(line: 1587, column: 23, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4903, file: !545, line: 1587, column: 7)
!4909 = !DILocation(line: 1587, column: 7, scope: !4903)
!4910 = !DILocation(line: 1589, column: 81, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4908, file: !545, line: 1588, column: 3)
!4912 = !DILocation(line: 1589, column: 60, scope: !4911)
!4913 = !DILocation(line: 1589, column: 34, scope: !4911)
!4914 = !DILocation(line: 1589, column: 5, scope: !4911)
!4915 = !DILocation(line: 1589, column: 43, scope: !4911)
!4916 = !DILocation(line: 1590, column: 3, scope: !4911)
!4917 = !DILocation(line: 1591, column: 1, scope: !4903)
!4918 = distinct !DISubprogram(name: "HAL_NVIC_GetPendingIRQ", scope: !1485, file: !1485, line: 404, type: !4863, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !4919)
!4919 = !{!4920}
!4920 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4918, file: !1485, line: 404, type: !4701)
!4921 = !DILocation(line: 0, scope: !4918)
!4922 = !DILocation(line: 410, column: 10, scope: !4918)
!4923 = !DILocation(line: 410, column: 3, scope: !4918)
!4924 = distinct !DISubprogram(name: "__NVIC_GetPendingIRQ", scope: !545, file: !545, line: 1566, type: !4863, scopeLine: 1567, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !4925)
!4925 = !{!4926}
!4926 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4924, file: !545, line: 1566, type: !4701)
!4927 = !DILocation(line: 0, scope: !4924)
!4928 = !DILocation(line: 1568, column: 23, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4924, file: !545, line: 1568, column: 7)
!4930 = !DILocation(line: 1568, column: 7, scope: !4924)
!4931 = !DILocation(line: 1570, column: 54, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4929, file: !545, line: 1569, column: 3)
!4933 = !DILocation(line: 1570, column: 25, scope: !4932)
!4934 = !DILocation(line: 1570, column: 91, scope: !4932)
!4935 = !DILocation(line: 1570, column: 23, scope: !4932)
!4936 = !DILocation(line: 1570, column: 5, scope: !4932)
!4937 = !DILocation(line: 0, scope: !4929)
!4938 = !DILocation(line: 1576, column: 1, scope: !4924)
!4939 = distinct !DISubprogram(name: "HAL_NVIC_ClearPendingIRQ", scope: !1485, file: !1485, line: 420, type: !4751, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !4940)
!4940 = !{!4941}
!4941 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4939, file: !1485, line: 420, type: !4701)
!4942 = !DILocation(line: 0, scope: !4939)
!4943 = !DILocation(line: 426, column: 3, scope: !4939)
!4944 = !DILocation(line: 427, column: 1, scope: !4939)
!4945 = distinct !DISubprogram(name: "__NVIC_ClearPendingIRQ", scope: !545, file: !545, line: 1600, type: !4751, scopeLine: 1601, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !4946)
!4946 = !{!4947}
!4947 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4945, file: !545, line: 1600, type: !4701)
!4948 = !DILocation(line: 0, scope: !4945)
!4949 = !DILocation(line: 1602, column: 23, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4945, file: !545, line: 1602, column: 7)
!4951 = !DILocation(line: 1602, column: 7, scope: !4945)
!4952 = !DILocation(line: 1604, column: 81, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4950, file: !545, line: 1603, column: 3)
!4954 = !DILocation(line: 1604, column: 60, scope: !4953)
!4955 = !DILocation(line: 1604, column: 34, scope: !4953)
!4956 = !DILocation(line: 1604, column: 5, scope: !4953)
!4957 = !DILocation(line: 1604, column: 43, scope: !4953)
!4958 = !DILocation(line: 1605, column: 3, scope: !4953)
!4959 = !DILocation(line: 1606, column: 1, scope: !4945)
!4960 = distinct !DISubprogram(name: "HAL_NVIC_GetActive", scope: !1485, file: !1485, line: 437, type: !4863, scopeLine: 438, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !4961)
!4961 = !{!4962}
!4962 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4960, file: !1485, line: 437, type: !4701)
!4963 = !DILocation(line: 0, scope: !4960)
!4964 = !DILocation(line: 443, column: 10, scope: !4960)
!4965 = !DILocation(line: 443, column: 3, scope: !4960)
!4966 = distinct !DISubprogram(name: "__NVIC_GetActive", scope: !545, file: !545, line: 1617, type: !4863, scopeLine: 1618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !4967)
!4967 = !{!4968}
!4968 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4966, file: !545, line: 1617, type: !4701)
!4969 = !DILocation(line: 0, scope: !4966)
!4970 = !DILocation(line: 1619, column: 23, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4966, file: !545, line: 1619, column: 7)
!4972 = !DILocation(line: 1619, column: 7, scope: !4966)
!4973 = !DILocation(line: 1621, column: 54, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4971, file: !545, line: 1620, column: 3)
!4975 = !DILocation(line: 1621, column: 25, scope: !4974)
!4976 = !DILocation(line: 1621, column: 91, scope: !4974)
!4977 = !DILocation(line: 1621, column: 23, scope: !4974)
!4978 = !DILocation(line: 1621, column: 5, scope: !4974)
!4979 = !DILocation(line: 0, scope: !4971)
!4980 = !DILocation(line: 1627, column: 1, scope: !4966)
!4981 = distinct !DISubprogram(name: "HAL_SYSTICK_CLKSourceConfig", scope: !1485, file: !1485, line: 454, type: !4175, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !4982)
!4982 = !{!4983}
!4983 = !DILocalVariable(name: "CLKSource", arg: 1, scope: !4981, file: !1485, line: 454, type: !24)
!4984 = !DILocation(line: 0, scope: !4981)
!4985 = !DILocation(line: 458, column: 17, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4981, file: !1485, line: 458, column: 7)
!4987 = !DILocation(line: 0, scope: !4986)
!4988 = !DILocation(line: 458, column: 7, scope: !4981)
!4989 = !DILocation(line: 466, column: 1, scope: !4981)
!4990 = distinct !DISubprogram(name: "HAL_SYSTICK_IRQHandler", scope: !1485, file: !1485, line: 472, type: !4, scopeLine: 473, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !121)
!4991 = !DILocation(line: 474, column: 3, scope: !4990)
!4992 = !DILocation(line: 475, column: 1, scope: !4990)
!4993 = distinct !DISubprogram(name: "HAL_SYSTICK_Callback", scope: !1485, file: !1485, line: 481, type: !4, scopeLine: 482, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1484, retainedNodes: !121)
!4994 = !DILocation(line: 486, column: 1, scope: !4993)
!4995 = distinct !DISubprogram(name: "HAL_GPIO_Init", scope: !1539, file: !1539, line: 178, type: !4996, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1538, retainedNodes: !5006)
!4996 = !DISubroutineType(types: !4997)
!4997 = !{null, !1570, !4998}
!4998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4999, size: 32)
!4999 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !1542, line: 60, baseType: !5000)
!5000 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1542, line: 47, size: 128, elements: !5001)
!5001 = !{!5002, !5003, !5004, !5005}
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !5000, file: !1542, line: 49, baseType: !24, size: 32)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !5000, file: !1542, line: 52, baseType: !24, size: 32, offset: 32)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !5000, file: !1542, line: 55, baseType: !24, size: 32, offset: 64)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !5000, file: !1542, line: 58, baseType: !24, size: 32, offset: 96)
!5006 = !{!5007, !5008, !5009, !5010, !5011, !5012, !5013, !5014, !5015, !5016}
!5007 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !4995, file: !1539, line: 178, type: !1570)
!5008 = !DILocalVariable(name: "GPIO_Init", arg: 2, scope: !4995, file: !1539, line: 178, type: !4998)
!5009 = !DILocalVariable(name: "position", scope: !4995, file: !1539, line: 180, type: !24)
!5010 = !DILocalVariable(name: "ioposition", scope: !4995, file: !1539, line: 181, type: !24)
!5011 = !DILocalVariable(name: "iocurrent", scope: !4995, file: !1539, line: 182, type: !24)
!5012 = !DILocalVariable(name: "temp", scope: !4995, file: !1539, line: 183, type: !24)
!5013 = !DILocalVariable(name: "config", scope: !4995, file: !1539, line: 184, type: !24)
!5014 = !DILocalVariable(name: "configregister", scope: !4995, file: !1539, line: 185, type: !1452)
!5015 = !DILocalVariable(name: "registeroffset", scope: !4995, file: !1539, line: 186, type: !24)
!5016 = !DILocalVariable(name: "tmpreg", scope: !5017, file: !1539, line: 291, type: !23)
!5017 = distinct !DILexicalBlock(scope: !5018, file: !1539, line: 291, column: 9)
!5018 = distinct !DILexicalBlock(scope: !5019, file: !1539, line: 289, column: 7)
!5019 = distinct !DILexicalBlock(scope: !5020, file: !1539, line: 288, column: 11)
!5020 = distinct !DILexicalBlock(scope: !5021, file: !1539, line: 203, column: 5)
!5021 = distinct !DILexicalBlock(scope: !5022, file: !1539, line: 202, column: 9)
!5022 = distinct !DILexicalBlock(scope: !4995, file: !1539, line: 195, column: 3)
!5023 = !DILocation(line: 0, scope: !4995)
!5024 = !DILocation(line: 194, column: 23, scope: !4995)
!5025 = !DILocation(line: 194, column: 41, scope: !4995)
!5026 = !DILocation(line: 194, column: 3, scope: !4995)
!5027 = !DILocation(line: 197, column: 26, scope: !5022)
!5028 = !DILocation(line: 200, column: 44, scope: !5022)
!5029 = !DILocation(line: 202, column: 19, scope: !5021)
!5030 = !DILocation(line: 202, column: 9, scope: !5022)
!5031 = !DILocation(line: 208, column: 26, scope: !5020)
!5032 = !DILocation(line: 208, column: 7, scope: !5020)
!5033 = !DILocation(line: 214, column: 31, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5020, file: !1539, line: 209, column: 7)
!5035 = !DILocation(line: 215, column: 11, scope: !5034)
!5036 = !DILocation(line: 221, column: 31, scope: !5034)
!5037 = !DILocation(line: 221, column: 37, scope: !5034)
!5038 = !DILocation(line: 222, column: 11, scope: !5034)
!5039 = !DILocation(line: 228, column: 31, scope: !5034)
!5040 = !DILocation(line: 228, column: 37, scope: !5034)
!5041 = !DILocation(line: 229, column: 11, scope: !5034)
!5042 = !DILocation(line: 235, column: 31, scope: !5034)
!5043 = !DILocation(line: 235, column: 37, scope: !5034)
!5044 = !DILocation(line: 236, column: 11, scope: !5034)
!5045 = !DILocation(line: 248, column: 26, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !5034, file: !1539, line: 248, column: 15)
!5047 = !DILocation(line: 248, column: 15, scope: !5034)
!5048 = !DILocation(line: 257, column: 25, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5050, file: !1539, line: 253, column: 11)
!5050 = distinct !DILexicalBlock(scope: !5046, file: !1539, line: 252, column: 20)
!5051 = !{!5052, !3681, i64 16}
!5052 = !{!"", !3681, i64 0, !3681, i64 4, !3681, i64 8, !3681, i64 12, !3681, i64 16, !3681, i64 20, !3681, i64 24}
!5053 = !DILocation(line: 258, column: 11, scope: !5049)
!5054 = !DILocation(line: 264, column: 24, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5050, file: !1539, line: 260, column: 11)
!5056 = !{!5052, !3681, i64 20}
!5057 = !DILocation(line: 271, column: 11, scope: !5034)
!5058 = !DILocation(line: 280, column: 35, scope: !5020)
!5059 = !DILocation(line: 280, column: 24, scope: !5020)
!5060 = !DILocation(line: 281, column: 24, scope: !5020)
!5061 = !DILocation(line: 284, column: 7, scope: !5020)
!5062 = !DILocation(line: 288, column: 23, scope: !5019)
!5063 = !DILocation(line: 288, column: 28, scope: !5019)
!5064 = !DILocation(line: 288, column: 41, scope: !5019)
!5065 = !DILocation(line: 288, column: 11, scope: !5020)
!5066 = !DILocation(line: 291, column: 9, scope: !5017)
!5067 = !DILocation(line: 291, column: 9, scope: !5018)
!5068 = !DILocation(line: 292, column: 38, scope: !5018)
!5069 = !DILocation(line: 292, column: 16, scope: !5018)
!5070 = !DILocation(line: 293, column: 9, scope: !5018)
!5071 = !DILocation(line: 294, column: 9, scope: !5018)
!5072 = !DILocation(line: 295, column: 38, scope: !5018)
!5073 = !DILocation(line: 299, column: 25, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5018, file: !1539, line: 299, column: 13)
!5075 = !DILocation(line: 299, column: 30, scope: !5074)
!5076 = !DILocation(line: 299, column: 46, scope: !5074)
!5077 = !DILocation(line: 299, column: 13, scope: !5018)
!5078 = !DILocation(line: 301, column: 11, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5074, file: !1539, line: 300, column: 9)
!5080 = !{!5081, !3681, i64 0}
!5081 = !{!"", !3681, i64 0, !3681, i64 4, !3681, i64 8, !3681, i64 12, !3681, i64 16, !3681, i64 20}
!5082 = !DILocation(line: 302, column: 9, scope: !5079)
!5083 = !DILocation(line: 305, column: 11, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5074, file: !1539, line: 304, column: 9)
!5085 = !DILocation(line: 0, scope: !5074)
!5086 = !DILocation(line: 309, column: 30, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5018, file: !1539, line: 309, column: 13)
!5088 = !DILocation(line: 309, column: 47, scope: !5087)
!5089 = !DILocation(line: 309, column: 13, scope: !5018)
!5090 = !DILocation(line: 311, column: 11, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5087, file: !1539, line: 310, column: 9)
!5092 = !{!5081, !3681, i64 4}
!5093 = !DILocation(line: 312, column: 9, scope: !5091)
!5094 = !DILocation(line: 315, column: 11, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5087, file: !1539, line: 314, column: 9)
!5096 = !DILocation(line: 0, scope: !5087)
!5097 = !DILocation(line: 319, column: 30, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5018, file: !1539, line: 319, column: 13)
!5099 = !DILocation(line: 319, column: 45, scope: !5098)
!5100 = !DILocation(line: 319, column: 13, scope: !5018)
!5101 = !DILocation(line: 321, column: 11, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5098, file: !1539, line: 320, column: 9)
!5103 = !{!5081, !3681, i64 8}
!5104 = !DILocation(line: 322, column: 9, scope: !5102)
!5105 = !DILocation(line: 325, column: 11, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5098, file: !1539, line: 324, column: 9)
!5107 = !DILocation(line: 0, scope: !5098)
!5108 = !DILocation(line: 329, column: 30, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5018, file: !1539, line: 329, column: 13)
!5110 = !DILocation(line: 329, column: 46, scope: !5109)
!5111 = !DILocation(line: 329, column: 13, scope: !5018)
!5112 = !DILocation(line: 331, column: 11, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5109, file: !1539, line: 330, column: 9)
!5114 = !{!5081, !3681, i64 12}
!5115 = !DILocation(line: 332, column: 9, scope: !5113)
!5116 = !DILocation(line: 335, column: 11, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5109, file: !1539, line: 334, column: 9)
!5118 = !DILocation(line: 0, scope: !5109)
!5119 = !DILocation(line: 340, column: 10, scope: !5022)
!5120 = !DILocation(line: 184, column: 12, scope: !4995)
!5121 = !DILocation(line: 194, column: 28, scope: !4995)
!5122 = distinct !{!5122, !5026, !5123, !2694, !2695}
!5123 = !DILocation(line: 341, column: 3, scope: !4995)
!5124 = !DILocation(line: 342, column: 1, scope: !4995)
!5125 = distinct !DISubprogram(name: "HAL_GPIO_DeInit", scope: !1539, file: !1539, line: 351, type: !5126, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1538, retainedNodes: !5128)
!5126 = !DISubroutineType(types: !5127)
!5127 = !{null, !1570, !24}
!5128 = !{!5129, !5130, !5131, !5132, !5133, !5134, !5135}
!5129 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !5125, file: !1539, line: 351, type: !1570)
!5130 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !5125, file: !1539, line: 351, type: !24)
!5131 = !DILocalVariable(name: "position", scope: !5125, file: !1539, line: 353, type: !24)
!5132 = !DILocalVariable(name: "iocurrent", scope: !5125, file: !1539, line: 354, type: !24)
!5133 = !DILocalVariable(name: "tmp", scope: !5125, file: !1539, line: 355, type: !24)
!5134 = !DILocalVariable(name: "configregister", scope: !5125, file: !1539, line: 356, type: !1452)
!5135 = !DILocalVariable(name: "registeroffset", scope: !5125, file: !1539, line: 357, type: !24)
!5136 = !DILocation(line: 0, scope: !5125)
!5137 = !DILocation(line: 364, column: 33, scope: !5125)
!5138 = !DILocation(line: 364, column: 3, scope: !5125)
!5139 = !DILocation(line: 367, column: 35, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5125, file: !1539, line: 365, column: 3)
!5141 = !DILocation(line: 367, column: 28, scope: !5140)
!5142 = !DILocation(line: 369, column: 9, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5140, file: !1539, line: 369, column: 9)
!5144 = !DILocation(line: 369, column: 9, scope: !5140)
!5145 = !DILocation(line: 374, column: 35, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5143, file: !1539, line: 370, column: 5)
!5147 = !DILocation(line: 374, column: 13, scope: !5146)
!5148 = !DILocation(line: 375, column: 28, scope: !5146)
!5149 = !DILocation(line: 375, column: 21, scope: !5146)
!5150 = !DILocation(line: 375, column: 11, scope: !5146)
!5151 = !DILocation(line: 376, column: 19, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5146, file: !1539, line: 376, column: 11)
!5153 = !DILocation(line: 376, column: 41, scope: !5152)
!5154 = !DILocation(line: 376, column: 15, scope: !5152)
!5155 = !DILocation(line: 376, column: 11, scope: !5146)
!5156 = !DILocation(line: 379, column: 9, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5152, file: !1539, line: 377, column: 7)
!5158 = !DILocation(line: 382, column: 9, scope: !5157)
!5159 = !DILocation(line: 383, column: 9, scope: !5157)
!5160 = !DILocation(line: 386, column: 9, scope: !5157)
!5161 = !DILocation(line: 387, column: 9, scope: !5157)
!5162 = !DILocation(line: 388, column: 7, scope: !5157)
!5163 = !DILocation(line: 392, column: 35, scope: !5146)
!5164 = !DILocation(line: 392, column: 24, scope: !5146)
!5165 = !DILocation(line: 393, column: 24, scope: !5146)
!5166 = !DILocation(line: 396, column: 7, scope: !5146)
!5167 = !DILocation(line: 399, column: 7, scope: !5146)
!5168 = !{!5052, !3681, i64 12}
!5169 = !DILocation(line: 400, column: 5, scope: !5146)
!5170 = !DILocation(line: 402, column: 13, scope: !5140)
!5171 = !DILocation(line: 364, column: 20, scope: !5125)
!5172 = distinct !{!5172, !5138, !5173, !2694, !2695}
!5173 = !DILocation(line: 403, column: 3, scope: !5125)
!5174 = !DILocation(line: 404, column: 1, scope: !5125)
!5175 = distinct !DISubprogram(name: "HAL_GPIO_ReadPin", scope: !1539, file: !1539, line: 431, type: !5176, scopeLine: 432, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1538, retainedNodes: !5179)
!5176 = !DISubroutineType(types: !5177)
!5177 = !{!5178, !1570, !37}
!5178 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PinState", file: !1542, line: 69, baseType: !1541)
!5179 = !{!5180, !5181, !5182}
!5180 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !5175, file: !1539, line: 431, type: !1570)
!5181 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !5175, file: !1539, line: 431, type: !37)
!5182 = !DILocalVariable(name: "bitstatus", scope: !5175, file: !1539, line: 433, type: !5178)
!5183 = !DILocation(line: 0, scope: !5175)
!5184 = !DILocation(line: 438, column: 15, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !5175, file: !1539, line: 438, column: 7)
!5186 = !{!5052, !3681, i64 8}
!5187 = !DILocation(line: 438, column: 21, scope: !5185)
!5188 = !DILocation(line: 438, column: 19, scope: !5185)
!5189 = !DILocation(line: 438, column: 31, scope: !5185)
!5190 = !DILocation(line: 446, column: 3, scope: !5175)
!5191 = distinct !DISubprogram(name: "HAL_GPIO_WritePin", scope: !1539, file: !1539, line: 465, type: !5192, scopeLine: 466, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1538, retainedNodes: !5194)
!5192 = !DISubroutineType(types: !5193)
!5193 = !{null, !1570, !37, !5178}
!5194 = !{!5195, !5196, !5197}
!5195 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !5191, file: !1539, line: 465, type: !1570)
!5196 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !5191, file: !1539, line: 465, type: !37)
!5197 = !DILocalVariable(name: "PinState", arg: 3, scope: !5191, file: !1539, line: 465, type: !5178)
!5198 = !DILocation(line: 0, scope: !5191)
!5199 = !DILocation(line: 471, column: 16, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5191, file: !1539, line: 471, column: 7)
!5201 = !DILocation(line: 0, scope: !5200)
!5202 = !DILocation(line: 471, column: 7, scope: !5191)
!5203 = !DILocation(line: 479, column: 1, scope: !5191)
!5204 = distinct !DISubprogram(name: "HAL_GPIO_TogglePin", scope: !1539, file: !1539, line: 487, type: !5205, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1538, retainedNodes: !5207)
!5205 = !DISubroutineType(types: !5206)
!5206 = !{null, !1570, !37}
!5207 = !{!5208, !5209}
!5208 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !5204, file: !1539, line: 487, type: !1570)
!5209 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !5204, file: !1539, line: 487, type: !37)
!5210 = !DILocation(line: 0, scope: !5204)
!5211 = !DILocation(line: 492, column: 15, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5204, file: !1539, line: 492, column: 7)
!5213 = !DILocation(line: 492, column: 21, scope: !5212)
!5214 = !DILocation(line: 492, column: 19, scope: !5212)
!5215 = !DILocation(line: 492, column: 31, scope: !5212)
!5216 = !DILocation(line: 492, column: 7, scope: !5204)
!5217 = !DILocation(line: 0, scope: !5212)
!5218 = !DILocation(line: 500, column: 1, scope: !5204)
!5219 = distinct !DISubprogram(name: "HAL_GPIO_LockPin", scope: !1539, file: !1539, line: 512, type: !5220, scopeLine: 513, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1538, retainedNodes: !5222)
!5220 = !DISubroutineType(types: !5221)
!5221 = !{!3735, !1570, !37}
!5222 = !{!5223, !5224, !5225}
!5223 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !5219, file: !1539, line: 512, type: !1570)
!5224 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !5219, file: !1539, line: 512, type: !37)
!5225 = !DILocalVariable(name: "tmp", scope: !5219, file: !1539, line: 514, type: !23)
!5226 = !DILocation(line: 0, scope: !5219)
!5227 = !DILocation(line: 514, column: 3, scope: !5219)
!5228 = !DILocation(line: 514, column: 17, scope: !5219)
!5229 = !DILocation(line: 521, column: 3, scope: !5219)
!5230 = !DILocation(line: 523, column: 17, scope: !5219)
!5231 = !DILocation(line: 523, column: 10, scope: !5219)
!5232 = !DILocation(line: 523, column: 15, scope: !5219)
!5233 = !{!5052, !3681, i64 24}
!5234 = !DILocation(line: 525, column: 15, scope: !5219)
!5235 = !DILocation(line: 527, column: 17, scope: !5219)
!5236 = !DILocation(line: 527, column: 15, scope: !5219)
!5237 = !DILocation(line: 529, column: 16, scope: !5219)
!5238 = !DILocation(line: 529, column: 7, scope: !5219)
!5239 = !DILocation(line: 532, column: 25, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5219, file: !1539, line: 532, column: 7)
!5241 = !DILocation(line: 0, scope: !5240)
!5242 = !DILocation(line: 540, column: 1, scope: !5219)
!5243 = distinct !DISubprogram(name: "HAL_GPIO_EXTI_IRQHandler", scope: !1539, file: !1539, line: 547, type: !5244, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1538, retainedNodes: !5246)
!5244 = !DISubroutineType(types: !5245)
!5245 = !{null, !37}
!5246 = !{!5247}
!5247 = !DILocalVariable(name: "GPIO_Pin", arg: 1, scope: !5243, file: !1539, line: 547, type: !37)
!5248 = !DILocation(line: 0, scope: !5243)
!5249 = !DILocation(line: 550, column: 7, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5243, file: !1539, line: 550, column: 7)
!5251 = !{!5081, !3681, i64 20}
!5252 = !DILocation(line: 550, column: 40, scope: !5250)
!5253 = !DILocation(line: 550, column: 7, scope: !5243)
!5254 = !DILocation(line: 552, column: 5, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5250, file: !1539, line: 551, column: 3)
!5256 = !DILocation(line: 553, column: 5, scope: !5255)
!5257 = !DILocation(line: 554, column: 3, scope: !5255)
!5258 = !DILocation(line: 555, column: 1, scope: !5243)
!5259 = distinct !DISubprogram(name: "HAL_GPIO_EXTI_Callback", scope: !1539, file: !1539, line: 562, type: !5244, scopeLine: 563, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1538, retainedNodes: !5260)
!5260 = !{!5261}
!5261 = !DILocalVariable(name: "GPIO_Pin", arg: 1, scope: !5259, file: !1539, line: 562, type: !37)
!5262 = !DILocation(line: 0, scope: !5259)
!5263 = !DILocation(line: 569, column: 1, scope: !5259)
!5264 = distinct !DISubprogram(name: "~IPCommDevice", linkageName: "_ZN6Cicada12IPCommDeviceD2Ev", scope: !955, file: !956, line: 54, type: !5265, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, declaration: !5268, retainedNodes: !5269)
!5265 = !DISubroutineType(types: !5266)
!5266 = !{null, !5267}
!5267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!5268 = !DISubprogram(name: "~IPCommDevice", scope: !955, file: !956, line: 54, type: !5265, scopeLine: 54, containingType: !955, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!5269 = !{!5270}
!5270 = !DILocalVariable(name: "this", arg: 1, scope: !5264, type: !5271, flags: DIFlagArtificial | DIFlagObjectPointer)
!5271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 32)
!5272 = !DILocation(line: 0, scope: !5264)
!5273 = !DILocation(line: 54, column: 30, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5264, file: !956, line: 54, column: 29)
!5275 = !DILocation(line: 54, column: 30, scope: !5264)
!5276 = distinct !DISubprogram(name: "~ATCommDevice", linkageName: "_ZN6Cicada12ATCommDeviceD0Ev", scope: !952, file: !108, line: 46, type: !1043, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, declaration: !1042, retainedNodes: !5277)
!5277 = !{!5278}
!5278 = !DILocalVariable(name: "this", arg: 1, scope: !5276, type: !5279, flags: DIFlagArtificial | DIFlagObjectPointer)
!5279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 32)
!5280 = !DILocation(line: 0, scope: !5276)
!5281 = !DILocation(line: 46, column: 29, scope: !5276)
!5282 = distinct !DISubprogram(name: "serialWrite", linkageName: "_ZN6Cicada12ATCommDevice11serialWriteEPc", scope: !952, file: !950, line: 155, type: !1046, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, declaration: !1045, retainedNodes: !5283)
!5283 = !{!5284, !5285}
!5284 = !DILocalVariable(name: "this", arg: 1, scope: !5282, type: !5279, flags: DIFlagArtificial | DIFlagObjectPointer)
!5285 = !DILocalVariable(name: "data", arg: 2, scope: !5282, file: !950, line: 155, type: !308)
!5286 = !DILocation(line: 0, scope: !5282)
!5287 = !DILocation(line: 157, column: 9, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5282, file: !950, line: 157, column: 9)
!5289 = !{!5290, !2478, i64 130}
!5290 = !{!"_ZTSN6Cicada12IPCommDeviceE", !5291, i64 24, !5291, i64 72, !5293, i64 120, !2477, i64 124, !2609, i64 128, !2478, i64 130, !5294, i64 132, !2477, i64 136}
!5291 = !{!"_ZTSN6Cicada14CircularBufferIhEE", !5292, i64 8, !5292, i64 16, !5292, i64 24, !5292, i64 32, !2477, i64 40}
!5292 = !{!"long long", !2478, i64 0}
!5293 = !{!"_ZTSN6Cicada13IIPCommDevice14ConnectionTypeE", !2478, i64 0}
!5294 = !{!"_ZTSN6Cicada12IPCommDevice12ConnectStateE", !2478, i64 0}
!5295 = !DILocation(line: 157, column: 24, scope: !5288)
!5296 = !DILocation(line: 157, column: 9, scope: !5282)
!5297 = !DILocation(line: 158, column: 16, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !5288, file: !950, line: 157, column: 41)
!5299 = !{!5300, !2477, i64 140}
!5300 = !{!"_ZTSN6Cicada12ATCommDeviceE", !2477, i64 140, !2478, i64 144, !2478, i64 205, !2478, i64 206, !2478, i64 207, !5292, i64 208, !5292, i64 216, !5292, i64 224}
!5301 = !DILocation(line: 158, column: 24, scope: !5298)
!5302 = !DILocation(line: 158, column: 9, scope: !5298)
!5303 = !DILocation(line: 162, column: 1, scope: !5282)
!5304 = distinct !DISubprogram(name: "serialRead", linkageName: "_ZN6Cicada12ATCommDevice10serialReadEPcy", scope: !952, file: !950, line: 164, type: !1049, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, declaration: !1048, retainedNodes: !5305)
!5305 = !{!5306, !5307, !5308}
!5306 = !DILocalVariable(name: "this", arg: 1, scope: !5304, type: !5279, flags: DIFlagArtificial | DIFlagObjectPointer)
!5307 = !DILocalVariable(name: "data", arg: 2, scope: !5304, file: !950, line: 164, type: !308)
!5308 = !DILocalVariable(name: "maxSize", arg: 3, scope: !5304, file: !950, line: 164, type: !872)
!5309 = !DILocation(line: 0, scope: !5304)
!5310 = !DILocation(line: 166, column: 9, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5304, file: !950, line: 166, column: 9)
!5312 = !DILocation(line: 166, column: 24, scope: !5311)
!5313 = !DILocation(line: 166, column: 9, scope: !5304)
!5314 = !DILocation(line: 167, column: 16, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5311, file: !950, line: 166, column: 41)
!5316 = !DILocation(line: 167, column: 24, scope: !5315)
!5317 = !DILocation(line: 167, column: 9, scope: !5315)
!5318 = !DILocation(line: 171, column: 1, scope: !5304)
!5319 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada12ATCommDeviceD1Ev", scope: !108, file: !108, line: 46, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !121)
!5320 = !DISubroutineType(types: !121)
!5321 = !DILocation(line: 0, scope: !5319)
!5322 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada12ATCommDeviceD0Ev", scope: !108, file: !108, line: 46, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !121)
!5323 = !DILocation(line: 0, scope: !5322)
!5324 = distinct !DISubprogram(name: "~CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIhED2Ev", scope: !1630, file: !1631, line: 56, type: !1645, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, declaration: !1644, retainedNodes: !5325)
!5325 = !{!5326}
!5326 = !DILocalVariable(name: "this", arg: 1, scope: !5324, type: !5327, flags: DIFlagArtificial | DIFlagObjectPointer)
!5327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 32)
!5328 = !DILocation(line: 0, scope: !5324)
!5329 = !DILocation(line: 57, column: 7, scope: !5324)
!5330 = distinct !DISubprogram(name: "~ICommDevice", linkageName: "_ZN6Cicada11ICommDeviceD2Ev", scope: !920, file: !921, line: 46, type: !925, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, declaration: !924, retainedNodes: !5331)
!5331 = !{!5332}
!5332 = !DILocalVariable(name: "this", arg: 1, scope: !5330, type: !5333, flags: DIFlagArtificial | DIFlagObjectPointer)
!5333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 32)
!5334 = !DILocation(line: 0, scope: !5330)
!5335 = !DILocation(line: 46, column: 30, scope: !5330)
!5336 = distinct !DISubprogram(name: "ATCommDevice", linkageName: "_ZN6Cicada12ATCommDeviceC2ERNS_15IBufferedSerialEPhS3_y", scope: !952, file: !950, line: 38, type: !1036, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, declaration: !1035, retainedNodes: !5337)
!5337 = !{!5338, !5339, !5340, !5341, !5342}
!5338 = !DILocalVariable(name: "this", arg: 1, scope: !5336, type: !5279, flags: DIFlagArtificial | DIFlagObjectPointer)
!5339 = !DILocalVariable(name: "serial", arg: 2, scope: !5336, file: !950, line: 39, type: !958)
!5340 = !DILocalVariable(name: "readBuffer", arg: 3, scope: !5336, file: !950, line: 39, type: !44)
!5341 = !DILocalVariable(name: "writeBuffer", arg: 4, scope: !5336, file: !950, line: 39, type: !44)
!5342 = !DILocalVariable(name: "bufferSize", arg: 5, scope: !5336, file: !950, line: 39, type: !872)
!5343 = !DILocation(line: 0, scope: !5336)
!5344 = !DILocation(line: 41, column: 1, scope: !5336)
!5345 = !DILocation(line: 40, column: 5, scope: !5336)
!5346 = !DILocation(line: 40, column: 56, scope: !5336)
!5347 = !DILocation(line: 41, column: 2, scope: !5336)
!5348 = distinct !DISubprogram(name: "ATCommDevice", linkageName: "_ZN6Cicada12ATCommDeviceC2ERNS_15IBufferedSerialEPhS3_yy", scope: !952, file: !950, line: 43, type: !1040, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, declaration: !1039, retainedNodes: !5349)
!5349 = !{!5350, !5351, !5352, !5353, !5354, !5355}
!5350 = !DILocalVariable(name: "this", arg: 1, scope: !5348, type: !5279, flags: DIFlagArtificial | DIFlagObjectPointer)
!5351 = !DILocalVariable(name: "serial", arg: 2, scope: !5348, file: !950, line: 43, type: !958)
!5352 = !DILocalVariable(name: "readBuffer", arg: 3, scope: !5348, file: !950, line: 43, type: !44)
!5353 = !DILocalVariable(name: "writeBuffer", arg: 4, scope: !5348, file: !950, line: 43, type: !44)
!5354 = !DILocalVariable(name: "readBufferSize", arg: 5, scope: !5348, file: !950, line: 44, type: !872)
!5355 = !DILocalVariable(name: "writeBufferSize", arg: 6, scope: !5348, file: !950, line: 44, type: !872)
!5356 = !DILocation(line: 0, scope: !5348)
!5357 = !DILocation(line: 46, column: 1, scope: !5348)
!5358 = !DILocation(line: 45, column: 5, scope: !5348)
!5359 = !DILocation(line: 45, column: 77, scope: !5348)
!5360 = !DILocation(line: 46, column: 2, scope: !5348)
!5361 = distinct !DISubprogram(name: "logStates", linkageName: "_ZN6Cicada12ATCommDevice9logStatesEaa", scope: !952, file: !950, line: 48, type: !1052, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, declaration: !1051, retainedNodes: !5362)
!5362 = !{!5363, !5364, !5365}
!5363 = !DILocalVariable(name: "this", arg: 1, scope: !5361, type: !5279, flags: DIFlagArtificial | DIFlagObjectPointer)
!5364 = !DILocalVariable(name: "sendState", arg: 2, scope: !5361, file: !950, line: 48, type: !162)
!5365 = !DILocalVariable(name: "replyState", arg: 3, scope: !5361, file: !950, line: 48, type: !162)
!5366 = !DILocation(line: 0, scope: !5361)
!5367 = !DILocation(line: 62, column: 1, scope: !5361)
!5368 = distinct !DISubprogram(name: "flushReadBuffer", linkageName: "_ZN6Cicada12ATCommDevice15flushReadBufferEv", scope: !952, file: !950, line: 64, type: !1043, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, declaration: !1065, retainedNodes: !5369)
!5369 = !{!5370}
!5370 = !DILocalVariable(name: "this", arg: 1, scope: !5368, type: !5279, flags: DIFlagArtificial | DIFlagObjectPointer)
!5371 = !DILocation(line: 0, scope: !5368)
!5372 = !DILocation(line: 66, column: 28, scope: !5368)
!5373 = !DILocation(line: 66, column: 12, scope: !5368)
!5374 = !{!5300, !5292, i64 224}
!5375 = !DILocation(line: 66, column: 25, scope: !5368)
!5376 = !DILocation(line: 66, column: 36, scope: !5368)
!5377 = !DILocation(line: 66, column: 5, scope: !5368)
!5378 = !DILocation(line: 67, column: 9, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5368, file: !950, line: 66, column: 54)
!5380 = !DILocation(line: 67, column: 17, scope: !5379)
!5381 = !DILocation(line: 68, column: 21, scope: !5379)
!5382 = distinct !{!5382, !5377, !5383, !2694, !2695}
!5383 = !DILocation(line: 69, column: 5, scope: !5368)
!5384 = !DILocation(line: 70, column: 5, scope: !5368)
!5385 = !DILocation(line: 70, column: 21, scope: !5368)
!5386 = !{!5300, !5292, i64 216}
!5387 = !DILocation(line: 72, column: 9, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5368, file: !950, line: 72, column: 9)
!5389 = !DILocation(line: 72, column: 22, scope: !5388)
!5390 = !DILocation(line: 72, column: 9, scope: !5368)
!5391 = !DILocation(line: 73, column: 9, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5388, file: !950, line: 72, column: 28)
!5393 = !DILocation(line: 73, column: 24, scope: !5392)
!5394 = !DILocation(line: 74, column: 5, scope: !5392)
!5395 = !DILocation(line: 75, column: 1, scope: !5368)
!5396 = distinct !DISubprogram(name: "handleDisconnect", linkageName: "_ZN6Cicada12ATCommDevice16handleDisconnectEa", scope: !952, file: !950, line: 77, type: !1055, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, declaration: !1054, retainedNodes: !5397)
!5397 = !{!5398, !5399}
!5398 = !DILocalVariable(name: "this", arg: 1, scope: !5396, type: !5279, flags: DIFlagArtificial | DIFlagObjectPointer)
!5399 = !DILocalVariable(name: "nextState", arg: 2, scope: !5396, file: !950, line: 77, type: !162)
!5400 = !DILocation(line: 0, scope: !5396)
!5401 = !DILocation(line: 79, column: 9, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5396, file: !950, line: 79, column: 9)
!5403 = !DILocation(line: 79, column: 24, scope: !5402)
!5404 = !DILocation(line: 79, column: 9, scope: !5396)
!5405 = !DILocation(line: 80, column: 24, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5402, file: !950, line: 79, column: 46)
!5407 = !DILocation(line: 81, column: 9, scope: !5406)
!5408 = !DILocation(line: 81, column: 20, scope: !5406)
!5409 = !{!5300, !2478, i64 206}
!5410 = !DILocation(line: 83, column: 9, scope: !5406)
!5411 = !DILocation(line: 87, column: 1, scope: !5396)
!5412 = distinct !DISubprogram(name: "handleConnect", linkageName: "_ZN6Cicada12ATCommDevice13handleConnectEa", scope: !952, file: !950, line: 89, type: !1055, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, declaration: !1057, retainedNodes: !5413)
!5413 = !{!5414, !5415}
!5414 = !DILocalVariable(name: "this", arg: 1, scope: !5412, type: !5279, flags: DIFlagArtificial | DIFlagObjectPointer)
!5415 = !DILocalVariable(name: "nextState", arg: 2, scope: !5412, file: !950, line: 89, type: !162)
!5416 = !DILocation(line: 0, scope: !5412)
!5417 = !DILocation(line: 91, column: 9, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5412, file: !950, line: 91, column: 9)
!5419 = !DILocation(line: 91, column: 24, scope: !5418)
!5420 = !DILocation(line: 91, column: 9, scope: !5412)
!5421 = !DILocation(line: 92, column: 24, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5418, file: !950, line: 91, column: 43)
!5423 = !DILocation(line: 93, column: 9, scope: !5422)
!5424 = !DILocation(line: 93, column: 20, scope: !5422)
!5425 = !DILocation(line: 95, column: 9, scope: !5422)
!5426 = !DILocation(line: 99, column: 1, scope: !5412)
!5427 = distinct !DISubprogram(name: "prepareSending", linkageName: "_ZN6Cicada12ATCommDevice14prepareSendingEb", scope: !952, file: !950, line: 101, type: !1062, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, declaration: !1061, retainedNodes: !5428)
!5428 = !{!5429, !5430, !5431}
!5429 = !DILocalVariable(name: "this", arg: 1, scope: !5427, type: !5279, flags: DIFlagArtificial | DIFlagObjectPointer)
!5430 = !DILocalVariable(name: "sendChannel", arg: 2, scope: !5427, file: !950, line: 101, type: !63)
!5431 = !DILocalVariable(name: "sizeStr", scope: !5427, file: !950, line: 118, type: !5432)
!5432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 48, elements: !5433)
!5433 = !{!5434}
!5434 = !DISubrange(count: 6)
!5435 = !DILocation(line: 0, scope: !5427)
!5436 = !DILocation(line: 103, column: 9, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5427, file: !950, line: 103, column: 9)
!5438 = !DILocation(line: 103, column: 17, scope: !5437)
!5439 = !DILocation(line: 103, column: 34, scope: !5437)
!5440 = !DILocation(line: 103, column: 9, scope: !5427)
!5441 = !DILocation(line: 106, column: 21, scope: !5427)
!5442 = !DILocation(line: 106, column: 34, scope: !5427)
!5443 = !DILocation(line: 106, column: 5, scope: !5427)
!5444 = !DILocation(line: 106, column: 19, scope: !5427)
!5445 = !{!5300, !5292, i64 208}
!5446 = !DILocation(line: 107, column: 25, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5427, file: !950, line: 107, column: 9)
!5448 = !DILocation(line: 107, column: 33, scope: !5447)
!5449 = !DILocation(line: 107, column: 50, scope: !5447)
!5450 = !DILocation(line: 107, column: 23, scope: !5447)
!5451 = !DILocation(line: 107, column: 9, scope: !5427)
!5452 = !DILocation(line: 108, column: 25, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5447, file: !950, line: 107, column: 73)
!5454 = !DILocation(line: 108, column: 33, scope: !5453)
!5455 = !DILocation(line: 108, column: 50, scope: !5453)
!5456 = !DILocation(line: 108, column: 23, scope: !5453)
!5457 = !DILocation(line: 109, column: 5, scope: !5453)
!5458 = !DILocation(line: 112, column: 5, scope: !5427)
!5459 = !DILocation(line: 112, column: 13, scope: !5427)
!5460 = !DILocation(line: 113, column: 9, scope: !5427)
!5461 = !DILocation(line: 114, column: 9, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5463, file: !950, line: 113, column: 22)
!5463 = distinct !DILexicalBlock(scope: !5427, file: !950, line: 113, column: 9)
!5464 = !DILocation(line: 114, column: 17, scope: !5462)
!5465 = !DILocation(line: 115, column: 5, scope: !5462)
!5466 = !DILocation(line: 118, column: 5, scope: !5427)
!5467 = !DILocation(line: 118, column: 10, scope: !5427)
!5468 = !DILocation(line: 119, column: 51, scope: !5427)
!5469 = !DILocation(line: 119, column: 5, scope: !5427)
!5470 = !DILocation(line: 120, column: 5, scope: !5427)
!5471 = !DILocation(line: 120, column: 13, scope: !5427)
!5472 = !DILocation(line: 122, column: 5, scope: !5427)
!5473 = !DILocation(line: 122, column: 19, scope: !5427)
!5474 = !{!5290, !2477, i64 136}
!5475 = !DILocation(line: 125, column: 1, scope: !5427)
!5476 = distinct !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv", scope: !1630, file: !1631, line: 174, type: !1670, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, declaration: !1669, retainedNodes: !5477)
!5477 = !{!5478}
!5478 = !DILocalVariable(name: "this", arg: 1, scope: !5476, type: !5479, flags: DIFlagArtificial | DIFlagObjectPointer)
!5479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 32)
!5480 = !DILocation(line: 0, scope: !5476)
!5481 = !DILocation(line: 176, column: 16, scope: !5476)
!5482 = !{!5291, !5292, i64 24}
!5483 = !DILocation(line: 176, column: 9, scope: !5476)
!5484 = distinct !DISubprogram(name: "sendData", linkageName: "_ZN6Cicada12ATCommDevice8sendDataEv", scope: !952, file: !950, line: 127, type: !1043, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, declaration: !1064, retainedNodes: !5485)
!5485 = !{!5486}
!5486 = !DILocalVariable(name: "this", arg: 1, scope: !5484, type: !5279, flags: DIFlagArtificial | DIFlagObjectPointer)
!5487 = !DILocation(line: 0, scope: !5484)
!5488 = !DILocation(line: 129, column: 25, scope: !5484)
!5489 = !DILocation(line: 129, column: 12, scope: !5484)
!5490 = !DILocation(line: 129, column: 5, scope: !5484)
!5491 = !DILocation(line: 130, column: 9, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5484, file: !950, line: 129, column: 29)
!5493 = !DILocation(line: 130, column: 36, scope: !5492)
!5494 = !DILocation(line: 130, column: 17, scope: !5492)
!5495 = distinct !{!5495, !5490, !5496, !2694, !2695}
!5496 = !DILocation(line: 131, column: 5, scope: !5484)
!5497 = !DILocation(line: 132, column: 1, scope: !5484)
!5498 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIhE4pullEv", scope: !1630, file: !1631, line: 124, type: !1659, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, declaration: !1658, retainedNodes: !5499)
!5499 = !{!5500, !5501}
!5500 = !DILocalVariable(name: "this", arg: 1, scope: !5498, type: !5327, flags: DIFlagArtificial | DIFlagObjectPointer)
!5501 = !DILocalVariable(name: "data", scope: !5498, file: !1631, line: 126, type: !47)
!5502 = !DILocation(line: 0, scope: !5498)
!5503 = !DILocation(line: 126, column: 18, scope: !5498)
!5504 = !{!5291, !2477, i64 40}
!5505 = !DILocation(line: 126, column: 26, scope: !5498)
!5506 = !{!5291, !5292, i64 16}
!5507 = !DILocation(line: 127, column: 9, scope: !5498)
!5508 = !DILocation(line: 128, column: 13, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5498, file: !1631, line: 128, column: 13)
!5510 = !DILocation(line: 128, column: 28, scope: !5509)
!5511 = !DILocation(line: 128, column: 13, scope: !5498)
!5512 = !DILocation(line: 129, column: 27, scope: !5509)
!5513 = !DILocation(line: 129, column: 13, scope: !5509)
!5514 = !DILocation(line: 131, column: 9, scope: !5498)
!5515 = distinct !DISubprogram(name: "incrementOrResetHead", linkageName: "_ZN6Cicada14CircularBufferIhE20incrementOrResetHeadERy", scope: !1630, file: !1631, line: 202, type: !1675, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, declaration: !1674, retainedNodes: !5516)
!5516 = !{!5517, !5518}
!5517 = !DILocalVariable(name: "this", arg: 1, scope: !5515, type: !5327, flags: DIFlagArtificial | DIFlagObjectPointer)
!5518 = !DILocalVariable(name: "head", arg: 2, scope: !5515, file: !1631, line: 202, type: !1677)
!5519 = !DILocation(line: 0, scope: !5515)
!5520 = !DILocation(line: 204, column: 13, scope: !5515)
!5521 = !{!5292, !5292, i64 0}
!5522 = !DILocation(line: 205, column: 21, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5515, file: !1631, line: 205, column: 13)
!5524 = !{!5291, !5292, i64 32}
!5525 = !DILocation(line: 205, column: 18, scope: !5523)
!5526 = !DILocation(line: 205, column: 13, scope: !5515)
!5527 = !DILocation(line: 207, column: 5, scope: !5515)
!5528 = distinct !DISubprogram(name: "receive", linkageName: "_ZN6Cicada12ATCommDevice7receiveEv", scope: !952, file: !950, line: 134, type: !1067, scopeLine: 135, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, declaration: !1066, retainedNodes: !5529)
!5529 = !{!5530}
!5530 = !DILocalVariable(name: "this", arg: 1, scope: !5528, type: !5279, flags: DIFlagArtificial | DIFlagObjectPointer)
!5531 = !DILocation(line: 0, scope: !5528)
!5532 = !DILocation(line: 136, column: 9, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5528, file: !950, line: 136, column: 9)
!5534 = !DILocation(line: 136, column: 17, scope: !5533)
!5535 = !DILocation(line: 136, column: 37, scope: !5533)
!5536 = !DILocation(line: 136, column: 34, scope: !5533)
!5537 = !DILocation(line: 136, column: 9, scope: !5528)
!5538 = !DILocation(line: 137, column: 16, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5533, file: !950, line: 136, column: 51)
!5540 = !DILocation(line: 137, column: 9, scope: !5539)
!5541 = !DILocation(line: 138, column: 30, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5539, file: !950, line: 137, column: 30)
!5543 = !DILocation(line: 138, column: 38, scope: !5542)
!5544 = !DILocation(line: 138, column: 25, scope: !5542)
!5545 = !DILocation(line: 139, column: 25, scope: !5542)
!5546 = distinct !{!5546, !5540, !5547, !2694, !2695}
!5547 = !DILocation(line: 140, column: 9, scope: !5539)
!5548 = !DILocation(line: 141, column: 9, scope: !5539)
!5549 = !DILocation(line: 141, column: 24, scope: !5539)
!5550 = !DILocation(line: 143, column: 9, scope: !5539)
!5551 = !DILocation(line: 147, column: 1, scope: !5528)
!5552 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIhE4pushEh", scope: !1630, file: !1631, line: 88, type: !1653, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, declaration: !1652, retainedNodes: !5553)
!5553 = !{!5554, !5555}
!5554 = !DILocalVariable(name: "this", arg: 1, scope: !5552, type: !5327, flags: DIFlagArtificial | DIFlagObjectPointer)
!5555 = !DILocalVariable(name: "data", arg: 2, scope: !5552, file: !1631, line: 88, type: !47)
!5556 = !DILocation(line: 0, scope: !5552)
!5557 = !DILocation(line: 90, column: 9, scope: !5552)
!5558 = !DILocation(line: 90, column: 17, scope: !5552)
!5559 = !{!5291, !5292, i64 8}
!5560 = !DILocation(line: 90, column: 29, scope: !5552)
!5561 = !DILocation(line: 91, column: 9, scope: !5552)
!5562 = !DILocation(line: 92, column: 13, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5552, file: !1631, line: 92, column: 13)
!5564 = !DILocation(line: 92, column: 30, scope: !5563)
!5565 = !DILocation(line: 92, column: 28, scope: !5563)
!5566 = !DILocation(line: 92, column: 13, scope: !5552)
!5567 = !DILocation(line: 93, column: 27, scope: !5563)
!5568 = !DILocation(line: 93, column: 13, scope: !5563)
!5569 = !DILocation(line: 94, column: 5, scope: !5552)
!5570 = distinct !DISubprogram(name: "sendCommand", linkageName: "_ZN6Cicada12ATCommDevice11sendCommandEPKc", scope: !952, file: !950, line: 149, type: !1059, scopeLine: 150, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, declaration: !1058, retainedNodes: !5571)
!5571 = !{!5572, !5573}
!5572 = !DILocalVariable(name: "this", arg: 1, scope: !5570, type: !5279, flags: DIFlagArtificial | DIFlagObjectPointer)
!5573 = !DILocalVariable(name: "cmd", arg: 2, scope: !5570, file: !950, line: 149, type: !266)
!5574 = !DILocation(line: 0, scope: !5570)
!5575 = !DILocation(line: 151, column: 5, scope: !5570)
!5576 = !DILocation(line: 151, column: 13, scope: !5570)
!5577 = !DILocation(line: 152, column: 5, scope: !5570)
!5578 = !DILocation(line: 152, column: 35, scope: !5570)
!5579 = !DILocation(line: 152, column: 13, scope: !5570)
!5580 = !DILocation(line: 153, column: 1, scope: !5570)
!5581 = distinct !DISubprogram(name: "~IPCommDevice", linkageName: "_ZN6Cicada12IPCommDeviceD0Ev", scope: !1595, file: !956, line: 54, type: !1695, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1694, retainedNodes: !5582)
!5582 = !{!5583}
!5583 = !DILocalVariable(name: "this", arg: 1, scope: !5581, type: !5584, flags: DIFlagArtificial | DIFlagObjectPointer)
!5584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 32)
!5585 = !DILocation(line: 0, scope: !5581)
!5586 = !DILocation(line: 54, column: 29, scope: !5581)
!5587 = distinct !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada12IPCommDevice14bytesAvailableEv", scope: !1595, file: !1592, line: 86, type: !1707, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1706, retainedNodes: !5588)
!5588 = !{!5589}
!5589 = !DILocalVariable(name: "this", arg: 1, scope: !5587, type: !5590, flags: DIFlagArtificial | DIFlagObjectPointer)
!5590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 32)
!5591 = !DILocation(line: 0, scope: !5587)
!5592 = !DILocation(line: 88, column: 12, scope: !5587)
!5593 = !DILocation(line: 88, column: 24, scope: !5587)
!5594 = !DILocation(line: 88, column: 5, scope: !5587)
!5595 = distinct !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada12IPCommDevice14spaceAvailableEv", scope: !1595, file: !1592, line: 91, type: !1707, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1711, retainedNodes: !5596)
!5596 = !{!5597}
!5597 = !DILocalVariable(name: "this", arg: 1, scope: !5595, type: !5590, flags: DIFlagArtificial | DIFlagObjectPointer)
!5598 = !DILocation(line: 0, scope: !5595)
!5599 = !DILocation(line: 93, column: 9, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5595, file: !1592, line: 93, column: 9)
!5601 = !{!5290, !5294, i64 132}
!5602 = !DILocation(line: 93, column: 23, scope: !5600)
!5603 = !DILocation(line: 93, column: 9, scope: !5595)
!5604 = !DILocation(line: 96, column: 12, scope: !5595)
!5605 = !DILocation(line: 96, column: 25, scope: !5595)
!5606 = !DILocation(line: 96, column: 5, scope: !5595)
!5607 = !DILocation(line: 97, column: 1, scope: !5595)
!5608 = distinct !DISubprogram(name: "writeBufferProcessed", linkageName: "_ZNK6Cicada12IPCommDevice20writeBufferProcessedEv", scope: !1595, file: !1592, line: 112, type: !1719, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1718, retainedNodes: !5609)
!5609 = !{!5610}
!5610 = !DILocalVariable(name: "this", arg: 1, scope: !5608, type: !5590, flags: DIFlagArtificial | DIFlagObjectPointer)
!5611 = !DILocation(line: 0, scope: !5608)
!5612 = !DILocation(line: 114, column: 12, scope: !5608)
!5613 = !DILocation(line: 114, column: 25, scope: !5608)
!5614 = !DILocation(line: 114, column: 42, scope: !5608)
!5615 = !DILocation(line: 114, column: 47, scope: !5608)
!5616 = !DILocation(line: 114, column: 5, scope: !5608)
!5617 = distinct !DISubprogram(name: "read", linkageName: "_ZN6Cicada12IPCommDevice4readEPhy", scope: !1595, file: !1592, line: 99, type: !1713, scopeLine: 100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1712, retainedNodes: !5618)
!5618 = !{!5619, !5620, !5621}
!5619 = !DILocalVariable(name: "this", arg: 1, scope: !5617, type: !5584, flags: DIFlagArtificial | DIFlagObjectPointer)
!5620 = !DILocalVariable(name: "data", arg: 2, scope: !5617, file: !1592, line: 99, type: !44)
!5621 = !DILocalVariable(name: "maxSize", arg: 3, scope: !5617, file: !1592, line: 99, type: !872)
!5622 = !DILocation(line: 0, scope: !5617)
!5623 = !DILocation(line: 101, column: 12, scope: !5617)
!5624 = !DILocation(line: 101, column: 24, scope: !5617)
!5625 = !DILocation(line: 101, column: 5, scope: !5617)
!5626 = distinct !DISubprogram(name: "write", linkageName: "_ZN6Cicada12IPCommDevice5writeEPKhy", scope: !1595, file: !1592, line: 104, type: !1716, scopeLine: 105, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1715, retainedNodes: !5627)
!5627 = !{!5628, !5629, !5630}
!5628 = !DILocalVariable(name: "this", arg: 1, scope: !5626, type: !5584, flags: DIFlagArtificial | DIFlagObjectPointer)
!5629 = !DILocalVariable(name: "data", arg: 2, scope: !5626, file: !1592, line: 104, type: !943)
!5630 = !DILocalVariable(name: "size", arg: 3, scope: !5626, file: !1592, line: 104, type: !872)
!5631 = !DILocation(line: 0, scope: !5626)
!5632 = !DILocation(line: 106, column: 9, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5626, file: !1592, line: 106, column: 9)
!5634 = !DILocation(line: 106, column: 23, scope: !5633)
!5635 = !DILocation(line: 106, column: 9, scope: !5626)
!5636 = !DILocation(line: 109, column: 12, scope: !5626)
!5637 = !DILocation(line: 109, column: 25, scope: !5626)
!5638 = !DILocation(line: 109, column: 5, scope: !5626)
!5639 = !DILocation(line: 110, column: 1, scope: !5626)
!5640 = distinct !DISubprogram(name: "connect", linkageName: "_ZN6Cicada12IPCommDevice7connectEv", scope: !1595, file: !1592, line: 57, type: !1701, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1700, retainedNodes: !5641)
!5641 = !{!5642}
!5642 = !DILocalVariable(name: "this", arg: 1, scope: !5640, type: !5584, flags: DIFlagArtificial | DIFlagObjectPointer)
!5643 = !DILocation(line: 0, scope: !5640)
!5644 = !DILocation(line: 59, column: 9, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5640, file: !1592, line: 59, column: 9)
!5646 = !{!5290, !2477, i64 124}
!5647 = !DILocation(line: 59, column: 15, scope: !5645)
!5648 = !DILocation(line: 59, column: 23, scope: !5645)
!5649 = !DILocation(line: 62, column: 5, scope: !5640)
!5650 = !DILocation(line: 62, column: 20, scope: !5640)
!5651 = !DILocation(line: 64, column: 5, scope: !5640)
!5652 = !DILocation(line: 65, column: 1, scope: !5640)
!5653 = distinct !DISubprogram(name: "disconnect", linkageName: "_ZN6Cicada12IPCommDevice10disconnectEv", scope: !1595, file: !1592, line: 67, type: !1695, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1703, retainedNodes: !5654)
!5654 = !{!5655}
!5655 = !DILocalVariable(name: "this", arg: 1, scope: !5653, type: !5584, flags: DIFlagArtificial | DIFlagObjectPointer)
!5656 = !DILocation(line: 0, scope: !5653)
!5657 = !DILocation(line: 69, column: 9, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5653, file: !1592, line: 69, column: 9)
!5659 = !DILocation(line: 69, column: 9, scope: !5653)
!5660 = !DILocation(line: 72, column: 5, scope: !5653)
!5661 = !DILocation(line: 72, column: 20, scope: !5653)
!5662 = !DILocation(line: 73, column: 1, scope: !5653)
!5663 = distinct !DISubprogram(name: "isConnected", linkageName: "_ZN6Cicada12IPCommDevice11isConnectedEv", scope: !1595, file: !1592, line: 75, type: !1701, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1704, retainedNodes: !5664)
!5664 = !{!5665}
!5665 = !DILocalVariable(name: "this", arg: 1, scope: !5663, type: !5584, flags: DIFlagArtificial | DIFlagObjectPointer)
!5666 = !DILocation(line: 0, scope: !5663)
!5667 = !DILocation(line: 77, column: 12, scope: !5663)
!5668 = !DILocation(line: 77, column: 39, scope: !5663)
!5669 = !DILocation(line: 77, column: 5, scope: !5663)
!5670 = distinct !DISubprogram(name: "isIdle", linkageName: "_ZN6Cicada12IPCommDevice6isIdleEv", scope: !1595, file: !1592, line: 81, type: !1701, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1705, retainedNodes: !5671)
!5671 = !{!5672}
!5672 = !DILocalVariable(name: "this", arg: 1, scope: !5670, type: !5584, flags: DIFlagArtificial | DIFlagObjectPointer)
!5673 = !DILocation(line: 0, scope: !5670)
!5674 = !DILocation(line: 83, column: 12, scope: !5670)
!5675 = !DILocation(line: 83, column: 26, scope: !5670)
!5676 = !DILocation(line: 83, column: 5, scope: !5670)
!5677 = distinct !DISubprogram(name: "setHostPort", linkageName: "_ZN6Cicada12IPCommDevice11setHostPortEPKctNS_13IIPCommDevice14ConnectionTypeE", scope: !1595, file: !1592, line: 50, type: !1698, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1697, retainedNodes: !5678)
!5678 = !{!5679, !5680, !5681, !5682}
!5679 = !DILocalVariable(name: "this", arg: 1, scope: !5677, type: !5584, flags: DIFlagArtificial | DIFlagObjectPointer)
!5680 = !DILocalVariable(name: "host", arg: 2, scope: !5677, file: !1592, line: 50, type: !266)
!5681 = !DILocalVariable(name: "port", arg: 3, scope: !5677, file: !1592, line: 50, type: !37)
!5682 = !DILocalVariable(name: "type", arg: 4, scope: !5677, file: !1592, line: 50, type: !1624)
!5683 = !DILocation(line: 0, scope: !5677)
!5684 = !DILocation(line: 52, column: 5, scope: !5677)
!5685 = !DILocation(line: 52, column: 11, scope: !5677)
!5686 = !DILocation(line: 53, column: 5, scope: !5677)
!5687 = !DILocation(line: 53, column: 11, scope: !5677)
!5688 = !{!5290, !2609, i64 128}
!5689 = !DILocation(line: 54, column: 5, scope: !5677)
!5690 = !DILocation(line: 54, column: 11, scope: !5677)
!5691 = !{!5290, !5293, i64 120}
!5692 = !DILocation(line: 55, column: 1, scope: !5677)
!5693 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada12IPCommDeviceD1Ev", scope: !956, file: !956, line: 54, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, retainedNodes: !121)
!5694 = !DILocation(line: 0, scope: !5693)
!5695 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada12IPCommDeviceD0Ev", scope: !956, file: !956, line: 54, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, retainedNodes: !121)
!5696 = !DILocation(line: 0, scope: !5695)
!5697 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIhE4pushEPKhy", scope: !1630, file: !1631, line: 65, type: !1648, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1647, retainedNodes: !5698)
!5698 = !{!5699, !5700, !5701, !5702}
!5699 = !DILocalVariable(name: "this", arg: 1, scope: !5697, type: !5327, flags: DIFlagArtificial | DIFlagObjectPointer)
!5700 = !DILocalVariable(name: "data", arg: 2, scope: !5697, file: !1631, line: 65, type: !1650)
!5701 = !DILocalVariable(name: "size", arg: 3, scope: !5697, file: !1631, line: 65, type: !872)
!5702 = !DILocalVariable(name: "writeCount", scope: !5697, file: !1631, line: 70, type: !872)
!5703 = !DILocation(line: 0, scope: !5697)
!5704 = !DILocation(line: 67, column: 20, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5697, file: !1631, line: 67, column: 13)
!5706 = !DILocation(line: 67, column: 18, scope: !5705)
!5707 = !DILocation(line: 67, column: 13, scope: !5697)
!5708 = !DILocation(line: 68, column: 20, scope: !5705)
!5709 = !DILocation(line: 68, column: 13, scope: !5705)
!5710 = !DILocation(line: 72, column: 27, scope: !5697)
!5711 = !DILocation(line: 72, column: 9, scope: !5697)
!5712 = !DILocation(line: 73, column: 50, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5697, file: !1631, line: 72, column: 35)
!5714 = !DILocation(line: 73, column: 35, scope: !5713)
!5715 = !DILocation(line: 73, column: 13, scope: !5713)
!5716 = !DILocation(line: 73, column: 21, scope: !5713)
!5717 = !DILocation(line: 73, column: 33, scope: !5713)
!5718 = !DILocation(line: 74, column: 13, scope: !5713)
!5719 = distinct !{!5719, !5711, !5720, !2694, !2695}
!5720 = !DILocation(line: 75, column: 9, scope: !5697)
!5721 = !DILocation(line: 76, column: 9, scope: !5697)
!5722 = !DILocation(line: 76, column: 24, scope: !5697)
!5723 = !DILocation(line: 78, column: 9, scope: !5697)
!5724 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIhE4pullEPhy", scope: !1630, file: !1631, line: 102, type: !1656, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1655, retainedNodes: !5725)
!5725 = !{!5726, !5727, !5728, !5729}
!5726 = !DILocalVariable(name: "this", arg: 1, scope: !5724, type: !5327, flags: DIFlagArtificial | DIFlagObjectPointer)
!5727 = !DILocalVariable(name: "data", arg: 2, scope: !5724, file: !1631, line: 102, type: !1122)
!5728 = !DILocalVariable(name: "size", arg: 3, scope: !5724, file: !1631, line: 102, type: !872)
!5729 = !DILocalVariable(name: "readCount", scope: !5724, file: !1631, line: 107, type: !872)
!5730 = !DILocation(line: 0, scope: !5724)
!5731 = !DILocation(line: 104, column: 20, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5724, file: !1631, line: 104, column: 13)
!5733 = !DILocation(line: 104, column: 18, scope: !5732)
!5734 = !DILocation(line: 104, column: 13, scope: !5724)
!5735 = !DILocation(line: 105, column: 20, scope: !5732)
!5736 = !DILocation(line: 105, column: 13, scope: !5732)
!5737 = !DILocation(line: 109, column: 26, scope: !5724)
!5738 = !DILocation(line: 109, column: 9, scope: !5724)
!5739 = !DILocation(line: 110, column: 33, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5724, file: !1631, line: 109, column: 34)
!5741 = !DILocation(line: 110, column: 41, scope: !5740)
!5742 = !DILocation(line: 110, column: 27, scope: !5740)
!5743 = !DILocation(line: 110, column: 13, scope: !5740)
!5744 = !DILocation(line: 110, column: 31, scope: !5740)
!5745 = !DILocation(line: 111, column: 13, scope: !5740)
!5746 = distinct !{!5746, !5738, !5747, !2694, !2695}
!5747 = !DILocation(line: 112, column: 9, scope: !5724)
!5748 = !DILocation(line: 113, column: 9, scope: !5724)
!5749 = !DILocation(line: 113, column: 24, scope: !5724)
!5750 = !DILocation(line: 115, column: 9, scope: !5724)
!5751 = distinct !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv", scope: !1630, file: !1631, line: 182, type: !1670, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1672, retainedNodes: !5752)
!5752 = !{!5753}
!5753 = !DILocalVariable(name: "this", arg: 1, scope: !5751, type: !5479, flags: DIFlagArtificial | DIFlagObjectPointer)
!5754 = !DILocation(line: 0, scope: !5751)
!5755 = !DILocation(line: 184, column: 16, scope: !5751)
!5756 = !DILocation(line: 184, column: 30, scope: !5751)
!5757 = !DILocation(line: 184, column: 28, scope: !5751)
!5758 = !DILocation(line: 184, column: 9, scope: !5751)
!5759 = distinct !DISubprogram(name: "IPCommDevice", linkageName: "_ZN6Cicada12IPCommDeviceC2EPhS1_y", scope: !1595, file: !1592, line: 29, type: !1688, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1687, retainedNodes: !5760)
!5760 = !{!5761, !5762, !5763, !5764}
!5761 = !DILocalVariable(name: "this", arg: 1, scope: !5759, type: !5584, flags: DIFlagArtificial | DIFlagObjectPointer)
!5762 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !5759, file: !1592, line: 29, type: !44)
!5763 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !5759, file: !1592, line: 29, type: !44)
!5764 = !DILocalVariable(name: "bufferSize", arg: 4, scope: !5759, file: !1592, line: 29, type: !872)
!5765 = !DILocation(line: 0, scope: !5759)
!5766 = !DILocation(line: 37, column: 1, scope: !5759)
!5767 = !DILocation(line: 29, column: 15, scope: !5759)
!5768 = !DILocation(line: 30, column: 5, scope: !5759)
!5769 = !DILocation(line: 31, column: 5, scope: !5759)
!5770 = !DILocation(line: 32, column: 5, scope: !5759)
!5771 = !DILocation(line: 33, column: 5, scope: !5759)
!5772 = !DILocation(line: 34, column: 5, scope: !5759)
!5773 = !DILocation(line: 35, column: 5, scope: !5759)
!5774 = !DILocation(line: 36, column: 5, scope: !5759)
!5775 = !DILocation(line: 37, column: 2, scope: !5759)
!5776 = distinct !DISubprogram(name: "IIPCommDevice", linkageName: "_ZN6Cicada13IIPCommDeviceC2Ev", scope: !1598, file: !1599, line: 32, type: !1618, scopeLine: 32, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !5777, retainedNodes: !5778)
!5777 = !DISubprogram(name: "IIPCommDevice", scope: !1598, type: !1618, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5778 = !{!5779}
!5779 = !DILocalVariable(name: "this", arg: 1, scope: !5776, type: !5780, flags: DIFlagArtificial | DIFlagObjectPointer)
!5780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 32)
!5781 = !DILocation(line: 0, scope: !5776)
!5782 = !DILocation(line: 32, column: 7, scope: !5776)
!5783 = distinct !DISubprogram(name: "CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIhEC2EPhy", scope: !1630, file: !1631, line: 48, type: !1641, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1640, retainedNodes: !5784)
!5784 = !{!5785, !5786, !5787}
!5785 = !DILocalVariable(name: "this", arg: 1, scope: !5783, type: !5327, flags: DIFlagArtificial | DIFlagObjectPointer)
!5786 = !DILocalVariable(name: "buffer", arg: 2, scope: !5783, file: !1631, line: 48, type: !1122)
!5787 = !DILocalVariable(name: "bufferSize", arg: 3, scope: !5783, file: !1631, line: 48, type: !872)
!5788 = !DILocation(line: 0, scope: !5783)
!5789 = !DILocation(line: 54, column: 5, scope: !5783)
!5790 = !DILocation(line: 49, column: 9, scope: !5783)
!5791 = !DILocation(line: 52, column: 9, scope: !5783)
!5792 = !DILocation(line: 50, column: 9, scope: !5783)
!5793 = !DILocation(line: 53, column: 9, scope: !5783)
!5794 = !DILocation(line: 54, column: 7, scope: !5783)
!5795 = distinct !DISubprogram(name: "~CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIhED0Ev", scope: !1630, file: !1631, line: 56, type: !1645, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1644, retainedNodes: !5796)
!5796 = !{!5797}
!5797 = !DILocalVariable(name: "this", arg: 1, scope: !5795, type: !5327, flags: DIFlagArtificial | DIFlagObjectPointer)
!5798 = !DILocation(line: 0, scope: !5795)
!5799 = !DILocation(line: 57, column: 5, scope: !5795)
!5800 = !DILocation(line: 57, column: 7, scope: !5795)
!5801 = distinct !DISubprogram(name: "read", linkageName: "_ZN6Cicada14CircularBufferIhE4readEv", scope: !1630, file: !1631, line: 140, type: !1659, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1661, retainedNodes: !5802)
!5802 = !{!5803}
!5803 = !DILocalVariable(name: "this", arg: 1, scope: !5801, type: !5327, flags: DIFlagArtificial | DIFlagObjectPointer)
!5804 = !DILocation(line: 0, scope: !5801)
!5805 = !DILocation(line: 142, column: 16, scope: !5801)
!5806 = !DILocation(line: 142, column: 24, scope: !5801)
!5807 = !DILocation(line: 142, column: 9, scope: !5801)
!5808 = distinct !DISubprogram(name: "flush", linkageName: "_ZN6Cicada14CircularBufferIhE5flushEv", scope: !1630, file: !1631, line: 148, type: !1645, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1662, retainedNodes: !5809)
!5809 = !{!5810}
!5810 = !DILocalVariable(name: "this", arg: 1, scope: !5808, type: !5327, flags: DIFlagArtificial | DIFlagObjectPointer)
!5811 = !DILocation(line: 0, scope: !5808)
!5812 = !DILocation(line: 150, column: 9, scope: !5808)
!5813 = !DILocation(line: 153, column: 5, scope: !5808)
!5814 = !DILocation(line: 151, column: 19, scope: !5808)
!5815 = distinct !DISubprogram(name: "isEmpty", linkageName: "_ZNK6Cicada14CircularBufferIhE7isEmptyEv", scope: !1630, file: !1631, line: 158, type: !1664, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1663, retainedNodes: !5816)
!5816 = !{!5817}
!5817 = !DILocalVariable(name: "this", arg: 1, scope: !5815, type: !5479, flags: DIFlagArtificial | DIFlagObjectPointer)
!5818 = !DILocation(line: 0, scope: !5815)
!5819 = !DILocation(line: 160, column: 16, scope: !5815)
!5820 = !DILocation(line: 160, column: 31, scope: !5815)
!5821 = !DILocation(line: 160, column: 9, scope: !5815)
!5822 = distinct !DISubprogram(name: "isFull", linkageName: "_ZNK6Cicada14CircularBufferIhE6isFullEv", scope: !1630, file: !1631, line: 166, type: !1664, scopeLine: 167, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1668, retainedNodes: !5823)
!5823 = !{!5824}
!5824 = !DILocalVariable(name: "this", arg: 1, scope: !5822, type: !5479, flags: DIFlagArtificial | DIFlagObjectPointer)
!5825 = !DILocation(line: 0, scope: !5822)
!5826 = !DILocation(line: 168, column: 16, scope: !5822)
!5827 = !DILocation(line: 168, column: 34, scope: !5822)
!5828 = !DILocation(line: 168, column: 31, scope: !5822)
!5829 = !DILocation(line: 168, column: 9, scope: !5822)
!5830 = distinct !DISubprogram(name: "size", linkageName: "_ZNK6Cicada14CircularBufferIhE4sizeEv", scope: !1630, file: !1631, line: 190, type: !1670, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1673, retainedNodes: !5831)
!5831 = !{!5832}
!5832 = !DILocalVariable(name: "this", arg: 1, scope: !5830, type: !5479, flags: DIFlagArtificial | DIFlagObjectPointer)
!5833 = !DILocation(line: 0, scope: !5830)
!5834 = !DILocation(line: 192, column: 16, scope: !5830)
!5835 = !DILocation(line: 192, column: 9, scope: !5830)
!5836 = distinct !DISubprogram(name: "IStatefulDevice", linkageName: "_ZN6Cicada15IStatefulDeviceC2Ev", scope: !1602, file: !1603, line: 38, type: !1607, scopeLine: 38, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !5837, retainedNodes: !5838)
!5837 = !DISubprogram(name: "IStatefulDevice", scope: !1602, type: !1607, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5838 = !{!5839}
!5839 = !DILocalVariable(name: "this", arg: 1, scope: !5836, type: !5840, flags: DIFlagArtificial | DIFlagObjectPointer)
!5840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 32)
!5841 = !DILocation(line: 0, scope: !5836)
!5842 = !DILocation(line: 38, column: 7, scope: !5836)
!5843 = distinct !DISubprogram(name: "~IIPCommDevice", linkageName: "_ZN6Cicada13IIPCommDeviceD0Ev", scope: !1598, file: !1599, line: 35, type: !1618, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1617, retainedNodes: !5844)
!5844 = !{!5845}
!5845 = !DILocalVariable(name: "this", arg: 1, scope: !5843, type: !5780, flags: DIFlagArtificial | DIFlagObjectPointer)
!5846 = !DILocation(line: 0, scope: !5843)
!5847 = !DILocation(line: 35, column: 30, scope: !5843)
!5848 = distinct !DISubprogram(name: "ICommDevice", linkageName: "_ZN6Cicada11ICommDeviceC2Ev", scope: !920, file: !921, line: 43, type: !925, scopeLine: 43, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !5849, retainedNodes: !5850)
!5849 = !DISubprogram(name: "ICommDevice", scope: !920, type: !925, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5850 = !{!5851}
!5851 = !DILocalVariable(name: "this", arg: 1, scope: !5848, type: !5333, flags: DIFlagArtificial | DIFlagObjectPointer)
!5852 = !DILocation(line: 0, scope: !5848)
!5853 = !DILocation(line: 43, column: 7, scope: !5848)
!5854 = distinct !DISubprogram(name: "~IStatefulDevice", linkageName: "_ZN6Cicada15IStatefulDeviceD0Ev", scope: !1602, file: !1603, line: 41, type: !1607, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1606, retainedNodes: !5855)
!5855 = !{!5856}
!5856 = !DILocalVariable(name: "this", arg: 1, scope: !5854, type: !5840, flags: DIFlagArtificial | DIFlagObjectPointer)
!5857 = !DILocation(line: 0, scope: !5854)
!5858 = !DILocation(line: 41, column: 32, scope: !5854)
!5859 = distinct !DISubprogram(name: "~ICommDevice", linkageName: "_ZN6Cicada11ICommDeviceD0Ev", scope: !920, file: !921, line: 46, type: !925, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !924, retainedNodes: !5860)
!5860 = !{!5861}
!5861 = !DILocalVariable(name: "this", arg: 1, scope: !5859, type: !5333, flags: DIFlagArtificial | DIFlagObjectPointer)
!5862 = !DILocation(line: 0, scope: !5859)
!5863 = !DILocation(line: 46, column: 28, scope: !5859)
!5864 = distinct !DISubprogram(name: "IPCommDevice", linkageName: "_ZN6Cicada12IPCommDeviceC2EPhS1_yy", scope: !1595, file: !1592, line: 39, type: !1692, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, declaration: !1691, retainedNodes: !5865)
!5865 = !{!5866, !5867, !5868, !5869, !5870}
!5866 = !DILocalVariable(name: "this", arg: 1, scope: !5864, type: !5584, flags: DIFlagArtificial | DIFlagObjectPointer)
!5867 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !5864, file: !1592, line: 40, type: !44)
!5868 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !5864, file: !1592, line: 40, type: !44)
!5869 = !DILocalVariable(name: "readBufferSize", arg: 4, scope: !5864, file: !1592, line: 40, type: !872)
!5870 = !DILocalVariable(name: "writeBufferSize", arg: 5, scope: !5864, file: !1592, line: 40, type: !872)
!5871 = !DILocation(line: 0, scope: !5864)
!5872 = !DILocation(line: 48, column: 1, scope: !5864)
!5873 = !DILocation(line: 39, column: 15, scope: !5864)
!5874 = !DILocation(line: 41, column: 5, scope: !5864)
!5875 = !DILocation(line: 42, column: 5, scope: !5864)
!5876 = !DILocation(line: 43, column: 5, scope: !5864)
!5877 = !DILocation(line: 44, column: 5, scope: !5864)
!5878 = !DILocation(line: 45, column: 5, scope: !5864)
!5879 = !DILocation(line: 46, column: 5, scope: !5864)
!5880 = !DILocation(line: 47, column: 5, scope: !5864)
!5881 = !DILocation(line: 48, column: 2, scope: !5864)
!5882 = distinct !DISubprogram(name: "~SimCommDevice", linkageName: "_ZN6Cicada13SimCommDeviceD0Ev", scope: !1736, file: !42, line: 40, type: !1754, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, declaration: !1753, retainedNodes: !5883)
!5883 = !{!5884}
!5884 = !DILocalVariable(name: "this", arg: 1, scope: !5882, type: !5885, flags: DIFlagArtificial | DIFlagObjectPointer)
!5885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 32)
!5886 = !DILocation(line: 0, scope: !5882)
!5887 = !DILocation(line: 40, column: 30, scope: !5882)
!5888 = distinct !DISubprogram(name: "connect", linkageName: "_ZN6Cicada13SimCommDevice7connectEv", scope: !1736, file: !1733, line: 88, type: !1761, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, declaration: !1760, retainedNodes: !5889)
!5889 = !{!5890}
!5890 = !DILocalVariable(name: "this", arg: 1, scope: !5888, type: !5885, flags: DIFlagArtificial | DIFlagObjectPointer)
!5891 = !DILocation(line: 0, scope: !5888)
!5892 = !DILocation(line: 90, column: 9, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5888, file: !1733, line: 90, column: 9)
!5894 = !{!5895, !2477, i64 232}
!5895 = !{!"_ZTSN6Cicada13SimCommDeviceE", !2477, i64 232, !2478, i64 236, !2478, i64 252, !2478, i64 276, !2609, i64 278}
!5896 = !DILocation(line: 90, column: 14, scope: !5893)
!5897 = !DILocation(line: 90, column: 9, scope: !5888)
!5898 = !DILocation(line: 93, column: 26, scope: !5888)
!5899 = !DILocation(line: 93, column: 5, scope: !5888)
!5900 = !DILocation(line: 94, column: 1, scope: !5888)
!5901 = distinct !DISubprogram(name: "resetStates", linkageName: "_ZN6Cicada13SimCommDevice11resetStatesEv", scope: !1736, file: !1733, line: 46, type: !1754, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, declaration: !1756, retainedNodes: !5902)
!5902 = !{!5903}
!5903 = !DILocalVariable(name: "this", arg: 1, scope: !5901, type: !5885, flags: DIFlagArtificial | DIFlagObjectPointer)
!5904 = !DILocation(line: 0, scope: !5901)
!5905 = !DILocation(line: 48, column: 5, scope: !5901)
!5906 = !DILocation(line: 48, column: 13, scope: !5901)
!5907 = !DILocation(line: 49, column: 5, scope: !5901)
!5908 = !DILocation(line: 49, column: 17, scope: !5901)
!5909 = !DILocation(line: 50, column: 5, scope: !5901)
!5910 = !DILocation(line: 50, column: 18, scope: !5901)
!5911 = !DILocation(line: 51, column: 5, scope: !5901)
!5912 = !DILocation(line: 54, column: 5, scope: !5901)
!5913 = !DILocation(line: 54, column: 19, scope: !5901)
!5914 = !DILocation(line: 58, column: 5, scope: !5901)
!5915 = !DILocation(line: 58, column: 19, scope: !5901)
!5916 = !DILocation(line: 59, column: 5, scope: !5901)
!5917 = !DILocation(line: 52, column: 16, scope: !5901)
!5918 = !DILocation(line: 59, column: 20, scope: !5901)
!5919 = !DILocation(line: 60, column: 5, scope: !5901)
!5920 = !DILocation(line: 60, column: 11, scope: !5901)
!5921 = !{!5895, !2478, i64 276}
!5922 = !DILocation(line: 61, column: 5, scope: !5901)
!5923 = !DILocation(line: 61, column: 24, scope: !5901)
!5924 = !DILocation(line: 62, column: 5, scope: !5901)
!5925 = !DILocation(line: 62, column: 24, scope: !5901)
!5926 = !DILocation(line: 63, column: 1, scope: !5901)
!5927 = distinct !DISubprogram(name: "setApn", linkageName: "_ZN6Cicada13SimCommDevice6setApnEPKc", scope: !1736, file: !1733, line: 83, type: !1758, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, declaration: !1757, retainedNodes: !5928)
!5928 = !{!5929, !5930}
!5929 = !DILocalVariable(name: "this", arg: 1, scope: !5927, type: !5885, flags: DIFlagArtificial | DIFlagObjectPointer)
!5930 = !DILocalVariable(name: "apn", arg: 2, scope: !5927, file: !1733, line: 83, type: !266)
!5931 = !DILocation(line: 0, scope: !5927)
!5932 = !DILocation(line: 85, column: 5, scope: !5927)
!5933 = !DILocation(line: 85, column: 10, scope: !5927)
!5934 = !DILocation(line: 86, column: 1, scope: !5927)
!5935 = distinct !DISubprogram(name: "serialLock", linkageName: "_ZN6Cicada13SimCommDevice10serialLockEv", scope: !1736, file: !1733, line: 96, type: !1761, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, declaration: !1763, retainedNodes: !5936)
!5936 = !{!5937}
!5937 = !DILocalVariable(name: "this", arg: 1, scope: !5935, type: !5885, flags: DIFlagArtificial | DIFlagObjectPointer)
!5938 = !DILocation(line: 0, scope: !5935)
!5939 = !DILocation(line: 98, column: 9, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5935, file: !1733, line: 98, column: 9)
!5941 = !DILocation(line: 98, column: 23, scope: !5940)
!5942 = !DILocation(line: 101, column: 5, scope: !5935)
!5943 = !DILocation(line: 101, column: 20, scope: !5935)
!5944 = !DILocation(line: 102, column: 5, scope: !5935)
!5945 = !DILocation(line: 103, column: 1, scope: !5935)
!5946 = distinct !DISubprogram(name: "serialUnlock", linkageName: "_ZN6Cicada13SimCommDevice12serialUnlockEv", scope: !1736, file: !1733, line: 105, type: !1754, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, declaration: !1764, retainedNodes: !5947)
!5947 = !{!5948}
!5948 = !DILocalVariable(name: "this", arg: 1, scope: !5946, type: !5885, flags: DIFlagArtificial | DIFlagObjectPointer)
!5949 = !DILocation(line: 0, scope: !5946)
!5950 = !DILocation(line: 107, column: 5, scope: !5946)
!5951 = !DILocation(line: 107, column: 20, scope: !5946)
!5952 = !DILocation(line: 108, column: 1, scope: !5946)
!5953 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada13SimCommDeviceD1Ev", scope: !42, file: !42, line: 40, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, retainedNodes: !121)
!5954 = !DILocation(line: 0, scope: !5953)
!5955 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada13SimCommDeviceD0Ev", scope: !42, file: !42, line: 40, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, retainedNodes: !121)
!5956 = !DILocation(line: 0, scope: !5955)
!5957 = distinct !DISubprogram(name: "SimCommDevice", linkageName: "_ZN6Cicada13SimCommDeviceC2ERNS_15IBufferedSerialEPhS3_y", scope: !1736, file: !1733, line: 32, type: !1747, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, declaration: !1746, retainedNodes: !5958)
!5958 = !{!5959, !5960, !5961, !5962, !5963}
!5959 = !DILocalVariable(name: "this", arg: 1, scope: !5957, type: !5885, flags: DIFlagArtificial | DIFlagObjectPointer)
!5960 = !DILocalVariable(name: "serial", arg: 2, scope: !5957, file: !1733, line: 33, type: !958)
!5961 = !DILocalVariable(name: "readBuffer", arg: 3, scope: !5957, file: !1733, line: 33, type: !44)
!5962 = !DILocalVariable(name: "writeBuffer", arg: 4, scope: !5957, file: !1733, line: 33, type: !44)
!5963 = !DILocalVariable(name: "bufferSize", arg: 5, scope: !5957, file: !1733, line: 33, type: !872)
!5964 = !DILocation(line: 0, scope: !5957)
!5965 = !DILocation(line: 35, column: 1, scope: !5957)
!5966 = !DILocation(line: 34, column: 5, scope: !5957)
!5967 = !DILocation(line: 34, column: 64, scope: !5957)
!5968 = !DILocation(line: 36, column: 5, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5957, file: !1733, line: 35, column: 1)
!5970 = !DILocation(line: 37, column: 1, scope: !5957)
!5971 = distinct !DISubprogram(name: "SimCommDevice", linkageName: "_ZN6Cicada13SimCommDeviceC2ERNS_15IBufferedSerialEPhS3_yy", scope: !1736, file: !1733, line: 39, type: !1751, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, declaration: !1750, retainedNodes: !5972)
!5972 = !{!5973, !5974, !5975, !5976, !5977, !5978}
!5973 = !DILocalVariable(name: "this", arg: 1, scope: !5971, type: !5885, flags: DIFlagArtificial | DIFlagObjectPointer)
!5974 = !DILocalVariable(name: "serial", arg: 2, scope: !5971, file: !1733, line: 39, type: !958)
!5975 = !DILocalVariable(name: "readBuffer", arg: 3, scope: !5971, file: !1733, line: 39, type: !44)
!5976 = !DILocalVariable(name: "writeBuffer", arg: 4, scope: !5971, file: !1733, line: 39, type: !44)
!5977 = !DILocalVariable(name: "readBufferSize", arg: 5, scope: !5971, file: !1733, line: 40, type: !872)
!5978 = !DILocalVariable(name: "writeBufferSize", arg: 6, scope: !5971, file: !1733, line: 40, type: !872)
!5979 = !DILocation(line: 0, scope: !5971)
!5980 = !DILocation(line: 42, column: 1, scope: !5971)
!5981 = !DILocation(line: 41, column: 5, scope: !5971)
!5982 = !DILocation(line: 41, column: 85, scope: !5971)
!5983 = !DILocation(line: 43, column: 5, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5971, file: !1733, line: 42, column: 1)
!5985 = !DILocation(line: 44, column: 1, scope: !5971)
!5986 = distinct !DISubprogram(name: "fillLineBuffer", linkageName: "_ZN6Cicada13SimCommDevice14fillLineBufferEv", scope: !1736, file: !1733, line: 65, type: !1761, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, declaration: !1775, retainedNodes: !5987)
!5987 = !{!5988, !5989}
!5988 = !DILocalVariable(name: "this", arg: 1, scope: !5986, type: !5885, flags: DIFlagArtificial | DIFlagObjectPointer)
!5989 = !DILocalVariable(name: "c", scope: !5990, file: !1733, line: 71, type: !130)
!5990 = distinct !DILexicalBlock(scope: !5991, file: !1733, line: 70, column: 42)
!5991 = distinct !DILexicalBlock(scope: !5992, file: !1733, line: 69, column: 37)
!5992 = distinct !DILexicalBlock(scope: !5986, file: !1733, line: 69, column: 9)
!5993 = !DILocation(line: 0, scope: !5986)
!5994 = !DILocation(line: 69, column: 9, scope: !5992)
!5995 = !DILocation(line: 69, column: 24, scope: !5992)
!5996 = !DILocation(line: 69, column: 9, scope: !5986)
!5997 = !DILocation(line: 70, column: 9, scope: !5991)
!5998 = !DILocation(line: 70, column: 16, scope: !5991)
!5999 = !DILocation(line: 70, column: 24, scope: !5991)
!6000 = !DILocation(line: 71, column: 22, scope: !5990)
!6001 = !DILocation(line: 71, column: 30, scope: !5990)
!6002 = !DILocation(line: 0, scope: !5990)
!6003 = !DILocation(line: 72, column: 32, scope: !5990)
!6004 = !{!5300, !2478, i64 205}
!6005 = !DILocation(line: 72, column: 13, scope: !5990)
!6006 = !DILocation(line: 72, column: 36, scope: !5990)
!6007 = !DILocation(line: 73, column: 27, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !5990, file: !1733, line: 73, column: 17)
!6009 = !DILocation(line: 73, column: 42, scope: !6008)
!6010 = !DILocation(line: 73, column: 50, scope: !6008)
!6011 = !DILocation(line: 73, column: 17, scope: !5990)
!6012 = !DILocation(line: 74, column: 29, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6008, file: !1733, line: 73, column: 70)
!6014 = !DILocation(line: 74, column: 17, scope: !6013)
!6015 = !DILocation(line: 74, column: 38, scope: !6013)
!6016 = !DILocation(line: 75, column: 25, scope: !6013)
!6017 = !DILocation(line: 81, column: 1, scope: !5986)
!6018 = distinct !DISubprogram(name: "parseDnsReply", linkageName: "_ZN6Cicada13SimCommDevice13parseDnsReplyEv", scope: !1736, file: !1733, line: 110, type: !1761, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, declaration: !1776, retainedNodes: !6019)
!6019 = !{!6020, !6021, !6024, !6025}
!6020 = !DILocalVariable(name: "this", arg: 1, scope: !6018, type: !5885, flags: DIFlagArtificial | DIFlagObjectPointer)
!6021 = !DILocalVariable(name: "tmpStr", scope: !6022, file: !1733, line: 113, type: !308)
!6022 = distinct !DILexicalBlock(scope: !6023, file: !1733, line: 112, column: 55)
!6023 = distinct !DILexicalBlock(scope: !6018, file: !1733, line: 112, column: 9)
!6024 = !DILocalVariable(name: "i", scope: !6022, file: !1733, line: 114, type: !45)
!6025 = !DILocalVariable(name: "q", scope: !6022, file: !1733, line: 114, type: !45)
!6026 = !DILocation(line: 0, scope: !6018)
!6027 = !DILocation(line: 112, column: 17, scope: !6023)
!6028 = !DILocation(line: 112, column: 9, scope: !6023)
!6029 = !DILocation(line: 112, column: 49, scope: !6023)
!6030 = !DILocation(line: 112, column: 9, scope: !6018)
!6031 = !DILocation(line: 0, scope: !6022)
!6032 = !DILocation(line: 117, column: 16, scope: !6022)
!6033 = !DILocation(line: 117, column: 9, scope: !6022)
!6034 = !DILocation(line: 118, column: 30, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6036, file: !1733, line: 118, column: 17)
!6036 = distinct !DILexicalBlock(scope: !6022, file: !1733, line: 117, column: 32)
!6037 = !DILocation(line: 118, column: 34, scope: !6035)
!6038 = !DILocation(line: 118, column: 17, scope: !6036)
!6039 = distinct !{!6039, !6033, !6040, !2694, !2695}
!6040 = !DILocation(line: 120, column: 9, scope: !6022)
!6041 = !DILocation(line: 121, column: 19, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !6022, file: !1733, line: 121, column: 13)
!6043 = !DILocation(line: 123, column: 13, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6042, file: !1733, line: 121, column: 30)
!6045 = !DILocation(line: 123, column: 27, scope: !6044)
!6046 = !DILocation(line: 124, column: 13, scope: !6044)
!6047 = !DILocation(line: 130, column: 30, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6022, file: !1733, line: 130, column: 17)
!6049 = !DILocation(line: 130, column: 17, scope: !6048)
!6050 = !DILocation(line: 130, column: 34, scope: !6048)
!6051 = !DILocation(line: 130, column: 17, scope: !6022)
!6052 = !DILocation(line: 129, column: 18, scope: !6022)
!6053 = !DILocation(line: 129, column: 9, scope: !6022)
!6054 = distinct !{!6054, !6053, !6055, !2694, !2695}
!6055 = !DILocation(line: 131, column: 18, scope: !6022)
!6056 = !DILocation(line: 132, column: 32, scope: !6022)
!6057 = !DILocation(line: 133, column: 9, scope: !6022)
!6058 = !DILocation(line: 133, column: 16, scope: !6022)
!6059 = !DILocation(line: 135, column: 32, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6061, file: !1733, line: 134, column: 17)
!6061 = distinct !DILexicalBlock(scope: !6022, file: !1733, line: 133, column: 32)
!6062 = !DILocation(line: 135, column: 17, scope: !6060)
!6063 = !DILocation(line: 136, column: 14, scope: !6061)
!6064 = distinct !{!6064, !6057, !6065, !2694, !2695}
!6065 = !DILocation(line: 137, column: 9, scope: !6022)
!6066 = !DILocation(line: 132, column: 30, scope: !6022)
!6067 = !DILocation(line: 138, column: 16, scope: !6022)
!6068 = !DILocation(line: 138, column: 9, scope: !6022)
!6069 = !DILocation(line: 139, column: 9, scope: !6022)
!6070 = !DILocation(line: 140, column: 16, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !6023, file: !1733, line: 140, column: 16)
!6072 = !DILocation(line: 140, column: 56, scope: !6071)
!6073 = !DILocation(line: 140, column: 16, scope: !6023)
!6074 = !DILocation(line: 141, column: 9, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6071, file: !1733, line: 140, column: 62)
!6076 = !DILocation(line: 141, column: 24, scope: !6075)
!6077 = !DILocation(line: 142, column: 5, scope: !6075)
!6078 = !DILocation(line: 145, column: 1, scope: !6018)
!6079 = distinct !DISubprogram(name: "parseCiprxget4", linkageName: "_ZN6Cicada13SimCommDevice14parseCiprxget4Ev", scope: !1736, file: !1733, line: 147, type: !1761, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, declaration: !1777, retainedNodes: !6080)
!6080 = !{!6081, !6082}
!6081 = !DILocalVariable(name: "this", arg: 1, scope: !6079, type: !5885, flags: DIFlagArtificial | DIFlagObjectPointer)
!6082 = !DILocalVariable(name: "bytesToReceive", scope: !6083, file: !1733, line: 150, type: !59)
!6083 = distinct !DILexicalBlock(scope: !6084, file: !1733, line: 149, column: 59)
!6084 = distinct !DILexicalBlock(scope: !6079, file: !1733, line: 149, column: 9)
!6085 = !DILocation(line: 0, scope: !6079)
!6086 = !DILocation(line: 149, column: 17, scope: !6084)
!6087 = !DILocation(line: 149, column: 9, scope: !6084)
!6088 = !DILocation(line: 149, column: 53, scope: !6084)
!6089 = !DILocation(line: 149, column: 9, scope: !6079)
!6090 = !DILocation(line: 150, column: 9, scope: !6083)
!6091 = !DILocation(line: 151, column: 28, scope: !6083)
!6092 = !DILocation(line: 0, scope: !6083)
!6093 = !DILocation(line: 151, column: 9, scope: !6083)
!6094 = !DILocation(line: 152, column: 28, scope: !6083)
!6095 = !{!2525, !2525, i64 0}
!6096 = !DILocation(line: 152, column: 9, scope: !6083)
!6097 = !DILocation(line: 152, column: 25, scope: !6083)
!6098 = !DILocation(line: 154, column: 5, scope: !6084)
!6099 = !DILocation(line: 156, column: 1, scope: !6079)
!6100 = distinct !DISubprogram(name: "parseCiprxget2", linkageName: "_ZN6Cicada13SimCommDevice14parseCiprxget2Ev", scope: !1736, file: !1733, line: 158, type: !1761, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, declaration: !1778, retainedNodes: !6101)
!6101 = !{!6102, !6103}
!6102 = !DILocalVariable(name: "this", arg: 1, scope: !6100, type: !5885, flags: DIFlagArtificial | DIFlagObjectPointer)
!6103 = !DILocalVariable(name: "bytesToReceive", scope: !6104, file: !1733, line: 161, type: !59)
!6104 = distinct !DILexicalBlock(scope: !6105, file: !1733, line: 160, column: 59)
!6105 = distinct !DILexicalBlock(scope: !6100, file: !1733, line: 160, column: 9)
!6106 = !DILocation(line: 0, scope: !6100)
!6107 = !DILocation(line: 160, column: 17, scope: !6105)
!6108 = !DILocation(line: 160, column: 9, scope: !6105)
!6109 = !DILocation(line: 160, column: 53, scope: !6105)
!6110 = !DILocation(line: 160, column: 9, scope: !6100)
!6111 = !DILocation(line: 161, column: 9, scope: !6104)
!6112 = !DILocation(line: 162, column: 28, scope: !6104)
!6113 = !DILocation(line: 0, scope: !6104)
!6114 = !DILocation(line: 162, column: 9, scope: !6104)
!6115 = !DILocation(line: 163, column: 28, scope: !6104)
!6116 = !DILocation(line: 163, column: 9, scope: !6104)
!6117 = !DILocation(line: 163, column: 25, scope: !6104)
!6118 = !DILocation(line: 164, column: 9, scope: !6104)
!6119 = !DILocation(line: 164, column: 22, scope: !6104)
!6120 = !DILocation(line: 165, column: 9, scope: !6104)
!6121 = !DILocation(line: 165, column: 24, scope: !6104)
!6122 = !DILocation(line: 167, column: 5, scope: !6105)
!6123 = !DILocation(line: 169, column: 1, scope: !6100)
!6124 = distinct !DISubprogram(name: "parseCsq", linkageName: "_ZN6Cicada13SimCommDevice8parseCsqEv", scope: !1736, file: !1733, line: 171, type: !1761, scopeLine: 172, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, declaration: !1779, retainedNodes: !6125)
!6125 = !{!6126, !6127}
!6126 = !DILocalVariable(name: "this", arg: 1, scope: !6124, type: !5885, flags: DIFlagArtificial | DIFlagObjectPointer)
!6127 = !DILocalVariable(name: "rssi", scope: !6128, file: !1733, line: 174, type: !10)
!6128 = distinct !DILexicalBlock(scope: !6129, file: !1733, line: 173, column: 49)
!6129 = distinct !DILexicalBlock(scope: !6124, file: !1733, line: 173, column: 9)
!6130 = !DILocation(line: 0, scope: !6124)
!6131 = !DILocation(line: 173, column: 17, scope: !6129)
!6132 = !DILocation(line: 173, column: 9, scope: !6129)
!6133 = !DILocation(line: 173, column: 43, scope: !6129)
!6134 = !DILocation(line: 173, column: 9, scope: !6124)
!6135 = !DILocation(line: 174, column: 9, scope: !6128)
!6136 = !DILocation(line: 175, column: 32, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6128, file: !1733, line: 175, column: 13)
!6138 = !DILocation(line: 0, scope: !6128)
!6139 = !DILocation(line: 175, column: 13, scope: !6137)
!6140 = !DILocation(line: 175, column: 50, scope: !6137)
!6141 = !DILocation(line: 175, column: 13, scope: !6128)
!6142 = !DILocation(line: 176, column: 21, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6137, file: !1733, line: 175, column: 56)
!6144 = !DILocation(line: 176, column: 13, scope: !6143)
!6145 = !DILocation(line: 176, column: 19, scope: !6143)
!6146 = !DILocation(line: 177, column: 9, scope: !6143)
!6147 = !DILocation(line: 179, column: 5, scope: !6129)
!6148 = !DILocation(line: 181, column: 1, scope: !6124)
!6149 = distinct !DISubprogram(name: "parseIDReply", linkageName: "_ZN6Cicada13SimCommDevice12parseIDReplyEv", scope: !1736, file: !1733, line: 183, type: !1761, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, declaration: !1780, retainedNodes: !6150)
!6150 = !{!6151, !6152, !6153}
!6151 = !DILocalVariable(name: "this", arg: 1, scope: !6149, type: !5885, flags: DIFlagArtificial | DIFlagObjectPointer)
!6152 = !DILocalVariable(name: "src", scope: !6149, file: !1733, line: 190, type: !308)
!6153 = !DILocalVariable(name: "copiedChars", scope: !6149, file: !1733, line: 197, type: !59)
!6154 = !DILocation(line: 0, scope: !6149)
!6155 = !DILocation(line: 186, column: 17, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6149, file: !1733, line: 186, column: 9)
!6157 = !DILocation(line: 186, column: 9, scope: !6156)
!6158 = !DILocation(line: 186, column: 39, scope: !6156)
!6159 = !DILocation(line: 186, column: 44, scope: !6156)
!6160 = !DILocation(line: 193, column: 9, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6149, file: !1733, line: 193, column: 9)
!6162 = !DILocation(line: 193, column: 45, scope: !6161)
!6163 = !DILocation(line: 193, column: 9, scope: !6149)
!6164 = !DILocation(line: 198, column: 12, scope: !6149)
!6165 = !DILocation(line: 198, column: 17, scope: !6149)
!6166 = !DILocation(line: 198, column: 5, scope: !6149)
!6167 = !DILocation(line: 199, column: 46, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6149, file: !1733, line: 198, column: 67)
!6169 = !DILocation(line: 199, column: 36, scope: !6168)
!6170 = !DILocation(line: 199, column: 9, scope: !6168)
!6171 = !DILocation(line: 199, column: 40, scope: !6168)
!6172 = !DILocation(line: 198, column: 25, scope: !6149)
!6173 = distinct !{!6173, !6166, !6174, !2694, !2695}
!6174 = !DILocation(line: 200, column: 5, scope: !6149)
!6175 = !DILocation(line: 201, column: 5, scope: !6149)
!6176 = !DILocation(line: 201, column: 34, scope: !6149)
!6177 = !DILocation(line: 204, column: 1, scope: !6149)
!6178 = distinct !DISubprogram(name: "sendDnsQuery", linkageName: "_ZN6Cicada13SimCommDevice12sendDnsQueryEv", scope: !1736, file: !1733, line: 206, type: !1761, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, declaration: !1782, retainedNodes: !6179)
!6179 = !{!6180}
!6180 = !DILocalVariable(name: "this", arg: 1, scope: !6178, type: !5885, flags: DIFlagArtificial | DIFlagObjectPointer)
!6181 = !DILocation(line: 0, scope: !6178)
!6182 = !DILocation(line: 208, column: 9, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6178, file: !1733, line: 208, column: 9)
!6184 = !DILocation(line: 208, column: 17, scope: !6183)
!6185 = !DILocation(line: 208, column: 43, scope: !6183)
!6186 = !DILocation(line: 208, column: 36, scope: !6183)
!6187 = !DILocation(line: 208, column: 50, scope: !6183)
!6188 = !DILocation(line: 208, column: 34, scope: !6183)
!6189 = !DILocation(line: 208, column: 9, scope: !6178)
!6190 = !DILocation(line: 211, column: 5, scope: !6178)
!6191 = !DILocation(line: 211, column: 13, scope: !6178)
!6192 = !DILocation(line: 212, column: 5, scope: !6178)
!6193 = !DILocation(line: 212, column: 35, scope: !6178)
!6194 = !DILocation(line: 212, column: 13, scope: !6178)
!6195 = !DILocation(line: 213, column: 5, scope: !6178)
!6196 = !DILocation(line: 213, column: 35, scope: !6178)
!6197 = !DILocation(line: 213, column: 13, scope: !6178)
!6198 = !DILocation(line: 215, column: 5, scope: !6178)
!6199 = !DILocation(line: 216, column: 1, scope: !6178)
!6200 = distinct !DISubprogram(name: "sendCiprxget2", linkageName: "_ZN6Cicada13SimCommDevice13sendCiprxget2Ev", scope: !1736, file: !1733, line: 218, type: !1761, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, declaration: !1784, retainedNodes: !6201)
!6201 = !{!6202, !6203, !6206, !6210}
!6202 = !DILocalVariable(name: "this", arg: 1, scope: !6200, type: !5885, flags: DIFlagArtificial | DIFlagObjectPointer)
!6203 = !DILocalVariable(name: "bytesToReceive", scope: !6204, file: !1733, line: 222, type: !872)
!6204 = distinct !DILexicalBlock(scope: !6205, file: !1733, line: 221, column: 46)
!6205 = distinct !DILexicalBlock(scope: !6200, file: !1733, line: 220, column: 9)
!6206 = !DILocalVariable(name: "str", scope: !6204, file: !1733, line: 230, type: !6207)
!6207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 136, elements: !6208)
!6208 = !{!6209}
!6209 = !DISubrange(count: 17)
!6210 = !DILocalVariable(name: "sizeStr", scope: !6204, file: !1733, line: 231, type: !5432)
!6211 = !DILocation(line: 0, scope: !6200)
!6212 = !DILocation(line: 220, column: 9, scope: !6205)
!6213 = !DILocation(line: 220, column: 17, scope: !6205)
!6214 = !DILocation(line: 220, column: 36, scope: !6205)
!6215 = !DILocation(line: 220, column: 44, scope: !6205)
!6216 = !DILocation(line: 220, column: 34, scope: !6205)
!6217 = !DILocation(line: 220, column: 61, scope: !6205)
!6218 = !DILocation(line: 221, column: 9, scope: !6205)
!6219 = !DILocation(line: 221, column: 12, scope: !6205)
!6220 = !DILocation(line: 221, column: 24, scope: !6205)
!6221 = !DILocation(line: 221, column: 41, scope: !6205)
!6222 = !DILocation(line: 220, column: 9, scope: !6200)
!6223 = !DILocation(line: 222, column: 31, scope: !6204)
!6224 = !DILocation(line: 222, column: 39, scope: !6204)
!6225 = !DILocation(line: 222, column: 58, scope: !6204)
!6226 = !DILocation(line: 222, column: 66, scope: !6204)
!6227 = !DILocation(line: 222, column: 56, scope: !6204)
!6228 = !DILocation(line: 222, column: 83, scope: !6204)
!6229 = !DILocation(line: 0, scope: !6204)
!6230 = !DILocation(line: 223, column: 30, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6204, file: !1733, line: 223, column: 13)
!6232 = !DILocation(line: 223, column: 28, scope: !6231)
!6233 = !DILocation(line: 223, column: 13, scope: !6204)
!6234 = !DILocation(line: 225, column: 42, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6204, file: !1733, line: 225, column: 13)
!6236 = !DILocation(line: 225, column: 28, scope: !6235)
!6237 = !DILocation(line: 225, column: 13, scope: !6204)
!6238 = !DILocation(line: 226, column: 42, scope: !6235)
!6239 = !DILocation(line: 226, column: 13, scope: !6235)
!6240 = !DILocation(line: 227, column: 30, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6204, file: !1733, line: 227, column: 13)
!6242 = !{!5895, !2609, i64 278}
!6243 = !DILocation(line: 227, column: 28, scope: !6241)
!6244 = !DILocation(line: 227, column: 13, scope: !6204)
!6245 = !DILocation(line: 230, column: 9, scope: !6204)
!6246 = !DILocation(line: 230, column: 20, scope: !6204)
!6247 = !DILocation(line: 231, column: 9, scope: !6204)
!6248 = !DILocation(line: 231, column: 14, scope: !6204)
!6249 = !DILocation(line: 232, column: 9, scope: !6204)
!6250 = !DILocation(line: 233, column: 9, scope: !6204)
!6251 = !DILocation(line: 233, column: 17, scope: !6204)
!6252 = !DILocation(line: 234, column: 9, scope: !6204)
!6253 = !DILocation(line: 234, column: 17, scope: !6204)
!6254 = !DILocation(line: 235, column: 9, scope: !6204)
!6255 = !DILocation(line: 235, column: 39, scope: !6204)
!6256 = !DILocation(line: 235, column: 17, scope: !6204)
!6257 = !DILocation(line: 237, column: 5, scope: !6205)
!6258 = !DILocation(line: 0, scope: !6205)
!6259 = !DILocation(line: 240, column: 1, scope: !6200)
!6260 = distinct !DISubprogram(name: "checkConnectionState", linkageName: "_ZN6Cicada13SimCommDevice20checkConnectionStateEPKc", scope: !1736, file: !1733, line: 242, type: !1758, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, declaration: !1781, retainedNodes: !6261)
!6261 = !{!6262, !6263}
!6262 = !DILocalVariable(name: "this", arg: 1, scope: !6260, type: !5885, flags: DIFlagArtificial | DIFlagObjectPointer)
!6263 = !DILocalVariable(name: "closeVariant", arg: 2, scope: !6260, file: !1733, line: 242, type: !266)
!6264 = !DILocation(line: 0, scope: !6260)
!6265 = !DILocation(line: 244, column: 17, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6260, file: !1733, line: 244, column: 9)
!6267 = !DILocation(line: 244, column: 9, scope: !6266)
!6268 = !DILocation(line: 244, column: 52, scope: !6266)
!6269 = !DILocation(line: 244, column: 9, scope: !6260)
!6270 = !DILocation(line: 245, column: 9, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6266, file: !1733, line: 244, column: 58)
!6272 = !DILocation(line: 245, column: 24, scope: !6271)
!6273 = !DILocation(line: 246, column: 5, scope: !6271)
!6274 = !DILocation(line: 246, column: 51, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6266, file: !1733, line: 246, column: 16)
!6276 = !DILocation(line: 246, column: 16, scope: !6275)
!6277 = !DILocation(line: 246, column: 73, scope: !6275)
!6278 = !DILocation(line: 246, column: 16, scope: !6266)
!6279 = !DILocation(line: 247, column: 9, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6275, file: !1733, line: 246, column: 79)
!6281 = !DILocation(line: 247, column: 23, scope: !6280)
!6282 = !DILocation(line: 248, column: 9, scope: !6280)
!6283 = !DILocation(line: 248, column: 24, scope: !6280)
!6284 = !DILocation(line: 249, column: 5, scope: !6280)
!6285 = !DILocation(line: 250, column: 1, scope: !6260)
!6286 = distinct !DISubprogram(name: "sendIDRequest", linkageName: "_ZN6Cicada13SimCommDevice13sendIDRequestEPKc", scope: !1736, file: !1733, line: 252, type: !1786, scopeLine: 253, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, declaration: !1785, retainedNodes: !6287)
!6287 = !{!6288, !6289, !6290}
!6288 = !DILocalVariable(name: "this", arg: 1, scope: !6286, type: !5885, flags: DIFlagArtificial | DIFlagObjectPointer)
!6289 = !DILocalVariable(name: "modemSpecificICCIDCommand", arg: 2, scope: !6286, file: !1733, line: 252, type: !266)
!6290 = !DILocalVariable(name: "type", scope: !6291, file: !1733, line: 255, type: !1735)
!6291 = distinct !DILexicalBlock(scope: !6292, file: !1733, line: 254, column: 99)
!6292 = distinct !DILexicalBlock(scope: !6286, file: !1733, line: 254, column: 9)
!6293 = !DILocation(line: 0, scope: !6286)
!6294 = !DILocation(line: 254, column: 9, scope: !6292)
!6295 = !DILocation(line: 254, column: 28, scope: !6292)
!6296 = !DILocation(line: 254, column: 41, scope: !6292)
!6297 = !DILocation(line: 254, column: 71, scope: !6292)
!6298 = !DILocation(line: 254, column: 86, scope: !6292)
!6299 = !DILocation(line: 254, column: 9, scope: !6286)
!6300 = !DILocation(line: 0, scope: !6291)
!6301 = !DILocation(line: 256, column: 28, scope: !6291)
!6302 = !DILocation(line: 258, column: 9, scope: !6291)
!6303 = !DILocation(line: 0, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6291, file: !1733, line: 258, column: 23)
!6305 = !DILocation(line: 282, column: 1, scope: !6286)
!6306 = distinct !DISubprogram(name: "requestRSSI", linkageName: "_ZN6Cicada13SimCommDevice11requestRSSIEv", scope: !1736, file: !1733, line: 284, type: !1754, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, declaration: !1765, retainedNodes: !6307)
!6307 = !{!6308}
!6308 = !DILocalVariable(name: "this", arg: 1, scope: !6306, type: !5885, flags: DIFlagArtificial | DIFlagObjectPointer)
!6309 = !DILocation(line: 0, scope: !6306)
!6310 = !DILocation(line: 286, column: 5, scope: !6306)
!6311 = !DILocation(line: 286, column: 11, scope: !6306)
!6312 = !DILocation(line: 287, column: 1, scope: !6306)
!6313 = distinct !DISubprogram(name: "getRSSI", linkageName: "_ZN6Cicada13SimCommDevice7getRSSIEv", scope: !1736, file: !1733, line: 289, type: !1767, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, declaration: !1766, retainedNodes: !6314)
!6314 = !{!6315}
!6315 = !DILocalVariable(name: "this", arg: 1, scope: !6313, type: !5885, flags: DIFlagArtificial | DIFlagObjectPointer)
!6316 = !DILocation(line: 0, scope: !6313)
!6317 = !DILocation(line: 291, column: 12, scope: !6313)
!6318 = !DILocation(line: 291, column: 5, scope: !6313)
!6319 = distinct !DISubprogram(name: "requestIDString", linkageName: "_ZN6Cicada13SimCommDevice15requestIDStringENS0_13RequestIDTypeE", scope: !1736, file: !1733, line: 294, type: !1770, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, declaration: !1769, retainedNodes: !6320)
!6320 = !{!6321, !6322}
!6321 = !DILocalVariable(name: "this", arg: 1, scope: !6319, type: !5885, flags: DIFlagArtificial | DIFlagObjectPointer)
!6322 = !DILocalVariable(name: "type", arg: 2, scope: !6319, file: !1733, line: 294, type: !1735)
!6323 = !DILocation(line: 0, scope: !6319)
!6324 = !DILocation(line: 296, column: 5, scope: !6319)
!6325 = !DILocation(line: 296, column: 13, scope: !6319)
!6326 = !DILocation(line: 297, column: 5, scope: !6319)
!6327 = !DILocation(line: 297, column: 24, scope: !6319)
!6328 = !DILocation(line: 298, column: 26, scope: !6319)
!6329 = !DILocation(line: 298, column: 5, scope: !6319)
!6330 = !DILocation(line: 298, column: 24, scope: !6319)
!6331 = !DILocation(line: 299, column: 1, scope: !6319)
!6332 = distinct !DISubprogram(name: "getIDString", linkageName: "_ZN6Cicada13SimCommDevice11getIDStringEv", scope: !1736, file: !1733, line: 301, type: !1773, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, declaration: !1772, retainedNodes: !6333)
!6333 = !{!6334}
!6334 = !DILocalVariable(name: "this", arg: 1, scope: !6332, type: !5885, flags: DIFlagArtificial | DIFlagObjectPointer)
!6335 = !DILocation(line: 0, scope: !6332)
!6336 = !DILocation(line: 303, column: 9, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6332, file: !1733, line: 303, column: 9)
!6338 = !DILocation(line: 303, column: 23, scope: !6337)
!6339 = !DILocation(line: 303, column: 31, scope: !6337)
!6340 = !DILocation(line: 308, column: 1, scope: !6332)
!6341 = distinct !DISubprogram(name: "~ModemDetect", linkageName: "_ZN6Cicada11ModemDetectD0Ev", scope: !1833, file: !104, line: 39, type: !1862, scopeLine: 39, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, declaration: !6342, retainedNodes: !6343)
!6342 = !DISubprogram(name: "~ModemDetect", scope: !1833, type: !1862, containingType: !1833, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!6343 = !{!6344}
!6344 = !DILocalVariable(name: "this", arg: 1, scope: !6341, type: !6345, flags: DIFlagArtificial | DIFlagObjectPointer)
!6345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 32)
!6346 = !DILocation(line: 0, scope: !6341)
!6347 = !DILocation(line: 39, column: 7, scope: !6341)
!6348 = distinct !DISubprogram(name: "run", linkageName: "_ZN6Cicada11ModemDetect3runEv", scope: !1833, file: !1830, line: 75, type: !1862, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, declaration: !1873, retainedNodes: !6349)
!6349 = !{!6350, !6351, !6354, !6355}
!6350 = !DILocalVariable(name: "this", arg: 1, scope: !6348, type: !6345, flags: DIFlagArtificial | DIFlagObjectPointer)
!6351 = !DILocalVariable(name: "bufSize", scope: !6352, file: !1830, line: 107, type: !37)
!6352 = distinct !DILexicalBlock(scope: !6353, file: !1830, line: 106, column: 32)
!6353 = distinct !DILexicalBlock(scope: !6348, file: !1830, line: 106, column: 9)
!6354 = !DILocalVariable(name: "__vla_expr0", scope: !6352, type: !10, flags: DIFlagArtificial)
!6355 = !DILocalVariable(name: "readBuf", scope: !6352, file: !1830, line: 108, type: !6356)
!6356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, elements: !6357)
!6357 = !{!6358}
!6358 = !DISubrange(count: !6354)
!6359 = !DILocation(line: 0, scope: !6348)
!6360 = !DILocation(line: 77, column: 9, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6348, file: !1830, line: 77, column: 9)
!6362 = !{!6363, !2477, i64 324}
!6363 = !{!"_ZTSN6Cicada11ModemDetectE", !2478, i64 24, !2477, i64 312, !6364, i64 316, !2610, i64 320, !2477, i64 324}
!6364 = !{!"_ZTSN6Cicada11ModemDetect11DetectStateE", !2478, i64 0}
!6365 = !DILocation(line: 77, column: 9, scope: !6348)
!6366 = !DILocation(line: 78, column: 25, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6361, file: !1830, line: 77, column: 25)
!6368 = !DILocation(line: 79, column: 9, scope: !6367)
!6369 = !DILocation(line: 83, column: 10, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6348, file: !1830, line: 83, column: 9)
!6371 = !{!6363, !2477, i64 312}
!6372 = !DILocation(line: 83, column: 18, scope: !6370)
!6373 = !DILocation(line: 83, column: 9, scope: !6348)
!6374 = !DILocation(line: 84, column: 14, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6376, file: !1830, line: 84, column: 13)
!6376 = distinct !DILexicalBlock(scope: !6370, file: !1830, line: 83, column: 28)
!6377 = !DILocation(line: 84, column: 22, scope: !6375)
!6378 = !DILocation(line: 84, column: 13, scope: !6376)
!6379 = !DILocation(line: 85, column: 13, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6375, file: !1830, line: 84, column: 30)
!6381 = !DILocation(line: 85, column: 26, scope: !6380)
!6382 = !{!6363, !6364, i64 316}
!6383 = !DILocation(line: 86, column: 9, scope: !6380)
!6384 = !DILocation(line: 90, column: 13, scope: !6348)
!6385 = !DILocation(line: 90, column: 5, scope: !6348)
!6386 = !DILocation(line: 92, column: 13, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6388, file: !1830, line: 92, column: 13)
!6388 = distinct !DILexicalBlock(scope: !6348, file: !1830, line: 90, column: 27)
!6389 = !{!6363, !2610, i64 320}
!6390 = !{i8 0, i8 2}
!6391 = !DILocation(line: 92, column: 13, scope: !6388)
!6392 = !DILocation(line: 93, column: 26, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6387, file: !1830, line: 92, column: 30)
!6394 = !DILocation(line: 94, column: 9, scope: !6393)
!6395 = !DILocation(line: 97, column: 9, scope: !6388)
!6396 = !DILocation(line: 97, column: 17, scope: !6388)
!6397 = !DILocation(line: 98, column: 9, scope: !6388)
!6398 = !DILocation(line: 98, column: 17, scope: !6388)
!6399 = !DILocation(line: 99, column: 22, scope: !6388)
!6400 = !DILocation(line: 100, column: 9, scope: !6388)
!6401 = !DILocation(line: 101, column: 9, scope: !6388)
!6402 = !DILocation(line: 106, column: 9, scope: !6353)
!6403 = !DILocation(line: 106, column: 17, scope: !6353)
!6404 = !DILocation(line: 106, column: 9, scope: !6348)
!6405 = !DILocation(line: 107, column: 28, scope: !6352)
!6406 = !DILocation(line: 107, column: 36, scope: !6352)
!6407 = !DILocation(line: 0, scope: !6352)
!6408 = !DILocation(line: 108, column: 9, scope: !6352)
!6409 = !DILocation(line: 108, column: 14, scope: !6352)
!6410 = !DILocation(line: 109, column: 19, scope: !6352)
!6411 = !DILocation(line: 109, column: 55, scope: !6352)
!6412 = !DILocation(line: 109, column: 27, scope: !6352)
!6413 = !DILocation(line: 110, column: 9, scope: !6352)
!6414 = !DILocation(line: 110, column: 26, scope: !6352)
!6415 = !DILocation(line: 112, column: 17, scope: !6352)
!6416 = !DILocation(line: 112, column: 9, scope: !6352)
!6417 = !DILocation(line: 114, column: 17, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6419, file: !1830, line: 114, column: 17)
!6419 = distinct !DILexicalBlock(scope: !6352, file: !1830, line: 112, column: 31)
!6420 = !DILocation(line: 114, column: 55, scope: !6418)
!6421 = !DILocation(line: 114, column: 17, scope: !6419)
!6422 = !DILocation(line: 116, column: 24, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6418, file: !1830, line: 116, column: 24)
!6424 = !DILocation(line: 116, column: 63, scope: !6423)
!6425 = !DILocation(line: 116, column: 24, scope: !6418)
!6426 = !DILocation(line: 118, column: 24, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6423, file: !1830, line: 118, column: 24)
!6428 = !DILocation(line: 118, column: 53, scope: !6427)
!6429 = !DILocation(line: 118, column: 24, scope: !6423)
!6430 = !DILocation(line: 119, column: 17, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6427, file: !1830, line: 118, column: 59)
!6432 = !DILocation(line: 119, column: 25, scope: !6431)
!6433 = !DILocation(line: 121, column: 13, scope: !6431)
!6434 = !DILocation(line: 124, column: 17, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6419, file: !1830, line: 124, column: 17)
!6436 = !DILocation(line: 124, column: 56, scope: !6435)
!6437 = !DILocation(line: 125, column: 17, scope: !6435)
!6438 = !DILocation(line: 125, column: 20, scope: !6435)
!6439 = !DILocation(line: 125, column: 59, scope: !6435)
!6440 = !DILocation(line: 124, column: 17, scope: !6419)
!6441 = !DILocation(line: 130, column: 17, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6419, file: !1830, line: 130, column: 17)
!6443 = !DILocation(line: 130, column: 47, scope: !6442)
!6444 = !DILocation(line: 130, column: 17, scope: !6419)
!6445 = !DILocation(line: 0, scope: !6419)
!6446 = !DILocation(line: 136, column: 5, scope: !6353)
!6447 = !DILocation(line: 136, column: 5, scope: !6352)
!6448 = !DILocation(line: 137, column: 1, scope: !6348)
!6449 = distinct !DISubprogram(name: "ModemDetect", linkageName: "_ZN6Cicada11ModemDetectC2ERNS_15IBufferedSerialE", scope: !1833, file: !1830, line: 30, type: !1858, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, declaration: !1857, retainedNodes: !6450)
!6450 = !{!6451, !6452}
!6451 = !DILocalVariable(name: "this", arg: 1, scope: !6449, type: !6345, flags: DIFlagArtificial | DIFlagObjectPointer)
!6452 = !DILocalVariable(name: "serial", arg: 2, scope: !6449, file: !1830, line: 30, type: !958)
!6453 = !DILocation(line: 0, scope: !6449)
!6454 = !DILocation(line: 32, column: 1, scope: !6449)
!6455 = !DILocation(line: 30, column: 14, scope: !6449)
!6456 = !DILocation(line: 31, column: 5, scope: !6449)
!6457 = !DILocation(line: 31, column: 22, scope: !6449)
!6458 = !DILocation(line: 31, column: 45, scope: !6449)
!6459 = !DILocation(line: 31, column: 69, scope: !6449)
!6460 = !DILocation(line: 32, column: 2, scope: !6449)
!6461 = distinct !DISubprogram(name: "ModemDriver", linkageName: "_ZN6Cicada11ModemDetect11ModemDriverC2Ev", scope: !1837, file: !104, line: 78, type: !1849, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, declaration: !1848, retainedNodes: !6462)
!6462 = !{!6463}
!6463 = !DILocalVariable(name: "this", arg: 1, scope: !6461, type: !2597, flags: DIFlagArtificial | DIFlagObjectPointer)
!6464 = !DILocation(line: 0, scope: !6461)
!6465 = !DILocation(line: 78, column: 24, scope: !6461)
!6466 = distinct !DISubprogram(name: "startDetection", linkageName: "_ZN6Cicada11ModemDetect14startDetectionEv", scope: !1833, file: !1830, line: 34, type: !1862, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, declaration: !1861, retainedNodes: !6467)
!6467 = !{!6468}
!6468 = !DILocalVariable(name: "this", arg: 1, scope: !6466, type: !6345, flags: DIFlagArtificial | DIFlagObjectPointer)
!6469 = !DILocation(line: 0, scope: !6466)
!6470 = !DILocation(line: 36, column: 5, scope: !6466)
!6471 = !DILocation(line: 36, column: 21, scope: !6466)
!6472 = !DILocation(line: 37, column: 1, scope: !6466)
!6473 = distinct !DISubprogram(name: "modemDetected", linkageName: "_ZN6Cicada11ModemDetect13modemDetectedEv", scope: !1833, file: !1830, line: 39, type: !1865, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, declaration: !1864, retainedNodes: !6474)
!6474 = !{!6475}
!6475 = !DILocalVariable(name: "this", arg: 1, scope: !6473, type: !6345, flags: DIFlagArtificial | DIFlagObjectPointer)
!6476 = !DILocation(line: 0, scope: !6473)
!6477 = !DILocation(line: 41, column: 12, scope: !6473)
!6478 = !DILocation(line: 41, column: 25, scope: !6473)
!6479 = !DILocation(line: 41, column: 5, scope: !6473)
!6480 = distinct !DISubprogram(name: "getDetectedModem", linkageName: "_ZN6Cicada11ModemDetect16getDetectedModemEPhS1_yy", scope: !1833, file: !1830, line: 44, type: !1868, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, declaration: !1867, retainedNodes: !6481)
!6481 = !{!6482, !6483, !6484, !6485, !6486}
!6482 = !DILocalVariable(name: "this", arg: 1, scope: !6480, type: !6345, flags: DIFlagArtificial | DIFlagObjectPointer)
!6483 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !6480, file: !1830, line: 45, type: !44)
!6484 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !6480, file: !1830, line: 45, type: !44)
!6485 = !DILocalVariable(name: "readBufferSize", arg: 4, scope: !6480, file: !1830, line: 45, type: !872)
!6486 = !DILocalVariable(name: "writeBufferSize", arg: 5, scope: !6480, file: !1830, line: 45, type: !872)
!6487 = !DILocation(line: 0, scope: !6480)
!6488 = !DILocation(line: 47, column: 13, scope: !6480)
!6489 = !DILocation(line: 47, column: 5, scope: !6480)
!6490 = !DILocation(line: 49, column: 19, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6480, file: !1830, line: 47, column: 27)
!6492 = !DILocation(line: 50, column: 30, scope: !6491)
!6493 = !DILocation(line: 50, column: 13, scope: !6491)
!6494 = !DILocation(line: 51, column: 26, scope: !6491)
!6495 = !DILocation(line: 52, column: 9, scope: !6491)
!6496 = !DILocation(line: 54, column: 15, scope: !6491)
!6497 = !DILocation(line: 54, column: 19, scope: !6491)
!6498 = !DILocation(line: 55, column: 31, scope: !6491)
!6499 = !DILocation(line: 55, column: 13, scope: !6491)
!6500 = !DILocation(line: 56, column: 26, scope: !6491)
!6501 = !DILocation(line: 57, column: 9, scope: !6491)
!6502 = !DILocation(line: 59, column: 15, scope: !6491)
!6503 = !DILocation(line: 59, column: 19, scope: !6491)
!6504 = !DILocation(line: 60, column: 29, scope: !6491)
!6505 = !DILocation(line: 60, column: 13, scope: !6491)
!6506 = !DILocation(line: 61, column: 26, scope: !6491)
!6507 = !DILocation(line: 62, column: 9, scope: !6491)
!6508 = !DILocation(line: 0, scope: !6491)
!6509 = !DILocation(line: 67, column: 12, scope: !6480)
!6510 = !DILocation(line: 67, column: 5, scope: !6480)
!6511 = distinct !DISubprogram(name: "getDetectedModem", linkageName: "_ZN6Cicada11ModemDetect16getDetectedModemEv", scope: !1833, file: !1830, line: 70, type: !1871, scopeLine: 71, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, declaration: !1870, retainedNodes: !6512)
!6512 = !{!6513}
!6513 = !DILocalVariable(name: "this", arg: 1, scope: !6511, type: !6345, flags: DIFlagArtificial | DIFlagObjectPointer)
!6514 = !DILocation(line: 0, scope: !6511)
!6515 = !DILocation(line: 72, column: 12, scope: !6511)
!6516 = !DILocation(line: 72, column: 5, scope: !6511)
!6517 = distinct !DISubprogram(name: "Scheduler", linkageName: "_ZN6Cicada9SchedulerC2EPFjvEPPNS_4TaskE", scope: !1899, file: !1897, line: 29, type: !1911, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1896, declaration: !1910, retainedNodes: !6518)
!6518 = !{!6519, !6521, !6522}
!6519 = !DILocalVariable(name: "this", arg: 1, scope: !6517, type: !6520, flags: DIFlagArtificial | DIFlagObjectPointer)
!6520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 32)
!6521 = !DILocalVariable(name: "tickFunction", arg: 2, scope: !6517, file: !1897, line: 29, type: !1903)
!6522 = !DILocalVariable(name: "taskList", arg: 3, scope: !6517, file: !1897, line: 29, type: !1907)
!6523 = !DILocation(line: 0, scope: !6517)
!6524 = !DILocation(line: 30, column: 5, scope: !6517)
!6525 = !{!6526, !2477, i64 0}
!6526 = !{!"_ZTSN6Cicada9SchedulerE", !2477, i64 0, !2477, i64 4, !2477, i64 8}
!6527 = !DILocation(line: 30, column: 34, scope: !6517)
!6528 = !{!6526, !2477, i64 4}
!6529 = !DILocation(line: 30, column: 55, scope: !6517)
!6530 = !{!6526, !2477, i64 8}
!6531 = !DILocation(line: 31, column: 2, scope: !6517)
!6532 = distinct !DISubprogram(name: "runTask", linkageName: "_ZN6Cicada9Scheduler7runTaskEv", scope: !1899, file: !1897, line: 33, type: !1915, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1896, declaration: !1914, retainedNodes: !6533)
!6533 = !{!6534, !6535}
!6534 = !DILocalVariable(name: "this", arg: 1, scope: !6532, type: !6520, flags: DIFlagArtificial | DIFlagObjectPointer)
!6535 = !DILocalVariable(name: "tick", scope: !6532, file: !1897, line: 35, type: !24)
!6536 = !DILocation(line: 0, scope: !6532)
!6537 = !DILocation(line: 35, column: 24, scope: !6532)
!6538 = !DILocation(line: 36, column: 11, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6532, file: !1897, line: 36, column: 9)
!6540 = !DILocation(line: 36, column: 10, scope: !6539)
!6541 = !DILocation(line: 36, column: 26, scope: !6539)
!6542 = !DILocation(line: 36, column: 34, scope: !6539)
!6543 = !DILocation(line: 37, column: 9, scope: !6539)
!6544 = !DILocation(line: 37, column: 21, scope: !6539)
!6545 = !DILocation(line: 37, column: 20, scope: !6539)
!6546 = !DILocation(line: 37, column: 36, scope: !6539)
!6547 = !DILocation(line: 37, column: 17, scope: !6539)
!6548 = !DILocation(line: 37, column: 51, scope: !6539)
!6549 = !DILocation(line: 37, column: 50, scope: !6539)
!6550 = !DILocation(line: 37, column: 66, scope: !6539)
!6551 = !DILocation(line: 37, column: 49, scope: !6539)
!6552 = !DILocation(line: 37, column: 46, scope: !6539)
!6553 = !DILocation(line: 36, column: 9, scope: !6532)
!6554 = !DILocation(line: 38, column: 11, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6539, file: !1897, line: 37, column: 75)
!6556 = !DILocation(line: 38, column: 10, scope: !6555)
!6557 = !DILocation(line: 38, column: 26, scope: !6555)
!6558 = !DILocation(line: 39, column: 11, scope: !6555)
!6559 = !DILocation(line: 39, column: 10, scope: !6555)
!6560 = !DILocation(line: 39, column: 26, scope: !6555)
!6561 = !DILocation(line: 40, column: 5, scope: !6555)
!6562 = !DILocation(line: 42, column: 10, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6532, file: !1897, line: 42, column: 9)
!6564 = !DILocation(line: 42, column: 9, scope: !6563)
!6565 = !DILocation(line: 42, column: 25, scope: !6563)
!6566 = !DILocation(line: 42, column: 9, scope: !6532)
!6567 = !DILocation(line: 43, column: 24, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6563, file: !1897, line: 42, column: 34)
!6569 = !DILocation(line: 43, column: 22, scope: !6568)
!6570 = !DILocation(line: 44, column: 5, scope: !6568)
!6571 = !DILocation(line: 45, column: 1, scope: !6532)
!6572 = distinct !DISubprogram(name: "delay", linkageName: "_ZNK6Cicada4Task5delayEv", scope: !51, file: !52, line: 203, type: !73, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1896, declaration: !72, retainedNodes: !6573)
!6573 = !{!6574}
!6574 = !DILocalVariable(name: "this", arg: 1, scope: !6572, type: !6575, flags: DIFlagArtificial | DIFlagObjectPointer)
!6575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !76, size: 32)
!6576 = !DILocation(line: 0, scope: !6572)
!6577 = !DILocation(line: 205, column: 16, scope: !6572)
!6578 = !DILocation(line: 205, column: 9, scope: !6572)
!6579 = distinct !DISubprogram(name: "lastRun", linkageName: "_ZN6Cicada4Task7lastRunEv", scope: !51, file: !52, line: 222, type: !79, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1896, declaration: !78, retainedNodes: !6580)
!6580 = !{!6581}
!6581 = !DILocalVariable(name: "this", arg: 1, scope: !6579, type: !1908, flags: DIFlagArtificial | DIFlagObjectPointer)
!6582 = !DILocation(line: 0, scope: !6579)
!6583 = !DILocation(line: 224, column: 16, scope: !6579)
!6584 = !DILocation(line: 224, column: 9, scope: !6579)
!6585 = distinct !DISubprogram(name: "setLastRun", linkageName: "_ZN6Cicada4Task10setLastRunEj", scope: !51, file: !52, line: 230, type: !82, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1896, declaration: !81, retainedNodes: !6586)
!6586 = !{!6587, !6588}
!6587 = !DILocalVariable(name: "this", arg: 1, scope: !6585, type: !1908, flags: DIFlagArtificial | DIFlagObjectPointer)
!6588 = !DILocalVariable(name: "time", arg: 2, scope: !6585, file: !52, line: 230, type: !24)
!6589 = !DILocation(line: 0, scope: !6585)
!6590 = !DILocation(line: 232, column: 9, scope: !6585)
!6591 = !DILocation(line: 232, column: 18, scope: !6585)
!6592 = !DILocation(line: 233, column: 5, scope: !6585)
!6593 = distinct !DISubprogram(name: "start", linkageName: "_ZN6Cicada9Scheduler5startEv", scope: !1899, file: !1897, line: 47, type: !1915, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1896, declaration: !1917, retainedNodes: !6594)
!6594 = !{!6595}
!6595 = !DILocalVariable(name: "this", arg: 1, scope: !6593, type: !6520, flags: DIFlagArtificial | DIFlagObjectPointer)
!6596 = !DILocation(line: 0, scope: !6593)
!6597 = !DILocation(line: 49, column: 5, scope: !6593)
!6598 = !DILocation(line: 50, column: 9, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6600, file: !1897, line: 49, column: 5)
!6600 = distinct !DILexicalBlock(scope: !6593, file: !1897, line: 49, column: 5)
!6601 = !DILocation(line: 49, column: 5, scope: !6599)
!6602 = distinct !{!6602, !6603, !6604, !2694, !2695}
!6603 = !DILocation(line: 49, column: 5, scope: !6600)
!6604 = !DILocation(line: 50, column: 17, scope: !6600)
!6605 = distinct !DISubprogram(name: "eTickFunction", linkageName: "_Z13eTickFunctionv", scope: !1921, file: !1921, line: 27, type: !1904, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1920, retainedNodes: !121)
!6606 = !DILocation(line: 29, column: 12, scope: !6605)
!6607 = !DILocation(line: 29, column: 5, scope: !6605)
!6608 = distinct !DISubprogram(name: "~Stm32Uart", linkageName: "_ZN6Cicada9Stm32UartD2Ev", scope: !818, file: !720, line: 73, type: !878, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, declaration: !877, retainedNodes: !6609)
!6609 = !{!6610}
!6610 = !DILocalVariable(name: "this", arg: 1, scope: !6608, type: !825, flags: DIFlagArtificial | DIFlagObjectPointer)
!6611 = !DILocation(line: 0, scope: !6608)
!6612 = !DILocation(line: 74, column: 1, scope: !6608)
!6613 = !DILocation(line: 75, column: 9, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6615, file: !720, line: 75, column: 9)
!6615 = distinct !DILexicalBlock(scope: !6608, file: !720, line: 74, column: 1)
!6616 = !{!6617, !2478, i64 104}
!6617 = !{!"_ZTSN6Cicada9Stm32UartE", !2478, i64 104, !6618, i64 108, !2477, i64 180, !2609, i64 184, !2609, i64 186, !6622, i64 188}
!6618 = !{!"_ZTS20__UART_HandleTypeDef", !2477, i64 0, !6619, i64 4, !2477, i64 32, !2609, i64 36, !2609, i64 38, !2477, i64 40, !2609, i64 44, !2609, i64 46, !2477, i64 48, !2477, i64 52, !6620, i64 56, !6621, i64 60, !6621, i64 64, !2525, i64 68}
!6619 = !{!"_ZTS16UART_InitTypeDef", !2525, i64 0, !2525, i64 4, !2525, i64 8, !2525, i64 12, !2525, i64 16, !2525, i64 20, !2525, i64 24}
!6620 = !{!"_ZTS15HAL_LockTypeDef", !2478, i64 0}
!6621 = !{!"_ZTS21HAL_UART_StateTypeDef", !2478, i64 0}
!6622 = !{!"_ZTS9IRQn_Type", !2478, i64 0}
!6623 = !DILocation(line: 75, column: 16, scope: !6614)
!6624 = !DILocation(line: 75, column: 9, scope: !6615)
!6625 = !DILocation(line: 76, column: 9, scope: !6614)
!6626 = !DILocation(line: 77, column: 1, scope: !6615)
!6627 = !DILocation(line: 77, column: 1, scope: !6608)
!6628 = distinct !DISubprogram(name: "~Stm32Uart", linkageName: "_ZN6Cicada9Stm32UartD0Ev", scope: !818, file: !720, line: 73, type: !878, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, declaration: !877, retainedNodes: !6629)
!6629 = !{!6630}
!6630 = !DILocalVariable(name: "this", arg: 1, scope: !6628, type: !825, flags: DIFlagArtificial | DIFlagObjectPointer)
!6631 = !DILocation(line: 0, scope: !6628)
!6632 = !DILocation(line: 74, column: 1, scope: !6628)
!6633 = !DILocation(line: 77, column: 1, scope: !6628)
!6634 = distinct !DISubprogram(name: "writeBufferProcessed", linkageName: "_ZNK6Cicada9Stm32Uart20writeBufferProcessedEv", scope: !818, file: !720, line: 251, type: !906, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, declaration: !905, retainedNodes: !6635)
!6635 = !{!6636}
!6636 = !DILocalVariable(name: "this", arg: 1, scope: !6634, type: !6637, flags: DIFlagArtificial | DIFlagObjectPointer)
!6637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 32)
!6638 = !DILocation(line: 0, scope: !6634)
!6639 = !DILocation(line: 253, column: 12, scope: !6634)
!6640 = !DILocation(line: 253, column: 25, scope: !6634)
!6641 = !DILocation(line: 253, column: 42, scope: !6634)
!6642 = !DILocation(line: 253, column: 47, scope: !6634)
!6643 = !DILocation(line: 253, column: 50, scope: !6634)
!6644 = !{!6617, !2477, i64 108}
!6645 = !{!6646, !2525, i64 0}
!6646 = !{!"_ZTS13USART_TypeDef", !2525, i64 0, !2525, i64 4, !2525, i64 8, !2525, i64 12, !2525, i64 16, !2525, i64 20, !2525, i64 24}
!6647 = !DILocation(line: 253, column: 5, scope: !6634)
!6648 = distinct !DISubprogram(name: "open", linkageName: "_ZN6Cicada9Stm32Uart4openEv", scope: !818, file: !720, line: 112, type: !884, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, declaration: !883, retainedNodes: !6649)
!6649 = !{!6650}
!6650 = !DILocalVariable(name: "this", arg: 1, scope: !6648, type: !825, flags: DIFlagArtificial | DIFlagObjectPointer)
!6651 = !DILocation(line: 0, scope: !6648)
!6652 = !DILocation(line: 114, column: 12, scope: !6648)
!6653 = !DILocation(line: 114, column: 5, scope: !6648)
!6654 = distinct !DISubprogram(name: "open", linkageName: "_ZN6Cicada9Stm32Uart4openEh", scope: !818, file: !720, line: 117, type: !887, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, declaration: !886, retainedNodes: !6655)
!6655 = !{!6656, !6657, !6658, !6662, !6664, !6668, !6672, !6676, !6680, !6684, !6688, !6692}
!6656 = !DILocalVariable(name: "this", arg: 1, scope: !6654, type: !825, flags: DIFlagArtificial | DIFlagObjectPointer)
!6657 = !DILocalVariable(name: "priority", arg: 2, scope: !6654, file: !720, line: 117, type: !45)
!6658 = !DILocalVariable(name: "tmpreg", scope: !6659, file: !720, line: 121, type: !24)
!6659 = distinct !DILexicalBlock(scope: !6660, file: !720, line: 121, column: 9)
!6660 = distinct !DILexicalBlock(scope: !6661, file: !720, line: 120, column: 37)
!6661 = distinct !DILexicalBlock(scope: !6654, file: !720, line: 120, column: 9)
!6662 = !DILocalVariable(name: "tmpreg", scope: !6663, file: !720, line: 122, type: !23)
!6663 = distinct !DILexicalBlock(scope: !6660, file: !720, line: 122, column: 9)
!6664 = !DILocalVariable(name: "tmpreg", scope: !6665, file: !720, line: 125, type: !23)
!6665 = distinct !DILexicalBlock(scope: !6666, file: !720, line: 125, column: 9)
!6666 = distinct !DILexicalBlock(scope: !6667, file: !720, line: 124, column: 44)
!6667 = distinct !DILexicalBlock(scope: !6661, file: !720, line: 124, column: 16)
!6668 = !DILocalVariable(name: "tmpreg", scope: !6669, file: !720, line: 128, type: !23)
!6669 = distinct !DILexicalBlock(scope: !6670, file: !720, line: 128, column: 9)
!6670 = distinct !DILexicalBlock(scope: !6671, file: !720, line: 127, column: 44)
!6671 = distinct !DILexicalBlock(scope: !6667, file: !720, line: 127, column: 16)
!6672 = !DILocalVariable(name: "tmpreg", scope: !6673, file: !720, line: 146, type: !23)
!6673 = distinct !DILexicalBlock(scope: !6674, file: !720, line: 146, column: 9)
!6674 = distinct !DILexicalBlock(scope: !6675, file: !720, line: 145, column: 29)
!6675 = distinct !DILexicalBlock(scope: !6654, file: !720, line: 145, column: 9)
!6676 = !DILocalVariable(name: "tmpreg", scope: !6677, file: !720, line: 148, type: !23)
!6677 = distinct !DILexicalBlock(scope: !6678, file: !720, line: 148, column: 9)
!6678 = distinct !DILexicalBlock(scope: !6679, file: !720, line: 147, column: 36)
!6679 = distinct !DILexicalBlock(scope: !6675, file: !720, line: 147, column: 16)
!6680 = !DILocalVariable(name: "tmpreg", scope: !6681, file: !720, line: 150, type: !23)
!6681 = distinct !DILexicalBlock(scope: !6682, file: !720, line: 150, column: 9)
!6682 = distinct !DILexicalBlock(scope: !6683, file: !720, line: 149, column: 36)
!6683 = distinct !DILexicalBlock(scope: !6679, file: !720, line: 149, column: 16)
!6684 = !DILocalVariable(name: "tmpreg", scope: !6685, file: !720, line: 152, type: !23)
!6685 = distinct !DILexicalBlock(scope: !6686, file: !720, line: 152, column: 9)
!6686 = distinct !DILexicalBlock(scope: !6687, file: !720, line: 151, column: 36)
!6687 = distinct !DILexicalBlock(scope: !6683, file: !720, line: 151, column: 16)
!6688 = !DILocalVariable(name: "tmpreg", scope: !6689, file: !720, line: 154, type: !23)
!6689 = distinct !DILexicalBlock(scope: !6690, file: !720, line: 154, column: 9)
!6690 = distinct !DILexicalBlock(scope: !6691, file: !720, line: 153, column: 36)
!6691 = distinct !DILexicalBlock(scope: !6687, file: !720, line: 153, column: 16)
!6692 = !DILocalVariable(name: "gpio", scope: !6654, file: !720, line: 166, type: !6693)
!6693 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !1542, line: 60, baseType: !6694)
!6694 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1542, line: 47, size: 128, flags: DIFlagTypePassByValue, elements: !6695, identifier: "_ZTS16GPIO_InitTypeDef")
!6695 = !{!6696, !6697, !6698, !6699}
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !6694, file: !1542, line: 49, baseType: !24, size: 32)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !6694, file: !1542, line: 52, baseType: !24, size: 32, offset: 32)
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !6694, file: !1542, line: 55, baseType: !24, size: 32, offset: 64)
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !6694, file: !1542, line: 58, baseType: !24, size: 32, offset: 96)
!6700 = !DILocation(line: 0, scope: !6654)
!6701 = !DILocation(line: 120, column: 9, scope: !6661)
!6702 = !DILocation(line: 120, column: 17, scope: !6661)
!6703 = !DILocation(line: 120, column: 9, scope: !6654)
!6704 = !DILocation(line: 121, column: 9, scope: !6659)
!6705 = !{!6706, !2525, i64 4}
!6706 = !{!"_ZTS12AFIO_TypeDef", !2525, i64 0, !2525, i64 4, !2478, i64 8, !2525, i64 24, !2525, i64 28}
!6707 = !DILocation(line: 0, scope: !6659)
!6708 = !DILocation(line: 122, column: 9, scope: !6663)
!6709 = !{!6710, !2525, i64 24}
!6710 = !{!"_ZTS11RCC_TypeDef", !2525, i64 0, !2525, i64 4, !2525, i64 8, !2525, i64 12, !2525, i64 16, !2525, i64 20, !2525, i64 24, !2525, i64 28, !2525, i64 32, !2525, i64 36}
!6711 = !DILocation(line: 122, column: 9, scope: !6660)
!6712 = !DILocation(line: 124, column: 5, scope: !6660)
!6713 = !DILocation(line: 125, column: 9, scope: !6665)
!6714 = !{!6710, !2525, i64 28}
!6715 = !DILocation(line: 125, column: 9, scope: !6666)
!6716 = !DILocation(line: 127, column: 5, scope: !6666)
!6717 = !DILocation(line: 128, column: 9, scope: !6669)
!6718 = !DILocation(line: 128, column: 9, scope: !6670)
!6719 = !DILocation(line: 0, scope: !6661)
!6720 = !{!6617, !6622, i64 188}
!6721 = !DILocation(line: 145, column: 9, scope: !6675)
!6722 = !{!6617, !2477, i64 180}
!6723 = !DILocation(line: 145, column: 9, scope: !6654)
!6724 = !DILocation(line: 146, column: 9, scope: !6673)
!6725 = !DILocation(line: 146, column: 9, scope: !6674)
!6726 = !DILocation(line: 147, column: 5, scope: !6674)
!6727 = !DILocation(line: 148, column: 9, scope: !6677)
!6728 = !DILocation(line: 148, column: 9, scope: !6678)
!6729 = !DILocation(line: 149, column: 5, scope: !6678)
!6730 = !DILocation(line: 150, column: 9, scope: !6681)
!6731 = !DILocation(line: 150, column: 9, scope: !6682)
!6732 = !DILocation(line: 151, column: 5, scope: !6682)
!6733 = !DILocation(line: 152, column: 9, scope: !6685)
!6734 = !DILocation(line: 152, column: 9, scope: !6686)
!6735 = !DILocation(line: 153, column: 5, scope: !6686)
!6736 = !DILocation(line: 154, column: 9, scope: !6689)
!6737 = !DILocation(line: 154, column: 9, scope: !6690)
!6738 = !DILocation(line: 163, column: 5, scope: !6690)
!6739 = !DILocation(line: 166, column: 5, scope: !6654)
!6740 = !DILocation(line: 166, column: 22, scope: !6654)
!6741 = !DILocation(line: 167, column: 16, scope: !6654)
!6742 = !{!6617, !2609, i64 184}
!6743 = !DILocation(line: 167, column: 10, scope: !6654)
!6744 = !DILocation(line: 167, column: 14, scope: !6654)
!6745 = !{!6746, !2525, i64 0}
!6746 = !{!"_ZTS16GPIO_InitTypeDef", !2525, i64 0, !2525, i64 4, !2525, i64 8, !2525, i64 12}
!6747 = !DILocation(line: 168, column: 10, scope: !6654)
!6748 = !DILocation(line: 168, column: 15, scope: !6654)
!6749 = !{!6746, !2525, i64 4}
!6750 = !DILocation(line: 169, column: 10, scope: !6654)
!6751 = !DILocation(line: 169, column: 15, scope: !6654)
!6752 = !{!6746, !2525, i64 8}
!6753 = !DILocation(line: 170, column: 10, scope: !6654)
!6754 = !DILocation(line: 170, column: 16, scope: !6654)
!6755 = !{!6746, !2525, i64 12}
!6756 = !DILocation(line: 171, column: 5, scope: !6654)
!6757 = !DILocation(line: 173, column: 16, scope: !6654)
!6758 = !{!6617, !2609, i64 186}
!6759 = !DILocation(line: 173, column: 14, scope: !6654)
!6760 = !DILocation(line: 174, column: 15, scope: !6654)
!6761 = !DILocation(line: 175, column: 19, scope: !6654)
!6762 = !DILocation(line: 175, column: 5, scope: !6654)
!6763 = !DILocation(line: 178, column: 18, scope: !6654)
!6764 = !DILocation(line: 178, column: 27, scope: !6654)
!6765 = !{!6617, !2525, i64 120}
!6766 = !DILocation(line: 179, column: 18, scope: !6654)
!6767 = !DILocation(line: 179, column: 25, scope: !6654)
!6768 = !{!6617, !2525, i64 124}
!6769 = !DILocation(line: 180, column: 18, scope: !6654)
!6770 = !DILocation(line: 180, column: 23, scope: !6654)
!6771 = !{!6617, !2525, i64 128}
!6772 = !DILocation(line: 181, column: 18, scope: !6654)
!6773 = !DILocation(line: 181, column: 28, scope: !6654)
!6774 = !{!6617, !2525, i64 132}
!6775 = !DILocation(line: 182, column: 18, scope: !6654)
!6776 = !DILocation(line: 182, column: 31, scope: !6654)
!6777 = !{!6617, !2525, i64 136}
!6778 = !DILocation(line: 184, column: 9, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6654, file: !720, line: 184, column: 9)
!6780 = !DILocation(line: 184, column: 33, scope: !6779)
!6781 = !DILocation(line: 184, column: 9, scope: !6654)
!6782 = !DILocation(line: 188, column: 22, scope: !6654)
!6783 = !DILocation(line: 188, column: 46, scope: !6654)
!6784 = !DILocation(line: 188, column: 5, scope: !6654)
!6785 = !DILocation(line: 189, column: 20, scope: !6654)
!6786 = !DILocation(line: 189, column: 5, scope: !6654)
!6787 = !DILocation(line: 190, column: 5, scope: !6654)
!6788 = !{!6646, !2525, i64 12}
!6789 = !DILocation(line: 192, column: 5, scope: !6654)
!6790 = !DILocation(line: 192, column: 12, scope: !6654)
!6791 = !DILocation(line: 194, column: 5, scope: !6654)
!6792 = !DILocation(line: 195, column: 1, scope: !6654)
!6793 = distinct !DISubprogram(name: "isOpen", linkageName: "_ZN6Cicada9Stm32Uart6isOpenEv", scope: !818, file: !720, line: 207, type: !884, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, declaration: !889, retainedNodes: !6794)
!6794 = !{!6795}
!6795 = !DILocalVariable(name: "this", arg: 1, scope: !6793, type: !825, flags: DIFlagArtificial | DIFlagObjectPointer)
!6796 = !DILocation(line: 0, scope: !6793)
!6797 = !DILocation(line: 209, column: 12, scope: !6793)
!6798 = !DILocation(line: 209, column: 19, scope: !6793)
!6799 = !DILocation(line: 209, column: 5, scope: !6793)
!6800 = distinct !DISubprogram(name: "setSerialConfig", linkageName: "_ZN6Cicada9Stm32Uart15setSerialConfigEjh", scope: !818, file: !720, line: 91, type: !891, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, declaration: !890, retainedNodes: !6801)
!6801 = !{!6802, !6803, !6804}
!6802 = !DILocalVariable(name: "this", arg: 1, scope: !6800, type: !825, flags: DIFlagArtificial | DIFlagObjectPointer)
!6803 = !DILocalVariable(name: "baudRate", arg: 2, scope: !6800, file: !720, line: 91, type: !24)
!6804 = !DILocalVariable(name: "dataBits", arg: 3, scope: !6800, file: !720, line: 91, type: !45)
!6805 = !DILocation(line: 0, scope: !6800)
!6806 = !DILocation(line: 93, column: 23, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6800, file: !720, line: 93, column: 9)
!6808 = !DILocation(line: 96, column: 18, scope: !6800)
!6809 = !DILocation(line: 96, column: 27, scope: !6800)
!6810 = !{!6617, !2525, i64 112}
!6811 = !DILocation(line: 98, column: 5, scope: !6800)
!6812 = !DILocation(line: 104, column: 9, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6800, file: !720, line: 98, column: 23)
!6814 = !DILocation(line: 0, scope: !6813)
!6815 = !{!6617, !2525, i64 116}
!6816 = !DILocation(line: 110, column: 1, scope: !6800)
!6817 = distinct !DISubprogram(name: "close", linkageName: "_ZN6Cicada9Stm32Uart5closeEv", scope: !818, file: !720, line: 197, type: !878, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, declaration: !893, retainedNodes: !6818)
!6818 = !{!6819}
!6819 = !DILocalVariable(name: "this", arg: 1, scope: !6817, type: !825, flags: DIFlagArtificial | DIFlagObjectPointer)
!6820 = !DILocation(line: 0, scope: !6817)
!6821 = !DILocation(line: 199, column: 21, scope: !6817)
!6822 = !DILocation(line: 199, column: 5, scope: !6817)
!6823 = !DILocation(line: 200, column: 22, scope: !6817)
!6824 = !DILocation(line: 200, column: 5, scope: !6817)
!6825 = !DILocation(line: 201, column: 21, scope: !6817)
!6826 = !DILocation(line: 201, column: 32, scope: !6817)
!6827 = !DILocation(line: 201, column: 5, scope: !6817)
!6828 = !DILocation(line: 202, column: 21, scope: !6817)
!6829 = !DILocation(line: 202, column: 32, scope: !6817)
!6830 = !DILocation(line: 202, column: 5, scope: !6817)
!6831 = !DILocation(line: 204, column: 5, scope: !6817)
!6832 = !DILocation(line: 204, column: 12, scope: !6817)
!6833 = !DILocation(line: 205, column: 1, scope: !6817)
!6834 = distinct !DISubprogram(name: "portName", linkageName: "_ZNK6Cicada9Stm32Uart8portNameEv", scope: !818, file: !720, line: 212, type: !895, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, declaration: !894, retainedNodes: !6835)
!6835 = !{!6836}
!6836 = !DILocalVariable(name: "this", arg: 1, scope: !6834, type: !6637, flags: DIFlagArtificial | DIFlagObjectPointer)
!6837 = !DILocation(line: 0, scope: !6834)
!6838 = !DILocation(line: 214, column: 5, scope: !6834)
!6839 = distinct !DISubprogram(name: "rawRead", linkageName: "_ZN6Cicada9Stm32Uart7rawReadERh", scope: !818, file: !720, line: 217, type: !900, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, declaration: !899, retainedNodes: !6840)
!6840 = !{!6841, !6842}
!6841 = !DILocalVariable(name: "this", arg: 1, scope: !6839, type: !825, flags: DIFlagArtificial | DIFlagObjectPointer)
!6842 = !DILocalVariable(name: "data", arg: 2, scope: !6839, file: !720, line: 217, type: !902)
!6843 = !DILocation(line: 0, scope: !6839)
!6844 = !DILocation(line: 219, column: 9, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6839, file: !720, line: 219, column: 9)
!6846 = !DILocation(line: 219, column: 55, scope: !6845)
!6847 = !DILocation(line: 220, column: 9, scope: !6845)
!6848 = !DILocation(line: 219, column: 9, scope: !6839)
!6849 = !DILocation(line: 221, column: 25, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6845, file: !720, line: 220, column: 55)
!6851 = !{!6646, !2525, i64 4}
!6852 = !DILocation(line: 221, column: 14, scope: !6850)
!6853 = !DILocation(line: 222, column: 9, scope: !6850)
!6854 = !DILocation(line: 226, column: 1, scope: !6839)
!6855 = distinct !DISubprogram(name: "rawWrite", linkageName: "_ZN6Cicada9Stm32Uart8rawWriteEh", scope: !818, file: !720, line: 228, type: !887, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, declaration: !903, retainedNodes: !6856)
!6856 = !{!6857, !6858}
!6857 = !DILocalVariable(name: "this", arg: 1, scope: !6855, type: !825, flags: DIFlagArtificial | DIFlagObjectPointer)
!6858 = !DILocalVariable(name: "data", arg: 2, scope: !6855, file: !720, line: 228, type: !45)
!6859 = !DILocation(line: 0, scope: !6855)
!6860 = !DILocation(line: 230, column: 9, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6855, file: !720, line: 230, column: 9)
!6862 = !DILocation(line: 230, column: 9, scope: !6855)
!6863 = !DILocation(line: 231, column: 9, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6861, file: !720, line: 230, column: 55)
!6865 = !DILocation(line: 232, column: 9, scope: !6864)
!6866 = !DILocation(line: 236, column: 1, scope: !6855)
!6867 = distinct !DISubprogram(name: "startTransmit", linkageName: "_ZN6Cicada9Stm32Uart13startTransmitEv", scope: !818, file: !720, line: 238, type: !878, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, declaration: !904, retainedNodes: !6868)
!6868 = !{!6869}
!6869 = !DILocalVariable(name: "this", arg: 1, scope: !6867, type: !825, flags: DIFlagArtificial | DIFlagObjectPointer)
!6870 = !DILocation(line: 0, scope: !6867)
!6871 = !DILocation(line: 240, column: 5, scope: !6867)
!6872 = !DILocation(line: 241, column: 1, scope: !6867)
!6873 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32UartD1Ev", scope: !720, file: !720, line: 73, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !121)
!6874 = !DILocation(line: 0, scope: !6873)
!6875 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32UartD0Ev", scope: !720, file: !720, line: 73, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !121)
!6876 = !DILocation(line: 0, scope: !6875)
!6877 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart4openEv", scope: !720, file: !720, line: 112, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !121)
!6878 = !DILocation(line: 0, scope: !6877)
!6879 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart6isOpenEv", scope: !720, file: !720, line: 207, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !121)
!6880 = !DILocation(line: 0, scope: !6879)
!6881 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart15setSerialConfigEjh", scope: !720, file: !720, line: 91, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !121)
!6882 = !DILocation(line: 0, scope: !6881)
!6883 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart5closeEv", scope: !720, file: !720, line: 197, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !121)
!6884 = !DILocation(line: 0, scope: !6883)
!6885 = distinct !DISubprogram(linkageName: "_ZThn4_NK6Cicada9Stm32Uart8portNameEv", scope: !720, file: !720, line: 212, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !121)
!6886 = !DILocation(line: 0, scope: !6885)
!6887 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart7rawReadERh", scope: !720, file: !720, line: 217, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !121)
!6888 = !DILocation(line: 0, scope: !6887)
!6889 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart8rawWriteEh", scope: !720, file: !720, line: 228, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !121)
!6890 = !DILocation(line: 0, scope: !6889)
!6891 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart13startTransmitEv", scope: !720, file: !720, line: 238, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !121)
!6892 = !DILocation(line: 0, scope: !6891)
!6893 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", linkageName: "_ZL17__NVIC_DisableIRQ9IRQn_Type", scope: !545, file: !545, line: 1547, type: !6894, scopeLine: 1548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !6896)
!6894 = !DISubroutineType(types: !6895)
!6895 = !{null, !867}
!6896 = !{!6897}
!6897 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6893, file: !545, line: 1547, type: !867)
!6898 = !DILocation(line: 0, scope: !6893)
!6899 = !DILocation(line: 1549, column: 23, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6893, file: !545, line: 1549, column: 7)
!6901 = !DILocation(line: 1549, column: 7, scope: !6893)
!6902 = !DILocation(line: 1551, column: 81, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6900, file: !545, line: 1550, column: 3)
!6904 = !DILocation(line: 1551, column: 60, scope: !6903)
!6905 = !DILocation(line: 1551, column: 34, scope: !6903)
!6906 = !DILocation(line: 1551, column: 5, scope: !6903)
!6907 = !DILocation(line: 1551, column: 43, scope: !6903)
!6908 = !DILocation(line: 879, column: 3, scope: !6909, inlinedAt: !6910)
!6909 = distinct !DISubprogram(name: "__DSB", linkageName: "_ZL5__DSBv", scope: !4794, file: !4794, line: 877, type: !4, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !121)
!6910 = distinct !DILocation(line: 1552, column: 5, scope: !6903)
!6911 = !{i64 1321711}
!6912 = !DILocation(line: 868, column: 3, scope: !6913, inlinedAt: !6914)
!6913 = distinct !DISubprogram(name: "__ISB", linkageName: "_ZL5__ISBv", scope: !4794, file: !4794, line: 866, type: !4, scopeLine: 867, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !121)
!6914 = distinct !DILocation(line: 1553, column: 5, scope: !6903)
!6915 = !{i64 1321417}
!6916 = !DILocation(line: 1554, column: 3, scope: !6903)
!6917 = !DILocation(line: 1555, column: 1, scope: !6893)
!6918 = distinct !DISubprogram(name: "__NVIC_SetPriority", linkageName: "_ZL18__NVIC_SetPriority9IRQn_Typej", scope: !545, file: !545, line: 1639, type: !6919, scopeLine: 1640, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !6921)
!6919 = !DISubroutineType(types: !6920)
!6920 = !{null, !867, !24}
!6921 = !{!6922, !6923}
!6922 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6918, file: !545, line: 1639, type: !867)
!6923 = !DILocalVariable(name: "priority", arg: 2, scope: !6918, file: !545, line: 1639, type: !24)
!6924 = !DILocation(line: 0, scope: !6918)
!6925 = !DILocation(line: 0, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6918, file: !545, line: 1641, column: 7)
!6927 = !DILocation(line: 1641, column: 7, scope: !6918)
!6928 = !DILocation(line: 1649, column: 1, scope: !6918)
!6929 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", linkageName: "_ZL16__NVIC_EnableIRQ9IRQn_Type", scope: !545, file: !545, line: 1511, type: !6894, scopeLine: 1512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !719, retainedNodes: !6930)
!6930 = !{!6931}
!6931 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6929, file: !545, line: 1511, type: !867)
!6932 = !DILocation(line: 0, scope: !6929)
!6933 = !DILocation(line: 1513, column: 23, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6929, file: !545, line: 1513, column: 7)
!6935 = !DILocation(line: 1513, column: 7, scope: !6929)
!6936 = !DILocation(line: 1515, column: 81, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6934, file: !545, line: 1514, column: 3)
!6938 = !DILocation(line: 1515, column: 60, scope: !6937)
!6939 = !DILocation(line: 1515, column: 34, scope: !6937)
!6940 = !DILocation(line: 1515, column: 5, scope: !6937)
!6941 = !DILocation(line: 1515, column: 43, scope: !6937)
!6942 = !DILocation(line: 1516, column: 3, scope: !6937)
!6943 = !DILocation(line: 1517, column: 1, scope: !6929)
!6944 = distinct !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv", scope: !2192, file: !1631, line: 174, type: !2227, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, declaration: !2226, retainedNodes: !6945)
!6945 = !{!6946}
!6946 = !DILocalVariable(name: "this", arg: 1, scope: !6944, type: !6947, flags: DIFlagArtificial | DIFlagObjectPointer)
!6947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 32)
!6948 = !DILocation(line: 0, scope: !6944)
!6949 = !DILocation(line: 176, column: 16, scope: !6944)
!6950 = !{!6951, !5292, i64 24}
!6951 = !{!"_ZTSN6Cicada14CircularBufferIcEE", !5292, i64 8, !5292, i64 16, !5292, i64 24, !5292, i64 32, !2477, i64 40}
!6952 = !DILocation(line: 176, column: 9, scope: !6944)
!6953 = distinct !DISubprogram(name: "~BufferedSerial", linkageName: "_ZN6Cicada14BufferedSerialD2Ev", scope: !821, file: !822, line: 42, type: !6954, scopeLine: 42, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, declaration: !6957, retainedNodes: !6958)
!6954 = !DISubroutineType(types: !6955)
!6955 = !{null, !6956}
!6956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!6957 = !DISubprogram(name: "~BufferedSerial", scope: !821, type: !6954, containingType: !821, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!6958 = !{!6959}
!6959 = !DILocalVariable(name: "this", arg: 1, scope: !6953, type: !6960, flags: DIFlagArtificial | DIFlagObjectPointer)
!6960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 32)
!6961 = !DILocation(line: 0, scope: !6953)
!6962 = !DILocation(line: 42, column: 7, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6953, file: !822, line: 42, column: 7)
!6964 = !DILocation(line: 42, column: 7, scope: !6953)
!6965 = distinct !DISubprogram(name: "~CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIcED2Ev", scope: !2192, file: !1631, line: 56, type: !2204, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, declaration: !2203, retainedNodes: !6966)
!6966 = !{!6967}
!6967 = !DILocalVariable(name: "this", arg: 1, scope: !6965, type: !6968, flags: DIFlagArtificial | DIFlagObjectPointer)
!6968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 32)
!6969 = !DILocation(line: 0, scope: !6965)
!6970 = !DILocation(line: 57, column: 7, scope: !6965)
!6971 = distinct !DISubprogram(name: "~IBufferedSerial", linkageName: "_ZN6Cicada15IBufferedSerialD2Ev", scope: !959, file: !960, line: 42, type: !993, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, declaration: !992, retainedNodes: !6972)
!6972 = !{!6973}
!6973 = !DILocalVariable(name: "this", arg: 1, scope: !6971, type: !6974, flags: DIFlagArtificial | DIFlagObjectPointer)
!6974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 32)
!6975 = !DILocation(line: 0, scope: !6971)
!6976 = !DILocation(line: 42, column: 34, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6971, file: !960, line: 42, column: 32)
!6978 = !DILocation(line: 42, column: 34, scope: !6971)
!6979 = distinct !DISubprogram(name: "~ISerial", linkageName: "_ZN6Cicada7ISerialD2Ev", scope: !964, file: !965, line: 40, type: !969, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, declaration: !968, retainedNodes: !6980)
!6980 = !{!6981}
!6981 = !DILocalVariable(name: "this", arg: 1, scope: !6979, type: !6982, flags: DIFlagArtificial | DIFlagObjectPointer)
!6982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 32)
!6983 = !DILocation(line: 0, scope: !6979)
!6984 = !DILocation(line: 40, column: 26, scope: !6979)
!6985 = distinct !DISubprogram(name: "Stm32Uart", linkageName: "_ZN6Cicada9Stm32UartC2EPcS1_yyP13USART_TypeDefP12GPIO_TypeDeftt", scope: !818, file: !720, line: 34, type: !875, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, declaration: !874, retainedNodes: !6986)
!6986 = !{!6987, !6988, !6989, !6990, !6991, !6992, !6993, !6994, !6995}
!6987 = !DILocalVariable(name: "this", arg: 1, scope: !6985, type: !825, flags: DIFlagArtificial | DIFlagObjectPointer)
!6988 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !6985, file: !720, line: 34, type: !308)
!6989 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !6985, file: !720, line: 34, type: !308)
!6990 = !DILocalVariable(name: "readBufferSize", arg: 4, scope: !6985, file: !720, line: 34, type: !872)
!6991 = !DILocalVariable(name: "writeBufferSize", arg: 5, scope: !6985, file: !720, line: 34, type: !872)
!6992 = !DILocalVariable(name: "uartInstance", arg: 6, scope: !6985, file: !720, line: 35, type: !17)
!6993 = !DILocalVariable(name: "uartPort", arg: 7, scope: !6985, file: !720, line: 35, type: !34)
!6994 = !DILocalVariable(name: "txPin", arg: 8, scope: !6985, file: !720, line: 35, type: !37)
!6995 = !DILocalVariable(name: "rxPin", arg: 9, scope: !6985, file: !720, line: 35, type: !37)
!6996 = !DILocation(line: 0, scope: !6985)
!6997 = !DILocation(line: 43, column: 1, scope: !6985)
!6998 = !DILocation(line: 36, column: 5, scope: !6985)
!6999 = !DILocation(line: 37, column: 5, scope: !6985)
!7000 = !DILocation(line: 38, column: 5, scope: !6985)
!7001 = !DILocation(line: 39, column: 5, scope: !6985)
!7002 = !DILocation(line: 40, column: 5, scope: !6985)
!7003 = !DILocation(line: 41, column: 5, scope: !6985)
!7004 = !DILocation(line: 42, column: 5, scope: !6985)
!7005 = !DILocation(line: 44, column: 5, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !6985, file: !720, line: 43, column: 1)
!7007 = !DILocation(line: 45, column: 1, scope: !6985)
!7008 = distinct !DISubprogram(name: "init", linkageName: "_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef", scope: !818, file: !720, line: 59, type: !918, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, declaration: !917, retainedNodes: !7009)
!7009 = !{!7010, !7011, !7012}
!7010 = !DILocalVariable(name: "this", arg: 1, scope: !7008, type: !825, flags: DIFlagArtificial | DIFlagObjectPointer)
!7011 = !DILocalVariable(name: "uartInstance", arg: 2, scope: !7008, file: !720, line: 59, type: !17)
!7012 = !DILocalVariable(name: "i", scope: !7013, file: !720, line: 65, type: !59)
!7013 = distinct !DILexicalBlock(scope: !7008, file: !720, line: 65, column: 5)
!7014 = !DILocation(line: 0, scope: !7008)
!7015 = !DILocation(line: 61, column: 13, scope: !7008)
!7016 = !DILocation(line: 61, column: 22, scope: !7008)
!7017 = !DILocation(line: 62, column: 18, scope: !7008)
!7018 = !DILocation(line: 62, column: 27, scope: !7008)
!7019 = !DILocation(line: 63, column: 18, scope: !7008)
!7020 = !DILocation(line: 63, column: 29, scope: !7008)
!7021 = !DILocation(line: 0, scope: !7013)
!7022 = !DILocation(line: 65, column: 5, scope: !7013)
!7023 = !DILocation(line: 65, column: 52, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7013, file: !720, line: 65, column: 5)
!7025 = !DILocation(line: 65, column: 23, scope: !7024)
!7026 = distinct !{!7026, !7022, !7027, !2694, !2695}
!7027 = !DILocation(line: 70, column: 5, scope: !7013)
!7028 = !DILocation(line: 66, column: 13, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7030, file: !720, line: 66, column: 13)
!7030 = distinct !DILexicalBlock(scope: !7024, file: !720, line: 65, column: 56)
!7031 = !DILocation(line: 66, column: 25, scope: !7029)
!7032 = !DILocation(line: 66, column: 13, scope: !7030)
!7033 = !DILocation(line: 67, column: 25, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7029, file: !720, line: 66, column: 34)
!7035 = !DILocation(line: 68, column: 13, scope: !7034)
!7036 = !DILocation(line: 71, column: 1, scope: !7008)
!7037 = distinct !DISubprogram(name: "Stm32Uart", linkageName: "_ZN6Cicada9Stm32UartC2EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt", scope: !818, file: !720, line: 46, type: !869, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, declaration: !868, retainedNodes: !7038)
!7038 = !{!7039, !7040, !7041, !7042, !7043, !7044, !7045, !7046}
!7039 = !DILocalVariable(name: "this", arg: 1, scope: !7037, type: !825, flags: DIFlagArtificial | DIFlagObjectPointer)
!7040 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !7037, file: !720, line: 46, type: !308)
!7041 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !7037, file: !720, line: 46, type: !308)
!7042 = !DILocalVariable(name: "bufferSize", arg: 4, scope: !7037, file: !720, line: 46, type: !872)
!7043 = !DILocalVariable(name: "uartInstance", arg: 5, scope: !7037, file: !720, line: 47, type: !17)
!7044 = !DILocalVariable(name: "uartPort", arg: 6, scope: !7037, file: !720, line: 47, type: !34)
!7045 = !DILocalVariable(name: "txPin", arg: 7, scope: !7037, file: !720, line: 47, type: !37)
!7046 = !DILocalVariable(name: "rxPin", arg: 8, scope: !7037, file: !720, line: 47, type: !37)
!7047 = !DILocation(line: 0, scope: !7037)
!7048 = !DILocation(line: 55, column: 1, scope: !7037)
!7049 = !DILocation(line: 48, column: 5, scope: !7037)
!7050 = !DILocation(line: 49, column: 5, scope: !7037)
!7051 = !DILocation(line: 50, column: 5, scope: !7037)
!7052 = !DILocation(line: 51, column: 5, scope: !7037)
!7053 = !DILocation(line: 52, column: 5, scope: !7037)
!7054 = !DILocation(line: 53, column: 5, scope: !7037)
!7055 = !DILocation(line: 54, column: 5, scope: !7037)
!7056 = !DILocation(line: 56, column: 5, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7037, file: !720, line: 55, column: 1)
!7058 = !DILocation(line: 57, column: 1, scope: !7037)
!7059 = distinct !DISubprogram(name: "getInstance", linkageName: "_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef", scope: !818, file: !720, line: 79, type: !881, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, declaration: !880, retainedNodes: !7060)
!7060 = !{!7061, !7062, !7064}
!7061 = !DILocalVariable(name: "uartInstance", arg: 1, scope: !7059, file: !720, line: 79, type: !17)
!7062 = !DILocalVariable(name: "i", scope: !7063, file: !720, line: 81, type: !59)
!7063 = distinct !DILexicalBlock(scope: !7059, file: !720, line: 81, column: 5)
!7064 = !DILocalVariable(name: "uart", scope: !7065, file: !720, line: 82, type: !825)
!7065 = distinct !DILexicalBlock(scope: !7066, file: !720, line: 81, column: 56)
!7066 = distinct !DILexicalBlock(scope: !7063, file: !720, line: 81, column: 5)
!7067 = !DILocation(line: 0, scope: !7059)
!7068 = !DILocation(line: 0, scope: !7063)
!7069 = !DILocation(line: 81, column: 5, scope: !7063)
!7070 = !DILocation(line: 81, column: 52, scope: !7066)
!7071 = !DILocation(line: 81, column: 23, scope: !7066)
!7072 = distinct !{!7072, !7069, !7073, !2694, !2695}
!7073 = !DILocation(line: 86, column: 5, scope: !7063)
!7074 = !DILocation(line: 82, column: 27, scope: !7065)
!7075 = !DILocation(line: 0, scope: !7065)
!7076 = !DILocation(line: 83, column: 18, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7065, file: !720, line: 83, column: 13)
!7078 = !DILocation(line: 83, column: 26, scope: !7077)
!7079 = !DILocation(line: 83, column: 43, scope: !7077)
!7080 = !DILocation(line: 83, column: 52, scope: !7077)
!7081 = !DILocation(line: 83, column: 13, scope: !7065)
!7082 = !DILocation(line: 86, column: 5, scope: !7066)
!7083 = !DILocation(line: 89, column: 1, scope: !7059)
!7084 = distinct !DISubprogram(name: "handleInterrupt", linkageName: "_ZN6Cicada9Stm32Uart15handleInterruptEv", scope: !818, file: !720, line: 243, type: !878, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !719, declaration: !908, retainedNodes: !7085)
!7085 = !{!7086}
!7086 = !DILocalVariable(name: "this", arg: 1, scope: !7084, type: !825, flags: DIFlagArtificial | DIFlagObjectPointer)
!7087 = !DILocation(line: 0, scope: !7084)
!7088 = !DILocation(line: 245, column: 5, scope: !7084)
!7089 = !DILocation(line: 247, column: 10, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7084, file: !720, line: 247, column: 9)
!7091 = !DILocation(line: 247, column: 23, scope: !7090)
!7092 = !DILocation(line: 247, column: 9, scope: !7084)
!7093 = !DILocation(line: 248, column: 9, scope: !7090)
!7094 = !DILocation(line: 249, column: 1, scope: !7084)
!7095 = distinct !DISubprogram(name: "~Sim7x00CommDevice", linkageName: "_ZN6Cicada17Sim7x00CommDeviceD0Ev", scope: !1927, file: !1844, line: 37, type: !1939, scopeLine: 37, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1923, declaration: !7096, retainedNodes: !7097)
!7096 = !DISubprogram(name: "~Sim7x00CommDevice", scope: !1927, type: !1939, containingType: !1927, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!7097 = !{!7098}
!7098 = !DILocalVariable(name: "this", arg: 1, scope: !7095, type: !7099, flags: DIFlagArtificial | DIFlagObjectPointer)
!7099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 32)
!7100 = !DILocation(line: 0, scope: !7095)
!7101 = !DILocation(line: 37, column: 7, scope: !7095)
!7102 = distinct !DISubprogram(name: "run", linkageName: "_ZN6Cicada17Sim7x00CommDevice3runEv", scope: !1927, file: !1924, line: 49, type: !1939, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1923, declaration: !1938, retainedNodes: !7103)
!7103 = !{!7104, !7105, !7109, !7110, !7116, !7118}
!7104 = !DILocalVariable(name: "this", arg: 1, scope: !7102, type: !7099, flags: DIFlagArtificial | DIFlagObjectPointer)
!7105 = !DILocalVariable(name: "str", scope: !7106, file: !1924, line: 74, type: !7108)
!7106 = distinct !DILexicalBlock(scope: !7107, file: !1924, line: 64, column: 41)
!7107 = distinct !DILexicalBlock(scope: !7102, file: !1924, line: 64, column: 9)
!7108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 80, elements: !516)
!7109 = !DILocalVariable(name: "parseLine", scope: !7102, file: !1924, line: 86, type: !63)
!7110 = !DILocalVariable(name: "str", scope: !7111, file: !1924, line: 218, type: !7113)
!7111 = distinct !DILexicalBlock(scope: !7112, file: !1924, line: 217, column: 26)
!7112 = distinct !DILexicalBlock(scope: !7102, file: !1924, line: 201, column: 25)
!7113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 184, elements: !7114)
!7114 = !{!7115}
!7115 = !DISubrange(count: 23)
!7116 = !DILocalVariable(name: "portStr", scope: !7117, file: !1924, line: 266, type: !5432)
!7117 = distinct !DILexicalBlock(scope: !7112, file: !1924, line: 265, column: 23)
!7118 = !DILocalVariable(name: "portStr", scope: !7119, file: !1924, line: 304, type: !5432)
!7119 = distinct !DILexicalBlock(scope: !7120, file: !1924, line: 297, column: 35)
!7120 = distinct !DILexicalBlock(scope: !7121, file: !1924, line: 297, column: 21)
!7121 = distinct !DILexicalBlock(scope: !7122, file: !1924, line: 296, column: 39)
!7122 = distinct !DILexicalBlock(scope: !7123, file: !1924, line: 296, column: 17)
!7123 = distinct !DILexicalBlock(scope: !7124, file: !1924, line: 295, column: 44)
!7124 = distinct !DILexicalBlock(scope: !7112, file: !1924, line: 295, column: 13)
!7125 = !DILocation(line: 0, scope: !7102)
!7126 = !DILocation(line: 52, column: 10, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7102, file: !1924, line: 52, column: 9)
!7128 = !DILocation(line: 52, column: 18, scope: !7127)
!7129 = !DILocation(line: 52, column: 9, scope: !7102)
!7130 = !DILocation(line: 53, column: 14, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7132, file: !1924, line: 53, column: 13)
!7132 = distinct !DILexicalBlock(scope: !7127, file: !1924, line: 52, column: 28)
!7133 = !DILocation(line: 53, column: 22, scope: !7131)
!7134 = !DILocation(line: 53, column: 13, scope: !7132)
!7135 = !DILocation(line: 54, column: 13, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7131, file: !1924, line: 53, column: 30)
!7137 = !DILocation(line: 54, column: 24, scope: !7136)
!7138 = !DILocation(line: 55, column: 9, scope: !7136)
!7139 = !DILocation(line: 60, column: 9, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !7102, file: !1924, line: 60, column: 9)
!7141 = !DILocation(line: 60, column: 24, scope: !7140)
!7142 = !DILocation(line: 60, column: 9, scope: !7102)
!7143 = !DILocation(line: 64, column: 24, scope: !7107)
!7144 = !DILocation(line: 64, column: 9, scope: !7107)
!7145 = !DILocation(line: 64, column: 9, scope: !7102)
!7146 = !DILocation(line: 65, column: 9, scope: !7106)
!7147 = !DILocation(line: 65, column: 17, scope: !7106)
!7148 = !DILocation(line: 66, column: 24, scope: !7106)
!7149 = !DILocation(line: 69, column: 9, scope: !7106)
!7150 = !DILocation(line: 70, column: 13, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7106, file: !1924, line: 70, column: 13)
!7152 = !DILocation(line: 68, column: 25, scope: !7106)
!7153 = !DILocation(line: 70, column: 38, scope: !7151)
!7154 = !DILocation(line: 0, scope: !7151)
!7155 = !DILocation(line: 74, column: 9, scope: !7106)
!7156 = !DILocation(line: 74, column: 20, scope: !7106)
!7157 = !DILocation(line: 75, column: 9, scope: !7106)
!7158 = !DILocation(line: 75, column: 17, scope: !7106)
!7159 = !DILocation(line: 76, column: 9, scope: !7106)
!7160 = !DILocation(line: 76, column: 39, scope: !7106)
!7161 = !DILocation(line: 76, column: 17, scope: !7106)
!7162 = !DILocation(line: 77, column: 9, scope: !7106)
!7163 = !DILocation(line: 77, column: 21, scope: !7106)
!7164 = !{!5300, !2478, i64 207}
!7165 = !DILocation(line: 78, column: 9, scope: !7106)
!7166 = !DILocation(line: 78, column: 23, scope: !7106)
!7167 = !DILocation(line: 80, column: 9, scope: !7106)
!7168 = !DILocation(line: 83, column: 5, scope: !7107)
!7169 = !DILocation(line: 86, column: 22, scope: !7102)
!7170 = !DILocation(line: 89, column: 9, scope: !7102)
!7171 = !DILocation(line: 92, column: 19, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7173, file: !1924, line: 89, column: 20)
!7173 = distinct !DILexicalBlock(scope: !7102, file: !1924, line: 89, column: 9)
!7174 = !DILocation(line: 92, column: 31, scope: !7172)
!7175 = !DILocation(line: 92, column: 9, scope: !7172)
!7176 = !DILocation(line: 95, column: 13, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7172, file: !1924, line: 95, column: 13)
!7178 = !DILocation(line: 95, column: 13, scope: !7172)
!7179 = !DILocation(line: 96, column: 25, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7181, file: !1924, line: 96, column: 17)
!7181 = distinct !DILexicalBlock(scope: !7177, file: !1924, line: 95, column: 28)
!7182 = !DILocation(line: 96, column: 53, scope: !7180)
!7183 = !DILocation(line: 96, column: 17, scope: !7180)
!7184 = !DILocation(line: 96, column: 76, scope: !7180)
!7185 = !DILocation(line: 96, column: 17, scope: !7181)
!7186 = !DILocation(line: 97, column: 31, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7180, file: !1924, line: 96, column: 82)
!7188 = !DILocation(line: 98, column: 13, scope: !7187)
!7189 = !DILocation(line: 98, column: 24, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7180, file: !1924, line: 98, column: 24)
!7191 = !DILocation(line: 98, column: 57, scope: !7190)
!7192 = !DILocation(line: 98, column: 24, scope: !7180)
!7193 = !DILocation(line: 99, column: 32, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7190, file: !1924, line: 98, column: 63)
!7195 = !DILocation(line: 100, column: 17, scope: !7194)
!7196 = !DILocation(line: 100, column: 31, scope: !7194)
!7197 = !DILocation(line: 101, column: 31, scope: !7194)
!7198 = !DILocation(line: 102, column: 17, scope: !7194)
!7199 = !DILocation(line: 107, column: 17, scope: !7172)
!7200 = !DILocation(line: 107, column: 9, scope: !7172)
!7201 = !DILocation(line: 109, column: 17, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7203, file: !1924, line: 109, column: 17)
!7203 = distinct !DILexicalBlock(scope: !7172, file: !1924, line: 107, column: 30)
!7204 = !DILocation(line: 109, column: 31, scope: !7202)
!7205 = !DILocation(line: 109, column: 17, scope: !7203)
!7206 = !DILocation(line: 110, column: 29, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7202, file: !1924, line: 109, column: 40)
!7208 = !DILocation(line: 111, column: 13, scope: !7207)
!7209 = !DILocation(line: 111, column: 32, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7202, file: !1924, line: 111, column: 24)
!7211 = !DILocation(line: 111, column: 24, scope: !7210)
!7212 = !DILocation(line: 111, column: 64, scope: !7210)
!7213 = !DILocation(line: 111, column: 24, scope: !7202)
!7214 = !DILocation(line: 112, column: 17, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7210, file: !1924, line: 111, column: 70)
!7216 = !DILocation(line: 113, column: 28, scope: !7215)
!7217 = !DILocation(line: 114, column: 31, scope: !7215)
!7218 = !DILocation(line: 115, column: 29, scope: !7215)
!7219 = !DILocation(line: 116, column: 17, scope: !7215)
!7220 = !DILocation(line: 121, column: 17, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7203, file: !1924, line: 121, column: 17)
!7222 = !DILocation(line: 121, column: 17, scope: !7203)
!7223 = !DILocation(line: 122, column: 29, scope: !7224)
!7224 = distinct !DILexicalBlock(scope: !7221, file: !1924, line: 121, column: 34)
!7225 = !DILocation(line: 123, column: 13, scope: !7224)
!7226 = !DILocation(line: 127, column: 17, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7203, file: !1924, line: 127, column: 17)
!7228 = !DILocation(line: 127, column: 31, scope: !7227)
!7229 = !DILocation(line: 127, column: 17, scope: !7203)
!7230 = !DILocation(line: 128, column: 29, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7227, file: !1924, line: 127, column: 40)
!7232 = !DILocation(line: 129, column: 13, scope: !7231)
!7233 = !DILocation(line: 130, column: 29, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7235, file: !1924, line: 130, column: 21)
!7235 = distinct !DILexicalBlock(scope: !7227, file: !1924, line: 129, column: 20)
!7236 = !DILocation(line: 130, column: 21, scope: !7234)
!7237 = !DILocation(line: 130, column: 62, scope: !7234)
!7238 = !DILocation(line: 130, column: 21, scope: !7235)
!7239 = !DILocation(line: 131, column: 36, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7234, file: !1924, line: 130, column: 68)
!7241 = !DILocation(line: 132, column: 21, scope: !7240)
!7242 = !DILocation(line: 132, column: 35, scope: !7240)
!7243 = !DILocation(line: 133, column: 17, scope: !7240)
!7244 = !DILocation(line: 138, column: 17, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7203, file: !1924, line: 138, column: 17)
!7246 = !DILocation(line: 138, column: 17, scope: !7203)
!7247 = !DILocation(line: 139, column: 29, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7245, file: !1924, line: 138, column: 35)
!7249 = !DILocation(line: 140, column: 13, scope: !7248)
!7250 = !DILocation(line: 144, column: 17, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7203, file: !1924, line: 144, column: 17)
!7252 = !DILocation(line: 144, column: 17, scope: !7203)
!7253 = !DILocation(line: 145, column: 29, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7251, file: !1924, line: 144, column: 35)
!7255 = !DILocation(line: 146, column: 28, scope: !7254)
!7256 = !DILocation(line: 147, column: 13, scope: !7254)
!7257 = !DILocation(line: 151, column: 17, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7203, file: !1924, line: 151, column: 17)
!7259 = !DILocation(line: 151, column: 17, scope: !7203)
!7260 = !DILocation(line: 152, column: 29, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7258, file: !1924, line: 151, column: 29)
!7262 = !DILocation(line: 153, column: 13, scope: !7261)
!7263 = !DILocation(line: 157, column: 17, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7203, file: !1924, line: 157, column: 17)
!7265 = !DILocation(line: 157, column: 17, scope: !7203)
!7266 = !DILocation(line: 158, column: 29, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7264, file: !1924, line: 157, column: 33)
!7268 = !DILocation(line: 159, column: 13, scope: !7267)
!7269 = !DILocation(line: 167, column: 13, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7172, file: !1924, line: 167, column: 13)
!7271 = !DILocation(line: 167, column: 24, scope: !7270)
!7272 = !DILocation(line: 167, column: 13, scope: !7172)
!7273 = !DILocation(line: 168, column: 13, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7270, file: !1924, line: 167, column: 38)
!7275 = !DILocation(line: 169, column: 9, scope: !7274)
!7276 = !DILocation(line: 173, column: 15, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7173, file: !1924, line: 173, column: 14)
!7278 = !DILocation(line: 173, column: 30, scope: !7277)
!7279 = !DILocation(line: 173, column: 14, scope: !7277)
!7280 = !DILocation(line: 173, column: 52, scope: !7277)
!7281 = !DILocation(line: 174, column: 9, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7277, file: !1924, line: 173, column: 80)
!7283 = !DILocation(line: 175, column: 5, scope: !7282)
!7284 = !DILocation(line: 178, column: 9, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7102, file: !1924, line: 178, column: 9)
!7286 = !DILocation(line: 178, column: 23, scope: !7285)
!7287 = !DILocation(line: 178, column: 26, scope: !7285)
!7288 = !DILocation(line: 178, column: 38, scope: !7285)
!7289 = !DILocation(line: 178, column: 9, scope: !7102)
!7290 = !DILocation(line: 182, column: 9, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7102, file: !1924, line: 182, column: 9)
!7292 = !DILocation(line: 182, column: 17, scope: !7291)
!7293 = !DILocation(line: 182, column: 34, scope: !7291)
!7294 = !DILocation(line: 182, column: 9, scope: !7102)
!7295 = !DILocation(line: 186, column: 9, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7102, file: !1924, line: 186, column: 9)
!7297 = !DILocation(line: 186, column: 15, scope: !7296)
!7298 = !DILocation(line: 186, column: 28, scope: !7296)
!7299 = !DILocation(line: 186, column: 31, scope: !7296)
!7300 = !DILocation(line: 186, column: 46, scope: !7296)
!7301 = !DILocation(line: 186, column: 9, scope: !7102)
!7302 = !DILocation(line: 187, column: 21, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7296, file: !1924, line: 186, column: 59)
!7304 = !DILocation(line: 188, column: 25, scope: !7303)
!7305 = !DILocation(line: 188, column: 23, scope: !7303)
!7306 = !DILocation(line: 189, column: 9, scope: !7303)
!7307 = !DILocation(line: 190, column: 9, scope: !7303)
!7308 = !DILocation(line: 194, column: 23, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7102, file: !1924, line: 194, column: 9)
!7310 = !{!7311, !2477, i64 280}
!7311 = !{!"_ZTSN6Cicada17Sim7x00CommDeviceE", !2477, i64 280}
!7312 = !DILocation(line: 194, column: 9, scope: !7309)
!7313 = !DILocation(line: 194, column: 9, scope: !7102)
!7314 = !DILocation(line: 195, column: 21, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7309, file: !1924, line: 194, column: 38)
!7316 = !DILocation(line: 196, column: 25, scope: !7315)
!7317 = !DILocation(line: 196, column: 23, scope: !7315)
!7318 = !DILocation(line: 197, column: 9, scope: !7315)
!7319 = !DILocation(line: 201, column: 13, scope: !7102)
!7320 = !DILocation(line: 201, column: 5, scope: !7102)
!7321 = !DILocation(line: 203, column: 9, scope: !7112)
!7322 = !DILocation(line: 204, column: 9, scope: !7112)
!7323 = !DILocation(line: 204, column: 23, scope: !7112)
!7324 = !DILocation(line: 205, column: 9, scope: !7112)
!7325 = !DILocation(line: 206, column: 9, scope: !7112)
!7326 = !DILocation(line: 209, column: 9, scope: !7112)
!7327 = !DILocation(line: 210, column: 9, scope: !7112)
!7328 = !DILocation(line: 210, column: 23, scope: !7112)
!7329 = !DILocation(line: 211, column: 24, scope: !7112)
!7330 = !DILocation(line: 212, column: 25, scope: !7112)
!7331 = !DILocation(line: 212, column: 23, scope: !7112)
!7332 = !DILocation(line: 213, column: 20, scope: !7112)
!7333 = !DILocation(line: 214, column: 9, scope: !7112)
!7334 = !DILocation(line: 215, column: 9, scope: !7112)
!7335 = !DILocation(line: 218, column: 9, scope: !7111)
!7336 = !DILocation(line: 218, column: 20, scope: !7111)
!7337 = !DILocation(line: 219, column: 9, scope: !7111)
!7338 = !DILocation(line: 219, column: 17, scope: !7111)
!7339 = !DILocation(line: 220, column: 9, scope: !7111)
!7340 = !DILocation(line: 220, column: 39, scope: !7111)
!7341 = !DILocation(line: 220, column: 45, scope: !7111)
!7342 = !DILocation(line: 220, column: 17, scope: !7111)
!7343 = !DILocation(line: 221, column: 9, scope: !7111)
!7344 = !DILocation(line: 221, column: 39, scope: !7111)
!7345 = !DILocation(line: 221, column: 17, scope: !7111)
!7346 = !DILocation(line: 223, column: 25, scope: !7111)
!7347 = !DILocation(line: 223, column: 23, scope: !7111)
!7348 = !DILocation(line: 224, column: 20, scope: !7111)
!7349 = !DILocation(line: 226, column: 5, scope: !7112)
!7350 = !DILocation(line: 229, column: 25, scope: !7112)
!7351 = !DILocation(line: 229, column: 23, scope: !7112)
!7352 = !DILocation(line: 230, column: 20, scope: !7112)
!7353 = !DILocation(line: 231, column: 9, scope: !7112)
!7354 = !DILocation(line: 232, column: 9, scope: !7112)
!7355 = !DILocation(line: 235, column: 25, scope: !7112)
!7356 = !DILocation(line: 235, column: 23, scope: !7112)
!7357 = !DILocation(line: 236, column: 20, scope: !7112)
!7358 = !DILocation(line: 237, column: 9, scope: !7112)
!7359 = !DILocation(line: 238, column: 9, scope: !7112)
!7360 = !DILocation(line: 241, column: 13, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7112, file: !1924, line: 241, column: 13)
!7362 = !DILocation(line: 241, column: 13, scope: !7112)
!7363 = !DILocation(line: 244, column: 9, scope: !7112)
!7364 = !DILocation(line: 245, column: 23, scope: !7112)
!7365 = !DILocation(line: 246, column: 20, scope: !7112)
!7366 = !DILocation(line: 247, column: 21, scope: !7112)
!7367 = !DILocation(line: 248, column: 9, scope: !7112)
!7368 = !DILocation(line: 249, column: 9, scope: !7112)
!7369 = !DILocation(line: 252, column: 25, scope: !7112)
!7370 = !DILocation(line: 252, column: 23, scope: !7112)
!7371 = !DILocation(line: 253, column: 20, scope: !7112)
!7372 = !DILocation(line: 254, column: 9, scope: !7112)
!7373 = !DILocation(line: 255, column: 9, scope: !7112)
!7374 = !DILocation(line: 258, column: 28, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7112, file: !1924, line: 258, column: 13)
!7376 = !DILocation(line: 258, column: 13, scope: !7112)
!7377 = !DILocation(line: 259, column: 25, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7375, file: !1924, line: 258, column: 44)
!7379 = !DILocation(line: 260, column: 29, scope: !7378)
!7380 = !DILocation(line: 260, column: 27, scope: !7378)
!7381 = !DILocation(line: 261, column: 24, scope: !7378)
!7382 = !DILocation(line: 262, column: 9, scope: !7378)
!7383 = !DILocation(line: 266, column: 9, scope: !7117)
!7384 = !DILocation(line: 266, column: 14, scope: !7117)
!7385 = !DILocation(line: 267, column: 50, scope: !7117)
!7386 = !DILocation(line: 267, column: 9, scope: !7117)
!7387 = !DILocation(line: 269, column: 9, scope: !7117)
!7388 = !DILocation(line: 269, column: 17, scope: !7117)
!7389 = !DILocation(line: 270, column: 13, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7117, file: !1924, line: 270, column: 13)
!7391 = !DILocation(line: 270, column: 19, scope: !7390)
!7392 = !DILocation(line: 0, scope: !7390)
!7393 = !DILocation(line: 270, column: 13, scope: !7117)
!7394 = !DILocation(line: 271, column: 21, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7390, file: !1924, line: 270, column: 27)
!7396 = !DILocation(line: 272, column: 9, scope: !7395)
!7397 = !DILocation(line: 273, column: 21, scope: !7398)
!7398 = distinct !DILexicalBlock(scope: !7390, file: !1924, line: 272, column: 16)
!7399 = !DILocation(line: 274, column: 13, scope: !7398)
!7400 = !DILocation(line: 274, column: 43, scope: !7398)
!7401 = !DILocation(line: 274, column: 21, scope: !7398)
!7402 = !DILocation(line: 275, column: 13, scope: !7398)
!7403 = !DILocation(line: 275, column: 21, scope: !7398)
!7404 = !DILocation(line: 277, column: 9, scope: !7117)
!7405 = !DILocation(line: 277, column: 17, scope: !7117)
!7406 = !DILocation(line: 278, column: 9, scope: !7117)
!7407 = !DILocation(line: 278, column: 39, scope: !7117)
!7408 = !DILocation(line: 278, column: 17, scope: !7117)
!7409 = !DILocation(line: 280, column: 21, scope: !7117)
!7410 = !DILocation(line: 281, column: 23, scope: !7117)
!7411 = !DILocation(line: 282, column: 20, scope: !7117)
!7412 = !DILocation(line: 284, column: 5, scope: !7112)
!7413 = !DILocation(line: 287, column: 9, scope: !7112)
!7414 = !DILocation(line: 288, column: 9, scope: !7112)
!7415 = !DILocation(line: 288, column: 23, scope: !7112)
!7416 = !DILocation(line: 289, column: 21, scope: !7112)
!7417 = !DILocation(line: 290, column: 20, scope: !7112)
!7418 = !DILocation(line: 291, column: 24, scope: !7112)
!7419 = !DILocation(line: 292, column: 9, scope: !7112)
!7420 = !DILocation(line: 295, column: 13, scope: !7124)
!7421 = !DILocation(line: 295, column: 26, scope: !7124)
!7422 = !DILocation(line: 295, column: 13, scope: !7112)
!7423 = !DILocation(line: 296, column: 17, scope: !7122)
!7424 = !DILocation(line: 296, column: 17, scope: !7123)
!7425 = !DILocation(line: 297, column: 21, scope: !7120)
!7426 = !DILocation(line: 297, column: 27, scope: !7120)
!7427 = !DILocation(line: 297, column: 21, scope: !7121)
!7428 = !DILocation(line: 299, column: 21, scope: !7119)
!7429 = !DILocation(line: 299, column: 29, scope: !7119)
!7430 = !DILocation(line: 300, column: 21, scope: !7119)
!7431 = !DILocation(line: 300, column: 51, scope: !7119)
!7432 = !DILocation(line: 300, column: 29, scope: !7119)
!7433 = !DILocation(line: 301, column: 21, scope: !7119)
!7434 = !DILocation(line: 301, column: 29, scope: !7119)
!7435 = !DILocation(line: 304, column: 21, scope: !7119)
!7436 = !DILocation(line: 304, column: 26, scope: !7119)
!7437 = !DILocation(line: 305, column: 62, scope: !7119)
!7438 = !DILocation(line: 305, column: 21, scope: !7119)
!7439 = !DILocation(line: 306, column: 21, scope: !7119)
!7440 = !DILocation(line: 306, column: 29, scope: !7119)
!7441 = !DILocation(line: 307, column: 17, scope: !7120)
!7442 = !DILocation(line: 307, column: 17, scope: !7119)
!7443 = !DILocation(line: 308, column: 17, scope: !7121)
!7444 = !DILocation(line: 308, column: 47, scope: !7121)
!7445 = !DILocation(line: 308, column: 25, scope: !7121)
!7446 = !DILocation(line: 310, column: 17, scope: !7121)
!7447 = !DILocation(line: 310, column: 31, scope: !7121)
!7448 = !DILocation(line: 311, column: 28, scope: !7121)
!7449 = !DILocation(line: 312, column: 13, scope: !7121)
!7450 = !DILocation(line: 313, column: 20, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7124, file: !1924, line: 313, column: 20)
!7452 = !DILocation(line: 313, column: 35, scope: !7451)
!7453 = !DILocation(line: 313, column: 20, scope: !7124)
!7454 = !DILocation(line: 314, column: 28, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7451, file: !1924, line: 313, column: 51)
!7456 = !DILocation(line: 315, column: 13, scope: !7455)
!7457 = !DILocation(line: 315, column: 27, scope: !7455)
!7458 = !DILocation(line: 316, column: 24, scope: !7455)
!7459 = !DILocation(line: 317, column: 9, scope: !7455)
!7460 = !DILocation(line: 318, column: 13, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7451, file: !1924, line: 317, column: 16)
!7462 = !DILocation(line: 318, column: 27, scope: !7461)
!7463 = !DILocation(line: 319, column: 13, scope: !7461)
!7464 = !DILocation(line: 326, column: 24, scope: !7112)
!7465 = !DILocation(line: 327, column: 25, scope: !7112)
!7466 = !DILocation(line: 327, column: 23, scope: !7112)
!7467 = !DILocation(line: 328, column: 20, scope: !7112)
!7468 = !DILocation(line: 329, column: 9, scope: !7112)
!7469 = !DILocation(line: 332, column: 25, scope: !7112)
!7470 = !DILocation(line: 332, column: 23, scope: !7112)
!7471 = !DILocation(line: 333, column: 20, scope: !7112)
!7472 = !DILocation(line: 334, column: 21, scope: !7112)
!7473 = !DILocation(line: 335, column: 9, scope: !7112)
!7474 = !DILocation(line: 336, column: 9, scope: !7112)
!7475 = !DILocation(line: 339, column: 13, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7112, file: !1924, line: 339, column: 13)
!7477 = !DILocation(line: 339, column: 13, scope: !7112)
!7478 = !DILocation(line: 342, column: 13, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7112, file: !1924, line: 342, column: 13)
!7480 = !DILocation(line: 342, column: 29, scope: !7479)
!7481 = !DILocation(line: 342, column: 13, scope: !7112)
!7482 = !DILocation(line: 343, column: 32, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7484, file: !1924, line: 343, column: 17)
!7484 = distinct !DILexicalBlock(scope: !7479, file: !1924, line: 342, column: 34)
!7485 = !DILocation(line: 343, column: 17, scope: !7484)
!7486 = !DILocation(line: 344, column: 28, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7483, file: !1924, line: 343, column: 49)
!7488 = !DILocation(line: 345, column: 29, scope: !7487)
!7489 = !DILocation(line: 346, column: 13, scope: !7487)
!7490 = !DILocation(line: 347, column: 20, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7479, file: !1924, line: 347, column: 20)
!7492 = !DILocation(line: 347, column: 35, scope: !7491)
!7493 = !DILocation(line: 347, column: 20, scope: !7479)
!7494 = !DILocation(line: 348, column: 24, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7491, file: !1924, line: 347, column: 51)
!7496 = !DILocation(line: 349, column: 9, scope: !7495)
!7497 = !DILocation(line: 350, column: 24, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7491, file: !1924, line: 349, column: 16)
!7499 = !DILocation(line: 359, column: 13, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7112, file: !1924, line: 359, column: 13)
!7501 = !DILocation(line: 359, column: 26, scope: !7500)
!7502 = !DILocation(line: 359, column: 13, scope: !7112)
!7503 = !DILocation(line: 360, column: 17, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7505, file: !1924, line: 360, column: 17)
!7505 = distinct !DILexicalBlock(scope: !7500, file: !1924, line: 359, column: 31)
!7506 = !DILocation(line: 360, column: 17, scope: !7505)
!7507 = !DILocation(line: 361, column: 29, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7504, file: !1924, line: 360, column: 28)
!7509 = !DILocation(line: 362, column: 33, scope: !7508)
!7510 = !DILocation(line: 362, column: 31, scope: !7508)
!7511 = !DILocation(line: 363, column: 13, scope: !7508)
!7512 = !DILocation(line: 364, column: 20, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7500, file: !1924, line: 364, column: 20)
!7514 = !DILocation(line: 364, column: 36, scope: !7513)
!7515 = !DILocation(line: 364, column: 20, scope: !7500)
!7516 = !DILocation(line: 365, column: 24, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7513, file: !1924, line: 364, column: 41)
!7518 = !DILocation(line: 366, column: 9, scope: !7517)
!7519 = !DILocation(line: 367, column: 24, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7513, file: !1924, line: 366, column: 16)
!7521 = !DILocation(line: 372, column: 9, scope: !7112)
!7522 = !DILocation(line: 372, column: 23, scope: !7112)
!7523 = !DILocation(line: 373, column: 13, scope: !7524)
!7524 = distinct !DILexicalBlock(scope: !7112, file: !1924, line: 373, column: 13)
!7525 = !DILocation(line: 373, column: 13, scope: !7112)
!7526 = !DILocation(line: 376, column: 9, scope: !7112)
!7527 = !DILocation(line: 377, column: 9, scope: !7112)
!7528 = !DILocation(line: 380, column: 9, scope: !7112)
!7529 = !DILocation(line: 380, column: 23, scope: !7112)
!7530 = !DILocation(line: 381, column: 23, scope: !7112)
!7531 = !DILocation(line: 382, column: 20, scope: !7112)
!7532 = !DILocation(line: 383, column: 9, scope: !7112)
!7533 = !DILocation(line: 384, column: 9, scope: !7112)
!7534 = !DILocation(line: 387, column: 24, scope: !7112)
!7535 = !DILocation(line: 388, column: 9, scope: !7112)
!7536 = !DILocation(line: 388, column: 23, scope: !7112)
!7537 = !DILocation(line: 389, column: 20, scope: !7112)
!7538 = !DILocation(line: 390, column: 9, scope: !7112)
!7539 = !DILocation(line: 395, column: 1, scope: !7102)
!7540 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada17Sim7x00CommDeviceD1Ev", scope: !1844, file: !1844, line: 37, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !121)
!7541 = !DILocation(line: 0, scope: !7540)
!7542 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada17Sim7x00CommDeviceD0Ev", scope: !1844, file: !1844, line: 37, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !121)
!7543 = !DILocation(line: 0, scope: !7542)
!7544 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada17Sim7x00CommDevice3runEv", scope: !1924, file: !1924, line: 49, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !121)
!7545 = !DILocation(line: 0, scope: !7544)
!7546 = distinct !DISubprogram(name: "Sim7x00CommDevice", linkageName: "_ZN6Cicada17Sim7x00CommDeviceC2ERNS_15IBufferedSerialEPhS3_y", scope: !1927, file: !1924, line: 35, type: !1932, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1923, declaration: !1931, retainedNodes: !7547)
!7547 = !{!7548, !7549, !7550, !7551, !7552}
!7548 = !DILocalVariable(name: "this", arg: 1, scope: !7546, type: !7099, flags: DIFlagArtificial | DIFlagObjectPointer)
!7549 = !DILocalVariable(name: "serial", arg: 2, scope: !7546, file: !1924, line: 36, type: !958)
!7550 = !DILocalVariable(name: "readBuffer", arg: 3, scope: !7546, file: !1924, line: 36, type: !44)
!7551 = !DILocalVariable(name: "writeBuffer", arg: 4, scope: !7546, file: !1924, line: 36, type: !44)
!7552 = !DILocalVariable(name: "bufferSize", arg: 5, scope: !7546, file: !1924, line: 36, type: !872)
!7553 = !DILocation(line: 0, scope: !7546)
!7554 = !DILocation(line: 38, column: 1, scope: !7546)
!7555 = !DILocation(line: 37, column: 5, scope: !7546)
!7556 = !DILocation(line: 148, column: 17, scope: !7557)
!7557 = !DILexicalBlockFile(scope: !7546, file: !1844, discriminator: 0)
!7558 = !DILocation(line: 39, column: 5, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7560, file: !1924, line: 38, column: 1)
!7560 = !DILexicalBlockFile(scope: !7546, file: !1924, discriminator: 0)
!7561 = !DILocation(line: 39, column: 26, scope: !7559)
!7562 = !DILocation(line: 40, column: 1, scope: !7560)
!7563 = distinct !DISubprogram(name: "Sim7x00CommDevice", linkageName: "_ZN6Cicada17Sim7x00CommDeviceC2ERNS_15IBufferedSerialEPhS3_yy", scope: !1927, file: !1924, line: 42, type: !1936, scopeLine: 45, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1923, declaration: !1935, retainedNodes: !7564)
!7564 = !{!7565, !7566, !7567, !7568, !7569, !7570}
!7565 = !DILocalVariable(name: "this", arg: 1, scope: !7563, type: !7099, flags: DIFlagArtificial | DIFlagObjectPointer)
!7566 = !DILocalVariable(name: "serial", arg: 2, scope: !7563, file: !1924, line: 42, type: !958)
!7567 = !DILocalVariable(name: "readBuffer", arg: 3, scope: !7563, file: !1924, line: 42, type: !44)
!7568 = !DILocalVariable(name: "writeBuffer", arg: 4, scope: !7563, file: !1924, line: 43, type: !44)
!7569 = !DILocalVariable(name: "readBufferSize", arg: 5, scope: !7563, file: !1924, line: 43, type: !872)
!7570 = !DILocalVariable(name: "writeBufferSize", arg: 6, scope: !7563, file: !1924, line: 43, type: !872)
!7571 = !DILocation(line: 0, scope: !7563)
!7572 = !DILocation(line: 45, column: 1, scope: !7563)
!7573 = !DILocation(line: 44, column: 5, scope: !7563)
!7574 = !DILocation(line: 148, column: 17, scope: !7575)
!7575 = !DILexicalBlockFile(scope: !7563, file: !1844, discriminator: 0)
!7576 = !DILocation(line: 46, column: 5, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7578, file: !1924, line: 45, column: 1)
!7578 = !DILexicalBlockFile(scope: !7563, file: !1924, discriminator: 0)
!7579 = !DILocation(line: 46, column: 26, scope: !7577)
!7580 = !DILocation(line: 47, column: 1, scope: !7578)
!7581 = distinct !DISubprogram(name: "~Sim800CommDevice", linkageName: "_ZN6Cicada16Sim800CommDeviceD0Ev", scope: !2014, file: !1841, line: 37, type: !2026, scopeLine: 37, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, declaration: !7582, retainedNodes: !7583)
!7582 = !DISubprogram(name: "~Sim800CommDevice", scope: !2014, type: !2026, containingType: !2014, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!7583 = !{!7584}
!7584 = !DILocalVariable(name: "this", arg: 1, scope: !7581, type: !7585, flags: DIFlagArtificial | DIFlagObjectPointer)
!7585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 32)
!7586 = !DILocation(line: 0, scope: !7581)
!7587 = !DILocation(line: 37, column: 7, scope: !7581)
!7588 = distinct !DISubprogram(name: "run", linkageName: "_ZN6Cicada16Sim800CommDevice3runEv", scope: !2014, file: !2011, line: 48, type: !2026, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, declaration: !2025, retainedNodes: !7589)
!7589 = !{!7590, !7591, !7592, !7597, !7598, !7601, !7606}
!7590 = !DILocalVariable(name: "this", arg: 1, scope: !7588, type: !7585, flags: DIFlagArtificial | DIFlagObjectPointer)
!7591 = !DILocalVariable(name: "parseLine", scope: !7588, file: !2011, line: 79, type: !63)
!7592 = !DILocalVariable(name: "i", scope: !7593, file: !2011, line: 107, type: !45)
!7593 = distinct !DILexicalBlock(scope: !7594, file: !2011, line: 105, column: 21)
!7594 = distinct !DILexicalBlock(scope: !7595, file: !2011, line: 104, column: 30)
!7595 = distinct !DILexicalBlock(scope: !7596, file: !2011, line: 82, column: 20)
!7596 = distinct !DILexicalBlock(scope: !7588, file: !2011, line: 82, column: 9)
!7597 = !DILocalVariable(name: "p", scope: !7593, file: !2011, line: 107, type: !45)
!7598 = !DILocalVariable(name: "str", scope: !7599, file: !2011, line: 226, type: !7108)
!7599 = distinct !DILexicalBlock(scope: !7600, file: !2011, line: 225, column: 20)
!7600 = distinct !DILexicalBlock(scope: !7588, file: !2011, line: 197, column: 25)
!7601 = !DILocalVariable(name: "str", scope: !7602, file: !2011, line: 246, type: !7603)
!7602 = distinct !DILexicalBlock(scope: !7600, file: !2011, line: 242, column: 21)
!7603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 72, elements: !7604)
!7604 = !{!7605}
!7605 = !DISubrange(count: 9)
!7606 = !DILocalVariable(name: "portStr", scope: !7607, file: !2011, line: 264, type: !5432)
!7607 = distinct !DILexicalBlock(scope: !7600, file: !2011, line: 263, column: 24)
!7608 = !DILocation(line: 0, scope: !7588)
!7609 = !DILocation(line: 51, column: 10, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7588, file: !2011, line: 51, column: 9)
!7611 = !DILocation(line: 51, column: 18, scope: !7610)
!7612 = !DILocation(line: 51, column: 9, scope: !7588)
!7613 = !DILocation(line: 52, column: 14, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7615, file: !2011, line: 52, column: 13)
!7615 = distinct !DILexicalBlock(scope: !7610, file: !2011, line: 51, column: 28)
!7616 = !DILocation(line: 52, column: 22, scope: !7614)
!7617 = !DILocation(line: 52, column: 13, scope: !7615)
!7618 = !DILocation(line: 53, column: 13, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7614, file: !2011, line: 52, column: 30)
!7620 = !DILocation(line: 53, column: 24, scope: !7619)
!7621 = !DILocation(line: 54, column: 9, scope: !7619)
!7622 = !DILocation(line: 59, column: 9, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7588, file: !2011, line: 59, column: 9)
!7624 = !DILocation(line: 59, column: 24, scope: !7623)
!7625 = !DILocation(line: 59, column: 9, scope: !7588)
!7626 = !DILocation(line: 63, column: 24, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7588, file: !2011, line: 63, column: 9)
!7628 = !DILocation(line: 63, column: 9, scope: !7627)
!7629 = !DILocation(line: 63, column: 9, scope: !7588)
!7630 = !DILocation(line: 64, column: 9, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7627, file: !2011, line: 63, column: 41)
!7632 = !DILocation(line: 64, column: 17, scope: !7631)
!7633 = !DILocation(line: 67, column: 9, scope: !7631)
!7634 = !DILocation(line: 68, column: 9, scope: !7631)
!7635 = !DILocation(line: 68, column: 20, scope: !7631)
!7636 = !DILocation(line: 66, column: 25, scope: !7631)
!7637 = !DILocation(line: 69, column: 9, scope: !7631)
!7638 = !DILocation(line: 69, column: 21, scope: !7631)
!7639 = !DILocation(line: 70, column: 9, scope: !7631)
!7640 = !DILocation(line: 70, column: 23, scope: !7631)
!7641 = !DILocation(line: 71, column: 24, scope: !7631)
!7642 = !DILocation(line: 72, column: 13, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7631, file: !2011, line: 72, column: 13)
!7644 = !DILocation(line: 72, column: 27, scope: !7643)
!7645 = !DILocation(line: 72, column: 13, scope: !7631)
!7646 = !DILocation(line: 73, column: 13, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7643, file: !2011, line: 72, column: 44)
!7648 = !DILocation(line: 74, column: 13, scope: !7647)
!7649 = !DILocation(line: 75, column: 9, scope: !7647)
!7650 = !DILocation(line: 79, column: 22, scope: !7588)
!7651 = !DILocation(line: 82, column: 9, scope: !7588)
!7652 = !DILocation(line: 84, column: 19, scope: !7595)
!7653 = !DILocation(line: 84, column: 31, scope: !7595)
!7654 = !DILocation(line: 84, column: 9, scope: !7595)
!7655 = !DILocation(line: 87, column: 21, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7595, file: !2011, line: 87, column: 13)
!7657 = !DILocation(line: 87, column: 13, scope: !7656)
!7658 = !DILocation(line: 87, column: 53, scope: !7656)
!7659 = !DILocation(line: 88, column: 13, scope: !7656)
!7660 = !DILocation(line: 88, column: 16, scope: !7656)
!7661 = !DILocation(line: 88, column: 55, scope: !7656)
!7662 = !DILocation(line: 89, column: 13, scope: !7656)
!7663 = !DILocation(line: 89, column: 16, scope: !7656)
!7664 = !DILocation(line: 89, column: 49, scope: !7656)
!7665 = !DILocation(line: 87, column: 13, scope: !7595)
!7666 = !DILocation(line: 90, column: 28, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7656, file: !2011, line: 89, column: 55)
!7668 = !DILocation(line: 91, column: 13, scope: !7667)
!7669 = !DILocation(line: 91, column: 27, scope: !7667)
!7670 = !DILocation(line: 92, column: 13, scope: !7667)
!7671 = !DILocation(line: 92, column: 27, scope: !7667)
!7672 = !DILocation(line: 93, column: 13, scope: !7667)
!7673 = !DILocation(line: 97, column: 13, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7595, file: !2011, line: 97, column: 13)
!7675 = !DILocation(line: 97, column: 13, scope: !7595)
!7676 = !DILocation(line: 98, column: 53, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7678, file: !2011, line: 98, column: 17)
!7678 = distinct !DILexicalBlock(scope: !7674, file: !2011, line: 97, column: 28)
!7679 = !DILocation(line: 98, column: 17, scope: !7677)
!7680 = !DILocation(line: 98, column: 76, scope: !7677)
!7681 = !DILocation(line: 98, column: 17, scope: !7678)
!7682 = !DILocation(line: 99, column: 31, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7677, file: !2011, line: 98, column: 82)
!7684 = !DILocation(line: 100, column: 13, scope: !7683)
!7685 = !DILocation(line: 104, column: 17, scope: !7595)
!7686 = !DILocation(line: 104, column: 9, scope: !7595)
!7687 = !DILocation(line: 0, scope: !7593)
!7688 = !DILocation(line: 108, column: 20, scope: !7593)
!7689 = !DILocation(line: 108, column: 13, scope: !7593)
!7690 = !DILocation(line: 109, column: 34, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7692, file: !2011, line: 109, column: 21)
!7692 = distinct !DILexicalBlock(scope: !7593, file: !2011, line: 108, column: 36)
!7693 = !DILocation(line: 109, column: 38, scope: !7691)
!7694 = !DILocation(line: 109, column: 21, scope: !7692)
!7695 = distinct !{!7695, !7689, !7696, !2694, !2695}
!7696 = !DILocation(line: 111, column: 13, scope: !7593)
!7697 = !DILocation(line: 112, column: 19, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7593, file: !2011, line: 112, column: 17)
!7699 = !DILocation(line: 112, column: 17, scope: !7593)
!7700 = !DILocation(line: 113, column: 29, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7698, file: !2011, line: 112, column: 25)
!7702 = !DILocation(line: 114, column: 13, scope: !7701)
!7703 = !DILocation(line: 118, column: 17, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7594, file: !2011, line: 118, column: 17)
!7705 = !DILocation(line: 118, column: 17, scope: !7594)
!7706 = !DILocation(line: 119, column: 29, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !7704, file: !2011, line: 118, column: 34)
!7708 = !DILocation(line: 120, column: 13, scope: !7707)
!7709 = !DILocation(line: 124, column: 17, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7594, file: !2011, line: 124, column: 17)
!7711 = !DILocation(line: 124, column: 17, scope: !7594)
!7712 = !DILocation(line: 125, column: 29, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7710, file: !2011, line: 124, column: 48)
!7714 = !DILocation(line: 126, column: 13, scope: !7713)
!7715 = !DILocation(line: 126, column: 24, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7710, file: !2011, line: 126, column: 24)
!7717 = !DILocation(line: 126, column: 38, scope: !7716)
!7718 = !DILocation(line: 126, column: 24, scope: !7710)
!7719 = !DILocation(line: 127, column: 29, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7716, file: !2011, line: 126, column: 47)
!7721 = !DILocation(line: 128, column: 13, scope: !7720)
!7722 = !DILocation(line: 128, column: 24, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7716, file: !2011, line: 128, column: 24)
!7724 = !DILocation(line: 128, column: 68, scope: !7723)
!7725 = !DILocation(line: 128, column: 24, scope: !7716)
!7726 = !DILocation(line: 129, column: 32, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7723, file: !2011, line: 128, column: 74)
!7728 = !DILocation(line: 130, column: 17, scope: !7727)
!7729 = !DILocation(line: 130, column: 31, scope: !7727)
!7730 = !DILocation(line: 131, column: 13, scope: !7727)
!7731 = !DILocation(line: 135, column: 17, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7594, file: !2011, line: 135, column: 17)
!7733 = !DILocation(line: 135, column: 17, scope: !7594)
!7734 = !DILocation(line: 136, column: 29, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7732, file: !2011, line: 135, column: 35)
!7736 = !DILocation(line: 137, column: 13, scope: !7735)
!7737 = !DILocation(line: 141, column: 17, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7594, file: !2011, line: 141, column: 17)
!7739 = !DILocation(line: 141, column: 17, scope: !7594)
!7740 = !DILocation(line: 142, column: 29, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7738, file: !2011, line: 141, column: 35)
!7742 = !DILocation(line: 143, column: 28, scope: !7741)
!7743 = !DILocation(line: 144, column: 13, scope: !7741)
!7744 = !DILocation(line: 148, column: 17, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7594, file: !2011, line: 148, column: 17)
!7746 = !DILocation(line: 148, column: 17, scope: !7594)
!7747 = !DILocation(line: 149, column: 29, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7745, file: !2011, line: 148, column: 29)
!7749 = !DILocation(line: 150, column: 13, scope: !7748)
!7750 = !DILocation(line: 153, column: 17, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7594, file: !2011, line: 153, column: 17)
!7752 = !DILocation(line: 153, column: 17, scope: !7594)
!7753 = !DILocation(line: 154, column: 29, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7751, file: !2011, line: 153, column: 33)
!7755 = !DILocation(line: 155, column: 13, scope: !7754)
!7756 = !DILocation(line: 163, column: 13, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7595, file: !2011, line: 163, column: 13)
!7758 = !DILocation(line: 163, column: 24, scope: !7757)
!7759 = !DILocation(line: 163, column: 13, scope: !7595)
!7760 = !DILocation(line: 164, column: 13, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7757, file: !2011, line: 163, column: 38)
!7762 = !DILocation(line: 165, column: 9, scope: !7761)
!7763 = !DILocation(line: 169, column: 15, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7596, file: !2011, line: 169, column: 14)
!7765 = !DILocation(line: 169, column: 30, scope: !7764)
!7766 = !DILocation(line: 169, column: 14, scope: !7764)
!7767 = !DILocation(line: 169, column: 52, scope: !7764)
!7768 = !DILocation(line: 170, column: 9, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7764, file: !2011, line: 169, column: 80)
!7770 = !DILocation(line: 171, column: 5, scope: !7769)
!7771 = !DILocation(line: 174, column: 9, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7588, file: !2011, line: 174, column: 9)
!7773 = !DILocation(line: 174, column: 23, scope: !7772)
!7774 = !DILocation(line: 174, column: 26, scope: !7772)
!7775 = !DILocation(line: 174, column: 38, scope: !7772)
!7776 = !DILocation(line: 174, column: 9, scope: !7588)
!7777 = !DILocation(line: 178, column: 9, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7588, file: !2011, line: 178, column: 9)
!7779 = !DILocation(line: 178, column: 17, scope: !7778)
!7780 = !DILocation(line: 178, column: 34, scope: !7778)
!7781 = !DILocation(line: 178, column: 9, scope: !7588)
!7782 = !DILocation(line: 182, column: 9, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7588, file: !2011, line: 182, column: 9)
!7784 = !DILocation(line: 182, column: 15, scope: !7783)
!7785 = !DILocation(line: 182, column: 28, scope: !7783)
!7786 = !DILocation(line: 182, column: 31, scope: !7783)
!7787 = !DILocation(line: 182, column: 46, scope: !7783)
!7788 = !DILocation(line: 182, column: 9, scope: !7588)
!7789 = !DILocation(line: 183, column: 21, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7783, file: !2011, line: 182, column: 59)
!7791 = !DILocation(line: 184, column: 25, scope: !7790)
!7792 = !DILocation(line: 184, column: 23, scope: !7790)
!7793 = !DILocation(line: 185, column: 9, scope: !7790)
!7794 = !DILocation(line: 186, column: 9, scope: !7790)
!7795 = !DILocation(line: 190, column: 23, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7588, file: !2011, line: 190, column: 9)
!7797 = !{!7798, !2477, i64 280}
!7798 = !{!"_ZTSN6Cicada16Sim800CommDeviceE", !2477, i64 280}
!7799 = !DILocation(line: 190, column: 9, scope: !7796)
!7800 = !DILocation(line: 190, column: 9, scope: !7588)
!7801 = !DILocation(line: 191, column: 21, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7796, file: !2011, line: 190, column: 38)
!7803 = !DILocation(line: 192, column: 25, scope: !7802)
!7804 = !DILocation(line: 192, column: 23, scope: !7802)
!7805 = !DILocation(line: 193, column: 9, scope: !7802)
!7806 = !DILocation(line: 197, column: 13, scope: !7588)
!7807 = !DILocation(line: 197, column: 5, scope: !7588)
!7808 = !DILocation(line: 199, column: 9, scope: !7600)
!7809 = !DILocation(line: 200, column: 9, scope: !7600)
!7810 = !DILocation(line: 200, column: 23, scope: !7600)
!7811 = !DILocation(line: 201, column: 9, scope: !7600)
!7812 = !DILocation(line: 202, column: 9, scope: !7600)
!7813 = !DILocation(line: 205, column: 9, scope: !7600)
!7814 = !DILocation(line: 206, column: 9, scope: !7600)
!7815 = !DILocation(line: 206, column: 23, scope: !7600)
!7816 = !DILocation(line: 207, column: 24, scope: !7600)
!7817 = !DILocation(line: 208, column: 25, scope: !7600)
!7818 = !DILocation(line: 208, column: 23, scope: !7600)
!7819 = !DILocation(line: 209, column: 20, scope: !7600)
!7820 = !DILocation(line: 210, column: 9, scope: !7600)
!7821 = !DILocation(line: 211, column: 9, scope: !7600)
!7822 = !DILocation(line: 214, column: 25, scope: !7600)
!7823 = !DILocation(line: 214, column: 23, scope: !7600)
!7824 = !DILocation(line: 215, column: 20, scope: !7600)
!7825 = !DILocation(line: 216, column: 9, scope: !7600)
!7826 = !DILocation(line: 217, column: 9, scope: !7600)
!7827 = !DILocation(line: 220, column: 25, scope: !7600)
!7828 = !DILocation(line: 220, column: 23, scope: !7600)
!7829 = !DILocation(line: 221, column: 20, scope: !7600)
!7830 = !DILocation(line: 222, column: 9, scope: !7600)
!7831 = !DILocation(line: 223, column: 9, scope: !7600)
!7832 = !DILocation(line: 226, column: 9, scope: !7599)
!7833 = !DILocation(line: 226, column: 20, scope: !7599)
!7834 = !DILocation(line: 227, column: 9, scope: !7599)
!7835 = !DILocation(line: 227, column: 17, scope: !7599)
!7836 = !DILocation(line: 228, column: 9, scope: !7599)
!7837 = !DILocation(line: 228, column: 39, scope: !7599)
!7838 = !DILocation(line: 228, column: 17, scope: !7599)
!7839 = !DILocation(line: 229, column: 9, scope: !7599)
!7840 = !DILocation(line: 229, column: 39, scope: !7599)
!7841 = !DILocation(line: 229, column: 17, scope: !7599)
!7842 = !DILocation(line: 231, column: 25, scope: !7599)
!7843 = !DILocation(line: 231, column: 23, scope: !7599)
!7844 = !DILocation(line: 232, column: 20, scope: !7599)
!7845 = !DILocation(line: 234, column: 5, scope: !7600)
!7846 = !DILocation(line: 237, column: 25, scope: !7600)
!7847 = !DILocation(line: 237, column: 23, scope: !7600)
!7848 = !DILocation(line: 238, column: 20, scope: !7600)
!7849 = !DILocation(line: 239, column: 9, scope: !7600)
!7850 = !DILocation(line: 240, column: 9, scope: !7600)
!7851 = !DILocation(line: 243, column: 13, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7602, file: !2011, line: 243, column: 13)
!7853 = !DILocation(line: 243, column: 13, scope: !7602)
!7854 = !DILocation(line: 246, column: 9, scope: !7602)
!7855 = !DILocation(line: 246, column: 20, scope: !7602)
!7856 = !DILocation(line: 247, column: 9, scope: !7602)
!7857 = !DILocation(line: 247, column: 17, scope: !7602)
!7858 = !DILocation(line: 248, column: 9, scope: !7602)
!7859 = !DILocation(line: 248, column: 39, scope: !7602)
!7860 = !DILocation(line: 248, column: 17, scope: !7602)
!7861 = !DILocation(line: 250, column: 21, scope: !7602)
!7862 = !DILocation(line: 251, column: 20, scope: !7602)
!7863 = !DILocation(line: 253, column: 5, scope: !7600)
!7864 = !DILocation(line: 256, column: 28, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7600, file: !2011, line: 256, column: 13)
!7866 = !DILocation(line: 256, column: 13, scope: !7600)
!7867 = !DILocation(line: 257, column: 25, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7865, file: !2011, line: 256, column: 44)
!7869 = !DILocation(line: 258, column: 29, scope: !7868)
!7870 = !DILocation(line: 258, column: 27, scope: !7868)
!7871 = !DILocation(line: 259, column: 24, scope: !7868)
!7872 = !DILocation(line: 260, column: 9, scope: !7868)
!7873 = !DILocation(line: 264, column: 9, scope: !7607)
!7874 = !DILocation(line: 264, column: 14, scope: !7607)
!7875 = !DILocation(line: 265, column: 50, scope: !7607)
!7876 = !DILocation(line: 265, column: 9, scope: !7607)
!7877 = !DILocation(line: 267, column: 9, scope: !7607)
!7878 = !DILocation(line: 267, column: 17, scope: !7607)
!7879 = !DILocation(line: 268, column: 13, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7607, file: !2011, line: 268, column: 13)
!7881 = !DILocation(line: 268, column: 19, scope: !7880)
!7882 = !DILocation(line: 0, scope: !7880)
!7883 = !DILocation(line: 273, column: 9, scope: !7607)
!7884 = !DILocation(line: 273, column: 39, scope: !7607)
!7885 = !DILocation(line: 273, column: 17, scope: !7607)
!7886 = !DILocation(line: 274, column: 9, scope: !7607)
!7887 = !DILocation(line: 274, column: 17, scope: !7607)
!7888 = !DILocation(line: 275, column: 9, scope: !7607)
!7889 = !DILocation(line: 275, column: 17, scope: !7607)
!7890 = !DILocation(line: 276, column: 9, scope: !7607)
!7891 = !DILocation(line: 276, column: 39, scope: !7607)
!7892 = !DILocation(line: 276, column: 17, scope: !7607)
!7893 = !DILocation(line: 278, column: 21, scope: !7607)
!7894 = !DILocation(line: 279, column: 23, scope: !7607)
!7895 = !DILocation(line: 280, column: 20, scope: !7607)
!7896 = !DILocation(line: 282, column: 5, scope: !7600)
!7897 = !DILocation(line: 285, column: 9, scope: !7600)
!7898 = !DILocation(line: 286, column: 9, scope: !7600)
!7899 = !DILocation(line: 286, column: 23, scope: !7600)
!7900 = !DILocation(line: 287, column: 21, scope: !7600)
!7901 = !DILocation(line: 288, column: 20, scope: !7600)
!7902 = !DILocation(line: 289, column: 24, scope: !7600)
!7903 = !DILocation(line: 290, column: 9, scope: !7600)
!7904 = !DILocation(line: 293, column: 13, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7600, file: !2011, line: 293, column: 13)
!7906 = !DILocation(line: 293, column: 26, scope: !7905)
!7907 = !DILocation(line: 293, column: 13, scope: !7600)
!7908 = !DILocation(line: 294, column: 17, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7910, file: !2011, line: 294, column: 17)
!7910 = distinct !DILexicalBlock(scope: !7905, file: !2011, line: 293, column: 44)
!7911 = !DILocation(line: 294, column: 17, scope: !7910)
!7912 = !DILocation(line: 295, column: 17, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7909, file: !2011, line: 294, column: 39)
!7914 = !DILocation(line: 295, column: 47, scope: !7913)
!7915 = !DILocation(line: 295, column: 25, scope: !7913)
!7916 = !DILocation(line: 296, column: 17, scope: !7913)
!7917 = !DILocation(line: 296, column: 31, scope: !7913)
!7918 = !DILocation(line: 297, column: 28, scope: !7913)
!7919 = !DILocation(line: 298, column: 13, scope: !7913)
!7920 = !DILocation(line: 299, column: 20, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7905, file: !2011, line: 299, column: 20)
!7922 = !DILocation(line: 299, column: 35, scope: !7921)
!7923 = !DILocation(line: 299, column: 20, scope: !7905)
!7924 = !DILocation(line: 300, column: 28, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7921, file: !2011, line: 299, column: 51)
!7926 = !DILocation(line: 301, column: 13, scope: !7925)
!7927 = !DILocation(line: 301, column: 27, scope: !7925)
!7928 = !DILocation(line: 302, column: 24, scope: !7925)
!7929 = !DILocation(line: 303, column: 9, scope: !7925)
!7930 = !DILocation(line: 304, column: 13, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7921, file: !2011, line: 303, column: 16)
!7932 = !DILocation(line: 304, column: 27, scope: !7931)
!7933 = !DILocation(line: 305, column: 13, scope: !7931)
!7934 = !DILocation(line: 312, column: 24, scope: !7600)
!7935 = !DILocation(line: 313, column: 23, scope: !7600)
!7936 = !DILocation(line: 314, column: 20, scope: !7600)
!7937 = !DILocation(line: 315, column: 9, scope: !7600)
!7938 = !DILocation(line: 318, column: 25, scope: !7600)
!7939 = !DILocation(line: 318, column: 23, scope: !7600)
!7940 = !DILocation(line: 319, column: 20, scope: !7600)
!7941 = !DILocation(line: 320, column: 21, scope: !7600)
!7942 = !DILocation(line: 321, column: 9, scope: !7600)
!7943 = !DILocation(line: 322, column: 9, scope: !7600)
!7944 = !DILocation(line: 325, column: 13, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7600, file: !2011, line: 325, column: 13)
!7946 = !DILocation(line: 325, column: 13, scope: !7600)
!7947 = !DILocation(line: 328, column: 13, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7600, file: !2011, line: 328, column: 13)
!7949 = !DILocation(line: 328, column: 29, scope: !7948)
!7950 = !DILocation(line: 328, column: 13, scope: !7600)
!7951 = !DILocation(line: 329, column: 32, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7953, file: !2011, line: 329, column: 17)
!7953 = distinct !DILexicalBlock(scope: !7948, file: !2011, line: 328, column: 34)
!7954 = !DILocation(line: 329, column: 17, scope: !7953)
!7955 = !DILocation(line: 330, column: 28, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !7952, file: !2011, line: 329, column: 49)
!7957 = !DILocation(line: 331, column: 29, scope: !7956)
!7958 = !DILocation(line: 332, column: 13, scope: !7956)
!7959 = !DILocation(line: 333, column: 20, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7948, file: !2011, line: 333, column: 20)
!7961 = !DILocation(line: 333, column: 35, scope: !7960)
!7962 = !DILocation(line: 333, column: 20, scope: !7948)
!7963 = !DILocation(line: 334, column: 24, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7960, file: !2011, line: 333, column: 51)
!7965 = !DILocation(line: 335, column: 9, scope: !7964)
!7966 = !DILocation(line: 336, column: 24, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7960, file: !2011, line: 335, column: 16)
!7968 = !DILocation(line: 345, column: 13, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7600, file: !2011, line: 345, column: 13)
!7970 = !DILocation(line: 345, column: 26, scope: !7969)
!7971 = !DILocation(line: 345, column: 13, scope: !7600)
!7972 = !DILocation(line: 346, column: 17, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7974, file: !2011, line: 346, column: 17)
!7974 = distinct !DILexicalBlock(scope: !7969, file: !2011, line: 345, column: 31)
!7975 = !DILocation(line: 346, column: 17, scope: !7974)
!7976 = !DILocation(line: 347, column: 29, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7973, file: !2011, line: 346, column: 28)
!7978 = !DILocation(line: 348, column: 33, scope: !7977)
!7979 = !DILocation(line: 348, column: 31, scope: !7977)
!7980 = !DILocation(line: 349, column: 13, scope: !7977)
!7981 = !DILocation(line: 350, column: 20, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7969, file: !2011, line: 350, column: 20)
!7983 = !DILocation(line: 350, column: 36, scope: !7982)
!7984 = !DILocation(line: 350, column: 20, scope: !7969)
!7985 = !DILocation(line: 351, column: 24, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7982, file: !2011, line: 350, column: 41)
!7987 = !DILocation(line: 352, column: 9, scope: !7986)
!7988 = !DILocation(line: 353, column: 24, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7982, file: !2011, line: 352, column: 16)
!7990 = !DILocation(line: 358, column: 9, scope: !7600)
!7991 = !DILocation(line: 358, column: 23, scope: !7600)
!7992 = !DILocation(line: 360, column: 13, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7600, file: !2011, line: 360, column: 13)
!7994 = !DILocation(line: 360, column: 13, scope: !7600)
!7995 = !DILocation(line: 363, column: 9, scope: !7600)
!7996 = !DILocation(line: 364, column: 9, scope: !7600)
!7997 = !DILocation(line: 367, column: 9, scope: !7600)
!7998 = !DILocation(line: 367, column: 23, scope: !7600)
!7999 = !DILocation(line: 368, column: 13, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7600, file: !2011, line: 368, column: 13)
!8001 = !DILocation(line: 368, column: 28, scope: !8000)
!8002 = !DILocation(line: 368, column: 13, scope: !7600)
!8003 = !DILocation(line: 369, column: 27, scope: !8004)
!8004 = distinct !DILexicalBlock(scope: !8000, file: !2011, line: 368, column: 44)
!8005 = !DILocation(line: 370, column: 24, scope: !8004)
!8006 = !DILocation(line: 371, column: 13, scope: !8004)
!8007 = !DILocation(line: 372, column: 9, scope: !8004)
!8008 = !DILocation(line: 373, column: 24, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !8000, file: !2011, line: 372, column: 16)
!8010 = !DILocation(line: 378, column: 9, scope: !7600)
!8011 = !DILocation(line: 378, column: 23, scope: !7600)
!8012 = !DILocation(line: 379, column: 23, scope: !7600)
!8013 = !DILocation(line: 380, column: 20, scope: !7600)
!8014 = !DILocation(line: 381, column: 9, scope: !7600)
!8015 = !DILocation(line: 382, column: 9, scope: !7600)
!8016 = !DILocation(line: 385, column: 24, scope: !7600)
!8017 = !DILocation(line: 386, column: 9, scope: !7600)
!8018 = !DILocation(line: 386, column: 23, scope: !7600)
!8019 = !DILocation(line: 387, column: 20, scope: !7600)
!8020 = !DILocation(line: 388, column: 9, scope: !7600)
!8021 = !DILocation(line: 393, column: 1, scope: !7588)
!8022 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada16Sim800CommDeviceD1Ev", scope: !1841, file: !1841, line: 37, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !121)
!8023 = !DILocation(line: 0, scope: !8022)
!8024 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada16Sim800CommDeviceD0Ev", scope: !1841, file: !1841, line: 37, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !121)
!8025 = !DILocation(line: 0, scope: !8024)
!8026 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada16Sim800CommDevice3runEv", scope: !2011, file: !2011, line: 48, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !121)
!8027 = !DILocation(line: 0, scope: !8026)
!8028 = distinct !DISubprogram(name: "Sim800CommDevice", linkageName: "_ZN6Cicada16Sim800CommDeviceC2ERNS_15IBufferedSerialEPhS3_y", scope: !2014, file: !2011, line: 34, type: !2019, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, declaration: !2018, retainedNodes: !8029)
!8029 = !{!8030, !8031, !8032, !8033, !8034}
!8030 = !DILocalVariable(name: "this", arg: 1, scope: !8028, type: !7585, flags: DIFlagArtificial | DIFlagObjectPointer)
!8031 = !DILocalVariable(name: "serial", arg: 2, scope: !8028, file: !2011, line: 35, type: !958)
!8032 = !DILocalVariable(name: "readBuffer", arg: 3, scope: !8028, file: !2011, line: 35, type: !44)
!8033 = !DILocalVariable(name: "writeBuffer", arg: 4, scope: !8028, file: !2011, line: 35, type: !44)
!8034 = !DILocalVariable(name: "bufferSize", arg: 5, scope: !8028, file: !2011, line: 35, type: !872)
!8035 = !DILocation(line: 0, scope: !8028)
!8036 = !DILocation(line: 37, column: 1, scope: !8028)
!8037 = !DILocation(line: 36, column: 5, scope: !8028)
!8038 = !DILocation(line: 142, column: 17, scope: !8039)
!8039 = !DILexicalBlockFile(scope: !8028, file: !1841, discriminator: 0)
!8040 = !DILocation(line: 38, column: 5, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8042, file: !2011, line: 37, column: 1)
!8042 = !DILexicalBlockFile(scope: !8028, file: !2011, discriminator: 0)
!8043 = !DILocation(line: 38, column: 26, scope: !8041)
!8044 = !DILocation(line: 39, column: 1, scope: !8042)
!8045 = distinct !DISubprogram(name: "Sim800CommDevice", linkageName: "_ZN6Cicada16Sim800CommDeviceC2ERNS_15IBufferedSerialEPhS3_yy", scope: !2014, file: !2011, line: 41, type: !2023, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, declaration: !2022, retainedNodes: !8046)
!8046 = !{!8047, !8048, !8049, !8050, !8051, !8052}
!8047 = !DILocalVariable(name: "this", arg: 1, scope: !8045, type: !7585, flags: DIFlagArtificial | DIFlagObjectPointer)
!8048 = !DILocalVariable(name: "serial", arg: 2, scope: !8045, file: !2011, line: 41, type: !958)
!8049 = !DILocalVariable(name: "readBuffer", arg: 3, scope: !8045, file: !2011, line: 41, type: !44)
!8050 = !DILocalVariable(name: "writeBuffer", arg: 4, scope: !8045, file: !2011, line: 42, type: !44)
!8051 = !DILocalVariable(name: "readBufferSize", arg: 5, scope: !8045, file: !2011, line: 42, type: !872)
!8052 = !DILocalVariable(name: "writeBufferSize", arg: 6, scope: !8045, file: !2011, line: 42, type: !872)
!8053 = !DILocation(line: 0, scope: !8045)
!8054 = !DILocation(line: 44, column: 1, scope: !8045)
!8055 = !DILocation(line: 43, column: 5, scope: !8045)
!8056 = !DILocation(line: 142, column: 17, scope: !8057)
!8057 = !DILexicalBlockFile(scope: !8045, file: !1841, discriminator: 0)
!8058 = !DILocation(line: 45, column: 5, scope: !8059)
!8059 = distinct !DILexicalBlock(scope: !8060, file: !2011, line: 44, column: 1)
!8060 = !DILexicalBlockFile(scope: !8045, file: !2011, discriminator: 0)
!8061 = !DILocation(line: 45, column: 26, scope: !8059)
!8062 = !DILocation(line: 46, column: 1, scope: !8060)
!8063 = distinct !DISubprogram(name: "~EspressifDevice", linkageName: "_ZN6Cicada15EspressifDeviceD0Ev", scope: !2088, file: !1847, line: 46, type: !2105, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, declaration: !2104, retainedNodes: !8064)
!8064 = !{!8065}
!8065 = !DILocalVariable(name: "this", arg: 1, scope: !8063, type: !8066, flags: DIFlagArtificial | DIFlagObjectPointer)
!8066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 32)
!8067 = !DILocation(line: 0, scope: !8063)
!8068 = !DILocation(line: 46, column: 32, scope: !8063)
!8069 = !DILocation(line: 46, column: 33, scope: !8063)
!8070 = distinct !DISubprogram(name: "connect", linkageName: "_ZN6Cicada15EspressifDevice7connectEv", scope: !2088, file: !2085, line: 73, type: !2113, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, declaration: !2112, retainedNodes: !8071)
!8071 = !{!8072}
!8072 = !DILocalVariable(name: "this", arg: 1, scope: !8070, type: !8066, flags: DIFlagArtificial | DIFlagObjectPointer)
!8073 = !DILocation(line: 0, scope: !8070)
!8074 = !DILocation(line: 75, column: 9, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8070, file: !2085, line: 75, column: 9)
!8076 = !{!8077, !2477, i64 232}
!8077 = !{!"_ZTSN6Cicada15EspressifDeviceE", !2477, i64 232, !2477, i64 236, !2478, i64 240}
!8078 = !DILocation(line: 75, column: 15, scope: !8075)
!8079 = !DILocation(line: 75, column: 23, scope: !8075)
!8080 = !DILocation(line: 75, column: 45, scope: !8075)
!8081 = !DILocation(line: 75, column: 59, scope: !8075)
!8082 = !DILocation(line: 75, column: 9, scope: !8070)
!8083 = !DILocation(line: 79, column: 26, scope: !8070)
!8084 = !DILocation(line: 79, column: 5, scope: !8070)
!8085 = !DILocation(line: 80, column: 1, scope: !8070)
!8086 = distinct !DISubprogram(name: "resetStates", linkageName: "_ZN6Cicada15EspressifDevice11resetStatesEv", scope: !2088, file: !2085, line: 47, type: !2105, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, declaration: !2107, retainedNodes: !8087)
!8087 = !{!8088}
!8088 = !DILocalVariable(name: "this", arg: 1, scope: !8086, type: !8066, flags: DIFlagArtificial | DIFlagObjectPointer)
!8089 = !DILocation(line: 0, scope: !8086)
!8090 = !DILocation(line: 49, column: 5, scope: !8086)
!8091 = !DILocation(line: 49, column: 13, scope: !8086)
!8092 = !DILocation(line: 50, column: 5, scope: !8086)
!8093 = !DILocation(line: 50, column: 17, scope: !8086)
!8094 = !DILocation(line: 51, column: 5, scope: !8086)
!8095 = !DILocation(line: 51, column: 18, scope: !8086)
!8096 = !DILocation(line: 52, column: 5, scope: !8086)
!8097 = !DILocation(line: 55, column: 5, scope: !8086)
!8098 = !DILocation(line: 55, column: 19, scope: !8086)
!8099 = !DILocation(line: 59, column: 5, scope: !8086)
!8100 = !DILocation(line: 59, column: 19, scope: !8086)
!8101 = !DILocation(line: 60, column: 5, scope: !8086)
!8102 = !DILocation(line: 53, column: 16, scope: !8086)
!8103 = !DILocation(line: 60, column: 20, scope: !8086)
!8104 = !DILocation(line: 61, column: 1, scope: !8086)
!8105 = distinct !DISubprogram(name: "setSSID", linkageName: "_ZN6Cicada15EspressifDevice7setSSIDEPKc", scope: !2088, file: !2085, line: 63, type: !2109, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, declaration: !2108, retainedNodes: !8106)
!8106 = !{!8107, !8108}
!8107 = !DILocalVariable(name: "this", arg: 1, scope: !8105, type: !8066, flags: DIFlagArtificial | DIFlagObjectPointer)
!8108 = !DILocalVariable(name: "ssid", arg: 2, scope: !8105, file: !2085, line: 63, type: !266)
!8109 = !DILocation(line: 0, scope: !8105)
!8110 = !DILocation(line: 65, column: 5, scope: !8105)
!8111 = !DILocation(line: 65, column: 11, scope: !8105)
!8112 = !DILocation(line: 66, column: 1, scope: !8105)
!8113 = distinct !DISubprogram(name: "setPassword", linkageName: "_ZN6Cicada15EspressifDevice11setPasswordEPKc", scope: !2088, file: !2085, line: 68, type: !2109, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, declaration: !2111, retainedNodes: !8114)
!8114 = !{!8115, !8116}
!8115 = !DILocalVariable(name: "this", arg: 1, scope: !8113, type: !8066, flags: DIFlagArtificial | DIFlagObjectPointer)
!8116 = !DILocalVariable(name: "passwd", arg: 2, scope: !8113, file: !2085, line: 68, type: !266)
!8117 = !DILocation(line: 0, scope: !8113)
!8118 = !DILocation(line: 70, column: 5, scope: !8113)
!8119 = !DILocation(line: 70, column: 13, scope: !8113)
!8120 = !{!8077, !2477, i64 236}
!8121 = !DILocation(line: 71, column: 1, scope: !8113)
!8122 = distinct !DISubprogram(name: "run", linkageName: "_ZN6Cicada15EspressifDevice3runEv", scope: !2088, file: !2085, line: 169, type: !2105, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, declaration: !2119, retainedNodes: !8123)
!8123 = !{!8124, !8125, !8126, !8132, !8133, !8138}
!8124 = !DILocalVariable(name: "this", arg: 1, scope: !8122, type: !8066, flags: DIFlagArtificial | DIFlagObjectPointer)
!8125 = !DILocalVariable(name: "parseLine", scope: !8122, file: !2085, line: 203, type: !63)
!8126 = !DILocalVariable(name: "src", scope: !8127, file: !2085, line: 244, type: !308)
!8127 = distinct !DILexicalBlock(scope: !8128, file: !2085, line: 243, column: 65)
!8128 = distinct !DILexicalBlock(scope: !8129, file: !2085, line: 243, column: 17)
!8129 = distinct !DILexicalBlock(scope: !8130, file: !2085, line: 234, column: 30)
!8130 = distinct !DILexicalBlock(scope: !8131, file: !2085, line: 206, column: 20)
!8131 = distinct !DILexicalBlock(scope: !8122, file: !2085, line: 206, column: 9)
!8132 = !DILocalVariable(name: "copiedChars", scope: !8127, file: !2085, line: 245, type: !59)
!8133 = !DILocalVariable(name: "bytes", scope: !8134, file: !2085, line: 261, type: !59)
!8134 = distinct !DILexicalBlock(scope: !8135, file: !2085, line: 260, column: 56)
!8135 = distinct !DILexicalBlock(scope: !8136, file: !2085, line: 260, column: 17)
!8136 = distinct !DILexicalBlock(scope: !8137, file: !2085, line: 259, column: 38)
!8137 = distinct !DILexicalBlock(scope: !8130, file: !2085, line: 259, column: 13)
!8138 = !DILocalVariable(name: "portStr", scope: !8139, file: !2085, line: 357, type: !5432)
!8139 = distinct !DILexicalBlock(scope: !8140, file: !2085, line: 356, column: 24)
!8140 = distinct !DILexicalBlock(scope: !8122, file: !2085, line: 299, column: 25)
!8141 = !DILocation(line: 0, scope: !8122)
!8142 = !DILocation(line: 172, column: 10, scope: !8143)
!8143 = distinct !DILexicalBlock(scope: !8122, file: !2085, line: 172, column: 9)
!8144 = !DILocation(line: 172, column: 18, scope: !8143)
!8145 = !DILocation(line: 172, column: 9, scope: !8122)
!8146 = !DILocation(line: 173, column: 14, scope: !8147)
!8147 = distinct !DILexicalBlock(scope: !8148, file: !2085, line: 173, column: 13)
!8148 = distinct !DILexicalBlock(scope: !8143, file: !2085, line: 172, column: 28)
!8149 = !DILocation(line: 173, column: 22, scope: !8147)
!8150 = !DILocation(line: 173, column: 13, scope: !8148)
!8151 = !DILocation(line: 174, column: 13, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8147, file: !2085, line: 173, column: 30)
!8153 = !DILocation(line: 174, column: 24, scope: !8152)
!8154 = !DILocation(line: 175, column: 9, scope: !8152)
!8155 = !DILocation(line: 180, column: 9, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8122, file: !2085, line: 180, column: 9)
!8157 = !DILocation(line: 180, column: 24, scope: !8156)
!8158 = !DILocation(line: 180, column: 9, scope: !8122)
!8159 = !DILocation(line: 181, column: 9, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8156, file: !2085, line: 180, column: 41)
!8161 = !DILocation(line: 181, column: 17, scope: !8160)
!8162 = !DILocation(line: 182, column: 13, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8160, file: !2085, line: 182, column: 13)
!8164 = !DILocation(line: 182, column: 38, scope: !8163)
!8165 = !DILocation(line: 183, column: 18, scope: !8163)
!8166 = !DILocation(line: 183, column: 33, scope: !8163)
!8167 = !DILocation(line: 183, column: 17, scope: !8163)
!8168 = !DILocation(line: 182, column: 13, scope: !8160)
!8169 = !DILocation(line: 0, scope: !8163)
!8170 = !DILocation(line: 188, column: 24, scope: !8160)
!8171 = !DILocation(line: 191, column: 9, scope: !8160)
!8172 = !DILocation(line: 192, column: 9, scope: !8160)
!8173 = !DILocation(line: 190, column: 25, scope: !8160)
!8174 = !DILocation(line: 192, column: 17, scope: !8160)
!8175 = !DILocation(line: 193, column: 9, scope: !8160)
!8176 = !DILocation(line: 193, column: 39, scope: !8160)
!8177 = !DILocation(line: 193, column: 17, scope: !8160)
!8178 = !DILocation(line: 194, column: 9, scope: !8160)
!8179 = !DILocation(line: 194, column: 21, scope: !8160)
!8180 = !DILocation(line: 195, column: 9, scope: !8160)
!8181 = !DILocation(line: 195, column: 23, scope: !8160)
!8182 = !DILocation(line: 197, column: 9, scope: !8160)
!8183 = !DILocation(line: 199, column: 9, scope: !8160)
!8184 = !DILocation(line: 203, column: 22, scope: !8122)
!8185 = !DILocation(line: 206, column: 9, scope: !8122)
!8186 = !DILocation(line: 209, column: 19, scope: !8130)
!8187 = !DILocation(line: 209, column: 31, scope: !8130)
!8188 = !DILocation(line: 209, column: 9, scope: !8130)
!8189 = !DILocation(line: 212, column: 21, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8130, file: !2085, line: 212, column: 13)
!8191 = !DILocation(line: 212, column: 13, scope: !8190)
!8192 = !DILocation(line: 212, column: 46, scope: !8190)
!8193 = !DILocation(line: 213, column: 13, scope: !8190)
!8194 = !DILocation(line: 214, column: 17, scope: !8190)
!8195 = !DILocation(line: 215, column: 13, scope: !8190)
!8196 = !DILocation(line: 215, column: 16, scope: !8190)
!8197 = !DILocation(line: 215, column: 59, scope: !8190)
!8198 = !DILocation(line: 212, column: 13, scope: !8130)
!8199 = !DILocation(line: 216, column: 28, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8190, file: !2085, line: 215, column: 66)
!8201 = !DILocation(line: 217, column: 13, scope: !8200)
!8202 = !DILocation(line: 217, column: 27, scope: !8200)
!8203 = !DILocation(line: 218, column: 13, scope: !8200)
!8204 = !DILocation(line: 218, column: 27, scope: !8200)
!8205 = !DILocation(line: 219, column: 13, scope: !8200)
!8206 = !DILocation(line: 220, column: 31, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8190, file: !2085, line: 220, column: 20)
!8208 = !DILocation(line: 220, column: 44, scope: !8207)
!8209 = !DILocation(line: 220, column: 47, scope: !8207)
!8210 = !DILocation(line: 220, column: 84, scope: !8207)
!8211 = !DILocation(line: 220, column: 20, scope: !8190)
!8212 = !DILocation(line: 221, column: 13, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8207, file: !2085, line: 220, column: 90)
!8214 = !DILocation(line: 221, column: 27, scope: !8213)
!8215 = !DILocation(line: 222, column: 24, scope: !8213)
!8216 = !DILocation(line: 223, column: 13, scope: !8213)
!8217 = !DILocation(line: 223, column: 27, scope: !8213)
!8218 = !DILocation(line: 224, column: 9, scope: !8213)
!8219 = !DILocation(line: 227, column: 13, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8130, file: !2085, line: 227, column: 13)
!8221 = !DILocation(line: 227, column: 13, scope: !8130)
!8222 = !DILocation(line: 228, column: 53, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8224, file: !2085, line: 228, column: 17)
!8224 = distinct !DILexicalBlock(scope: !8220, file: !2085, line: 227, column: 28)
!8225 = !DILocation(line: 228, column: 17, scope: !8223)
!8226 = !DILocation(line: 228, column: 76, scope: !8223)
!8227 = !DILocation(line: 228, column: 17, scope: !8224)
!8228 = !DILocation(line: 229, column: 31, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8223, file: !2085, line: 228, column: 82)
!8230 = !DILocation(line: 230, column: 13, scope: !8229)
!8231 = !DILocation(line: 234, column: 17, scope: !8130)
!8232 = !DILocation(line: 234, column: 9, scope: !8130)
!8233 = !DILocation(line: 236, column: 17, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8129, file: !2085, line: 236, column: 17)
!8235 = !DILocation(line: 236, column: 17, scope: !8129)
!8236 = !DILocation(line: 237, column: 29, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !8234, file: !2085, line: 236, column: 37)
!8238 = !DILocation(line: 238, column: 28, scope: !8237)
!8239 = !DILocation(line: 239, column: 13, scope: !8237)
!8240 = !DILocation(line: 243, column: 17, scope: !8128)
!8241 = !DILocation(line: 243, column: 59, scope: !8128)
!8242 = !DILocation(line: 243, column: 17, scope: !8129)
!8243 = !DILocation(line: 244, column: 41, scope: !8127)
!8244 = !DILocation(line: 0, scope: !8127)
!8245 = !DILocation(line: 246, column: 24, scope: !8127)
!8246 = !DILocation(line: 246, column: 29, scope: !8127)
!8247 = !DILocation(line: 246, column: 17, scope: !8127)
!8248 = !DILocation(line: 247, column: 59, scope: !8249)
!8249 = distinct !DILexicalBlock(scope: !8127, file: !2085, line: 246, column: 80)
!8250 = !DILocation(line: 247, column: 49, scope: !8249)
!8251 = !DILocation(line: 247, column: 21, scope: !8249)
!8252 = !DILocation(line: 247, column: 53, scope: !8249)
!8253 = !DILocation(line: 246, column: 37, scope: !8127)
!8254 = distinct !{!8254, !8247, !8255, !2694, !2695}
!8255 = !DILocation(line: 248, column: 17, scope: !8127)
!8256 = !DILocation(line: 249, column: 17, scope: !8127)
!8257 = !DILocation(line: 249, column: 47, scope: !8127)
!8258 = !DILocation(line: 250, column: 29, scope: !8127)
!8259 = !DILocation(line: 251, column: 13, scope: !8127)
!8260 = !DILocation(line: 259, column: 13, scope: !8137)
!8261 = !DILocation(line: 259, column: 24, scope: !8137)
!8262 = !DILocation(line: 259, column: 13, scope: !8130)
!8263 = !DILocation(line: 260, column: 17, scope: !8135)
!8264 = !DILocation(line: 260, column: 17, scope: !8136)
!8265 = !DILocation(line: 261, column: 17, scope: !8134)
!8266 = !DILocation(line: 262, column: 36, scope: !8134)
!8267 = !DILocation(line: 0, scope: !8134)
!8268 = !DILocation(line: 262, column: 17, scope: !8134)
!8269 = !DILocation(line: 263, column: 21, scope: !8270)
!8270 = distinct !DILexicalBlock(scope: !8134, file: !2085, line: 263, column: 21)
!8271 = !DILocation(line: 263, column: 27, scope: !8270)
!8272 = !DILocation(line: 0, scope: !8270)
!8273 = !DILocation(line: 263, column: 21, scope: !8134)
!8274 = !DILocation(line: 264, column: 21, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8270, file: !2085, line: 263, column: 50)
!8276 = !DILocation(line: 264, column: 37, scope: !8275)
!8277 = !DILocation(line: 265, column: 17, scope: !8275)
!8278 = !DILocation(line: 266, column: 21, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8270, file: !2085, line: 265, column: 24)
!8280 = !DILocation(line: 266, column: 34, scope: !8279)
!8281 = !DILocation(line: 267, column: 36, scope: !8279)
!8282 = !DILocation(line: 269, column: 32, scope: !8134)
!8283 = !DILocation(line: 270, column: 13, scope: !8135)
!8284 = !DILocation(line: 270, column: 13, scope: !8134)
!8285 = !DILocation(line: 270, column: 24, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8135, file: !2085, line: 270, column: 24)
!8287 = !DILocation(line: 270, column: 58, scope: !8286)
!8288 = !DILocation(line: 270, column: 24, scope: !8135)
!8289 = !DILocation(line: 271, column: 32, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8286, file: !2085, line: 270, column: 64)
!8291 = !DILocation(line: 272, column: 13, scope: !8290)
!8292 = !DILocation(line: 277, column: 15, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8131, file: !2085, line: 277, column: 14)
!8294 = !DILocation(line: 277, column: 30, scope: !8293)
!8295 = !DILocation(line: 277, column: 14, scope: !8293)
!8296 = !DILocation(line: 277, column: 52, scope: !8293)
!8297 = !DILocation(line: 278, column: 9, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8293, file: !2085, line: 277, column: 80)
!8299 = !DILocation(line: 279, column: 5, scope: !8298)
!8300 = !DILocation(line: 282, column: 9, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8122, file: !2085, line: 282, column: 9)
!8302 = !DILocation(line: 282, column: 23, scope: !8301)
!8303 = !DILocation(line: 282, column: 26, scope: !8301)
!8304 = !DILocation(line: 282, column: 38, scope: !8301)
!8305 = !DILocation(line: 282, column: 9, scope: !8122)
!8306 = !DILocation(line: 286, column: 9, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8122, file: !2085, line: 286, column: 9)
!8308 = !DILocation(line: 286, column: 17, scope: !8307)
!8309 = !DILocation(line: 286, column: 34, scope: !8307)
!8310 = !DILocation(line: 286, column: 9, scope: !8122)
!8311 = !DILocation(line: 290, column: 9, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8122, file: !2085, line: 290, column: 9)
!8313 = !DILocation(line: 290, column: 29, scope: !8312)
!8314 = !DILocation(line: 290, column: 37, scope: !8312)
!8315 = !DILocation(line: 290, column: 71, scope: !8312)
!8316 = !DILocation(line: 290, column: 86, scope: !8312)
!8317 = !DILocation(line: 290, column: 9, scope: !8122)
!8318 = !DILocation(line: 291, column: 29, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8312, file: !2085, line: 290, column: 99)
!8320 = !DILocation(line: 292, column: 9, scope: !8319)
!8321 = !DILocation(line: 293, column: 21, scope: !8319)
!8322 = !DILocation(line: 294, column: 25, scope: !8319)
!8323 = !DILocation(line: 294, column: 23, scope: !8319)
!8324 = !DILocation(line: 295, column: 9, scope: !8319)
!8325 = !DILocation(line: 299, column: 13, scope: !8122)
!8326 = !DILocation(line: 299, column: 5, scope: !8122)
!8327 = !DILocation(line: 301, column: 9, scope: !8140)
!8328 = !DILocation(line: 302, column: 9, scope: !8140)
!8329 = !DILocation(line: 302, column: 23, scope: !8140)
!8330 = !DILocation(line: 303, column: 9, scope: !8140)
!8331 = !DILocation(line: 304, column: 9, scope: !8140)
!8332 = !DILocation(line: 307, column: 9, scope: !8140)
!8333 = !DILocation(line: 308, column: 9, scope: !8140)
!8334 = !DILocation(line: 308, column: 23, scope: !8140)
!8335 = !DILocation(line: 309, column: 24, scope: !8140)
!8336 = !DILocation(line: 310, column: 9, scope: !8140)
!8337 = !DILocation(line: 311, column: 25, scope: !8140)
!8338 = !DILocation(line: 311, column: 23, scope: !8140)
!8339 = !DILocation(line: 312, column: 20, scope: !8140)
!8340 = !DILocation(line: 313, column: 9, scope: !8140)
!8341 = !DILocation(line: 316, column: 9, scope: !8140)
!8342 = !DILocation(line: 316, column: 17, scope: !8140)
!8343 = !DILocation(line: 317, column: 9, scope: !8140)
!8344 = !DILocation(line: 317, column: 39, scope: !8140)
!8345 = !DILocation(line: 317, column: 17, scope: !8140)
!8346 = !DILocation(line: 319, column: 25, scope: !8140)
!8347 = !DILocation(line: 319, column: 23, scope: !8140)
!8348 = !DILocation(line: 320, column: 20, scope: !8140)
!8349 = !DILocation(line: 321, column: 9, scope: !8140)
!8350 = !DILocation(line: 324, column: 9, scope: !8140)
!8351 = !DILocation(line: 324, column: 17, scope: !8140)
!8352 = !DILocation(line: 325, column: 9, scope: !8140)
!8353 = !DILocation(line: 325, column: 39, scope: !8140)
!8354 = !DILocation(line: 325, column: 46, scope: !8140)
!8355 = !DILocation(line: 325, column: 17, scope: !8140)
!8356 = !DILocation(line: 326, column: 9, scope: !8140)
!8357 = !DILocation(line: 326, column: 17, scope: !8140)
!8358 = !DILocation(line: 327, column: 9, scope: !8140)
!8359 = !DILocation(line: 327, column: 39, scope: !8140)
!8360 = !DILocation(line: 327, column: 48, scope: !8140)
!8361 = !DILocation(line: 327, column: 17, scope: !8140)
!8362 = !DILocation(line: 328, column: 9, scope: !8140)
!8363 = !DILocation(line: 328, column: 39, scope: !8140)
!8364 = !DILocation(line: 328, column: 17, scope: !8140)
!8365 = !DILocation(line: 330, column: 25, scope: !8140)
!8366 = !DILocation(line: 330, column: 23, scope: !8140)
!8367 = !DILocation(line: 331, column: 20, scope: !8140)
!8368 = !DILocation(line: 332, column: 9, scope: !8140)
!8369 = !DILocation(line: 335, column: 25, scope: !8140)
!8370 = !DILocation(line: 335, column: 23, scope: !8140)
!8371 = !DILocation(line: 336, column: 20, scope: !8140)
!8372 = !DILocation(line: 337, column: 9, scope: !8140)
!8373 = !DILocation(line: 338, column: 9, scope: !8140)
!8374 = !DILocation(line: 341, column: 25, scope: !8140)
!8375 = !DILocation(line: 341, column: 23, scope: !8140)
!8376 = !DILocation(line: 342, column: 20, scope: !8140)
!8377 = !DILocation(line: 343, column: 13, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8140, file: !2085, line: 343, column: 13)
!8379 = !DILocation(line: 343, column: 19, scope: !8378)
!8380 = !DILocation(line: 343, column: 13, scope: !8140)
!8381 = !DILocation(line: 344, column: 13, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8378, file: !2085, line: 343, column: 27)
!8383 = !DILocation(line: 345, column: 9, scope: !8382)
!8384 = !DILocation(line: 346, column: 13, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8378, file: !2085, line: 345, column: 16)
!8386 = !DILocation(line: 351, column: 25, scope: !8140)
!8387 = !DILocation(line: 351, column: 23, scope: !8140)
!8388 = !DILocation(line: 352, column: 20, scope: !8140)
!8389 = !DILocation(line: 353, column: 9, scope: !8140)
!8390 = !DILocation(line: 354, column: 9, scope: !8140)
!8391 = !DILocation(line: 357, column: 9, scope: !8139)
!8392 = !DILocation(line: 357, column: 14, scope: !8139)
!8393 = !DILocation(line: 358, column: 50, scope: !8139)
!8394 = !DILocation(line: 358, column: 9, scope: !8139)
!8395 = !DILocation(line: 360, column: 9, scope: !8139)
!8396 = !DILocation(line: 360, column: 17, scope: !8139)
!8397 = !DILocation(line: 361, column: 13, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8139, file: !2085, line: 361, column: 13)
!8399 = !DILocation(line: 361, column: 19, scope: !8398)
!8400 = !DILocation(line: 0, scope: !8398)
!8401 = !DILocation(line: 367, column: 9, scope: !8139)
!8402 = !DILocation(line: 367, column: 39, scope: !8139)
!8403 = !DILocation(line: 367, column: 17, scope: !8139)
!8404 = !DILocation(line: 368, column: 9, scope: !8139)
!8405 = !DILocation(line: 368, column: 17, scope: !8139)
!8406 = !DILocation(line: 369, column: 9, scope: !8139)
!8407 = !DILocation(line: 369, column: 17, scope: !8139)
!8408 = !DILocation(line: 370, column: 9, scope: !8139)
!8409 = !DILocation(line: 370, column: 39, scope: !8139)
!8410 = !DILocation(line: 370, column: 17, scope: !8139)
!8411 = !DILocation(line: 372, column: 25, scope: !8139)
!8412 = !DILocation(line: 372, column: 23, scope: !8139)
!8413 = !DILocation(line: 373, column: 20, scope: !8139)
!8414 = !DILocation(line: 375, column: 5, scope: !8140)
!8415 = !DILocation(line: 378, column: 9, scope: !8140)
!8416 = !DILocation(line: 379, column: 9, scope: !8140)
!8417 = !DILocation(line: 379, column: 23, scope: !8140)
!8418 = !DILocation(line: 380, column: 20, scope: !8140)
!8419 = !DILocation(line: 381, column: 24, scope: !8140)
!8420 = !DILocation(line: 382, column: 9, scope: !8140)
!8421 = !DILocation(line: 385, column: 13, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8140, file: !2085, line: 385, column: 13)
!8423 = !DILocation(line: 385, column: 26, scope: !8422)
!8424 = !DILocation(line: 385, column: 13, scope: !8140)
!8425 = !DILocation(line: 386, column: 17, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8427, file: !2085, line: 386, column: 17)
!8427 = distinct !DILexicalBlock(scope: !8422, file: !2085, line: 385, column: 44)
!8428 = !DILocation(line: 386, column: 17, scope: !8427)
!8429 = !DILocation(line: 387, column: 17, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8426, file: !2085, line: 386, column: 40)
!8431 = !DILocation(line: 387, column: 47, scope: !8430)
!8432 = !DILocation(line: 387, column: 25, scope: !8430)
!8433 = !DILocation(line: 388, column: 17, scope: !8430)
!8434 = !DILocation(line: 388, column: 31, scope: !8430)
!8435 = !DILocation(line: 389, column: 28, scope: !8430)
!8436 = !DILocation(line: 390, column: 13, scope: !8430)
!8437 = !DILocation(line: 391, column: 20, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8422, file: !2085, line: 391, column: 20)
!8439 = !DILocation(line: 391, column: 35, scope: !8438)
!8440 = !DILocation(line: 391, column: 20, scope: !8422)
!8441 = !DILocation(line: 392, column: 28, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8438, file: !2085, line: 391, column: 51)
!8443 = !DILocation(line: 393, column: 13, scope: !8442)
!8444 = !DILocation(line: 393, column: 27, scope: !8442)
!8445 = !DILocation(line: 394, column: 17, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8442, file: !2085, line: 394, column: 17)
!8447 = !DILocation(line: 394, column: 23, scope: !8446)
!8448 = !DILocation(line: 394, column: 17, scope: !8442)
!8449 = !DILocation(line: 395, column: 28, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8446, file: !2085, line: 394, column: 46)
!8451 = !DILocation(line: 396, column: 13, scope: !8450)
!8452 = !DILocation(line: 397, column: 28, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8446, file: !2085, line: 396, column: 20)
!8454 = !DILocation(line: 400, column: 13, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8438, file: !2085, line: 399, column: 16)
!8456 = !DILocation(line: 400, column: 27, scope: !8455)
!8457 = !DILocation(line: 401, column: 32, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8455, file: !2085, line: 401, column: 17)
!8459 = !DILocation(line: 401, column: 17, scope: !8458)
!8460 = !DILocation(line: 401, column: 17, scope: !8455)
!8461 = !DILocation(line: 402, column: 21, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8463, file: !2085, line: 402, column: 21)
!8463 = distinct !DILexicalBlock(scope: !8458, file: !2085, line: 401, column: 48)
!8464 = !DILocation(line: 402, column: 21, scope: !8463)
!8465 = !DILocation(line: 403, column: 21, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !8462, file: !2085, line: 402, column: 53)
!8467 = !DILocation(line: 404, column: 17, scope: !8466)
!8468 = !DILocation(line: 406, column: 17, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8458, file: !2085, line: 405, column: 20)
!8470 = !DILocation(line: 414, column: 9, scope: !8140)
!8471 = !DILocation(line: 415, column: 23, scope: !8140)
!8472 = !DILocation(line: 416, column: 20, scope: !8140)
!8473 = !DILocation(line: 417, column: 9, scope: !8140)
!8474 = !DILocation(line: 420, column: 13, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8140, file: !2085, line: 420, column: 13)
!8476 = !DILocation(line: 420, column: 13, scope: !8140)
!8477 = !DILocation(line: 421, column: 13, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8475, file: !2085, line: 420, column: 45)
!8479 = !DILocation(line: 422, column: 13, scope: !8478)
!8480 = !DILocation(line: 425, column: 13, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8140, file: !2085, line: 425, column: 13)
!8482 = !DILocation(line: 425, column: 29, scope: !8481)
!8483 = !DILocation(line: 425, column: 13, scope: !8140)
!8484 = !DILocation(line: 426, column: 17, scope: !8485)
!8485 = distinct !DILexicalBlock(scope: !8486, file: !2085, line: 426, column: 17)
!8486 = distinct !DILexicalBlock(scope: !8481, file: !2085, line: 425, column: 34)
!8487 = !DILocation(line: 426, column: 17, scope: !8486)
!8488 = !DILocation(line: 427, column: 28, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8485, file: !2085, line: 426, column: 35)
!8490 = !DILocation(line: 428, column: 29, scope: !8489)
!8491 = !DILocation(line: 429, column: 13, scope: !8489)
!8492 = !DILocation(line: 431, column: 24, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8481, file: !2085, line: 430, column: 16)
!8494 = !DILocation(line: 440, column: 13, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8140, file: !2085, line: 440, column: 13)
!8496 = !DILocation(line: 440, column: 26, scope: !8495)
!8497 = !DILocation(line: 440, column: 13, scope: !8140)
!8498 = !DILocation(line: 441, column: 17, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8500, file: !2085, line: 441, column: 17)
!8500 = distinct !DILexicalBlock(scope: !8495, file: !2085, line: 440, column: 31)
!8501 = !DILocation(line: 441, column: 27, scope: !8499)
!8502 = !DILocation(line: 442, column: 29, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8499, file: !2085, line: 441, column: 59)
!8504 = !DILocation(line: 443, column: 33, scope: !8503)
!8505 = !DILocation(line: 443, column: 31, scope: !8503)
!8506 = !DILocation(line: 444, column: 13, scope: !8503)
!8507 = !DILocation(line: 445, column: 20, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8495, file: !2085, line: 445, column: 20)
!8509 = !DILocation(line: 445, column: 36, scope: !8508)
!8510 = !DILocation(line: 445, column: 20, scope: !8495)
!8511 = !DILocation(line: 446, column: 24, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8508, file: !2085, line: 445, column: 41)
!8513 = !DILocation(line: 447, column: 9, scope: !8512)
!8514 = !DILocation(line: 448, column: 24, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8508, file: !2085, line: 447, column: 16)
!8516 = !DILocation(line: 453, column: 9, scope: !8140)
!8517 = !DILocation(line: 454, column: 9, scope: !8140)
!8518 = !DILocation(line: 454, column: 23, scope: !8140)
!8519 = !DILocation(line: 455, column: 13, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8140, file: !2085, line: 455, column: 13)
!8521 = !DILocation(line: 455, column: 28, scope: !8520)
!8522 = !DILocation(line: 455, column: 13, scope: !8140)
!8523 = !DILocation(line: 456, column: 29, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8520, file: !2085, line: 455, column: 44)
!8525 = !DILocation(line: 456, column: 27, scope: !8524)
!8526 = !DILocation(line: 457, column: 13, scope: !8524)
!8527 = !DILocation(line: 458, column: 9, scope: !8524)
!8528 = !DILocation(line: 459, column: 20, scope: !8140)
!8529 = !DILocation(line: 460, column: 9, scope: !8140)
!8530 = !DILocation(line: 463, column: 9, scope: !8140)
!8531 = !DILocation(line: 463, column: 23, scope: !8140)
!8532 = !DILocation(line: 464, column: 23, scope: !8140)
!8533 = !DILocation(line: 465, column: 20, scope: !8140)
!8534 = !DILocation(line: 466, column: 9, scope: !8140)
!8535 = !DILocation(line: 467, column: 9, scope: !8140)
!8536 = !DILocation(line: 470, column: 24, scope: !8140)
!8537 = !DILocation(line: 471, column: 9, scope: !8140)
!8538 = !DILocation(line: 471, column: 23, scope: !8140)
!8539 = !DILocation(line: 472, column: 20, scope: !8140)
!8540 = !DILocation(line: 473, column: 9, scope: !8140)
!8541 = !DILocation(line: 478, column: 1, scope: !8122)
!8542 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada15EspressifDeviceD1Ev", scope: !1847, file: !1847, line: 46, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !121)
!8543 = !DILocation(line: 0, scope: !8542)
!8544 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada15EspressifDeviceD0Ev", scope: !1847, file: !1847, line: 46, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !121)
!8545 = !DILocation(line: 0, scope: !8544)
!8546 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada15EspressifDevice3runEv", scope: !2085, file: !2085, line: 169, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !121)
!8547 = !DILocation(line: 0, scope: !8546)
!8548 = distinct !DISubprogram(name: "fillLineBuffer", linkageName: "_ZN6Cicada15EspressifDevice14fillLineBufferEv", scope: !2088, file: !2085, line: 82, type: !2113, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, declaration: !2120, retainedNodes: !8549)
!8549 = !{!8550, !8551}
!8550 = !DILocalVariable(name: "this", arg: 1, scope: !8548, type: !8066, flags: DIFlagArtificial | DIFlagObjectPointer)
!8551 = !DILocalVariable(name: "c", scope: !8552, file: !2085, line: 88, type: !130)
!8552 = distinct !DILexicalBlock(scope: !8553, file: !2085, line: 87, column: 42)
!8553 = distinct !DILexicalBlock(scope: !8554, file: !2085, line: 86, column: 37)
!8554 = distinct !DILexicalBlock(scope: !8548, file: !2085, line: 86, column: 9)
!8555 = !DILocation(line: 0, scope: !8548)
!8556 = !DILocation(line: 86, column: 9, scope: !8554)
!8557 = !DILocation(line: 86, column: 24, scope: !8554)
!8558 = !DILocation(line: 86, column: 9, scope: !8548)
!8559 = !DILocation(line: 87, column: 16, scope: !8553)
!8560 = !DILocation(line: 87, column: 24, scope: !8553)
!8561 = !DILocation(line: 87, column: 9, scope: !8553)
!8562 = !DILocation(line: 88, column: 22, scope: !8552)
!8563 = !DILocation(line: 88, column: 30, scope: !8552)
!8564 = !DILocation(line: 0, scope: !8552)
!8565 = !DILocation(line: 89, column: 32, scope: !8552)
!8566 = !DILocation(line: 89, column: 13, scope: !8552)
!8567 = !DILocation(line: 89, column: 36, scope: !8552)
!8568 = !DILocation(line: 90, column: 27, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8552, file: !2085, line: 90, column: 17)
!8570 = !DILocation(line: 91, column: 21, scope: !8569)
!8571 = !DILocation(line: 91, column: 27, scope: !8569)
!8572 = !DILocation(line: 91, column: 34, scope: !8569)
!8573 = !DILocation(line: 91, column: 37, scope: !8569)
!8574 = !DILocation(line: 91, column: 49, scope: !8569)
!8575 = !DILocation(line: 92, column: 17, scope: !8569)
!8576 = !DILocation(line: 92, column: 32, scope: !8569)
!8577 = !DILocation(line: 92, column: 42, scope: !8569)
!8578 = !DILocation(line: 93, column: 20, scope: !8569)
!8579 = !DILocation(line: 93, column: 28, scope: !8569)
!8580 = !DILocation(line: 90, column: 17, scope: !8552)
!8581 = !DILocation(line: 94, column: 29, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8569, file: !2085, line: 93, column: 48)
!8583 = !DILocation(line: 98, column: 17, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !8552, file: !2085, line: 98, column: 17)
!8585 = !DILocation(line: 98, column: 29, scope: !8584)
!8586 = !DILocation(line: 98, column: 17, scope: !8552)
!8587 = !DILocation(line: 101, column: 35, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8589, file: !2085, line: 100, column: 21)
!8589 = distinct !DILexicalBlock(scope: !8584, file: !2085, line: 98, column: 49)
!8590 = !DILocation(line: 101, column: 38, scope: !8588)
!8591 = !DILocation(line: 101, column: 80, scope: !8588)
!8592 = !DILocation(line: 102, column: 25, scope: !8588)
!8593 = !DILocation(line: 102, column: 31, scope: !8588)
!8594 = !DILocation(line: 102, column: 38, scope: !8588)
!8595 = !DILocation(line: 102, column: 41, scope: !8588)
!8596 = !DILocation(line: 102, column: 83, scope: !8588)
!8597 = !DILocation(line: 100, column: 21, scope: !8589)
!8598 = !DILocation(line: 103, column: 33, scope: !8599)
!8599 = distinct !DILexicalBlock(scope: !8588, file: !2085, line: 102, column: 91)
!8600 = !DILocation(line: 112, column: 1, scope: !8548)
!8601 = distinct !DISubprogram(name: "parseCiprecvdata", linkageName: "_ZN6Cicada15EspressifDevice16parseCiprecvdataEv", scope: !2088, file: !2085, line: 139, type: !2113, scopeLine: 140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, declaration: !2122, retainedNodes: !8602)
!8602 = !{!8603, !8604}
!8603 = !DILocalVariable(name: "this", arg: 1, scope: !8601, type: !8066, flags: DIFlagArtificial | DIFlagObjectPointer)
!8604 = !DILocalVariable(name: "bytesToRead", scope: !8605, file: !2085, line: 142, type: !59)
!8605 = distinct !DILexicalBlock(scope: !8606, file: !2085, line: 141, column: 56)
!8606 = distinct !DILexicalBlock(scope: !8601, file: !2085, line: 141, column: 9)
!8607 = !DILocation(line: 0, scope: !8601)
!8608 = !DILocation(line: 141, column: 17, scope: !8606)
!8609 = !DILocation(line: 141, column: 9, scope: !8606)
!8610 = !DILocation(line: 141, column: 50, scope: !8606)
!8611 = !DILocation(line: 141, column: 9, scope: !8601)
!8612 = !DILocation(line: 142, column: 9, scope: !8605)
!8613 = !DILocation(line: 143, column: 28, scope: !8605)
!8614 = !DILocation(line: 0, scope: !8605)
!8615 = !DILocation(line: 143, column: 9, scope: !8605)
!8616 = !DILocation(line: 144, column: 28, scope: !8605)
!8617 = !DILocation(line: 144, column: 9, scope: !8605)
!8618 = !DILocation(line: 144, column: 25, scope: !8605)
!8619 = !DILocation(line: 145, column: 9, scope: !8605)
!8620 = !DILocation(line: 145, column: 22, scope: !8605)
!8621 = !DILocation(line: 146, column: 9, scope: !8605)
!8622 = !DILocation(line: 146, column: 24, scope: !8605)
!8623 = !DILocation(line: 148, column: 5, scope: !8606)
!8624 = !DILocation(line: 151, column: 1, scope: !8601)
!8625 = distinct !DISubprogram(name: "sendCiprcvdata", linkageName: "_ZN6Cicada15EspressifDevice14sendCiprcvdataEv", scope: !2088, file: !2085, line: 114, type: !2113, scopeLine: 115, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, declaration: !2121, retainedNodes: !8626)
!8626 = !{!8627, !8628, !8631}
!8627 = !DILocalVariable(name: "this", arg: 1, scope: !8625, type: !8066, flags: DIFlagArtificial | DIFlagObjectPointer)
!8628 = !DILocalVariable(name: "bytesToReceive", scope: !8629, file: !2085, line: 119, type: !872)
!8629 = distinct !DILexicalBlock(scope: !8630, file: !2085, line: 117, column: 46)
!8630 = distinct !DILexicalBlock(scope: !8625, file: !2085, line: 116, column: 9)
!8631 = !DILocalVariable(name: "sizeStr", scope: !8629, file: !2085, line: 128, type: !5432)
!8632 = !DILocation(line: 0, scope: !8625)
!8633 = !DILocation(line: 116, column: 9, scope: !8630)
!8634 = !DILocation(line: 116, column: 17, scope: !8630)
!8635 = !DILocation(line: 116, column: 36, scope: !8630)
!8636 = !DILocation(line: 116, column: 44, scope: !8630)
!8637 = !DILocation(line: 116, column: 34, scope: !8630)
!8638 = !DILocation(line: 116, column: 61, scope: !8630)
!8639 = !DILocation(line: 117, column: 9, scope: !8630)
!8640 = !DILocation(line: 117, column: 12, scope: !8630)
!8641 = !DILocation(line: 117, column: 24, scope: !8630)
!8642 = !DILocation(line: 117, column: 41, scope: !8630)
!8643 = !DILocation(line: 116, column: 9, scope: !8625)
!8644 = !DILocation(line: 119, column: 31, scope: !8629)
!8645 = !DILocation(line: 119, column: 39, scope: !8629)
!8646 = !DILocation(line: 119, column: 58, scope: !8629)
!8647 = !DILocation(line: 119, column: 66, scope: !8629)
!8648 = !DILocation(line: 119, column: 56, scope: !8629)
!8649 = !DILocation(line: 119, column: 83, scope: !8629)
!8650 = !DILocation(line: 0, scope: !8629)
!8651 = !DILocation(line: 120, column: 30, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8629, file: !2085, line: 120, column: 13)
!8653 = !DILocation(line: 120, column: 28, scope: !8652)
!8654 = !DILocation(line: 120, column: 13, scope: !8629)
!8655 = !DILocation(line: 123, column: 42, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8629, file: !2085, line: 123, column: 13)
!8657 = !DILocation(line: 123, column: 28, scope: !8656)
!8658 = !DILocation(line: 123, column: 13, scope: !8629)
!8659 = !DILocation(line: 124, column: 42, scope: !8656)
!8660 = !DILocation(line: 124, column: 13, scope: !8656)
!8661 = !DILocation(line: 125, column: 13, scope: !8629)
!8662 = !DILocation(line: 128, column: 9, scope: !8629)
!8663 = !DILocation(line: 128, column: 14, scope: !8629)
!8664 = !DILocation(line: 129, column: 46, scope: !8629)
!8665 = !DILocation(line: 129, column: 9, scope: !8629)
!8666 = !DILocation(line: 130, column: 9, scope: !8629)
!8667 = !DILocation(line: 130, column: 17, scope: !8629)
!8668 = !DILocation(line: 131, column: 9, scope: !8629)
!8669 = !DILocation(line: 131, column: 17, scope: !8629)
!8670 = !DILocation(line: 132, column: 9, scope: !8629)
!8671 = !DILocation(line: 132, column: 39, scope: !8629)
!8672 = !DILocation(line: 132, column: 17, scope: !8629)
!8673 = !DILocation(line: 134, column: 5, scope: !8630)
!8674 = !DILocation(line: 0, scope: !8630)
!8675 = !DILocation(line: 137, column: 1, scope: !8625)
!8676 = distinct !DISubprogram(name: "EspressifDevice", linkageName: "_ZN6Cicada15EspressifDeviceC2ERNS_15IBufferedSerialEPhS3_y", scope: !2088, file: !2085, line: 33, type: !2098, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, declaration: !2097, retainedNodes: !8677)
!8677 = !{!8678, !8679, !8680, !8681, !8682}
!8678 = !DILocalVariable(name: "this", arg: 1, scope: !8676, type: !8066, flags: DIFlagArtificial | DIFlagObjectPointer)
!8679 = !DILocalVariable(name: "serial", arg: 2, scope: !8676, file: !2085, line: 34, type: !958)
!8680 = !DILocalVariable(name: "readBuffer", arg: 3, scope: !8676, file: !2085, line: 34, type: !44)
!8681 = !DILocalVariable(name: "writeBuffer", arg: 4, scope: !8676, file: !2085, line: 34, type: !44)
!8682 = !DILocalVariable(name: "bufferSize", arg: 5, scope: !8676, file: !2085, line: 34, type: !872)
!8683 = !DILocation(line: 0, scope: !8676)
!8684 = !DILocation(line: 36, column: 1, scope: !8676)
!8685 = !DILocation(line: 35, column: 5, scope: !8676)
!8686 = !DILocation(line: 37, column: 5, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8676, file: !2085, line: 36, column: 1)
!8688 = !DILocation(line: 38, column: 1, scope: !8676)
!8689 = distinct !DISubprogram(name: "EspressifDevice", linkageName: "_ZN6Cicada15EspressifDeviceC2ERNS_15IBufferedSerialEPhS3_yy", scope: !2088, file: !2085, line: 40, type: !2102, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, declaration: !2101, retainedNodes: !8690)
!8690 = !{!8691, !8692, !8693, !8694, !8695, !8696}
!8691 = !DILocalVariable(name: "this", arg: 1, scope: !8689, type: !8066, flags: DIFlagArtificial | DIFlagObjectPointer)
!8692 = !DILocalVariable(name: "serial", arg: 2, scope: !8689, file: !2085, line: 40, type: !958)
!8693 = !DILocalVariable(name: "readBuffer", arg: 3, scope: !8689, file: !2085, line: 40, type: !44)
!8694 = !DILocalVariable(name: "writeBuffer", arg: 4, scope: !8689, file: !2085, line: 40, type: !44)
!8695 = !DILocalVariable(name: "readBufferSize", arg: 5, scope: !8689, file: !2085, line: 41, type: !872)
!8696 = !DILocalVariable(name: "writeBufferSize", arg: 6, scope: !8689, file: !2085, line: 41, type: !872)
!8697 = !DILocation(line: 0, scope: !8689)
!8698 = !DILocation(line: 43, column: 1, scope: !8689)
!8699 = !DILocation(line: 42, column: 5, scope: !8689)
!8700 = !DILocation(line: 44, column: 5, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8689, file: !2085, line: 43, column: 1)
!8702 = !DILocation(line: 45, column: 1, scope: !8689)
!8703 = distinct !DISubprogram(name: "requestMac", linkageName: "_ZN6Cicada15EspressifDevice10requestMacEv", scope: !2088, file: !2085, line: 153, type: !2105, scopeLine: 154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, declaration: !2115, retainedNodes: !8704)
!8704 = !{!8705}
!8705 = !DILocalVariable(name: "this", arg: 1, scope: !8703, type: !8066, flags: DIFlagArtificial | DIFlagObjectPointer)
!8706 = !DILocation(line: 0, scope: !8703)
!8707 = !DILocation(line: 155, column: 5, scope: !8703)
!8708 = !DILocation(line: 155, column: 13, scope: !8703)
!8709 = !DILocation(line: 156, column: 5, scope: !8703)
!8710 = !DILocation(line: 156, column: 25, scope: !8703)
!8711 = !DILocation(line: 157, column: 5, scope: !8703)
!8712 = !DILocation(line: 157, column: 25, scope: !8703)
!8713 = !DILocation(line: 158, column: 1, scope: !8703)
!8714 = distinct !DISubprogram(name: "getMacString", linkageName: "_ZN6Cicada15EspressifDevice12getMacStringEv", scope: !2088, file: !2085, line: 160, type: !2117, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, declaration: !2116, retainedNodes: !8715)
!8715 = !{!8716}
!8716 = !DILocalVariable(name: "this", arg: 1, scope: !8714, type: !8066, flags: DIFlagArtificial | DIFlagObjectPointer)
!8717 = !DILocation(line: 0, scope: !8714)
!8718 = !DILocation(line: 162, column: 9, scope: !8719)
!8719 = distinct !DILexicalBlock(scope: !8714, file: !2085, line: 162, column: 9)
!8720 = !DILocation(line: 162, column: 23, scope: !8719)
!8721 = !DILocation(line: 162, column: 31, scope: !8719)
!8722 = !DILocation(line: 167, column: 1, scope: !8714)
!8723 = distinct !DISubprogram(name: "~BufferedSerial", linkageName: "_ZN6Cicada14BufferedSerialD0Ev", scope: !2184, file: !822, line: 42, type: !2296, scopeLine: 42, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !8724, retainedNodes: !8725)
!8724 = !DISubprogram(name: "~BufferedSerial", scope: !2184, type: !2296, containingType: !2184, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!8725 = !{!8726}
!8726 = !DILocalVariable(name: "this", arg: 1, scope: !8723, type: !8727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 32)
!8728 = !DILocation(line: 0, scope: !8723)
!8729 = !DILocation(line: 42, column: 7, scope: !8723)
!8730 = distinct !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14BufferedSerial14bytesAvailableEv", scope: !2184, file: !2182, line: 39, type: !2271, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2270, retainedNodes: !8731)
!8731 = !{!8732, !8734}
!8732 = !DILocalVariable(name: "this", arg: 1, scope: !8730, type: !8733, flags: DIFlagArtificial | DIFlagObjectPointer)
!8733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 32)
!8734 = !DILocalVariable(name: "availableData", scope: !8730, file: !2182, line: 42, type: !872)
!8735 = !DILocation(line: 0, scope: !8730)
!8736 = !DILocation(line: 41, column: 5, scope: !8730)
!8737 = !DILocation(line: 42, column: 26, scope: !8730)
!8738 = !DILocation(line: 42, column: 38, scope: !8730)
!8739 = !DILocation(line: 43, column: 5, scope: !8730)
!8740 = !DILocation(line: 45, column: 5, scope: !8730)
!8741 = distinct !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14BufferedSerial14spaceAvailableEv", scope: !2184, file: !2182, line: 48, type: !2271, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2275, retainedNodes: !8742)
!8742 = !{!8743, !8744}
!8743 = !DILocalVariable(name: "this", arg: 1, scope: !8741, type: !8733, flags: DIFlagArtificial | DIFlagObjectPointer)
!8744 = !DILocalVariable(name: "spaceAvailable", scope: !8741, file: !2182, line: 51, type: !872)
!8745 = !DILocation(line: 0, scope: !8741)
!8746 = !DILocation(line: 50, column: 5, scope: !8741)
!8747 = !DILocation(line: 51, column: 27, scope: !8741)
!8748 = !DILocation(line: 51, column: 40, scope: !8741)
!8749 = !DILocation(line: 52, column: 5, scope: !8741)
!8750 = !DILocation(line: 54, column: 5, scope: !8741)
!8751 = distinct !DISubprogram(name: "read", linkageName: "_ZN6Cicada14BufferedSerial4readEPhy", scope: !2184, file: !2182, line: 57, type: !2277, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2276, retainedNodes: !8752)
!8752 = !{!8753, !8754, !8755, !8756, !8757}
!8753 = !DILocalVariable(name: "this", arg: 1, scope: !8751, type: !8727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8754 = !DILocalVariable(name: "data", arg: 2, scope: !8751, file: !2182, line: 57, type: !44)
!8755 = !DILocalVariable(name: "size", arg: 3, scope: !8751, file: !2182, line: 57, type: !872)
!8756 = !DILocalVariable(name: "avail", scope: !8751, file: !2182, line: 59, type: !872)
!8757 = !DILocalVariable(name: "readCount", scope: !8751, file: !2182, line: 63, type: !872)
!8758 = !DILocation(line: 0, scope: !8751)
!8759 = !DILocation(line: 59, column: 18, scope: !8751)
!8760 = !DILocation(line: 60, column: 14, scope: !8761)
!8761 = distinct !DILexicalBlock(scope: !8751, file: !2182, line: 60, column: 9)
!8762 = !DILocation(line: 60, column: 9, scope: !8751)
!8763 = !DILocation(line: 65, column: 22, scope: !8751)
!8764 = !DILocation(line: 65, column: 5, scope: !8751)
!8765 = !DILocation(line: 66, column: 29, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8751, file: !2182, line: 65, column: 30)
!8767 = !DILocation(line: 66, column: 23, scope: !8766)
!8768 = !DILocation(line: 66, column: 9, scope: !8766)
!8769 = !DILocation(line: 66, column: 27, scope: !8766)
!8770 = distinct !{!8770, !8764, !8771, !2694, !2695}
!8771 = !DILocation(line: 67, column: 5, scope: !8751)
!8772 = !DILocation(line: 69, column: 5, scope: !8751)
!8773 = distinct !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEPKhy", scope: !2184, file: !2182, line: 81, type: !2283, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2282, retainedNodes: !8774)
!8774 = !{!8775, !8776, !8777, !8778, !8779}
!8775 = !DILocalVariable(name: "this", arg: 1, scope: !8773, type: !8727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8776 = !DILocalVariable(name: "data", arg: 2, scope: !8773, file: !2182, line: 81, type: !943)
!8777 = !DILocalVariable(name: "size", arg: 3, scope: !8773, file: !2182, line: 81, type: !872)
!8778 = !DILocalVariable(name: "space", scope: !8773, file: !2182, line: 83, type: !872)
!8779 = !DILocalVariable(name: "writeCount", scope: !8773, file: !2182, line: 87, type: !872)
!8780 = !DILocation(line: 0, scope: !8773)
!8781 = !DILocation(line: 83, column: 18, scope: !8773)
!8782 = !DILocation(line: 84, column: 14, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8773, file: !2182, line: 84, column: 9)
!8784 = !DILocation(line: 84, column: 9, scope: !8773)
!8785 = !DILocation(line: 89, column: 23, scope: !8773)
!8786 = !DILocation(line: 89, column: 5, scope: !8773)
!8787 = !DILocation(line: 90, column: 37, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8773, file: !2182, line: 89, column: 31)
!8789 = !DILocation(line: 90, column: 22, scope: !8788)
!8790 = !DILocation(line: 90, column: 9, scope: !8788)
!8791 = distinct !{!8791, !8786, !8792, !2694, !2695}
!8792 = !DILocation(line: 91, column: 5, scope: !8773)
!8793 = !DILocation(line: 93, column: 5, scope: !8773)
!8794 = !DILocation(line: 95, column: 5, scope: !8773)
!8795 = distinct !DISubprogram(name: "read", linkageName: "_ZN6Cicada14BufferedSerial4readEv", scope: !2184, file: !2182, line: 72, type: !2280, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2279, retainedNodes: !8796)
!8796 = !{!8797, !8798}
!8797 = !DILocalVariable(name: "this", arg: 1, scope: !8795, type: !8727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8798 = !DILocalVariable(name: "c", scope: !8795, file: !2182, line: 75, type: !45)
!8799 = !DILocation(line: 0, scope: !8795)
!8800 = !DILocation(line: 74, column: 5, scope: !8795)
!8801 = !DILocation(line: 75, column: 17, scope: !8795)
!8802 = !DILocation(line: 75, column: 29, scope: !8795)
!8803 = !DILocation(line: 76, column: 5, scope: !8795)
!8804 = !DILocation(line: 78, column: 5, scope: !8795)
!8805 = distinct !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEPKh", scope: !2184, file: !2182, line: 98, type: !2286, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2285, retainedNodes: !8806)
!8806 = !{!8807, !8808, !8809, !8810}
!8807 = !DILocalVariable(name: "this", arg: 1, scope: !8805, type: !8727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8808 = !DILocalVariable(name: "data", arg: 2, scope: !8805, file: !2182, line: 98, type: !943)
!8809 = !DILocalVariable(name: "space", scope: !8805, file: !2182, line: 100, type: !872)
!8810 = !DILocalVariable(name: "writeCount", scope: !8805, file: !2182, line: 102, type: !872)
!8811 = !DILocation(line: 0, scope: !8805)
!8812 = !DILocation(line: 100, column: 18, scope: !8805)
!8813 = !DILocation(line: 104, column: 12, scope: !8805)
!8814 = !DILocation(line: 104, column: 29, scope: !8805)
!8815 = !DILocation(line: 104, column: 37, scope: !8805)
!8816 = !DILocation(line: 104, column: 5, scope: !8805)
!8817 = !DILocation(line: 105, column: 37, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8805, file: !2182, line: 104, column: 60)
!8819 = !DILocation(line: 105, column: 9, scope: !8818)
!8820 = distinct !{!8820, !8816, !8821, !2694, !2695}
!8821 = !DILocation(line: 106, column: 5, scope: !8805)
!8822 = !DILocation(line: 108, column: 5, scope: !8805)
!8823 = !DILocation(line: 110, column: 5, scope: !8805)
!8824 = distinct !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEh", scope: !2184, file: !2182, line: 113, type: !2289, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2288, retainedNodes: !8825)
!8825 = !{!8826, !8827}
!8826 = !DILocalVariable(name: "this", arg: 1, scope: !8824, type: !8727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8827 = !DILocalVariable(name: "data", arg: 2, scope: !8824, file: !2182, line: 113, type: !45)
!8828 = !DILocation(line: 0, scope: !8824)
!8829 = !DILocation(line: 115, column: 5, scope: !8824)
!8830 = !DILocation(line: 116, column: 5, scope: !8824)
!8831 = !DILocation(line: 117, column: 1, scope: !8824)
!8832 = distinct !DISubprogram(name: "canReadLine", linkageName: "_ZNK6Cicada14BufferedSerial11canReadLineEv", scope: !2184, file: !2182, line: 126, type: !2292, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2291, retainedNodes: !8833)
!8833 = !{!8834, !8835}
!8834 = !DILocalVariable(name: "this", arg: 1, scope: !8832, type: !8733, flags: DIFlagArtificial | DIFlagObjectPointer)
!8835 = !DILocalVariable(name: "lines", scope: !8832, file: !2182, line: 129, type: !872)
!8836 = !DILocation(line: 0, scope: !8832)
!8837 = !DILocation(line: 128, column: 5, scope: !8832)
!8838 = !DILocation(line: 129, column: 18, scope: !8832)
!8839 = !DILocation(line: 129, column: 30, scope: !8832)
!8840 = !DILocation(line: 130, column: 5, scope: !8832)
!8841 = !DILocation(line: 132, column: 18, scope: !8832)
!8842 = !DILocation(line: 132, column: 5, scope: !8832)
!8843 = distinct !DISubprogram(name: "readLine", linkageName: "_ZN6Cicada14BufferedSerial8readLineEPhy", scope: !2184, file: !2182, line: 135, type: !2277, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2294, retainedNodes: !8844)
!8844 = !{!8845, !8846, !8847, !8848, !8849}
!8845 = !DILocalVariable(name: "this", arg: 1, scope: !8843, type: !8727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8846 = !DILocalVariable(name: "data", arg: 2, scope: !8843, file: !2182, line: 135, type: !44)
!8847 = !DILocalVariable(name: "size", arg: 3, scope: !8843, file: !2182, line: 135, type: !872)
!8848 = !DILocalVariable(name: "readCount", scope: !8843, file: !2182, line: 137, type: !872)
!8849 = !DILocalVariable(name: "c", scope: !8843, file: !2182, line: 138, type: !45)
!8850 = !DILocation(line: 0, scope: !8843)
!8851 = !DILocation(line: 140, column: 14, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8843, file: !2182, line: 140, column: 9)
!8853 = !DILocation(line: 140, column: 9, scope: !8843)
!8854 = !DILocation(line: 143, column: 12, scope: !8843)
!8855 = !DILocation(line: 143, column: 5, scope: !8843)
!8856 = !DILocation(line: 144, column: 13, scope: !8857)
!8857 = distinct !DILexicalBlock(scope: !8843, file: !2182, line: 143, column: 43)
!8858 = !DILocation(line: 145, column: 23, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8857, file: !2182, line: 145, column: 13)
!8860 = !DILocation(line: 145, column: 13, scope: !8857)
!8861 = !DILocation(line: 146, column: 27, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8859, file: !2182, line: 145, column: 35)
!8863 = !DILocation(line: 146, column: 13, scope: !8862)
!8864 = !DILocation(line: 146, column: 31, scope: !8862)
!8865 = !DILocation(line: 147, column: 9, scope: !8862)
!8866 = !DILocation(line: 143, column: 29, scope: !8843)
!8867 = distinct !{!8867, !8855, !8868, !2694, !2695}
!8868 = !DILocation(line: 148, column: 5, scope: !8843)
!8869 = !DILocation(line: 149, column: 5, scope: !8843)
!8870 = !DILocation(line: 149, column: 21, scope: !8843)
!8871 = !DILocation(line: 151, column: 5, scope: !8843)
!8872 = !DILocation(line: 152, column: 1, scope: !8843)
!8873 = distinct !DISubprogram(name: "flushReceiveBuffers", linkageName: "_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv", scope: !2184, file: !2182, line: 154, type: !2296, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2295, retainedNodes: !8874)
!8874 = !{!8875}
!8875 = !DILocalVariable(name: "this", arg: 1, scope: !8873, type: !8727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8876 = !DILocation(line: 0, scope: !8873)
!8877 = !DILocation(line: 156, column: 5, scope: !8873)
!8878 = !DILocation(line: 157, column: 5, scope: !8873)
!8879 = !DILocation(line: 157, column: 17, scope: !8873)
!8880 = !DILocation(line: 158, column: 5, scope: !8873)
!8881 = !DILocation(line: 159, column: 1, scope: !8873)
!8882 = distinct !DISubprogram(name: "readBufferSize", linkageName: "_ZN6Cicada14BufferedSerial14readBufferSizeEv", scope: !2184, file: !2182, line: 161, type: !2299, scopeLine: 162, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2298, retainedNodes: !8883)
!8883 = !{!8884}
!8884 = !DILocalVariable(name: "this", arg: 1, scope: !8882, type: !8727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8885 = !DILocation(line: 0, scope: !8882)
!8886 = !DILocation(line: 163, column: 12, scope: !8882)
!8887 = !DILocation(line: 163, column: 24, scope: !8882)
!8888 = !DILocation(line: 163, column: 5, scope: !8882)
!8889 = distinct !DISubprogram(name: "writeBufferSize", linkageName: "_ZN6Cicada14BufferedSerial15writeBufferSizeEv", scope: !2184, file: !2182, line: 166, type: !2299, scopeLine: 167, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2301, retainedNodes: !8890)
!8890 = !{!8891}
!8891 = !DILocalVariable(name: "this", arg: 1, scope: !8889, type: !8727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8892 = !DILocation(line: 0, scope: !8889)
!8893 = !DILocation(line: 168, column: 12, scope: !8889)
!8894 = !DILocation(line: 168, column: 25, scope: !8889)
!8895 = !DILocation(line: 168, column: 5, scope: !8889)
!8896 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada14BufferedSerialD1Ev", scope: !822, file: !822, line: 42, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, retainedNodes: !121)
!8897 = !DILocation(line: 0, scope: !8896)
!8898 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada14BufferedSerialD0Ev", scope: !822, file: !822, line: 42, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, retainedNodes: !121)
!8899 = !DILocation(line: 0, scope: !8898)
!8900 = distinct !DISubprogram(name: "size", linkageName: "_ZNK6Cicada14CircularBufferIcE4sizeEv", scope: !2192, file: !1631, line: 190, type: !2227, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2230, retainedNodes: !8901)
!8901 = !{!8902}
!8902 = !DILocalVariable(name: "this", arg: 1, scope: !8900, type: !6947, flags: DIFlagArtificial | DIFlagObjectPointer)
!8903 = !DILocation(line: 0, scope: !8900)
!8904 = !DILocation(line: 192, column: 16, scope: !8900)
!8905 = !{!6951, !5292, i64 32}
!8906 = !DILocation(line: 192, column: 9, scope: !8900)
!8907 = distinct !DISubprogram(name: "flush", linkageName: "_ZN6Cicada18LineCircularBuffer5flushEv", scope: !2188, file: !2189, line: 123, type: !2260, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2259, retainedNodes: !8908)
!8908 = !{!8909}
!8909 = !DILocalVariable(name: "this", arg: 1, scope: !8907, type: !8910, flags: DIFlagArtificial | DIFlagObjectPointer)
!8910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 32)
!8911 = !DILocation(line: 0, scope: !8907)
!8912 = !DILocation(line: 125, column: 9, scope: !8907)
!8913 = !DILocation(line: 125, column: 24, scope: !8907)
!8914 = !{!8915, !2609, i64 44}
!8915 = !{!"_ZTSN6Cicada18LineCircularBufferE", !2609, i64 44}
!8916 = !DILocation(line: 126, column: 25, scope: !8907)
!8917 = !DILocation(line: 127, column: 5, scope: !8907)
!8918 = distinct !DISubprogram(name: "flush", linkageName: "_ZN6Cicada14CircularBufferIcE5flushEv", scope: !2192, file: !1631, line: 148, type: !2204, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2219, retainedNodes: !8919)
!8919 = !{!8920}
!8920 = !DILocalVariable(name: "this", arg: 1, scope: !8918, type: !6968, flags: DIFlagArtificial | DIFlagObjectPointer)
!8921 = !DILocation(line: 0, scope: !8918)
!8922 = !DILocation(line: 150, column: 9, scope: !8918)
!8923 = !DILocation(line: 153, column: 5, scope: !8918)
!8924 = !DILocation(line: 151, column: 19, scope: !8918)
!8925 = distinct !DISubprogram(name: "numBufferedLines", linkageName: "_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv", scope: !2188, file: !2189, line: 97, type: !2254, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2253, retainedNodes: !8926)
!8926 = !{!8927}
!8927 = !DILocalVariable(name: "this", arg: 1, scope: !8925, type: !8928, flags: DIFlagArtificial | DIFlagObjectPointer)
!8928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 32)
!8929 = !DILocation(line: 0, scope: !8925)
!8930 = !DILocation(line: 99, column: 16, scope: !8925)
!8931 = !DILocation(line: 99, column: 9, scope: !8925)
!8932 = distinct !DISubprogram(name: "copyToBuffer", linkageName: "_ZN6Cicada14BufferedSerial12copyToBufferEh", scope: !2184, file: !2182, line: 119, type: !2289, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2303, retainedNodes: !8933)
!8933 = !{!8934, !8935}
!8934 = !DILocalVariable(name: "this", arg: 1, scope: !8932, type: !8727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8935 = !DILocalVariable(name: "data", arg: 2, scope: !8932, file: !2182, line: 119, type: !45)
!8936 = !DILocation(line: 0, scope: !8932)
!8937 = !DILocation(line: 121, column: 5, scope: !8932)
!8938 = !DILocation(line: 122, column: 5, scope: !8932)
!8939 = !DILocation(line: 122, column: 18, scope: !8932)
!8940 = !DILocation(line: 123, column: 5, scope: !8932)
!8941 = !DILocation(line: 124, column: 1, scope: !8932)
!8942 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada18LineCircularBuffer4pushEc", scope: !2188, file: !2189, line: 60, type: !2245, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2244, retainedNodes: !8943)
!8943 = !{!8944, !8945}
!8944 = !DILocalVariable(name: "this", arg: 1, scope: !8942, type: !8910, flags: DIFlagArtificial | DIFlagObjectPointer)
!8945 = !DILocalVariable(name: "data", arg: 2, scope: !8942, file: !2189, line: 60, type: !130)
!8946 = !DILocation(line: 0, scope: !8942)
!8947 = !DILocation(line: 62, column: 31, scope: !8942)
!8948 = !DILocation(line: 64, column: 18, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8942, file: !2189, line: 64, column: 13)
!8950 = !DILocation(line: 64, column: 13, scope: !8942)
!8951 = !DILocation(line: 65, column: 13, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8949, file: !2189, line: 64, column: 27)
!8953 = !DILocation(line: 65, column: 27, scope: !8952)
!8954 = !DILocation(line: 66, column: 9, scope: !8952)
!8955 = !DILocation(line: 67, column: 5, scope: !8942)
!8956 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIcE4pushEc", scope: !2192, file: !1631, line: 88, type: !2210, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2209, retainedNodes: !8957)
!8957 = !{!8958, !8959}
!8958 = !DILocalVariable(name: "this", arg: 1, scope: !8956, type: !6968, flags: DIFlagArtificial | DIFlagObjectPointer)
!8959 = !DILocalVariable(name: "data", arg: 2, scope: !8956, file: !1631, line: 88, type: !130)
!8960 = !DILocation(line: 0, scope: !8956)
!8961 = !DILocation(line: 90, column: 9, scope: !8956)
!8962 = !{!6951, !2477, i64 40}
!8963 = !DILocation(line: 90, column: 17, scope: !8956)
!8964 = !{!6951, !5292, i64 8}
!8965 = !DILocation(line: 90, column: 29, scope: !8956)
!8966 = !DILocation(line: 91, column: 9, scope: !8956)
!8967 = !DILocation(line: 92, column: 13, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8956, file: !1631, line: 92, column: 13)
!8969 = !DILocation(line: 92, column: 30, scope: !8968)
!8970 = !DILocation(line: 92, column: 28, scope: !8968)
!8971 = !DILocation(line: 92, column: 13, scope: !8956)
!8972 = !DILocation(line: 93, column: 27, scope: !8968)
!8973 = !DILocation(line: 93, column: 13, scope: !8968)
!8974 = !DILocation(line: 94, column: 5, scope: !8956)
!8975 = distinct !DISubprogram(name: "incrementOrResetHead", linkageName: "_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy", scope: !2192, file: !1631, line: 202, type: !2232, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2231, retainedNodes: !8976)
!8976 = !{!8977, !8978}
!8977 = !DILocalVariable(name: "this", arg: 1, scope: !8975, type: !6968, flags: DIFlagArtificial | DIFlagObjectPointer)
!8978 = !DILocalVariable(name: "head", arg: 2, scope: !8975, file: !1631, line: 202, type: !1677)
!8979 = !DILocation(line: 0, scope: !8975)
!8980 = !DILocation(line: 204, column: 13, scope: !8975)
!8981 = !DILocation(line: 205, column: 21, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8975, file: !1631, line: 205, column: 13)
!8983 = !DILocation(line: 205, column: 18, scope: !8982)
!8984 = !DILocation(line: 205, column: 13, scope: !8975)
!8985 = !DILocation(line: 207, column: 5, scope: !8975)
!8986 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada18LineCircularBuffer4pullEv", scope: !2188, file: !2189, line: 83, type: !2251, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2250, retainedNodes: !8987)
!8987 = !{!8988, !8989}
!8988 = !DILocalVariable(name: "this", arg: 1, scope: !8986, type: !8910, flags: DIFlagArtificial | DIFlagObjectPointer)
!8989 = !DILocalVariable(name: "data", scope: !8986, file: !2189, line: 85, type: !130)
!8990 = !DILocation(line: 0, scope: !8986)
!8991 = !DILocation(line: 85, column: 43, scope: !8986)
!8992 = !DILocation(line: 87, column: 18, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8986, file: !2189, line: 87, column: 13)
!8994 = !DILocation(line: 87, column: 13, scope: !8986)
!8995 = !DILocation(line: 88, column: 13, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8993, file: !2189, line: 87, column: 27)
!8997 = !DILocation(line: 88, column: 27, scope: !8996)
!8998 = !DILocation(line: 89, column: 9, scope: !8996)
!8999 = !DILocation(line: 91, column: 9, scope: !8986)
!9000 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIcE4pullEv", scope: !2192, file: !1631, line: 124, type: !2216, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2215, retainedNodes: !9001)
!9001 = !{!9002, !9003}
!9002 = !DILocalVariable(name: "this", arg: 1, scope: !9000, type: !6968, flags: DIFlagArtificial | DIFlagObjectPointer)
!9003 = !DILocalVariable(name: "data", scope: !9000, file: !1631, line: 126, type: !130)
!9004 = !DILocation(line: 0, scope: !9000)
!9005 = !DILocation(line: 126, column: 18, scope: !9000)
!9006 = !DILocation(line: 126, column: 26, scope: !9000)
!9007 = !{!6951, !5292, i64 16}
!9008 = !DILocation(line: 127, column: 9, scope: !9000)
!9009 = !DILocation(line: 128, column: 13, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !9000, file: !1631, line: 128, column: 13)
!9011 = !DILocation(line: 128, column: 28, scope: !9010)
!9012 = !DILocation(line: 128, column: 13, scope: !9000)
!9013 = !DILocation(line: 129, column: 27, scope: !9010)
!9014 = !DILocation(line: 129, column: 13, scope: !9010)
!9015 = !DILocation(line: 131, column: 9, scope: !9000)
!9016 = distinct !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv", scope: !2192, file: !1631, line: 182, type: !2227, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2229, retainedNodes: !9017)
!9017 = !{!9018}
!9018 = !DILocalVariable(name: "this", arg: 1, scope: !9016, type: !6947, flags: DIFlagArtificial | DIFlagObjectPointer)
!9019 = !DILocation(line: 0, scope: !9016)
!9020 = !DILocation(line: 184, column: 16, scope: !9016)
!9021 = !DILocation(line: 184, column: 30, scope: !9016)
!9022 = !DILocation(line: 184, column: 28, scope: !9016)
!9023 = !DILocation(line: 184, column: 9, scope: !9016)
!9024 = distinct !DISubprogram(name: "BufferedSerial", linkageName: "_ZN6Cicada14BufferedSerialC2EPcS1_yy", scope: !2184, file: !2182, line: 30, type: !2264, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2263, retainedNodes: !9025)
!9025 = !{!9026, !9027, !9028, !9029, !9030}
!9026 = !DILocalVariable(name: "this", arg: 1, scope: !9024, type: !8727, flags: DIFlagArtificial | DIFlagObjectPointer)
!9027 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !9024, file: !2182, line: 31, type: !308)
!9028 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !9024, file: !2182, line: 31, type: !308)
!9029 = !DILocalVariable(name: "readBufferSize", arg: 4, scope: !9024, file: !2182, line: 31, type: !872)
!9030 = !DILocalVariable(name: "writeBufferSize", arg: 5, scope: !9024, file: !2182, line: 31, type: !872)
!9031 = !DILocation(line: 0, scope: !9024)
!9032 = !DILocation(line: 33, column: 1, scope: !9024)
!9033 = !DILocation(line: 30, column: 17, scope: !9024)
!9034 = !DILocation(line: 32, column: 5, scope: !9024)
!9035 = !DILocation(line: 32, column: 46, scope: !9024)
!9036 = !DILocation(line: 33, column: 2, scope: !9024)
!9037 = distinct !DISubprogram(name: "IBufferedSerial", linkageName: "_ZN6Cicada15IBufferedSerialC2Ev", scope: !959, file: !960, line: 39, type: !993, scopeLine: 39, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !9038, retainedNodes: !9039)
!9038 = !DISubprogram(name: "IBufferedSerial", scope: !959, type: !993, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9039 = !{!9040}
!9040 = !DILocalVariable(name: "this", arg: 1, scope: !9037, type: !6974, flags: DIFlagArtificial | DIFlagObjectPointer)
!9041 = !DILocation(line: 0, scope: !9037)
!9042 = !DILocation(line: 39, column: 7, scope: !9037)
!9043 = distinct !DISubprogram(name: "LineCircularBuffer", linkageName: "_ZN6Cicada18LineCircularBufferC2EPcy", scope: !2188, file: !2189, line: 41, type: !2238, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2237, retainedNodes: !9044)
!9044 = !{!9045, !9046, !9047}
!9045 = !DILocalVariable(name: "this", arg: 1, scope: !9043, type: !8910, flags: DIFlagArtificial | DIFlagObjectPointer)
!9046 = !DILocalVariable(name: "buffer", arg: 2, scope: !9043, file: !2189, line: 41, type: !308)
!9047 = !DILocalVariable(name: "bufferSize", arg: 3, scope: !9043, file: !2189, line: 41, type: !872)
!9048 = !DILocation(line: 0, scope: !9043)
!9049 = !DILocation(line: 44, column: 5, scope: !9043)
!9050 = !DILocation(line: 42, column: 9, scope: !9043)
!9051 = !DILocation(line: 43, column: 9, scope: !9043)
!9052 = !DILocation(line: 44, column: 7, scope: !9043)
!9053 = distinct !DISubprogram(name: "CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIcEC2EPcy", scope: !2192, file: !1631, line: 48, type: !2200, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2199, retainedNodes: !9054)
!9054 = !{!9055, !9056, !9057}
!9055 = !DILocalVariable(name: "this", arg: 1, scope: !9053, type: !6968, flags: DIFlagArtificial | DIFlagObjectPointer)
!9056 = !DILocalVariable(name: "buffer", arg: 2, scope: !9053, file: !1631, line: 48, type: !308)
!9057 = !DILocalVariable(name: "bufferSize", arg: 3, scope: !9053, file: !1631, line: 48, type: !872)
!9058 = !DILocation(line: 0, scope: !9053)
!9059 = !DILocation(line: 54, column: 5, scope: !9053)
!9060 = !DILocation(line: 49, column: 9, scope: !9053)
!9061 = !DILocation(line: 52, column: 9, scope: !9053)
!9062 = !DILocation(line: 50, column: 9, scope: !9053)
!9063 = !DILocation(line: 53, column: 9, scope: !9053)
!9064 = !DILocation(line: 54, column: 7, scope: !9053)
!9065 = distinct !DISubprogram(name: "~LineCircularBuffer", linkageName: "_ZN6Cicada18LineCircularBufferD0Ev", scope: !2188, file: !2189, line: 38, type: !2260, scopeLine: 38, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !9066, retainedNodes: !9067)
!9066 = !DISubprogram(name: "~LineCircularBuffer", scope: !2188, type: !2260, containingType: !2188, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!9067 = !{!9068}
!9068 = !DILocalVariable(name: "this", arg: 1, scope: !9065, type: !8910, flags: DIFlagArtificial | DIFlagObjectPointer)
!9069 = !DILocation(line: 0, scope: !9065)
!9070 = !DILocation(line: 38, column: 7, scope: !9065)
!9071 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada18LineCircularBuffer4pushEPKcy", scope: !2188, file: !2189, line: 46, type: !2242, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2241, retainedNodes: !9072)
!9072 = !{!9073, !9074, !9075, !9076}
!9073 = !DILocalVariable(name: "this", arg: 1, scope: !9071, type: !8910, flags: DIFlagArtificial | DIFlagObjectPointer)
!9074 = !DILocalVariable(name: "data", arg: 2, scope: !9071, file: !2189, line: 46, type: !266)
!9075 = !DILocalVariable(name: "size", arg: 3, scope: !9071, file: !2189, line: 46, type: !872)
!9076 = !DILocalVariable(name: "writeCount", scope: !9071, file: !2189, line: 51, type: !872)
!9077 = !DILocation(line: 0, scope: !9071)
!9078 = !DILocation(line: 48, column: 42, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9071, file: !2189, line: 48, column: 13)
!9080 = !DILocation(line: 48, column: 18, scope: !9079)
!9081 = !DILocation(line: 48, column: 13, scope: !9071)
!9082 = !DILocation(line: 49, column: 42, scope: !9079)
!9083 = !DILocation(line: 49, column: 13, scope: !9079)
!9084 = !DILocation(line: 53, column: 27, scope: !9071)
!9085 = !DILocation(line: 53, column: 9, scope: !9071)
!9086 = !DILocation(line: 54, column: 33, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9071, file: !2189, line: 53, column: 35)
!9088 = !DILocation(line: 54, column: 18, scope: !9087)
!9089 = !DILocation(line: 54, column: 13, scope: !9087)
!9090 = distinct !{!9090, !9085, !9091, !2694, !2695}
!9091 = !DILocation(line: 55, column: 9, scope: !9071)
!9092 = !DILocation(line: 57, column: 9, scope: !9071)
!9093 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada18LineCircularBuffer4pullEPcy", scope: !2188, file: !2189, line: 69, type: !2248, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2247, retainedNodes: !9094)
!9094 = !{!9095, !9096, !9097, !9098}
!9095 = !DILocalVariable(name: "this", arg: 1, scope: !9093, type: !8910, flags: DIFlagArtificial | DIFlagObjectPointer)
!9096 = !DILocalVariable(name: "data", arg: 2, scope: !9093, file: !2189, line: 69, type: !308)
!9097 = !DILocalVariable(name: "size", arg: 3, scope: !9093, file: !2189, line: 69, type: !872)
!9098 = !DILocalVariable(name: "readCount", scope: !9093, file: !2189, line: 74, type: !872)
!9099 = !DILocation(line: 0, scope: !9093)
!9100 = !DILocation(line: 71, column: 42, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9093, file: !2189, line: 71, column: 13)
!9102 = !DILocation(line: 71, column: 18, scope: !9101)
!9103 = !DILocation(line: 71, column: 13, scope: !9093)
!9104 = !DILocation(line: 72, column: 42, scope: !9101)
!9105 = !DILocation(line: 72, column: 13, scope: !9101)
!9106 = !DILocation(line: 76, column: 26, scope: !9093)
!9107 = !DILocation(line: 76, column: 9, scope: !9093)
!9108 = !DILocation(line: 77, column: 33, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9093, file: !2189, line: 76, column: 34)
!9110 = !DILocation(line: 77, column: 27, scope: !9109)
!9111 = !DILocation(line: 77, column: 13, scope: !9109)
!9112 = !DILocation(line: 77, column: 31, scope: !9109)
!9113 = distinct !{!9113, !9107, !9114, !2694, !2695}
!9114 = !DILocation(line: 78, column: 9, scope: !9093)
!9115 = !DILocation(line: 80, column: 9, scope: !9093)
!9116 = distinct !DISubprogram(name: "read", linkageName: "_ZN6Cicada14CircularBufferIcE4readEv", scope: !2192, file: !1631, line: 140, type: !2216, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2218, retainedNodes: !9117)
!9117 = !{!9118}
!9118 = !DILocalVariable(name: "this", arg: 1, scope: !9116, type: !6968, flags: DIFlagArtificial | DIFlagObjectPointer)
!9119 = !DILocation(line: 0, scope: !9116)
!9120 = !DILocation(line: 142, column: 16, scope: !9116)
!9121 = !DILocation(line: 142, column: 24, scope: !9116)
!9122 = !DILocation(line: 142, column: 9, scope: !9116)
!9123 = distinct !DISubprogram(name: "isEmpty", linkageName: "_ZNK6Cicada14CircularBufferIcE7isEmptyEv", scope: !2192, file: !1631, line: 158, type: !2221, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2220, retainedNodes: !9124)
!9124 = !{!9125}
!9125 = !DILocalVariable(name: "this", arg: 1, scope: !9123, type: !6947, flags: DIFlagArtificial | DIFlagObjectPointer)
!9126 = !DILocation(line: 0, scope: !9123)
!9127 = !DILocation(line: 160, column: 16, scope: !9123)
!9128 = !DILocation(line: 160, column: 31, scope: !9123)
!9129 = !DILocation(line: 160, column: 9, scope: !9123)
!9130 = distinct !DISubprogram(name: "isFull", linkageName: "_ZNK6Cicada14CircularBufferIcE6isFullEv", scope: !2192, file: !1631, line: 166, type: !2221, scopeLine: 167, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2225, retainedNodes: !9131)
!9131 = !{!9132}
!9132 = !DILocalVariable(name: "this", arg: 1, scope: !9130, type: !6947, flags: DIFlagArtificial | DIFlagObjectPointer)
!9133 = !DILocation(line: 0, scope: !9130)
!9134 = !DILocation(line: 168, column: 16, scope: !9130)
!9135 = !DILocation(line: 168, column: 34, scope: !9130)
!9136 = !DILocation(line: 168, column: 31, scope: !9130)
!9137 = !DILocation(line: 168, column: 9, scope: !9130)
!9138 = distinct !DISubprogram(name: "~CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIcED0Ev", scope: !2192, file: !1631, line: 56, type: !2204, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2203, retainedNodes: !9139)
!9139 = !{!9140}
!9140 = !DILocalVariable(name: "this", arg: 1, scope: !9138, type: !6968, flags: DIFlagArtificial | DIFlagObjectPointer)
!9141 = !DILocation(line: 0, scope: !9138)
!9142 = !DILocation(line: 57, column: 5, scope: !9138)
!9143 = !DILocation(line: 57, column: 7, scope: !9138)
!9144 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIcE4pushEPKcy", scope: !2192, file: !1631, line: 65, type: !2207, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2206, retainedNodes: !9145)
!9145 = !{!9146, !9147, !9148, !9149}
!9146 = !DILocalVariable(name: "this", arg: 1, scope: !9144, type: !6968, flags: DIFlagArtificial | DIFlagObjectPointer)
!9147 = !DILocalVariable(name: "data", arg: 2, scope: !9144, file: !1631, line: 65, type: !266)
!9148 = !DILocalVariable(name: "size", arg: 3, scope: !9144, file: !1631, line: 65, type: !872)
!9149 = !DILocalVariable(name: "writeCount", scope: !9144, file: !1631, line: 70, type: !872)
!9150 = !DILocation(line: 0, scope: !9144)
!9151 = !DILocation(line: 67, column: 20, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9144, file: !1631, line: 67, column: 13)
!9153 = !DILocation(line: 67, column: 18, scope: !9152)
!9154 = !DILocation(line: 67, column: 13, scope: !9144)
!9155 = !DILocation(line: 68, column: 20, scope: !9152)
!9156 = !DILocation(line: 68, column: 13, scope: !9152)
!9157 = !DILocation(line: 72, column: 27, scope: !9144)
!9158 = !DILocation(line: 72, column: 9, scope: !9144)
!9159 = !DILocation(line: 73, column: 50, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9144, file: !1631, line: 72, column: 35)
!9161 = !DILocation(line: 73, column: 35, scope: !9160)
!9162 = !DILocation(line: 73, column: 13, scope: !9160)
!9163 = !DILocation(line: 73, column: 21, scope: !9160)
!9164 = !DILocation(line: 73, column: 33, scope: !9160)
!9165 = !DILocation(line: 74, column: 13, scope: !9160)
!9166 = distinct !{!9166, !9158, !9167, !2694, !2695}
!9167 = !DILocation(line: 75, column: 9, scope: !9144)
!9168 = !DILocation(line: 76, column: 9, scope: !9144)
!9169 = !DILocation(line: 76, column: 24, scope: !9144)
!9170 = !DILocation(line: 78, column: 9, scope: !9144)
!9171 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIcE4pullEPcy", scope: !2192, file: !1631, line: 102, type: !2213, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2212, retainedNodes: !9172)
!9172 = !{!9173, !9174, !9175, !9176}
!9173 = !DILocalVariable(name: "this", arg: 1, scope: !9171, type: !6968, flags: DIFlagArtificial | DIFlagObjectPointer)
!9174 = !DILocalVariable(name: "data", arg: 2, scope: !9171, file: !1631, line: 102, type: !308)
!9175 = !DILocalVariable(name: "size", arg: 3, scope: !9171, file: !1631, line: 102, type: !872)
!9176 = !DILocalVariable(name: "readCount", scope: !9171, file: !1631, line: 107, type: !872)
!9177 = !DILocation(line: 0, scope: !9171)
!9178 = !DILocation(line: 104, column: 20, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9171, file: !1631, line: 104, column: 13)
!9180 = !DILocation(line: 104, column: 18, scope: !9179)
!9181 = !DILocation(line: 104, column: 13, scope: !9171)
!9182 = !DILocation(line: 105, column: 20, scope: !9179)
!9183 = !DILocation(line: 105, column: 13, scope: !9179)
!9184 = !DILocation(line: 109, column: 26, scope: !9171)
!9185 = !DILocation(line: 109, column: 9, scope: !9171)
!9186 = !DILocation(line: 110, column: 33, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9171, file: !1631, line: 109, column: 34)
!9188 = !DILocation(line: 110, column: 41, scope: !9187)
!9189 = !DILocation(line: 110, column: 27, scope: !9187)
!9190 = !DILocation(line: 110, column: 13, scope: !9187)
!9191 = !DILocation(line: 110, column: 31, scope: !9187)
!9192 = !DILocation(line: 111, column: 13, scope: !9187)
!9193 = distinct !{!9193, !9185, !9194, !2694, !2695}
!9194 = !DILocation(line: 112, column: 9, scope: !9171)
!9195 = !DILocation(line: 113, column: 9, scope: !9171)
!9196 = !DILocation(line: 113, column: 24, scope: !9171)
!9197 = !DILocation(line: 115, column: 9, scope: !9171)
!9198 = distinct !DISubprogram(name: "ISerial", linkageName: "_ZN6Cicada7ISerialC2Ev", scope: !964, file: !965, line: 37, type: !969, scopeLine: 37, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !9199, retainedNodes: !9200)
!9199 = !DISubprogram(name: "ISerial", scope: !964, type: !969, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9200 = !{!9201}
!9201 = !DILocalVariable(name: "this", arg: 1, scope: !9198, type: !6982, flags: DIFlagArtificial | DIFlagObjectPointer)
!9202 = !DILocation(line: 0, scope: !9198)
!9203 = !DILocation(line: 37, column: 7, scope: !9198)
!9204 = distinct !DISubprogram(name: "~IBufferedSerial", linkageName: "_ZN6Cicada15IBufferedSerialD0Ev", scope: !959, file: !960, line: 42, type: !993, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !992, retainedNodes: !9205)
!9205 = !{!9206}
!9206 = !DILocalVariable(name: "this", arg: 1, scope: !9204, type: !6974, flags: DIFlagArtificial | DIFlagObjectPointer)
!9207 = !DILocation(line: 0, scope: !9204)
!9208 = !DILocation(line: 42, column: 32, scope: !9204)
!9209 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada15IBufferedSerialD1Ev", scope: !960, file: !960, line: 42, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, retainedNodes: !121)
!9210 = !DILocation(line: 0, scope: !9209)
!9211 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada15IBufferedSerialD0Ev", scope: !960, file: !960, line: 42, type: !5320, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, retainedNodes: !121)
!9212 = !DILocation(line: 0, scope: !9211)
!9213 = distinct !DISubprogram(name: "~ISerial", linkageName: "_ZN6Cicada7ISerialD0Ev", scope: !964, file: !965, line: 40, type: !969, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !968, retainedNodes: !9214)
!9214 = !{!9215}
!9215 = !DILocalVariable(name: "this", arg: 1, scope: !9213, type: !6982, flags: DIFlagArtificial | DIFlagObjectPointer)
!9216 = !DILocation(line: 0, scope: !9213)
!9217 = !DILocation(line: 40, column: 24, scope: !9213)
!9218 = distinct !DISubprogram(name: "BufferedSerial", linkageName: "_ZN6Cicada14BufferedSerialC2EPcS1_y", scope: !2184, file: !2182, line: 35, type: !2268, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2267, retainedNodes: !9219)
!9219 = !{!9220, !9221, !9222, !9223}
!9220 = !DILocalVariable(name: "this", arg: 1, scope: !9218, type: !8727, flags: DIFlagArtificial | DIFlagObjectPointer)
!9221 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !9218, file: !2182, line: 35, type: !308)
!9222 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !9218, file: !2182, line: 35, type: !308)
!9223 = !DILocalVariable(name: "bufferSize", arg: 4, scope: !9218, file: !2182, line: 35, type: !872)
!9224 = !DILocation(line: 0, scope: !9218)
!9225 = !DILocation(line: 37, column: 1, scope: !9218)
!9226 = !DILocation(line: 35, column: 17, scope: !9218)
!9227 = !DILocation(line: 36, column: 5, scope: !9218)
!9228 = !DILocation(line: 36, column: 42, scope: !9218)
!9229 = !DILocation(line: 37, column: 2, scope: !9218)
!9230 = distinct !DISubprogram(name: "transferToAndFromBuffer", linkageName: "_ZN6Cicada14BufferedSerial23transferToAndFromBufferEv", scope: !2184, file: !2182, line: 171, type: !2296, scopeLine: 172, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, declaration: !2302, retainedNodes: !9231)
!9231 = !{!9232, !9233}
!9232 = !DILocalVariable(name: "this", arg: 1, scope: !9230, type: !8727, flags: DIFlagArtificial | DIFlagObjectPointer)
!9233 = !DILocalVariable(name: "data", scope: !9230, file: !2182, line: 173, type: !45)
!9234 = !DILocation(line: 0, scope: !9230)
!9235 = !DILocation(line: 173, column: 5, scope: !9230)
!9236 = !DILocation(line: 174, column: 9, scope: !9237)
!9237 = distinct !DILexicalBlock(scope: !9230, file: !2182, line: 174, column: 9)
!9238 = !DILocation(line: 174, column: 23, scope: !9237)
!9239 = !DILocation(line: 174, column: 27, scope: !9237)
!9240 = !DILocation(line: 174, column: 39, scope: !9237)
!9241 = !DILocation(line: 174, column: 9, scope: !9230)
!9242 = !DILocation(line: 175, column: 26, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9237, file: !2182, line: 174, column: 49)
!9244 = !DILocation(line: 175, column: 21, scope: !9243)
!9245 = !DILocation(line: 176, column: 5, scope: !9243)
!9246 = !DILocation(line: 178, column: 9, scope: !9247)
!9247 = distinct !DILexicalBlock(scope: !9230, file: !2182, line: 178, column: 9)
!9248 = !DILocation(line: 178, column: 22, scope: !9247)
!9249 = !DILocation(line: 178, column: 9, scope: !9230)
!9250 = !DILocation(line: 179, column: 35, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9252, file: !2182, line: 179, column: 13)
!9252 = distinct !DILexicalBlock(scope: !9247, file: !2182, line: 178, column: 40)
!9253 = !DILocation(line: 179, column: 13, scope: !9251)
!9254 = !DILocation(line: 179, column: 13, scope: !9252)
!9255 = !DILocation(line: 180, column: 26, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9251, file: !2182, line: 179, column: 44)
!9257 = !DILocation(line: 181, column: 9, scope: !9256)
!9258 = !DILocation(line: 183, column: 1, scope: !9230)
!9259 = distinct !DISubprogram(name: "eDisableInterrupts", linkageName: "_Z18eDisableInterruptsv", scope: !2307, file: !2307, line: 27, type: !4, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !121)
!9260 = !DILocation(line: 142, column: 3, scope: !9261, inlinedAt: !9262)
!9261 = distinct !DISubprogram(name: "__disable_irq", linkageName: "_ZL13__disable_irqv", scope: !4794, file: !4794, line: 140, type: !4, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !121)
!9262 = distinct !DILocation(line: 29, column: 5, scope: !9259)
!9263 = !{i64 1184613}
!9264 = !DILocation(line: 30, column: 1, scope: !9259)
!9265 = distinct !DISubprogram(name: "eEnableInterrupts", linkageName: "_Z17eEnableInterruptsv", scope: !2307, file: !2307, line: 32, type: !4, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !121)
!9266 = !DILocation(line: 131, column: 3, scope: !9267, inlinedAt: !9268)
!9267 = distinct !DISubprogram(name: "__enable_irq", linkageName: "_ZL12__enable_irqv", scope: !4794, file: !4794, line: 129, type: !4, scopeLine: 130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !121)
!9268 = distinct !DILocation(line: 34, column: 5, scope: !9265)
!9269 = !{i64 1184341}
!9270 = !DILocation(line: 35, column: 1, scope: !9265)
!9271 = distinct !DISubprogram(name: "HAL_UART_Init", scope: !2309, file: !2309, line: 314, type: !9272, scopeLine: 315, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9274)
!9272 = !DISubroutineType(types: !9273)
!9273 = !{!3735, !2334}
!9274 = !{!9275}
!9275 = !DILocalVariable(name: "huart", arg: 1, scope: !9271, file: !2309, line: 314, type: !2334)
!9276 = !DILocation(line: 0, scope: !9271)
!9277 = !DILocation(line: 317, column: 13, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9271, file: !2309, line: 317, column: 7)
!9279 = !DILocation(line: 317, column: 7, scope: !9271)
!9280 = !DILocation(line: 338, column: 14, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9271, file: !2309, line: 338, column: 7)
!9282 = !{!9283, !2843, i64 60}
!9283 = !{!"__UART_HandleTypeDef", !2842, i64 0, !5052, i64 4, !2842, i64 32, !9284, i64 36, !9284, i64 38, !2842, i64 40, !9284, i64 44, !9284, i64 46, !2842, i64 48, !2842, i64 52, !2843, i64 56, !2843, i64 60, !2843, i64 64, !3681, i64 68}
!9284 = !{!"short", !2843, i64 0}
!9285 = !DILocation(line: 338, column: 21, scope: !9281)
!9286 = !DILocation(line: 338, column: 7, scope: !9271)
!9287 = !DILocation(line: 341, column: 12, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9281, file: !2309, line: 339, column: 3)
!9289 = !DILocation(line: 341, column: 17, scope: !9288)
!9290 = !{!9283, !2843, i64 56}
!9291 = !DILocation(line: 355, column: 5, scope: !9288)
!9292 = !DILocation(line: 357, column: 3, scope: !9288)
!9293 = !DILocation(line: 359, column: 17, scope: !9271)
!9294 = !DILocation(line: 362, column: 3, scope: !9271)
!9295 = !{!9283, !2842, i64 0}
!9296 = !DILocation(line: 365, column: 3, scope: !9271)
!9297 = !DILocation(line: 370, column: 3, scope: !9271)
!9298 = !DILocation(line: 371, column: 3, scope: !9271)
!9299 = !DILocation(line: 374, column: 3, scope: !9271)
!9300 = !DILocation(line: 377, column: 10, scope: !9271)
!9301 = !DILocation(line: 377, column: 20, scope: !9271)
!9302 = !{!9283, !3681, i64 68}
!9303 = !DILocation(line: 378, column: 17, scope: !9271)
!9304 = !DILocation(line: 379, column: 10, scope: !9271)
!9305 = !DILocation(line: 379, column: 18, scope: !9271)
!9306 = !{!9283, !2843, i64 64}
!9307 = !DILocation(line: 381, column: 3, scope: !9271)
!9308 = !DILocation(line: 382, column: 1, scope: !9271)
!9309 = distinct !DISubprogram(name: "HAL_UART_MspInit", scope: !2309, file: !2309, line: 672, type: !9310, scopeLine: 673, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9312)
!9310 = !DISubroutineType(types: !9311)
!9311 = !{null, !2334}
!9312 = !{!9313}
!9313 = !DILocalVariable(name: "huart", arg: 1, scope: !9309, file: !2309, line: 672, type: !2334)
!9314 = !DILocation(line: 0, scope: !9309)
!9315 = !DILocation(line: 679, column: 1, scope: !9309)
!9316 = distinct !DISubprogram(name: "UART_SetConfig", scope: !2309, file: !2309, line: 3063, type: !9310, scopeLine: 3064, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9317)
!9317 = !{!9318, !9319, !9320}
!9318 = !DILocalVariable(name: "huart", arg: 1, scope: !9316, file: !2309, line: 3063, type: !2334)
!9319 = !DILocalVariable(name: "tmpreg", scope: !9316, file: !2309, line: 3065, type: !24)
!9320 = !DILocalVariable(name: "pclk", scope: !9316, file: !2309, line: 3066, type: !24)
!9321 = !DILocation(line: 0, scope: !9316)
!9322 = !DILocation(line: 3077, column: 3, scope: !9316)
!9323 = !{!9283, !3681, i64 12}
!9324 = !DILocation(line: 3092, column: 34, scope: !9316)
!9325 = !{!9283, !3681, i64 8}
!9326 = !DILocation(line: 3092, column: 59, scope: !9316)
!9327 = !{!9283, !3681, i64 16}
!9328 = !DILocation(line: 3092, column: 45, scope: !9316)
!9329 = !DILocation(line: 3092, column: 80, scope: !9316)
!9330 = !{!9283, !3681, i64 20}
!9331 = !DILocation(line: 3092, column: 66, scope: !9316)
!9332 = !DILocation(line: 3093, column: 3, scope: !9316)
!9333 = !DILocation(line: 3100, column: 3, scope: !9316)
!9334 = !{!9283, !3681, i64 24}
!9335 = !DILocation(line: 3134, column: 22, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9316, file: !2309, line: 3134, column: 6)
!9337 = !DILocation(line: 3134, column: 6, scope: !9316)
!9338 = !DILocation(line: 3136, column: 12, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9336, file: !2309, line: 3135, column: 3)
!9340 = !DILocation(line: 3138, column: 3, scope: !9339)
!9341 = !DILocation(line: 3141, column: 12, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9336, file: !2309, line: 3140, column: 3)
!9343 = !DILocation(line: 0, scope: !9336)
!9344 = !{!9283, !3681, i64 4}
!9345 = !DILocation(line: 3145, column: 1, scope: !9316)
!9346 = distinct !DISubprogram(name: "HAL_HalfDuplex_Init", scope: !2309, file: !2309, line: 391, type: !9272, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9347)
!9347 = !{!9348}
!9348 = !DILocalVariable(name: "huart", arg: 1, scope: !9346, file: !2309, line: 391, type: !2334)
!9349 = !DILocation(line: 0, scope: !9346)
!9350 = !DILocation(line: 394, column: 13, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9346, file: !2309, line: 394, column: 7)
!9352 = !DILocation(line: 394, column: 7, scope: !9346)
!9353 = !DILocation(line: 406, column: 14, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9346, file: !2309, line: 406, column: 7)
!9355 = !DILocation(line: 406, column: 21, scope: !9354)
!9356 = !DILocation(line: 406, column: 7, scope: !9346)
!9357 = !DILocation(line: 409, column: 12, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9354, file: !2309, line: 407, column: 3)
!9359 = !DILocation(line: 409, column: 17, scope: !9358)
!9360 = !DILocation(line: 423, column: 5, scope: !9358)
!9361 = !DILocation(line: 425, column: 3, scope: !9358)
!9362 = !DILocation(line: 427, column: 17, scope: !9346)
!9363 = !DILocation(line: 430, column: 3, scope: !9346)
!9364 = !DILocation(line: 433, column: 3, scope: !9346)
!9365 = !DILocation(line: 438, column: 3, scope: !9346)
!9366 = !DILocation(line: 439, column: 3, scope: !9346)
!9367 = !DILocation(line: 442, column: 3, scope: !9346)
!9368 = !DILocation(line: 445, column: 3, scope: !9346)
!9369 = !DILocation(line: 448, column: 10, scope: !9346)
!9370 = !DILocation(line: 448, column: 20, scope: !9346)
!9371 = !DILocation(line: 449, column: 17, scope: !9346)
!9372 = !DILocation(line: 450, column: 10, scope: !9346)
!9373 = !DILocation(line: 450, column: 18, scope: !9346)
!9374 = !DILocation(line: 452, column: 3, scope: !9346)
!9375 = !DILocation(line: 453, column: 1, scope: !9346)
!9376 = distinct !DISubprogram(name: "HAL_LIN_Init", scope: !2309, file: !2309, line: 466, type: !9377, scopeLine: 467, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9379)
!9377 = !DISubroutineType(types: !9378)
!9378 = !{!3735, !2334, !24}
!9379 = !{!9380, !9381}
!9380 = !DILocalVariable(name: "huart", arg: 1, scope: !9376, file: !2309, line: 466, type: !2334)
!9381 = !DILocalVariable(name: "BreakDetectLength", arg: 2, scope: !9376, file: !2309, line: 466, type: !24)
!9382 = !DILocation(line: 0, scope: !9376)
!9383 = !DILocation(line: 469, column: 13, scope: !9384)
!9384 = distinct !DILexicalBlock(scope: !9376, file: !2309, line: 469, column: 7)
!9385 = !DILocation(line: 469, column: 7, scope: !9376)
!9386 = !DILocation(line: 484, column: 14, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9376, file: !2309, line: 484, column: 7)
!9388 = !DILocation(line: 484, column: 21, scope: !9387)
!9389 = !DILocation(line: 484, column: 7, scope: !9376)
!9390 = !DILocation(line: 487, column: 12, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9387, file: !2309, line: 485, column: 3)
!9392 = !DILocation(line: 487, column: 17, scope: !9391)
!9393 = !DILocation(line: 501, column: 5, scope: !9391)
!9394 = !DILocation(line: 503, column: 3, scope: !9391)
!9395 = !DILocation(line: 505, column: 17, scope: !9376)
!9396 = !DILocation(line: 508, column: 3, scope: !9376)
!9397 = !DILocation(line: 511, column: 3, scope: !9376)
!9398 = !DILocation(line: 516, column: 3, scope: !9376)
!9399 = !DILocation(line: 517, column: 3, scope: !9376)
!9400 = !DILocation(line: 520, column: 3, scope: !9376)
!9401 = !DILocation(line: 523, column: 3, scope: !9376)
!9402 = !DILocation(line: 524, column: 3, scope: !9376)
!9403 = !DILocation(line: 527, column: 3, scope: !9376)
!9404 = !DILocation(line: 530, column: 10, scope: !9376)
!9405 = !DILocation(line: 530, column: 20, scope: !9376)
!9406 = !DILocation(line: 531, column: 17, scope: !9376)
!9407 = !DILocation(line: 532, column: 10, scope: !9376)
!9408 = !DILocation(line: 532, column: 18, scope: !9376)
!9409 = !DILocation(line: 534, column: 3, scope: !9376)
!9410 = !DILocation(line: 535, column: 1, scope: !9376)
!9411 = distinct !DISubprogram(name: "HAL_MultiProcessor_Init", scope: !2309, file: !2309, line: 549, type: !9412, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9414)
!9412 = !DISubroutineType(types: !9413)
!9413 = !{!3735, !2334, !45, !24}
!9414 = !{!9415, !9416, !9417}
!9415 = !DILocalVariable(name: "huart", arg: 1, scope: !9411, file: !2309, line: 549, type: !2334)
!9416 = !DILocalVariable(name: "Address", arg: 2, scope: !9411, file: !2309, line: 549, type: !45)
!9417 = !DILocalVariable(name: "WakeUpMethod", arg: 3, scope: !9411, file: !2309, line: 549, type: !24)
!9418 = !DILocation(line: 0, scope: !9411)
!9419 = !DILocation(line: 552, column: 13, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9411, file: !2309, line: 552, column: 7)
!9421 = !DILocation(line: 552, column: 7, scope: !9411)
!9422 = !DILocation(line: 568, column: 14, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9411, file: !2309, line: 568, column: 7)
!9424 = !DILocation(line: 568, column: 21, scope: !9423)
!9425 = !DILocation(line: 568, column: 7, scope: !9411)
!9426 = !DILocation(line: 571, column: 12, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9423, file: !2309, line: 569, column: 3)
!9428 = !DILocation(line: 571, column: 17, scope: !9427)
!9429 = !DILocation(line: 585, column: 5, scope: !9427)
!9430 = !DILocation(line: 587, column: 3, scope: !9427)
!9431 = !DILocation(line: 589, column: 17, scope: !9411)
!9432 = !DILocation(line: 592, column: 3, scope: !9411)
!9433 = !DILocation(line: 595, column: 3, scope: !9411)
!9434 = !DILocation(line: 600, column: 3, scope: !9411)
!9435 = !DILocation(line: 601, column: 3, scope: !9411)
!9436 = !DILocation(line: 604, column: 3, scope: !9411)
!9437 = !DILocation(line: 605, column: 3, scope: !9411)
!9438 = !DILocation(line: 608, column: 3, scope: !9411)
!9439 = !DILocation(line: 609, column: 3, scope: !9411)
!9440 = !DILocation(line: 612, column: 3, scope: !9411)
!9441 = !DILocation(line: 615, column: 10, scope: !9411)
!9442 = !DILocation(line: 615, column: 20, scope: !9411)
!9443 = !DILocation(line: 616, column: 17, scope: !9411)
!9444 = !DILocation(line: 617, column: 10, scope: !9411)
!9445 = !DILocation(line: 617, column: 18, scope: !9411)
!9446 = !DILocation(line: 619, column: 3, scope: !9411)
!9447 = !DILocation(line: 620, column: 1, scope: !9411)
!9448 = distinct !DISubprogram(name: "HAL_UART_DeInit", scope: !2309, file: !2309, line: 628, type: !9272, scopeLine: 629, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9449)
!9449 = !{!9450}
!9450 = !DILocalVariable(name: "huart", arg: 1, scope: !9448, file: !2309, line: 628, type: !2334)
!9451 = !DILocation(line: 0, scope: !9448)
!9452 = !DILocation(line: 631, column: 13, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !9448, file: !2309, line: 631, column: 7)
!9454 = !DILocation(line: 631, column: 7, scope: !9448)
!9455 = !DILocation(line: 639, column: 10, scope: !9448)
!9456 = !DILocation(line: 639, column: 17, scope: !9448)
!9457 = !DILocation(line: 642, column: 3, scope: !9448)
!9458 = !DILocation(line: 653, column: 3, scope: !9448)
!9459 = !DILocation(line: 656, column: 10, scope: !9448)
!9460 = !DILocation(line: 656, column: 20, scope: !9448)
!9461 = !DILocation(line: 657, column: 17, scope: !9448)
!9462 = !DILocation(line: 658, column: 10, scope: !9448)
!9463 = !DILocation(line: 658, column: 18, scope: !9448)
!9464 = !DILocation(line: 661, column: 3, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9448, file: !2309, line: 661, column: 3)
!9466 = !DILocation(line: 663, column: 3, scope: !9448)
!9467 = !DILocation(line: 664, column: 1, scope: !9448)
!9468 = distinct !DISubprogram(name: "HAL_UART_MspDeInit", scope: !2309, file: !2309, line: 687, type: !9310, scopeLine: 688, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9469)
!9469 = !{!9470}
!9470 = !DILocalVariable(name: "huart", arg: 1, scope: !9468, file: !2309, line: 687, type: !2334)
!9471 = !DILocation(line: 0, scope: !9468)
!9472 = !DILocation(line: 694, column: 1, scope: !9468)
!9473 = distinct !DISubprogram(name: "HAL_UART_Transmit", scope: !2309, file: !2309, line: 1027, type: !9474, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9476)
!9474 = !DISubroutineType(types: !9475)
!9475 = !{!3735, !2334, !44, !37, !24}
!9476 = !{!9477, !9478, !9479, !9480, !9481, !9482}
!9477 = !DILocalVariable(name: "huart", arg: 1, scope: !9473, file: !2309, line: 1027, type: !2334)
!9478 = !DILocalVariable(name: "pData", arg: 2, scope: !9473, file: !2309, line: 1027, type: !44)
!9479 = !DILocalVariable(name: "Size", arg: 3, scope: !9473, file: !2309, line: 1027, type: !37)
!9480 = !DILocalVariable(name: "Timeout", arg: 4, scope: !9473, file: !2309, line: 1027, type: !24)
!9481 = !DILocalVariable(name: "tmp", scope: !9473, file: !2309, line: 1029, type: !2332)
!9482 = !DILocalVariable(name: "tickstart", scope: !9473, file: !2309, line: 1030, type: !24)
!9483 = !DILocation(line: 0, scope: !9473)
!9484 = !DILocation(line: 1033, column: 14, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9473, file: !2309, line: 1033, column: 7)
!9486 = !DILocation(line: 1033, column: 21, scope: !9485)
!9487 = !DILocation(line: 1033, column: 7, scope: !9473)
!9488 = !DILocation(line: 1035, column: 16, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9490, file: !2309, line: 1035, column: 9)
!9490 = distinct !DILexicalBlock(scope: !9485, file: !2309, line: 1034, column: 3)
!9491 = !DILocation(line: 1035, column: 25, scope: !9489)
!9492 = !DILocation(line: 1041, column: 5, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9494, file: !2309, line: 1041, column: 5)
!9494 = distinct !DILexicalBlock(scope: !9490, file: !2309, line: 1041, column: 5)
!9495 = !DILocation(line: 1041, column: 5, scope: !9494)
!9496 = !DILocation(line: 1041, column: 5, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9493, file: !2309, line: 1041, column: 5)
!9498 = !DILocation(line: 1043, column: 12, scope: !9490)
!9499 = !DILocation(line: 1043, column: 22, scope: !9490)
!9500 = !DILocation(line: 1044, column: 19, scope: !9490)
!9501 = !DILocation(line: 1047, column: 17, scope: !9490)
!9502 = !DILocation(line: 1049, column: 12, scope: !9490)
!9503 = !DILocation(line: 1049, column: 23, scope: !9490)
!9504 = !{!9283, !9284, i64 36}
!9505 = !DILocation(line: 1050, column: 12, scope: !9490)
!9506 = !DILocation(line: 1050, column: 24, scope: !9490)
!9507 = !{!9283, !9284, i64 38}
!9508 = !DILocation(line: 1051, column: 19, scope: !9490)
!9509 = !DILocation(line: 1051, column: 31, scope: !9490)
!9510 = !DILocation(line: 1051, column: 5, scope: !9490)
!9511 = !DILocation(line: 1053, column: 25, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9490, file: !2309, line: 1052, column: 5)
!9513 = !DILocation(line: 1054, column: 23, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9512, file: !2309, line: 1054, column: 11)
!9515 = !DILocation(line: 1054, column: 34, scope: !9514)
!9516 = !DILocation(line: 0, scope: !9514)
!9517 = !DILocation(line: 1054, column: 11, scope: !9512)
!9518 = !DILocation(line: 1056, column: 13, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9514, file: !2309, line: 1055, column: 7)
!9520 = !DILocation(line: 1060, column: 15, scope: !9519)
!9521 = !DILocation(line: 1061, column: 32, scope: !9519)
!9522 = !{!9284, !9284, i64 0}
!9523 = !DILocation(line: 1061, column: 37, scope: !9519)
!9524 = !DILocation(line: 1061, column: 16, scope: !9519)
!9525 = !DILocation(line: 1061, column: 26, scope: !9519)
!9526 = !DILocation(line: 1061, column: 29, scope: !9519)
!9527 = !{!5052, !3681, i64 4}
!9528 = !DILocation(line: 1062, column: 25, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9519, file: !2309, line: 1062, column: 13)
!9530 = !DILocation(line: 1062, column: 32, scope: !9529)
!9531 = !DILocation(line: 1062, column: 13, scope: !9519)
!9532 = !DILocation(line: 1064, column: 17, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9529, file: !2309, line: 1063, column: 9)
!9534 = !DILocation(line: 1065, column: 9, scope: !9533)
!9535 = !DILocation(line: 1068, column: 17, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9529, file: !2309, line: 1067, column: 9)
!9537 = !DILocation(line: 1073, column: 13, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9514, file: !2309, line: 1072, column: 7)
!9539 = !DILocation(line: 1077, column: 38, scope: !9538)
!9540 = !DILocation(line: 1077, column: 32, scope: !9538)
!9541 = !DILocation(line: 1077, column: 16, scope: !9538)
!9542 = !DILocation(line: 1077, column: 26, scope: !9538)
!9543 = !DILocation(line: 1077, column: 29, scope: !9538)
!9544 = distinct !{!9544, !9510, !9545, !2694, !2695}
!9545 = !DILocation(line: 1079, column: 5, scope: !9490)
!9546 = !DILocation(line: 1081, column: 9, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9490, file: !2309, line: 1081, column: 9)
!9548 = !DILocation(line: 1081, column: 85, scope: !9547)
!9549 = !DILocation(line: 1081, column: 9, scope: !9490)
!9550 = !DILocation(line: 1087, column: 19, scope: !9490)
!9551 = !DILocation(line: 1090, column: 5, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9490, file: !2309, line: 1090, column: 5)
!9553 = !DILocation(line: 1092, column: 5, scope: !9490)
!9554 = !DILocation(line: 0, scope: !9485)
!9555 = !DILocation(line: 1098, column: 1, scope: !9473)
!9556 = distinct !DISubprogram(name: "UART_WaitOnFlagUntilTimeout", scope: !2309, file: !2309, line: 2690, type: !9557, scopeLine: 2691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9559)
!9557 = !DISubroutineType(types: !9558)
!9558 = !{!3735, !2334, !24, !3833, !24, !24}
!9559 = !{!9560, !9561, !9562, !9563, !9564}
!9560 = !DILocalVariable(name: "huart", arg: 1, scope: !9556, file: !2309, line: 2690, type: !2334)
!9561 = !DILocalVariable(name: "Flag", arg: 2, scope: !9556, file: !2309, line: 2690, type: !24)
!9562 = !DILocalVariable(name: "Status", arg: 3, scope: !9556, file: !2309, line: 2690, type: !3833)
!9563 = !DILocalVariable(name: "Tickstart", arg: 4, scope: !9556, file: !2309, line: 2690, type: !24)
!9564 = !DILocalVariable(name: "Timeout", arg: 5, scope: !9556, file: !2309, line: 2690, type: !24)
!9565 = !DILocation(line: 0, scope: !9556)
!9566 = !DILocation(line: 2693, column: 11, scope: !9556)
!9567 = !{!5052, !3681, i64 0}
!9568 = !DILocation(line: 2693, column: 3, scope: !9556)
!9569 = !DILocation(line: 2696, column: 9, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9556, file: !2309, line: 2694, column: 3)
!9571 = !DILocation(line: 2698, column: 32, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9573, file: !2309, line: 2698, column: 11)
!9573 = distinct !DILexicalBlock(scope: !9574, file: !2309, line: 2697, column: 5)
!9574 = distinct !DILexicalBlock(scope: !9570, file: !2309, line: 2696, column: 9)
!9575 = !DILocation(line: 2698, column: 46, scope: !9572)
!9576 = !DILocation(line: 2698, column: 59, scope: !9572)
!9577 = !DILocation(line: 2698, column: 11, scope: !9573)
!9578 = !DILocation(line: 2701, column: 9, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9572, file: !2309, line: 2699, column: 7)
!9580 = !DILocation(line: 2702, column: 9, scope: !9579)
!9581 = !DILocation(line: 2704, column: 16, scope: !9579)
!9582 = !DILocation(line: 2704, column: 24, scope: !9579)
!9583 = !DILocation(line: 2705, column: 16, scope: !9579)
!9584 = !DILocation(line: 2705, column: 24, scope: !9579)
!9585 = !DILocation(line: 2708, column: 9, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9579, file: !2309, line: 2708, column: 9)
!9587 = !DILocation(line: 2710, column: 9, scope: !9579)
!9588 = distinct !{!9588, !9568, !9589, !2694, !2695}
!9589 = !DILocation(line: 2713, column: 3, scope: !9556)
!9590 = !DILocation(line: 2715, column: 1, scope: !9556)
!9591 = distinct !DISubprogram(name: "HAL_UART_Receive", scope: !2309, file: !2309, line: 1112, type: !9474, scopeLine: 1113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9592)
!9592 = !{!9593, !9594, !9595, !9596, !9597, !9598}
!9593 = !DILocalVariable(name: "huart", arg: 1, scope: !9591, file: !2309, line: 1112, type: !2334)
!9594 = !DILocalVariable(name: "pData", arg: 2, scope: !9591, file: !2309, line: 1112, type: !44)
!9595 = !DILocalVariable(name: "Size", arg: 3, scope: !9591, file: !2309, line: 1112, type: !37)
!9596 = !DILocalVariable(name: "Timeout", arg: 4, scope: !9591, file: !2309, line: 1112, type: !24)
!9597 = !DILocalVariable(name: "tmp", scope: !9591, file: !2309, line: 1114, type: !2332)
!9598 = !DILocalVariable(name: "tickstart", scope: !9591, file: !2309, line: 1115, type: !24)
!9599 = !DILocation(line: 0, scope: !9591)
!9600 = !DILocation(line: 1118, column: 14, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9591, file: !2309, line: 1118, column: 7)
!9602 = !DILocation(line: 1118, column: 22, scope: !9601)
!9603 = !DILocation(line: 1118, column: 7, scope: !9591)
!9604 = !DILocation(line: 1120, column: 16, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9606, file: !2309, line: 1120, column: 9)
!9606 = distinct !DILexicalBlock(scope: !9601, file: !2309, line: 1119, column: 3)
!9607 = !DILocation(line: 1120, column: 25, scope: !9605)
!9608 = !DILocation(line: 1126, column: 5, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9610, file: !2309, line: 1126, column: 5)
!9610 = distinct !DILexicalBlock(scope: !9606, file: !2309, line: 1126, column: 5)
!9611 = !DILocation(line: 1126, column: 5, scope: !9610)
!9612 = !DILocation(line: 1126, column: 5, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9609, file: !2309, line: 1126, column: 5)
!9614 = !DILocation(line: 1128, column: 12, scope: !9606)
!9615 = !DILocation(line: 1128, column: 22, scope: !9606)
!9616 = !DILocation(line: 1129, column: 20, scope: !9606)
!9617 = !DILocation(line: 1132, column: 17, scope: !9606)
!9618 = !DILocation(line: 1134, column: 12, scope: !9606)
!9619 = !DILocation(line: 1134, column: 23, scope: !9606)
!9620 = !{!9283, !9284, i64 44}
!9621 = !DILocation(line: 1135, column: 12, scope: !9606)
!9622 = !DILocation(line: 1135, column: 24, scope: !9606)
!9623 = !{!9283, !9284, i64 46}
!9624 = !DILocation(line: 1138, column: 19, scope: !9606)
!9625 = !DILocation(line: 1138, column: 31, scope: !9606)
!9626 = !DILocation(line: 1138, column: 5, scope: !9606)
!9627 = !DILocation(line: 1140, column: 25, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9606, file: !2309, line: 1139, column: 5)
!9629 = !DILocation(line: 1141, column: 23, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9628, file: !2309, line: 1141, column: 11)
!9631 = !DILocation(line: 1141, column: 34, scope: !9630)
!9632 = !DILocation(line: 0, scope: !9630)
!9633 = !DILocation(line: 1141, column: 11, scope: !9628)
!9634 = !DILocation(line: 1143, column: 13, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9630, file: !2309, line: 1142, column: 7)
!9636 = !DILocation(line: 1147, column: 15, scope: !9635)
!9637 = !DILocation(line: 1148, column: 25, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9635, file: !2309, line: 1148, column: 13)
!9639 = !DILocation(line: 1148, column: 32, scope: !9638)
!9640 = !DILocation(line: 1148, column: 13, scope: !9635)
!9641 = !DILocation(line: 1150, column: 36, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9638, file: !2309, line: 1149, column: 9)
!9643 = !DILocation(line: 1150, column: 46, scope: !9642)
!9644 = !DILocation(line: 1150, column: 18, scope: !9642)
!9645 = !DILocation(line: 1150, column: 16, scope: !9642)
!9646 = !DILocation(line: 1151, column: 17, scope: !9642)
!9647 = !DILocation(line: 1152, column: 9, scope: !9642)
!9648 = !DILocation(line: 1155, column: 36, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !9638, file: !2309, line: 1154, column: 9)
!9650 = !DILocation(line: 1155, column: 46, scope: !9649)
!9651 = !DILocation(line: 1155, column: 18, scope: !9649)
!9652 = !DILocation(line: 1155, column: 16, scope: !9649)
!9653 = !DILocation(line: 1156, column: 17, scope: !9649)
!9654 = !DILocation(line: 1162, column: 13, scope: !9655)
!9655 = distinct !DILexicalBlock(scope: !9630, file: !2309, line: 1161, column: 7)
!9656 = !DILocation(line: 1166, column: 25, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9655, file: !2309, line: 1166, column: 13)
!9658 = !DILocation(line: 1166, column: 32, scope: !9657)
!9659 = !DILocation(line: 1166, column: 13, scope: !9655)
!9660 = !DILocation(line: 1168, column: 39, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9657, file: !2309, line: 1167, column: 9)
!9662 = !DILocation(line: 1168, column: 49, scope: !9661)
!9663 = !DILocation(line: 1168, column: 22, scope: !9661)
!9664 = !DILocation(line: 1168, column: 17, scope: !9661)
!9665 = !DILocation(line: 1168, column: 20, scope: !9661)
!9666 = !DILocation(line: 1169, column: 9, scope: !9661)
!9667 = !DILocation(line: 1172, column: 39, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9657, file: !2309, line: 1171, column: 9)
!9669 = !DILocation(line: 1172, column: 49, scope: !9668)
!9670 = !DILocation(line: 1172, column: 22, scope: !9668)
!9671 = !DILocation(line: 1172, column: 17, scope: !9668)
!9672 = !DILocation(line: 1172, column: 20, scope: !9668)
!9673 = distinct !{!9673, !9626, !9674, !2694, !2695}
!9674 = !DILocation(line: 1176, column: 5, scope: !9606)
!9675 = !DILocation(line: 1179, column: 20, scope: !9606)
!9676 = !DILocation(line: 1182, column: 5, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9606, file: !2309, line: 1182, column: 5)
!9678 = !DILocation(line: 1184, column: 5, scope: !9606)
!9679 = !DILocation(line: 0, scope: !9601)
!9680 = !DILocation(line: 1190, column: 1, scope: !9591)
!9681 = distinct !DISubprogram(name: "HAL_UART_Transmit_IT", scope: !2309, file: !2309, line: 1203, type: !9682, scopeLine: 1204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9684)
!9682 = !DISubroutineType(types: !9683)
!9683 = !{!3735, !2334, !44, !37}
!9684 = !{!9685, !9686, !9687}
!9685 = !DILocalVariable(name: "huart", arg: 1, scope: !9681, file: !2309, line: 1203, type: !2334)
!9686 = !DILocalVariable(name: "pData", arg: 2, scope: !9681, file: !2309, line: 1203, type: !44)
!9687 = !DILocalVariable(name: "Size", arg: 3, scope: !9681, file: !2309, line: 1203, type: !37)
!9688 = !DILocation(line: 0, scope: !9681)
!9689 = !DILocation(line: 1206, column: 14, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9681, file: !2309, line: 1206, column: 7)
!9691 = !DILocation(line: 1206, column: 21, scope: !9690)
!9692 = !DILocation(line: 1206, column: 7, scope: !9681)
!9693 = !DILocation(line: 1208, column: 16, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9695, file: !2309, line: 1208, column: 9)
!9695 = distinct !DILexicalBlock(scope: !9690, file: !2309, line: 1207, column: 3)
!9696 = !DILocation(line: 1208, column: 25, scope: !9694)
!9697 = !DILocation(line: 1214, column: 5, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9699, file: !2309, line: 1214, column: 5)
!9699 = distinct !DILexicalBlock(scope: !9695, file: !2309, line: 1214, column: 5)
!9700 = !DILocation(line: 1214, column: 5, scope: !9699)
!9701 = !DILocation(line: 1214, column: 5, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9698, file: !2309, line: 1214, column: 5)
!9703 = !DILocation(line: 1216, column: 12, scope: !9695)
!9704 = !DILocation(line: 1216, column: 23, scope: !9695)
!9705 = !{!9283, !2842, i64 32}
!9706 = !DILocation(line: 1217, column: 12, scope: !9695)
!9707 = !DILocation(line: 1217, column: 23, scope: !9695)
!9708 = !DILocation(line: 1218, column: 12, scope: !9695)
!9709 = !DILocation(line: 1218, column: 24, scope: !9695)
!9710 = !DILocation(line: 1220, column: 12, scope: !9695)
!9711 = !DILocation(line: 1220, column: 22, scope: !9695)
!9712 = !DILocation(line: 1221, column: 19, scope: !9695)
!9713 = !DILocation(line: 1224, column: 5, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9695, file: !2309, line: 1224, column: 5)
!9715 = !DILocation(line: 1227, column: 5, scope: !9695)
!9716 = !DILocation(line: 1229, column: 5, scope: !9695)
!9717 = !DILocation(line: 0, scope: !9690)
!9718 = !DILocation(line: 1235, column: 1, scope: !9681)
!9719 = distinct !DISubprogram(name: "HAL_UART_Receive_IT", scope: !2309, file: !2309, line: 1248, type: !9682, scopeLine: 1249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9720)
!9720 = !{!9721, !9722, !9723}
!9721 = !DILocalVariable(name: "huart", arg: 1, scope: !9719, file: !2309, line: 1248, type: !2334)
!9722 = !DILocalVariable(name: "pData", arg: 2, scope: !9719, file: !2309, line: 1248, type: !44)
!9723 = !DILocalVariable(name: "Size", arg: 3, scope: !9719, file: !2309, line: 1248, type: !37)
!9724 = !DILocation(line: 0, scope: !9719)
!9725 = !DILocation(line: 1251, column: 14, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9719, file: !2309, line: 1251, column: 7)
!9727 = !DILocation(line: 1251, column: 22, scope: !9726)
!9728 = !DILocation(line: 1251, column: 7, scope: !9719)
!9729 = !DILocation(line: 1253, column: 16, scope: !9730)
!9730 = distinct !DILexicalBlock(scope: !9731, file: !2309, line: 1253, column: 9)
!9731 = distinct !DILexicalBlock(scope: !9726, file: !2309, line: 1252, column: 3)
!9732 = !DILocation(line: 1253, column: 25, scope: !9730)
!9733 = !DILocation(line: 1259, column: 5, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9735, file: !2309, line: 1259, column: 5)
!9735 = distinct !DILexicalBlock(scope: !9731, file: !2309, line: 1259, column: 5)
!9736 = !DILocation(line: 1259, column: 5, scope: !9735)
!9737 = !DILocation(line: 1259, column: 5, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9734, file: !2309, line: 1259, column: 5)
!9739 = !DILocation(line: 1261, column: 12, scope: !9731)
!9740 = !DILocation(line: 1261, column: 23, scope: !9731)
!9741 = !{!9283, !2842, i64 40}
!9742 = !DILocation(line: 1262, column: 12, scope: !9731)
!9743 = !DILocation(line: 1262, column: 23, scope: !9731)
!9744 = !DILocation(line: 1263, column: 12, scope: !9731)
!9745 = !DILocation(line: 1263, column: 24, scope: !9731)
!9746 = !DILocation(line: 1265, column: 12, scope: !9731)
!9747 = !DILocation(line: 1265, column: 22, scope: !9731)
!9748 = !DILocation(line: 1266, column: 20, scope: !9731)
!9749 = !DILocation(line: 1269, column: 5, scope: !9750)
!9750 = distinct !DILexicalBlock(scope: !9731, file: !2309, line: 1269, column: 5)
!9751 = !DILocation(line: 1272, column: 5, scope: !9731)
!9752 = !DILocation(line: 1275, column: 5, scope: !9731)
!9753 = !DILocation(line: 1278, column: 5, scope: !9731)
!9754 = !DILocation(line: 1280, column: 5, scope: !9731)
!9755 = !DILocation(line: 0, scope: !9726)
!9756 = !DILocation(line: 1286, column: 1, scope: !9719)
!9757 = distinct !DISubprogram(name: "HAL_UART_Transmit_DMA", scope: !2309, file: !2309, line: 1299, type: !9682, scopeLine: 1300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9758)
!9758 = !{!9759, !9760, !9761, !9762}
!9759 = !DILocalVariable(name: "huart", arg: 1, scope: !9757, file: !2309, line: 1299, type: !2334)
!9760 = !DILocalVariable(name: "pData", arg: 2, scope: !9757, file: !2309, line: 1299, type: !44)
!9761 = !DILocalVariable(name: "Size", arg: 3, scope: !9757, file: !2309, line: 1299, type: !37)
!9762 = !DILocalVariable(name: "tmp", scope: !9757, file: !2309, line: 1301, type: !710)
!9763 = !DILocation(line: 0, scope: !9757)
!9764 = !DILocation(line: 1304, column: 14, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9757, file: !2309, line: 1304, column: 7)
!9766 = !DILocation(line: 1304, column: 21, scope: !9765)
!9767 = !DILocation(line: 1304, column: 7, scope: !9757)
!9768 = !DILocation(line: 1306, column: 16, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9770, file: !2309, line: 1306, column: 9)
!9770 = distinct !DILexicalBlock(scope: !9765, file: !2309, line: 1305, column: 3)
!9771 = !DILocation(line: 1306, column: 25, scope: !9769)
!9772 = !DILocation(line: 1312, column: 5, scope: !9773)
!9773 = distinct !DILexicalBlock(scope: !9774, file: !2309, line: 1312, column: 5)
!9774 = distinct !DILexicalBlock(scope: !9770, file: !2309, line: 1312, column: 5)
!9775 = !DILocation(line: 1312, column: 5, scope: !9774)
!9776 = !DILocation(line: 1312, column: 5, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !9773, file: !2309, line: 1312, column: 5)
!9778 = !DILocation(line: 1314, column: 12, scope: !9770)
!9779 = !DILocation(line: 1314, column: 23, scope: !9770)
!9780 = !DILocation(line: 1315, column: 12, scope: !9770)
!9781 = !DILocation(line: 1315, column: 23, scope: !9770)
!9782 = !DILocation(line: 1316, column: 12, scope: !9770)
!9783 = !DILocation(line: 1316, column: 24, scope: !9770)
!9784 = !DILocation(line: 1318, column: 12, scope: !9770)
!9785 = !DILocation(line: 1318, column: 22, scope: !9770)
!9786 = !DILocation(line: 1319, column: 19, scope: !9770)
!9787 = !DILocation(line: 1322, column: 12, scope: !9770)
!9788 = !{!9283, !2842, i64 48}
!9789 = !DILocation(line: 1322, column: 20, scope: !9770)
!9790 = !DILocation(line: 1322, column: 37, scope: !9770)
!9791 = !{!9792, !2842, i64 44}
!9792 = !{!"__DMA_HandleTypeDef", !2842, i64 0, !5052, i64 4, !2843, i64 32, !2843, i64 36, !2842, i64 40, !2842, i64 44, !2842, i64 48, !2842, i64 52, !2842, i64 56, !3681, i64 60, !2842, i64 64, !3681, i64 68}
!9793 = !DILocation(line: 1325, column: 20, scope: !9770)
!9794 = !DILocation(line: 1325, column: 41, scope: !9770)
!9795 = !{!9792, !2842, i64 48}
!9796 = !DILocation(line: 1328, column: 20, scope: !9770)
!9797 = !DILocation(line: 1328, column: 38, scope: !9770)
!9798 = !{!9792, !2842, i64 52}
!9799 = !DILocation(line: 1331, column: 20, scope: !9770)
!9800 = !DILocation(line: 1331, column: 38, scope: !9770)
!9801 = !{!9792, !2842, i64 56}
!9802 = !DILocation(line: 1335, column: 37, scope: !9770)
!9803 = !DILocation(line: 1335, column: 73, scope: !9770)
!9804 = !DILocation(line: 1335, column: 83, scope: !9770)
!9805 = !DILocation(line: 1335, column: 55, scope: !9770)
!9806 = !DILocation(line: 1335, column: 5, scope: !9770)
!9807 = !DILocation(line: 1338, column: 5, scope: !9770)
!9808 = !DILocation(line: 1341, column: 5, scope: !9809)
!9809 = distinct !DILexicalBlock(scope: !9770, file: !2309, line: 1341, column: 5)
!9810 = !DILocation(line: 1345, column: 5, scope: !9770)
!9811 = !DILocation(line: 1347, column: 5, scope: !9770)
!9812 = !DILocation(line: 0, scope: !9765)
!9813 = !DILocation(line: 1353, column: 1, scope: !9757)
!9814 = distinct !DISubprogram(name: "UART_DMATransmitCplt", scope: !2309, file: !2309, line: 2542, type: !9815, scopeLine: 2543, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9817)
!9815 = !DISubroutineType(types: !9816)
!9816 = !{null, !2368}
!9817 = !{!9818, !9819}
!9818 = !DILocalVariable(name: "hdma", arg: 1, scope: !9814, file: !2309, line: 2542, type: !2368)
!9819 = !DILocalVariable(name: "huart", scope: !9814, file: !2309, line: 2544, type: !2334)
!9820 = !DILocation(line: 0, scope: !9814)
!9821 = !DILocation(line: 2544, column: 82, scope: !9814)
!9822 = !{!9792, !2842, i64 40}
!9823 = !DILocation(line: 2546, column: 14, scope: !9824)
!9824 = distinct !DILexicalBlock(scope: !9814, file: !2309, line: 2546, column: 7)
!9825 = !{!9792, !2842, i64 0}
!9826 = !DILocation(line: 2546, column: 24, scope: !9824)
!9827 = !DILocation(line: 2546, column: 28, scope: !9824)
!9828 = !DILocation(line: 2546, column: 44, scope: !9824)
!9829 = !DILocation(line: 2546, column: 7, scope: !9814)
!9830 = !DILocation(line: 2548, column: 12, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9824, file: !2309, line: 2547, column: 3)
!9832 = !DILocation(line: 2548, column: 24, scope: !9831)
!9833 = !DILocation(line: 2552, column: 5, scope: !9831)
!9834 = !DILocation(line: 2555, column: 5, scope: !9831)
!9835 = !DILocation(line: 2557, column: 3, scope: !9831)
!9836 = !DILocation(line: 2566, column: 5, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9824, file: !2309, line: 2560, column: 3)
!9838 = !DILocation(line: 2569, column: 1, scope: !9814)
!9839 = distinct !DISubprogram(name: "UART_DMATxHalfCplt", scope: !2309, file: !2309, line: 2577, type: !9815, scopeLine: 2578, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9840)
!9840 = !{!9841, !9842}
!9841 = !DILocalVariable(name: "hdma", arg: 1, scope: !9839, file: !2309, line: 2577, type: !2368)
!9842 = !DILocalVariable(name: "huart", scope: !9839, file: !2309, line: 2579, type: !2334)
!9843 = !DILocation(line: 0, scope: !9839)
!9844 = !DILocation(line: 2579, column: 82, scope: !9839)
!9845 = !DILocation(line: 2586, column: 3, scope: !9839)
!9846 = !DILocation(line: 2588, column: 1, scope: !9839)
!9847 = distinct !DISubprogram(name: "UART_DMAError", scope: !2309, file: !2309, line: 2649, type: !9815, scopeLine: 2650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9848)
!9848 = !{!9849, !9850, !9851}
!9849 = !DILocalVariable(name: "hdma", arg: 1, scope: !9847, file: !2309, line: 2649, type: !2368)
!9850 = !DILocalVariable(name: "dmarequest", scope: !9847, file: !2309, line: 2651, type: !24)
!9851 = !DILocalVariable(name: "huart", scope: !9847, file: !2309, line: 2652, type: !2334)
!9852 = !DILocation(line: 0, scope: !9847)
!9853 = !DILocation(line: 2652, column: 82, scope: !9847)
!9854 = !DILocation(line: 2655, column: 16, scope: !9847)
!9855 = !DILocation(line: 2656, column: 15, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9847, file: !2309, line: 2656, column: 7)
!9857 = !DILocation(line: 2656, column: 22, scope: !9856)
!9858 = !DILocation(line: 2656, column: 49, scope: !9856)
!9859 = !DILocation(line: 2658, column: 12, scope: !9860)
!9860 = distinct !DILexicalBlock(scope: !9856, file: !2309, line: 2657, column: 3)
!9861 = !DILocation(line: 2658, column: 24, scope: !9860)
!9862 = !DILocation(line: 2659, column: 5, scope: !9860)
!9863 = !DILocation(line: 2660, column: 3, scope: !9860)
!9864 = !DILocation(line: 2663, column: 16, scope: !9847)
!9865 = !DILocation(line: 2664, column: 15, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9847, file: !2309, line: 2664, column: 7)
!9867 = !DILocation(line: 2664, column: 23, scope: !9866)
!9868 = !DILocation(line: 2664, column: 50, scope: !9866)
!9869 = !DILocation(line: 2666, column: 12, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9866, file: !2309, line: 2665, column: 3)
!9871 = !DILocation(line: 2666, column: 24, scope: !9870)
!9872 = !DILocation(line: 2667, column: 5, scope: !9870)
!9873 = !DILocation(line: 2668, column: 3, scope: !9870)
!9874 = !DILocation(line: 2670, column: 10, scope: !9847)
!9875 = !DILocation(line: 2670, column: 20, scope: !9847)
!9876 = !DILocation(line: 2676, column: 3, scope: !9847)
!9877 = !DILocation(line: 2678, column: 1, scope: !9847)
!9878 = !DISubprogram(name: "HAL_DMA_Start_IT", scope: !853, file: !853, line: 378, type: !9879, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !121)
!9879 = !DISubroutineType(types: !9880)
!9880 = !{!3735, !2368, !24, !24, !24}
!9881 = distinct !DISubprogram(name: "UART_EndTxTransfer", scope: !2309, file: !2309, line: 2722, type: !9310, scopeLine: 2723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9882)
!9882 = !{!9883}
!9883 = !DILocalVariable(name: "huart", arg: 1, scope: !9881, file: !2309, line: 2722, type: !2334)
!9884 = !DILocation(line: 0, scope: !9881)
!9885 = !DILocation(line: 2725, column: 3, scope: !9881)
!9886 = !DILocation(line: 2728, column: 10, scope: !9881)
!9887 = !DILocation(line: 2728, column: 17, scope: !9881)
!9888 = !DILocation(line: 2729, column: 1, scope: !9881)
!9889 = distinct !DISubprogram(name: "UART_EndRxTransfer", scope: !2309, file: !2309, line: 2736, type: !9310, scopeLine: 2737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9890)
!9890 = !{!9891}
!9891 = !DILocalVariable(name: "huart", arg: 1, scope: !9889, file: !2309, line: 2736, type: !2334)
!9892 = !DILocation(line: 0, scope: !9889)
!9893 = !DILocation(line: 2739, column: 3, scope: !9889)
!9894 = !DILocation(line: 2740, column: 3, scope: !9889)
!9895 = !DILocation(line: 2743, column: 10, scope: !9889)
!9896 = !DILocation(line: 2743, column: 18, scope: !9889)
!9897 = !DILocation(line: 2744, column: 1, scope: !9889)
!9898 = distinct !DISubprogram(name: "HAL_UART_ErrorCallback", scope: !2309, file: !2309, line: 2227, type: !9310, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9899)
!9899 = !{!9900}
!9900 = !DILocalVariable(name: "huart", arg: 1, scope: !9898, file: !2309, line: 2227, type: !2334)
!9901 = !DILocation(line: 0, scope: !9898)
!9902 = !DILocation(line: 2234, column: 1, scope: !9898)
!9903 = distinct !DISubprogram(name: "HAL_UART_TxHalfCpltCallback", scope: !2309, file: !2309, line: 2182, type: !9310, scopeLine: 2183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9904)
!9904 = !{!9905}
!9905 = !DILocalVariable(name: "huart", arg: 1, scope: !9903, file: !2309, line: 2182, type: !2334)
!9906 = !DILocation(line: 0, scope: !9903)
!9907 = !DILocation(line: 2189, column: 1, scope: !9903)
!9908 = distinct !DISubprogram(name: "HAL_UART_TxCpltCallback", scope: !2309, file: !2309, line: 2167, type: !9310, scopeLine: 2168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9909)
!9909 = !{!9910}
!9910 = !DILocalVariable(name: "huart", arg: 1, scope: !9908, file: !2309, line: 2167, type: !2334)
!9911 = !DILocation(line: 0, scope: !9908)
!9912 = !DILocation(line: 2174, column: 1, scope: !9908)
!9913 = distinct !DISubprogram(name: "HAL_UART_Receive_DMA", scope: !2309, file: !2309, line: 1367, type: !9682, scopeLine: 1368, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9914)
!9914 = !{!9915, !9916, !9917, !9918, !9919}
!9915 = !DILocalVariable(name: "huart", arg: 1, scope: !9913, file: !2309, line: 1367, type: !2334)
!9916 = !DILocalVariable(name: "pData", arg: 2, scope: !9913, file: !2309, line: 1367, type: !44)
!9917 = !DILocalVariable(name: "Size", arg: 3, scope: !9913, file: !2309, line: 1367, type: !37)
!9918 = !DILocalVariable(name: "tmp", scope: !9913, file: !2309, line: 1369, type: !710)
!9919 = !DILocalVariable(name: "tmpreg", scope: !9920, file: !2309, line: 1405, type: !23)
!9920 = distinct !DILexicalBlock(scope: !9921, file: !2309, line: 1405, column: 5)
!9921 = distinct !DILexicalBlock(scope: !9922, file: !2309, line: 1373, column: 3)
!9922 = distinct !DILexicalBlock(scope: !9913, file: !2309, line: 1372, column: 7)
!9923 = !DILocation(line: 0, scope: !9913)
!9924 = !DILocation(line: 1372, column: 14, scope: !9922)
!9925 = !DILocation(line: 1372, column: 22, scope: !9922)
!9926 = !DILocation(line: 1372, column: 7, scope: !9913)
!9927 = !DILocation(line: 1374, column: 16, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9921, file: !2309, line: 1374, column: 9)
!9929 = !DILocation(line: 1374, column: 25, scope: !9928)
!9930 = !DILocation(line: 1380, column: 5, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9932, file: !2309, line: 1380, column: 5)
!9932 = distinct !DILexicalBlock(scope: !9921, file: !2309, line: 1380, column: 5)
!9933 = !DILocation(line: 1380, column: 5, scope: !9932)
!9934 = !DILocation(line: 1380, column: 5, scope: !9935)
!9935 = distinct !DILexicalBlock(scope: !9931, file: !2309, line: 1380, column: 5)
!9936 = !DILocation(line: 1382, column: 12, scope: !9921)
!9937 = !DILocation(line: 1382, column: 23, scope: !9921)
!9938 = !DILocation(line: 1383, column: 12, scope: !9921)
!9939 = !DILocation(line: 1383, column: 23, scope: !9921)
!9940 = !DILocation(line: 1385, column: 12, scope: !9921)
!9941 = !DILocation(line: 1385, column: 22, scope: !9921)
!9942 = !DILocation(line: 1386, column: 20, scope: !9921)
!9943 = !DILocation(line: 1389, column: 12, scope: !9921)
!9944 = !{!9283, !2842, i64 52}
!9945 = !DILocation(line: 1389, column: 20, scope: !9921)
!9946 = !DILocation(line: 1389, column: 37, scope: !9921)
!9947 = !DILocation(line: 1392, column: 20, scope: !9921)
!9948 = !DILocation(line: 1392, column: 41, scope: !9921)
!9949 = !DILocation(line: 1395, column: 20, scope: !9921)
!9950 = !DILocation(line: 1395, column: 38, scope: !9921)
!9951 = !DILocation(line: 1398, column: 20, scope: !9921)
!9952 = !DILocation(line: 1398, column: 38, scope: !9921)
!9953 = !DILocation(line: 1402, column: 55, scope: !9921)
!9954 = !DILocation(line: 1402, column: 65, scope: !9921)
!9955 = !DILocation(line: 1402, column: 37, scope: !9921)
!9956 = !DILocation(line: 1402, column: 69, scope: !9921)
!9957 = !DILocation(line: 1402, column: 5, scope: !9921)
!9958 = !DILocation(line: 1405, column: 5, scope: !9920)
!9959 = !DILocation(line: 1405, column: 5, scope: !9921)
!9960 = !DILocation(line: 1408, column: 5, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9921, file: !2309, line: 1408, column: 5)
!9962 = !DILocation(line: 1411, column: 5, scope: !9921)
!9963 = !DILocation(line: 1414, column: 5, scope: !9921)
!9964 = !DILocation(line: 1418, column: 5, scope: !9921)
!9965 = !DILocation(line: 1420, column: 5, scope: !9921)
!9966 = !DILocation(line: 0, scope: !9922)
!9967 = !DILocation(line: 1426, column: 1, scope: !9913)
!9968 = distinct !DISubprogram(name: "UART_DMAReceiveCplt", scope: !2309, file: !2309, line: 2596, type: !9815, scopeLine: 2597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9969)
!9969 = !{!9970, !9971}
!9970 = !DILocalVariable(name: "hdma", arg: 1, scope: !9968, file: !2309, line: 2596, type: !2368)
!9971 = !DILocalVariable(name: "huart", scope: !9968, file: !2309, line: 2598, type: !2334)
!9972 = !DILocation(line: 0, scope: !9968)
!9973 = !DILocation(line: 2598, column: 82, scope: !9968)
!9974 = !DILocation(line: 2600, column: 14, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9968, file: !2309, line: 2600, column: 7)
!9976 = !DILocation(line: 2600, column: 24, scope: !9975)
!9977 = !DILocation(line: 2600, column: 28, scope: !9975)
!9978 = !DILocation(line: 2600, column: 44, scope: !9975)
!9979 = !DILocation(line: 2600, column: 7, scope: !9968)
!9980 = !DILocation(line: 2602, column: 12, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9975, file: !2309, line: 2601, column: 3)
!9982 = !DILocation(line: 2602, column: 24, scope: !9981)
!9983 = !DILocation(line: 2605, column: 5, scope: !9981)
!9984 = !DILocation(line: 2606, column: 5, scope: !9981)
!9985 = !DILocation(line: 2610, column: 5, scope: !9981)
!9986 = !DILocation(line: 2613, column: 12, scope: !9981)
!9987 = !DILocation(line: 2613, column: 20, scope: !9981)
!9988 = !DILocation(line: 2614, column: 3, scope: !9981)
!9989 = !DILocation(line: 2620, column: 3, scope: !9968)
!9990 = !DILocation(line: 2622, column: 1, scope: !9968)
!9991 = distinct !DISubprogram(name: "UART_DMARxHalfCplt", scope: !2309, file: !2309, line: 2630, type: !9815, scopeLine: 2631, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !9992)
!9992 = !{!9993, !9994}
!9993 = !DILocalVariable(name: "hdma", arg: 1, scope: !9991, file: !2309, line: 2630, type: !2368)
!9994 = !DILocalVariable(name: "huart", scope: !9991, file: !2309, line: 2632, type: !2334)
!9995 = !DILocation(line: 0, scope: !9991)
!9996 = !DILocation(line: 2632, column: 82, scope: !9991)
!9997 = !DILocation(line: 2639, column: 3, scope: !9991)
!9998 = !DILocation(line: 2641, column: 1, scope: !9991)
!9999 = distinct !DISubprogram(name: "HAL_UART_RxHalfCpltCallback", scope: !2309, file: !2309, line: 2212, type: !9310, scopeLine: 2213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10000)
!10000 = !{!10001}
!10001 = !DILocalVariable(name: "huart", arg: 1, scope: !9999, file: !2309, line: 2212, type: !2334)
!10002 = !DILocation(line: 0, scope: !9999)
!10003 = !DILocation(line: 2219, column: 1, scope: !9999)
!10004 = distinct !DISubprogram(name: "HAL_UART_RxCpltCallback", scope: !2309, file: !2309, line: 2197, type: !9310, scopeLine: 2198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10005)
!10005 = !{!10006}
!10006 = !DILocalVariable(name: "huart", arg: 1, scope: !10004, file: !2309, line: 2197, type: !2334)
!10007 = !DILocation(line: 0, scope: !10004)
!10008 = !DILocation(line: 2204, column: 1, scope: !10004)
!10009 = distinct !DISubprogram(name: "HAL_UART_DMAPause", scope: !2309, file: !2309, line: 1434, type: !9272, scopeLine: 1435, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10010)
!10010 = !{!10011, !10012}
!10011 = !DILocalVariable(name: "huart", arg: 1, scope: !10009, file: !2309, line: 1434, type: !2334)
!10012 = !DILocalVariable(name: "dmarequest", scope: !10009, file: !2309, line: 1436, type: !24)
!10013 = !DILocation(line: 0, scope: !10009)
!10014 = !DILocation(line: 1439, column: 3, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !10016, file: !2309, line: 1439, column: 3)
!10016 = distinct !DILexicalBlock(scope: !10009, file: !2309, line: 1439, column: 3)
!10017 = !DILocation(line: 1439, column: 3, scope: !10016)
!10018 = !DILocation(line: 1439, column: 3, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !10015, file: !2309, line: 1439, column: 3)
!10020 = !DILocation(line: 1441, column: 16, scope: !10009)
!10021 = !DILocation(line: 1442, column: 15, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !10009, file: !2309, line: 1442, column: 7)
!10023 = !DILocation(line: 1442, column: 22, scope: !10022)
!10024 = !DILocation(line: 1442, column: 49, scope: !10022)
!10025 = !DILocation(line: 1445, column: 5, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10022, file: !2309, line: 1443, column: 3)
!10027 = !DILocation(line: 1446, column: 3, scope: !10026)
!10028 = !DILocation(line: 1448, column: 16, scope: !10009)
!10029 = !DILocation(line: 1449, column: 15, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !10009, file: !2309, line: 1449, column: 7)
!10031 = !DILocation(line: 1449, column: 23, scope: !10030)
!10032 = !DILocation(line: 1449, column: 50, scope: !10030)
!10033 = !DILocation(line: 1452, column: 5, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !10030, file: !2309, line: 1450, column: 3)
!10035 = !DILocation(line: 1453, column: 5, scope: !10034)
!10036 = !DILocation(line: 1456, column: 5, scope: !10034)
!10037 = !DILocation(line: 1457, column: 3, scope: !10034)
!10038 = !DILocation(line: 1460, column: 3, scope: !10039)
!10039 = distinct !DILexicalBlock(scope: !10009, file: !2309, line: 1460, column: 3)
!10040 = !DILocation(line: 1462, column: 3, scope: !10009)
!10041 = !DILocation(line: 1463, column: 1, scope: !10009)
!10042 = distinct !DISubprogram(name: "HAL_UART_DMAResume", scope: !2309, file: !2309, line: 1471, type: !9272, scopeLine: 1472, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10043)
!10043 = !{!10044, !10045}
!10044 = !DILocalVariable(name: "huart", arg: 1, scope: !10042, file: !2309, line: 1471, type: !2334)
!10045 = !DILocalVariable(name: "tmpreg", scope: !10046, file: !2309, line: 1485, type: !23)
!10046 = distinct !DILexicalBlock(scope: !10047, file: !2309, line: 1485, column: 5)
!10047 = distinct !DILexicalBlock(scope: !10048, file: !2309, line: 1483, column: 3)
!10048 = distinct !DILexicalBlock(scope: !10042, file: !2309, line: 1482, column: 7)
!10049 = !DILocation(line: 0, scope: !10042)
!10050 = !DILocation(line: 1474, column: 3, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !10052, file: !2309, line: 1474, column: 3)
!10052 = distinct !DILexicalBlock(scope: !10042, file: !2309, line: 1474, column: 3)
!10053 = !DILocation(line: 1474, column: 3, scope: !10052)
!10054 = !DILocation(line: 1474, column: 3, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10051, file: !2309, line: 1474, column: 3)
!10056 = !DILocation(line: 1476, column: 14, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10042, file: !2309, line: 1476, column: 7)
!10058 = !DILocation(line: 1476, column: 21, scope: !10057)
!10059 = !DILocation(line: 1476, column: 7, scope: !10042)
!10060 = !DILocation(line: 1479, column: 5, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10057, file: !2309, line: 1477, column: 3)
!10062 = !DILocation(line: 1480, column: 3, scope: !10061)
!10063 = !DILocation(line: 1482, column: 14, scope: !10048)
!10064 = !DILocation(line: 1482, column: 22, scope: !10048)
!10065 = !DILocation(line: 1482, column: 7, scope: !10042)
!10066 = !DILocation(line: 1485, column: 5, scope: !10046)
!10067 = !DILocation(line: 1485, column: 5, scope: !10047)
!10068 = !DILocation(line: 1488, column: 5, scope: !10047)
!10069 = !DILocation(line: 1489, column: 5, scope: !10047)
!10070 = !DILocation(line: 1492, column: 5, scope: !10047)
!10071 = !DILocation(line: 1493, column: 3, scope: !10047)
!10072 = !DILocation(line: 1496, column: 3, scope: !10073)
!10073 = distinct !DILexicalBlock(scope: !10042, file: !2309, line: 1496, column: 3)
!10074 = !DILocation(line: 1498, column: 3, scope: !10042)
!10075 = !DILocation(line: 1499, column: 1, scope: !10042)
!10076 = distinct !DISubprogram(name: "HAL_UART_DMAStop", scope: !2309, file: !2309, line: 1507, type: !9272, scopeLine: 1508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10077)
!10077 = !{!10078, !10079}
!10078 = !DILocalVariable(name: "huart", arg: 1, scope: !10076, file: !2309, line: 1507, type: !2334)
!10079 = !DILocalVariable(name: "dmarequest", scope: !10076, file: !2309, line: 1509, type: !24)
!10080 = !DILocation(line: 0, scope: !10076)
!10081 = !DILocation(line: 1517, column: 16, scope: !10076)
!10082 = !DILocation(line: 1518, column: 15, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10076, file: !2309, line: 1518, column: 7)
!10084 = !DILocation(line: 1518, column: 22, scope: !10083)
!10085 = !DILocation(line: 1518, column: 49, scope: !10083)
!10086 = !DILocation(line: 1520, column: 5, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10083, file: !2309, line: 1519, column: 3)
!10088 = !DILocation(line: 1523, column: 16, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !10087, file: !2309, line: 1523, column: 9)
!10090 = !DILocation(line: 1523, column: 23, scope: !10089)
!10091 = !DILocation(line: 1523, column: 9, scope: !10087)
!10092 = !DILocation(line: 1525, column: 7, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10089, file: !2309, line: 1524, column: 5)
!10094 = !DILocation(line: 1526, column: 5, scope: !10093)
!10095 = !DILocation(line: 1527, column: 5, scope: !10087)
!10096 = !DILocation(line: 1528, column: 3, scope: !10087)
!10097 = !DILocation(line: 1531, column: 16, scope: !10076)
!10098 = !DILocation(line: 1532, column: 15, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10076, file: !2309, line: 1532, column: 7)
!10100 = !DILocation(line: 1532, column: 23, scope: !10099)
!10101 = !DILocation(line: 1532, column: 50, scope: !10099)
!10102 = !DILocation(line: 1534, column: 5, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10099, file: !2309, line: 1533, column: 3)
!10104 = !DILocation(line: 1537, column: 16, scope: !10105)
!10105 = distinct !DILexicalBlock(scope: !10103, file: !2309, line: 1537, column: 9)
!10106 = !DILocation(line: 1537, column: 23, scope: !10105)
!10107 = !DILocation(line: 1537, column: 9, scope: !10103)
!10108 = !DILocation(line: 1539, column: 7, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10105, file: !2309, line: 1538, column: 5)
!10110 = !DILocation(line: 1540, column: 5, scope: !10109)
!10111 = !DILocation(line: 1541, column: 5, scope: !10103)
!10112 = !DILocation(line: 1542, column: 3, scope: !10103)
!10113 = !DILocation(line: 1544, column: 3, scope: !10076)
!10114 = !DISubprogram(name: "HAL_DMA_Abort", scope: !853, file: !853, line: 379, type: !10115, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !121)
!10115 = !DISubroutineType(types: !10116)
!10116 = !{!3735, !2368}
!10117 = distinct !DISubprogram(name: "HAL_UART_Abort", scope: !2309, file: !2309, line: 1559, type: !9272, scopeLine: 1560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10118)
!10118 = !{!10119}
!10119 = !DILocalVariable(name: "huart", arg: 1, scope: !10117, file: !2309, line: 1559, type: !2334)
!10120 = !DILocation(line: 0, scope: !10117)
!10121 = !DILocation(line: 1562, column: 3, scope: !10117)
!10122 = !DILocation(line: 1563, column: 3, scope: !10117)
!10123 = !DILocation(line: 1566, column: 7, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10117, file: !2309, line: 1566, column: 7)
!10125 = !DILocation(line: 1566, column: 7, scope: !10117)
!10126 = !DILocation(line: 1568, column: 5, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !10124, file: !2309, line: 1567, column: 3)
!10128 = !DILocation(line: 1571, column: 16, scope: !10129)
!10129 = distinct !DILexicalBlock(scope: !10127, file: !2309, line: 1571, column: 9)
!10130 = !DILocation(line: 1571, column: 23, scope: !10129)
!10131 = !DILocation(line: 1571, column: 9, scope: !10127)
!10132 = !DILocation(line: 1575, column: 22, scope: !10133)
!10133 = distinct !DILexicalBlock(scope: !10129, file: !2309, line: 1572, column: 5)
!10134 = !DILocation(line: 1575, column: 40, scope: !10133)
!10135 = !DILocation(line: 1577, column: 11, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10133, file: !2309, line: 1577, column: 11)
!10137 = !DILocation(line: 1577, column: 40, scope: !10136)
!10138 = !DILocation(line: 1577, column: 11, scope: !10133)
!10139 = !DILocation(line: 1579, column: 37, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10141, file: !2309, line: 1579, column: 13)
!10141 = distinct !DILexicalBlock(scope: !10136, file: !2309, line: 1578, column: 7)
!10142 = !DILocation(line: 1579, column: 13, scope: !10140)
!10143 = !DILocation(line: 1579, column: 45, scope: !10140)
!10144 = !DILocation(line: 1579, column: 13, scope: !10141)
!10145 = !DILocation(line: 1582, column: 18, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10140, file: !2309, line: 1580, column: 9)
!10147 = !DILocation(line: 1582, column: 28, scope: !10146)
!10148 = !DILocation(line: 1584, column: 11, scope: !10146)
!10149 = !DILocation(line: 1591, column: 7, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10117, file: !2309, line: 1591, column: 7)
!10151 = !DILocation(line: 1591, column: 7, scope: !10117)
!10152 = !DILocation(line: 1593, column: 5, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10150, file: !2309, line: 1592, column: 3)
!10154 = !DILocation(line: 1596, column: 16, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10153, file: !2309, line: 1596, column: 9)
!10156 = !DILocation(line: 1596, column: 23, scope: !10155)
!10157 = !DILocation(line: 1596, column: 9, scope: !10153)
!10158 = !DILocation(line: 1600, column: 22, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10155, file: !2309, line: 1597, column: 5)
!10160 = !DILocation(line: 1600, column: 40, scope: !10159)
!10161 = !DILocation(line: 1602, column: 11, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10159, file: !2309, line: 1602, column: 11)
!10163 = !DILocation(line: 1602, column: 40, scope: !10162)
!10164 = !DILocation(line: 1602, column: 11, scope: !10159)
!10165 = !DILocation(line: 1604, column: 37, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10167, file: !2309, line: 1604, column: 13)
!10167 = distinct !DILexicalBlock(scope: !10162, file: !2309, line: 1603, column: 7)
!10168 = !DILocation(line: 1604, column: 13, scope: !10166)
!10169 = !DILocation(line: 1604, column: 45, scope: !10166)
!10170 = !DILocation(line: 1604, column: 13, scope: !10167)
!10171 = !DILocation(line: 1607, column: 18, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10166, file: !2309, line: 1605, column: 9)
!10173 = !DILocation(line: 1607, column: 28, scope: !10172)
!10174 = !DILocation(line: 1609, column: 11, scope: !10172)
!10175 = !DILocation(line: 1616, column: 10, scope: !10117)
!10176 = !DILocation(line: 1616, column: 22, scope: !10117)
!10177 = !DILocation(line: 1617, column: 10, scope: !10117)
!10178 = !DILocation(line: 1617, column: 22, scope: !10117)
!10179 = !DILocation(line: 1620, column: 10, scope: !10117)
!10180 = !DILocation(line: 1620, column: 20, scope: !10117)
!10181 = !DILocation(line: 1623, column: 10, scope: !10117)
!10182 = !DILocation(line: 1623, column: 18, scope: !10117)
!10183 = !DILocation(line: 1624, column: 10, scope: !10117)
!10184 = !DILocation(line: 1624, column: 17, scope: !10117)
!10185 = !DILocation(line: 1626, column: 3, scope: !10117)
!10186 = !DILocation(line: 1627, column: 1, scope: !10117)
!10187 = !DISubprogram(name: "HAL_DMA_GetError", scope: !853, file: !853, line: 395, type: !10188, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !121)
!10188 = !DISubroutineType(types: !10189)
!10189 = !{!24, !2368}
!10190 = distinct !DISubprogram(name: "HAL_UART_AbortTransmit", scope: !2309, file: !2309, line: 1641, type: !9272, scopeLine: 1642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10191)
!10191 = !{!10192}
!10192 = !DILocalVariable(name: "huart", arg: 1, scope: !10190, file: !2309, line: 1641, type: !2334)
!10193 = !DILocation(line: 0, scope: !10190)
!10194 = !DILocation(line: 1644, column: 3, scope: !10190)
!10195 = !DILocation(line: 1647, column: 7, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !10190, file: !2309, line: 1647, column: 7)
!10197 = !DILocation(line: 1647, column: 7, scope: !10190)
!10198 = !DILocation(line: 1649, column: 5, scope: !10199)
!10199 = distinct !DILexicalBlock(scope: !10196, file: !2309, line: 1648, column: 3)
!10200 = !DILocation(line: 1652, column: 16, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10199, file: !2309, line: 1652, column: 9)
!10202 = !DILocation(line: 1652, column: 23, scope: !10201)
!10203 = !DILocation(line: 1652, column: 9, scope: !10199)
!10204 = !DILocation(line: 1656, column: 22, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10201, file: !2309, line: 1653, column: 5)
!10206 = !DILocation(line: 1656, column: 40, scope: !10205)
!10207 = !DILocation(line: 1658, column: 11, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !10205, file: !2309, line: 1658, column: 11)
!10209 = !DILocation(line: 1658, column: 40, scope: !10208)
!10210 = !DILocation(line: 1658, column: 11, scope: !10205)
!10211 = !DILocation(line: 1660, column: 37, scope: !10212)
!10212 = distinct !DILexicalBlock(scope: !10213, file: !2309, line: 1660, column: 13)
!10213 = distinct !DILexicalBlock(scope: !10208, file: !2309, line: 1659, column: 7)
!10214 = !DILocation(line: 1660, column: 13, scope: !10212)
!10215 = !DILocation(line: 1660, column: 45, scope: !10212)
!10216 = !DILocation(line: 1660, column: 13, scope: !10213)
!10217 = !DILocation(line: 1663, column: 18, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10212, file: !2309, line: 1661, column: 9)
!10219 = !DILocation(line: 1663, column: 28, scope: !10218)
!10220 = !DILocation(line: 1665, column: 11, scope: !10218)
!10221 = !DILocation(line: 1672, column: 10, scope: !10190)
!10222 = !DILocation(line: 1672, column: 22, scope: !10190)
!10223 = !DILocation(line: 1675, column: 10, scope: !10190)
!10224 = !DILocation(line: 1675, column: 17, scope: !10190)
!10225 = !DILocation(line: 1677, column: 3, scope: !10190)
!10226 = !DILocation(line: 1678, column: 1, scope: !10190)
!10227 = distinct !DISubprogram(name: "HAL_UART_AbortReceive", scope: !2309, file: !2309, line: 1692, type: !9272, scopeLine: 1693, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10228)
!10228 = !{!10229}
!10229 = !DILocalVariable(name: "huart", arg: 1, scope: !10227, file: !2309, line: 1692, type: !2334)
!10230 = !DILocation(line: 0, scope: !10227)
!10231 = !DILocation(line: 1695, column: 3, scope: !10227)
!10232 = !DILocation(line: 1696, column: 3, scope: !10227)
!10233 = !DILocation(line: 1699, column: 7, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10227, file: !2309, line: 1699, column: 7)
!10235 = !DILocation(line: 1699, column: 7, scope: !10227)
!10236 = !DILocation(line: 1701, column: 5, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !10234, file: !2309, line: 1700, column: 3)
!10238 = !DILocation(line: 1704, column: 16, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !10237, file: !2309, line: 1704, column: 9)
!10240 = !DILocation(line: 1704, column: 23, scope: !10239)
!10241 = !DILocation(line: 1704, column: 9, scope: !10237)
!10242 = !DILocation(line: 1708, column: 22, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !10239, file: !2309, line: 1705, column: 5)
!10244 = !DILocation(line: 1708, column: 40, scope: !10243)
!10245 = !DILocation(line: 1710, column: 11, scope: !10246)
!10246 = distinct !DILexicalBlock(scope: !10243, file: !2309, line: 1710, column: 11)
!10247 = !DILocation(line: 1710, column: 40, scope: !10246)
!10248 = !DILocation(line: 1710, column: 11, scope: !10243)
!10249 = !DILocation(line: 1712, column: 37, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10251, file: !2309, line: 1712, column: 13)
!10251 = distinct !DILexicalBlock(scope: !10246, file: !2309, line: 1711, column: 7)
!10252 = !DILocation(line: 1712, column: 13, scope: !10250)
!10253 = !DILocation(line: 1712, column: 45, scope: !10250)
!10254 = !DILocation(line: 1712, column: 13, scope: !10251)
!10255 = !DILocation(line: 1715, column: 18, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10250, file: !2309, line: 1713, column: 9)
!10257 = !DILocation(line: 1715, column: 28, scope: !10256)
!10258 = !DILocation(line: 1717, column: 11, scope: !10256)
!10259 = !DILocation(line: 1724, column: 10, scope: !10227)
!10260 = !DILocation(line: 1724, column: 22, scope: !10227)
!10261 = !DILocation(line: 1727, column: 10, scope: !10227)
!10262 = !DILocation(line: 1727, column: 18, scope: !10227)
!10263 = !DILocation(line: 1729, column: 3, scope: !10227)
!10264 = !DILocation(line: 1730, column: 1, scope: !10227)
!10265 = distinct !DISubprogram(name: "HAL_UART_Abort_IT", scope: !2309, file: !2309, line: 1746, type: !9272, scopeLine: 1747, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10266)
!10266 = !{!10267, !10268}
!10267 = !DILocalVariable(name: "huart", arg: 1, scope: !10265, file: !2309, line: 1746, type: !2334)
!10268 = !DILocalVariable(name: "AbortCplt", scope: !10265, file: !2309, line: 1748, type: !24)
!10269 = !DILocation(line: 0, scope: !10265)
!10270 = !DILocation(line: 1751, column: 3, scope: !10265)
!10271 = !DILocation(line: 1752, column: 3, scope: !10265)
!10272 = !DILocation(line: 1757, column: 14, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10265, file: !2309, line: 1757, column: 7)
!10274 = !DILocation(line: 1757, column: 21, scope: !10273)
!10275 = !DILocation(line: 1757, column: 7, scope: !10265)
!10276 = !DILocation(line: 1761, column: 9, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !10278, file: !2309, line: 1761, column: 9)
!10278 = distinct !DILexicalBlock(scope: !10273, file: !2309, line: 1758, column: 3)
!10279 = !DILocation(line: 0, scope: !10277)
!10280 = !DILocation(line: 1771, column: 14, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10265, file: !2309, line: 1771, column: 7)
!10282 = !DILocation(line: 1771, column: 21, scope: !10281)
!10283 = !DILocation(line: 1771, column: 7, scope: !10265)
!10284 = !DILocation(line: 1775, column: 9, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10286, file: !2309, line: 1775, column: 9)
!10286 = distinct !DILexicalBlock(scope: !10281, file: !2309, line: 1772, column: 3)
!10287 = !DILocation(line: 0, scope: !10285)
!10288 = !DILocation(line: 1786, column: 7, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10265, file: !2309, line: 1786, column: 7)
!10290 = !DILocation(line: 1786, column: 7, scope: !10265)
!10291 = !DILocation(line: 1789, column: 5, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10289, file: !2309, line: 1787, column: 3)
!10293 = !DILocation(line: 1792, column: 9, scope: !10292)
!10294 = !DILocation(line: 1798, column: 11, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10296, file: !2309, line: 1798, column: 11)
!10296 = distinct !DILexicalBlock(scope: !10297, file: !2309, line: 1793, column: 5)
!10297 = distinct !DILexicalBlock(scope: !10292, file: !2309, line: 1792, column: 9)
!10298 = !DILocation(line: 1798, column: 43, scope: !10295)
!10299 = !DILocation(line: 1798, column: 11, scope: !10296)
!10300 = !DILocation(line: 1800, column: 16, scope: !10301)
!10301 = distinct !DILexicalBlock(scope: !10295, file: !2309, line: 1799, column: 7)
!10302 = !DILocation(line: 1800, column: 24, scope: !10301)
!10303 = !DILocation(line: 1800, column: 42, scope: !10301)
!10304 = !DILocation(line: 1801, column: 7, scope: !10301)
!10305 = !DILocation(line: 1810, column: 7, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !10265, file: !2309, line: 1810, column: 7)
!10307 = !DILocation(line: 1810, column: 7, scope: !10265)
!10308 = !DILocation(line: 1812, column: 5, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10306, file: !2309, line: 1811, column: 3)
!10310 = !DILocation(line: 1815, column: 16, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !10309, file: !2309, line: 1815, column: 9)
!10312 = !DILocation(line: 1815, column: 23, scope: !10311)
!10313 = !DILocation(line: 1815, column: 9, scope: !10309)
!10314 = !DILocation(line: 1821, column: 11, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10316, file: !2309, line: 1821, column: 11)
!10316 = distinct !DILexicalBlock(scope: !10311, file: !2309, line: 1816, column: 5)
!10317 = !DILocation(line: 1821, column: 43, scope: !10315)
!10318 = !DILocation(line: 1821, column: 11, scope: !10316)
!10319 = !DILocation(line: 1823, column: 16, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10315, file: !2309, line: 1822, column: 7)
!10321 = !DILocation(line: 1823, column: 24, scope: !10320)
!10322 = !DILocation(line: 1823, column: 42, scope: !10320)
!10323 = !DILocation(line: 1825, column: 7, scope: !10320)
!10324 = !DILocation(line: 1834, column: 17, scope: !10325)
!10325 = distinct !DILexicalBlock(scope: !10265, file: !2309, line: 1834, column: 7)
!10326 = !DILocation(line: 1834, column: 7, scope: !10265)
!10327 = !DILocation(line: 1837, column: 12, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10325, file: !2309, line: 1835, column: 3)
!10329 = !DILocation(line: 1837, column: 24, scope: !10328)
!10330 = !DILocation(line: 1838, column: 12, scope: !10328)
!10331 = !DILocation(line: 1838, column: 24, scope: !10328)
!10332 = !DILocation(line: 1841, column: 12, scope: !10328)
!10333 = !DILocation(line: 1841, column: 22, scope: !10328)
!10334 = !DILocation(line: 1844, column: 12, scope: !10328)
!10335 = !DILocation(line: 1844, column: 20, scope: !10328)
!10336 = !DILocation(line: 1845, column: 12, scope: !10328)
!10337 = !DILocation(line: 1845, column: 20, scope: !10328)
!10338 = !DILocation(line: 1853, column: 5, scope: !10328)
!10339 = !DILocation(line: 1855, column: 3, scope: !10328)
!10340 = !DILocation(line: 1857, column: 3, scope: !10265)
!10341 = distinct !DISubprogram(name: "UART_DMATxAbortCallback", scope: !2309, file: !2309, line: 2777, type: !9815, scopeLine: 2778, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10342)
!10342 = !{!10343, !10344}
!10343 = !DILocalVariable(name: "hdma", arg: 1, scope: !10341, file: !2309, line: 2777, type: !2368)
!10344 = !DILocalVariable(name: "huart", scope: !10341, file: !2309, line: 2779, type: !2334)
!10345 = !DILocation(line: 0, scope: !10341)
!10346 = !DILocation(line: 2779, column: 82, scope: !10341)
!10347 = !DILocation(line: 2781, column: 10, scope: !10341)
!10348 = !DILocation(line: 2781, column: 18, scope: !10341)
!10349 = !DILocation(line: 2781, column: 36, scope: !10341)
!10350 = !DILocation(line: 2784, column: 14, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10341, file: !2309, line: 2784, column: 7)
!10352 = !DILocation(line: 2784, column: 21, scope: !10351)
!10353 = !DILocation(line: 2784, column: 7, scope: !10341)
!10354 = !DILocation(line: 2786, column: 24, scope: !10355)
!10355 = distinct !DILexicalBlock(scope: !10356, file: !2309, line: 2786, column: 9)
!10356 = distinct !DILexicalBlock(scope: !10351, file: !2309, line: 2785, column: 3)
!10357 = !DILocation(line: 2786, column: 42, scope: !10355)
!10358 = !DILocation(line: 2786, column: 9, scope: !10356)
!10359 = !DILocation(line: 2793, column: 10, scope: !10341)
!10360 = !DILocation(line: 2793, column: 22, scope: !10341)
!10361 = !DILocation(line: 2794, column: 10, scope: !10341)
!10362 = !DILocation(line: 2794, column: 22, scope: !10341)
!10363 = !DILocation(line: 2797, column: 10, scope: !10341)
!10364 = !DILocation(line: 2797, column: 20, scope: !10341)
!10365 = !DILocation(line: 2800, column: 10, scope: !10341)
!10366 = !DILocation(line: 2800, column: 18, scope: !10341)
!10367 = !DILocation(line: 2801, column: 10, scope: !10341)
!10368 = !DILocation(line: 2801, column: 18, scope: !10341)
!10369 = !DILocation(line: 2809, column: 3, scope: !10341)
!10370 = !DILocation(line: 2811, column: 1, scope: !10341)
!10371 = distinct !DISubprogram(name: "UART_DMARxAbortCallback", scope: !2309, file: !2309, line: 2822, type: !9815, scopeLine: 2823, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10372)
!10372 = !{!10373, !10374}
!10373 = !DILocalVariable(name: "hdma", arg: 1, scope: !10371, file: !2309, line: 2822, type: !2368)
!10374 = !DILocalVariable(name: "huart", scope: !10371, file: !2309, line: 2824, type: !2334)
!10375 = !DILocation(line: 0, scope: !10371)
!10376 = !DILocation(line: 2824, column: 82, scope: !10371)
!10377 = !DILocation(line: 2826, column: 10, scope: !10371)
!10378 = !DILocation(line: 2826, column: 18, scope: !10371)
!10379 = !DILocation(line: 2826, column: 36, scope: !10371)
!10380 = !DILocation(line: 2829, column: 14, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !10371, file: !2309, line: 2829, column: 7)
!10382 = !DILocation(line: 2829, column: 21, scope: !10381)
!10383 = !DILocation(line: 2829, column: 7, scope: !10371)
!10384 = !DILocation(line: 2831, column: 24, scope: !10385)
!10385 = distinct !DILexicalBlock(scope: !10386, file: !2309, line: 2831, column: 9)
!10386 = distinct !DILexicalBlock(scope: !10381, file: !2309, line: 2830, column: 3)
!10387 = !DILocation(line: 2831, column: 42, scope: !10385)
!10388 = !DILocation(line: 2831, column: 9, scope: !10386)
!10389 = !DILocation(line: 2838, column: 10, scope: !10371)
!10390 = !DILocation(line: 2838, column: 22, scope: !10371)
!10391 = !DILocation(line: 2839, column: 10, scope: !10371)
!10392 = !DILocation(line: 2839, column: 22, scope: !10371)
!10393 = !DILocation(line: 2842, column: 10, scope: !10371)
!10394 = !DILocation(line: 2842, column: 20, scope: !10371)
!10395 = !DILocation(line: 2845, column: 10, scope: !10371)
!10396 = !DILocation(line: 2845, column: 18, scope: !10371)
!10397 = !DILocation(line: 2846, column: 10, scope: !10371)
!10398 = !DILocation(line: 2846, column: 18, scope: !10371)
!10399 = !DILocation(line: 2854, column: 3, scope: !10371)
!10400 = !DILocation(line: 2856, column: 1, scope: !10371)
!10401 = !DISubprogram(name: "HAL_DMA_Abort_IT", scope: !853, file: !853, line: 380, type: !10115, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !121)
!10402 = distinct !DISubprogram(name: "HAL_UART_AbortCpltCallback", scope: !2309, file: !2309, line: 2241, type: !9310, scopeLine: 2242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10403)
!10403 = !{!10404}
!10404 = !DILocalVariable(name: "huart", arg: 1, scope: !10402, file: !2309, line: 2241, type: !2334)
!10405 = !DILocation(line: 0, scope: !10402)
!10406 = !DILocation(line: 2249, column: 1, scope: !10402)
!10407 = distinct !DISubprogram(name: "HAL_UART_AbortTransmit_IT", scope: !2309, file: !2309, line: 1874, type: !9272, scopeLine: 1875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10408)
!10408 = !{!10409}
!10409 = !DILocalVariable(name: "huart", arg: 1, scope: !10407, file: !2309, line: 1874, type: !2334)
!10410 = !DILocation(line: 0, scope: !10407)
!10411 = !DILocation(line: 1877, column: 3, scope: !10407)
!10412 = !DILocation(line: 1880, column: 7, scope: !10413)
!10413 = distinct !DILexicalBlock(scope: !10407, file: !2309, line: 1880, column: 7)
!10414 = !DILocation(line: 1880, column: 7, scope: !10407)
!10415 = !DILocation(line: 1882, column: 5, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10413, file: !2309, line: 1881, column: 3)
!10417 = !DILocation(line: 1885, column: 16, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10416, file: !2309, line: 1885, column: 9)
!10419 = !DILocation(line: 1885, column: 23, scope: !10418)
!10420 = !DILocation(line: 1885, column: 9, scope: !10416)
!10421 = !DILocation(line: 1889, column: 22, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10418, file: !2309, line: 1886, column: 5)
!10423 = !DILocation(line: 1889, column: 40, scope: !10422)
!10424 = !DILocation(line: 1892, column: 11, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10422, file: !2309, line: 1892, column: 11)
!10426 = !DILocation(line: 1892, column: 43, scope: !10425)
!10427 = !DILocation(line: 1892, column: 11, scope: !10422)
!10428 = !DILocation(line: 1895, column: 16, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10425, file: !2309, line: 1893, column: 7)
!10430 = !DILocation(line: 1895, column: 24, scope: !10429)
!10431 = !DILocation(line: 1895, column: 9, scope: !10429)
!10432 = !DILocation(line: 1896, column: 7, scope: !10429)
!10433 = !DILocation(line: 1901, column: 14, scope: !10434)
!10434 = distinct !DILexicalBlock(scope: !10418, file: !2309, line: 1899, column: 5)
!10435 = !DILocation(line: 1901, column: 26, scope: !10434)
!10436 = !DILocation(line: 1904, column: 14, scope: !10434)
!10437 = !DILocation(line: 1904, column: 21, scope: !10434)
!10438 = !DILocation(line: 1912, column: 7, scope: !10434)
!10439 = !DILocation(line: 1919, column: 12, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !10413, file: !2309, line: 1917, column: 3)
!10441 = !DILocation(line: 1919, column: 24, scope: !10440)
!10442 = !DILocation(line: 1922, column: 12, scope: !10440)
!10443 = !DILocation(line: 1922, column: 19, scope: !10440)
!10444 = !DILocation(line: 1930, column: 5, scope: !10440)
!10445 = !DILocation(line: 1934, column: 3, scope: !10407)
!10446 = distinct !DISubprogram(name: "UART_DMATxOnlyAbortCallback", scope: !2309, file: !2309, line: 2867, type: !9815, scopeLine: 2868, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10447)
!10447 = !{!10448, !10449}
!10448 = !DILocalVariable(name: "hdma", arg: 1, scope: !10446, file: !2309, line: 2867, type: !2368)
!10449 = !DILocalVariable(name: "huart", scope: !10446, file: !2309, line: 2869, type: !2334)
!10450 = !DILocation(line: 0, scope: !10446)
!10451 = !DILocation(line: 2869, column: 82, scope: !10446)
!10452 = !DILocation(line: 2871, column: 10, scope: !10446)
!10453 = !DILocation(line: 2871, column: 22, scope: !10446)
!10454 = !DILocation(line: 2874, column: 10, scope: !10446)
!10455 = !DILocation(line: 2874, column: 17, scope: !10446)
!10456 = !DILocation(line: 2882, column: 3, scope: !10446)
!10457 = !DILocation(line: 2884, column: 1, scope: !10446)
!10458 = distinct !DISubprogram(name: "HAL_UART_AbortTransmitCpltCallback", scope: !2309, file: !2309, line: 2256, type: !9310, scopeLine: 2257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10459)
!10459 = !{!10460}
!10460 = !DILocalVariable(name: "huart", arg: 1, scope: !10458, file: !2309, line: 2256, type: !2334)
!10461 = !DILocation(line: 0, scope: !10458)
!10462 = !DILocation(line: 2264, column: 1, scope: !10458)
!10463 = distinct !DISubprogram(name: "HAL_UART_AbortReceive_IT", scope: !2309, file: !2309, line: 1951, type: !9272, scopeLine: 1952, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10464)
!10464 = !{!10465}
!10465 = !DILocalVariable(name: "huart", arg: 1, scope: !10463, file: !2309, line: 1951, type: !2334)
!10466 = !DILocation(line: 0, scope: !10463)
!10467 = !DILocation(line: 1954, column: 3, scope: !10463)
!10468 = !DILocation(line: 1955, column: 3, scope: !10463)
!10469 = !DILocation(line: 1958, column: 7, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10463, file: !2309, line: 1958, column: 7)
!10471 = !DILocation(line: 1958, column: 7, scope: !10463)
!10472 = !DILocation(line: 1960, column: 5, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10470, file: !2309, line: 1959, column: 3)
!10474 = !DILocation(line: 1963, column: 16, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10473, file: !2309, line: 1963, column: 9)
!10476 = !DILocation(line: 1963, column: 23, scope: !10475)
!10477 = !DILocation(line: 1963, column: 9, scope: !10473)
!10478 = !DILocation(line: 1967, column: 22, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10475, file: !2309, line: 1964, column: 5)
!10480 = !DILocation(line: 1967, column: 40, scope: !10479)
!10481 = !DILocation(line: 1970, column: 11, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10479, file: !2309, line: 1970, column: 11)
!10483 = !DILocation(line: 1970, column: 43, scope: !10482)
!10484 = !DILocation(line: 1970, column: 11, scope: !10479)
!10485 = !DILocation(line: 1973, column: 16, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10482, file: !2309, line: 1971, column: 7)
!10487 = !DILocation(line: 1973, column: 24, scope: !10486)
!10488 = !DILocation(line: 1973, column: 9, scope: !10486)
!10489 = !DILocation(line: 1974, column: 7, scope: !10486)
!10490 = !DILocation(line: 1979, column: 14, scope: !10491)
!10491 = distinct !DILexicalBlock(scope: !10475, file: !2309, line: 1977, column: 5)
!10492 = !DILocation(line: 1979, column: 26, scope: !10491)
!10493 = !DILocation(line: 1982, column: 14, scope: !10491)
!10494 = !DILocation(line: 1982, column: 22, scope: !10491)
!10495 = !DILocation(line: 1990, column: 7, scope: !10491)
!10496 = !DILocation(line: 1997, column: 12, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10470, file: !2309, line: 1995, column: 3)
!10498 = !DILocation(line: 1997, column: 24, scope: !10497)
!10499 = !DILocation(line: 2000, column: 12, scope: !10497)
!10500 = !DILocation(line: 2000, column: 20, scope: !10497)
!10501 = !DILocation(line: 2008, column: 5, scope: !10497)
!10502 = !DILocation(line: 2012, column: 3, scope: !10463)
!10503 = distinct !DISubprogram(name: "UART_DMARxOnlyAbortCallback", scope: !2309, file: !2309, line: 2895, type: !9815, scopeLine: 2896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10504)
!10504 = !{!10505, !10506}
!10505 = !DILocalVariable(name: "hdma", arg: 1, scope: !10503, file: !2309, line: 2895, type: !2368)
!10506 = !DILocalVariable(name: "huart", scope: !10503, file: !2309, line: 2897, type: !2334)
!10507 = !DILocation(line: 0, scope: !10503)
!10508 = !DILocation(line: 2897, column: 82, scope: !10503)
!10509 = !DILocation(line: 2899, column: 10, scope: !10503)
!10510 = !DILocation(line: 2899, column: 22, scope: !10503)
!10511 = !DILocation(line: 2902, column: 10, scope: !10503)
!10512 = !DILocation(line: 2902, column: 18, scope: !10503)
!10513 = !DILocation(line: 2910, column: 3, scope: !10503)
!10514 = !DILocation(line: 2912, column: 1, scope: !10503)
!10515 = distinct !DISubprogram(name: "HAL_UART_AbortReceiveCpltCallback", scope: !2309, file: !2309, line: 2271, type: !9310, scopeLine: 2272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10516)
!10516 = !{!10517}
!10517 = !DILocalVariable(name: "huart", arg: 1, scope: !10515, file: !2309, line: 2271, type: !2334)
!10518 = !DILocation(line: 0, scope: !10515)
!10519 = !DILocation(line: 2279, column: 1, scope: !10515)
!10520 = distinct !DISubprogram(name: "HAL_UART_IRQHandler", scope: !2309, file: !2309, line: 2021, type: !9310, scopeLine: 2022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10521)
!10521 = !{!10522, !10523, !10524, !10525, !10526, !10527}
!10522 = !DILocalVariable(name: "huart", arg: 1, scope: !10520, file: !2309, line: 2021, type: !2334)
!10523 = !DILocalVariable(name: "isrflags", scope: !10520, file: !2309, line: 2023, type: !24)
!10524 = !DILocalVariable(name: "cr1its", scope: !10520, file: !2309, line: 2024, type: !24)
!10525 = !DILocalVariable(name: "cr3its", scope: !10520, file: !2309, line: 2025, type: !24)
!10526 = !DILocalVariable(name: "errorflags", scope: !10520, file: !2309, line: 2026, type: !24)
!10527 = !DILocalVariable(name: "dmarequest", scope: !10520, file: !2309, line: 2027, type: !24)
!10528 = !DILocation(line: 0, scope: !10520)
!10529 = !DILocation(line: 2023, column: 25, scope: !10520)
!10530 = !DILocation(line: 2024, column: 25, scope: !10520)
!10531 = !DILocation(line: 2025, column: 25, scope: !10520)
!10532 = !DILocation(line: 2031, column: 7, scope: !10520)
!10533 = !DILocation(line: 2036, column: 7, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10535, file: !2309, line: 2035, column: 5)
!10535 = distinct !DILexicalBlock(scope: !10536, file: !2309, line: 2034, column: 9)
!10536 = distinct !DILexicalBlock(scope: !10537, file: !2309, line: 2032, column: 3)
!10537 = distinct !DILexicalBlock(scope: !10520, file: !2309, line: 2031, column: 7)
!10538 = !DILocation(line: 2037, column: 7, scope: !10534)
!10539 = !DILocation(line: 2030, column: 26, scope: !10520)
!10540 = !DILocation(line: 2042, column: 19, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10520, file: !2309, line: 2042, column: 7)
!10542 = !DILocation(line: 2042, column: 29, scope: !10541)
!10543 = !DILocation(line: 2042, column: 42, scope: !10541)
!10544 = !DILocation(line: 2042, column: 59, scope: !10541)
!10545 = !DILocation(line: 2042, column: 69, scope: !10541)
!10546 = !DILocation(line: 2045, column: 20, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10548, file: !2309, line: 2045, column: 9)
!10548 = distinct !DILexicalBlock(scope: !10541, file: !2309, line: 2043, column: 3)
!10549 = !DILocation(line: 2045, column: 35, scope: !10547)
!10550 = !DILocation(line: 2045, column: 45, scope: !10547)
!10551 = !DILocation(line: 2047, column: 14, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10547, file: !2309, line: 2046, column: 5)
!10553 = !DILocation(line: 2047, column: 24, scope: !10552)
!10554 = !DILocation(line: 2048, column: 5, scope: !10552)
!10555 = !DILocation(line: 2051, column: 20, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10548, file: !2309, line: 2051, column: 9)
!10557 = !DILocation(line: 2051, column: 35, scope: !10556)
!10558 = !DILocation(line: 2051, column: 45, scope: !10556)
!10559 = !DILocation(line: 2053, column: 14, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10556, file: !2309, line: 2052, column: 5)
!10561 = !DILocation(line: 2053, column: 24, scope: !10560)
!10562 = !DILocation(line: 2054, column: 5, scope: !10560)
!10563 = !DILocation(line: 2057, column: 20, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10548, file: !2309, line: 2057, column: 9)
!10565 = !DILocation(line: 2057, column: 35, scope: !10564)
!10566 = !DILocation(line: 2057, column: 45, scope: !10564)
!10567 = !DILocation(line: 2059, column: 14, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10564, file: !2309, line: 2058, column: 5)
!10569 = !DILocation(line: 2059, column: 24, scope: !10568)
!10570 = !DILocation(line: 2060, column: 5, scope: !10568)
!10571 = !DILocation(line: 2063, column: 20, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10548, file: !2309, line: 2063, column: 9)
!10573 = !DILocation(line: 2063, column: 36, scope: !10572)
!10574 = !DILocation(line: 2063, column: 46, scope: !10572)
!10575 = !DILocation(line: 2065, column: 14, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10572, file: !2309, line: 2064, column: 5)
!10577 = !DILocation(line: 2065, column: 24, scope: !10576)
!10578 = !DILocation(line: 2066, column: 5, scope: !10576)
!10579 = !DILocation(line: 2069, column: 16, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !10548, file: !2309, line: 2069, column: 9)
!10581 = !DILocation(line: 2069, column: 26, scope: !10580)
!10582 = !DILocation(line: 2069, column: 9, scope: !10548)
!10583 = !DILocation(line: 2072, column: 49, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10585, file: !2309, line: 2072, column: 11)
!10585 = distinct !DILexicalBlock(scope: !10580, file: !2309, line: 2070, column: 5)
!10586 = !DILocation(line: 2074, column: 9, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !10584, file: !2309, line: 2073, column: 7)
!10588 = !DILocation(line: 2075, column: 7, scope: !10587)
!10589 = !DILocation(line: 2079, column: 20, scope: !10585)
!10590 = !DILocation(line: 2080, column: 20, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10585, file: !2309, line: 2080, column: 11)
!10592 = !DILocation(line: 2080, column: 30, scope: !10591)
!10593 = !DILocation(line: 2080, column: 52, scope: !10591)
!10594 = !DILocation(line: 2080, column: 62, scope: !10591)
!10595 = !DILocation(line: 2085, column: 9, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10591, file: !2309, line: 2081, column: 7)
!10597 = !DILocation(line: 2088, column: 13, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10596, file: !2309, line: 2088, column: 13)
!10599 = !DILocation(line: 2088, column: 13, scope: !10596)
!10600 = !DILocation(line: 2090, column: 11, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10598, file: !2309, line: 2089, column: 9)
!10602 = !DILocation(line: 2093, column: 22, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10601, file: !2309, line: 2093, column: 15)
!10604 = !DILocation(line: 2093, column: 29, scope: !10603)
!10605 = !DILocation(line: 2093, column: 15, scope: !10601)
!10606 = !DILocation(line: 2097, column: 28, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10603, file: !2309, line: 2094, column: 11)
!10608 = !DILocation(line: 2097, column: 46, scope: !10607)
!10609 = !DILocation(line: 2098, column: 17, scope: !10610)
!10610 = distinct !DILexicalBlock(scope: !10607, file: !2309, line: 2098, column: 17)
!10611 = !DILocation(line: 2098, column: 49, scope: !10610)
!10612 = !DILocation(line: 2098, column: 17, scope: !10607)
!10613 = !DILocation(line: 2101, column: 22, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10610, file: !2309, line: 2099, column: 13)
!10615 = !DILocation(line: 2101, column: 30, scope: !10614)
!10616 = !DILocation(line: 2101, column: 15, scope: !10614)
!10617 = !DILocation(line: 2102, column: 13, scope: !10614)
!10618 = !DILocation(line: 2112, column: 13, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10603, file: !2309, line: 2105, column: 11)
!10620 = !DILocation(line: 2124, column: 11, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10598, file: !2309, line: 2117, column: 9)
!10622 = !DILocation(line: 2137, column: 9, scope: !10623)
!10623 = distinct !DILexicalBlock(scope: !10591, file: !2309, line: 2129, column: 7)
!10624 = !DILocation(line: 2140, column: 26, scope: !10623)
!10625 = !DILocation(line: 2147, column: 18, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10520, file: !2309, line: 2147, column: 7)
!10627 = !DILocation(line: 2147, column: 34, scope: !10626)
!10628 = !DILocation(line: 2147, column: 44, scope: !10626)
!10629 = !DILocation(line: 2149, column: 5, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10626, file: !2309, line: 2148, column: 3)
!10631 = !DILocation(line: 2150, column: 5, scope: !10630)
!10632 = !DILocation(line: 2154, column: 18, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10520, file: !2309, line: 2154, column: 7)
!10634 = !DILocation(line: 2154, column: 33, scope: !10633)
!10635 = !DILocation(line: 2154, column: 43, scope: !10633)
!10636 = !DILocation(line: 2156, column: 5, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10633, file: !2309, line: 2155, column: 3)
!10638 = !DILocation(line: 2157, column: 5, scope: !10637)
!10639 = !DILocation(line: 2159, column: 1, scope: !10520)
!10640 = distinct !DISubprogram(name: "UART_Receive_IT", scope: !2309, file: !2309, line: 2992, type: !9272, scopeLine: 2993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10641)
!10641 = !{!10642, !10643}
!10642 = !DILocalVariable(name: "huart", arg: 1, scope: !10640, file: !2309, line: 2992, type: !2334)
!10643 = !DILocalVariable(name: "tmp", scope: !10640, file: !2309, line: 2994, type: !2332)
!10644 = !DILocation(line: 0, scope: !10640)
!10645 = !DILocation(line: 2997, column: 14, scope: !10646)
!10646 = distinct !DILexicalBlock(scope: !10640, file: !2309, line: 2997, column: 7)
!10647 = !DILocation(line: 2997, column: 22, scope: !10646)
!10648 = !DILocation(line: 2997, column: 7, scope: !10640)
!10649 = !DILocation(line: 2999, column: 21, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10651, file: !2309, line: 2999, column: 9)
!10651 = distinct !DILexicalBlock(scope: !10646, file: !2309, line: 2998, column: 3)
!10652 = !DILocation(line: 2999, column: 32, scope: !10650)
!10653 = !DILocation(line: 2999, column: 9, scope: !10651)
!10654 = !DILocation(line: 3001, column: 33, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10650, file: !2309, line: 3000, column: 5)
!10656 = !DILocation(line: 3002, column: 23, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10655, file: !2309, line: 3002, column: 11)
!10658 = !DILocation(line: 3002, column: 30, scope: !10657)
!10659 = !DILocation(line: 0, scope: !10657)
!10660 = !DILocation(line: 3002, column: 11, scope: !10655)
!10661 = !DILocation(line: 3004, column: 16, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10657, file: !2309, line: 3003, column: 7)
!10663 = !DILocation(line: 3004, column: 14, scope: !10662)
!10664 = !DILocation(line: 3005, column: 27, scope: !10662)
!10665 = !DILocation(line: 3006, column: 7, scope: !10662)
!10666 = !DILocation(line: 3009, column: 16, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10657, file: !2309, line: 3008, column: 7)
!10668 = !DILocation(line: 3009, column: 14, scope: !10667)
!10669 = !DILocation(line: 3010, column: 27, scope: !10667)
!10670 = !DILocation(line: 3015, column: 23, scope: !10671)
!10671 = distinct !DILexicalBlock(scope: !10672, file: !2309, line: 3015, column: 11)
!10672 = distinct !DILexicalBlock(scope: !10650, file: !2309, line: 3014, column: 5)
!10673 = !DILocation(line: 3015, column: 30, scope: !10671)
!10674 = !DILocation(line: 0, scope: !10671)
!10675 = !DILocation(line: 3015, column: 11, scope: !10672)
!10676 = !DILocation(line: 3017, column: 17, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10671, file: !2309, line: 3016, column: 7)
!10678 = !DILocation(line: 3017, column: 27, scope: !10677)
!10679 = !DILocation(line: 3017, column: 30, scope: !10677)
!10680 = !DILocation(line: 3018, column: 7, scope: !10677)
!10681 = !DILocation(line: 3021, column: 32, scope: !10682)
!10682 = distinct !DILexicalBlock(scope: !10671, file: !2309, line: 3020, column: 7)
!10683 = !DILocation(line: 3021, column: 17, scope: !10682)
!10684 = !DILocation(line: 3021, column: 27, scope: !10682)
!10685 = !DILocation(line: 3021, column: 30, scope: !10682)
!10686 = !DILocation(line: 3025, column: 18, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !10651, file: !2309, line: 3025, column: 9)
!10688 = !DILocation(line: 3025, column: 9, scope: !10687)
!10689 = !DILocation(line: 3025, column: 30, scope: !10687)
!10690 = !DILocation(line: 3025, column: 9, scope: !10651)
!10691 = !DILocation(line: 3028, column: 7, scope: !10692)
!10692 = distinct !DILexicalBlock(scope: !10687, file: !2309, line: 3026, column: 5)
!10693 = !DILocation(line: 3031, column: 7, scope: !10692)
!10694 = !DILocation(line: 3034, column: 7, scope: !10692)
!10695 = !DILocation(line: 3037, column: 22, scope: !10692)
!10696 = !DILocation(line: 3044, column: 7, scope: !10692)
!10697 = !DILocation(line: 3047, column: 7, scope: !10692)
!10698 = !DILocation(line: 3055, column: 1, scope: !10640)
!10699 = distinct !DISubprogram(name: "UART_DMAAbortOnError", scope: !2309, file: !2309, line: 2753, type: !9815, scopeLine: 2754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10700)
!10700 = !{!10701, !10702}
!10701 = !DILocalVariable(name: "hdma", arg: 1, scope: !10699, file: !2309, line: 2753, type: !2368)
!10702 = !DILocalVariable(name: "huart", scope: !10699, file: !2309, line: 2755, type: !2334)
!10703 = !DILocation(line: 0, scope: !10699)
!10704 = !DILocation(line: 2755, column: 82, scope: !10699)
!10705 = !DILocation(line: 2756, column: 10, scope: !10699)
!10706 = !DILocation(line: 2756, column: 22, scope: !10699)
!10707 = !DILocation(line: 2757, column: 10, scope: !10699)
!10708 = !DILocation(line: 2757, column: 22, scope: !10699)
!10709 = !DILocation(line: 2764, column: 3, scope: !10699)
!10710 = !DILocation(line: 2766, column: 1, scope: !10699)
!10711 = distinct !DISubprogram(name: "UART_Transmit_IT", scope: !2309, file: !2309, line: 2920, type: !9272, scopeLine: 2921, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10712)
!10712 = !{!10713, !10714}
!10713 = !DILocalVariable(name: "huart", arg: 1, scope: !10711, file: !2309, line: 2920, type: !2334)
!10714 = !DILocalVariable(name: "tmp", scope: !10711, file: !2309, line: 2922, type: !2332)
!10715 = !DILocation(line: 0, scope: !10711)
!10716 = !DILocation(line: 2925, column: 14, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10711, file: !2309, line: 2925, column: 7)
!10718 = !DILocation(line: 2925, column: 21, scope: !10717)
!10719 = !DILocation(line: 2925, column: 7, scope: !10711)
!10720 = !DILocation(line: 2927, column: 21, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10722, file: !2309, line: 2927, column: 9)
!10722 = distinct !DILexicalBlock(scope: !10717, file: !2309, line: 2926, column: 3)
!10723 = !DILocation(line: 2927, column: 32, scope: !10721)
!10724 = !DILocation(line: 0, scope: !10721)
!10725 = !DILocation(line: 2927, column: 9, scope: !10722)
!10726 = !DILocation(line: 2929, column: 33, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10721, file: !2309, line: 2928, column: 5)
!10728 = !DILocation(line: 2930, column: 40, scope: !10727)
!10729 = !DILocation(line: 2930, column: 45, scope: !10727)
!10730 = !DILocation(line: 2930, column: 29, scope: !10727)
!10731 = !DILocation(line: 2930, column: 14, scope: !10727)
!10732 = !DILocation(line: 2930, column: 24, scope: !10727)
!10733 = !DILocation(line: 2930, column: 27, scope: !10727)
!10734 = !DILocation(line: 2931, column: 23, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10727, file: !2309, line: 2931, column: 11)
!10736 = !DILocation(line: 2931, column: 30, scope: !10735)
!10737 = !DILocation(line: 0, scope: !10735)
!10738 = !DILocation(line: 2931, column: 11, scope: !10727)
!10739 = !DILocation(line: 2933, column: 27, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10735, file: !2309, line: 2932, column: 7)
!10741 = !DILocation(line: 2934, column: 7, scope: !10740)
!10742 = !DILocation(line: 2937, column: 27, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10735, file: !2309, line: 2936, column: 7)
!10744 = !DILocation(line: 2942, column: 57, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10721, file: !2309, line: 2941, column: 5)
!10746 = !DILocation(line: 2942, column: 39, scope: !10745)
!10747 = !DILocation(line: 2942, column: 29, scope: !10745)
!10748 = !DILocation(line: 2942, column: 14, scope: !10745)
!10749 = !DILocation(line: 2942, column: 24, scope: !10745)
!10750 = !DILocation(line: 2942, column: 27, scope: !10745)
!10751 = !DILocation(line: 2945, column: 18, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10722, file: !2309, line: 2945, column: 9)
!10753 = !DILocation(line: 2945, column: 9, scope: !10752)
!10754 = !DILocation(line: 2945, column: 30, scope: !10752)
!10755 = !DILocation(line: 2945, column: 9, scope: !10722)
!10756 = !DILocation(line: 2948, column: 7, scope: !10757)
!10757 = distinct !DILexicalBlock(scope: !10752, file: !2309, line: 2946, column: 5)
!10758 = !DILocation(line: 2951, column: 7, scope: !10757)
!10759 = !DILocation(line: 2952, column: 5, scope: !10757)
!10760 = !DILocation(line: 2959, column: 1, scope: !10711)
!10761 = distinct !DISubprogram(name: "UART_EndTransmit_IT", scope: !2309, file: !2309, line: 2967, type: !9272, scopeLine: 2968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10762)
!10762 = !{!10763}
!10763 = !DILocalVariable(name: "huart", arg: 1, scope: !10761, file: !2309, line: 2967, type: !2334)
!10764 = !DILocation(line: 0, scope: !10761)
!10765 = !DILocation(line: 2970, column: 3, scope: !10761)
!10766 = !DILocation(line: 2973, column: 10, scope: !10761)
!10767 = !DILocation(line: 2973, column: 17, scope: !10761)
!10768 = !DILocation(line: 2980, column: 3, scope: !10761)
!10769 = !DILocation(line: 2983, column: 3, scope: !10761)
!10770 = distinct !DISubprogram(name: "HAL_LIN_SendBreak", scope: !2309, file: !2309, line: 2310, type: !9272, scopeLine: 2311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10771)
!10771 = !{!10772}
!10772 = !DILocalVariable(name: "huart", arg: 1, scope: !10770, file: !2309, line: 2310, type: !2334)
!10773 = !DILocation(line: 0, scope: !10770)
!10774 = !DILocation(line: 2316, column: 3, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10776, file: !2309, line: 2316, column: 3)
!10776 = distinct !DILexicalBlock(scope: !10770, file: !2309, line: 2316, column: 3)
!10777 = !DILocation(line: 2316, column: 3, scope: !10776)
!10778 = !DILocation(line: 2316, column: 3, scope: !10779)
!10779 = distinct !DILexicalBlock(scope: !10775, file: !2309, line: 2316, column: 3)
!10780 = !DILocation(line: 2318, column: 10, scope: !10770)
!10781 = !DILocation(line: 2318, column: 17, scope: !10770)
!10782 = !DILocation(line: 2321, column: 3, scope: !10770)
!10783 = !DILocation(line: 2323, column: 17, scope: !10770)
!10784 = !DILocation(line: 2326, column: 3, scope: !10785)
!10785 = distinct !DILexicalBlock(scope: !10770, file: !2309, line: 2326, column: 3)
!10786 = !DILocation(line: 2328, column: 3, scope: !10770)
!10787 = !DILocation(line: 2329, column: 1, scope: !10770)
!10788 = distinct !DISubprogram(name: "HAL_MultiProcessor_EnterMuteMode", scope: !2309, file: !2309, line: 2337, type: !9272, scopeLine: 2338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10789)
!10789 = !{!10790}
!10790 = !DILocalVariable(name: "huart", arg: 1, scope: !10788, file: !2309, line: 2337, type: !2334)
!10791 = !DILocation(line: 0, scope: !10788)
!10792 = !DILocation(line: 2343, column: 3, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10794, file: !2309, line: 2343, column: 3)
!10794 = distinct !DILexicalBlock(scope: !10788, file: !2309, line: 2343, column: 3)
!10795 = !DILocation(line: 2343, column: 3, scope: !10794)
!10796 = !DILocation(line: 2343, column: 3, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10793, file: !2309, line: 2343, column: 3)
!10798 = !DILocation(line: 2345, column: 10, scope: !10788)
!10799 = !DILocation(line: 2345, column: 17, scope: !10788)
!10800 = !DILocation(line: 2348, column: 3, scope: !10788)
!10801 = !DILocation(line: 2350, column: 17, scope: !10788)
!10802 = !DILocation(line: 2353, column: 3, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10788, file: !2309, line: 2353, column: 3)
!10804 = !DILocation(line: 2355, column: 3, scope: !10788)
!10805 = !DILocation(line: 2356, column: 1, scope: !10788)
!10806 = distinct !DISubprogram(name: "HAL_MultiProcessor_ExitMuteMode", scope: !2309, file: !2309, line: 2364, type: !9272, scopeLine: 2365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10807)
!10807 = !{!10808}
!10808 = !DILocalVariable(name: "huart", arg: 1, scope: !10806, file: !2309, line: 2364, type: !2334)
!10809 = !DILocation(line: 0, scope: !10806)
!10810 = !DILocation(line: 2370, column: 3, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10812, file: !2309, line: 2370, column: 3)
!10812 = distinct !DILexicalBlock(scope: !10806, file: !2309, line: 2370, column: 3)
!10813 = !DILocation(line: 2370, column: 3, scope: !10812)
!10814 = !DILocation(line: 2370, column: 3, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10811, file: !2309, line: 2370, column: 3)
!10816 = !DILocation(line: 2372, column: 10, scope: !10806)
!10817 = !DILocation(line: 2372, column: 17, scope: !10806)
!10818 = !DILocation(line: 2375, column: 3, scope: !10806)
!10819 = !DILocation(line: 2377, column: 17, scope: !10806)
!10820 = !DILocation(line: 2380, column: 3, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10806, file: !2309, line: 2380, column: 3)
!10822 = !DILocation(line: 2382, column: 3, scope: !10806)
!10823 = !DILocation(line: 2383, column: 1, scope: !10806)
!10824 = distinct !DISubprogram(name: "HAL_HalfDuplex_EnableTransmitter", scope: !2309, file: !2309, line: 2391, type: !9272, scopeLine: 2392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10825)
!10825 = !{!10826, !10827}
!10826 = !DILocalVariable(name: "huart", arg: 1, scope: !10824, file: !2309, line: 2391, type: !2334)
!10827 = !DILocalVariable(name: "tmpreg", scope: !10824, file: !2309, line: 2393, type: !24)
!10828 = !DILocation(line: 0, scope: !10824)
!10829 = !DILocation(line: 2396, column: 3, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10831, file: !2309, line: 2396, column: 3)
!10831 = distinct !DILexicalBlock(scope: !10824, file: !2309, line: 2396, column: 3)
!10832 = !DILocation(line: 2396, column: 3, scope: !10831)
!10833 = !DILocation(line: 2396, column: 3, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10830, file: !2309, line: 2396, column: 3)
!10835 = !DILocation(line: 2398, column: 10, scope: !10824)
!10836 = !DILocation(line: 2398, column: 17, scope: !10824)
!10837 = !DILocation(line: 2401, column: 19, scope: !10824)
!10838 = !DILocation(line: 2401, column: 29, scope: !10824)
!10839 = !DILocation(line: 2404, column: 10, scope: !10824)
!10840 = !DILocation(line: 2407, column: 10, scope: !10824)
!10841 = !DILocation(line: 2410, column: 3, scope: !10824)
!10842 = !DILocation(line: 2412, column: 17, scope: !10824)
!10843 = !DILocation(line: 2415, column: 3, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10824, file: !2309, line: 2415, column: 3)
!10845 = !DILocation(line: 2417, column: 3, scope: !10824)
!10846 = !DILocation(line: 2418, column: 1, scope: !10824)
!10847 = distinct !DISubprogram(name: "HAL_HalfDuplex_EnableReceiver", scope: !2309, file: !2309, line: 2426, type: !9272, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10848)
!10848 = !{!10849, !10850}
!10849 = !DILocalVariable(name: "huart", arg: 1, scope: !10847, file: !2309, line: 2426, type: !2334)
!10850 = !DILocalVariable(name: "tmpreg", scope: !10847, file: !2309, line: 2428, type: !24)
!10851 = !DILocation(line: 0, scope: !10847)
!10852 = !DILocation(line: 2431, column: 3, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10854, file: !2309, line: 2431, column: 3)
!10854 = distinct !DILexicalBlock(scope: !10847, file: !2309, line: 2431, column: 3)
!10855 = !DILocation(line: 2431, column: 3, scope: !10854)
!10856 = !DILocation(line: 2431, column: 3, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10853, file: !2309, line: 2431, column: 3)
!10858 = !DILocation(line: 2433, column: 10, scope: !10847)
!10859 = !DILocation(line: 2433, column: 17, scope: !10847)
!10860 = !DILocation(line: 2436, column: 19, scope: !10847)
!10861 = !DILocation(line: 2436, column: 29, scope: !10847)
!10862 = !DILocation(line: 2439, column: 10, scope: !10847)
!10863 = !DILocation(line: 2442, column: 10, scope: !10847)
!10864 = !DILocation(line: 2445, column: 3, scope: !10847)
!10865 = !DILocation(line: 2447, column: 17, scope: !10847)
!10866 = !DILocation(line: 2450, column: 3, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10847, file: !2309, line: 2450, column: 3)
!10868 = !DILocation(line: 2452, column: 3, scope: !10847)
!10869 = !DILocation(line: 2453, column: 1, scope: !10847)
!10870 = distinct !DISubprogram(name: "HAL_UART_GetState", scope: !2309, file: !2309, line: 2483, type: !10871, scopeLine: 2484, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10873)
!10871 = !DISubroutineType(types: !10872)
!10872 = !{!2333, !2334}
!10873 = !{!10874, !10875, !10876}
!10874 = !DILocalVariable(name: "huart", arg: 1, scope: !10870, file: !2309, line: 2483, type: !2334)
!10875 = !DILocalVariable(name: "temp1", scope: !10870, file: !2309, line: 2485, type: !24)
!10876 = !DILocalVariable(name: "temp2", scope: !10870, file: !2309, line: 2485, type: !24)
!10877 = !DILocation(line: 0, scope: !10870)
!10878 = !DILocation(line: 2486, column: 18, scope: !10870)
!10879 = !DILocation(line: 2487, column: 18, scope: !10870)
!10880 = !DILocation(line: 2489, column: 40, scope: !10870)
!10881 = !DILocation(line: 2489, column: 3, scope: !10870)
!10882 = distinct !DISubprogram(name: "HAL_UART_GetError", scope: !2309, file: !2309, line: 2498, type: !10883, scopeLine: 2499, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !10885)
!10883 = !DISubroutineType(types: !10884)
!10884 = !{!24, !2334}
!10885 = !{!10886}
!10886 = !DILocalVariable(name: "huart", arg: 1, scope: !10882, file: !2309, line: 2498, type: !2334)
!10887 = !DILocation(line: 0, scope: !10882)
!10888 = !DILocation(line: 2500, column: 17, scope: !10882)
!10889 = !DILocation(line: 2500, column: 3, scope: !10882)
