; ModuleID = './examples/dualport_stm32.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%"class.Cicada::Stm32Uart" = type { %"class.Cicada::BufferedSerial", i8, %struct.__UART_HandleTypeDef, %struct.USART_TypeDef*, i16, i16, i32 }
%"class.Cicada::BufferedSerial" = type { %"class.Cicada::IBufferedSerial", %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer" }
%"class.Cicada::IBufferedSerial" = type { %"class.Cicada::ICommDevice", %"class.Cicada::ICommDevice" }
%"class.Cicada::ICommDevice" = type { i32 (...)** }
%"class.Cicada::LineCircularBuffer" = type { %"class.Cicada::CircularBuffer.base", i16, [2 x i8] }
%"class.Cicada::CircularBuffer.base" = type <{ i32 (...)**, [4 x i8], i64, i64, i64, i64, i8* }>
%struct.__UART_HandleTypeDef = type { %struct.USART_TypeDef*, %struct.USART_TypeDef, i8*, i16, i16, i8*, i16, i16, %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef*, i32, i32, i32, i32 }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.__DMA_HandleTypeDef = type { %struct.DMA_Channel_TypeDef*, %struct.USART_TypeDef, i32, i32, i8*, void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)*, i32, %struct.DMA_TypeDef*, i32 }
%struct.DMA_Channel_TypeDef = type { i32, i32, i32, i32 }
%struct.DMA_TypeDef = type { i32, i32 }
%"class.Cicada::Scheduler" = type { i32 ()*, %"class.Cicada::Task"**, %"class.Cicada::Task"** }
%"class.Cicada::Task" = type { i32 (...)**, i16, i32, i8, i32 }
%class.SerialTask = type { %"class.Cicada::Task", %"class.Cicada::IBufferedSerial"*, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.__va_list = type { i8* }
%struct.out_fct_wrap_type = type { void (i8, i8*)*, i8* }
%"class.Cicada::CircularBuffer" = type <{ i32 (...)**, [4 x i8], i64, i64, i64, i64, i8*, [4 x i8] }>

$_ZN10SerialTaskC2ERN6Cicada15IBufferedSerialE = comdat any

$_ZN6Cicada4TaskD2Ev = comdat any

$_ZN6Cicada4TaskC2Et = comdat any

$_ZN10SerialTaskD0Ev = comdat any

$_ZN10SerialTask3runEv = comdat any

$_ZN6Cicada4Task8setDelayEt = comdat any

$_ZN6Cicada4TaskD0Ev = comdat any

$_ZNK6Cicada4Task5delayEv = comdat any

$_ZN6Cicada4Task7lastRunEv = comdat any

$_ZN6Cicada4Task10setLastRunEj = comdat any

$_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv = comdat any

$_ZN6Cicada14BufferedSerialD2Ev = comdat any

$_ZN6Cicada14CircularBufferIcED2Ev = comdat any

$_ZN6Cicada15IBufferedSerialD2Ev = comdat any

$_ZN6Cicada7ISerialD2Ev = comdat any

$_ZN6Cicada11ICommDeviceD2Ev = comdat any

$_ZN6Cicada14BufferedSerialD0Ev = comdat any

$_ZThn4_N6Cicada14BufferedSerialD1Ev = comdat any

$_ZThn4_N6Cicada14BufferedSerialD0Ev = comdat any

$_ZNK6Cicada14CircularBufferIcE4sizeEv = comdat any

$_ZN6Cicada18LineCircularBuffer5flushEv = comdat any

$_ZN6Cicada14CircularBufferIcE5flushEv = comdat any

$_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv = comdat any

$_ZN6Cicada18LineCircularBuffer4pushEc = comdat any

$_ZN6Cicada14CircularBufferIcE4pushEc = comdat any

$_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy = comdat any

$_ZN6Cicada18LineCircularBuffer4pullEv = comdat any

$_ZN6Cicada14CircularBufferIcE4pullEv = comdat any

$_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv = comdat any

$_ZN6Cicada15IBufferedSerialC2Ev = comdat any

$_ZN6Cicada18LineCircularBufferC2EPcy = comdat any

$_ZN6Cicada14CircularBufferIcEC2EPcy = comdat any

$_ZN6Cicada18LineCircularBufferD0Ev = comdat any

$_ZN6Cicada18LineCircularBuffer4pushEPKcy = comdat any

$_ZN6Cicada18LineCircularBuffer4pullEPcy = comdat any

$_ZN6Cicada14CircularBufferIcE4readEv = comdat any

$_ZNK6Cicada14CircularBufferIcE7isEmptyEv = comdat any

$_ZNK6Cicada14CircularBufferIcE6isFullEv = comdat any

$_ZN6Cicada14CircularBufferIcED0Ev = comdat any

$_ZN6Cicada14CircularBufferIcE4pushEPKcy = comdat any

$_ZN6Cicada14CircularBufferIcE4pullEPcy = comdat any

$_ZN6Cicada11ICommDeviceC2Ev = comdat any

$_ZN6Cicada7ISerialC2Ev = comdat any

$_ZN6Cicada15IBufferedSerialD0Ev = comdat any

$_ZThn4_N6Cicada15IBufferedSerialD1Ev = comdat any

$_ZThn4_N6Cicada15IBufferedSerialD0Ev = comdat any

$_ZN6Cicada7ISerialD0Ev = comdat any

$_ZN6Cicada11ICommDeviceD0Ev = comdat any

$_ZTV10SerialTask = comdat any

$_ZTS10SerialTask = comdat any

$_ZTSN6Cicada4TaskE = comdat any

$_ZTIN6Cicada4TaskE = comdat any

$_ZTI10SerialTask = comdat any

$_ZTVN6Cicada4TaskE = comdat any

$_ZZN10SerialTask3runEvE10entrypoint = comdat any

$_ZTSN6Cicada15IBufferedSerialE = comdat any

$_ZTSN6Cicada11ICommDeviceE = comdat any

$_ZTIN6Cicada11ICommDeviceE = comdat any

$_ZTSN6Cicada7ISerialE = comdat any

$_ZTIN6Cicada7ISerialE = comdat any

$_ZTIN6Cicada15IBufferedSerialE = comdat any

$_ZTVN6Cicada15IBufferedSerialE = comdat any

$_ZTVN6Cicada11ICommDeviceE = comdat any

$_ZTVN6Cicada7ISerialE = comdat any

$_ZTVN6Cicada18LineCircularBufferE = comdat any

$_ZTSN6Cicada18LineCircularBufferE = comdat any

$_ZTSN6Cicada14CircularBufferIcEE = comdat any

$_ZTIN6Cicada14CircularBufferIcEE = comdat any

$_ZTIN6Cicada18LineCircularBufferE = comdat any

$_ZTVN6Cicada14CircularBufferIcEE = comdat any

@_ZZ17USART1_IRQHandlerE8instance = internal unnamed_addr global %"class.Cicada::Stm32Uart"* null, align 4, !dbg !0
@_ZGVZ17USART1_IRQHandlerE8instance = internal global i32 0, align 4
@_ZZ17USART2_IRQHandlerE8instance = internal unnamed_addr global %"class.Cicada::Stm32Uart"* null, align 4, !dbg !199
@_ZGVZ17USART2_IRQHandlerE8instance = internal global i32 0, align 4
@_ZZ8_putcharE6serial = internal unnamed_addr global %"class.Cicada::Stm32Uart"* null, align 4, !dbg !206
@_ZTV10SerialTask = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI10SerialTask to i8*), i8* bitcast (%"class.Cicada::Task"* (%"class.Cicada::Task"*)* @_ZN6Cicada4TaskD2Ev to i8*), i8* bitcast (void (%class.SerialTask*)* @_ZN10SerialTaskD0Ev to i8*), i8* bitcast (void (%class.SerialTask*)* @_ZN10SerialTask3runEv to i8*)] }, comdat, align 4
@_ZTS10SerialTask = linkonce_odr dso_local constant [13 x i8] c"10SerialTask\00", comdat, align 1
@_ZTSN6Cicada4TaskE = linkonce_odr dso_local constant [15 x i8] c"N6Cicada4TaskE\00", comdat, align 1
@_ZTIN6Cicada4TaskE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZTSN6Cicada4TaskE, i32 0, i32 0) }, comdat, align 4
@_ZTI10SerialTask = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZTS10SerialTask, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada4TaskE to i8*) }, comdat, align 4
@_ZTVN6Cicada4TaskE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada4TaskE to i8*), i8* bitcast (%"class.Cicada::Task"* (%"class.Cicada::Task"*)* @_ZN6Cicada4TaskD2Ev to i8*), i8* bitcast (void (%"class.Cicada::Task"*)* @_ZN6Cicada4TaskD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZZN10SerialTask3runEvE10entrypoint = linkonce_odr dso_local local_unnamed_addr global i8 0, comdat, align 1, !dbg !213
@.str = private unnamed_addr constant [5 x i8] c"AT\0D\0A\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"Sending command: %s\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"%d bytes written\0D\0A\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"%d bytes received\0D\0A\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"Received message: %s\00", align 1
@_ftoa.pow10 = internal unnamed_addr constant [10 x double] [double 1.000000e+00, double 1.000000e+01, double 1.000000e+02, double 1.000000e+03, double 1.000000e+04, double 1.000000e+05, double 1.000000e+06, double 1.000000e+07, double 1.000000e+08, double 1.000000e+09], align 8, !dbg !390
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !449
@__const.HAL_RCC_GetSysClockFreq.aPLLMULFactorTable = private unnamed_addr constant [16 x i8] c"\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\10", align 1
@__const.HAL_RCC_GetSysClockFreq.aPredivFactorTable = private unnamed_addr constant [2 x i8] c"\01\02", align 1
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !518
@uwTickPrio = dso_local local_unnamed_addr global i32 16, align 4, !dbg !526
@uwTickFreq = dso_local local_unnamed_addr global i32 1, align 4, !dbg !642
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !516
@uwTick = dso_local global i32 0, align 4, !dbg !645
@_ZN6Cicada9Stm32Uart8instanceE = dso_local local_unnamed_addr global [4 x %"class.Cicada::Stm32Uart"*] zeroinitializer, align 4, !dbg !647
@_ZTVN6Cicada9Stm32UartE = dso_local unnamed_addr constant { [26 x i8*], [12 x i8*] } { [26 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada9Stm32UartE to i8*), i8* bitcast (%"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32UartD2Ev to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32UartD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial14spaceAvailableEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZNK6Cicada9Stm32Uart20writeBufferProcessedEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial5writeEPKhy to i8*), i8* bitcast (i8 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial4readEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*)* @_ZN6Cicada14BufferedSerial5writeEPKh to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*, i8)* @_ZN6Cicada14BufferedSerial5writeEh to i8*), i8* bitcast (i1 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial11canReadLineEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial8readLineEPhy to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial14readBufferSizeEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial15writeBufferSizeEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32Uart4openEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8)* @_ZN6Cicada9Stm32Uart4openEh to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32Uart6isOpenEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i32, i8)* @_ZN6Cicada9Stm32Uart15setSerialConfigEjh to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32Uart5closeEv to i8*), i8* bitcast (i8* (%"class.Cicada::Stm32Uart"*)* @_ZNK6Cicada9Stm32Uart8portNameEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8*)* @_ZN6Cicada9Stm32Uart7rawReadERh to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8)* @_ZN6Cicada9Stm32Uart8rawWriteEh to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32Uart13startTransmitEv to i8*)], [12 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada9Stm32UartE to i8*), i8* bitcast (%"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32UartD1Ev to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32UartD0Ev to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32Uart4openEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32Uart6isOpenEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i32, i8)* @_ZThn4_N6Cicada9Stm32Uart15setSerialConfigEjh to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32Uart5closeEv to i8*), i8* bitcast (i8* (%"class.Cicada::Stm32Uart"*)* @_ZThn4_NK6Cicada9Stm32Uart8portNameEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8*)* @_ZThn4_N6Cicada9Stm32Uart7rawReadERh to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8)* @_ZThn4_N6Cicada9Stm32Uart8rawWriteEh to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32Uart13startTransmitEv to i8*)] }, align 4
@_ZTSN6Cicada9Stm32UartE = dso_local constant [20 x i8] c"N6Cicada9Stm32UartE\00", align 1
@_ZTIN6Cicada9Stm32UartE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTSN6Cicada9Stm32UartE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada14BufferedSerialE to i8*) }, align 4
@_ZTVN6Cicada14BufferedSerialE = dso_local unnamed_addr constant { [17 x i8*], [12 x i8*] } { [17 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada14BufferedSerialE to i8*), i8* bitcast (%"class.Cicada::BufferedSerial"* (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerialD2Ev to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerialD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial14spaceAvailableEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial5writeEPKhy to i8*), i8* bitcast (i8 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial4readEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*)* @_ZN6Cicada14BufferedSerial5writeEPKh to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*, i8)* @_ZN6Cicada14BufferedSerial5writeEh to i8*), i8* bitcast (i1 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial11canReadLineEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial8readLineEPhy to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial14readBufferSizeEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial15writeBufferSizeEv to i8*)], [12 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada14BufferedSerialE to i8*), i8* bitcast (%"class.Cicada::BufferedSerial"* (%"class.Cicada::BufferedSerial"*)* @_ZThn4_N6Cicada14BufferedSerialD1Ev to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*)* @_ZThn4_N6Cicada14BufferedSerialD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 4
@_ZTVN10__cxxabiv120__si_class_type_infoE = external dso_local global i8*
@_ZTSN6Cicada14BufferedSerialE = dso_local constant [26 x i8] c"N6Cicada14BufferedSerialE\00", align 1
@_ZTVN10__cxxabiv121__vmi_class_type_infoE = external dso_local global i8*
@_ZTSN6Cicada15IBufferedSerialE = linkonce_odr dso_local constant [27 x i8] c"N6Cicada15IBufferedSerialE\00", comdat, align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external dso_local global i8*
@_ZTSN6Cicada11ICommDeviceE = linkonce_odr dso_local constant [23 x i8] c"N6Cicada11ICommDeviceE\00", comdat, align 1
@_ZTIN6Cicada11ICommDeviceE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @_ZTSN6Cicada11ICommDeviceE, i32 0, i32 0) }, comdat, align 4
@_ZTSN6Cicada7ISerialE = linkonce_odr dso_local constant [18 x i8] c"N6Cicada7ISerialE\00", comdat, align 1
@_ZTIN6Cicada7ISerialE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZTSN6Cicada7ISerialE, i32 0, i32 0) }, comdat, align 4
@_ZTIN6Cicada15IBufferedSerialE = linkonce_odr dso_local constant { i8*, i8*, i32, i32, i8*, i32, i8*, i32 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @_ZTSN6Cicada15IBufferedSerialE, i32 0, i32 0), i32 0, i32 2, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada11ICommDeviceE to i8*), i32 2, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada7ISerialE to i8*), i32 1026 }, comdat, align 4
@_ZTIN6Cicada14BufferedSerialE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @_ZTSN6Cicada14BufferedSerialE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada15IBufferedSerialE to i8*) }, align 4
@_ZTVN6Cicada15IBufferedSerialE = linkonce_odr dso_local unnamed_addr constant { [17 x i8*], [12 x i8*] } { [17 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada15IBufferedSerialE to i8*), i8* bitcast (%"class.Cicada::IBufferedSerial"* (%"class.Cicada::IBufferedSerial"*)* @_ZN6Cicada15IBufferedSerialD2Ev to i8*), i8* bitcast (void (%"class.Cicada::IBufferedSerial"*)* @_ZN6Cicada15IBufferedSerialD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], [12 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada15IBufferedSerialE to i8*), i8* bitcast (%"class.Cicada::IBufferedSerial"* (%"class.Cicada::IBufferedSerial"*)* @_ZThn4_N6Cicada15IBufferedSerialD1Ev to i8*), i8* bitcast (void (%"class.Cicada::IBufferedSerial"*)* @_ZThn4_N6Cicada15IBufferedSerialD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada11ICommDeviceE = linkonce_odr dso_local unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada11ICommDeviceE to i8*), i8* bitcast (%"class.Cicada::ICommDevice"* (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada11ICommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada11ICommDeviceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada7ISerialE = linkonce_odr dso_local unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada7ISerialE to i8*), i8* bitcast (%"class.Cicada::ICommDevice"* (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada7ISerialD2Ev to i8*), i8* bitcast (void (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada7ISerialD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada18LineCircularBufferE = linkonce_odr dso_local unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada18LineCircularBufferE to i8*), i8* bitcast (%"class.Cicada::CircularBuffer"* (%"class.Cicada::CircularBuffer"*)* @_ZN6Cicada14CircularBufferIcED2Ev to i8*), i8* bitcast (void (%"class.Cicada::LineCircularBuffer"*)* @_ZN6Cicada18LineCircularBufferD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::LineCircularBuffer"*, i8*, i64)* @_ZN6Cicada18LineCircularBuffer4pushEPKcy to i8*), i8* bitcast (void (%"class.Cicada::LineCircularBuffer"*, i8)* @_ZN6Cicada18LineCircularBuffer4pushEc to i8*), i8* bitcast (i64 (%"class.Cicada::LineCircularBuffer"*, i8*, i64)* @_ZN6Cicada18LineCircularBuffer4pullEPcy to i8*), i8* bitcast (i8 (%"class.Cicada::LineCircularBuffer"*)* @_ZN6Cicada18LineCircularBuffer4pullEv to i8*), i8* bitcast (i8 (%"class.Cicada::CircularBuffer"*)* @_ZN6Cicada14CircularBufferIcE4readEv to i8*), i8* bitcast (void (%"class.Cicada::LineCircularBuffer"*)* @_ZN6Cicada18LineCircularBuffer5flushEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE7isEmptyEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE6isFullEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE4sizeEv to i8*)] }, comdat, align 4
@_ZTSN6Cicada18LineCircularBufferE = linkonce_odr dso_local constant [30 x i8] c"N6Cicada18LineCircularBufferE\00", comdat, align 1
@_ZTSN6Cicada14CircularBufferIcEE = linkonce_odr dso_local constant [29 x i8] c"N6Cicada14CircularBufferIcEE\00", comdat, align 1
@_ZTIN6Cicada14CircularBufferIcEE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN6Cicada14CircularBufferIcEE, i32 0, i32 0) }, comdat, align 4
@_ZTIN6Cicada18LineCircularBufferE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @_ZTSN6Cicada18LineCircularBufferE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada14CircularBufferIcEE to i8*) }, comdat, align 4
@_ZTVN6Cicada14CircularBufferIcEE = linkonce_odr dso_local unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada14CircularBufferIcEE to i8*), i8* bitcast (%"class.Cicada::CircularBuffer"* (%"class.Cicada::CircularBuffer"*)* @_ZN6Cicada14CircularBufferIcED2Ev to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer"*)* @_ZN6Cicada14CircularBufferIcED0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer"*, i8*, i64)* @_ZN6Cicada14CircularBufferIcE4pushEPKcy to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer"*, i8)* @_ZN6Cicada14CircularBufferIcE4pushEc to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer"*, i8*, i64)* @_ZN6Cicada14CircularBufferIcE4pullEPcy to i8*), i8* bitcast (i8 (%"class.Cicada::CircularBuffer"*)* @_ZN6Cicada14CircularBufferIcE4pullEv to i8*), i8* bitcast (i8 (%"class.Cicada::CircularBuffer"*)* @_ZN6Cicada14CircularBufferIcE4readEv to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer"*)* @_ZN6Cicada14CircularBufferIcE5flushEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE7isEmptyEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE6isFullEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE4sizeEv to i8*)] }, comdat, align 4

@_ZN6Cicada9SchedulerC1EPFjvEPPNS_4TaskE = dso_local unnamed_addr alias %"class.Cicada::Scheduler"* (%"class.Cicada::Scheduler"*, i32 ()*, %"class.Cicada::Task"**), %"class.Cicada::Scheduler"* (%"class.Cicada::Scheduler"*, i32 ()*, %"class.Cicada::Task"**)* @_ZN6Cicada9SchedulerC2EPFjvEPPNS_4TaskE
@_ZN6Cicada9Stm32UartC1EPcS1_yyP13USART_TypeDefP12GPIO_TypeDeftt = dso_local unnamed_addr alias %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*, i8*, i8*, i64, i64, %struct.USART_TypeDef*, %struct.USART_TypeDef*, i16, i16), %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*, i8*, i8*, i64, i64, %struct.USART_TypeDef*, %struct.USART_TypeDef*, i16, i16)* @_ZN6Cicada9Stm32UartC2EPcS1_yyP13USART_TypeDefP12GPIO_TypeDeftt
@_ZN6Cicada9Stm32UartC1EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt = dso_local unnamed_addr alias %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*, i8*, i8*, i64, %struct.USART_TypeDef*, %struct.USART_TypeDef*, i16, i16), %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*, i8*, i8*, i64, %struct.USART_TypeDef*, %struct.USART_TypeDef*, i16, i16)* @_ZN6Cicada9Stm32UartC2EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt
@_ZN6Cicada9Stm32UartD1Ev = dso_local unnamed_addr alias %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*), %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32UartD2Ev

; Function Attrs: mustprogress noinline norecurse nounwind
define dso_local noundef i32 @main(i32 noundef %0, i8** nocapture noundef readnone %1) local_unnamed_addr #0 !dbg !1296 {
  %3 = alloca [1504 x i8], align 1
  %4 = alloca [1504 x i8], align 1
  %5 = alloca [1504 x i8], align 1
  %6 = alloca [1504 x i8], align 1
  %7 = alloca %"class.Cicada::Stm32Uart", align 8
  %8 = alloca %"class.Cicada::Stm32Uart", align 8
  %9 = alloca %class.SerialTask, align 4
  %10 = alloca [2 x %"class.Cicada::Task"*], align 4
  %11 = alloca %"class.Cicada::Scheduler", align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !1301, metadata !DIExpression()), !dbg !1318
  call void @llvm.dbg.value(metadata i8** %1, metadata !1302, metadata !DIExpression()), !dbg !1318
  %12 = call i32 @HAL_Init() #26, !dbg !1319
  call fastcc void @_ZL18SystemClock_Configv(), !dbg !1320
  call void @llvm.dbg.value(metadata i16 1504, metadata !1303, metadata !DIExpression()), !dbg !1318
  %13 = getelementptr inbounds [1504 x i8], [1504 x i8]* %3, i32 0, i32 0, !dbg !1321
  call void @llvm.lifetime.start.p0i8(i64 1504, i8* nonnull %13) #26, !dbg !1321
  call void @llvm.dbg.declare(metadata [1504 x i8]* %3, metadata !1305, metadata !DIExpression()), !dbg !1322
  %14 = getelementptr inbounds [1504 x i8], [1504 x i8]* %4, i32 0, i32 0, !dbg !1323
  call void @llvm.lifetime.start.p0i8(i64 1504, i8* nonnull %14) #26, !dbg !1323
  call void @llvm.dbg.declare(metadata [1504 x i8]* %4, metadata !1309, metadata !DIExpression()), !dbg !1324
  %15 = getelementptr inbounds [1504 x i8], [1504 x i8]* %5, i32 0, i32 0, !dbg !1325
  call void @llvm.lifetime.start.p0i8(i64 1504, i8* nonnull %15) #26, !dbg !1325
  call void @llvm.dbg.declare(metadata [1504 x i8]* %5, metadata !1310, metadata !DIExpression()), !dbg !1326
  %16 = getelementptr inbounds [1504 x i8], [1504 x i8]* %6, i32 0, i32 0, !dbg !1327
  call void @llvm.lifetime.start.p0i8(i64 1504, i8* nonnull %16) #26, !dbg !1327
  call void @llvm.dbg.declare(metadata [1504 x i8]* %6, metadata !1311, metadata !DIExpression()), !dbg !1328
  %17 = bitcast %"class.Cicada::Stm32Uart"* %7 to i8*, !dbg !1329
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %17) #26, !dbg !1329
  call void @llvm.dbg.declare(metadata %"class.Cicada::Stm32Uart"* %7, metadata !1312, metadata !DIExpression()), !dbg !1330
  %18 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartC1EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %7, i8* noundef nonnull %13, i8* noundef nonnull %14, i64 noundef 1504, %struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073809408 to %struct.USART_TypeDef*), i16 noundef zeroext 4, i16 noundef zeroext 8) #26, !dbg !1330
  %19 = bitcast %"class.Cicada::Stm32Uart"* %8 to i8*, !dbg !1331
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %19) #26, !dbg !1331
  call void @llvm.dbg.declare(metadata %"class.Cicada::Stm32Uart"* %8, metadata !1313, metadata !DIExpression()), !dbg !1332
  %20 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartC1EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %8, i8* noundef nonnull %15, i8* noundef nonnull %16, i64 noundef 1504, %struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073821696 to %struct.USART_TypeDef*), %struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073809408 to %struct.USART_TypeDef*), i16 noundef zeroext 512, i16 noundef zeroext 1024) #26, !dbg !1332
  %21 = bitcast %class.SerialTask* %9 to i8*, !dbg !1333
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %21) #26, !dbg !1333
  call void @llvm.dbg.declare(metadata %class.SerialTask* %9, metadata !1314, metadata !DIExpression()), !dbg !1334
  %22 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %8, i32 0, i32 0, i32 0, !dbg !1335
  %23 = call noundef %class.SerialTask* @_ZN10SerialTaskC2ERN6Cicada15IBufferedSerialE(%class.SerialTask* noundef nonnull align 4 dereferenceable(28) %9, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %22), !dbg !1334
  %24 = bitcast [2 x %"class.Cicada::Task"*]* %10 to i8*, !dbg !1336
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #26, !dbg !1336
  call void @llvm.dbg.declare(metadata [2 x %"class.Cicada::Task"*]* %10, metadata !1315, metadata !DIExpression()), !dbg !1337
  %25 = getelementptr inbounds [2 x %"class.Cicada::Task"*], [2 x %"class.Cicada::Task"*]* %10, i32 0, i32 0, !dbg !1338
  %26 = getelementptr inbounds %class.SerialTask, %class.SerialTask* %9, i32 0, i32 0, !dbg !1339
  store %"class.Cicada::Task"* %26, %"class.Cicada::Task"** %25, align 4, !dbg !1338, !tbaa !1340
  %27 = getelementptr inbounds [2 x %"class.Cicada::Task"*], [2 x %"class.Cicada::Task"*]* %10, i32 0, i32 1, !dbg !1338
  store %"class.Cicada::Task"* null, %"class.Cicada::Task"** %27, align 4, !dbg !1338, !tbaa !1340
  %28 = bitcast %"class.Cicada::Scheduler"* %11 to i8*, !dbg !1344
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %28) #26, !dbg !1344
  call void @llvm.dbg.declare(metadata %"class.Cicada::Scheduler"* %11, metadata !1317, metadata !DIExpression()), !dbg !1345
  %29 = call noundef %"class.Cicada::Scheduler"* @_ZN6Cicada9SchedulerC1EPFjvEPPNS_4TaskE(%"class.Cicada::Scheduler"* noundef nonnull align 4 dereferenceable(12) %11, i32 ()* noundef nonnull @_Z13eTickFunctionv, %"class.Cicada::Task"** noundef nonnull %25) #26, !dbg !1345
  %30 = call noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %7) #26, !dbg !1346
  %31 = call noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %8) #26, !dbg !1347
  call void @_ZN6Cicada9Scheduler5startEv(%"class.Cicada::Scheduler"* noundef nonnull align 4 dereferenceable(12) %11) #26, !dbg !1348
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %28) #26, !dbg !1349
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #26, !dbg !1349
  %32 = call noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskD2Ev(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(28) %26) #26, !dbg !1349
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %21) #26, !dbg !1349
  %33 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD1Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %8) #26, !dbg !1349
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %19) #26, !dbg !1349
  %34 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD1Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %7) #26, !dbg !1349
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %17) #26, !dbg !1349
  call void @llvm.lifetime.end.p0i8(i64 1504, i8* nonnull %16) #26, !dbg !1349
  call void @llvm.lifetime.end.p0i8(i64 1504, i8* nonnull %15) #26, !dbg !1349
  call void @llvm.lifetime.end.p0i8(i64 1504, i8* nonnull %14) #26, !dbg !1349
  call void @llvm.lifetime.end.p0i8(i64 1504, i8* nonnull %13) #26, !dbg !1349
  ret i32 0, !dbg !1349
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: mustprogress noinline norecurse nounwind
define internal fastcc void @_ZL18SystemClock_Configv() unnamed_addr #0 !dbg !1350 {
  %1 = alloca %struct.RCC_OscInitTypeDef, align 4
  %2 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %3 = bitcast %struct.RCC_OscInitTypeDef* %1 to i8*, !dbg !1381
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #26, !dbg !1381
  call void @llvm.dbg.declare(metadata %struct.RCC_OscInitTypeDef* %1, metadata !1352, metadata !DIExpression()), !dbg !1382
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %3, i8 0, i32 40, i1 false), !dbg !1382
  %4 = bitcast %struct.RCC_ClkInitTypeDef* %2 to i8*, !dbg !1383
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #26, !dbg !1383
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %2, metadata !1372, metadata !DIExpression()), !dbg !1384
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(20) %4, i8 0, i32 20, i1 false), !dbg !1384
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 0, !dbg !1385
  store i32 2, i32* %5, align 4, !dbg !1386, !tbaa !1387
  %6 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 4, !dbg !1391
  store i32 1, i32* %6, align 4, !dbg !1392, !tbaa !1393
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 5, !dbg !1394
  store i32 16, i32* %7, align 4, !dbg !1395, !tbaa !1396
  %8 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 7, i32 0, !dbg !1397
  store i32 2, i32* %8, align 4, !dbg !1398, !tbaa !1399
  %9 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 7, i32 1, !dbg !1400
  store i32 0, i32* %9, align 4, !dbg !1401, !tbaa !1402
  %10 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 7, i32 2, !dbg !1403
  store i32 3670016, i32* %10, align 4, !dbg !1404, !tbaa !1405
  %11 = call i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef nonnull %1) #26, !dbg !1406
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 0, !dbg !1407
  store i32 15, i32* %12, align 4, !dbg !1408, !tbaa !1409
  %13 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 1, !dbg !1411
  store i32 2, i32* %13, align 4, !dbg !1412, !tbaa !1413
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 2, !dbg !1414
  store i32 0, i32* %14, align 4, !dbg !1415, !tbaa !1416
  %15 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 3, !dbg !1417
  store i32 1024, i32* %15, align 4, !dbg !1418, !tbaa !1419
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 4, !dbg !1420
  store i32 0, i32* %16, align 4, !dbg !1421, !tbaa !1422
  %17 = call i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef nonnull %2, i32 noundef 2) #26, !dbg !1423
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #26, !dbg !1424
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #26, !dbg !1424
  ret void, !dbg !1424
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %class.SerialTask* @_ZN10SerialTaskC2ERN6Cicada15IBufferedSerialE(%class.SerialTask* noundef nonnull returned align 4 dereferenceable(28) %0, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1) unnamed_addr #3 comdat align 2 !dbg !1425 {
  call void @llvm.dbg.value(metadata %class.SerialTask* %0, metadata !1427, metadata !DIExpression()), !dbg !1429
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %1, metadata !1428, metadata !DIExpression()), !dbg !1429
  %3 = getelementptr inbounds %class.SerialTask, %class.SerialTask* %0, i32 0, i32 0, !dbg !1430
  %4 = call noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskC2Et(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %3, i16 noundef zeroext 0), !dbg !1431
  %5 = getelementptr inbounds %class.SerialTask, %class.SerialTask* %0, i32 0, i32 0, i32 0, !dbg !1430
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV10SerialTask, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %5, align 4, !dbg !1430, !tbaa !1432
  %6 = getelementptr inbounds %class.SerialTask, %class.SerialTask* %0, i32 0, i32 1, !dbg !1434
  store %"class.Cicada::IBufferedSerial"* %1, %"class.Cicada::IBufferedSerial"** %6, align 4, !dbg !1434, !tbaa !1340
  %7 = getelementptr inbounds %class.SerialTask, %class.SerialTask* %0, i32 0, i32 2, !dbg !1435
  store i32 0, i32* %7, align 4, !dbg !1435, !tbaa !1436
  ret %class.SerialTask* %0, !dbg !1438
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskD2Ev(%"class.Cicada::Task"* noundef nonnull returned align 4 dereferenceable(20) %0) unnamed_addr #3 comdat align 2 !dbg !1439 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !1441, metadata !DIExpression()), !dbg !1442
  ret %"class.Cicada::Task"* %0, !dbg !1443
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskC2Et(%"class.Cicada::Task"* noundef nonnull returned align 4 dereferenceable(20) %0, i16 noundef zeroext %1) unnamed_addr #3 comdat align 2 !dbg !1444 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !1446, metadata !DIExpression()), !dbg !1448
  call void @llvm.dbg.value(metadata i16 %1, metadata !1447, metadata !DIExpression()), !dbg !1448
  %3 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 0, !dbg !1449
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6Cicada4TaskE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %3, align 4, !dbg !1449, !tbaa !1432
  %4 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 1, !dbg !1450
  store i16 %1, i16* %4, align 4, !dbg !1450, !tbaa !1451
  %5 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 3, !dbg !1455
  store i8 0, i8* %5, align 4, !dbg !1455, !tbaa !1456
  %6 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 4, !dbg !1457
  store i32 0, i32* %6, align 4, !dbg !1457, !tbaa !1458
  ret %"class.Cicada::Task"* %0, !dbg !1459
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN10SerialTaskD0Ev(%class.SerialTask* noundef nonnull align 4 dereferenceable(28) %0) unnamed_addr #3 comdat align 2 !dbg !1460 {
  call void @llvm.dbg.value(metadata %class.SerialTask* %0, metadata !1463, metadata !DIExpression()), !dbg !1464
  %2 = getelementptr inbounds %class.SerialTask, %class.SerialTask* %0, i32 0, i32 0, !dbg !1465
  %3 = call noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskD2Ev(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(28) %2) #26, !dbg !1465
  %4 = bitcast %class.SerialTask* %0 to i8*, !dbg !1465
  call void @_ZdlPv(i8* noundef %4) #27, !dbg !1465
  ret void, !dbg !1465
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN10SerialTask3runEv(%class.SerialTask* noundef nonnull align 4 dereferenceable(28) %0) unnamed_addr #4 comdat align 2 !dbg !215 {
  %2 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata %class.SerialTask* %0, metadata !217, metadata !DIExpression()), !dbg !1466
  %3 = load i8, i8* @_ZZN10SerialTask3runEvE10entrypoint, align 1, !dbg !1467, !tbaa !1468
  switch i8 %3, label %61 [
    i8 0, label %4
    i8 1, label %22
    i8 2, label %45
  ], !dbg !1467

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.SerialTask, %class.SerialTask* %0, i32 0, i32 2, !dbg !1469
  store i32 0, i32* %5, align 4, !dbg !1470, !tbaa !1436
  br label %6, !dbg !1469

6:                                                ; preds = %45, %4
  %7 = getelementptr inbounds %class.SerialTask, %class.SerialTask* %0, i32 0, i32 2, !dbg !1471
  %8 = load i32, i32* %7, align 4, !dbg !1471, !tbaa !1436
  %9 = icmp slt i32 %8, 100, !dbg !1472
  br i1 %9, label %10, label %49, !dbg !1473

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), metadata !219, metadata !DIExpression()), !dbg !1474
  %11 = call i32 (i8*, ...) @printf_(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #26, !dbg !1475
  %12 = getelementptr inbounds %class.SerialTask, %class.SerialTask* %0, i32 0, i32 1, !dbg !1476
  %13 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %12, align 4, !dbg !1476, !tbaa !1477
  %14 = bitcast %"class.Cicada::IBufferedSerial"* %13 to i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)***, !dbg !1478
  %15 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*** %14, align 4, !dbg !1478, !tbaa !1432
  %16 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %15, i32 6, !dbg !1478
  %17 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %16, align 4, !dbg !1478
  %18 = call noundef i64 %17(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %13, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i64 noundef 4) #26, !dbg !1478
  %19 = trunc i64 %18 to i32, !dbg !1476
  call void @llvm.dbg.value(metadata i32 %19, metadata !225, metadata !DIExpression()), !dbg !1474
  %20 = call i32 (i8*, ...) @printf_(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0), i32 noundef %19) #26, !dbg !1479
  %21 = getelementptr inbounds %class.SerialTask, %class.SerialTask* %0, i32 0, i32 0, !dbg !1480
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %21, i16 noundef zeroext 100), !dbg !1480
  store i8 1, i8* @_ZZN10SerialTask3runEvE10entrypoint, align 1, !dbg !1480, !tbaa !1468
  br label %22, !dbg !1480

22:                                               ; preds = %1, %10
  %23 = getelementptr inbounds %class.SerialTask, %class.SerialTask* %0, i32 0, i32 1, !dbg !1481
  %24 = bitcast %"class.Cicada::IBufferedSerial"** %23 to %"class.Cicada::ICommDevice"**, !dbg !1481
  %25 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %24, align 4, !dbg !1481, !tbaa !1477
  %26 = bitcast %"class.Cicada::ICommDevice"* %25 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !1481
  %27 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %26, align 4, !dbg !1481, !tbaa !1432
  %28 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %27, i32 2, !dbg !1481
  %29 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %28, align 4, !dbg !1481
  %30 = call noundef i64 %29(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %25) #26, !dbg !1481
  %31 = icmp eq i64 %30, 0, !dbg !1481
  br i1 %31, label %61, label %32, !dbg !1480

32:                                               ; preds = %22
  %33 = getelementptr inbounds [32 x i8], [32 x i8]* %2, i32 0, i32 0, !dbg !1483
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #26, !dbg !1483
  call void @llvm.dbg.declare(metadata [32 x i8]* %2, metadata !226, metadata !DIExpression()), !dbg !1484
  %34 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %23, align 4, !dbg !1485, !tbaa !1477
  %35 = bitcast %"class.Cicada::IBufferedSerial"* %34 to i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)***, !dbg !1486
  %36 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*** %35, align 4, !dbg !1486, !tbaa !1432
  %37 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %36, i32 5, !dbg !1486
  %38 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %37, align 4, !dbg !1486
  %39 = call noundef i64 %38(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %34, i8* noundef nonnull %33, i64 noundef 31) #26, !dbg !1486
  %40 = trunc i64 %39 to i32, !dbg !1485
  call void @llvm.dbg.value(metadata i32 %40, metadata !231, metadata !DIExpression()), !dbg !1487
  %41 = call i32 (i8*, ...) @printf_(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i32 0, i32 0), i32 noundef %40) #26, !dbg !1488
  %42 = getelementptr inbounds [32 x i8], [32 x i8]* %2, i32 0, i32 %40, !dbg !1489
  store i8 0, i8* %42, align 1, !dbg !1490, !tbaa !1468
  %43 = call i32 (i8*, ...) @printf_(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i32 0, i32 0), i8* noundef nonnull %33) #26, !dbg !1491
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #26, !dbg !1492
  %44 = getelementptr inbounds %class.SerialTask, %class.SerialTask* %0, i32 0, i32 0, !dbg !1493
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %44, i16 noundef zeroext 500), !dbg !1493
  br label %59, !dbg !1493

45:                                               ; preds = %1
  %46 = getelementptr inbounds %class.SerialTask, %class.SerialTask* %0, i32 0, i32 2, !dbg !1494
  %47 = load i32, i32* %46, align 4, !dbg !1495, !tbaa !1436
  %48 = add nsw i32 %47, 1, !dbg !1495
  store i32 %48, i32* %46, align 4, !dbg !1495, !tbaa !1436
  br label %6, !dbg !1496, !llvm.loop !1497

49:                                               ; preds = %6
  %50 = getelementptr inbounds %class.SerialTask, %class.SerialTask* %0, i32 0, i32 1, !dbg !1501
  %51 = bitcast %"class.Cicada::IBufferedSerial"** %50 to i8**, !dbg !1501
  %52 = load i8*, i8** %51, align 4, !dbg !1501, !tbaa !1477
  %53 = getelementptr inbounds i8, i8* %52, i32 4, !dbg !1501
  %54 = bitcast i8* %53 to %"class.Cicada::ICommDevice"*, !dbg !1501
  %55 = bitcast i8* %53 to void (%"class.Cicada::ICommDevice"*)***, !dbg !1502
  %56 = load void (%"class.Cicada::ICommDevice"*)**, void (%"class.Cicada::ICommDevice"*)*** %55, align 4, !dbg !1502, !tbaa !1432
  %57 = getelementptr inbounds void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %56, i32 5, !dbg !1502
  %58 = load void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %57, align 4, !dbg !1502
  call void %58(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %54) #26, !dbg !1502
  br label %59, !dbg !1503

59:                                               ; preds = %49, %32
  %60 = phi i8 [ 2, %32 ], [ 3, %49 ]
  store i8 %60, i8* @_ZZN10SerialTask3runEvE10entrypoint, align 1, !dbg !1504, !tbaa !1468
  br label %61, !dbg !1505

61:                                               ; preds = %59, %22, %1
  ret void, !dbg !1505
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %0, i16 noundef zeroext %1) local_unnamed_addr #4 comdat align 2 !dbg !1506 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !1508, metadata !DIExpression()), !dbg !1510
  call void @llvm.dbg.value(metadata i16 %1, metadata !1509, metadata !DIExpression()), !dbg !1510
  %3 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 1, !dbg !1511
  store i16 %1, i16* %3, align 4, !dbg !1512, !tbaa !1451
  ret void, !dbg !1513
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada4TaskD0Ev(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %0) unnamed_addr #3 comdat align 2 !dbg !1514 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !1516, metadata !DIExpression()), !dbg !1517
  call void @llvm.trap() #28, !dbg !1518
  unreachable, !dbg !1518
}

declare dso_local void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #7

; Function Attrs: mustprogress noinline nounwind
define dso_local void @SysTick_Handler() local_unnamed_addr #4 !dbg !1519 {
  call void @HAL_IncTick() #26, !dbg !1520
  ret void, !dbg !1521
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @USART1_IRQHandler() local_unnamed_addr #4 !dbg !2 {
  %1 = load atomic i8, i8* bitcast (i32* @_ZGVZ17USART1_IRQHandlerE8instance to i8*) acquire, align 4, !dbg !1522
  %2 = and i8 %1, 1, !dbg !1522
  %3 = icmp eq i8 %2, 0, !dbg !1522
  br i1 %3, label %4, label %9, !dbg !1522, !prof !1523

4:                                                ; preds = %0
  %5 = call i32 @__cxa_guard_acquire(i32* nonnull @_ZGVZ17USART1_IRQHandlerE8instance) #26, !dbg !1522
  %6 = icmp eq i32 %5, 0, !dbg !1522
  br i1 %6, label %9, label %7, !dbg !1522

7:                                                ; preds = %4
  %8 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef(%struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073821696 to %struct.USART_TypeDef*)) #26, !dbg !1524
  store %"class.Cicada::Stm32Uart"* %8, %"class.Cicada::Stm32Uart"** @_ZZ17USART1_IRQHandlerE8instance, align 4, !dbg !1522, !tbaa !1340
  call void @__cxa_guard_release(i32* nonnull @_ZGVZ17USART1_IRQHandlerE8instance) #26, !dbg !1522
  br label %9, !dbg !1522

9:                                                ; preds = %7, %4, %0
  %10 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** @_ZZ17USART1_IRQHandlerE8instance, align 4, !dbg !1525, !tbaa !1340
  call void @_ZN6Cicada9Stm32Uart15handleInterruptEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %10) #26, !dbg !1526
  ret void, !dbg !1527
}

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_guard_acquire(i32*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare dso_local void @__cxa_guard_release(i32*) local_unnamed_addr #8

; Function Attrs: mustprogress noinline nounwind
define dso_local void @USART2_IRQHandler() local_unnamed_addr #4 !dbg !201 {
  %1 = load atomic i8, i8* bitcast (i32* @_ZGVZ17USART2_IRQHandlerE8instance to i8*) acquire, align 4, !dbg !1528
  %2 = and i8 %1, 1, !dbg !1528
  %3 = icmp eq i8 %2, 0, !dbg !1528
  br i1 %3, label %4, label %9, !dbg !1528, !prof !1523

4:                                                ; preds = %0
  %5 = call i32 @__cxa_guard_acquire(i32* nonnull @_ZGVZ17USART2_IRQHandlerE8instance) #26, !dbg !1528
  %6 = icmp eq i32 %5, 0, !dbg !1528
  br i1 %6, label %9, label %7, !dbg !1528

7:                                                ; preds = %4
  %8 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef(%struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073759232 to %struct.USART_TypeDef*)) #26, !dbg !1529
  store %"class.Cicada::Stm32Uart"* %8, %"class.Cicada::Stm32Uart"** @_ZZ17USART2_IRQHandlerE8instance, align 4, !dbg !1528, !tbaa !1340
  call void @__cxa_guard_release(i32* nonnull @_ZGVZ17USART2_IRQHandlerE8instance) #26, !dbg !1528
  br label %9, !dbg !1528

9:                                                ; preds = %7, %4, %0
  %10 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** @_ZZ17USART2_IRQHandlerE8instance, align 4, !dbg !1530, !tbaa !1340
  call void @_ZN6Cicada9Stm32Uart15handleInterruptEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %10) #26, !dbg !1531
  ret void, !dbg !1532
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_putchar(i8 noundef zeroext %0) local_unnamed_addr #4 !dbg !208 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !212, metadata !DIExpression()), !dbg !1533
  %2 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** @_ZZ8_putcharE6serial, align 4, !dbg !1534, !tbaa !1340
  %3 = icmp eq %"class.Cicada::Stm32Uart"* %2, null, !dbg !1534
  br i1 %3, label %4, label %6, !dbg !1536

4:                                                ; preds = %1
  %5 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef(%struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073759232 to %struct.USART_TypeDef*)) #26, !dbg !1537
  store %"class.Cicada::Stm32Uart"* %5, %"class.Cicada::Stm32Uart"** @_ZZ8_putcharE6serial, align 4, !dbg !1539, !tbaa !1340
  br label %6, !dbg !1540

6:                                                ; preds = %4, %1
  %7 = load %"class.Cicada::BufferedSerial"*, %"class.Cicada::BufferedSerial"** bitcast (%"class.Cicada::Stm32Uart"** @_ZZ8_putcharE6serial to %"class.Cicada::BufferedSerial"**), align 4, !dbg !1541, !tbaa !1340
  %8 = bitcast %"class.Cicada::BufferedSerial"* %7 to void (%"class.Cicada::BufferedSerial"*, i8)***, !dbg !1542
  %9 = load void (%"class.Cicada::BufferedSerial"*, i8)**, void (%"class.Cicada::BufferedSerial"*, i8)*** %8, align 8, !dbg !1542, !tbaa !1432
  %10 = getelementptr inbounds void (%"class.Cicada::BufferedSerial"*, i8)*, void (%"class.Cicada::BufferedSerial"*, i8)** %9, i32 9, !dbg !1542
  %11 = load void (%"class.Cicada::BufferedSerial"*, i8)*, void (%"class.Cicada::BufferedSerial"*, i8)** %10, align 4, !dbg !1542
  call void %11(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %7, i8 noundef zeroext %0) #26, !dbg !1542
  ret void, !dbg !1543
}

; Function Attrs: noinline nounwind
define dso_local i32 @printf_(i8* noundef %0, ...) local_unnamed_addr #3 !dbg !1544 {
  %2 = alloca %struct.__va_list, align 4
  %3 = alloca [1 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !1548, metadata !DIExpression()), !dbg !1563
  %4 = bitcast %struct.__va_list* %2 to i8*, !dbg !1564
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #26, !dbg !1564
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !1549, metadata !DIExpression()), !dbg !1565
  call void @llvm.va_start(i8* nonnull %4), !dbg !1566
  %5 = getelementptr inbounds [1 x i8], [1 x i8]* %3, i32 0, i32 0, !dbg !1567
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #26, !dbg !1567
  call void @llvm.dbg.declare(metadata [1 x i8]* %3, metadata !1557, metadata !DIExpression()), !dbg !1568
  %6 = bitcast %struct.__va_list* %2 to i32*, !dbg !1569
  %7 = load i32, i32* %6, align 4, !dbg !1569
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !1569
  %9 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_char, i8* noundef nonnull %5, i32 noundef -1, i8* noundef %0, [1 x i32] %8), !dbg !1569
  call void @llvm.dbg.value(metadata i32 %9, metadata !1561, metadata !DIExpression()), !dbg !1563
  call void @llvm.va_end(i8* %4), !dbg !1570
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #26, !dbg !1571
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #26, !dbg !1571
  ret i32 %9, !dbg !1572
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #9

; Function Attrs: noinline nounwind
define internal void @_out_char(i8 noundef zeroext %0, i8* nocapture noundef readnone %1, i32 noundef %2, i32 noundef %3) #3 !dbg !1573 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !1575, metadata !DIExpression()), !dbg !1579
  call void @llvm.dbg.value(metadata i8* %1, metadata !1576, metadata !DIExpression()), !dbg !1579
  call void @llvm.dbg.value(metadata i32 %2, metadata !1577, metadata !DIExpression()), !dbg !1579
  call void @llvm.dbg.value(metadata i32 %3, metadata !1578, metadata !DIExpression()), !dbg !1579
  %5 = icmp eq i8 %0, 0, !dbg !1580
  br i1 %5, label %7, label %6, !dbg !1582

6:                                                ; preds = %4
  call void @_putchar(i8 noundef zeroext %0) #26, !dbg !1583
  br label %7, !dbg !1585

7:                                                ; preds = %6, %4
  ret void, !dbg !1586
}

; Function Attrs: noinline nounwind
define internal fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) unnamed_addr #3 !dbg !1587 {
  %6 = alloca i8*, align 4
  %7 = extractvalue [1 x i32] %4, 0
  %8 = inttoptr i32 %7 to i8*
  call void @llvm.dbg.value(metadata i8* %8, metadata !1595, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !1591, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata i8* %1, metadata !1592, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata i32 %2, metadata !1593, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata i8* %3, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %3, i8** %6, align 4, !tbaa !1643
  call void @llvm.dbg.value(metadata i32 0, metadata !1600, metadata !DIExpression()), !dbg !1642
  %9 = icmp eq i8* %1, null, !dbg !1647
  %10 = select i1 %9, void (i8, i8*, i32, i32)* @_out_null, void (i8, i8*, i32, i32)* %0, !dbg !1649
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %10, metadata !1591, metadata !DIExpression()), !dbg !1642
  br label %11, !dbg !1650

11:                                               ; preds = %354, %5
  %12 = phi i32 [ 0, %5 ], [ %355, %354 ]
  %13 = phi i8* [ %8, %5 ], [ %356, %354 ]
  br label %14, !dbg !1650

14:                                               ; preds = %11, %18
  %15 = phi i32 [ %19, %18 ], [ %12, %11 ], !dbg !1642
  call void @llvm.dbg.value(metadata i8* %13, metadata !1595, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata i32 %15, metadata !1600, metadata !DIExpression()), !dbg !1642
  %16 = load i8*, i8** %6, align 4, !dbg !1651, !tbaa !1643
  call void @llvm.dbg.value(metadata i8* %16, metadata !1594, metadata !DIExpression()), !dbg !1642
  %17 = load i8, i8* %16, align 1, !dbg !1652, !tbaa !1653
  switch i8 %17, label %18 [
    i8 0, label %357
    i8 37, label %22
  ], !dbg !1650

18:                                               ; preds = %14
  %19 = add i32 %15, 1, !dbg !1654
  call void @llvm.dbg.value(metadata i32 %19, metadata !1600, metadata !DIExpression()), !dbg !1642
  call void %10(i8 noundef zeroext %17, i8* noundef %1, i32 noundef %15, i32 noundef %2) #26, !dbg !1657, !callees !1658
  %20 = load i8*, i8** %6, align 4, !dbg !1659, !tbaa !1643
  call void @llvm.dbg.value(metadata i8* %20, metadata !1594, metadata !DIExpression()), !dbg !1642
  %21 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !1659
  call void @llvm.dbg.value(metadata i8* %21, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %21, i8** %6, align 4, !dbg !1659, !tbaa !1643
  br label %14, !dbg !1660, !llvm.loop !1661

22:                                               ; preds = %14
  %23 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !1663
  call void @llvm.dbg.value(metadata i8* %23, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %23, i8** %6, align 4, !dbg !1663, !tbaa !1643
  call void @llvm.dbg.value(metadata i32 0, metadata !1596, metadata !DIExpression()), !dbg !1642
  br label %24, !dbg !1665

24:                                               ; preds = %43, %22
  %25 = phi i32 [ 0, %22 ], [ %45, %43 ], !dbg !1666
  call void @llvm.dbg.value(metadata i32 %25, metadata !1596, metadata !DIExpression()), !dbg !1642
  %26 = load i8*, i8** %6, align 4, !dbg !1667, !tbaa !1643
  call void @llvm.dbg.value(metadata i8* %26, metadata !1594, metadata !DIExpression()), !dbg !1642
  %27 = load i8, i8* %26, align 1, !dbg !1669, !tbaa !1653
  switch i8 %27, label %43 [
    i8 48, label %28
    i8 45, label %31
    i8 43, label %34
    i8 32, label %37
    i8 35, label %40
  ], !dbg !1670

28:                                               ; preds = %24
  %29 = or i32 %25, 1, !dbg !1671
  call void @llvm.dbg.value(metadata i32 %29, metadata !1596, metadata !DIExpression()), !dbg !1642
  %30 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !1673
  call void @llvm.dbg.value(metadata i8* %30, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %30, i8** %6, align 4, !dbg !1673, !tbaa !1643
  call void @llvm.dbg.value(metadata i32 1, metadata !1599, metadata !DIExpression()), !dbg !1642
  br label %43, !dbg !1674

31:                                               ; preds = %24
  %32 = or i32 %25, 2, !dbg !1675
  call void @llvm.dbg.value(metadata i32 %32, metadata !1596, metadata !DIExpression()), !dbg !1642
  %33 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !1676
  call void @llvm.dbg.value(metadata i8* %33, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %33, i8** %6, align 4, !dbg !1676, !tbaa !1643
  call void @llvm.dbg.value(metadata i32 1, metadata !1599, metadata !DIExpression()), !dbg !1642
  br label %43, !dbg !1677

34:                                               ; preds = %24
  %35 = or i32 %25, 4, !dbg !1678
  call void @llvm.dbg.value(metadata i32 %35, metadata !1596, metadata !DIExpression()), !dbg !1642
  %36 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !1679
  call void @llvm.dbg.value(metadata i8* %36, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %36, i8** %6, align 4, !dbg !1679, !tbaa !1643
  call void @llvm.dbg.value(metadata i32 1, metadata !1599, metadata !DIExpression()), !dbg !1642
  br label %43, !dbg !1680

37:                                               ; preds = %24
  %38 = or i32 %25, 8, !dbg !1681
  call void @llvm.dbg.value(metadata i32 %38, metadata !1596, metadata !DIExpression()), !dbg !1642
  %39 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !1682
  call void @llvm.dbg.value(metadata i8* %39, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %39, i8** %6, align 4, !dbg !1682, !tbaa !1643
  call void @llvm.dbg.value(metadata i32 1, metadata !1599, metadata !DIExpression()), !dbg !1642
  br label %43, !dbg !1683

40:                                               ; preds = %24
  %41 = or i32 %25, 16, !dbg !1684
  call void @llvm.dbg.value(metadata i32 %41, metadata !1596, metadata !DIExpression()), !dbg !1642
  %42 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !1685
  call void @llvm.dbg.value(metadata i8* %42, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %42, i8** %6, align 4, !dbg !1685, !tbaa !1643
  call void @llvm.dbg.value(metadata i32 1, metadata !1599, metadata !DIExpression()), !dbg !1642
  br label %43, !dbg !1686

43:                                               ; preds = %24, %28, %31, %34, %37, %40
  %44 = phi i1 [ false, %28 ], [ false, %31 ], [ false, %34 ], [ false, %37 ], [ false, %40 ], [ true, %24 ], !dbg !1687
  %45 = phi i32 [ %29, %28 ], [ %32, %31 ], [ %35, %34 ], [ %38, %37 ], [ %41, %40 ], [ %25, %24 ], !dbg !1688
  call void @llvm.dbg.value(metadata i32 %45, metadata !1596, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata i32 undef, metadata !1599, metadata !DIExpression()), !dbg !1642
  br i1 %44, label %46, label %24, !dbg !1689, !llvm.loop !1690

46:                                               ; preds = %43
  call void @llvm.dbg.value(metadata i32 0, metadata !1597, metadata !DIExpression()), !dbg !1642
  %47 = load i8*, i8** %6, align 4, !dbg !1692, !tbaa !1643
  call void @llvm.dbg.value(metadata i8* %47, metadata !1594, metadata !DIExpression()), !dbg !1642
  %48 = load i8, i8* %47, align 1, !dbg !1693, !tbaa !1653
  %49 = call fastcc zeroext i1 @_is_digit(i8 noundef zeroext %48), !dbg !1694
  br i1 %49, label %50, label %52, !dbg !1695

50:                                               ; preds = %46
  call void @llvm.dbg.value(metadata i8** %6, metadata !1594, metadata !DIExpression(DW_OP_deref)), !dbg !1642
  %51 = call fastcc i32 @_atoi(i8** noundef nonnull %6), !dbg !1696
  call void @llvm.dbg.value(metadata i32 %51, metadata !1597, metadata !DIExpression()), !dbg !1642
  br label %64, !dbg !1698

52:                                               ; preds = %46
  call void @llvm.dbg.value(metadata i8* %47, metadata !1594, metadata !DIExpression()), !dbg !1642
  %53 = icmp eq i8 %48, 42, !dbg !1699
  br i1 %53, label %54, label %64, !dbg !1700

54:                                               ; preds = %52
  %55 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !1701
  call void @llvm.dbg.value(metadata i8* %55, metadata !1595, metadata !DIExpression()), !dbg !1642
  %56 = bitcast i8* %13 to i32*, !dbg !1701
  %57 = load i32, i32* %56, align 4, !dbg !1701
  call void @llvm.dbg.value(metadata i32 %57, metadata !1601, metadata !DIExpression()), !dbg !1702
  %58 = icmp slt i32 %57, 0, !dbg !1703
  %59 = or i32 %45, 2, !dbg !1705
  %60 = sub nsw i32 0, %57, !dbg !1705
  %61 = select i1 %58, i32 %60, i32 %57, !dbg !1705
  %62 = select i1 %58, i32 %59, i32 %45, !dbg !1705
  call void @llvm.dbg.value(metadata i32 %62, metadata !1596, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata i32 %61, metadata !1597, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata i8* %47, metadata !1594, metadata !DIExpression()), !dbg !1642
  %63 = getelementptr inbounds i8, i8* %47, i32 1, !dbg !1706
  call void @llvm.dbg.value(metadata i8* %63, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %63, i8** %6, align 4, !dbg !1706, !tbaa !1643
  br label %64, !dbg !1707

64:                                               ; preds = %52, %54, %50
  %65 = phi i32 [ %51, %50 ], [ %61, %54 ], [ 0, %52 ], !dbg !1688
  %66 = phi i32 [ %45, %50 ], [ %62, %54 ], [ %45, %52 ], !dbg !1688
  %67 = phi i8* [ %13, %50 ], [ %55, %54 ], [ %13, %52 ]
  call void @llvm.dbg.value(metadata i8* %67, metadata !1595, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata i32 %66, metadata !1596, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata i32 %65, metadata !1597, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata i32 0, metadata !1598, metadata !DIExpression()), !dbg !1642
  %68 = load i8*, i8** %6, align 4, !dbg !1708, !tbaa !1643
  call void @llvm.dbg.value(metadata i8* %68, metadata !1594, metadata !DIExpression()), !dbg !1642
  %69 = load i8, i8* %68, align 1, !dbg !1709, !tbaa !1653
  %70 = icmp eq i8 %69, 46, !dbg !1710
  br i1 %70, label %71, label %87, !dbg !1711

71:                                               ; preds = %64
  %72 = or i32 %66, 1024, !dbg !1712
  call void @llvm.dbg.value(metadata i32 %72, metadata !1596, metadata !DIExpression()), !dbg !1642
  %73 = getelementptr inbounds i8, i8* %68, i32 1, !dbg !1713
  call void @llvm.dbg.value(metadata i8* %73, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %73, i8** %6, align 4, !dbg !1713, !tbaa !1643
  %74 = load i8, i8* %73, align 1, !dbg !1714, !tbaa !1653
  %75 = call fastcc zeroext i1 @_is_digit(i8 noundef zeroext %74), !dbg !1715
  br i1 %75, label %76, label %78, !dbg !1716

76:                                               ; preds = %71
  call void @llvm.dbg.value(metadata i8** %6, metadata !1594, metadata !DIExpression(DW_OP_deref)), !dbg !1642
  %77 = call fastcc i32 @_atoi(i8** noundef nonnull %6), !dbg !1717
  call void @llvm.dbg.value(metadata i32 %77, metadata !1598, metadata !DIExpression()), !dbg !1642
  br label %87, !dbg !1719

78:                                               ; preds = %71
  call void @llvm.dbg.value(metadata i8* %73, metadata !1594, metadata !DIExpression()), !dbg !1642
  %79 = icmp eq i8 %74, 42, !dbg !1720
  br i1 %79, label %80, label %87, !dbg !1721

80:                                               ; preds = %78
  %81 = getelementptr inbounds i8, i8* %67, i32 4, !dbg !1722
  call void @llvm.dbg.value(metadata i8* %81, metadata !1595, metadata !DIExpression()), !dbg !1642
  %82 = bitcast i8* %67 to i32*, !dbg !1722
  %83 = load i32, i32* %82, align 4, !dbg !1722
  call void @llvm.dbg.value(metadata i32 %83, metadata !1606, metadata !DIExpression()), !dbg !1723
  %84 = icmp sgt i32 %83, 0, !dbg !1724
  %85 = select i1 %84, i32 %83, i32 0, !dbg !1725
  call void @llvm.dbg.value(metadata i32 %85, metadata !1598, metadata !DIExpression()), !dbg !1642
  %86 = getelementptr inbounds i8, i8* %68, i32 2, !dbg !1726
  call void @llvm.dbg.value(metadata i8* %86, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %86, i8** %6, align 4, !dbg !1726, !tbaa !1643
  br label %87, !dbg !1727

87:                                               ; preds = %76, %80, %78, %64
  %88 = phi i32 [ %77, %76 ], [ %85, %80 ], [ 0, %78 ], [ 0, %64 ], !dbg !1688
  %89 = phi i32 [ %72, %76 ], [ %72, %80 ], [ %72, %78 ], [ %66, %64 ], !dbg !1688
  %90 = phi i8* [ %67, %76 ], [ %81, %80 ], [ %67, %78 ], [ %67, %64 ]
  call void @llvm.dbg.value(metadata i8* %90, metadata !1595, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata i32 %89, metadata !1596, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata i32 %88, metadata !1598, metadata !DIExpression()), !dbg !1642
  %91 = load i8*, i8** %6, align 4, !dbg !1728, !tbaa !1643
  call void @llvm.dbg.value(metadata i8* %91, metadata !1594, metadata !DIExpression()), !dbg !1642
  %92 = load i8, i8* %91, align 1, !dbg !1729, !tbaa !1653
  %93 = zext i8 %92 to i32, !dbg !1729
  %94 = add nsw i32 %93, -104, !dbg !1730
  %95 = call i32 @llvm.fshl.i32(i32 %94, i32 %94, i32 31), !dbg !1730
  switch i32 %95, label %121 [
    i32 2, label %96
    i32 0, label %104
    i32 6, label %112
    i32 1, label %115
    i32 9, label %118
  ], !dbg !1730

96:                                               ; preds = %87
  %97 = or i32 %89, 256, !dbg !1731
  call void @llvm.dbg.value(metadata i32 %97, metadata !1596, metadata !DIExpression()), !dbg !1642
  %98 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !1733
  call void @llvm.dbg.value(metadata i8* %98, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %98, i8** %6, align 4, !dbg !1733, !tbaa !1643
  %99 = load i8, i8* %98, align 1, !dbg !1734, !tbaa !1653
  %100 = icmp eq i8 %99, 108, !dbg !1736
  br i1 %100, label %101, label %121, !dbg !1737

101:                                              ; preds = %96
  %102 = or i32 %89, 768, !dbg !1738
  call void @llvm.dbg.value(metadata i32 %102, metadata !1596, metadata !DIExpression()), !dbg !1642
  %103 = getelementptr inbounds i8, i8* %91, i32 2, !dbg !1740
  call void @llvm.dbg.value(metadata i8* %103, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %103, i8** %6, align 4, !dbg !1740, !tbaa !1643
  br label %121, !dbg !1741

104:                                              ; preds = %87
  %105 = or i32 %89, 128, !dbg !1742
  call void @llvm.dbg.value(metadata i32 %105, metadata !1596, metadata !DIExpression()), !dbg !1642
  %106 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !1743
  call void @llvm.dbg.value(metadata i8* %106, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %106, i8** %6, align 4, !dbg !1743, !tbaa !1643
  %107 = load i8, i8* %106, align 1, !dbg !1744, !tbaa !1653
  %108 = icmp eq i8 %107, 104, !dbg !1746
  br i1 %108, label %109, label %121, !dbg !1747

109:                                              ; preds = %104
  %110 = or i32 %89, 192, !dbg !1748
  call void @llvm.dbg.value(metadata i32 %110, metadata !1596, metadata !DIExpression()), !dbg !1642
  %111 = getelementptr inbounds i8, i8* %91, i32 2, !dbg !1750
  call void @llvm.dbg.value(metadata i8* %111, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %111, i8** %6, align 4, !dbg !1750, !tbaa !1643
  br label %121, !dbg !1751

112:                                              ; preds = %87
  %113 = or i32 %89, 256, !dbg !1752
  call void @llvm.dbg.value(metadata i32 %113, metadata !1596, metadata !DIExpression()), !dbg !1642
  %114 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !1753
  call void @llvm.dbg.value(metadata i8* %114, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %114, i8** %6, align 4, !dbg !1753, !tbaa !1643
  br label %121, !dbg !1754

115:                                              ; preds = %87
  %116 = or i32 %89, 512, !dbg !1755
  call void @llvm.dbg.value(metadata i32 %116, metadata !1596, metadata !DIExpression()), !dbg !1642
  %117 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !1756
  call void @llvm.dbg.value(metadata i8* %117, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %117, i8** %6, align 4, !dbg !1756, !tbaa !1643
  br label %121, !dbg !1757

118:                                              ; preds = %87
  %119 = or i32 %89, 256, !dbg !1758
  call void @llvm.dbg.value(metadata i32 %119, metadata !1596, metadata !DIExpression()), !dbg !1642
  %120 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !1759
  call void @llvm.dbg.value(metadata i8* %120, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %120, i8** %6, align 4, !dbg !1759, !tbaa !1643
  br label %121, !dbg !1760

121:                                              ; preds = %87, %104, %109, %96, %101, %118, %115, %112
  %122 = phi i32 [ %89, %87 ], [ %119, %118 ], [ %116, %115 ], [ %113, %112 ], [ %110, %109 ], [ %105, %104 ], [ %102, %101 ], [ %97, %96 ], !dbg !1688
  call void @llvm.dbg.value(metadata i32 %122, metadata !1596, metadata !DIExpression()), !dbg !1642
  %123 = load i8*, i8** %6, align 4, !dbg !1761, !tbaa !1643
  call void @llvm.dbg.value(metadata i8* %123, metadata !1594, metadata !DIExpression()), !dbg !1642
  %124 = load i8, i8* %123, align 1, !dbg !1762, !tbaa !1653
  switch i8 %124, label %350 [
    i8 37, label %346
    i8 112, label %337
    i8 115, label %278
    i8 99, label %244
    i8 70, label %233
    i8 102, label %233
    i8 120, label %129
    i8 88, label %129
    i8 111, label %125
    i8 98, label %126
    i8 100, label %127
    i8 105, label %127
    i8 117, label %127
  ], !dbg !1763

125:                                              ; preds = %121
  call void @llvm.dbg.value(metadata i32 8, metadata !1612, metadata !DIExpression()), !dbg !1764
  br label %129, !dbg !1765

126:                                              ; preds = %121
  call void @llvm.dbg.value(metadata i32 2, metadata !1612, metadata !DIExpression()), !dbg !1764
  br label %129, !dbg !1769

127:                                              ; preds = %121, %121, %121
  call void @llvm.dbg.value(metadata i32 10, metadata !1612, metadata !DIExpression()), !dbg !1764
  %128 = and i32 %122, -17, !dbg !1772
  call void @llvm.dbg.value(metadata i32 %128, metadata !1596, metadata !DIExpression()), !dbg !1642
  br label %129

129:                                              ; preds = %121, %121, %125, %127, %126
  %130 = phi i32 [ 8, %125 ], [ 2, %126 ], [ 10, %127 ], [ 16, %121 ], [ 16, %121 ], !dbg !1774
  %131 = phi i32 [ %122, %125 ], [ %122, %126 ], [ %128, %127 ], [ %122, %121 ], [ %122, %121 ], !dbg !1688
  call void @llvm.dbg.value(metadata i32 %131, metadata !1596, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata i32 %130, metadata !1612, metadata !DIExpression()), !dbg !1764
  call void @llvm.dbg.value(metadata i8* %123, metadata !1594, metadata !DIExpression()), !dbg !1642
  %132 = icmp eq i8 %124, 88, !dbg !1775
  %133 = or i32 %131, 32
  %134 = select i1 %132, i32 %133, i32 %131, !dbg !1777
  call void @llvm.dbg.value(metadata i32 %134, metadata !1596, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata i8* %123, metadata !1594, metadata !DIExpression()), !dbg !1642
  switch i8 %124, label %135 [
    i8 105, label %137
    i8 100, label %137
  ], !dbg !1778

135:                                              ; preds = %129
  %136 = and i32 %134, -13, !dbg !1780
  call void @llvm.dbg.value(metadata i32 %136, metadata !1596, metadata !DIExpression()), !dbg !1642
  br label %137, !dbg !1782

137:                                              ; preds = %129, %129, %135
  %138 = phi i32 [ %136, %135 ], [ %134, %129 ], [ %134, %129 ], !dbg !1764
  call void @llvm.dbg.value(metadata i32 %138, metadata !1596, metadata !DIExpression()), !dbg !1642
  %139 = and i32 %138, 1024, !dbg !1783
  %140 = icmp eq i32 %139, 0, !dbg !1783
  %141 = and i32 %138, -2
  %142 = select i1 %140, i32 %138, i32 %141, !dbg !1785
  call void @llvm.dbg.value(metadata i32 %142, metadata !1596, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata i8* %123, metadata !1594, metadata !DIExpression()), !dbg !1642
  switch i8 %124, label %189 [
    i8 105, label %143
    i8 100, label %143
  ], !dbg !1786

143:                                              ; preds = %137, %137
  %144 = and i32 %142, 512, !dbg !1787
  %145 = icmp eq i32 %144, 0, !dbg !1787
  br i1 %145, label %158, label %146, !dbg !1788

146:                                              ; preds = %143
  %147 = ptrtoint i8* %90 to i32, !dbg !1789
  %148 = add i32 %147, 7, !dbg !1789
  %149 = and i32 %148, -8, !dbg !1789
  %150 = inttoptr i32 %149 to i8*, !dbg !1789
  %151 = getelementptr inbounds i8, i8* %150, i32 8, !dbg !1789
  call void @llvm.dbg.value(metadata i8* %151, metadata !1595, metadata !DIExpression()), !dbg !1642
  %152 = inttoptr i32 %149 to i64*, !dbg !1789
  %153 = load i64, i64* %152, align 8, !dbg !1789
  call void @llvm.dbg.value(metadata i64 %153, metadata !1615, metadata !DIExpression()), !dbg !1790
  %154 = call i64 @llvm.abs.i64(i64 %153, i1 true), !dbg !1791
  %155 = icmp slt i64 %153, 0, !dbg !1792
  %156 = zext i32 %130 to i64, !dbg !1793
  %157 = call fastcc i32 @_ntoa_long_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i64 noundef %154, i1 noundef zeroext %155, i64 noundef %156, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !1794
  call void @llvm.dbg.value(metadata i32 %157, metadata !1600, metadata !DIExpression()), !dbg !1642
  br label %228, !dbg !1795

158:                                              ; preds = %143
  %159 = and i32 %142, 256, !dbg !1796
  %160 = icmp eq i32 %159, 0, !dbg !1796
  br i1 %160, label %168, label %161, !dbg !1797

161:                                              ; preds = %158
  %162 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !1798
  call void @llvm.dbg.value(metadata i8* %162, metadata !1595, metadata !DIExpression()), !dbg !1642
  %163 = bitcast i8* %90 to i32*, !dbg !1798
  %164 = load i32, i32* %163, align 4, !dbg !1798
  call void @llvm.dbg.value(metadata i32 %164, metadata !1621, metadata !DIExpression()), !dbg !1799
  %165 = call i32 @llvm.abs.i32(i32 %164, i1 true), !dbg !1800
  %166 = icmp slt i32 %164, 0, !dbg !1801
  %167 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %165, i1 noundef zeroext %166, i32 noundef %130, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !1802
  call void @llvm.dbg.value(metadata i32 %167, metadata !1600, metadata !DIExpression()), !dbg !1642
  br label %228, !dbg !1803

168:                                              ; preds = %158
  %169 = and i32 %142, 64, !dbg !1804
  %170 = icmp eq i32 %169, 0, !dbg !1804
  br i1 %170, label %175, label %171, !dbg !1805

171:                                              ; preds = %168
  call void @llvm.dbg.value(metadata i8* %90, metadata !1595, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !1642
  %172 = bitcast i8* %90 to i32*, !dbg !1806
  %173 = load i32, i32* %172, align 4, !dbg !1806
  %174 = and i32 %173, 255, !dbg !1807
  br label %183, !dbg !1805

175:                                              ; preds = %168
  %176 = and i32 %142, 128, !dbg !1808
  %177 = icmp eq i32 %176, 0, !dbg !1808
  call void @llvm.dbg.value(metadata i8* %90, metadata !1595, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !1642
  call void @llvm.dbg.value(metadata i8* %90, metadata !1595, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !1642
  %178 = bitcast i8* %90 to i32*, !dbg !1809
  %179 = load i32, i32* %178, align 4, !dbg !1809
  br i1 %177, label %183, label %180, !dbg !1810

180:                                              ; preds = %175
  %181 = shl i32 %179, 16, !dbg !1811
  %182 = ashr exact i32 %181, 16, !dbg !1811
  br label %183, !dbg !1810

183:                                              ; preds = %175, %180, %171
  %184 = phi i32 [ %174, %171 ], [ %182, %180 ], [ %179, %175 ], !dbg !1805
  %185 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !1809
  call void @llvm.dbg.value(metadata i8* %185, metadata !1595, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata i32 %184, metadata !1626, metadata !DIExpression()), !dbg !1809
  %186 = call i32 @llvm.abs.i32(i32 %184, i1 true), !dbg !1812
  %187 = icmp slt i32 %184, 0, !dbg !1813
  %188 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %186, i1 noundef zeroext %187, i32 noundef %130, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !1814
  call void @llvm.dbg.value(metadata i32 %188, metadata !1600, metadata !DIExpression()), !dbg !1642
  br label %228

189:                                              ; preds = %137
  %190 = and i32 %142, 512, !dbg !1815
  %191 = icmp eq i32 %190, 0, !dbg !1815
  br i1 %191, label %202, label %192, !dbg !1816

192:                                              ; preds = %189
  %193 = ptrtoint i8* %90 to i32, !dbg !1817
  %194 = add i32 %193, 7, !dbg !1817
  %195 = and i32 %194, -8, !dbg !1817
  %196 = inttoptr i32 %195 to i8*, !dbg !1817
  %197 = getelementptr inbounds i8, i8* %196, i32 8, !dbg !1817
  call void @llvm.dbg.value(metadata i8* %197, metadata !1595, metadata !DIExpression()), !dbg !1642
  %198 = inttoptr i32 %195 to i64*, !dbg !1817
  %199 = load i64, i64* %198, align 8, !dbg !1817
  %200 = zext i32 %130 to i64, !dbg !1819
  %201 = call fastcc i32 @_ntoa_long_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i64 noundef %199, i1 noundef zeroext false, i64 noundef %200, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !1820
  call void @llvm.dbg.value(metadata i32 %201, metadata !1600, metadata !DIExpression()), !dbg !1642
  br label %228, !dbg !1821

202:                                              ; preds = %189
  %203 = and i32 %142, 256, !dbg !1822
  %204 = icmp eq i32 %203, 0, !dbg !1822
  br i1 %204, label %210, label %205, !dbg !1823

205:                                              ; preds = %202
  %206 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !1824
  call void @llvm.dbg.value(metadata i8* %206, metadata !1595, metadata !DIExpression()), !dbg !1642
  %207 = bitcast i8* %90 to i32*, !dbg !1824
  %208 = load i32, i32* %207, align 4, !dbg !1824
  %209 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %208, i1 noundef zeroext false, i32 noundef %130, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !1826
  call void @llvm.dbg.value(metadata i32 %209, metadata !1600, metadata !DIExpression()), !dbg !1642
  br label %228, !dbg !1827

210:                                              ; preds = %202
  %211 = and i32 %142, 64, !dbg !1828
  %212 = icmp eq i32 %211, 0, !dbg !1828
  br i1 %212, label %217, label %213, !dbg !1829

213:                                              ; preds = %210
  call void @llvm.dbg.value(metadata i8* %90, metadata !1595, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !1642
  %214 = bitcast i8* %90 to i32*, !dbg !1830
  %215 = load i32, i32* %214, align 4, !dbg !1830
  %216 = and i32 %215, 255, !dbg !1831
  br label %224, !dbg !1829

217:                                              ; preds = %210
  %218 = and i32 %142, 128, !dbg !1832
  %219 = icmp eq i32 %218, 0, !dbg !1832
  call void @llvm.dbg.value(metadata i8* %90, metadata !1595, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !1642
  call void @llvm.dbg.value(metadata i8* %90, metadata !1595, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !1642
  %220 = bitcast i8* %90 to i32*, !dbg !1833
  %221 = load i32, i32* %220, align 4, !dbg !1833
  %222 = and i32 %221, 65535
  %223 = select i1 %219, i32 %221, i32 %222, !dbg !1834
  br label %224, !dbg !1834

224:                                              ; preds = %217, %213
  %225 = phi i32 [ %216, %213 ], [ %223, %217 ], !dbg !1829
  %226 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !1833
  call void @llvm.dbg.value(metadata i8* %226, metadata !1595, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata i32 %225, metadata !1628, metadata !DIExpression()), !dbg !1833
  %227 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %225, i1 noundef zeroext false, i32 noundef %130, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !1835
  call void @llvm.dbg.value(metadata i32 %227, metadata !1600, metadata !DIExpression()), !dbg !1642
  br label %228

228:                                              ; preds = %192, %224, %205, %146, %183, %161
  %229 = phi i32 [ %157, %146 ], [ %167, %161 ], [ %188, %183 ], [ %201, %192 ], [ %209, %205 ], [ %227, %224 ], !dbg !1836
  %230 = phi i8* [ %151, %146 ], [ %162, %161 ], [ %185, %183 ], [ %197, %192 ], [ %206, %205 ], [ %226, %224 ], !dbg !1836
  call void @llvm.dbg.value(metadata i8* %230, metadata !1595, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata i32 %229, metadata !1600, metadata !DIExpression()), !dbg !1642
  %231 = load i8*, i8** %6, align 4, !dbg !1837, !tbaa !1643
  call void @llvm.dbg.value(metadata i8* %231, metadata !1594, metadata !DIExpression()), !dbg !1642
  %232 = getelementptr inbounds i8, i8* %231, i32 1, !dbg !1837
  call void @llvm.dbg.value(metadata i8* %232, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %232, i8** %6, align 4, !dbg !1837, !tbaa !1643
  br label %354

233:                                              ; preds = %121, %121
  %234 = ptrtoint i8* %90 to i32, !dbg !1838
  %235 = add i32 %234, 7, !dbg !1838
  %236 = and i32 %235, -8, !dbg !1838
  %237 = inttoptr i32 %236 to i8*, !dbg !1838
  %238 = getelementptr inbounds i8, i8* %237, i32 8, !dbg !1838
  call void @llvm.dbg.value(metadata i8* %238, metadata !1595, metadata !DIExpression()), !dbg !1642
  %239 = inttoptr i32 %236 to double*, !dbg !1838
  %240 = load double, double* %239, align 8, !dbg !1838
  %241 = call fastcc i32 @_ftoa(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, double noundef %240, i32 noundef %88, i32 noundef %65, i32 noundef %122), !dbg !1839
  call void @llvm.dbg.value(metadata i32 %241, metadata !1600, metadata !DIExpression()), !dbg !1642
  %242 = load i8*, i8** %6, align 4, !dbg !1840, !tbaa !1643
  call void @llvm.dbg.value(metadata i8* %242, metadata !1594, metadata !DIExpression()), !dbg !1642
  %243 = getelementptr inbounds i8, i8* %242, i32 1, !dbg !1840
  call void @llvm.dbg.value(metadata i8* %243, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %243, i8** %6, align 4, !dbg !1840, !tbaa !1643
  br label %354, !dbg !1841

244:                                              ; preds = %121
  call void @llvm.dbg.value(metadata i32 1, metadata !1634, metadata !DIExpression()), !dbg !1842
  %245 = and i32 %122, 2, !dbg !1843
  %246 = icmp eq i32 %245, 0, !dbg !1843
  br i1 %246, label %247, label %257, !dbg !1845

247:                                              ; preds = %244
  call void @llvm.dbg.value(metadata i32 1, metadata !1634, metadata !DIExpression()), !dbg !1842
  call void @llvm.dbg.value(metadata i32 %15, metadata !1600, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata i32 2, metadata !1634, metadata !DIExpression()), !dbg !1842
  %248 = icmp ugt i32 %65, 1, !dbg !1846
  br i1 %248, label %249, label %257, !dbg !1848

249:                                              ; preds = %247
  %250 = add i32 %65, 1, !dbg !1848
  br label %251, !dbg !1848

251:                                              ; preds = %249, %251
  %252 = phi i32 [ %255, %251 ], [ 2, %249 ]
  %253 = phi i32 [ %254, %251 ], [ %15, %249 ]
  call void @llvm.dbg.value(metadata i32 %253, metadata !1600, metadata !DIExpression()), !dbg !1642
  %254 = add i32 %253, 1, !dbg !1849
  call void @llvm.dbg.value(metadata i32 %254, metadata !1600, metadata !DIExpression()), !dbg !1642
  call void %10(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %253, i32 noundef %2) #26, !dbg !1851, !callees !1658
  call void @llvm.dbg.value(metadata i32 %252, metadata !1634, metadata !DIExpression()), !dbg !1842
  %255 = add i32 %252, 1, !dbg !1852
  call void @llvm.dbg.value(metadata i32 %255, metadata !1634, metadata !DIExpression()), !dbg !1842
  %256 = icmp eq i32 %252, %65, !dbg !1846
  br i1 %256, label %257, label %251, !dbg !1848, !llvm.loop !1853

257:                                              ; preds = %251, %247, %244
  %258 = phi i32 [ %15, %244 ], [ %15, %247 ], [ %254, %251 ], !dbg !1855
  %259 = phi i32 [ 1, %244 ], [ 2, %247 ], [ %250, %251 ], !dbg !1842
  call void @llvm.dbg.value(metadata i32 %259, metadata !1634, metadata !DIExpression()), !dbg !1842
  call void @llvm.dbg.value(metadata i32 %258, metadata !1600, metadata !DIExpression()), !dbg !1642
  %260 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !1856
  call void @llvm.dbg.value(metadata i8* %260, metadata !1595, metadata !DIExpression()), !dbg !1642
  %261 = bitcast i8* %90 to i32*, !dbg !1856
  %262 = load i32, i32* %261, align 4, !dbg !1856
  %263 = trunc i32 %262 to i8, !dbg !1857
  %264 = add i32 %258, 1, !dbg !1858
  call void @llvm.dbg.value(metadata i32 %264, metadata !1600, metadata !DIExpression()), !dbg !1642
  call void %10(i8 noundef zeroext %263, i8* noundef %1, i32 noundef %258, i32 noundef %2) #26, !dbg !1859, !callees !1658
  %265 = xor i1 %246, true, !dbg !1860
  %266 = icmp ult i32 %259, %65
  %267 = select i1 %265, i1 %266, i1 false, !dbg !1860
  call void @llvm.dbg.value(metadata i32 %259, metadata !1634, metadata !DIExpression()), !dbg !1842
  call void @llvm.dbg.value(metadata i32 %264, metadata !1600, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata i32 %259, metadata !1634, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1842
  br i1 %267, label %268, label %274, !dbg !1860

268:                                              ; preds = %257, %268
  %269 = phi i32 [ %271, %268 ], [ %259, %257 ]
  %270 = phi i32 [ %272, %268 ], [ %264, %257 ]
  call void @llvm.dbg.value(metadata i32 %269, metadata !1634, metadata !DIExpression()), !dbg !1842
  call void @llvm.dbg.value(metadata i32 %270, metadata !1600, metadata !DIExpression()), !dbg !1642
  %271 = add nuw i32 %269, 1, !dbg !1861
  call void @llvm.dbg.value(metadata i32 %271, metadata !1634, metadata !DIExpression()), !dbg !1842
  %272 = add i32 %270, 1, !dbg !1864
  call void @llvm.dbg.value(metadata i32 %272, metadata !1600, metadata !DIExpression()), !dbg !1642
  call void %10(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %270, i32 noundef %2) #26, !dbg !1866, !callees !1658
  call void @llvm.dbg.value(metadata i32 %271, metadata !1634, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1842
  %273 = icmp eq i32 %271, %65, !dbg !1867
  br i1 %273, label %274, label %268, !dbg !1868, !llvm.loop !1869

274:                                              ; preds = %268, %257
  %275 = phi i32 [ %264, %257 ], [ %272, %268 ], !dbg !1858
  call void @llvm.dbg.value(metadata i32 %275, metadata !1600, metadata !DIExpression()), !dbg !1642
  %276 = load i8*, i8** %6, align 4, !dbg !1871, !tbaa !1643
  call void @llvm.dbg.value(metadata i8* %276, metadata !1594, metadata !DIExpression()), !dbg !1642
  %277 = getelementptr inbounds i8, i8* %276, i32 1, !dbg !1871
  call void @llvm.dbg.value(metadata i8* %277, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %277, i8** %6, align 4, !dbg !1871, !tbaa !1643
  br label %354

278:                                              ; preds = %121
  %279 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !1872
  call void @llvm.dbg.value(metadata i8* %279, metadata !1595, metadata !DIExpression()), !dbg !1642
  %280 = bitcast i8* %90 to i8**, !dbg !1872
  %281 = load i8*, i8** %280, align 4, !dbg !1872
  call void @llvm.dbg.value(metadata i8* %281, metadata !1636, metadata !DIExpression()), !dbg !1873
  %282 = icmp eq i32 %88, 0, !dbg !1874
  %283 = select i1 %282, i32 -1, i32 %88, !dbg !1874
  %284 = call fastcc i32 @_strnlen_s(i8* noundef %281, i32 noundef %283), !dbg !1875
  call void @llvm.dbg.value(metadata i32 %284, metadata !1638, metadata !DIExpression()), !dbg !1873
  %285 = and i32 %122, 1024, !dbg !1876
  %286 = icmp eq i32 %285, 0, !dbg !1876
  %287 = icmp ult i32 %284, %88, !dbg !1878
  %288 = select i1 %286, i1 true, i1 %287, !dbg !1878
  %289 = select i1 %288, i32 %284, i32 %88, !dbg !1878
  call void @llvm.dbg.value(metadata i32 %289, metadata !1638, metadata !DIExpression()), !dbg !1873
  %290 = and i32 %122, 2, !dbg !1879
  %291 = icmp eq i32 %290, 0, !dbg !1879
  br i1 %291, label %292, label %303, !dbg !1881

292:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 %289, metadata !1638, metadata !DIExpression()), !dbg !1873
  call void @llvm.dbg.value(metadata i32 %15, metadata !1600, metadata !DIExpression()), !dbg !1642
  %293 = add i32 %289, 1, !dbg !1882
  call void @llvm.dbg.value(metadata i32 %293, metadata !1638, metadata !DIExpression()), !dbg !1873
  %294 = icmp ult i32 %289, %65, !dbg !1884
  br i1 %294, label %295, label %303, !dbg !1885

295:                                              ; preds = %292
  %296 = add i32 %65, 1, !dbg !1885
  br label %297, !dbg !1885

297:                                              ; preds = %295, %297
  %298 = phi i32 [ %301, %297 ], [ %293, %295 ]
  %299 = phi i32 [ %300, %297 ], [ %15, %295 ]
  call void @llvm.dbg.value(metadata i32 %299, metadata !1600, metadata !DIExpression()), !dbg !1642
  %300 = add i32 %299, 1, !dbg !1886
  call void @llvm.dbg.value(metadata i32 %300, metadata !1600, metadata !DIExpression()), !dbg !1642
  call void %10(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %299, i32 noundef %2) #26, !dbg !1888, !callees !1658
  call void @llvm.dbg.value(metadata i32 %298, metadata !1638, metadata !DIExpression()), !dbg !1873
  %301 = add i32 %298, 1, !dbg !1882
  call void @llvm.dbg.value(metadata i32 %301, metadata !1638, metadata !DIExpression()), !dbg !1873
  %302 = icmp eq i32 %298, %65, !dbg !1884
  br i1 %302, label %303, label %297, !dbg !1885, !llvm.loop !1889

303:                                              ; preds = %297, %292, %278
  %304 = phi i32 [ %15, %278 ], [ %15, %292 ], [ %300, %297 ], !dbg !1855
  %305 = phi i32 [ %289, %278 ], [ %293, %292 ], [ %296, %297 ], !dbg !1873
  call void @llvm.dbg.value(metadata i32 %305, metadata !1638, metadata !DIExpression()), !dbg !1873
  call void @llvm.dbg.value(metadata i32 %304, metadata !1600, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata i8* %281, metadata !1636, metadata !DIExpression()), !dbg !1873
  call void @llvm.dbg.value(metadata i32 %88, metadata !1598, metadata !DIExpression()), !dbg !1642
  %306 = load i8, i8* %281, align 1, !dbg !1891, !tbaa !1653
  %307 = icmp eq i8 %306, 0, !dbg !1892
  br i1 %307, label %322, label %308, !dbg !1893

308:                                              ; preds = %303, %316
  %309 = phi i8 [ %320, %316 ], [ %306, %303 ]
  %310 = phi i8* [ %318, %316 ], [ %281, %303 ]
  %311 = phi i32 [ %317, %316 ], [ %88, %303 ]
  %312 = phi i32 [ %319, %316 ], [ %304, %303 ]
  call void @llvm.dbg.value(metadata i8* %310, metadata !1636, metadata !DIExpression()), !dbg !1873
  call void @llvm.dbg.value(metadata i32 %311, metadata !1598, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata i32 %312, metadata !1600, metadata !DIExpression()), !dbg !1642
  br i1 %286, label %316, label %313, !dbg !1894

313:                                              ; preds = %308
  %314 = add i32 %311, -1, !dbg !1895
  call void @llvm.dbg.value(metadata i32 %314, metadata !1598, metadata !DIExpression()), !dbg !1642
  %315 = icmp eq i32 %311, 0, !dbg !1894
  br i1 %315, label %322, label %316, !dbg !1896

316:                                              ; preds = %308, %313
  %317 = phi i32 [ %314, %313 ], [ %311, %308 ], !dbg !1688
  call void @llvm.dbg.value(metadata i32 %317, metadata !1598, metadata !DIExpression()), !dbg !1642
  %318 = getelementptr inbounds i8, i8* %310, i32 1, !dbg !1897
  call void @llvm.dbg.value(metadata i8* %318, metadata !1636, metadata !DIExpression()), !dbg !1873
  %319 = add i32 %312, 1, !dbg !1899
  call void @llvm.dbg.value(metadata i32 %319, metadata !1600, metadata !DIExpression()), !dbg !1642
  call void %10(i8 noundef zeroext %309, i8* noundef %1, i32 noundef %312, i32 noundef %2) #26, !dbg !1900, !callees !1658
  %320 = load i8, i8* %318, align 1, !dbg !1891, !tbaa !1653
  %321 = icmp eq i8 %320, 0, !dbg !1892
  br i1 %321, label %322, label %308, !dbg !1893, !llvm.loop !1901

322:                                              ; preds = %313, %316, %303
  %323 = phi i32 [ %304, %303 ], [ %312, %313 ], [ %319, %316 ], !dbg !1642
  %324 = xor i1 %291, true, !dbg !1903
  %325 = icmp ult i32 %305, %65
  %326 = select i1 %324, i1 %325, i1 false, !dbg !1903
  call void @llvm.dbg.value(metadata i32 %305, metadata !1638, metadata !DIExpression()), !dbg !1873
  call void @llvm.dbg.value(metadata i32 %323, metadata !1600, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata i32 %305, metadata !1638, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1873
  br i1 %326, label %327, label %333, !dbg !1903

327:                                              ; preds = %322, %327
  %328 = phi i32 [ %330, %327 ], [ %305, %322 ]
  %329 = phi i32 [ %331, %327 ], [ %323, %322 ]
  call void @llvm.dbg.value(metadata i32 %328, metadata !1638, metadata !DIExpression()), !dbg !1873
  call void @llvm.dbg.value(metadata i32 %329, metadata !1600, metadata !DIExpression()), !dbg !1642
  %330 = add nuw i32 %328, 1, !dbg !1904
  call void @llvm.dbg.value(metadata i32 %330, metadata !1638, metadata !DIExpression()), !dbg !1873
  %331 = add i32 %329, 1, !dbg !1907
  call void @llvm.dbg.value(metadata i32 %331, metadata !1600, metadata !DIExpression()), !dbg !1642
  call void %10(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %329, i32 noundef %2) #26, !dbg !1909, !callees !1658
  call void @llvm.dbg.value(metadata i32 %330, metadata !1638, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1873
  %332 = icmp eq i32 %330, %65, !dbg !1910
  br i1 %332, label %333, label %327, !dbg !1911, !llvm.loop !1912

333:                                              ; preds = %327, %322
  %334 = phi i32 [ %323, %322 ], [ %331, %327 ], !dbg !1855
  call void @llvm.dbg.value(metadata i32 %334, metadata !1600, metadata !DIExpression()), !dbg !1642
  %335 = load i8*, i8** %6, align 4, !dbg !1914, !tbaa !1643
  call void @llvm.dbg.value(metadata i8* %335, metadata !1594, metadata !DIExpression()), !dbg !1642
  %336 = getelementptr inbounds i8, i8* %335, i32 1, !dbg !1914
  call void @llvm.dbg.value(metadata i8* %336, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %336, i8** %6, align 4, !dbg !1914, !tbaa !1643
  br label %354

337:                                              ; preds = %121
  call void @llvm.dbg.value(metadata i32 8, metadata !1597, metadata !DIExpression()), !dbg !1642
  %338 = or i32 %122, 33, !dbg !1915
  call void @llvm.dbg.value(metadata i32 %338, metadata !1596, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.value(metadata i8 0, metadata !1639, metadata !DIExpression()), !dbg !1916
  %339 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !1917
  call void @llvm.dbg.value(metadata i8* %339, metadata !1595, metadata !DIExpression()), !dbg !1642
  %340 = bitcast i8* %90 to i8**, !dbg !1917
  %341 = load i8*, i8** %340, align 4, !dbg !1917
  %342 = ptrtoint i8* %341 to i32, !dbg !1920
  %343 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %342, i1 noundef zeroext false, i32 noundef 16, i32 noundef %88, i32 noundef 8, i32 noundef %338), !dbg !1921
  call void @llvm.dbg.value(metadata i32 %343, metadata !1600, metadata !DIExpression()), !dbg !1642
  %344 = load i8*, i8** %6, align 4, !dbg !1922, !tbaa !1643
  call void @llvm.dbg.value(metadata i8* %344, metadata !1594, metadata !DIExpression()), !dbg !1642
  %345 = getelementptr inbounds i8, i8* %344, i32 1, !dbg !1922
  call void @llvm.dbg.value(metadata i8* %345, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %345, i8** %6, align 4, !dbg !1922, !tbaa !1643
  br label %354

346:                                              ; preds = %121
  %347 = add i32 %15, 1, !dbg !1923
  call void @llvm.dbg.value(metadata i32 %347, metadata !1600, metadata !DIExpression()), !dbg !1642
  call void %10(i8 noundef zeroext 37, i8* noundef %1, i32 noundef %15, i32 noundef %2) #26, !dbg !1924, !callees !1658
  %348 = load i8*, i8** %6, align 4, !dbg !1925, !tbaa !1643
  call void @llvm.dbg.value(metadata i8* %348, metadata !1594, metadata !DIExpression()), !dbg !1642
  %349 = getelementptr inbounds i8, i8* %348, i32 1, !dbg !1925
  call void @llvm.dbg.value(metadata i8* %349, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %349, i8** %6, align 4, !dbg !1925, !tbaa !1643
  br label %354, !dbg !1926

350:                                              ; preds = %121
  %351 = add i32 %15, 1, !dbg !1927
  call void @llvm.dbg.value(metadata i32 %351, metadata !1600, metadata !DIExpression()), !dbg !1642
  call void %10(i8 noundef zeroext %124, i8* noundef %1, i32 noundef %15, i32 noundef %2) #26, !dbg !1928, !callees !1658
  %352 = load i8*, i8** %6, align 4, !dbg !1929, !tbaa !1643
  call void @llvm.dbg.value(metadata i8* %352, metadata !1594, metadata !DIExpression()), !dbg !1642
  %353 = getelementptr inbounds i8, i8* %352, i32 1, !dbg !1929
  call void @llvm.dbg.value(metadata i8* %353, metadata !1594, metadata !DIExpression()), !dbg !1642
  store i8* %353, i8** %6, align 4, !dbg !1929, !tbaa !1643
  br label %354, !dbg !1930

354:                                              ; preds = %350, %346, %337, %333, %274, %233, %228
  %355 = phi i32 [ %351, %350 ], [ %347, %346 ], [ %343, %337 ], [ %334, %333 ], [ %275, %274 ], [ %241, %233 ], [ %229, %228 ]
  %356 = phi i8* [ %90, %350 ], [ %90, %346 ], [ %339, %337 ], [ %279, %333 ], [ %260, %274 ], [ %238, %233 ], [ %230, %228 ]
  br label %11, !dbg !1650, !llvm.loop !1661

357:                                              ; preds = %14
  %358 = icmp ult i32 %15, %2, !dbg !1931
  %359 = add i32 %2, -1, !dbg !1932
  %360 = select i1 %358, i32 %15, i32 %359, !dbg !1932
  call void %10(i8 noundef zeroext 0, i8* noundef %1, i32 noundef %360, i32 noundef %2) #26, !dbg !1933, !callees !1658
  ret i32 %15, !dbg !1934
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #9

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define internal void @_out_null(i8 noundef zeroext %0, i8* nocapture noundef %1, i32 noundef %2, i32 noundef %3) #10 !dbg !1935 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !1937, metadata !DIExpression()), !dbg !1941
  call void @llvm.dbg.value(metadata i8* %1, metadata !1938, metadata !DIExpression()), !dbg !1941
  call void @llvm.dbg.value(metadata i32 %2, metadata !1939, metadata !DIExpression()), !dbg !1941
  call void @llvm.dbg.value(metadata i32 %3, metadata !1940, metadata !DIExpression()), !dbg !1941
  ret void, !dbg !1942
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define internal void @_out_buffer(i8 noundef zeroext %0, i8* nocapture noundef writeonly %1, i32 noundef %2, i32 noundef %3) #11 !dbg !1943 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !1945, metadata !DIExpression()), !dbg !1949
  call void @llvm.dbg.value(metadata i8* %1, metadata !1946, metadata !DIExpression()), !dbg !1949
  call void @llvm.dbg.value(metadata i32 %2, metadata !1947, metadata !DIExpression()), !dbg !1949
  call void @llvm.dbg.value(metadata i32 %3, metadata !1948, metadata !DIExpression()), !dbg !1949
  %5 = icmp ult i32 %2, %3, !dbg !1950
  br i1 %5, label %6, label %8, !dbg !1952

6:                                                ; preds = %4
  %7 = getelementptr inbounds i8, i8* %1, i32 %2, !dbg !1953
  store i8 %0, i8* %7, align 1, !dbg !1955, !tbaa !1653
  br label %8, !dbg !1956

8:                                                ; preds = %6, %4
  ret void, !dbg !1957
}

; Function Attrs: noinline nounwind
define internal void @_out_fct(i8 noundef zeroext %0, i8* nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #3 !dbg !1958 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !1960, metadata !DIExpression()), !dbg !1964
  call void @llvm.dbg.value(metadata i8* %1, metadata !1961, metadata !DIExpression()), !dbg !1964
  call void @llvm.dbg.value(metadata i32 %2, metadata !1962, metadata !DIExpression()), !dbg !1964
  call void @llvm.dbg.value(metadata i32 %3, metadata !1963, metadata !DIExpression()), !dbg !1964
  %5 = icmp eq i8 %0, 0, !dbg !1965
  br i1 %5, label %12, label %6, !dbg !1967

6:                                                ; preds = %4
  %7 = bitcast i8* %1 to void (i8, i8*)**, !dbg !1968
  %8 = load void (i8, i8*)*, void (i8, i8*)** %7, align 4, !dbg !1968, !tbaa !1970
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !1972
  %10 = bitcast i8* %9 to i8**, !dbg !1972
  %11 = load i8*, i8** %10, align 4, !dbg !1972, !tbaa !1973
  call void %8(i8 noundef zeroext %0, i8* noundef %11) #26, !dbg !1974
  br label %12, !dbg !1975

12:                                               ; preds = %6, %4
  ret void, !dbg !1976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define internal fastcc zeroext i1 @_is_digit(i8 noundef zeroext %0) unnamed_addr #10 !dbg !1977 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !1981, metadata !DIExpression()), !dbg !1982
  %2 = add i8 %0, -48, !dbg !1983
  %3 = icmp ult i8 %2, 10, !dbg !1983
  ret i1 %3, !dbg !1984
}

; Function Attrs: nofree noinline norecurse nosync nounwind
define internal fastcc i32 @_atoi(i8** nocapture noundef %0) unnamed_addr #12 !dbg !1985 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !1990, metadata !DIExpression()), !dbg !1992
  call void @llvm.dbg.value(metadata i32 0, metadata !1991, metadata !DIExpression()), !dbg !1992
  %2 = load i8*, i8** %0, align 4, !dbg !1993, !tbaa !1643
  %3 = load i8, i8* %2, align 1, !dbg !1994, !tbaa !1653
  %4 = call fastcc zeroext i1 @_is_digit(i8 noundef zeroext %3), !dbg !1995
  br i1 %4, label %5, label %16, !dbg !1996

5:                                                ; preds = %1, %5
  %6 = phi i8* [ %9, %5 ], [ %2, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !1991, metadata !DIExpression()), !dbg !1992
  %8 = mul i32 %7, 10, !dbg !1997
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !1999
  store i8* %9, i8** %0, align 4, !dbg !1999, !tbaa !1643
  %10 = load i8, i8* %6, align 1, !dbg !2000, !tbaa !1653
  %11 = zext i8 %10 to i32, !dbg !2000
  %12 = add i32 %8, -48, !dbg !2001
  %13 = add i32 %12, %11, !dbg !2002
  call void @llvm.dbg.value(metadata i32 %13, metadata !1991, metadata !DIExpression()), !dbg !1992
  %14 = load i8, i8* %9, align 1, !dbg !1994, !tbaa !1653
  %15 = call fastcc zeroext i1 @_is_digit(i8 noundef zeroext %14), !dbg !1995
  br i1 %15, label %5, label %16, !dbg !1996, !llvm.loop !2003

16:                                               ; preds = %5, %1
  %17 = phi i32 [ 0, %1 ], [ %13, %5 ], !dbg !1992
  ret i32 %17, !dbg !2005
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.abs.i64(i64, i1 immarg) #1

; Function Attrs: noinline nounwind
define internal fastcc i32 @_ntoa_long_long(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i64 noundef %4, i1 noundef zeroext %5, i64 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %9) unnamed_addr #3 !dbg !2006 {
  %11 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !2010, metadata !DIExpression()), !dbg !2026
  call void @llvm.dbg.value(metadata i8* %1, metadata !2011, metadata !DIExpression()), !dbg !2026
  call void @llvm.dbg.value(metadata i32 %2, metadata !2012, metadata !DIExpression()), !dbg !2026
  call void @llvm.dbg.value(metadata i32 %3, metadata !2013, metadata !DIExpression()), !dbg !2026
  call void @llvm.dbg.value(metadata i64 %4, metadata !2014, metadata !DIExpression()), !dbg !2026
  call void @llvm.dbg.value(metadata i1 %5, metadata !2015, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2026
  call void @llvm.dbg.value(metadata i64 %6, metadata !2016, metadata !DIExpression()), !dbg !2026
  call void @llvm.dbg.value(metadata i32 %7, metadata !2017, metadata !DIExpression()), !dbg !2026
  call void @llvm.dbg.value(metadata i32 %8, metadata !2018, metadata !DIExpression()), !dbg !2026
  call void @llvm.dbg.value(metadata i32 %9, metadata !2019, metadata !DIExpression()), !dbg !2026
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 0, !dbg !2027
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #26, !dbg !2027
  call void @llvm.dbg.declare(metadata [32 x i8]* %11, metadata !2020, metadata !DIExpression()), !dbg !2028
  call void @llvm.dbg.value(metadata i32 0, metadata !2021, metadata !DIExpression()), !dbg !2026
  %13 = icmp ne i64 %4, 0, !dbg !2029
  %14 = and i32 %9, -17
  %15 = select i1 %13, i32 %9, i32 %14, !dbg !2031
  call void @llvm.dbg.value(metadata i32 %15, metadata !2019, metadata !DIExpression()), !dbg !2026
  %16 = and i32 %15, 1024, !dbg !2032
  %17 = icmp eq i32 %16, 0, !dbg !2032
  %18 = or i1 %13, %17, !dbg !2033
  br i1 %18, label %19, label %41, !dbg !2033

19:                                               ; preds = %10
  %20 = and i32 %15, 32
  %21 = xor i32 %20, 97
  %22 = add nuw nsw i32 %21, 246
  br label %23, !dbg !2034

23:                                               ; preds = %19, %23
  %24 = phi i32 [ %36, %23 ], [ 0, %19 ], !dbg !2026
  %25 = phi i64 [ %27, %23 ], [ %4, %19 ]
  call void @llvm.dbg.value(metadata i64 %25, metadata !2014, metadata !DIExpression()), !dbg !2026
  call void @llvm.dbg.value(metadata i32 %24, metadata !2021, metadata !DIExpression()), !dbg !2026
  %26 = freeze i64 %25
  %27 = udiv i64 %26, %6, !dbg !2035
  %28 = mul i64 %27, %6
  %29 = sub i64 %26, %28
  %30 = trunc i64 %29 to i32, !dbg !2036
  %31 = and i32 %30, 254, !dbg !2037
  call void @llvm.dbg.value(metadata i32 %30, metadata !2022, metadata !DIExpression()), !dbg !2038
  %32 = icmp ult i32 %31, 10, !dbg !2039
  %33 = select i1 %32, i32 48, i32 %22, !dbg !2037
  %34 = add i32 %33, %30, !dbg !2037
  %35 = trunc i32 %34 to i8, !dbg !2037
  %36 = add nuw nsw i32 %24, 1, !dbg !2040
  call void @llvm.dbg.value(metadata i32 %36, metadata !2021, metadata !DIExpression()), !dbg !2026
  %37 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 %24, !dbg !2041
  store i8 %35, i8* %37, align 1, !dbg !2042, !tbaa !1653
  call void @llvm.dbg.value(metadata i64 %27, metadata !2014, metadata !DIExpression()), !dbg !2026
  %38 = icmp uge i64 %25, %6, !dbg !2043
  %39 = icmp ult i32 %24, 31, !dbg !2044
  %40 = select i1 %38, i1 %39, i1 false, !dbg !2044
  br i1 %40, label %23, label %41, !dbg !2045, !llvm.loop !2046

41:                                               ; preds = %23, %10
  %42 = phi i32 [ 0, %10 ], [ %36, %23 ], !dbg !2026
  call void @llvm.dbg.value(metadata i32 %42, metadata !2021, metadata !DIExpression()), !dbg !2026
  %43 = trunc i64 %6 to i32, !dbg !2048
  %44 = call fastcc i32 @_ntoa_format(void (i8, i8*, i32, i32)* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef nonnull %12, i32 noundef %42, i1 noundef zeroext %5, i32 noundef %43, i32 noundef %7, i32 noundef %8, i32 noundef %15), !dbg !2049
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #26, !dbg !2050
  ret i32 %44, !dbg !2051
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #1

; Function Attrs: noinline nounwind
define internal fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i1 noundef zeroext %5, i32 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %9) unnamed_addr #3 !dbg !2052 {
  %11 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !2056, metadata !DIExpression()), !dbg !2072
  call void @llvm.dbg.value(metadata i8* %1, metadata !2057, metadata !DIExpression()), !dbg !2072
  call void @llvm.dbg.value(metadata i32 %2, metadata !2058, metadata !DIExpression()), !dbg !2072
  call void @llvm.dbg.value(metadata i32 %3, metadata !2059, metadata !DIExpression()), !dbg !2072
  call void @llvm.dbg.value(metadata i32 %4, metadata !2060, metadata !DIExpression()), !dbg !2072
  call void @llvm.dbg.value(metadata i1 %5, metadata !2061, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2072
  call void @llvm.dbg.value(metadata i32 %6, metadata !2062, metadata !DIExpression()), !dbg !2072
  call void @llvm.dbg.value(metadata i32 %7, metadata !2063, metadata !DIExpression()), !dbg !2072
  call void @llvm.dbg.value(metadata i32 %8, metadata !2064, metadata !DIExpression()), !dbg !2072
  call void @llvm.dbg.value(metadata i32 %9, metadata !2065, metadata !DIExpression()), !dbg !2072
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 0, !dbg !2073
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #26, !dbg !2073
  call void @llvm.dbg.declare(metadata [32 x i8]* %11, metadata !2066, metadata !DIExpression()), !dbg !2074
  call void @llvm.dbg.value(metadata i32 0, metadata !2067, metadata !DIExpression()), !dbg !2072
  %13 = icmp ne i32 %4, 0, !dbg !2075
  %14 = and i32 %9, -17
  %15 = select i1 %13, i32 %9, i32 %14, !dbg !2077
  call void @llvm.dbg.value(metadata i32 %15, metadata !2065, metadata !DIExpression()), !dbg !2072
  %16 = and i32 %15, 1024, !dbg !2078
  %17 = icmp eq i32 %16, 0, !dbg !2078
  %18 = or i1 %13, %17, !dbg !2079
  br i1 %18, label %19, label %40, !dbg !2079

19:                                               ; preds = %10
  %20 = and i32 %15, 32
  %21 = xor i32 %20, 97
  %22 = add nuw nsw i32 %21, 246
  br label %23, !dbg !2080

23:                                               ; preds = %19, %23
  %24 = phi i32 [ %35, %23 ], [ 0, %19 ], !dbg !2072
  %25 = phi i32 [ %27, %23 ], [ %4, %19 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !2060, metadata !DIExpression()), !dbg !2072
  call void @llvm.dbg.value(metadata i32 %24, metadata !2067, metadata !DIExpression()), !dbg !2072
  %26 = freeze i32 %25
  %27 = udiv i32 %26, %6, !dbg !2081
  %28 = mul i32 %27, %6
  %29 = sub i32 %26, %28
  %30 = and i32 %29, 254, !dbg !2082
  call void @llvm.dbg.value(metadata i32 %29, metadata !2068, metadata !DIExpression()), !dbg !2083
  %31 = icmp ult i32 %30, 10, !dbg !2084
  %32 = select i1 %31, i32 48, i32 %22, !dbg !2082
  %33 = add i32 %29, %32, !dbg !2082
  %34 = trunc i32 %33 to i8, !dbg !2082
  %35 = add nuw nsw i32 %24, 1, !dbg !2085
  call void @llvm.dbg.value(metadata i32 %35, metadata !2067, metadata !DIExpression()), !dbg !2072
  %36 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 %24, !dbg !2086
  store i8 %34, i8* %36, align 1, !dbg !2087, !tbaa !1653
  call void @llvm.dbg.value(metadata i32 %27, metadata !2060, metadata !DIExpression()), !dbg !2072
  %37 = icmp uge i32 %25, %6, !dbg !2088
  %38 = icmp ult i32 %24, 31, !dbg !2089
  %39 = select i1 %37, i1 %38, i1 false, !dbg !2089
  br i1 %39, label %23, label %40, !dbg !2090, !llvm.loop !2091

40:                                               ; preds = %23, %10
  %41 = phi i32 [ 0, %10 ], [ %35, %23 ], !dbg !2072
  call void @llvm.dbg.value(metadata i32 %41, metadata !2067, metadata !DIExpression()), !dbg !2072
  %42 = call fastcc i32 @_ntoa_format(void (i8, i8*, i32, i32)* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef nonnull %12, i32 noundef %41, i1 noundef zeroext %5, i32 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %15), !dbg !2093
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #26, !dbg !2094
  ret i32 %42, !dbg !2095
}

; Function Attrs: noinline nounwind
define internal fastcc i32 @_ftoa(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, double noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7) unnamed_addr #3 !dbg !392 {
  %9 = alloca [32 x i8], align 1
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 0, !dbg !2096
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !417, metadata !DIExpression()), !dbg !2096
  call void @llvm.dbg.value(metadata i8* %1, metadata !418, metadata !DIExpression()), !dbg !2096
  call void @llvm.dbg.value(metadata i32 %2, metadata !419, metadata !DIExpression()), !dbg !2096
  call void @llvm.dbg.value(metadata i32 %3, metadata !420, metadata !DIExpression()), !dbg !2096
  call void @llvm.dbg.value(metadata double %4, metadata !421, metadata !DIExpression()), !dbg !2096
  call void @llvm.dbg.value(metadata i32 %5, metadata !422, metadata !DIExpression()), !dbg !2096
  call void @llvm.dbg.value(metadata i32 %6, metadata !423, metadata !DIExpression()), !dbg !2096
  call void @llvm.dbg.value(metadata i32 %7, metadata !424, metadata !DIExpression()), !dbg !2096
  call void @llvm.dbg.value(metadata i32 %2, metadata !425, metadata !DIExpression()), !dbg !2096
  %11 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 0, !dbg !2097
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #26, !dbg !2097
  call void @llvm.dbg.declare(metadata [32 x i8]* %9, metadata !427, metadata !DIExpression()), !dbg !2098
  call void @llvm.dbg.value(metadata i32 0, metadata !428, metadata !DIExpression()), !dbg !2096
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !429, metadata !DIExpression()), !dbg !2096
  call void @llvm.dbg.value(metadata double 0x41DFFFFFFFC00000, metadata !430, metadata !DIExpression()), !dbg !2096
  %12 = fcmp uno double %4, 0.000000e+00, !dbg !2099
  br i1 %12, label %13, label %17, !dbg !2101

13:                                               ; preds = %8
  %14 = add i32 %2, 1, !dbg !2102
  call void @llvm.dbg.value(metadata i32 %14, metadata !419, metadata !DIExpression()), !dbg !2096
  call void %0(i8 noundef zeroext 110, i8* noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !2104, !callees !1658
  %15 = add i32 %2, 2, !dbg !2105
  call void @llvm.dbg.value(metadata i32 %15, metadata !419, metadata !DIExpression()), !dbg !2096
  call void %0(i8 noundef zeroext 97, i8* noundef %1, i32 noundef %14, i32 noundef %3) #26, !dbg !2106, !callees !1658
  %16 = add i32 %2, 3, !dbg !2107
  call void @llvm.dbg.value(metadata i32 %16, metadata !419, metadata !DIExpression()), !dbg !2096
  call void %0(i8 noundef zeroext 110, i8* noundef %1, i32 noundef %15, i32 noundef %3) #26, !dbg !2108, !callees !1658
  br label %221, !dbg !2109

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i8 0, metadata !432, metadata !DIExpression()), !dbg !2096
  %18 = fcmp olt double %4, 0.000000e+00, !dbg !2110
  %19 = fsub double 0.000000e+00, %4, !dbg !2112
  %20 = select i1 %18, double %19, double %4, !dbg !2112
  call void @llvm.dbg.value(metadata i8 poison, metadata !432, metadata !DIExpression()), !dbg !2096
  call void @llvm.dbg.value(metadata double %20, metadata !421, metadata !DIExpression()), !dbg !2096
  %21 = and i32 %7, 1024, !dbg !2113
  %22 = icmp eq i32 %21, 0, !dbg !2113
  %23 = select i1 %22, i32 6, i32 %5, !dbg !2115
  call void @llvm.dbg.value(metadata i32 %23, metadata !422, metadata !DIExpression()), !dbg !2096
  call void @llvm.dbg.value(metadata i32 0, metadata !428, metadata !DIExpression()), !dbg !2096
  %24 = icmp ugt i32 %23, 9, !dbg !2116
  br i1 %24, label %25, label %39, !dbg !2117

25:                                               ; preds = %17
  %26 = add i32 %23, -10, !dbg !2117
  %27 = call i32 @llvm.umin.i32(i32 %26, i32 31), !dbg !2117
  %28 = add nuw nsw i32 %27, 1, !dbg !2117
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 %10, i8 48, i32 %28, i1 false), !dbg !2118, !tbaa !1653
  %29 = call i32 @llvm.umin.i32(i32 %26, i32 31), !dbg !2117
  %30 = add nuw nsw i32 %29, 1, !dbg !2117
  br label %31, !dbg !2117

31:                                               ; preds = %25, %31
  %32 = phi i32 [ %34, %31 ], [ 0, %25 ]
  %33 = phi i32 [ %35, %31 ], [ %23, %25 ]
  call void @llvm.dbg.value(metadata i32 %32, metadata !428, metadata !DIExpression()), !dbg !2096
  call void @llvm.dbg.value(metadata i32 %33, metadata !422, metadata !DIExpression()), !dbg !2096
  %34 = add nuw nsw i32 %32, 1, !dbg !2120
  call void @llvm.dbg.value(metadata i32 %34, metadata !428, metadata !DIExpression()), !dbg !2096
  %35 = add i32 %33, -1, !dbg !2121
  call void @llvm.dbg.value(metadata i32 %35, metadata !422, metadata !DIExpression()), !dbg !2096
  %36 = icmp eq i32 %32, %29, !dbg !2116
  br i1 %36, label %37, label %31, !dbg !2117, !llvm.loop !2122

37:                                               ; preds = %31
  %38 = icmp ult i32 %32, 31, !dbg !2124
  br label %39, !dbg !2125

39:                                               ; preds = %37, %17
  %40 = phi i32 [ %23, %17 ], [ %35, %37 ]
  %41 = phi i32 [ 0, %17 ], [ %30, %37 ], !dbg !2096
  %42 = phi i1 [ true, %17 ], [ %38, %37 ], !dbg !2124
  %43 = fptosi double %20 to i32, !dbg !2125
  call void @llvm.dbg.value(metadata i32 %43, metadata !434, metadata !DIExpression()), !dbg !2096
  %44 = sitofp i32 %43 to double, !dbg !2126
  %45 = fsub double %20, %44, !dbg !2127
  %46 = getelementptr inbounds [10 x double], [10 x double]* @_ftoa.pow10, i32 0, i32 %40, !dbg !2128
  %47 = load double, double* %46, align 8, !dbg !2128, !tbaa !2129
  %48 = fmul double %45, %47, !dbg !2131
  call void @llvm.dbg.value(metadata double %48, metadata !435, metadata !DIExpression()), !dbg !2096
  %49 = fptoui double %48 to i32, !dbg !2132
  call void @llvm.dbg.value(metadata i32 %49, metadata !436, metadata !DIExpression()), !dbg !2096
  %50 = uitofp i32 %49 to double, !dbg !2133
  %51 = fsub double %48, %50, !dbg !2134
  call void @llvm.dbg.value(metadata double %51, metadata !429, metadata !DIExpression()), !dbg !2096
  %52 = fcmp ogt double %51, 5.000000e-01, !dbg !2135
  br i1 %52, label %53, label %59, !dbg !2137

53:                                               ; preds = %39
  %54 = add i32 %49, 1, !dbg !2138
  call void @llvm.dbg.value(metadata i32 %54, metadata !436, metadata !DIExpression()), !dbg !2096
  %55 = uitofp i32 %54 to double, !dbg !2140
  %56 = fcmp ugt double %47, %55, !dbg !2142
  br i1 %56, label %68, label %57, !dbg !2143

57:                                               ; preds = %53
  call void @llvm.dbg.value(metadata i32 0, metadata !436, metadata !DIExpression()), !dbg !2096
  %58 = add nsw i32 %43, 1, !dbg !2144
  call void @llvm.dbg.value(metadata i32 %58, metadata !434, metadata !DIExpression()), !dbg !2096
  br label %68, !dbg !2146

59:                                               ; preds = %39
  %60 = fcmp olt double %51, 5.000000e-01, !dbg !2147
  br i1 %60, label %68, label %61, !dbg !2149

61:                                               ; preds = %59
  %62 = icmp eq i32 %49, 0, !dbg !2150
  %63 = and i32 %49, 1
  %64 = icmp ne i32 %63, 0
  %65 = or i1 %62, %64, !dbg !2152
  %66 = zext i1 %65 to i32, !dbg !2152
  %67 = add i32 %66, %49, !dbg !2152
  br label %68, !dbg !2152

68:                                               ; preds = %61, %59, %53, %57
  %69 = phi i32 [ %58, %57 ], [ %43, %53 ], [ %43, %59 ], [ %43, %61 ], !dbg !2096
  %70 = phi i32 [ 0, %57 ], [ %54, %53 ], [ %49, %59 ], [ %67, %61 ], !dbg !2096
  call void @llvm.dbg.value(metadata i32 %70, metadata !436, metadata !DIExpression()), !dbg !2096
  call void @llvm.dbg.value(metadata i32 %69, metadata !434, metadata !DIExpression()), !dbg !2096
  %71 = fcmp ogt double %20, 0x41DFFFFFFFC00000, !dbg !2153
  br i1 %71, label %221, label %72, !dbg !2155

72:                                               ; preds = %68
  %73 = icmp eq i32 %40, 0, !dbg !2156
  br i1 %73, label %74, label %83, !dbg !2157

74:                                               ; preds = %72
  %75 = sitofp i32 %69 to double, !dbg !2158
  %76 = fsub double %20, %75, !dbg !2160
  call void @llvm.dbg.value(metadata double %76, metadata !429, metadata !DIExpression()), !dbg !2096
  %77 = fcmp uge double %76, 5.000000e-01, !dbg !2161
  %78 = and i32 %69, 1
  %79 = icmp ne i32 %78, 0
  %80 = select i1 %77, i1 %79, i1 false, !dbg !2161
  %81 = zext i1 %80 to i32, !dbg !2161
  %82 = add nsw i32 %69, %81, !dbg !2161
  br label %123, !dbg !2161

83:                                               ; preds = %72
  call void @llvm.dbg.value(metadata i32 %40, metadata !437, metadata !DIExpression()), !dbg !2163
  br i1 %42, label %84, label %100, !dbg !2164

84:                                               ; preds = %83, %84
  %85 = phi i32 [ %95, %84 ], [ %41, %83 ], !dbg !2096
  %86 = phi i32 [ %90, %84 ], [ %70, %83 ], !dbg !2096
  %87 = phi i32 [ %88, %84 ], [ %40, %83 ], !dbg !2163
  call void @llvm.dbg.value(metadata i32 %87, metadata !437, metadata !DIExpression()), !dbg !2163
  call void @llvm.dbg.value(metadata i32 %86, metadata !436, metadata !DIExpression()), !dbg !2096
  call void @llvm.dbg.value(metadata i32 %85, metadata !428, metadata !DIExpression()), !dbg !2096
  %88 = add i32 %87, -1, !dbg !2165
  call void @llvm.dbg.value(metadata i32 %88, metadata !437, metadata !DIExpression()), !dbg !2163
  %89 = freeze i32 %86
  %90 = udiv i32 %89, 10, !dbg !2167
  %91 = mul i32 %90, 10
  %92 = sub i32 %89, %91
  %93 = trunc i32 %92 to i8, !dbg !2169
  %94 = or i8 %93, 48, !dbg !2169
  %95 = add nuw nsw i32 %85, 1, !dbg !2170
  call void @llvm.dbg.value(metadata i32 %95, metadata !428, metadata !DIExpression()), !dbg !2096
  %96 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %85, !dbg !2171
  store i8 %94, i8* %96, align 1, !dbg !2172, !tbaa !1653
  call void @llvm.dbg.value(metadata i32 %90, metadata !436, metadata !DIExpression()), !dbg !2096
  %97 = icmp ugt i32 %86, 9, !dbg !2167
  %98 = icmp ult i32 %85, 31
  %99 = select i1 %97, i1 %98, i1 false, !dbg !2173
  br i1 %99, label %84, label %100, !dbg !2173, !llvm.loop !2174

100:                                              ; preds = %84, %83
  %101 = phi i32 [ %41, %83 ], [ %95, %84 ], !dbg !2096
  %102 = phi i32 [ %40, %83 ], [ %88, %84 ], !dbg !2163
  call void @llvm.dbg.value(metadata i32 %102, metadata !437, metadata !DIExpression()), !dbg !2163
  call void @llvm.dbg.value(metadata i32 %101, metadata !428, metadata !DIExpression()), !dbg !2096
  %103 = icmp ult i32 %101, 32, !dbg !2176
  %104 = xor i1 %103, true, !dbg !2177
  %105 = icmp eq i32 %102, 0
  %106 = select i1 %104, i1 true, i1 %105, !dbg !2177
  call void @llvm.dbg.value(metadata i32 %102, metadata !437, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2163
  br i1 %106, label %117, label %107, !dbg !2177

107:                                              ; preds = %100, %107
  %108 = phi i32 [ %110, %107 ], [ %102, %100 ]
  %109 = phi i32 [ %111, %107 ], [ %101, %100 ]
  call void @llvm.dbg.value(metadata i32 %108, metadata !437, metadata !DIExpression()), !dbg !2163
  call void @llvm.dbg.value(metadata i32 %109, metadata !428, metadata !DIExpression()), !dbg !2096
  %110 = add i32 %108, -1, !dbg !2178
  call void @llvm.dbg.value(metadata i32 %110, metadata !437, metadata !DIExpression()), !dbg !2163
  %111 = add i32 %109, 1, !dbg !2179
  call void @llvm.dbg.value(metadata i32 %111, metadata !428, metadata !DIExpression()), !dbg !2096
  %112 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %109, !dbg !2181
  store i8 48, i8* %112, align 1, !dbg !2182, !tbaa !1653
  %113 = icmp ult i32 %111, 32, !dbg !2176
  %114 = xor i1 %113, true, !dbg !2177
  %115 = icmp eq i32 %110, 0
  %116 = select i1 %114, i1 true, i1 %115, !dbg !2177
  call void @llvm.dbg.value(metadata i32 %110, metadata !437, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2163
  br i1 %116, label %117, label %107, !dbg !2177, !llvm.loop !2183

117:                                              ; preds = %107, %100
  %118 = phi i32 [ %101, %100 ], [ %111, %107 ], !dbg !2163
  %119 = phi i1 [ %103, %100 ], [ %113, %107 ], !dbg !2176
  br i1 %119, label %120, label %123, !dbg !2186

120:                                              ; preds = %117
  %121 = add i32 %118, 1, !dbg !2187
  call void @llvm.dbg.value(metadata i32 %121, metadata !428, metadata !DIExpression()), !dbg !2096
  %122 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %118, !dbg !2190
  store i8 46, i8* %122, align 1, !dbg !2191, !tbaa !1653
  br label %123, !dbg !2192

123:                                              ; preds = %74, %117, %120
  %124 = phi i32 [ %121, %120 ], [ %118, %117 ], [ %41, %74 ], !dbg !2096
  %125 = phi i32 [ %69, %120 ], [ %69, %117 ], [ %82, %74 ], !dbg !2096
  call void @llvm.dbg.value(metadata i32 %125, metadata !434, metadata !DIExpression()), !dbg !2096
  call void @llvm.dbg.value(metadata i32 %124, metadata !428, metadata !DIExpression()), !dbg !2096
  %126 = icmp ult i32 %124, 32, !dbg !2193
  br i1 %126, label %127, label %142, !dbg !2194

127:                                              ; preds = %123, %127
  %128 = phi i32 [ %136, %127 ], [ %124, %123 ], !dbg !2096
  %129 = phi i32 [ %131, %127 ], [ %125, %123 ], !dbg !2096
  call void @llvm.dbg.value(metadata i32 %129, metadata !434, metadata !DIExpression()), !dbg !2096
  call void @llvm.dbg.value(metadata i32 %128, metadata !428, metadata !DIExpression()), !dbg !2096
  %130 = freeze i32 %129
  %131 = sdiv i32 %130, 10, !dbg !2195
  %132 = mul i32 %131, 10
  %133 = sub i32 %130, %132
  %134 = trunc i32 %133 to i8, !dbg !2198
  %135 = add i8 %134, 48, !dbg !2198
  %136 = add nuw nsw i32 %128, 1, !dbg !2199
  call void @llvm.dbg.value(metadata i32 %136, metadata !428, metadata !DIExpression()), !dbg !2096
  %137 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %128, !dbg !2200
  store i8 %135, i8* %137, align 1, !dbg !2201, !tbaa !1653
  call void @llvm.dbg.value(metadata i32 %131, metadata !434, metadata !DIExpression()), !dbg !2096
  %138 = add i32 %129, -10, !dbg !2195
  %139 = icmp ult i32 %138, -19, !dbg !2195
  %140 = icmp ult i32 %128, 31
  %141 = select i1 %139, i1 %140, i1 false, !dbg !2202
  br i1 %141, label %127, label %142, !dbg !2202, !llvm.loop !2203

142:                                              ; preds = %127, %123
  %143 = phi i32 [ %124, %123 ], [ %136, %127 ], !dbg !2096
  call void @llvm.dbg.value(metadata i32 %143, metadata !428, metadata !DIExpression()), !dbg !2096
  %144 = and i32 %7, 2, !dbg !2205
  %145 = icmp ne i32 %144, 0, !dbg !2205
  %146 = and i32 %7, 3, !dbg !2207
  %147 = icmp eq i32 %146, 1, !dbg !2207
  br i1 %147, label %148, label %171, !dbg !2207

148:                                              ; preds = %142
  %149 = icmp eq i32 %6, 0, !dbg !2208
  br i1 %149, label %156, label %150, !dbg !2211

150:                                              ; preds = %148
  %151 = and i32 %7, 12
  %152 = icmp ne i32 %151, 0
  %153 = or i1 %18, %152, !dbg !2212
  %154 = sext i1 %153 to i32, !dbg !2212
  %155 = add i32 %154, %6, !dbg !2212
  br label %156, !dbg !2212

156:                                              ; preds = %150, %148
  %157 = phi i32 [ 0, %148 ], [ %155, %150 ]
  call void @llvm.dbg.value(metadata i32 %157, metadata !423, metadata !DIExpression()), !dbg !2096
  call void @llvm.dbg.value(metadata i32 %143, metadata !428, metadata !DIExpression()), !dbg !2096
  %158 = icmp ult i32 %143, %157, !dbg !2213
  %159 = icmp ult i32 %143, 32, !dbg !2214
  %160 = and i1 %158, %159, !dbg !2214
  br i1 %160, label %161, label %171, !dbg !2215

161:                                              ; preds = %156
  %162 = getelementptr [32 x i8], [32 x i8]* %9, i32 0, i32 %143, !dbg !2215
  %163 = xor i32 %143, -1, !dbg !2215
  %164 = add i32 %157, %163, !dbg !2215
  %165 = sub i32 31, %143, !dbg !2215
  %166 = call i32 @llvm.umin.i32(i32 %164, i32 %165), !dbg !2215
  %167 = add nuw i32 %166, 1, !dbg !2215
  call void @llvm.memset.p0i8.i32(i8* align 1 %162, i8 48, i32 %167, i1 false), !dbg !2216, !tbaa !1653
  %168 = call i32 @llvm.umin.i32(i32 %164, i32 %165), !dbg !2215
  %169 = add i32 %143, %168, !dbg !2215
  call void @llvm.dbg.value(metadata i32 undef, metadata !428, metadata !DIExpression()), !dbg !2096
  call void @llvm.dbg.value(metadata i32 undef, metadata !428, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2096
  %170 = add i32 %169, 1, !dbg !2215
  br label %171, !dbg !2218

171:                                              ; preds = %161, %156, %142
  %172 = phi i32 [ %6, %142 ], [ %157, %156 ], [ %157, %161 ]
  %173 = phi i32 [ %143, %142 ], [ %143, %156 ], [ %170, %161 ], !dbg !2199
  call void @llvm.dbg.value(metadata i32 %173, metadata !428, metadata !DIExpression()), !dbg !2096
  call void @llvm.dbg.value(metadata i32 %172, metadata !423, metadata !DIExpression()), !dbg !2096
  %174 = icmp ult i32 %173, 32, !dbg !2218
  br i1 %174, label %175, label %186, !dbg !2220

175:                                              ; preds = %171
  br i1 %18, label %182, label %176, !dbg !2221

176:                                              ; preds = %175
  %177 = and i32 %7, 4, !dbg !2223
  %178 = icmp eq i32 %177, 0, !dbg !2223
  br i1 %178, label %179, label %182, !dbg !2226

179:                                              ; preds = %176
  %180 = and i32 %7, 8, !dbg !2227
  %181 = icmp eq i32 %180, 0, !dbg !2227
  br i1 %181, label %186, label %182, !dbg !2229

182:                                              ; preds = %179, %176, %175
  %183 = phi i8 [ 45, %175 ], [ 43, %176 ], [ 32, %179 ]
  %184 = add i32 %173, 1, !dbg !2230
  %185 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %173, !dbg !2230
  store i8 %183, i8* %185, align 1, !dbg !2230, !tbaa !1653
  br label %186, !dbg !2231

186:                                              ; preds = %182, %179, %171
  %187 = phi i32 [ %173, %179 ], [ %173, %171 ], [ %184, %182 ], !dbg !2096
  call void @llvm.dbg.value(metadata i32 %187, metadata !428, metadata !DIExpression()), !dbg !2096
  %188 = and i32 %7, 3, !dbg !2231
  %189 = icmp eq i32 %188, 0, !dbg !2231
  %190 = icmp ult i32 %187, %172
  %191 = select i1 %189, i1 %190, i1 false, !dbg !2231
  call void @llvm.dbg.value(metadata i32 %187, metadata !440, metadata !DIExpression()), !dbg !2232
  call void @llvm.dbg.value(metadata i32 %2, metadata !419, metadata !DIExpression()), !dbg !2096
  br i1 %191, label %192, label %198, !dbg !2231

192:                                              ; preds = %186, %192
  %193 = phi i32 [ %196, %192 ], [ %187, %186 ]
  %194 = phi i32 [ %195, %192 ], [ %2, %186 ]
  call void @llvm.dbg.value(metadata i32 %193, metadata !440, metadata !DIExpression()), !dbg !2232
  call void @llvm.dbg.value(metadata i32 %194, metadata !419, metadata !DIExpression()), !dbg !2096
  %195 = add i32 %194, 1, !dbg !2233
  call void @llvm.dbg.value(metadata i32 %195, metadata !419, metadata !DIExpression()), !dbg !2096
  call void %0(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %194, i32 noundef %3) #26, !dbg !2236, !callees !1658
  %196 = add nuw i32 %193, 1, !dbg !2237
  call void @llvm.dbg.value(metadata i32 %196, metadata !440, metadata !DIExpression()), !dbg !2232
  %197 = icmp eq i32 %196, %172, !dbg !2238
  br i1 %197, label %198, label %192, !dbg !2239, !llvm.loop !2240

198:                                              ; preds = %192, %186
  %199 = phi i32 [ %2, %186 ], [ %195, %192 ]
  call void @llvm.dbg.value(metadata i32 %199, metadata !419, metadata !DIExpression()), !dbg !2096
  call void @llvm.dbg.value(metadata i32 0, metadata !444, metadata !DIExpression()), !dbg !2242
  %200 = icmp eq i32 %187, 0, !dbg !2243
  br i1 %200, label %201, label %206, !dbg !2245

201:                                              ; preds = %206, %198
  %202 = phi i32 [ %199, %198 ], [ %213, %206 ]
  %203 = sub i32 %202, %2
  %204 = icmp ult i32 %203, %172
  %205 = select i1 %145, i1 %204, i1 false, !dbg !2246
  call void @llvm.dbg.value(metadata i32 %202, metadata !419, metadata !DIExpression()), !dbg !2096
  br i1 %205, label %216, label %221, !dbg !2246

206:                                              ; preds = %198, %206
  %207 = phi i32 [ %214, %206 ], [ 0, %198 ]
  %208 = phi i32 [ %213, %206 ], [ %199, %198 ]
  call void @llvm.dbg.value(metadata i32 %207, metadata !444, metadata !DIExpression()), !dbg !2242
  call void @llvm.dbg.value(metadata i32 %208, metadata !419, metadata !DIExpression()), !dbg !2096
  %209 = xor i32 %207, -1, !dbg !2247
  %210 = add i32 %187, %209, !dbg !2247
  %211 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %210, !dbg !2249
  %212 = load i8, i8* %211, align 1, !dbg !2249, !tbaa !1653
  %213 = add i32 %208, 1, !dbg !2250
  call void @llvm.dbg.value(metadata i32 %213, metadata !419, metadata !DIExpression()), !dbg !2096
  call void %0(i8 noundef zeroext %212, i8* noundef %1, i32 noundef %208, i32 noundef %3) #26, !dbg !2251, !callees !1658
  %214 = add nuw i32 %207, 1, !dbg !2252
  call void @llvm.dbg.value(metadata i32 %214, metadata !444, metadata !DIExpression()), !dbg !2242
  %215 = icmp eq i32 %214, %187, !dbg !2243
  br i1 %215, label %201, label %206, !dbg !2245, !llvm.loop !2253

216:                                              ; preds = %201, %216
  %217 = phi i32 [ %218, %216 ], [ %202, %201 ]
  call void @llvm.dbg.value(metadata i32 %217, metadata !419, metadata !DIExpression()), !dbg !2096
  %218 = add i32 %217, 1, !dbg !2255
  call void @llvm.dbg.value(metadata i32 %218, metadata !419, metadata !DIExpression()), !dbg !2096
  call void %0(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %217, i32 noundef %3) #26, !dbg !2259, !callees !1658
  %219 = sub i32 %218, %2, !dbg !2260
  %220 = icmp ult i32 %219, %172, !dbg !2261
  br i1 %220, label %216, label %221, !dbg !2262, !llvm.loop !2263

221:                                              ; preds = %216, %68, %201, %13
  %222 = phi i32 [ %16, %13 ], [ 0, %68 ], [ %202, %201 ], [ %218, %216 ], !dbg !2096
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #26, !dbg !2265
  ret i32 %222, !dbg !2265
}

; Function Attrs: nofree noinline norecurse nosync nounwind readonly
define internal fastcc i32 @_strnlen_s(i8* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !2266 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2270, metadata !DIExpression()), !dbg !2273
  call void @llvm.dbg.value(metadata i32 %1, metadata !2271, metadata !DIExpression()), !dbg !2273
  call void @llvm.dbg.value(metadata i8* %0, metadata !2272, metadata !DIExpression()), !dbg !2273
  %3 = load i8, i8* %0, align 1, !dbg !2274, !tbaa !1653
  %4 = icmp eq i8 %3, 0, !dbg !2274
  %5 = icmp eq i32 %1, 0, !dbg !2277
  %6 = or i1 %4, %5, !dbg !2277
  call void @llvm.dbg.value(metadata i32 %1, metadata !2271, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2273
  br i1 %6, label %16, label %7, !dbg !2277

7:                                                ; preds = %2, %7
  %8 = phi i8* [ %11, %7 ], [ %0, %2 ]
  %9 = phi i32 [ %10, %7 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %8, metadata !2272, metadata !DIExpression()), !dbg !2273
  call void @llvm.dbg.value(metadata i32 %9, metadata !2271, metadata !DIExpression()), !dbg !2273
  %10 = add i32 %9, -1, !dbg !2278
  call void @llvm.dbg.value(metadata i32 %10, metadata !2271, metadata !DIExpression()), !dbg !2273
  %11 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !2279
  call void @llvm.dbg.value(metadata i8* %11, metadata !2272, metadata !DIExpression()), !dbg !2273
  %12 = load i8, i8* %11, align 1, !dbg !2274, !tbaa !1653
  %13 = icmp eq i8 %12, 0, !dbg !2274
  %14 = icmp eq i32 %10, 0, !dbg !2277
  %15 = select i1 %13, i1 true, i1 %14, !dbg !2277
  call void @llvm.dbg.value(metadata i32 %10, metadata !2271, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2273
  br i1 %15, label %16, label %7, !dbg !2277, !llvm.loop !2280

16:                                               ; preds = %7, %2
  %17 = phi i8* [ %0, %2 ], [ %11, %7 ], !dbg !2283
  %18 = ptrtoint i8* %17 to i32, !dbg !2284
  %19 = ptrtoint i8* %0 to i32, !dbg !2284
  %20 = sub i32 %18, %19, !dbg !2284
  ret i32 %20, !dbg !2285
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #1

; Function Attrs: noinline nounwind
define internal fastcc i32 @_ntoa_format(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* nocapture noundef %4, i32 noundef %5, i1 noundef zeroext %6, i32 noundef %7, i32 noundef %8, i32 noundef %9, i32 noundef %10) unnamed_addr #3 !dbg !2286 {
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !2290, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.value(metadata i8* %1, metadata !2291, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.value(metadata i32 %2, metadata !2292, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.value(metadata i32 %3, metadata !2293, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.value(metadata i8* %4, metadata !2294, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.value(metadata i32 %5, metadata !2295, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.value(metadata i1 %6, metadata !2296, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2308
  call void @llvm.dbg.value(metadata i32 %7, metadata !2297, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.value(metadata i32 %8, metadata !2298, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.value(metadata i32 %9, metadata !2299, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.value(metadata i32 %10, metadata !2300, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.value(metadata i32 %2, metadata !2301, metadata !DIExpression()), !dbg !2308
  %12 = and i32 %10, 2, !dbg !2309
  %13 = icmp eq i32 %12, 0, !dbg !2309
  br i1 %13, label %14, label %55, !dbg !2311

14:                                               ; preds = %11
  %15 = icmp eq i32 %9, 0, !dbg !2312
  br i1 %15, label %25, label %16, !dbg !2315

16:                                               ; preds = %14
  %17 = and i32 %10, 1, !dbg !2316
  %18 = icmp eq i32 %17, 0, !dbg !2316
  br i1 %18, label %25, label %19, !dbg !2317

19:                                               ; preds = %16
  %20 = and i32 %10, 12
  %21 = icmp ne i32 %20, 0
  %22 = or i1 %21, %6, !dbg !2318
  %23 = sext i1 %22 to i32, !dbg !2318
  %24 = add i32 %23, %9, !dbg !2318
  br label %25, !dbg !2318

25:                                               ; preds = %19, %16, %14
  %26 = phi i32 [ %9, %16 ], [ 0, %14 ], [ %24, %19 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !2299, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.value(metadata i32 %5, metadata !2295, metadata !DIExpression()), !dbg !2308
  %27 = icmp ult i32 %5, %8, !dbg !2319
  %28 = icmp ult i32 %5, 32, !dbg !2320
  %29 = and i1 %27, %28, !dbg !2320
  br i1 %29, label %30, label %40, !dbg !2321

30:                                               ; preds = %25
  %31 = getelementptr i8, i8* %4, i32 %5, !dbg !2321
  %32 = xor i32 %5, -1, !dbg !2321
  %33 = add i32 %32, %8, !dbg !2321
  %34 = sub i32 31, %5, !dbg !2321
  %35 = call i32 @llvm.umin.i32(i32 %33, i32 %34), !dbg !2321
  %36 = add nuw i32 %35, 1, !dbg !2321
  call void @llvm.memset.p0i8.i32(i8* align 1 %31, i8 48, i32 %36, i1 false), !dbg !2322, !tbaa !1653
  %37 = call i32 @llvm.umin.i32(i32 %33, i32 %34), !dbg !2321
  %38 = add i32 %37, %5, !dbg !2321
  call void @llvm.dbg.value(metadata i32 undef, metadata !2295, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.value(metadata i32 undef, metadata !2295, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2308
  %39 = add i32 %38, 1, !dbg !2321
  br label %40

40:                                               ; preds = %30, %25
  %41 = phi i32 [ %5, %25 ], [ %39, %30 ]
  %42 = and i32 %10, 1
  %43 = icmp eq i32 %42, 0
  call void @llvm.dbg.value(metadata i32 %41, metadata !2295, metadata !DIExpression()), !dbg !2308
  br i1 %43, label %55, label %44, !dbg !2324

44:                                               ; preds = %40
  call void @llvm.dbg.value(metadata i32 %41, metadata !2295, metadata !DIExpression()), !dbg !2308
  %45 = icmp ult i32 %41, %26, !dbg !2325
  %46 = icmp ult i32 %41, 32
  %47 = and i1 %45, %46, !dbg !2326
  br i1 %47, label %48, label %55, !dbg !2326

48:                                               ; preds = %44, %48
  %49 = phi i32 [ %50, %48 ], [ %41, %44 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !2295, metadata !DIExpression()), !dbg !2308
  %50 = add i32 %49, 1, !dbg !2327
  call void @llvm.dbg.value(metadata i32 %50, metadata !2295, metadata !DIExpression()), !dbg !2308
  %51 = getelementptr inbounds i8, i8* %4, i32 %49, !dbg !2329
  store i8 48, i8* %51, align 1, !dbg !2330, !tbaa !1653
  %52 = icmp ult i32 %50, %26, !dbg !2325
  %53 = icmp ult i32 %50, 32
  %54 = and i1 %52, %53, !dbg !2326
  br i1 %54, label %48, label %55, !dbg !2326, !llvm.loop !2331

55:                                               ; preds = %48, %44, %40, %11
  %56 = phi i32 [ %9, %11 ], [ %26, %40 ], [ %26, %44 ], [ %26, %48 ]
  %57 = phi i32 [ %5, %11 ], [ %41, %40 ], [ %41, %44 ], [ %50, %48 ]
  call void @llvm.dbg.value(metadata i32 %57, metadata !2295, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.value(metadata i32 %56, metadata !2299, metadata !DIExpression()), !dbg !2308
  %58 = and i32 %10, 16, !dbg !2334
  %59 = icmp eq i32 %58, 0, !dbg !2334
  br i1 %59, label %101, label %60, !dbg !2336

60:                                               ; preds = %55
  %61 = and i32 %10, 1024, !dbg !2337
  %62 = icmp eq i32 %61, 0, !dbg !2337
  %63 = icmp ne i32 %57, 0
  %64 = select i1 %62, i1 %63, i1 false, !dbg !2340
  br i1 %64, label %65, label %76, !dbg !2340

65:                                               ; preds = %60
  %66 = icmp eq i32 %57, %8, !dbg !2341
  %67 = icmp eq i32 %57, %56
  %68 = or i1 %66, %67, !dbg !2342
  br i1 %68, label %69, label %76, !dbg !2342

69:                                               ; preds = %65
  %70 = add i32 %57, -1, !dbg !2343
  call void @llvm.dbg.value(metadata i32 %70, metadata !2295, metadata !DIExpression()), !dbg !2308
  %71 = icmp ne i32 %70, 0, !dbg !2345
  %72 = icmp eq i32 %7, 16
  %73 = and i1 %72, %71, !dbg !2347
  %74 = add i32 %57, -2
  %75 = select i1 %73, i32 %74, i32 %70, !dbg !2347
  br label %76, !dbg !2347

76:                                               ; preds = %69, %65, %60
  %77 = phi i32 [ %57, %60 ], [ %57, %65 ], [ %75, %69 ]
  call void @llvm.dbg.value(metadata i32 %77, metadata !2295, metadata !DIExpression()), !dbg !2308
  %78 = icmp eq i32 %7, 16, !dbg !2348
  br i1 %78, label %79, label %87, !dbg !2350

79:                                               ; preds = %76
  %80 = and i32 %10, 32, !dbg !2351
  %81 = icmp eq i32 %80, 0, !dbg !2351
  %82 = icmp ult i32 %77, 32
  %83 = select i1 %81, i1 %82, i1 false, !dbg !2352
  br i1 %83, label %91, label %84, !dbg !2352

84:                                               ; preds = %79
  %85 = icmp ne i32 %80, 0, !dbg !2353
  %86 = select i1 %85, i1 %82, i1 false, !dbg !2355
  br i1 %86, label %91, label %87, !dbg !2355

87:                                               ; preds = %76, %84
  %88 = icmp eq i32 %7, 2, !dbg !2356
  %89 = icmp ult i32 %77, 32
  %90 = select i1 %88, i1 %89, i1 false, !dbg !2358
  br i1 %90, label %91, label %95, !dbg !2358

91:                                               ; preds = %87, %84, %79
  %92 = phi i8 [ 120, %79 ], [ 88, %84 ], [ 98, %87 ]
  %93 = add i32 %77, 1, !dbg !2359
  %94 = getelementptr inbounds i8, i8* %4, i32 %77, !dbg !2359
  store i8 %92, i8* %94, align 1, !dbg !2359, !tbaa !1653
  br label %95, !dbg !2360

95:                                               ; preds = %91, %87
  %96 = phi i32 [ %77, %87 ], [ %93, %91 ], !dbg !2362
  call void @llvm.dbg.value(metadata i32 %96, metadata !2295, metadata !DIExpression()), !dbg !2308
  %97 = icmp ult i32 %96, 32, !dbg !2360
  br i1 %97, label %98, label %101, !dbg !2363

98:                                               ; preds = %95
  %99 = add i32 %96, 1, !dbg !2364
  call void @llvm.dbg.value(metadata i32 %99, metadata !2295, metadata !DIExpression()), !dbg !2308
  %100 = getelementptr inbounds i8, i8* %4, i32 %96, !dbg !2366
  store i8 48, i8* %100, align 1, !dbg !2367, !tbaa !1653
  br label %101, !dbg !2368

101:                                              ; preds = %95, %98, %55
  %102 = phi i32 [ %99, %98 ], [ %96, %95 ], [ %57, %55 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !2295, metadata !DIExpression()), !dbg !2308
  %103 = icmp ult i32 %102, 32, !dbg !2369
  br i1 %103, label %104, label %115, !dbg !2371

104:                                              ; preds = %101
  br i1 %6, label %111, label %105, !dbg !2372

105:                                              ; preds = %104
  %106 = and i32 %10, 4, !dbg !2374
  %107 = icmp eq i32 %106, 0, !dbg !2374
  br i1 %107, label %108, label %111, !dbg !2377

108:                                              ; preds = %105
  %109 = and i32 %10, 8, !dbg !2378
  %110 = icmp eq i32 %109, 0, !dbg !2378
  br i1 %110, label %115, label %111, !dbg !2380

111:                                              ; preds = %108, %105, %104
  %112 = phi i8 [ 45, %104 ], [ 43, %105 ], [ 32, %108 ]
  %113 = add i32 %102, 1, !dbg !2381
  %114 = getelementptr inbounds i8, i8* %4, i32 %102, !dbg !2381
  store i8 %112, i8* %114, align 1, !dbg !2381, !tbaa !1653
  br label %115, !dbg !2382

115:                                              ; preds = %111, %108, %101
  %116 = phi i32 [ %102, %108 ], [ %102, %101 ], [ %113, %111 ], !dbg !2308
  call void @llvm.dbg.value(metadata i32 %116, metadata !2295, metadata !DIExpression()), !dbg !2308
  %117 = and i32 %10, 3, !dbg !2382
  %118 = icmp eq i32 %117, 0, !dbg !2382
  %119 = icmp ult i32 %116, %56
  %120 = select i1 %118, i1 %119, i1 false, !dbg !2382
  call void @llvm.dbg.value(metadata i32 %116, metadata !2302, metadata !DIExpression()), !dbg !2383
  call void @llvm.dbg.value(metadata i32 %2, metadata !2292, metadata !DIExpression()), !dbg !2308
  br i1 %120, label %121, label %127, !dbg !2382

121:                                              ; preds = %115, %121
  %122 = phi i32 [ %125, %121 ], [ %116, %115 ]
  %123 = phi i32 [ %124, %121 ], [ %2, %115 ]
  call void @llvm.dbg.value(metadata i32 %122, metadata !2302, metadata !DIExpression()), !dbg !2383
  call void @llvm.dbg.value(metadata i32 %123, metadata !2292, metadata !DIExpression()), !dbg !2308
  %124 = add i32 %123, 1, !dbg !2384
  call void @llvm.dbg.value(metadata i32 %124, metadata !2292, metadata !DIExpression()), !dbg !2308
  call void %0(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %123, i32 noundef %3) #26, !dbg !2387, !callees !1658
  %125 = add nuw i32 %122, 1, !dbg !2388
  call void @llvm.dbg.value(metadata i32 %125, metadata !2302, metadata !DIExpression()), !dbg !2383
  %126 = icmp eq i32 %125, %56, !dbg !2389
  br i1 %126, label %127, label %121, !dbg !2390, !llvm.loop !2391

127:                                              ; preds = %121, %115
  %128 = phi i32 [ %2, %115 ], [ %124, %121 ]
  call void @llvm.dbg.value(metadata i32 %128, metadata !2292, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.value(metadata i32 0, metadata !2306, metadata !DIExpression()), !dbg !2393
  %129 = icmp eq i32 %116, 0, !dbg !2394
  br i1 %129, label %130, label %136, !dbg !2396

130:                                              ; preds = %136, %127
  %131 = phi i32 [ %128, %127 ], [ %143, %136 ]
  %132 = xor i1 %13, true, !dbg !2397
  %133 = sub i32 %131, %2
  %134 = icmp ult i32 %133, %56
  %135 = select i1 %132, i1 %134, i1 false, !dbg !2397
  call void @llvm.dbg.value(metadata i32 %131, metadata !2292, metadata !DIExpression()), !dbg !2308
  br i1 %135, label %146, label %151, !dbg !2397

136:                                              ; preds = %127, %136
  %137 = phi i32 [ %144, %136 ], [ 0, %127 ]
  %138 = phi i32 [ %143, %136 ], [ %128, %127 ]
  call void @llvm.dbg.value(metadata i32 %137, metadata !2306, metadata !DIExpression()), !dbg !2393
  call void @llvm.dbg.value(metadata i32 %138, metadata !2292, metadata !DIExpression()), !dbg !2308
  %139 = xor i32 %137, -1, !dbg !2398
  %140 = add i32 %116, %139, !dbg !2398
  %141 = getelementptr inbounds i8, i8* %4, i32 %140, !dbg !2400
  %142 = load i8, i8* %141, align 1, !dbg !2400, !tbaa !1653
  %143 = add i32 %138, 1, !dbg !2401
  call void @llvm.dbg.value(metadata i32 %143, metadata !2292, metadata !DIExpression()), !dbg !2308
  call void %0(i8 noundef zeroext %142, i8* noundef %1, i32 noundef %138, i32 noundef %3) #26, !dbg !2402, !callees !1658
  %144 = add nuw i32 %137, 1, !dbg !2403
  call void @llvm.dbg.value(metadata i32 %144, metadata !2306, metadata !DIExpression()), !dbg !2393
  %145 = icmp eq i32 %144, %116, !dbg !2394
  br i1 %145, label %130, label %136, !dbg !2396, !llvm.loop !2404

146:                                              ; preds = %130, %146
  %147 = phi i32 [ %148, %146 ], [ %131, %130 ]
  call void @llvm.dbg.value(metadata i32 %147, metadata !2292, metadata !DIExpression()), !dbg !2308
  %148 = add i32 %147, 1, !dbg !2406
  call void @llvm.dbg.value(metadata i32 %148, metadata !2292, metadata !DIExpression()), !dbg !2308
  call void %0(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %147, i32 noundef %3) #26, !dbg !2410, !callees !1658
  %149 = sub i32 %148, %2, !dbg !2411
  %150 = icmp ult i32 %149, %56, !dbg !2412
  br i1 %150, label %146, label %151, !dbg !2413, !llvm.loop !2414

151:                                              ; preds = %146, %130
  %152 = phi i32 [ %131, %130 ], [ %148, %146 ]
  call void @llvm.dbg.value(metadata i32 %152, metadata !2292, metadata !DIExpression()), !dbg !2308
  ret i32 %152, !dbg !2416
}

; Function Attrs: noinline nounwind
define dso_local i32 @sprintf_(i8* noundef %0, i8* noundef %1, ...) local_unnamed_addr #3 !dbg !2417 {
  %3 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !2421, metadata !DIExpression()), !dbg !2425
  call void @llvm.dbg.value(metadata i8* %1, metadata !2422, metadata !DIExpression()), !dbg !2425
  %4 = bitcast %struct.__va_list* %3 to i8*, !dbg !2426
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #26, !dbg !2426
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !2423, metadata !DIExpression()), !dbg !2427
  call void @llvm.va_start(i8* nonnull %4), !dbg !2428
  %5 = bitcast %struct.__va_list* %3 to i32*, !dbg !2429
  %6 = load i32, i32* %5, align 4, !dbg !2429
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !2429
  %8 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_buffer, i8* noundef %0, i32 noundef -1, i8* noundef %1, [1 x i32] %7), !dbg !2429
  call void @llvm.dbg.value(metadata i32 %8, metadata !2424, metadata !DIExpression()), !dbg !2425
  call void @llvm.va_end(i8* %4), !dbg !2430
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #26, !dbg !2431
  ret i32 %8, !dbg !2432
}

; Function Attrs: noinline nounwind
define dso_local i32 @snprintf_(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #3 !dbg !2433 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !2437, metadata !DIExpression()), !dbg !2442
  call void @llvm.dbg.value(metadata i32 %1, metadata !2438, metadata !DIExpression()), !dbg !2442
  call void @llvm.dbg.value(metadata i8* %2, metadata !2439, metadata !DIExpression()), !dbg !2442
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !2443
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !2443
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !2440, metadata !DIExpression()), !dbg !2444
  call void @llvm.va_start(i8* nonnull %5), !dbg !2445
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !2446
  %7 = load i32, i32* %6, align 4, !dbg !2446
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !2446
  %9 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_buffer, i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8), !dbg !2446
  call void @llvm.dbg.value(metadata i32 %9, metadata !2441, metadata !DIExpression()), !dbg !2442
  call void @llvm.va_end(i8* %5), !dbg !2447
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !2448
  ret i32 %9, !dbg !2449
}

; Function Attrs: noinline nounwind
define dso_local i32 @vsnprintf_(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #3 !dbg !2450 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !2457, metadata !DIExpression()), !dbg !2458
  call void @llvm.dbg.value(metadata i8* %0, metadata !2454, metadata !DIExpression()), !dbg !2458
  call void @llvm.dbg.value(metadata i32 %1, metadata !2455, metadata !DIExpression()), !dbg !2458
  call void @llvm.dbg.value(metadata i8* %2, metadata !2456, metadata !DIExpression()), !dbg !2458
  %5 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_buffer, i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3), !dbg !2459
  ret i32 %5, !dbg !2460
}

; Function Attrs: noinline nounwind
define dso_local i32 @fctprintf(void (i8, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, ...) local_unnamed_addr #3 !dbg !2461 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca %struct.out_fct_wrap_type, align 4
  call void @llvm.dbg.value(metadata void (i8, i8*)* %0, metadata !2465, metadata !DIExpression()), !dbg !2472
  call void @llvm.dbg.value(metadata i8* %1, metadata !2466, metadata !DIExpression()), !dbg !2472
  call void @llvm.dbg.value(metadata i8* %2, metadata !2467, metadata !DIExpression()), !dbg !2472
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !2473
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #26, !dbg !2473
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !2468, metadata !DIExpression()), !dbg !2474
  call void @llvm.va_start(i8* nonnull %6), !dbg !2475
  %7 = bitcast %struct.out_fct_wrap_type* %5 to i8*, !dbg !2476
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #26, !dbg !2476
  call void @llvm.dbg.declare(metadata %struct.out_fct_wrap_type* %5, metadata !2469, metadata !DIExpression()), !dbg !2477
  %8 = getelementptr inbounds %struct.out_fct_wrap_type, %struct.out_fct_wrap_type* %5, i32 0, i32 0, !dbg !2478
  store void (i8, i8*)* %0, void (i8, i8*)** %8, align 4, !dbg !2478, !tbaa !1970
  %9 = getelementptr inbounds %struct.out_fct_wrap_type, %struct.out_fct_wrap_type* %5, i32 0, i32 1, !dbg !2478
  store i8* %1, i8** %9, align 4, !dbg !2478, !tbaa !1973
  %10 = bitcast %struct.__va_list* %4 to i32*, !dbg !2479
  %11 = load i32, i32* %10, align 4, !dbg !2479
  %12 = insertvalue [1 x i32] poison, i32 %11, 0, !dbg !2479
  %13 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_fct, i8* noundef nonnull %7, i32 noundef -1, i8* noundef %2, [1 x i32] %12), !dbg !2479
  call void @llvm.dbg.value(metadata i32 %13, metadata !2471, metadata !DIExpression()), !dbg !2472
  call void @llvm.va_end(i8* %6), !dbg !2480
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #26, !dbg !2481
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #26, !dbg !2481
  ret i32 %13, !dbg !2482
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @SystemInit() local_unnamed_addr #14 !dbg !2483 {
  %1 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2484, !tbaa !2485
  %2 = or i32 %1, 1, !dbg !2484
  store volatile i32 %2, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2484, !tbaa !2485
  %3 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2488, !tbaa !2489
  %4 = and i32 %3, -117506048, !dbg !2488
  store volatile i32 %4, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2488, !tbaa !2489
  %5 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2490, !tbaa !2485
  %6 = and i32 %5, -17367041, !dbg !2490
  store volatile i32 %6, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2490, !tbaa !2485
  %7 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2491, !tbaa !2485
  %8 = and i32 %7, -262145, !dbg !2491
  store volatile i32 %8, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2491, !tbaa !2485
  %9 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2492, !tbaa !2489
  %10 = and i32 %9, -8323073, !dbg !2492
  store volatile i32 %10, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2492, !tbaa !2489
  store volatile i32 10420224, i32* inttoptr (i32 1073877000 to i32*), align 8, !dbg !2493, !tbaa !2494
  store volatile i32 134217728, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !2495, !tbaa !2496
  ret void, !dbg !2498
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !2499 {
  call void @llvm.dbg.value(metadata i32 0, metadata !2501, metadata !DIExpression()), !dbg !2504
  call void @llvm.dbg.value(metadata i32 0, metadata !2502, metadata !DIExpression()), !dbg !2504
  call void @llvm.dbg.value(metadata i32 0, metadata !2503, metadata !DIExpression()), !dbg !2504
  %1 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2505, !tbaa !2489
  %2 = and i32 %1, 12, !dbg !2506
  call void @llvm.dbg.value(metadata i32 %2, metadata !2501, metadata !DIExpression()), !dbg !2504
  %3 = icmp eq i32 %2, 8, !dbg !2507
  br i1 %3, label %4, label %22, !dbg !2507

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2508, !tbaa !2489
  call void @llvm.dbg.value(metadata i32 %5, metadata !2502, metadata !DIExpression(DW_OP_constu, 3932160, DW_OP_and, DW_OP_stack_value)), !dbg !2504
  %6 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2510, !tbaa !2489
  %7 = and i32 %6, 65536, !dbg !2511
  call void @llvm.dbg.value(metadata i32 %7, metadata !2503, metadata !DIExpression()), !dbg !2504
  %8 = lshr i32 %5, 18, !dbg !2512
  %9 = and i32 %8, 15, !dbg !2512
  %10 = add nuw nsw i32 %9, 2, !dbg !2513
  call void @llvm.dbg.value(metadata i32 %10, metadata !2502, metadata !DIExpression()), !dbg !2504
  %11 = icmp eq i32 %7, 0, !dbg !2514
  br i1 %11, label %12, label %14, !dbg !2516

12:                                               ; preds = %4
  %13 = mul nuw nsw i32 %10, 4000000, !dbg !2517
  br label %22, !dbg !2519

14:                                               ; preds = %4
  %15 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2520, !tbaa !2489
  %16 = and i32 %15, 131072, !dbg !2523
  %17 = icmp eq i32 %16, 0, !dbg !2524
  br i1 %17, label %20, label %18, !dbg !2525

18:                                               ; preds = %14
  %19 = mul nuw nsw i32 %10, 4000000, !dbg !2526
  br label %22, !dbg !2528

20:                                               ; preds = %14
  %21 = mul nuw nsw i32 %10, 8000000, !dbg !2529
  br label %22

22:                                               ; preds = %0, %12, %20, %18
  %23 = phi i32 [ %13, %12 ], [ %21, %20 ], [ %19, %18 ], [ 8000000, %0 ]
  store i32 %23, i32* @SystemCoreClock, align 4, !dbg !2531, !tbaa !2532
  %24 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2533, !tbaa !2489
  %25 = lshr i32 %24, 4, !dbg !2534
  %26 = and i32 %25, 15, !dbg !2534
  %27 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %26, !dbg !2535
  %28 = load i8, i8* %27, align 1, !dbg !2535, !tbaa !1653
  %29 = zext i8 %28 to i32, !dbg !2535
  call void @llvm.dbg.value(metadata i32 %29, metadata !2501, metadata !DIExpression()), !dbg !2504
  %30 = load i32, i32* @SystemCoreClock, align 4, !dbg !2536, !tbaa !2532
  %31 = lshr i32 %30, %29, !dbg !2536
  store i32 %31, i32* @SystemCoreClock, align 4, !dbg !2536, !tbaa !2532
  ret void, !dbg !2537
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #3 !dbg !2538 {
  %1 = call i32 @HAL_GetTick() #26, !dbg !2544
  call void @llvm.dbg.value(metadata i32 %1, metadata !2543, metadata !DIExpression()), !dbg !2545
  %2 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2546, !tbaa !2485
  %3 = or i32 %2, 1, !dbg !2546
  store volatile i32 %3, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2546, !tbaa !2485
  br label %4, !dbg !2547

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2548, !tbaa !2485
  %6 = and i32 %5, 2, !dbg !2548
  %7 = icmp eq i32 %6, 0, !dbg !2549
  br i1 %7, label %8, label %12, !dbg !2547

8:                                                ; preds = %4
  %9 = call i32 @HAL_GetTick() #26, !dbg !2550
  %10 = sub i32 %9, %1, !dbg !2553
  %11 = icmp ugt i32 %10, 2, !dbg !2554
  br i1 %11, label %58, label %4, !dbg !2555, !llvm.loop !2556

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2558, !tbaa !2485
  %14 = and i32 %13, -249, !dbg !2558
  %15 = or i32 %14, 128, !dbg !2558
  store volatile i32 %15, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2558, !tbaa !2485
  %16 = call i32 @HAL_GetTick() #26, !dbg !2559
  call void @llvm.dbg.value(metadata i32 %16, metadata !2543, metadata !DIExpression()), !dbg !2545
  store volatile i32 0, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2560, !tbaa !2489
  br label %17, !dbg !2561

17:                                               ; preds = %21, %12
  %18 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2562, !tbaa !2489
  %19 = and i32 %18, 12, !dbg !2562
  %20 = icmp eq i32 %19, 0, !dbg !2563
  br i1 %20, label %25, label %21, !dbg !2561

21:                                               ; preds = %17
  %22 = call i32 @HAL_GetTick() #26, !dbg !2564
  %23 = sub i32 %22, %16, !dbg !2567
  %24 = icmp ugt i32 %23, 5000, !dbg !2568
  br i1 %24, label %58, label %17, !dbg !2569, !llvm.loop !2570

25:                                               ; preds = %17
  store i32 8000000, i32* @SystemCoreClock, align 4, !dbg !2572, !tbaa !2532
  %26 = load i32, i32* @uwTickPrio, align 4, !dbg !2573, !tbaa !2532
  %27 = call i32 @HAL_InitTick(i32 noundef %26) #26, !dbg !2575
  %28 = icmp eq i32 %27, 0, !dbg !2576
  br i1 %28, label %29, label %58, !dbg !2577

29:                                               ; preds = %25
  %30 = call i32 @HAL_GetTick() #26, !dbg !2578
  call void @llvm.dbg.value(metadata i32 %30, metadata !2543, metadata !DIExpression()), !dbg !2545
  %31 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2579, !tbaa !2485
  %32 = and i32 %31, -16777217, !dbg !2579
  store volatile i32 %32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2579, !tbaa !2485
  br label %33, !dbg !2580

33:                                               ; preds = %37, %29
  %34 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2581, !tbaa !2485
  %35 = and i32 %34, 33554432, !dbg !2581
  %36 = icmp eq i32 %35, 0, !dbg !2582
  br i1 %36, label %41, label %37, !dbg !2580

37:                                               ; preds = %33
  %38 = call i32 @HAL_GetTick() #26, !dbg !2583
  %39 = sub i32 %38, %30, !dbg !2586
  %40 = icmp ugt i32 %39, 2, !dbg !2587
  br i1 %40, label %58, label %33, !dbg !2588, !llvm.loop !2589

41:                                               ; preds = %33
  store volatile i32 0, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2591, !tbaa !2489
  %42 = call i32 @HAL_GetTick() #26, !dbg !2592
  call void @llvm.dbg.value(metadata i32 %42, metadata !2543, metadata !DIExpression()), !dbg !2545
  %43 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2593, !tbaa !2485
  %44 = and i32 %43, -589825, !dbg !2593
  store volatile i32 %44, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2593, !tbaa !2485
  br label %45, !dbg !2594

45:                                               ; preds = %49, %41
  %46 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2595, !tbaa !2485
  %47 = and i32 %46, 131072, !dbg !2595
  %48 = icmp eq i32 %47, 0, !dbg !2596
  br i1 %48, label %53, label %49, !dbg !2594

49:                                               ; preds = %45
  %50 = call i32 @HAL_GetTick() #26, !dbg !2597
  %51 = sub i32 %50, %42, !dbg !2600
  %52 = icmp ugt i32 %51, 100, !dbg !2601
  br i1 %52, label %58, label %45, !dbg !2602, !llvm.loop !2603

53:                                               ; preds = %45
  %54 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2605, !tbaa !2485
  %55 = and i32 %54, -262145, !dbg !2605
  store volatile i32 %55, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2605, !tbaa !2485
  %56 = load volatile i32, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !2606, !tbaa !2607
  %57 = or i32 %56, 16777216, !dbg !2606
  store volatile i32 %57, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !2606, !tbaa !2607
  store volatile i32 0, i32* inttoptr (i32 1073877000 to i32*), align 8, !dbg !2608, !tbaa !2494
  br label %58, !dbg !2609

58:                                               ; preds = %8, %21, %37, %49, %25, %53
  %59 = phi i32 [ 0, %53 ], [ 1, %25 ], [ 3, %49 ], [ 3, %37 ], [ 3, %21 ], [ 3, %8 ], !dbg !2545
  ret i32 %59, !dbg !2610
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #3 !dbg !2611 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !2633, metadata !DIExpression()), !dbg !2644
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !2645
  br i1 %3, label %298, label %4, !dbg !2647

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !2648
  %6 = load i32, i32* %5, align 4, !dbg !2648, !tbaa !2650
  %7 = and i32 %6, 1, !dbg !2653
  %8 = icmp eq i32 %7, 0, !dbg !2654
  br i1 %8, label %70, label %9, !dbg !2655

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2656, !tbaa !2489
  %11 = and i32 %10, 12, !dbg !2656
  %12 = icmp eq i32 %11, 4, !dbg !2659
  br i1 %12, label %21, label %13, !dbg !2660

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2661, !tbaa !2489
  %15 = and i32 %14, 12, !dbg !2661
  %16 = icmp eq i32 %15, 8, !dbg !2662
  br i1 %16, label %17, label %29, !dbg !2663

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2664, !tbaa !2489
  %19 = and i32 %18, 65536, !dbg !2664
  %20 = icmp eq i32 %19, 0, !dbg !2665
  br i1 %20, label %29, label %21, !dbg !2666

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2667, !tbaa !2485
  %23 = and i32 %22, 131072, !dbg !2667
  %24 = icmp eq i32 %23, 0, !dbg !2670
  br i1 %24, label %70, label %25, !dbg !2671

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !2672
  %27 = load i32, i32* %26, align 4, !dbg !2672, !tbaa !2673
  %28 = icmp eq i32 %27, 0, !dbg !2674
  br i1 %28, label %298, label %70, !dbg !2675

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !2676
  %31 = load i32, i32* %30, align 4, !dbg !2676, !tbaa !2673
  switch i32 %31, label %45 [
    i32 65536, label %32
    i32 0, label %35
    i32 327680, label %40
  ], !dbg !2680

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2681, !tbaa !2485
  %34 = or i32 %33, 65536, !dbg !2681
  br label %50, !dbg !2681

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2683, !tbaa !2485
  %37 = and i32 %36, -65537, !dbg !2683
  store volatile i32 %37, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2683, !tbaa !2485
  %38 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2683, !tbaa !2485
  %39 = and i32 %38, -262145, !dbg !2683
  br label %50, !dbg !2683

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2686, !tbaa !2485
  %42 = or i32 %41, 262144, !dbg !2686
  store volatile i32 %42, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2686, !tbaa !2485
  %43 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2686, !tbaa !2485
  %44 = or i32 %43, 65536, !dbg !2686
  br label %50, !dbg !2686

45:                                               ; preds = %29
  %46 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2689, !tbaa !2485
  %47 = and i32 %46, -65537, !dbg !2689
  store volatile i32 %47, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2689, !tbaa !2485
  %48 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2689, !tbaa !2485
  %49 = and i32 %48, -262145, !dbg !2689
  br label %50

50:                                               ; preds = %35, %45, %40, %32
  %51 = phi i32 [ %39, %35 ], [ %49, %45 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %51, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2691, !tbaa !2485
  %52 = icmp eq i32 %31, 0, !dbg !2692
  %53 = call i32 @HAL_GetTick() #26, !dbg !2694
  call void @llvm.dbg.value(metadata i32 %53, metadata !2634, metadata !DIExpression()), !dbg !2644
  call void @llvm.dbg.value(metadata i32 %53, metadata !2634, metadata !DIExpression()), !dbg !2644
  br i1 %52, label %62, label %54, !dbg !2695

54:                                               ; preds = %50, %58
  %55 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2696, !tbaa !2485
  %56 = and i32 %55, 131072, !dbg !2696
  %57 = icmp eq i32 %56, 0, !dbg !2698
  br i1 %57, label %58, label %70, !dbg !2699

58:                                               ; preds = %54
  %59 = call i32 @HAL_GetTick() #26, !dbg !2700
  %60 = sub i32 %59, %53, !dbg !2703
  %61 = icmp ugt i32 %60, 100, !dbg !2704
  br i1 %61, label %298, label %54, !dbg !2705, !llvm.loop !2706

62:                                               ; preds = %50, %66
  %63 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2708, !tbaa !2485
  %64 = and i32 %63, 131072, !dbg !2708
  %65 = icmp eq i32 %64, 0, !dbg !2710
  br i1 %65, label %70, label %66, !dbg !2711

66:                                               ; preds = %62
  %67 = call i32 @HAL_GetTick() #26, !dbg !2712
  %68 = sub i32 %67, %53, !dbg !2715
  %69 = icmp ugt i32 %68, 100, !dbg !2716
  br i1 %69, label %298, label %62, !dbg !2717, !llvm.loop !2718

70:                                               ; preds = %54, %62, %25, %21, %4
  %71 = load i32, i32* %5, align 4, !dbg !2720, !tbaa !2650
  %72 = and i32 %71, 2, !dbg !2722
  %73 = icmp eq i32 %72, 0, !dbg !2723
  br i1 %73, label %125, label %74, !dbg !2724

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2725, !tbaa !2489
  %76 = and i32 %75, 12, !dbg !2725
  %77 = icmp eq i32 %76, 0, !dbg !2728
  br i1 %77, label %86, label %78, !dbg !2729

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2730, !tbaa !2489
  %80 = and i32 %79, 12, !dbg !2730
  %81 = icmp eq i32 %80, 8, !dbg !2731
  br i1 %81, label %82, label %94, !dbg !2732

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2733, !tbaa !2489
  %84 = and i32 %83, 65536, !dbg !2733
  %85 = icmp eq i32 %84, 0, !dbg !2734
  br i1 %85, label %86, label %94, !dbg !2735

86:                                               ; preds = %82, %74
  %87 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2736, !tbaa !2485
  %88 = and i32 %87, 2, !dbg !2736
  %89 = icmp eq i32 %88, 0, !dbg !2739
  br i1 %89, label %118, label %90, !dbg !2740

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !2741
  %92 = load i32, i32* %91, align 4, !dbg !2741, !tbaa !2742
  %93 = icmp eq i32 %92, 1, !dbg !2743
  br i1 %93, label %118, label %298, !dbg !2744

94:                                               ; preds = %82, %78
  %95 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !2745
  %96 = load i32, i32* %95, align 4, !dbg !2745, !tbaa !2742
  %97 = icmp eq i32 %96, 0, !dbg !2748
  br i1 %97, label %108, label %98, !dbg !2749

98:                                               ; preds = %94
  store volatile i32 1, i32* inttoptr (i32 1111621632 to i32*), align 131072, !dbg !2750, !tbaa !2532
  %99 = call i32 @HAL_GetTick() #26, !dbg !2752
  call void @llvm.dbg.value(metadata i32 %99, metadata !2634, metadata !DIExpression()), !dbg !2644
  br label %100, !dbg !2753

100:                                              ; preds = %104, %98
  %101 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2754, !tbaa !2485
  %102 = and i32 %101, 2, !dbg !2754
  %103 = icmp eq i32 %102, 0, !dbg !2755
  br i1 %103, label %104, label %118, !dbg !2753

104:                                              ; preds = %100
  %105 = call i32 @HAL_GetTick() #26, !dbg !2756
  %106 = sub i32 %105, %99, !dbg !2759
  %107 = icmp ugt i32 %106, 2, !dbg !2760
  br i1 %107, label %298, label %100, !dbg !2761, !llvm.loop !2762

108:                                              ; preds = %94
  store volatile i32 0, i32* inttoptr (i32 1111621632 to i32*), align 131072, !dbg !2764, !tbaa !2532
  %109 = call i32 @HAL_GetTick() #26, !dbg !2766
  call void @llvm.dbg.value(metadata i32 %109, metadata !2634, metadata !DIExpression()), !dbg !2644
  br label %110, !dbg !2767

110:                                              ; preds = %114, %108
  %111 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2768, !tbaa !2485
  %112 = and i32 %111, 2, !dbg !2768
  %113 = icmp eq i32 %112, 0, !dbg !2769
  br i1 %113, label %125, label %114, !dbg !2767

114:                                              ; preds = %110
  %115 = call i32 @HAL_GetTick() #26, !dbg !2770
  %116 = sub i32 %115, %109, !dbg !2773
  %117 = icmp ugt i32 %116, 2, !dbg !2774
  br i1 %117, label %298, label %110, !dbg !2775, !llvm.loop !2776

118:                                              ; preds = %100, %86, %90
  %119 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2778, !tbaa !2485
  %120 = and i32 %119, -249, !dbg !2778
  %121 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !2778
  %122 = load i32, i32* %121, align 4, !dbg !2778, !tbaa !2779
  %123 = shl i32 %122, 3, !dbg !2778
  %124 = or i32 %123, %120, !dbg !2778
  store volatile i32 %124, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2778, !tbaa !2485
  br label %125, !dbg !2780

125:                                              ; preds = %110, %118, %70
  %126 = load i32, i32* %5, align 4, !dbg !2780, !tbaa !2650
  %127 = and i32 %126, 8, !dbg !2782
  %128 = icmp eq i32 %127, 0, !dbg !2783
  br i1 %128, label %154, label %129, !dbg !2784

129:                                              ; preds = %125
  %130 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !2785
  %131 = load i32, i32* %130, align 4, !dbg !2785, !tbaa !2788
  %132 = icmp eq i32 %131, 0, !dbg !2789
  br i1 %132, label %144, label %133, !dbg !2790

133:                                              ; preds = %129
  store volatile i32 1, i32* inttoptr (i32 1111622784 to i32*), align 128, !dbg !2791, !tbaa !2532
  %134 = call i32 @HAL_GetTick() #26, !dbg !2793
  call void @llvm.dbg.value(metadata i32 %134, metadata !2634, metadata !DIExpression()), !dbg !2644
  br label %135, !dbg !2794

135:                                              ; preds = %139, %133
  %136 = load volatile i32, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !2795, !tbaa !2607
  %137 = and i32 %136, 2, !dbg !2795
  %138 = icmp eq i32 %137, 0, !dbg !2796
  br i1 %138, label %139, label %143, !dbg !2794

139:                                              ; preds = %135
  %140 = call i32 @HAL_GetTick() #26, !dbg !2797
  %141 = sub i32 %140, %134, !dbg !2800
  %142 = icmp ugt i32 %141, 2, !dbg !2801
  br i1 %142, label %298, label %135, !dbg !2802, !llvm.loop !2803

143:                                              ; preds = %135
  call fastcc void @RCC_Delay(), !dbg !2805
  br label %154, !dbg !2806

144:                                              ; preds = %129
  store volatile i32 0, i32* inttoptr (i32 1111622784 to i32*), align 128, !dbg !2807, !tbaa !2532
  %145 = call i32 @HAL_GetTick() #26, !dbg !2809
  call void @llvm.dbg.value(metadata i32 %145, metadata !2634, metadata !DIExpression()), !dbg !2644
  br label %146, !dbg !2810

146:                                              ; preds = %150, %144
  %147 = load volatile i32, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !2811, !tbaa !2607
  %148 = and i32 %147, 2, !dbg !2811
  %149 = icmp eq i32 %148, 0, !dbg !2812
  br i1 %149, label %154, label %150, !dbg !2810

150:                                              ; preds = %146
  %151 = call i32 @HAL_GetTick() #26, !dbg !2813
  %152 = sub i32 %151, %145, !dbg !2816
  %153 = icmp ugt i32 %152, 2, !dbg !2817
  br i1 %153, label %298, label %146, !dbg !2818, !llvm.loop !2819

154:                                              ; preds = %146, %143, %125
  %155 = load i32, i32* %5, align 4, !dbg !2821, !tbaa !2650
  %156 = and i32 %155, 4, !dbg !2822
  %157 = icmp eq i32 %156, 0, !dbg !2823
  br i1 %157, label %231, label %158, !dbg !2824

158:                                              ; preds = %154
  call void @llvm.dbg.value(metadata i32 0, metadata !2636, metadata !DIExpression()), !dbg !2825
  %159 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !2826, !tbaa !2827
  %160 = and i32 %159, 268435456, !dbg !2826
  %161 = icmp eq i32 %160, 0, !dbg !2826
  br i1 %161, label %162, label %170, !dbg !2828

162:                                              ; preds = %158
  %163 = bitcast i32* %2 to i8*, !dbg !2829
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %163), !dbg !2829
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2640, metadata !DIExpression()), !dbg !2829
  %164 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !2829, !tbaa !2827
  %165 = or i32 %164, 268435456, !dbg !2829
  store volatile i32 %165, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !2829, !tbaa !2827
  %166 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !2829, !tbaa !2827
  %167 = and i32 %166, 268435456, !dbg !2829
  store volatile i32 %167, i32* %2, align 4, !dbg !2829, !tbaa !2532
  %168 = load volatile i32, i32* %2, align 4, !dbg !2829, !tbaa !2532
  %169 = bitcast i32* %2 to i8*, !dbg !2830
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %169), !dbg !2830
  call void @llvm.dbg.value(metadata i32 1, metadata !2636, metadata !DIExpression()), !dbg !2825
  br label %170, !dbg !2831

170:                                              ; preds = %162, %158
  call void @llvm.dbg.value(metadata i32 undef, metadata !2636, metadata !DIExpression()), !dbg !2825
  %171 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !2832, !tbaa !2834
  %172 = and i32 %171, 256, !dbg !2832
  %173 = icmp eq i32 %172, 0, !dbg !2832
  br i1 %173, label %174, label %186, !dbg !2836

174:                                              ; preds = %170
  %175 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !2837, !tbaa !2834
  %176 = or i32 %175, 256, !dbg !2837
  store volatile i32 %176, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !2837, !tbaa !2834
  %177 = call i32 @HAL_GetTick() #26, !dbg !2839
  call void @llvm.dbg.value(metadata i32 %177, metadata !2634, metadata !DIExpression()), !dbg !2644
  br label %178, !dbg !2840

178:                                              ; preds = %182, %174
  %179 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !2841, !tbaa !2834
  %180 = and i32 %179, 256, !dbg !2841
  %181 = icmp eq i32 %180, 0, !dbg !2841
  br i1 %181, label %182, label %186, !dbg !2840

182:                                              ; preds = %178
  %183 = call i32 @HAL_GetTick() #26, !dbg !2842
  %184 = sub i32 %183, %177, !dbg !2845
  %185 = icmp ugt i32 %184, 100, !dbg !2846
  br i1 %185, label %298, label %178, !dbg !2847, !llvm.loop !2848

186:                                              ; preds = %178, %170
  %187 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !2850
  %188 = load i32, i32* %187, align 4, !dbg !2850, !tbaa !2853
  switch i32 %188, label %202 [
    i32 1, label %189
    i32 0, label %192
    i32 5, label %197
  ], !dbg !2854

189:                                              ; preds = %186
  %190 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2855, !tbaa !2857
  %191 = or i32 %190, 1, !dbg !2855
  br label %207, !dbg !2855

192:                                              ; preds = %186
  %193 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2858, !tbaa !2857
  %194 = and i32 %193, -2, !dbg !2858
  store volatile i32 %194, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2858, !tbaa !2857
  %195 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2858, !tbaa !2857
  %196 = and i32 %195, -5, !dbg !2858
  br label %207, !dbg !2858

197:                                              ; preds = %186
  %198 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2861, !tbaa !2857
  %199 = or i32 %198, 4, !dbg !2861
  store volatile i32 %199, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2861, !tbaa !2857
  %200 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2861, !tbaa !2857
  %201 = or i32 %200, 1, !dbg !2861
  br label %207, !dbg !2861

202:                                              ; preds = %186
  %203 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2864, !tbaa !2857
  %204 = and i32 %203, -2, !dbg !2864
  store volatile i32 %204, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2864, !tbaa !2857
  %205 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2864, !tbaa !2857
  %206 = and i32 %205, -5, !dbg !2864
  br label %207

207:                                              ; preds = %192, %202, %197, %189
  %208 = phi i32 [ %196, %192 ], [ %206, %202 ], [ %201, %197 ], [ %191, %189 ]
  store volatile i32 %208, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2866, !tbaa !2857
  %209 = icmp eq i32 %188, 0, !dbg !2867
  %210 = call i32 @HAL_GetTick() #26, !dbg !2869
  call void @llvm.dbg.value(metadata i32 %210, metadata !2634, metadata !DIExpression()), !dbg !2644
  call void @llvm.dbg.value(metadata i32 %210, metadata !2634, metadata !DIExpression()), !dbg !2644
  br i1 %209, label %219, label %211, !dbg !2870

211:                                              ; preds = %207, %215
  %212 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2871, !tbaa !2857
  %213 = and i32 %212, 2, !dbg !2871
  %214 = icmp eq i32 %213, 0, !dbg !2873
  br i1 %214, label %215, label %227, !dbg !2874

215:                                              ; preds = %211
  %216 = call i32 @HAL_GetTick() #26, !dbg !2875
  %217 = sub i32 %216, %210, !dbg !2878
  %218 = icmp ugt i32 %217, 5000, !dbg !2879
  br i1 %218, label %298, label %211, !dbg !2880, !llvm.loop !2881

219:                                              ; preds = %207, %223
  %220 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2883, !tbaa !2857
  %221 = and i32 %220, 2, !dbg !2883
  %222 = icmp eq i32 %221, 0, !dbg !2885
  br i1 %222, label %227, label %223, !dbg !2886

223:                                              ; preds = %219
  %224 = call i32 @HAL_GetTick() #26, !dbg !2887
  %225 = sub i32 %224, %210, !dbg !2890
  %226 = icmp ugt i32 %225, 5000, !dbg !2891
  br i1 %226, label %298, label %219, !dbg !2892, !llvm.loop !2893

227:                                              ; preds = %211, %219
  br i1 %161, label %228, label %231, !dbg !2895

228:                                              ; preds = %227
  %229 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !2896, !tbaa !2827
  %230 = and i32 %229, -268435457, !dbg !2896
  store volatile i32 %230, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !2896, !tbaa !2827
  br label %231, !dbg !2899

231:                                              ; preds = %228, %227, %154
  %232 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 0, !dbg !2900
  %233 = load i32, i32* %232, align 4, !dbg !2900, !tbaa !2902
  %234 = icmp eq i32 %233, 0, !dbg !2903
  br i1 %234, label %297, label %235, !dbg !2904

235:                                              ; preds = %231
  %236 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2905, !tbaa !2489
  %237 = and i32 %236, 12, !dbg !2905
  %238 = icmp eq i32 %237, 8, !dbg !2908
  br i1 %238, label %284, label %239, !dbg !2909

239:                                              ; preds = %235
  %240 = icmp eq i32 %233, 2, !dbg !2910
  store volatile i32 0, i32* inttoptr (i32 1111621728 to i32*), align 32, !dbg !2913, !tbaa !2532
  %241 = call i32 @HAL_GetTick() #26, !dbg !2913
  call void @llvm.dbg.value(metadata i32 %241, metadata !2634, metadata !DIExpression()), !dbg !2644
  call void @llvm.dbg.value(metadata i32 %241, metadata !2634, metadata !DIExpression()), !dbg !2644
  br i1 %240, label %242, label %276, !dbg !2914

242:                                              ; preds = %239, %246
  %243 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2915, !tbaa !2485
  %244 = and i32 %243, 33554432, !dbg !2915
  %245 = icmp eq i32 %244, 0, !dbg !2917
  br i1 %245, label %250, label %246, !dbg !2918

246:                                              ; preds = %242
  %247 = call i32 @HAL_GetTick() #26, !dbg !2919
  %248 = sub i32 %247, %241, !dbg !2922
  %249 = icmp ugt i32 %248, 2, !dbg !2923
  br i1 %249, label %298, label %242, !dbg !2924, !llvm.loop !2925

250:                                              ; preds = %242
  %251 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 1, !dbg !2927
  %252 = load i32, i32* %251, align 4, !dbg !2927, !tbaa !2929
  %253 = icmp eq i32 %252, 65536, !dbg !2930
  br i1 %253, label %254, label %260, !dbg !2931

254:                                              ; preds = %250
  %255 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2932, !tbaa !2489
  %256 = and i32 %255, -131073, !dbg !2932
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !2932
  %258 = load i32, i32* %257, align 4, !dbg !2932, !tbaa !2934
  %259 = or i32 %256, %258, !dbg !2932
  store volatile i32 %259, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2932, !tbaa !2489
  br label %260, !dbg !2935

260:                                              ; preds = %254, %250
  %261 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2936, !tbaa !2489
  %262 = and i32 %261, -3997697, !dbg !2936
  %263 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 2, !dbg !2936
  %264 = load i32, i32* %263, align 4, !dbg !2936, !tbaa !2937
  %265 = or i32 %264, %252, !dbg !2936
  %266 = or i32 %265, %262, !dbg !2936
  store volatile i32 %266, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2936, !tbaa !2489
  store volatile i32 1, i32* inttoptr (i32 1111621728 to i32*), align 32, !dbg !2938, !tbaa !2532
  %267 = call i32 @HAL_GetTick() #26, !dbg !2939
  call void @llvm.dbg.value(metadata i32 %267, metadata !2634, metadata !DIExpression()), !dbg !2644
  br label %268, !dbg !2940

268:                                              ; preds = %272, %260
  %269 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2941, !tbaa !2485
  %270 = and i32 %269, 33554432, !dbg !2941
  %271 = icmp eq i32 %270, 0, !dbg !2942
  br i1 %271, label %272, label %297, !dbg !2940

272:                                              ; preds = %268
  %273 = call i32 @HAL_GetTick() #26, !dbg !2943
  %274 = sub i32 %273, %267, !dbg !2946
  %275 = icmp ugt i32 %274, 2, !dbg !2947
  br i1 %275, label %298, label %268, !dbg !2948, !llvm.loop !2949

276:                                              ; preds = %239, %280
  %277 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2951, !tbaa !2485
  %278 = and i32 %277, 33554432, !dbg !2951
  %279 = icmp eq i32 %278, 0, !dbg !2953
  br i1 %279, label %297, label %280, !dbg !2954

280:                                              ; preds = %276
  %281 = call i32 @HAL_GetTick() #26, !dbg !2955
  %282 = sub i32 %281, %241, !dbg !2958
  %283 = icmp ugt i32 %282, 2, !dbg !2959
  br i1 %283, label %298, label %276, !dbg !2960, !llvm.loop !2961

284:                                              ; preds = %235
  %285 = icmp eq i32 %233, 1, !dbg !2963
  br i1 %285, label %298, label %286, !dbg !2966

286:                                              ; preds = %284
  %287 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2967, !tbaa !2489
  call void @llvm.dbg.value(metadata i32 %287, metadata !2635, metadata !DIExpression()), !dbg !2644
  %288 = and i32 %287, 65536, !dbg !2969
  %289 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 1, !dbg !2971
  %290 = load i32, i32* %289, align 4, !dbg !2971, !tbaa !2929
  %291 = icmp eq i32 %288, %290, !dbg !2972
  br i1 %291, label %292, label %298, !dbg !2973

292:                                              ; preds = %286
  %293 = and i32 %287, 3932160, !dbg !2974
  %294 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 2, !dbg !2975
  %295 = load i32, i32* %294, align 4, !dbg !2975, !tbaa !2937
  %296 = icmp eq i32 %293, %295, !dbg !2976
  br i1 %296, label %297, label %298, !dbg !2977

297:                                              ; preds = %276, %268, %292, %231
  br label %298, !dbg !2978

298:                                              ; preds = %58, %66, %104, %114, %139, %150, %182, %215, %223, %280, %246, %272, %286, %292, %284, %90, %25, %1, %297
  %299 = phi i32 [ 0, %297 ], [ 1, %1 ], [ 1, %25 ], [ 1, %90 ], [ 1, %284 ], [ 1, %292 ], [ 1, %286 ], [ 3, %272 ], [ 3, %246 ], [ 3, %280 ], [ 3, %223 ], [ 3, %215 ], [ 3, %182 ], [ 3, %150 ], [ 3, %139 ], [ 3, %114 ], [ 3, %104 ], [ 3, %66 ], [ 3, %58 ], !dbg !2644
  ret i32 %299, !dbg !2979
}

; Function Attrs: noinline nounwind
define internal fastcc void @RCC_Delay() unnamed_addr #3 !dbg !2980 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !2984, metadata !DIExpression()), !dbg !2986
  %2 = bitcast i32* %1 to i8*, !dbg !2987
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !2987
  call void @llvm.dbg.declare(metadata i32* %1, metadata !2985, metadata !DIExpression()), !dbg !2988
  %3 = load i32, i32* @SystemCoreClock, align 4, !dbg !2989, !tbaa !2532
  %4 = udiv i32 %3, 8000, !dbg !2990
  store volatile i32 %4, i32* %1, align 4, !dbg !2988, !tbaa !2532
  br label %5, !dbg !2991

5:                                                ; preds = %5, %0
  call void asm sideeffect "nop", ""() #26, !dbg !2992, !srcloc !2994
  %6 = load volatile i32, i32* %1, align 4, !dbg !2995, !tbaa !2532
  %7 = add i32 %6, -1, !dbg !2995
  store volatile i32 %7, i32* %1, align 4, !dbg !2995, !tbaa !2532
  %8 = icmp eq i32 %6, 0, !dbg !2996
  br i1 %8, label %9, label %5, !dbg !2996, !llvm.loop !2997

9:                                                ; preds = %5
  %10 = bitcast i32* %1 to i8*, !dbg !2999
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !2999
  ret void, !dbg !2999
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #3 !dbg !3000 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !3013, metadata !DIExpression()), !dbg !3016
  call void @llvm.dbg.value(metadata i32 %1, metadata !3014, metadata !DIExpression()), !dbg !3016
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !3017
  br i1 %3, label %113, label %4, !dbg !3019

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3020, !tbaa !3022
  %6 = and i32 %5, 7, !dbg !3020
  %7 = icmp ult i32 %6, %1, !dbg !3024
  br i1 %7, label %8, label %15, !dbg !3025

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3026, !tbaa !3022
  %10 = and i32 %9, -8, !dbg !3026
  %11 = or i32 %10, %1, !dbg !3026
  store volatile i32 %11, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3026, !tbaa !3022
  %12 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3028, !tbaa !3022
  %13 = and i32 %12, 7, !dbg !3028
  %14 = icmp eq i32 %13, %1, !dbg !3030
  br i1 %14, label %15, label %113, !dbg !3031

15:                                               ; preds = %8, %4
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !3032
  %17 = load i32, i32* %16, align 4, !dbg !3032, !tbaa !3034
  %18 = and i32 %17, 2, !dbg !3036
  %19 = icmp eq i32 %18, 0, !dbg !3037
  br i1 %19, label %38, label %20, !dbg !3038

20:                                               ; preds = %15
  %21 = and i32 %17, 4, !dbg !3039
  %22 = icmp eq i32 %21, 0, !dbg !3042
  br i1 %22, label %26, label %23, !dbg !3043

23:                                               ; preds = %20
  %24 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3044, !tbaa !2489
  %25 = or i32 %24, 1792, !dbg !3044
  store volatile i32 %25, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3044, !tbaa !2489
  br label %26, !dbg !3046

26:                                               ; preds = %23, %20
  %27 = and i32 %17, 8, !dbg !3047
  %28 = icmp eq i32 %27, 0, !dbg !3049
  br i1 %28, label %32, label %29, !dbg !3050

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3051, !tbaa !2489
  %31 = or i32 %30, 14336, !dbg !3051
  store volatile i32 %31, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3051, !tbaa !2489
  br label %32, !dbg !3053

32:                                               ; preds = %29, %26
  %33 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3054, !tbaa !2489
  %34 = and i32 %33, -241, !dbg !3054
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !3054
  %36 = load i32, i32* %35, align 4, !dbg !3054, !tbaa !3055
  %37 = or i32 %34, %36, !dbg !3054
  store volatile i32 %37, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3054, !tbaa !2489
  br label %38, !dbg !3056

38:                                               ; preds = %32, %15
  %39 = and i32 %17, 1, !dbg !3057
  %40 = icmp eq i32 %39, 0, !dbg !3059
  br i1 %40, label %71, label %41, !dbg !3060

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !3061
  %43 = load i32, i32* %42, align 4, !dbg !3061, !tbaa !3064
  switch i32 %43, label %52 [
    i32 1, label %44
    i32 2, label %48
  ], !dbg !3065

44:                                               ; preds = %41
  %45 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3066, !tbaa !2485
  %46 = and i32 %45, 131072, !dbg !3066
  %47 = icmp eq i32 %46, 0, !dbg !3069
  br i1 %47, label %113, label %56, !dbg !3070

48:                                               ; preds = %41
  %49 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3071, !tbaa !2485
  %50 = and i32 %49, 33554432, !dbg !3071
  %51 = icmp eq i32 %50, 0, !dbg !3075
  br i1 %51, label %113, label %56, !dbg !3076

52:                                               ; preds = %41
  %53 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3077, !tbaa !2485
  %54 = and i32 %53, 2, !dbg !3077
  %55 = icmp eq i32 %54, 0, !dbg !3080
  br i1 %55, label %113, label %56, !dbg !3081

56:                                               ; preds = %48, %52, %44
  %57 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3082, !tbaa !2489
  %58 = and i32 %57, -4, !dbg !3082
  %59 = or i32 %58, %43, !dbg !3082
  store volatile i32 %59, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3082, !tbaa !2489
  %60 = call i32 @HAL_GetTick() #26, !dbg !3083
  call void @llvm.dbg.value(metadata i32 %60, metadata !3015, metadata !DIExpression()), !dbg !3016
  br label %61, !dbg !3084

61:                                               ; preds = %67, %56
  %62 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3085, !tbaa !2489
  %63 = and i32 %62, 12, !dbg !3085
  %64 = load i32, i32* %42, align 4, !dbg !3086, !tbaa !3064
  %65 = shl i32 %64, 2, !dbg !3087
  %66 = icmp eq i32 %63, %65, !dbg !3088
  br i1 %66, label %71, label %67, !dbg !3084

67:                                               ; preds = %61
  %68 = call i32 @HAL_GetTick() #26, !dbg !3089
  %69 = sub i32 %68, %60, !dbg !3092
  %70 = icmp ugt i32 %69, 5000, !dbg !3093
  br i1 %70, label %113, label %61, !dbg !3094, !llvm.loop !3095

71:                                               ; preds = %61, %38
  %72 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3097, !tbaa !3022
  %73 = and i32 %72, 7, !dbg !3097
  %74 = icmp ugt i32 %73, %1, !dbg !3099
  br i1 %74, label %75, label %82, !dbg !3100

75:                                               ; preds = %71
  %76 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3101, !tbaa !3022
  %77 = and i32 %76, -8, !dbg !3101
  %78 = or i32 %77, %1, !dbg !3101
  store volatile i32 %78, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3101, !tbaa !3022
  %79 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3103, !tbaa !3022
  %80 = and i32 %79, 7, !dbg !3103
  %81 = icmp eq i32 %80, %1, !dbg !3105
  br i1 %81, label %82, label %113, !dbg !3106

82:                                               ; preds = %75, %71
  %83 = load i32, i32* %16, align 4, !dbg !3107, !tbaa !3034
  %84 = and i32 %83, 4, !dbg !3109
  %85 = icmp eq i32 %84, 0, !dbg !3110
  br i1 %85, label %92, label %86, !dbg !3111

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3112, !tbaa !2489
  %88 = and i32 %87, -1793, !dbg !3112
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !3112
  %90 = load i32, i32* %89, align 4, !dbg !3112, !tbaa !3114
  %91 = or i32 %88, %90, !dbg !3112
  store volatile i32 %91, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3112, !tbaa !2489
  br label %92, !dbg !3115

92:                                               ; preds = %86, %82
  %93 = and i32 %83, 8, !dbg !3116
  %94 = icmp eq i32 %93, 0, !dbg !3118
  br i1 %94, label %102, label %95, !dbg !3119

95:                                               ; preds = %92
  %96 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3120, !tbaa !2489
  %97 = and i32 %96, -14337, !dbg !3120
  %98 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !3120
  %99 = load i32, i32* %98, align 4, !dbg !3120, !tbaa !3122
  %100 = shl i32 %99, 3, !dbg !3120
  %101 = or i32 %100, %97, !dbg !3120
  store volatile i32 %101, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3120, !tbaa !2489
  br label %102, !dbg !3123

102:                                              ; preds = %95, %92
  %103 = call i32 @HAL_RCC_GetSysClockFreq(), !dbg !3124
  %104 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3125, !tbaa !2489
  %105 = lshr i32 %104, 4, !dbg !3126
  %106 = and i32 %105, 15, !dbg !3126
  %107 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %106, !dbg !3127
  %108 = load i8, i8* %107, align 1, !dbg !3127, !tbaa !1653
  %109 = zext i8 %108 to i32, !dbg !3127
  %110 = lshr i32 %103, %109, !dbg !3128
  store i32 %110, i32* @SystemCoreClock, align 4, !dbg !3129, !tbaa !2532
  %111 = load i32, i32* @uwTickPrio, align 4, !dbg !3130, !tbaa !2532
  %112 = call i32 @HAL_InitTick(i32 noundef %111) #26, !dbg !3131
  br label %113, !dbg !3132

113:                                              ; preds = %67, %75, %52, %48, %44, %8, %2, %102
  %114 = phi i32 [ 0, %102 ], [ 1, %2 ], [ 1, %8 ], [ 1, %44 ], [ 1, %48 ], [ 1, %52 ], [ 1, %75 ], [ 3, %67 ], !dbg !3016
  ret i32 %114, !dbg !3133
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #15 !dbg !3134 {
  call void @llvm.dbg.declare(metadata [16 x i8]* @__const.HAL_RCC_GetSysClockFreq.aPLLMULFactorTable, metadata !3136, metadata !DIExpression()), !dbg !3144
  call void @llvm.dbg.declare(metadata [2 x i8]* @__const.HAL_RCC_GetSysClockFreq.aPredivFactorTable, metadata !3137, metadata !DIExpression()), !dbg !3145
  call void @llvm.dbg.value(metadata i32 0, metadata !3139, metadata !DIExpression()), !dbg !3146
  call void @llvm.dbg.value(metadata i32 0, metadata !3140, metadata !DIExpression()), !dbg !3146
  call void @llvm.dbg.value(metadata i32 0, metadata !3141, metadata !DIExpression()), !dbg !3146
  call void @llvm.dbg.value(metadata i32 0, metadata !3142, metadata !DIExpression()), !dbg !3146
  call void @llvm.dbg.value(metadata i32 0, metadata !3143, metadata !DIExpression()), !dbg !3146
  %1 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3147, !tbaa !2489
  call void @llvm.dbg.value(metadata i32 %1, metadata !3139, metadata !DIExpression()), !dbg !3146
  %2 = and i32 %1, 12, !dbg !3148
  %3 = icmp eq i32 %2, 8, !dbg !3149
  br i1 %3, label %4, label %23, !dbg !3149

4:                                                ; preds = %0
  %5 = lshr i32 %1, 18, !dbg !3150
  %6 = and i32 %5, 15, !dbg !3150
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @__const.HAL_RCC_GetSysClockFreq.aPLLMULFactorTable, i32 0, i32 %6, !dbg !3153
  %8 = load i8, i8* %7, align 1, !dbg !3153, !tbaa !1653
  %9 = zext i8 %8 to i32, !dbg !3153
  call void @llvm.dbg.value(metadata i32 %9, metadata !3142, metadata !DIExpression()), !dbg !3146
  %10 = and i32 %1, 65536, !dbg !3154
  %11 = icmp eq i32 %10, 0, !dbg !3156
  br i1 %11, label %21, label %12, !dbg !3157

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3158, !tbaa !2489
  %14 = lshr i32 %13, 17, !dbg !3160
  %15 = and i32 %14, 1, !dbg !3160
  %16 = getelementptr inbounds [2 x i8], [2 x i8]* @__const.HAL_RCC_GetSysClockFreq.aPredivFactorTable, i32 0, i32 %15, !dbg !3161
  %17 = load i8, i8* %16, align 1, !dbg !3161, !tbaa !1653
  %18 = zext i8 %17 to i32, !dbg !3161
  call void @llvm.dbg.value(metadata i32 %18, metadata !3140, metadata !DIExpression()), !dbg !3146
  %19 = mul nuw nsw i32 %9, 8000000, !dbg !3162
  %20 = udiv i32 %19, %18, !dbg !3163
  call void @llvm.dbg.value(metadata i32 %20, metadata !3141, metadata !DIExpression()), !dbg !3146
  br label %23, !dbg !3164

21:                                               ; preds = %4
  %22 = mul nuw nsw i32 %9, 4000000, !dbg !3165
  call void @llvm.dbg.value(metadata i32 %22, metadata !3141, metadata !DIExpression()), !dbg !3146
  br label %23

23:                                               ; preds = %0, %12, %21
  %24 = phi i32 [ %20, %12 ], [ %22, %21 ], [ 8000000, %0 ], !dbg !3167
  call void @llvm.dbg.value(metadata i32 %24, metadata !3143, metadata !DIExpression()), !dbg !3146
  ret i32 %24, !dbg !3168
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #3 !dbg !3169 {
  %4 = alloca %struct.DMA_Channel_TypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3173, metadata !DIExpression()), !dbg !3186
  call void @llvm.dbg.value(metadata i32 %1, metadata !3174, metadata !DIExpression()), !dbg !3186
  call void @llvm.dbg.value(metadata i32 %2, metadata !3175, metadata !DIExpression()), !dbg !3186
  %6 = bitcast %struct.DMA_Channel_TypeDef* %4 to i8*, !dbg !3187
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #26, !dbg !3187
  call void @llvm.dbg.declare(metadata %struct.DMA_Channel_TypeDef* %4, metadata !3176, metadata !DIExpression()), !dbg !3188
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(16) %6, i8 0, i32 16, i1 false), !dbg !3188
  %7 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %4, i32 0, i32 1, !dbg !3189
  store i32 2, i32* %7, align 4, !dbg !3190, !tbaa !3191
  %8 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %4, i32 0, i32 3, !dbg !3193
  store i32 3, i32* %8, align 4, !dbg !3194, !tbaa !3195
  %9 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %4, i32 0, i32 2, !dbg !3196
  store i32 0, i32* %9, align 4, !dbg !3197, !tbaa !3198
  %10 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %4, i32 0, i32 0, !dbg !3199
  store i32 256, i32* %10, align 4, !dbg !3200, !tbaa !3201
  %11 = bitcast i32* %5 to i8*, !dbg !3202
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11), !dbg !3202
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3184, metadata !DIExpression()), !dbg !3202
  %12 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !3202, !tbaa !3203
  %13 = or i32 %12, 4, !dbg !3202
  store volatile i32 %13, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !3202, !tbaa !3203
  %14 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !3202, !tbaa !3203
  %15 = and i32 %14, 4, !dbg !3202
  store volatile i32 %15, i32* %5, align 4, !dbg !3202, !tbaa !2532
  %16 = load volatile i32, i32* %5, align 4, !dbg !3202, !tbaa !2532
  %17 = bitcast i32* %5 to i8*, !dbg !3204
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17), !dbg !3204
  call void @HAL_GPIO_Init(%struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073809408 to %struct.USART_TypeDef*), %struct.DMA_Channel_TypeDef* noundef nonnull %4) #26, !dbg !3205
  %18 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3206, !tbaa !2489
  %19 = and i32 %18, -117440513, !dbg !3206
  %20 = or i32 %19, %1, !dbg !3206
  store volatile i32 %20, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3206, !tbaa !2489
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #26, !dbg !3207
  ret void, !dbg !3207
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #14 !dbg !3208 {
  store volatile i32 1, i32* inttoptr (i32 1111621708 to i32*), align 4, !dbg !3209, !tbaa !2532
  ret void, !dbg !3210
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #14 !dbg !3211 {
  store volatile i32 0, i32* inttoptr (i32 1111621708 to i32*), align 4, !dbg !3212, !tbaa !2532
  ret void, !dbg !3213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #16 !dbg !3214 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !3215, !tbaa !2532
  ret i32 %1, !dbg !3216
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #15 !dbg !3217 {
  %1 = call i32 @HAL_RCC_GetHCLKFreq(), !dbg !3218
  %2 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3219, !tbaa !2489
  %3 = lshr i32 %2, 8, !dbg !3220
  %4 = and i32 %3, 7, !dbg !3220
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !3221
  %6 = load i8, i8* %5, align 1, !dbg !3221, !tbaa !1653
  %7 = zext i8 %6 to i32, !dbg !3221
  %8 = lshr i32 %1, %7, !dbg !3222
  ret i32 %8, !dbg !3223
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #15 !dbg !3224 {
  %1 = call i32 @HAL_RCC_GetHCLKFreq(), !dbg !3225
  %2 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3226, !tbaa !2489
  %3 = lshr i32 %2, 11, !dbg !3227
  %4 = and i32 %3, 7, !dbg !3227
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !3228
  %6 = load i8, i8* %5, align 1, !dbg !3228, !tbaa !1653
  %7 = zext i8 %6 to i32, !dbg !3228
  %8 = lshr i32 %1, %7, !dbg !3229
  ret i32 %8, !dbg !3230
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #15 !dbg !3231 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !3235, metadata !DIExpression()), !dbg !3236
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !3237
  store i32 15, i32* %2, align 4, !dbg !3238, !tbaa !2650
  %3 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3239, !tbaa !2485
  %4 = and i32 %3, 262144, !dbg !3241
  %5 = icmp eq i32 %4, 0, !dbg !3242
  br i1 %5, label %8, label %6, !dbg !3243

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !3244
  store i32 327680, i32* %7, align 4, !dbg !3246, !tbaa !2673
  br label %15, !dbg !3247

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3248, !tbaa !2485
  %10 = and i32 %9, 65536, !dbg !3250
  %11 = icmp eq i32 %10, 0, !dbg !3251
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !3252
  br i1 %11, label %14, label %13, !dbg !3253

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !3254, !tbaa !2673
  br label %15, !dbg !3256

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !3257, !tbaa !2673
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3259, !tbaa !2489
  %17 = and i32 %16, 131072, !dbg !3259
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !3260
  store i32 %17, i32* %18, align 4, !dbg !3261, !tbaa !2934
  %19 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3262, !tbaa !2485
  %20 = and i32 %19, 1, !dbg !3264
  %21 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !3265
  store i32 %20, i32* %21, align 4, !dbg !3265, !tbaa !2742
  %22 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3266, !tbaa !2485
  %23 = lshr i32 %22, 3, !dbg !3267
  %24 = and i32 %23, 31, !dbg !3267
  %25 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !3268
  store i32 %24, i32* %25, align 4, !dbg !3269, !tbaa !2779
  %26 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3270, !tbaa !2857
  %27 = and i32 %26, 4, !dbg !3272
  %28 = icmp eq i32 %27, 0, !dbg !3273
  br i1 %28, label %31, label %29, !dbg !3274

29:                                               ; preds = %15
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !3275
  store i32 5, i32* %30, align 4, !dbg !3277, !tbaa !2853
  br label %38, !dbg !3278

31:                                               ; preds = %15
  %32 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3279, !tbaa !2857
  %33 = and i32 %32, 1, !dbg !3281
  %34 = icmp eq i32 %33, 0, !dbg !3282
  %35 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !3283
  br i1 %34, label %37, label %36, !dbg !3284

36:                                               ; preds = %31
  store i32 1, i32* %35, align 4, !dbg !3285, !tbaa !2853
  br label %38, !dbg !3287

37:                                               ; preds = %31
  store i32 0, i32* %35, align 4, !dbg !3288, !tbaa !2853
  br label %38

38:                                               ; preds = %36, %37, %29
  %39 = load volatile i32, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !3290, !tbaa !2607
  %40 = and i32 %39, 1, !dbg !3292
  %41 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !3293
  store i32 %40, i32* %41, align 4, !dbg !3293, !tbaa !2788
  %42 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3294, !tbaa !2485
  %43 = and i32 %42, 16777216, !dbg !3296
  %44 = icmp eq i32 %43, 0, !dbg !3297
  %45 = select i1 %44, i32 1, i32 2, !dbg !3298
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 0, !dbg !3299
  store i32 %45, i32* %46, align 4, !dbg !3299, !tbaa !2902
  %47 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3300, !tbaa !2489
  %48 = and i32 %47, 65536, !dbg !3301
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 1, !dbg !3302
  store i32 %48, i32* %49, align 4, !dbg !3303, !tbaa !2929
  %50 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3304, !tbaa !2489
  %51 = and i32 %50, 3932160, !dbg !3305
  %52 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 2, !dbg !3306
  store i32 %51, i32* %52, align 4, !dbg !3307, !tbaa !2937
  ret void, !dbg !3308
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #15 !dbg !3309 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !3313, metadata !DIExpression()), !dbg !3315
  call void @llvm.dbg.value(metadata i32* %1, metadata !3314, metadata !DIExpression()), !dbg !3315
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !3316
  store i32 15, i32* %3, align 4, !dbg !3317, !tbaa !3034
  %4 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3318, !tbaa !2489
  %5 = and i32 %4, 3, !dbg !3319
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !3320
  store i32 %5, i32* %6, align 4, !dbg !3321, !tbaa !3064
  %7 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3322, !tbaa !2489
  %8 = and i32 %7, 240, !dbg !3323
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !3324
  store i32 %8, i32* %9, align 4, !dbg !3325, !tbaa !3055
  %10 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3326, !tbaa !2489
  %11 = and i32 %10, 1792, !dbg !3327
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !3328
  store i32 %11, i32* %12, align 4, !dbg !3329, !tbaa !3114
  %13 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3330, !tbaa !2489
  %14 = lshr i32 %13, 3, !dbg !3331
  %15 = and i32 %14, 1792, !dbg !3331
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !3332
  store i32 %15, i32* %16, align 4, !dbg !3333, !tbaa !3122
  %17 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3334, !tbaa !3022
  %18 = and i32 %17, 7, !dbg !3335
  store i32 %18, i32* %1, align 4, !dbg !3336, !tbaa !2532
  ret void, !dbg !3337
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #3 !dbg !3338 {
  %1 = load volatile i32, i32* inttoptr (i32 1073877000 to i32*), align 8, !dbg !3339, !tbaa !2494
  %2 = and i32 %1, 128, !dbg !3339
  %3 = icmp eq i32 %2, 0, !dbg !3339
  br i1 %3, label %5, label %4, !dbg !3341

4:                                                ; preds = %0
  call void @HAL_RCC_CSSCallback(), !dbg !3342
  store volatile i8 -128, i8* inttoptr (i32 1073877002 to i8*), align 2, !dbg !3344, !tbaa !1653
  br label %5, !dbg !3345

5:                                                ; preds = %4, %0
  ret void, !dbg !3346
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #3 !dbg !3347 {
  ret void, !dbg !3348
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_Init() local_unnamed_addr #3 !dbg !3349 {
  %1 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3350, !tbaa !3022
  %2 = or i32 %1, 16, !dbg !3350
  store volatile i32 %2, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3350, !tbaa !3022
  call void @HAL_NVIC_SetPriorityGrouping(i32 noundef 3) #26, !dbg !3351
  %3 = call i32 @HAL_InitTick(i32 noundef 0), !dbg !3352
  call void @HAL_MspInit(), !dbg !3353
  ret i32 0, !dbg !3354
}

; Function Attrs: noinline nounwind
define weak dso_local i32 @HAL_InitTick(i32 noundef %0) local_unnamed_addr #3 !dbg !3355 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3359, metadata !DIExpression()), !dbg !3360
  %2 = load i32, i32* @SystemCoreClock, align 4, !dbg !3361, !tbaa !2532
  %3 = load i32, i32* @uwTickFreq, align 4, !dbg !3363, !tbaa !1653
  %4 = udiv i32 1000, %3, !dbg !3364
  %5 = udiv i32 %2, %4, !dbg !3365
  %6 = call i32 @HAL_SYSTICK_Config(i32 noundef %5) #26, !dbg !3366
  %7 = icmp eq i32 %6, 0, !dbg !3367
  %8 = icmp ult i32 %0, 16
  %9 = and i1 %8, %7, !dbg !3368
  br i1 %9, label %10, label %11, !dbg !3368

10:                                               ; preds = %1
  call void @HAL_NVIC_SetPriority(i32 noundef -1, i32 noundef %0, i32 noundef 0) #26, !dbg !3369
  store i32 %0, i32* @uwTickPrio, align 4, !dbg !3372, !tbaa !2532
  br label %11, !dbg !3373

11:                                               ; preds = %1, %10
  %12 = phi i32 [ 0, %10 ], [ 1, %1 ], !dbg !3360
  ret i32 %12, !dbg !3374
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_MspInit() local_unnamed_addr #3 !dbg !3375 {
  ret void, !dbg !3376
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_DeInit() local_unnamed_addr #3 !dbg !3377 {
  store volatile i32 -1, i32* inttoptr (i32 1073877004 to i32*), align 4, !dbg !3378, !tbaa !3379
  store volatile i32 0, i32* inttoptr (i32 1073877008 to i32*), align 16, !dbg !3380, !tbaa !3381
  store volatile i32 -1, i32* inttoptr (i32 1073877004 to i32*), align 4, !dbg !3382, !tbaa !3379
  store volatile i32 0, i32* inttoptr (i32 1073877004 to i32*), align 4, !dbg !3383, !tbaa !3379
  call void @HAL_MspDeInit(), !dbg !3384
  ret i32 0, !dbg !3385
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_MspDeInit() local_unnamed_addr #3 !dbg !3386 {
  ret void, !dbg !3387
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_IncTick() local_unnamed_addr #3 !dbg !3388 {
  %1 = load i32, i32* @uwTickFreq, align 4, !dbg !3389, !tbaa !1653
  %2 = load volatile i32, i32* @uwTick, align 4, !dbg !3390, !tbaa !2532
  %3 = add i32 %2, %1, !dbg !3390
  store volatile i32 %3, i32* @uwTick, align 4, !dbg !3390, !tbaa !2532
  ret void, !dbg !3391
}

; Function Attrs: noinline nounwind
define weak dso_local i32 @HAL_GetTick() local_unnamed_addr #3 !dbg !3392 {
  %1 = load volatile i32, i32* @uwTick, align 4, !dbg !3393, !tbaa !2532
  ret i32 %1, !dbg !3394
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetTickPrio() local_unnamed_addr #16 !dbg !3395 {
  %1 = load i32, i32* @uwTickPrio, align 4, !dbg !3396, !tbaa !2532
  ret i32 %1, !dbg !3397
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_SetTickFreq(i32 noundef %0) local_unnamed_addr #3 !dbg !3398 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3402, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i32 0, metadata !3403, metadata !DIExpression()), !dbg !3404
  %2 = load i32, i32* @uwTickFreq, align 4, !dbg !3405, !tbaa !1653
  %3 = icmp eq i32 %2, %0, !dbg !3407
  br i1 %3, label %9, label %4, !dbg !3408

4:                                                ; preds = %1
  %5 = load i32, i32* @uwTickPrio, align 4, !dbg !3409, !tbaa !2532
  %6 = call i32 @HAL_InitTick(i32 noundef %5), !dbg !3411
  call void @llvm.dbg.value(metadata i32 %6, metadata !3403, metadata !DIExpression()), !dbg !3404
  %7 = icmp eq i32 %6, 0, !dbg !3412
  br i1 %7, label %8, label %9, !dbg !3414

8:                                                ; preds = %4
  store i32 %0, i32* @uwTickFreq, align 4, !dbg !3415, !tbaa !1653
  br label %9, !dbg !3417

9:                                                ; preds = %4, %8, %1
  %10 = phi i32 [ 0, %8 ], [ %6, %4 ], [ 0, %1 ], !dbg !3404
  call void @llvm.dbg.value(metadata i32 %10, metadata !3403, metadata !DIExpression()), !dbg !3404
  ret i32 %10, !dbg !3418
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetTickFreq() local_unnamed_addr #16 !dbg !3419 {
  %1 = load i32, i32* @uwTickFreq, align 4, !dbg !3422, !tbaa !1653
  ret i32 %1, !dbg !3423
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_Delay(i32 noundef %0) local_unnamed_addr #3 !dbg !3424 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3426, metadata !DIExpression()), !dbg !3429
  %2 = call i32 @HAL_GetTick(), !dbg !3430
  call void @llvm.dbg.value(metadata i32 %2, metadata !3427, metadata !DIExpression()), !dbg !3429
  call void @llvm.dbg.value(metadata i32 %0, metadata !3428, metadata !DIExpression()), !dbg !3429
  %3 = icmp eq i32 %0, -1, !dbg !3431
  %4 = load i32, i32* @uwTickFreq, align 4, !dbg !3433
  %5 = add i32 %4, %0, !dbg !3433
  %6 = select i1 %3, i32 -1, i32 %5, !dbg !3433
  call void @llvm.dbg.value(metadata i32 %6, metadata !3428, metadata !DIExpression()), !dbg !3429
  br label %7, !dbg !3434

7:                                                ; preds = %7, %1
  %8 = call i32 @HAL_GetTick(), !dbg !3435
  %9 = sub i32 %8, %2, !dbg !3436
  %10 = icmp ult i32 %9, %6, !dbg !3437
  br i1 %10, label %7, label %11, !dbg !3434, !llvm.loop !3438

11:                                               ; preds = %7
  ret void, !dbg !3440
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_SuspendTick() local_unnamed_addr #3 !dbg !3441 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !3442, !tbaa !3201
  %2 = and i32 %1, -3, !dbg !3442
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !3442, !tbaa !3201
  ret void, !dbg !3443
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_ResumeTick() local_unnamed_addr #3 !dbg !3444 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !3445, !tbaa !3201
  %2 = or i32 %1, 2, !dbg !3445
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !3445, !tbaa !3201
  ret void, !dbg !3446
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define dso_local i32 @HAL_GetHalVersion() local_unnamed_addr #10 !dbg !3447 {
  ret i32 16843776, !dbg !3448
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_GetREVID() local_unnamed_addr #15 !dbg !3449 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600576 to i32*), align 8192, !dbg !3450, !tbaa !2834
  %2 = lshr i32 %1, 16, !dbg !3451
  ret i32 %2, !dbg !3452
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_GetDEVID() local_unnamed_addr #15 !dbg !3453 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600576 to i32*), align 8192, !dbg !3454, !tbaa !2834
  %2 = and i32 %1, 4095, !dbg !3455
  ret i32 %2, !dbg !3456
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetUIDw0() local_unnamed_addr #16 !dbg !3457 {
  %1 = load i32, i32* inttoptr (i32 536868840 to i32*), align 8, !dbg !3458, !tbaa !2532
  ret i32 %1, !dbg !3459
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetUIDw1() local_unnamed_addr #16 !dbg !3460 {
  %1 = load i32, i32* inttoptr (i32 536868844 to i32*), align 4, !dbg !3461, !tbaa !2532
  ret i32 %1, !dbg !3462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetUIDw2() local_unnamed_addr #16 !dbg !3463 {
  %1 = load i32, i32* inttoptr (i32 536868848 to i32*), align 16, !dbg !3464, !tbaa !2532
  ret i32 %1, !dbg !3465
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_EnableDBGSleepMode() local_unnamed_addr #14 !dbg !3466 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3467, !tbaa !3468
  %2 = or i32 %1, 1, !dbg !3467
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3467, !tbaa !3468
  ret void, !dbg !3469
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_DisableDBGSleepMode() local_unnamed_addr #14 !dbg !3470 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3471, !tbaa !3468
  %2 = and i32 %1, -2, !dbg !3471
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3471, !tbaa !3468
  ret void, !dbg !3472
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_EnableDBGStopMode() local_unnamed_addr #14 !dbg !3473 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3474, !tbaa !3468
  %2 = or i32 %1, 2, !dbg !3474
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3474, !tbaa !3468
  ret void, !dbg !3475
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_DisableDBGStopMode() local_unnamed_addr #14 !dbg !3476 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3477, !tbaa !3468
  %2 = and i32 %1, -3, !dbg !3477
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3477, !tbaa !3468
  ret void, !dbg !3478
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_EnableDBGStandbyMode() local_unnamed_addr #14 !dbg !3479 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3480, !tbaa !3468
  %2 = or i32 %1, 4, !dbg !3480
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3480, !tbaa !3468
  ret void, !dbg !3481
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_DisableDBGStandbyMode() local_unnamed_addr #14 !dbg !3482 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3483, !tbaa !3468
  %2 = and i32 %1, -5, !dbg !3483
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3483, !tbaa !3468
  ret void, !dbg !3484
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_NVIC_SetPriorityGrouping(i32 noundef %0) local_unnamed_addr #14 !dbg !3485 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3487, metadata !DIExpression()), !dbg !3488
  call fastcc void @__NVIC_SetPriorityGrouping(i32 noundef %0), !dbg !3489
  ret void, !dbg !3490
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_SetPriorityGrouping(i32 noundef %0) unnamed_addr #14 !dbg !3491 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3493, metadata !DIExpression()), !dbg !3496
  call void @llvm.dbg.value(metadata i32 %0, metadata !3495, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !3496
  %2 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !3497, !tbaa !3498
  call void @llvm.dbg.value(metadata i32 %2, metadata !3494, metadata !DIExpression()), !dbg !3496
  %3 = and i32 %2, 63743, !dbg !3499
  call void @llvm.dbg.value(metadata i32 %3, metadata !3494, metadata !DIExpression()), !dbg !3496
  %4 = shl i32 %0, 8, !dbg !3500
  %5 = and i32 %4, 1792, !dbg !3500
  %6 = or i32 %5, %3, !dbg !3501
  %7 = or i32 %6, 100270080, !dbg !3501
  call void @llvm.dbg.value(metadata i32 %7, metadata !3494, metadata !DIExpression()), !dbg !3496
  store volatile i32 %7, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !3502, !tbaa !3498
  ret void, !dbg !3503
}

; Function Attrs: nofree noinline nounwind
define dso_local void @HAL_NVIC_SetPriority(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #17 !dbg !3504 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3509, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.value(metadata i32 %1, metadata !3510, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.value(metadata i32 %2, metadata !3511, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.value(metadata i32 0, metadata !3512, metadata !DIExpression()), !dbg !3513
  %4 = call fastcc i32 @__NVIC_GetPriorityGrouping(), !dbg !3514, !range !3515
  call void @llvm.dbg.value(metadata i32 %4, metadata !3512, metadata !DIExpression()), !dbg !3513
  %5 = call fastcc i32 @NVIC_EncodePriority(i32 noundef %4, i32 noundef %1, i32 noundef %2), !dbg !3516
  call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %5), !dbg !3517
  ret void, !dbg !3518
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define internal fastcc i32 @__NVIC_GetPriorityGrouping() unnamed_addr #15 !dbg !3519 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !3520, !tbaa !3498
  %2 = lshr i32 %1, 8, !dbg !3521
  %3 = and i32 %2, 7, !dbg !3521
  ret i32 %3, !dbg !3522
}

; Function Attrs: mustprogress nofree noinline nosync nounwind readnone willreturn
define internal fastcc i32 @NVIC_EncodePriority(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #18 !dbg !3523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3527, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %1, metadata !3528, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %2, metadata !3529, metadata !DIExpression()), !dbg !3533
  %4 = and i32 %0, 7, !dbg !3534
  call void @llvm.dbg.value(metadata i32 %4, metadata !3530, metadata !DIExpression()), !dbg !3533
  %5 = xor i32 %4, 7, !dbg !3535
  %6 = icmp ult i32 %5, 4, !dbg !3536
  %7 = select i1 %6, i32 %5, i32 4, !dbg !3536
  call void @llvm.dbg.value(metadata i32 %7, metadata !3531, metadata !DIExpression()), !dbg !3533
  %8 = call i32 @llvm.usub.sat.i32(i32 %4, i32 3), !dbg !3537
  call void @llvm.dbg.value(metadata i32 %8, metadata !3532, metadata !DIExpression()), !dbg !3533
  %9 = shl nsw i32 -1, %7, !dbg !3538
  %10 = xor i32 %9, -1, !dbg !3538
  %11 = and i32 %10, %1, !dbg !3539
  %12 = shl i32 %11, %8, !dbg !3540
  %13 = shl nsw i32 -1, %8, !dbg !3541
  %14 = xor i32 %13, -1, !dbg !3541
  %15 = and i32 %14, %2, !dbg !3542
  %16 = or i32 %12, %15, !dbg !3543
  ret i32 %16, !dbg !3544
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !3545 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3549, metadata !DIExpression()), !dbg !3551
  call void @llvm.dbg.value(metadata i32 %1, metadata !3550, metadata !DIExpression()), !dbg !3551
  %3 = trunc i32 %1 to i8, !dbg !3552
  %4 = shl i8 %3, 4, !dbg !3552
  %5 = and i32 %0, 15, !dbg !3554
  %6 = add nsw i32 %5, -4, !dbg !3554
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !3554
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !3554
  %9 = icmp slt i32 %0, 0, !dbg !3554
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !3554
  store volatile i8 %4, i8* %10, align 1, !dbg !3552, !tbaa !1653
  ret void, !dbg !3555
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_NVIC_EnableIRQ(i32 noundef %0) local_unnamed_addr #14 !dbg !3556 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3560, metadata !DIExpression()), !dbg !3561
  call fastcc void @__NVIC_EnableIRQ(i32 noundef %0), !dbg !3562
  ret void, !dbg !3563
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #14 !dbg !3564 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3566, metadata !DIExpression()), !dbg !3567
  %2 = icmp sgt i32 %0, -1, !dbg !3568
  br i1 %2, label %3, label %8, !dbg !3570

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !3571
  %5 = shl i32 1, %4, !dbg !3573
  %6 = lshr i32 %0, 5, !dbg !3574
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !3575
  store volatile i32 %5, i32* %7, align 4, !dbg !3576, !tbaa !2532
  br label %8, !dbg !3577

8:                                                ; preds = %3, %1
  ret void, !dbg !3578
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_NVIC_DisableIRQ(i32 noundef %0) local_unnamed_addr #3 !dbg !3579 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3581, metadata !DIExpression()), !dbg !3582
  call fastcc void @__NVIC_DisableIRQ(i32 noundef %0), !dbg !3583
  ret void, !dbg !3584
}

; Function Attrs: noinline nounwind
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #3 !dbg !3585 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3587, metadata !DIExpression()), !dbg !3588
  %2 = icmp sgt i32 %0, -1, !dbg !3589
  br i1 %2, label %3, label %8, !dbg !3591

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !3592
  %5 = shl i32 1, %4, !dbg !3594
  %6 = lshr i32 %0, 5, !dbg !3595
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !3596
  store volatile i32 %5, i32* %7, align 4, !dbg !3597, !tbaa !2532
  call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !3598, !srcloc !3602
  call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !3603, !srcloc !3606
  br label %8, !dbg !3607

8:                                                ; preds = %3, %1
  ret void, !dbg !3608
}

; Function Attrs: noinline noreturn nounwind
define dso_local void @HAL_NVIC_SystemReset() local_unnamed_addr #19 !dbg !3609 {
  call fastcc void @__NVIC_SystemReset() #29, !dbg !3610
  unreachable, !dbg !3610
}

; Function Attrs: noinline noreturn nounwind
define internal fastcc void @__NVIC_SystemReset() unnamed_addr #19 !dbg !3611 {
  call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !3612, !srcloc !3602
  %1 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !3614, !tbaa !3498
  %2 = and i32 %1, 1792, !dbg !3615
  %3 = or i32 %2, 100270084, !dbg !3616
  store volatile i32 %3, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !3617, !tbaa !3498
  call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !3618, !srcloc !3602
  br label %4, !dbg !3620

4:                                                ; preds = %4, %0
  call void asm sideeffect "nop", ""() #26, !dbg !3621, !srcloc !3625
  br label %4, !dbg !3626, !llvm.loop !3627
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_SYSTICK_Config(i32 noundef %0) local_unnamed_addr #14 !dbg !3630 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3634, metadata !DIExpression()), !dbg !3635
  %2 = call fastcc i32 @SysTick_Config(i32 noundef %0), !dbg !3636
  ret i32 %2, !dbg !3637
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc i32 @SysTick_Config(i32 noundef %0) unnamed_addr #14 !dbg !3638 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3640, metadata !DIExpression()), !dbg !3641
  %2 = add i32 %0, -1, !dbg !3642
  %3 = icmp ugt i32 %2, 16777215, !dbg !3644
  br i1 %3, label %5, label %4, !dbg !3645

4:                                                ; preds = %1
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !3646, !tbaa !3191
  call fastcc void @__NVIC_SetPriority(i32 noundef -1, i32 noundef 15), !dbg !3647
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !3648, !tbaa !3198
  store volatile i32 7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !3649, !tbaa !3201
  br label %5, !dbg !3650

5:                                                ; preds = %1, %4
  %6 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !3641
  ret i32 %6, !dbg !3651
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_NVIC_GetPriorityGrouping() local_unnamed_addr #15 !dbg !3652 {
  %1 = call fastcc i32 @__NVIC_GetPriorityGrouping(), !dbg !3653
  ret i32 %1, !dbg !3654
}

; Function Attrs: mustprogress nofree noinline nounwind willreturn
define dso_local void @HAL_NVIC_GetPriority(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #20 !dbg !3655 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3659, metadata !DIExpression()), !dbg !3663
  call void @llvm.dbg.value(metadata i32 %1, metadata !3660, metadata !DIExpression()), !dbg !3663
  call void @llvm.dbg.value(metadata i32* %2, metadata !3661, metadata !DIExpression()), !dbg !3663
  call void @llvm.dbg.value(metadata i32* %3, metadata !3662, metadata !DIExpression()), !dbg !3663
  %5 = call fastcc i32 @__NVIC_GetPriority(i32 noundef %0), !dbg !3664, !range !3665
  call fastcc void @NVIC_DecodePriority(i32 noundef %5, i32 noundef %1, i32* noundef %2, i32* noundef %3), !dbg !3666
  ret void, !dbg !3667
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define internal fastcc i32 @__NVIC_GetPriority(i32 noundef %0) unnamed_addr #15 !dbg !3668 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3672, metadata !DIExpression()), !dbg !3673
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !3674
  %3 = and i32 %0, 15, !dbg !3674
  %4 = add nsw i32 %3, -4, !dbg !3674
  %5 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %4, !dbg !3674
  %6 = icmp slt i32 %0, 0, !dbg !3674
  %7 = select i1 %6, i8* %5, i8* %2, !dbg !3674
  %8 = load volatile i8, i8* %7, align 1, !dbg !3675, !tbaa !1653
  %9 = lshr i8 %8, 4, !dbg !3675
  %10 = zext i8 %9 to i32, !dbg !3675
  ret i32 %10, !dbg !3677
}

; Function Attrs: mustprogress nofree noinline nosync nounwind willreturn writeonly
define internal fastcc void @NVIC_DecodePriority(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2, i32* nocapture noundef writeonly %3) unnamed_addr #21 !dbg !3678 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3683, metadata !DIExpression()), !dbg !3690
  call void @llvm.dbg.value(metadata i32 %1, metadata !3684, metadata !DIExpression()), !dbg !3690
  call void @llvm.dbg.value(metadata i32* %2, metadata !3685, metadata !DIExpression()), !dbg !3690
  call void @llvm.dbg.value(metadata i32* %3, metadata !3686, metadata !DIExpression()), !dbg !3690
  %5 = and i32 %1, 7, !dbg !3691
  call void @llvm.dbg.value(metadata i32 %5, metadata !3687, metadata !DIExpression()), !dbg !3690
  %6 = xor i32 %5, 7, !dbg !3692
  %7 = icmp ult i32 %6, 4, !dbg !3693
  %8 = select i1 %7, i32 %6, i32 4, !dbg !3693
  call void @llvm.dbg.value(metadata i32 %8, metadata !3688, metadata !DIExpression()), !dbg !3690
  %9 = call i32 @llvm.usub.sat.i32(i32 %5, i32 3), !dbg !3694
  call void @llvm.dbg.value(metadata i32 %9, metadata !3689, metadata !DIExpression()), !dbg !3690
  %10 = lshr i32 %0, %9, !dbg !3695
  %11 = shl nsw i32 -1, %8, !dbg !3696
  %12 = xor i32 %11, -1, !dbg !3696
  %13 = and i32 %10, %12, !dbg !3697
  store i32 %13, i32* %2, align 4, !dbg !3698, !tbaa !2532
  %14 = shl nsw i32 -1, %9, !dbg !3699
  %15 = xor i32 %14, -1, !dbg !3699
  %16 = and i32 %15, %0, !dbg !3700
  store i32 %16, i32* %3, align 4, !dbg !3701, !tbaa !2532
  ret void, !dbg !3702
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_NVIC_SetPendingIRQ(i32 noundef %0) local_unnamed_addr #14 !dbg !3703 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3705, metadata !DIExpression()), !dbg !3706
  call fastcc void @__NVIC_SetPendingIRQ(i32 noundef %0), !dbg !3707
  ret void, !dbg !3708
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #14 !dbg !3709 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3711, metadata !DIExpression()), !dbg !3712
  %2 = icmp sgt i32 %0, -1, !dbg !3713
  br i1 %2, label %3, label %8, !dbg !3715

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !3716
  %5 = shl i32 1, %4, !dbg !3718
  %6 = lshr i32 %0, 5, !dbg !3719
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %6, !dbg !3720
  store volatile i32 %5, i32* %7, align 4, !dbg !3721, !tbaa !2532
  br label %8, !dbg !3722

8:                                                ; preds = %3, %1
  ret void, !dbg !3723
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_NVIC_GetPendingIRQ(i32 noundef %0) local_unnamed_addr #15 !dbg !3724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3726, metadata !DIExpression()), !dbg !3727
  %2 = call fastcc i32 @__NVIC_GetPendingIRQ(i32 noundef %0), !dbg !3728
  ret i32 %2, !dbg !3729
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define internal fastcc i32 @__NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #15 !dbg !3730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3732, metadata !DIExpression()), !dbg !3733
  %2 = icmp sgt i32 %0, -1, !dbg !3734
  br i1 %2, label %3, label %10, !dbg !3736

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !3737
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !3739
  %6 = load volatile i32, i32* %5, align 4, !dbg !3739, !tbaa !2532
  %7 = and i32 %0, 31, !dbg !3740
  %8 = lshr i32 %6, %7, !dbg !3741
  %9 = and i32 %8, 1, !dbg !3741
  br label %10, !dbg !3742

10:                                               ; preds = %1, %3
  %11 = phi i32 [ %9, %3 ], [ 0, %1 ], !dbg !3743
  ret i32 %11, !dbg !3744
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_NVIC_ClearPendingIRQ(i32 noundef %0) local_unnamed_addr #14 !dbg !3745 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3747, metadata !DIExpression()), !dbg !3748
  call fastcc void @__NVIC_ClearPendingIRQ(i32 noundef %0), !dbg !3749
  ret void, !dbg !3750
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #14 !dbg !3751 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3753, metadata !DIExpression()), !dbg !3754
  %2 = icmp sgt i32 %0, -1, !dbg !3755
  br i1 %2, label %3, label %8, !dbg !3757

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !3758
  %5 = shl i32 1, %4, !dbg !3760
  %6 = lshr i32 %0, 5, !dbg !3761
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %6, !dbg !3762
  store volatile i32 %5, i32* %7, align 4, !dbg !3763, !tbaa !2532
  br label %8, !dbg !3764

8:                                                ; preds = %3, %1
  ret void, !dbg !3765
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_NVIC_GetActive(i32 noundef %0) local_unnamed_addr #15 !dbg !3766 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3768, metadata !DIExpression()), !dbg !3769
  %2 = call fastcc i32 @__NVIC_GetActive(i32 noundef %0), !dbg !3770
  ret i32 %2, !dbg !3771
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define internal fastcc i32 @__NVIC_GetActive(i32 noundef %0) unnamed_addr #15 !dbg !3772 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3774, metadata !DIExpression()), !dbg !3775
  %2 = icmp sgt i32 %0, -1, !dbg !3776
  br i1 %2, label %3, label %10, !dbg !3778

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !3779
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812800 to [8 x i32]*), i32 0, i32 %4, !dbg !3781
  %6 = load volatile i32, i32* %5, align 4, !dbg !3781, !tbaa !2532
  %7 = and i32 %0, 31, !dbg !3782
  %8 = lshr i32 %6, %7, !dbg !3783
  %9 = and i32 %8, 1, !dbg !3783
  br label %10, !dbg !3784

10:                                               ; preds = %1, %3
  %11 = phi i32 [ %9, %3 ], [ 0, %1 ], !dbg !3785
  ret i32 %11, !dbg !3786
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_SYSTICK_CLKSourceConfig(i32 noundef %0) local_unnamed_addr #14 !dbg !3787 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3789, metadata !DIExpression()), !dbg !3790
  %2 = icmp eq i32 %0, 4, !dbg !3791
  %3 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !3793, !tbaa !3201
  %4 = and i32 %3, -5, !dbg !3794
  %5 = select i1 %2, i32 4, i32 0, !dbg !3794
  %6 = or i32 %4, %5, !dbg !3794
  store volatile i32 %6, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !3793, !tbaa !3201
  ret void, !dbg !3795
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_SYSTICK_IRQHandler() local_unnamed_addr #3 !dbg !3796 {
  call void @HAL_SYSTICK_Callback(), !dbg !3797
  ret void, !dbg !3798
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_SYSTICK_Callback() local_unnamed_addr #3 !dbg !3799 {
  ret void, !dbg !3800
}

; Function Attrs: nofree noinline nounwind
define dso_local void @HAL_GPIO_Init(%struct.USART_TypeDef* noundef %0, %struct.DMA_Channel_TypeDef* nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !3801 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !3813, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.value(metadata %struct.DMA_Channel_TypeDef* %1, metadata !3814, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.value(metadata i32 0, metadata !3815, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.value(metadata i32 0, metadata !3819, metadata !DIExpression()), !dbg !3829
  %4 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !3815, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.value(metadata i32 0, metadata !3819, metadata !DIExpression()), !dbg !3829
  %5 = load i32, i32* %4, align 4, !dbg !3830, !tbaa !3201
  %6 = icmp eq i32 %5, 0, !dbg !3831
  br i1 %6, label %135, label %7, !dbg !3832

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 1
  %9 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 2
  %10 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4
  %11 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  %12 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 3
  %13 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 3
  %14 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 3
  %15 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 3
  %16 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0
  %17 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1
  %18 = ptrtoint %struct.USART_TypeDef* %0 to i32
  %19 = icmp eq %struct.USART_TypeDef* %0, inttoptr (i32 1073812480 to %struct.USART_TypeDef*)
  %20 = select i1 %19, i32 3, i32 4
  %21 = bitcast i32* %3 to i8*
  %22 = bitcast i32* %3 to i8*
  br label %23, !dbg !3832

23:                                               ; preds = %7, %129
  %24 = phi i32 [ %5, %7 ], [ %132, %129 ]
  %25 = phi i32 [ 0, %7 ], [ %131, %129 ]
  %26 = phi i32 [ 0, %7 ], [ %130, %129 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !3815, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.value(metadata i32 %26, metadata !3819, metadata !DIExpression()), !dbg !3829
  %27 = shl i32 1, %25, !dbg !3833
  call void @llvm.dbg.value(metadata i32 %27, metadata !3816, metadata !DIExpression()), !dbg !3829
  %28 = and i32 %24, %27, !dbg !3834
  call void @llvm.dbg.value(metadata i32 %28, metadata !3817, metadata !DIExpression()), !dbg !3829
  %29 = icmp eq i32 %28, %27, !dbg !3835
  br i1 %29, label %30, label %129, !dbg !3836

30:                                               ; preds = %23
  %31 = load i32, i32* %8, align 4, !dbg !3837, !tbaa !3191
  switch i32 %31, label %48 [
    i32 1, label %32
    i32 17, label %34
    i32 2, label %37
    i32 18, label %40
    i32 0, label %43
    i32 269549568, label %43
    i32 270598144, label %43
    i32 271646720, label %43
    i32 269615104, label %43
    i32 270663680, label %43
    i32 271712256, label %43
    i32 3, label %47
  ], !dbg !3838

32:                                               ; preds = %30
  %33 = load i32, i32* %15, align 4, !dbg !3839, !tbaa !3195
  call void @llvm.dbg.value(metadata i32 %33, metadata !3819, metadata !DIExpression()), !dbg !3829
  br label %48, !dbg !3841

34:                                               ; preds = %30
  %35 = load i32, i32* %14, align 4, !dbg !3842, !tbaa !3195
  %36 = add i32 %35, 4, !dbg !3843
  call void @llvm.dbg.value(metadata i32 %36, metadata !3819, metadata !DIExpression()), !dbg !3829
  br label %48, !dbg !3844

37:                                               ; preds = %30
  %38 = load i32, i32* %13, align 4, !dbg !3845, !tbaa !3195
  %39 = add i32 %38, 8, !dbg !3846
  call void @llvm.dbg.value(metadata i32 %39, metadata !3819, metadata !DIExpression()), !dbg !3829
  br label %48, !dbg !3847

40:                                               ; preds = %30
  %41 = load i32, i32* %12, align 4, !dbg !3848, !tbaa !3195
  %42 = add i32 %41, 12, !dbg !3849
  call void @llvm.dbg.value(metadata i32 %42, metadata !3819, metadata !DIExpression()), !dbg !3829
  br label %48, !dbg !3850

43:                                               ; preds = %30, %30, %30, %30, %30, %30, %30
  %44 = load i32, i32* %9, align 4, !dbg !3851, !tbaa !3198
  switch i32 %44, label %46 [
    i32 0, label %48
    i32 1, label %45
  ], !dbg !3853

45:                                               ; preds = %43
  call void @llvm.dbg.value(metadata i32 8, metadata !3819, metadata !DIExpression()), !dbg !3829
  store volatile i32 %27, i32* %10, align 4, !dbg !3854, !tbaa !3857
  br label %48, !dbg !3859

46:                                               ; preds = %43
  call void @llvm.dbg.value(metadata i32 8, metadata !3819, metadata !DIExpression()), !dbg !3829
  store volatile i32 %27, i32* %11, align 4, !dbg !3860, !tbaa !3862
  br label %48

47:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 0, metadata !3819, metadata !DIExpression()), !dbg !3829
  br label %48, !dbg !3863

48:                                               ; preds = %43, %30, %46, %45, %47, %40, %37, %34, %32
  %49 = phi i32 [ %26, %30 ], [ 0, %47 ], [ 8, %45 ], [ 8, %46 ], [ %42, %40 ], [ %39, %37 ], [ %36, %34 ], [ %33, %32 ], [ 4, %43 ], !dbg !3829
  call void @llvm.dbg.value(metadata i32 %49, metadata !3819, metadata !DIExpression()), !dbg !3829
  %50 = icmp ult i32 %28, 256, !dbg !3864
  %51 = select i1 %50, i32* %16, i32* %17, !dbg !3865
  call void @llvm.dbg.value(metadata i32* %51, metadata !3820, metadata !DIExpression()), !dbg !3829
  %52 = shl i32 %25, 2, !dbg !3866
  %53 = add i32 %52, -32, !dbg !3866
  %54 = select i1 %50, i32 %52, i32 %53, !dbg !3866
  call void @llvm.dbg.value(metadata i32 %54, metadata !3821, metadata !DIExpression()), !dbg !3829
  %55 = load volatile i32, i32* %51, align 4, !dbg !3867, !tbaa !2532
  %56 = shl i32 15, %54, !dbg !3867
  %57 = xor i32 %56, -1, !dbg !3867
  %58 = and i32 %55, %57, !dbg !3867
  %59 = shl i32 %49, %54, !dbg !3867
  %60 = or i32 %58, %59, !dbg !3867
  store volatile i32 %60, i32* %51, align 4, !dbg !3867, !tbaa !2532
  %61 = load i32, i32* %8, align 4, !dbg !3868, !tbaa !3191
  %62 = and i32 %61, 268435456, !dbg !3869
  %63 = icmp eq i32 %62, 0, !dbg !3870
  br i1 %63, label %129, label %64, !dbg !3871

64:                                               ; preds = %48
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !3872
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3822, metadata !DIExpression()), !dbg !3872
  %65 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !3872, !tbaa !3203
  %66 = or i32 %65, 1, !dbg !3872
  store volatile i32 %66, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !3872, !tbaa !3203
  %67 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !3872, !tbaa !3203
  %68 = and i32 %67, 1, !dbg !3872
  store volatile i32 %68, i32* %3, align 4, !dbg !3872, !tbaa !2532
  %69 = load volatile i32, i32* %3, align 4, !dbg !3872, !tbaa !2532
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22), !dbg !3873
  %70 = lshr i32 %25, 2, !dbg !3874
  %71 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %70, !dbg !3875
  %72 = load volatile i32, i32* %71, align 4, !dbg !3875, !tbaa !2532
  call void @llvm.dbg.value(metadata i32 %72, metadata !3818, metadata !DIExpression()), !dbg !3829
  %73 = and i32 %52, 12, !dbg !3876
  %74 = shl i32 15, %73, !dbg !3876
  %75 = xor i32 %74, -1, !dbg !3876
  %76 = and i32 %72, %75, !dbg !3876
  call void @llvm.dbg.value(metadata i32 %76, metadata !3818, metadata !DIExpression()), !dbg !3829
  switch i32 %18, label %77 [
    i32 1073809408, label %80
    i32 1073810432, label %78
    i32 1073811456, label %79
  ], !dbg !3877

77:                                               ; preds = %64
  br label %80, !dbg !3877

78:                                               ; preds = %64
  br label %80, !dbg !3877

79:                                               ; preds = %64
  br label %80, !dbg !3877

80:                                               ; preds = %64, %79, %78, %77
  %81 = phi i32 [ 0, %64 ], [ %20, %77 ], [ 1, %78 ], [ 2, %79 ], !dbg !3877
  %82 = shl i32 %81, %73, !dbg !3877
  %83 = or i32 %82, %76, !dbg !3877
  call void @llvm.dbg.value(metadata i32 %83, metadata !3818, metadata !DIExpression()), !dbg !3829
  store volatile i32 %83, i32* %71, align 4, !dbg !3878, !tbaa !2532
  %84 = load i32, i32* %8, align 4, !dbg !3879, !tbaa !3191
  %85 = and i32 %84, 65536, !dbg !3881
  %86 = icmp eq i32 %85, 0, !dbg !3882
  br i1 %86, label %90, label %87, !dbg !3883

87:                                               ; preds = %80
  %88 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !3884, !tbaa !3886
  %89 = or i32 %88, %28, !dbg !3884
  br label %94, !dbg !3888

90:                                               ; preds = %80
  %91 = xor i32 %28, -1, !dbg !3889
  %92 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !3889, !tbaa !3886
  %93 = and i32 %92, %91, !dbg !3889
  br label %94

94:                                               ; preds = %90, %87
  %95 = phi i32 [ %93, %90 ], [ %89, %87 ]
  store volatile i32 %95, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !3891, !tbaa !3886
  %96 = and i32 %84, 131072, !dbg !3892
  %97 = icmp eq i32 %96, 0, !dbg !3894
  br i1 %97, label %101, label %98, !dbg !3895

98:                                               ; preds = %94
  %99 = load volatile i32, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !3896, !tbaa !3898
  %100 = or i32 %99, %28, !dbg !3896
  br label %105, !dbg !3899

101:                                              ; preds = %94
  %102 = xor i32 %28, -1, !dbg !3900
  %103 = load volatile i32, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !3900, !tbaa !3898
  %104 = and i32 %103, %102, !dbg !3900
  br label %105

105:                                              ; preds = %101, %98
  %106 = phi i32 [ %104, %101 ], [ %100, %98 ]
  store volatile i32 %106, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !3902, !tbaa !3898
  %107 = and i32 %84, 1048576, !dbg !3903
  %108 = icmp eq i32 %107, 0, !dbg !3905
  br i1 %108, label %112, label %109, !dbg !3906

109:                                              ; preds = %105
  %110 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !3907, !tbaa !3909
  %111 = or i32 %110, %28, !dbg !3907
  br label %116, !dbg !3910

112:                                              ; preds = %105
  %113 = xor i32 %28, -1, !dbg !3911
  %114 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !3911, !tbaa !3909
  %115 = and i32 %114, %113, !dbg !3911
  br label %116

116:                                              ; preds = %112, %109
  %117 = phi i32 [ %115, %112 ], [ %111, %109 ]
  store volatile i32 %117, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !3913, !tbaa !3909
  %118 = and i32 %84, 2097152, !dbg !3914
  %119 = icmp eq i32 %118, 0, !dbg !3916
  br i1 %119, label %123, label %120, !dbg !3917

120:                                              ; preds = %116
  %121 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !3918, !tbaa !3920
  %122 = or i32 %121, %28, !dbg !3918
  br label %127, !dbg !3921

123:                                              ; preds = %116
  %124 = xor i32 %28, -1, !dbg !3922
  %125 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !3922, !tbaa !3920
  %126 = and i32 %125, %124, !dbg !3922
  br label %127

127:                                              ; preds = %120, %123
  %128 = phi i32 [ %126, %123 ], [ %122, %120 ]
  store volatile i32 %128, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !3924, !tbaa !3920
  br label %129, !dbg !3925

129:                                              ; preds = %127, %48, %23
  %130 = phi i32 [ %49, %48 ], [ %26, %23 ], [ %49, %127 ], !dbg !3926
  call void @llvm.dbg.value(metadata i32 %130, metadata !3819, metadata !DIExpression()), !dbg !3829
  %131 = add i32 %25, 1, !dbg !3925
  call void @llvm.dbg.value(metadata i32 %131, metadata !3815, metadata !DIExpression()), !dbg !3829
  %132 = load i32, i32* %4, align 4, !dbg !3830, !tbaa !3201
  %133 = lshr i32 %132, %131, !dbg !3927
  %134 = icmp eq i32 %133, 0, !dbg !3831
  br i1 %134, label %135, label %23, !dbg !3832, !llvm.loop !3928

135:                                              ; preds = %129, %2
  ret void, !dbg !3930
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_GPIO_DeInit(%struct.USART_TypeDef* noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !3931 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !3935, metadata !DIExpression()), !dbg !3942
  call void @llvm.dbg.value(metadata i32 %1, metadata !3936, metadata !DIExpression()), !dbg !3942
  call void @llvm.dbg.value(metadata i32 0, metadata !3937, metadata !DIExpression()), !dbg !3942
  %3 = icmp eq i32 %1, 0, !dbg !3943
  br i1 %3, label %62, label %4, !dbg !3944

4:                                                ; preds = %2
  %5 = ptrtoint %struct.USART_TypeDef* %0 to i32
  %6 = icmp eq %struct.USART_TypeDef* %0, inttoptr (i32 1073812480 to %struct.USART_TypeDef*)
  %7 = select i1 %6, i32 3, i32 4
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1
  %10 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %11, !dbg !3944

11:                                               ; preds = %4, %58
  %12 = phi i32 [ 0, %4 ], [ %59, %58 ]
  call void @llvm.dbg.value(metadata i32 %12, metadata !3937, metadata !DIExpression()), !dbg !3942
  %13 = shl i32 1, %12, !dbg !3945
  %14 = and i32 %13, %1, !dbg !3947
  call void @llvm.dbg.value(metadata i32 %14, metadata !3938, metadata !DIExpression()), !dbg !3942
  %15 = icmp eq i32 %14, 0, !dbg !3948
  br i1 %15, label %58, label %16, !dbg !3950

16:                                               ; preds = %11
  %17 = lshr i32 %12, 2, !dbg !3951
  %18 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %17, !dbg !3953
  %19 = load volatile i32, i32* %18, align 4, !dbg !3953, !tbaa !2532
  call void @llvm.dbg.value(metadata i32 %19, metadata !3939, metadata !DIExpression()), !dbg !3942
  %20 = shl i32 %12, 2, !dbg !3954
  %21 = and i32 %20, 12, !dbg !3954
  %22 = shl i32 15, %21, !dbg !3955
  %23 = and i32 %19, %22, !dbg !3956
  call void @llvm.dbg.value(metadata i32 %23, metadata !3939, metadata !DIExpression()), !dbg !3942
  switch i32 %5, label %24 [
    i32 1073809408, label %27
    i32 1073810432, label %25
    i32 1073811456, label %26
  ], !dbg !3957

24:                                               ; preds = %16
  br label %27, !dbg !3957

25:                                               ; preds = %16
  br label %27, !dbg !3959

26:                                               ; preds = %16
  br label %27, !dbg !3959

27:                                               ; preds = %16, %26, %25, %24
  %28 = phi i32 [ 0, %16 ], [ %7, %24 ], [ 1, %25 ], [ 2, %26 ], !dbg !3957
  %29 = shl i32 %28, %21, !dbg !3959
  %30 = icmp eq i32 %23, %29, !dbg !3960
  br i1 %30, label %31, label %44, !dbg !3961

31:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %22, metadata !3939, metadata !DIExpression()), !dbg !3942
  %32 = xor i32 %22, -1, !dbg !3962
  %33 = load volatile i32, i32* %18, align 4, !dbg !3962, !tbaa !2532
  %34 = and i32 %33, %32, !dbg !3962
  store volatile i32 %34, i32* %18, align 4, !dbg !3962, !tbaa !2532
  %35 = xor i32 %14, -1, !dbg !3964
  %36 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !3964, !tbaa !3886
  %37 = and i32 %36, %35, !dbg !3964
  store volatile i32 %37, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !3964, !tbaa !3886
  %38 = load volatile i32, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !3965, !tbaa !3898
  %39 = and i32 %38, %35, !dbg !3965
  store volatile i32 %39, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !3965, !tbaa !3898
  %40 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !3966, !tbaa !3909
  %41 = and i32 %40, %35, !dbg !3966
  store volatile i32 %41, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !3966, !tbaa !3909
  %42 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !3967, !tbaa !3920
  %43 = and i32 %42, %35, !dbg !3967
  store volatile i32 %43, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !3967, !tbaa !3920
  br label %44, !dbg !3968

44:                                               ; preds = %31, %27
  %45 = icmp ult i32 %14, 256, !dbg !3969
  %46 = select i1 %45, i32* %8, i32* %9, !dbg !3970
  call void @llvm.dbg.value(metadata i32* %46, metadata !3940, metadata !DIExpression()), !dbg !3942
  %47 = add i32 %20, -32, !dbg !3971
  %48 = select i1 %45, i32 %20, i32 %47, !dbg !3971
  call void @llvm.dbg.value(metadata i32 %48, metadata !3941, metadata !DIExpression()), !dbg !3942
  %49 = load volatile i32, i32* %46, align 4, !dbg !3972, !tbaa !2532
  %50 = shl i32 15, %48, !dbg !3972
  %51 = xor i32 %50, -1, !dbg !3972
  %52 = and i32 %49, %51, !dbg !3972
  %53 = shl i32 4, %48, !dbg !3972
  %54 = or i32 %52, %53, !dbg !3972
  store volatile i32 %54, i32* %46, align 4, !dbg !3972, !tbaa !2532
  %55 = xor i32 %14, -1, !dbg !3973
  %56 = load volatile i32, i32* %10, align 4, !dbg !3973, !tbaa !3974
  %57 = and i32 %56, %55, !dbg !3973
  store volatile i32 %57, i32* %10, align 4, !dbg !3973, !tbaa !3974
  br label %58, !dbg !3975

58:                                               ; preds = %44, %11
  %59 = add i32 %12, 1, !dbg !3976
  call void @llvm.dbg.value(metadata i32 %59, metadata !3937, metadata !DIExpression()), !dbg !3942
  %60 = lshr i32 %1, %59, !dbg !3977
  %61 = icmp eq i32 %60, 0, !dbg !3943
  br i1 %61, label %62, label %11, !dbg !3944, !llvm.loop !3978

62:                                               ; preds = %58, %2
  ret void, !dbg !3980
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_GPIO_ReadPin(%struct.USART_TypeDef* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #15 !dbg !3981 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !3986, metadata !DIExpression()), !dbg !3989
  call void @llvm.dbg.value(metadata i16 %1, metadata !3987, metadata !DIExpression()), !dbg !3989
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !3990
  %4 = load volatile i32, i32* %3, align 4, !dbg !3990, !tbaa !3992
  %5 = zext i16 %1 to i32, !dbg !3993
  %6 = and i32 %4, %5, !dbg !3994
  %7 = icmp ne i32 %6, 0, !dbg !3995
  %8 = zext i1 %7 to i32
  call void @llvm.dbg.value(metadata i32 %8, metadata !3988, metadata !DIExpression()), !dbg !3989
  ret i32 %8, !dbg !3996
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_GPIO_WritePin(%struct.USART_TypeDef* noundef %0, i16 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #14 !dbg !3997 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !4001, metadata !DIExpression()), !dbg !4004
  call void @llvm.dbg.value(metadata i16 %1, metadata !4002, metadata !DIExpression()), !dbg !4004
  call void @llvm.dbg.value(metadata i32 %2, metadata !4003, metadata !DIExpression()), !dbg !4004
  %4 = icmp eq i32 %2, 0, !dbg !4005
  %5 = zext i16 %1 to i32, !dbg !4007
  %6 = shl nuw i32 %5, 16, !dbg !4008
  %7 = select i1 %4, i32 %6, i32 %5, !dbg !4008
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !4007
  store volatile i32 %7, i32* %8, align 4, !dbg !4007, !tbaa !3857
  ret void, !dbg !4009
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_GPIO_TogglePin(%struct.USART_TypeDef* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #14 !dbg !4010 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !4014, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i16 %1, metadata !4015, metadata !DIExpression()), !dbg !4016
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !4017
  %4 = load volatile i32, i32* %3, align 4, !dbg !4017, !tbaa !3974
  %5 = zext i16 %1 to i32, !dbg !4019
  %6 = and i32 %4, %5, !dbg !4020
  %7 = icmp eq i32 %6, 0, !dbg !4021
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !4022
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !4022
  %10 = select i1 %7, i32* %8, i32* %9, !dbg !4022
  store volatile i32 %5, i32* %10, align 4, !dbg !4023, !tbaa !2532
  ret void, !dbg !4024
}

; Function Attrs: nofree noinline nounwind
define dso_local i32 @HAL_GPIO_LockPin(%struct.USART_TypeDef* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #17 !dbg !4025 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !4029, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.value(metadata i16 %1, metadata !4030, metadata !DIExpression()), !dbg !4032
  %4 = bitcast i32* %3 to i8*, !dbg !4033
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4033
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4031, metadata !DIExpression()), !dbg !4034
  store volatile i32 65536, i32* %3, align 4, !dbg !4034, !tbaa !2532
  %5 = zext i16 %1 to i32, !dbg !4035
  %6 = load volatile i32, i32* %3, align 4, !dbg !4035, !tbaa !2532
  %7 = or i32 %6, %5, !dbg !4035
  store volatile i32 %7, i32* %3, align 4, !dbg !4035, !tbaa !2532
  %8 = load volatile i32, i32* %3, align 4, !dbg !4036, !tbaa !2532
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 6, !dbg !4037
  store volatile i32 %8, i32* %9, align 4, !dbg !4038, !tbaa !4039
  store volatile i32 %5, i32* %9, align 4, !dbg !4040, !tbaa !4039
  %10 = load volatile i32, i32* %3, align 4, !dbg !4041, !tbaa !2532
  store volatile i32 %10, i32* %9, align 4, !dbg !4042, !tbaa !4039
  %11 = load volatile i32, i32* %9, align 4, !dbg !4043, !tbaa !4039
  store volatile i32 %11, i32* %3, align 4, !dbg !4044, !tbaa !2532
  %12 = load volatile i32, i32* %9, align 4, !dbg !4045, !tbaa !4039
  %13 = lshr i32 %12, 16, !dbg !4047
  %14 = and i32 %13, 1, !dbg !4047
  %15 = xor i32 %14, 1, !dbg !4047
  %16 = bitcast i32* %3 to i8*, !dbg !4048
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16), !dbg !4048
  ret i32 %15, !dbg !4048
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_GPIO_EXTI_IRQHandler(i16 noundef zeroext %0) local_unnamed_addr #3 !dbg !4049 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !4053, metadata !DIExpression()), !dbg !4054
  %2 = load volatile i32, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !4055, !tbaa !4057
  %3 = zext i16 %0 to i32, !dbg !4055
  %4 = and i32 %2, %3, !dbg !4055
  %5 = icmp eq i32 %4, 0, !dbg !4058
  br i1 %5, label %7, label %6, !dbg !4059

6:                                                ; preds = %1
  store volatile i32 %3, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !4060, !tbaa !4057
  call void @HAL_GPIO_EXTI_Callback(i16 noundef zeroext %0), !dbg !4062
  br label %7, !dbg !4063

7:                                                ; preds = %6, %1
  ret void, !dbg !4064
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_GPIO_EXTI_Callback(i16 noundef zeroext %0) local_unnamed_addr #3 !dbg !4065 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !4067, metadata !DIExpression()), !dbg !4068
  ret void, !dbg !4069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local noundef nonnull %"class.Cicada::Scheduler"* @_ZN6Cicada9SchedulerC2EPFjvEPPNS_4TaskE(%"class.Cicada::Scheduler"* noundef nonnull returned writeonly align 4 dereferenceable(12) %0, i32 ()* noundef %1, %"class.Cicada::Task"** noundef %2) unnamed_addr #11 align 2 !dbg !4070 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Scheduler"* %0, metadata !4072, metadata !DIExpression()), !dbg !4076
  call void @llvm.dbg.value(metadata i32 ()* %1, metadata !4074, metadata !DIExpression()), !dbg !4076
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"** %2, metadata !4075, metadata !DIExpression()), !dbg !4076
  %4 = getelementptr inbounds %"class.Cicada::Scheduler", %"class.Cicada::Scheduler"* %0, i32 0, i32 0, !dbg !4077
  store i32 ()* %1, i32 ()** %4, align 4, !dbg !4077, !tbaa !4078
  %5 = getelementptr inbounds %"class.Cicada::Scheduler", %"class.Cicada::Scheduler"* %0, i32 0, i32 1, !dbg !4080
  store %"class.Cicada::Task"** %2, %"class.Cicada::Task"*** %5, align 4, !dbg !4080, !tbaa !4081
  %6 = getelementptr inbounds %"class.Cicada::Scheduler", %"class.Cicada::Scheduler"* %0, i32 0, i32 2, !dbg !4082
  store %"class.Cicada::Task"** %2, %"class.Cicada::Task"*** %6, align 4, !dbg !4082, !tbaa !4083
  ret %"class.Cicada::Scheduler"* %0, !dbg !4084
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada9Scheduler7runTaskEv(%"class.Cicada::Scheduler"* nocapture noundef nonnull align 4 dereferenceable(12) %0) local_unnamed_addr #4 align 2 !dbg !4085 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Scheduler"* %0, metadata !4087, metadata !DIExpression()), !dbg !4089
  %2 = getelementptr inbounds %"class.Cicada::Scheduler", %"class.Cicada::Scheduler"* %0, i32 0, i32 0, !dbg !4090
  %3 = load i32 ()*, i32 ()** %2, align 4, !dbg !4090, !tbaa !4078
  %4 = call noundef i32 %3() #26, !dbg !4090
  call void @llvm.dbg.value(metadata i32 %4, metadata !4088, metadata !DIExpression()), !dbg !4089
  %5 = getelementptr inbounds %"class.Cicada::Scheduler", %"class.Cicada::Scheduler"* %0, i32 0, i32 2, !dbg !4091
  %6 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %5, align 4, !dbg !4091, !tbaa !4083
  %7 = load %"class.Cicada::Task"*, %"class.Cicada::Task"** %6, align 4, !dbg !4093, !tbaa !1340
  %8 = call noundef zeroext i16 @_ZNK6Cicada4Task5delayEv(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %7), !dbg !4094
  %9 = icmp eq i16 %8, 0, !dbg !4095
  br i1 %9, label %20, label %10, !dbg !4096

10:                                               ; preds = %1
  %11 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %5, align 4, !dbg !4097, !tbaa !4083
  %12 = load %"class.Cicada::Task"*, %"class.Cicada::Task"** %11, align 4, !dbg !4098, !tbaa !1340
  %13 = call noundef i32 @_ZN6Cicada4Task7lastRunEv(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %12), !dbg !4099
  %14 = sub i32 %4, %13, !dbg !4100
  %15 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %5, align 4, !dbg !4101, !tbaa !4083
  %16 = load %"class.Cicada::Task"*, %"class.Cicada::Task"** %15, align 4, !dbg !4102, !tbaa !1340
  %17 = call noundef zeroext i16 @_ZNK6Cicada4Task5delayEv(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %16), !dbg !4103
  %18 = zext i16 %17 to i32, !dbg !4104
  %19 = icmp ult i32 %14, %18, !dbg !4105
  br i1 %19, label %29, label %20, !dbg !4106

20:                                               ; preds = %10, %1
  %21 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %5, align 4, !dbg !4107, !tbaa !4083
  %22 = load %"class.Cicada::Task"*, %"class.Cicada::Task"** %21, align 4, !dbg !4109, !tbaa !1340
  call void @_ZN6Cicada4Task10setLastRunEj(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %22, i32 noundef %4), !dbg !4110
  %23 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %5, align 4, !dbg !4111, !tbaa !4083
  %24 = load %"class.Cicada::Task"*, %"class.Cicada::Task"** %23, align 4, !dbg !4112, !tbaa !1340
  %25 = bitcast %"class.Cicada::Task"* %24 to void (%"class.Cicada::Task"*)***, !dbg !4113
  %26 = load void (%"class.Cicada::Task"*)**, void (%"class.Cicada::Task"*)*** %25, align 4, !dbg !4113, !tbaa !1432
  %27 = getelementptr inbounds void (%"class.Cicada::Task"*)*, void (%"class.Cicada::Task"*)** %26, i32 2, !dbg !4113
  %28 = load void (%"class.Cicada::Task"*)*, void (%"class.Cicada::Task"*)** %27, align 4, !dbg !4113
  call void %28(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %24) #26, !dbg !4113
  br label %29, !dbg !4114

29:                                               ; preds = %20, %10
  %30 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %5, align 4, !dbg !4115, !tbaa !4083
  %31 = getelementptr inbounds %"class.Cicada::Task"*, %"class.Cicada::Task"** %30, i32 1, !dbg !4115
  store %"class.Cicada::Task"** %31, %"class.Cicada::Task"*** %5, align 4, !dbg !4115, !tbaa !4083
  %32 = load %"class.Cicada::Task"*, %"class.Cicada::Task"** %31, align 4, !dbg !4117, !tbaa !1340
  %33 = icmp eq %"class.Cicada::Task"* %32, null, !dbg !4118
  br i1 %33, label %34, label %37, !dbg !4119

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.Cicada::Scheduler", %"class.Cicada::Scheduler"* %0, i32 0, i32 1, !dbg !4120
  %36 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %35, align 4, !dbg !4120, !tbaa !4081
  store %"class.Cicada::Task"** %36, %"class.Cicada::Task"*** %5, align 4, !dbg !4122, !tbaa !4083
  br label %37, !dbg !4123

37:                                               ; preds = %34, %29
  ret void, !dbg !4124
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i16 @_ZNK6Cicada4Task5delayEv(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %0) local_unnamed_addr #4 comdat align 2 !dbg !4125 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !4127, metadata !DIExpression()), !dbg !4129
  %2 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 1, !dbg !4130
  %3 = load i16, i16* %2, align 4, !dbg !4130, !tbaa !1451
  ret i16 %3, !dbg !4131
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i32 @_ZN6Cicada4Task7lastRunEv(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %0) local_unnamed_addr #4 comdat align 2 !dbg !4132 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !4134, metadata !DIExpression()), !dbg !4135
  %2 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 4, !dbg !4136
  %3 = load i32, i32* %2, align 4, !dbg !4136, !tbaa !1458
  ret i32 %3, !dbg !4137
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada4Task10setLastRunEj(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %0, i32 noundef %1) local_unnamed_addr #4 comdat align 2 !dbg !4138 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !4140, metadata !DIExpression()), !dbg !4142
  call void @llvm.dbg.value(metadata i32 %1, metadata !4141, metadata !DIExpression()), !dbg !4142
  %3 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 4, !dbg !4143
  store i32 %1, i32* %3, align 4, !dbg !4144, !tbaa !1458
  ret void, !dbg !4145
}

; Function Attrs: mustprogress noinline noreturn nounwind
define dso_local void @_ZN6Cicada9Scheduler5startEv(%"class.Cicada::Scheduler"* nocapture noundef nonnull align 4 dereferenceable(12) %0) local_unnamed_addr #22 align 2 !dbg !4146 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Scheduler"* %0, metadata !4148, metadata !DIExpression()), !dbg !4149
  br label %2, !dbg !4150

2:                                                ; preds = %2, %1
  call void @_ZN6Cicada9Scheduler7runTaskEv(%"class.Cicada::Scheduler"* noundef nonnull align 4 dereferenceable(12) %0), !dbg !4151
  br label %2, !dbg !4154, !llvm.loop !4155
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i32 @_Z13eTickFunctionv() #4 !dbg !4158 {
  %1 = call i32 @HAL_GetTick() #26, !dbg !4159
  ret i32 %1, !dbg !4160
}

; Function Attrs: noinline nounwind
define dso_local noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD2Ev(%"class.Cicada::Stm32Uart"* noundef nonnull returned align 8 dereferenceable(192) %0) unnamed_addr #3 align 2 !dbg !4161 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4163, metadata !DIExpression()), !dbg !4164
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4165
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %2, align 8, !dbg !4165, !tbaa !1432
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !4165
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %3, align 4, !dbg !4165, !tbaa !1432
  %4 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !4166
  %5 = load i8, i8* %4, align 8, !dbg !4166, !tbaa !4169
  %6 = and i8 %5, 1, !dbg !4176
  %7 = icmp eq i8 %6, 0, !dbg !4166
  br i1 %7, label %13, label %8, !dbg !4177

8:                                                ; preds = %1
  %9 = bitcast %"class.Cicada::Stm32Uart"* %0 to void (%"class.Cicada::Stm32Uart"*)***, !dbg !4178
  %10 = load void (%"class.Cicada::Stm32Uart"*)**, void (%"class.Cicada::Stm32Uart"*)*** %9, align 8, !dbg !4178, !tbaa !1432
  %11 = getelementptr inbounds void (%"class.Cicada::Stm32Uart"*)*, void (%"class.Cicada::Stm32Uart"*)** %10, i32 19, !dbg !4178
  %12 = load void (%"class.Cicada::Stm32Uart"*)*, void (%"class.Cicada::Stm32Uart"*)** %11, align 4, !dbg !4178
  call void %12(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) #26, !dbg !4178
  br label %13, !dbg !4178

13:                                               ; preds = %8, %1
  %14 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, !dbg !4179
  %15 = call noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialD2Ev(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %14) #26, !dbg !4179
  ret %"class.Cicada::Stm32Uart"* %0, !dbg !4180
}

; Function Attrs: noinline nounwind
define dso_local void @_ZN6Cicada9Stm32UartD0Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #3 align 2 !dbg !4181 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4183, metadata !DIExpression()), !dbg !4184
  %2 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD2Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) #26, !dbg !4185
  %3 = bitcast %"class.Cicada::Stm32Uart"* %0 to i8*, !dbg !4185
  call void @_ZdlPv(i8* noundef %3) #27, !dbg !4185
  ret void, !dbg !4186
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZNK6Cicada9Stm32Uart20writeBufferProcessedEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #4 align 2 !dbg !4187 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4189, metadata !DIExpression()), !dbg !4191
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 2, !dbg !4192
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer"*, !dbg !4192
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !4193
  %5 = icmp eq i64 %4, 0, !dbg !4194
  br i1 %5, label %6, label %13, !dbg !4195

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !4196
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !4196, !tbaa !4197
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 0, !dbg !4196
  %10 = load volatile i32, i32* %9, align 4, !dbg !4196, !tbaa !4198
  %11 = and i32 %10, 64, !dbg !4196
  %12 = icmp ne i32 %11, 0, !dbg !4196
  br label %13

13:                                               ; preds = %6, %1
  %14 = phi i1 [ false, %1 ], [ %12, %6 ], !dbg !4191
  ret i1 %14, !dbg !4200
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #4 align 2 !dbg !4201 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4203, metadata !DIExpression()), !dbg !4204
  %2 = bitcast %"class.Cicada::Stm32Uart"* %0 to i1 (%"class.Cicada::Stm32Uart"*, i8)***, !dbg !4205
  %3 = load i1 (%"class.Cicada::Stm32Uart"*, i8)**, i1 (%"class.Cicada::Stm32Uart"*, i8)*** %2, align 8, !dbg !4205, !tbaa !1432
  %4 = getelementptr inbounds i1 (%"class.Cicada::Stm32Uart"*, i8)*, i1 (%"class.Cicada::Stm32Uart"*, i8)** %3, i32 16, !dbg !4205
  %5 = load i1 (%"class.Cicada::Stm32Uart"*, i8)*, i1 (%"class.Cicada::Stm32Uart"*, i8)** %4, align 4, !dbg !4205
  %6 = call noundef zeroext i1 %5(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, i8 noundef zeroext 15) #26, !dbg !4205
  ret i1 %6, !dbg !4206
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEh(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, i8 noundef zeroext %1) unnamed_addr #4 align 2 !dbg !4207 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.DMA_Channel_TypeDef, align 4
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4209, metadata !DIExpression()), !dbg !4253
  call void @llvm.dbg.value(metadata i8 %1, metadata !4210, metadata !DIExpression()), !dbg !4253
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, !dbg !4254
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %12, i32 0, i32 0, !dbg !4255
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %13, align 4, !dbg !4255, !tbaa !4197
  %15 = ptrtoint %struct.USART_TypeDef* %14 to i32, !dbg !4256
  switch i32 %15, label %123 [
    i32 1073821696, label %16
    i32 1073759232, label %26
    i32 1073760256, label %34
  ], !dbg !4256

16:                                               ; preds = %2
  %17 = load volatile i32, i32* inttoptr (i32 1073807364 to i32*), align 4, !dbg !4257, !tbaa !4258
  call void @llvm.dbg.value(metadata i32 %17, metadata !4211, metadata !DIExpression()), !dbg !4260
  call void @llvm.dbg.value(metadata i32 %17, metadata !4211, metadata !DIExpression(DW_OP_constu, 117440512, DW_OP_or, DW_OP_stack_value)), !dbg !4260
  %18 = or i32 %17, 117440516, !dbg !4257
  call void @llvm.dbg.value(metadata i32 %18, metadata !4211, metadata !DIExpression()), !dbg !4260
  store volatile i32 %18, i32* inttoptr (i32 1073807364 to i32*), align 4, !dbg !4257, !tbaa !4258
  %19 = bitcast i32* %3 to i8*, !dbg !4261
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19), !dbg !4261
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4215, metadata !DIExpression()), !dbg !4261
  %20 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4261, !tbaa !4262
  %21 = or i32 %20, 16384, !dbg !4261
  store volatile i32 %21, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4261, !tbaa !4262
  %22 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4261, !tbaa !4262
  %23 = and i32 %22, 16384, !dbg !4261
  store volatile i32 %23, i32* %3, align 4, !dbg !4261, !tbaa !4264
  %24 = load volatile i32, i32* %3, align 4, !dbg !4261, !tbaa !4264
  %25 = bitcast i32* %3 to i8*, !dbg !4265
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25), !dbg !4265
  br label %42, !dbg !4266

26:                                               ; preds = %2
  %27 = bitcast i32* %4 to i8*, !dbg !4267
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27), !dbg !4267
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4217, metadata !DIExpression()), !dbg !4267
  %28 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !4267, !tbaa !4268
  %29 = or i32 %28, 131072, !dbg !4267
  store volatile i32 %29, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !4267, !tbaa !4268
  %30 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !4267, !tbaa !4268
  %31 = and i32 %30, 131072, !dbg !4267
  store volatile i32 %31, i32* %4, align 4, !dbg !4267, !tbaa !4264
  %32 = load volatile i32, i32* %4, align 4, !dbg !4267, !tbaa !4264
  %33 = bitcast i32* %4 to i8*, !dbg !4269
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33), !dbg !4269
  br label %42, !dbg !4270

34:                                               ; preds = %2
  %35 = bitcast i32* %5 to i8*, !dbg !4271
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35), !dbg !4271
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4221, metadata !DIExpression()), !dbg !4271
  %36 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !4271, !tbaa !4268
  %37 = or i32 %36, 262144, !dbg !4271
  store volatile i32 %37, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !4271, !tbaa !4268
  %38 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !4271, !tbaa !4268
  %39 = and i32 %38, 262144, !dbg !4271
  store volatile i32 %39, i32* %5, align 4, !dbg !4271, !tbaa !4264
  %40 = load volatile i32, i32* %5, align 4, !dbg !4271, !tbaa !4264
  %41 = bitcast i32* %5 to i8*, !dbg !4272
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41), !dbg !4272
  br label %42

42:                                               ; preds = %26, %34, %16
  %43 = phi i32 [ 38, %26 ], [ 39, %34 ], [ 37, %16 ]
  %44 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !4273
  store i32 %43, i32* %44, align 4, !dbg !4273, !tbaa !4274
  %45 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 3, !dbg !4275
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %45, align 4, !dbg !4275, !tbaa !4276
  %47 = ptrtoint %struct.USART_TypeDef* %46 to i32, !dbg !4277
  %48 = add i32 %47, -1073809408, !dbg !4277
  %49 = call i32 @llvm.fshl.i32(i32 %48, i32 %48, i32 22), !dbg !4277
  switch i32 %49, label %90 [
    i32 0, label %50
    i32 1, label %58
    i32 2, label %66
    i32 3, label %74
    i32 4, label %82
  ], !dbg !4277

50:                                               ; preds = %42
  %51 = bitcast i32* %6 to i8*, !dbg !4278
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51), !dbg !4278
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4225, metadata !DIExpression()), !dbg !4278
  %52 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4278, !tbaa !4262
  %53 = or i32 %52, 4, !dbg !4278
  store volatile i32 %53, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4278, !tbaa !4262
  %54 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4278, !tbaa !4262
  %55 = and i32 %54, 4, !dbg !4278
  store volatile i32 %55, i32* %6, align 4, !dbg !4278, !tbaa !4264
  %56 = load volatile i32, i32* %6, align 4, !dbg !4278, !tbaa !4264
  %57 = bitcast i32* %6 to i8*, !dbg !4279
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57), !dbg !4279
  br label %90, !dbg !4280

58:                                               ; preds = %42
  %59 = bitcast i32* %7 to i8*, !dbg !4281
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59), !dbg !4281
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4229, metadata !DIExpression()), !dbg !4281
  %60 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4281, !tbaa !4262
  %61 = or i32 %60, 8, !dbg !4281
  store volatile i32 %61, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4281, !tbaa !4262
  %62 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4281, !tbaa !4262
  %63 = and i32 %62, 8, !dbg !4281
  store volatile i32 %63, i32* %7, align 4, !dbg !4281, !tbaa !4264
  %64 = load volatile i32, i32* %7, align 4, !dbg !4281, !tbaa !4264
  %65 = bitcast i32* %7 to i8*, !dbg !4282
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65), !dbg !4282
  br label %90, !dbg !4283

66:                                               ; preds = %42
  %67 = bitcast i32* %8 to i8*, !dbg !4284
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67), !dbg !4284
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4233, metadata !DIExpression()), !dbg !4284
  %68 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4284, !tbaa !4262
  %69 = or i32 %68, 16, !dbg !4284
  store volatile i32 %69, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4284, !tbaa !4262
  %70 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4284, !tbaa !4262
  %71 = and i32 %70, 16, !dbg !4284
  store volatile i32 %71, i32* %8, align 4, !dbg !4284, !tbaa !4264
  %72 = load volatile i32, i32* %8, align 4, !dbg !4284, !tbaa !4264
  %73 = bitcast i32* %8 to i8*, !dbg !4285
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73), !dbg !4285
  br label %90, !dbg !4286

74:                                               ; preds = %42
  %75 = bitcast i32* %9 to i8*, !dbg !4287
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75), !dbg !4287
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4237, metadata !DIExpression()), !dbg !4287
  %76 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4287, !tbaa !4262
  %77 = or i32 %76, 32, !dbg !4287
  store volatile i32 %77, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4287, !tbaa !4262
  %78 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4287, !tbaa !4262
  %79 = and i32 %78, 32, !dbg !4287
  store volatile i32 %79, i32* %9, align 4, !dbg !4287, !tbaa !4264
  %80 = load volatile i32, i32* %9, align 4, !dbg !4287, !tbaa !4264
  %81 = bitcast i32* %9 to i8*, !dbg !4288
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %81), !dbg !4288
  br label %90, !dbg !4289

82:                                               ; preds = %42
  %83 = bitcast i32* %10 to i8*, !dbg !4290
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83), !dbg !4290
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4241, metadata !DIExpression()), !dbg !4290
  %84 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4290, !tbaa !4262
  %85 = or i32 %84, 64, !dbg !4290
  store volatile i32 %85, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4290, !tbaa !4262
  %86 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4290, !tbaa !4262
  %87 = and i32 %86, 64, !dbg !4290
  store volatile i32 %87, i32* %10, align 4, !dbg !4290, !tbaa !4264
  %88 = load volatile i32, i32* %10, align 4, !dbg !4290, !tbaa !4264
  %89 = bitcast i32* %10 to i8*, !dbg !4291
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89), !dbg !4291
  br label %90, !dbg !4292

90:                                               ; preds = %42, %58, %74, %82, %66, %50
  %91 = bitcast %struct.DMA_Channel_TypeDef* %11 to i8*, !dbg !4293
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #26, !dbg !4293
  call void @llvm.dbg.declare(metadata %struct.DMA_Channel_TypeDef* %11, metadata !4245, metadata !DIExpression()), !dbg !4294
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(16) %91, i8 0, i32 16, i1 false), !dbg !4294
  %92 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 4, !dbg !4295
  %93 = load i16, i16* %92, align 8, !dbg !4295, !tbaa !4296
  %94 = zext i16 %93 to i32, !dbg !4295
  %95 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %11, i32 0, i32 0, !dbg !4297
  store i32 %94, i32* %95, align 4, !dbg !4298, !tbaa !4299
  %96 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %11, i32 0, i32 1, !dbg !4301
  store i32 2, i32* %96, align 4, !dbg !4302, !tbaa !4303
  %97 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %11, i32 0, i32 2, !dbg !4304
  store i32 0, i32* %97, align 4, !dbg !4305, !tbaa !4306
  %98 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %11, i32 0, i32 3, !dbg !4307
  store i32 3, i32* %98, align 4, !dbg !4308, !tbaa !4309
  call void @HAL_GPIO_Init(%struct.USART_TypeDef* noundef %46, %struct.DMA_Channel_TypeDef* noundef nonnull %11) #26, !dbg !4310
  %99 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 5, !dbg !4311
  %100 = load i16, i16* %99, align 2, !dbg !4311, !tbaa !4312
  %101 = zext i16 %100 to i32, !dbg !4311
  store i32 %101, i32* %95, align 4, !dbg !4313, !tbaa !4299
  store i32 0, i32* %96, align 4, !dbg !4314, !tbaa !4303
  %102 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %45, align 4, !dbg !4315, !tbaa !4276
  call void @HAL_GPIO_Init(%struct.USART_TypeDef* noundef %102, %struct.DMA_Channel_TypeDef* noundef nonnull %11) #26, !dbg !4316
  %103 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 2, !dbg !4317
  store i32 0, i32* %103, align 8, !dbg !4318, !tbaa !4319
  %104 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 3, !dbg !4320
  store i32 0, i32* %104, align 4, !dbg !4321, !tbaa !4322
  %105 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 4, !dbg !4323
  store i32 12, i32* %105, align 8, !dbg !4324, !tbaa !4325
  %106 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 5, !dbg !4326
  store i32 0, i32* %106, align 4, !dbg !4327, !tbaa !4328
  %107 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 6, !dbg !4329
  store i32 0, i32* %107, align 8, !dbg !4330, !tbaa !4331
  %108 = call i32 @HAL_UART_Init(%struct.__UART_HandleTypeDef* noundef nonnull %12) #26, !dbg !4332
  %109 = icmp eq i32 %108, 0, !dbg !4334
  br i1 %109, label %110, label %122, !dbg !4335

110:                                              ; preds = %90
  %111 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !4336
  %112 = load i32, i32* %111, align 4, !dbg !4336, !tbaa !4274
  %113 = zext i8 %1 to i32, !dbg !4337
  call fastcc void @_ZL18__NVIC_SetPriority9IRQn_Typej(i32 noundef %112, i32 noundef %113), !dbg !4338
  %114 = load i32, i32* %111, align 4, !dbg !4339, !tbaa !4274
  call fastcc void @_ZL16__NVIC_EnableIRQ9IRQn_Type(i32 noundef %114), !dbg !4340
  %115 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %13, align 4, !dbg !4341, !tbaa !4197
  %116 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %115, i32 0, i32 3, !dbg !4341
  %117 = load volatile i32, i32* %116, align 4, !dbg !4341, !tbaa !4342
  %118 = or i32 %117, 32, !dbg !4341
  store volatile i32 %118, i32* %116, align 4, !dbg !4341, !tbaa !4342
  %119 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !4343
  %120 = load i8, i8* %119, align 8, !dbg !4344, !tbaa !4169
  %121 = or i8 %120, 1, !dbg !4344
  store i8 %121, i8* %119, align 8, !dbg !4344, !tbaa !4169
  br label %122, !dbg !4345

122:                                              ; preds = %90, %110
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #26, !dbg !4346
  br label %123

123:                                              ; preds = %2, %122
  %124 = phi i1 [ %109, %122 ], [ false, %2 ], !dbg !4253
  ret i1 %124, !dbg !4346
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart6isOpenEv(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull readonly align 8 dereferenceable(192) %0) unnamed_addr #16 align 2 !dbg !4347 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4349, metadata !DIExpression()), !dbg !4350
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !4351
  %3 = load i8, i8* %2, align 8, !dbg !4351, !tbaa !4169
  %4 = and i8 %3, 1, !dbg !4352
  %5 = icmp ne i8 %4, 0, !dbg !4351
  ret i1 %5, !dbg !4353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart15setSerialConfigEjh(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull writeonly align 8 dereferenceable(192) %0, i32 noundef %1, i8 noundef zeroext %2) unnamed_addr #11 align 2 !dbg !4354 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4356, metadata !DIExpression()), !dbg !4359
  call void @llvm.dbg.value(metadata i32 %1, metadata !4357, metadata !DIExpression()), !dbg !4359
  call void @llvm.dbg.value(metadata i8 %2, metadata !4358, metadata !DIExpression()), !dbg !4359
  %4 = add i32 %1, -4500001, !dbg !4360
  %5 = icmp ult i32 %4, -4499951, !dbg !4360
  br i1 %5, label %12, label %6, !dbg !4360

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 0, !dbg !4362
  store i32 %1, i32* %7, align 8, !dbg !4363, !tbaa !4364
  switch i8 %2, label %12 [
    i8 8, label %9
    i8 9, label %8
  ], !dbg !4365

8:                                                ; preds = %6
  br label %9, !dbg !4366

9:                                                ; preds = %6, %8
  %10 = phi i32 [ 4096, %8 ], [ 0, %6 ]
  %11 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 1, !dbg !4368
  store i32 %10, i32* %11, align 4, !dbg !4368, !tbaa !4369
  br label %12, !dbg !4370

12:                                               ; preds = %9, %6, %3
  %13 = phi i1 [ false, %3 ], [ false, %6 ], [ true, %9 ], !dbg !4359
  ret i1 %13, !dbg !4370
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada9Stm32Uart5closeEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #4 align 2 !dbg !4371 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4373, metadata !DIExpression()), !dbg !4374
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !4375
  %3 = load i32, i32* %2, align 4, !dbg !4375, !tbaa !4274
  call fastcc void @_ZL17__NVIC_DisableIRQ9IRQn_Type(i32 noundef %3), !dbg !4376
  %4 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, !dbg !4377
  %5 = call i32 @HAL_UART_DeInit(%struct.__UART_HandleTypeDef* noundef nonnull %4) #26, !dbg !4378
  %6 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 3, !dbg !4379
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !4379, !tbaa !4276
  %8 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 4, !dbg !4380
  %9 = load i16, i16* %8, align 8, !dbg !4380, !tbaa !4296
  %10 = zext i16 %9 to i32, !dbg !4380
  call void @HAL_GPIO_DeInit(%struct.USART_TypeDef* noundef %7, i32 noundef %10) #26, !dbg !4381
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !4382, !tbaa !4276
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 5, !dbg !4383
  %13 = load i16, i16* %12, align 2, !dbg !4383, !tbaa !4312
  %14 = zext i16 %13 to i32, !dbg !4383
  call void @HAL_GPIO_DeInit(%struct.USART_TypeDef* noundef %11, i32 noundef %14) #26, !dbg !4384
  %15 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !4385
  %16 = load i8, i8* %15, align 8, !dbg !4386, !tbaa !4169
  %17 = and i8 %16, -2, !dbg !4386
  store i8 %17, i8* %15, align 8, !dbg !4386, !tbaa !4169
  ret void, !dbg !4387
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define dso_local noalias noundef i8* @_ZNK6Cicada9Stm32Uart8portNameEv(%"class.Cicada::Stm32Uart"* nocapture nonnull readnone align 8 %0) unnamed_addr #10 align 2 !dbg !4388 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* undef, metadata !4390, metadata !DIExpression()), !dbg !4391
  ret i8* null, !dbg !4392
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart7rawReadERh(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull readonly align 8 dereferenceable(192) %0, i8* nocapture noundef nonnull writeonly align 1 dereferenceable(1) %1) unnamed_addr #15 align 2 !dbg !4393 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4395, metadata !DIExpression()), !dbg !4397
  call void @llvm.dbg.value(metadata i8* %1, metadata !4396, metadata !DIExpression()), !dbg !4397
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !4398
  %4 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %3, align 4, !dbg !4398, !tbaa !4197
  %5 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %4, i32 0, i32 0, !dbg !4398
  %6 = load volatile i32, i32* %5, align 4, !dbg !4398, !tbaa !4198
  %7 = and i32 %6, 32, !dbg !4398
  %8 = icmp eq i32 %7, 0, !dbg !4398
  br i1 %8, label %9, label %13, !dbg !4400

9:                                                ; preds = %2
  %10 = load volatile i32, i32* %5, align 4, !dbg !4401, !tbaa !4198
  %11 = and i32 %10, 8, !dbg !4401
  %12 = icmp eq i32 %11, 0, !dbg !4401
  br i1 %12, label %17, label %13, !dbg !4402

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %4, i32 0, i32 1, !dbg !4403
  %15 = load volatile i32, i32* %14, align 4, !dbg !4403, !tbaa !4405
  %16 = trunc i32 %15 to i8, !dbg !4403
  store i8 %16, i8* %1, align 1, !dbg !4406, !tbaa !1468
  br label %17, !dbg !4407

17:                                               ; preds = %9, %13
  %18 = phi i1 [ true, %13 ], [ false, %9 ], !dbg !4397
  ret i1 %18, !dbg !4408
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart8rawWriteEh(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull readonly align 8 dereferenceable(192) %0, i8 noundef zeroext %1) unnamed_addr #23 align 2 !dbg !4409 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4411, metadata !DIExpression()), !dbg !4413
  call void @llvm.dbg.value(metadata i8 %1, metadata !4412, metadata !DIExpression()), !dbg !4413
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !4414
  %4 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %3, align 4, !dbg !4414, !tbaa !4197
  %5 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %4, i32 0, i32 0, !dbg !4414
  %6 = load volatile i32, i32* %5, align 4, !dbg !4414, !tbaa !4198
  %7 = and i32 %6, 128, !dbg !4414
  %8 = icmp eq i32 %7, 0, !dbg !4414
  br i1 %8, label %12, label %9, !dbg !4416

9:                                                ; preds = %2
  %10 = zext i8 %1 to i32, !dbg !4417
  %11 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %4, i32 0, i32 1, !dbg !4417
  store volatile i32 %10, i32* %11, align 4, !dbg !4417, !tbaa !4405
  br label %12, !dbg !4419

12:                                               ; preds = %2, %9
  %13 = xor i1 %8, true, !dbg !4420
  ret i1 %13, !dbg !4420
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind
define dso_local void @_ZN6Cicada9Stm32Uart13startTransmitEv(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull readonly align 8 dereferenceable(192) %0) unnamed_addr #23 align 2 !dbg !4421 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4423, metadata !DIExpression()), !dbg !4424
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !4425
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !4425, !tbaa !4197
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !4425
  %5 = load volatile i32, i32* %4, align 4, !dbg !4425, !tbaa !4342
  %6 = or i32 %5, 128, !dbg !4425
  store volatile i32 %6, i32* %4, align 4, !dbg !4425, !tbaa !4342
  ret void, !dbg !4426
}

; Function Attrs: noinline nounwind
define dso_local noalias noundef %"class.Cicada::Stm32Uart"* @_ZThn4_N6Cicada9Stm32UartD1Ev(%"class.Cicada::Stm32Uart"* noundef %0) unnamed_addr #3 align 2 !dbg !4427 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !4429
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !4429
  %4 = tail call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD2Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3) #26, !dbg !4429
  ret %"class.Cicada::Stm32Uart"* undef, !dbg !4429
}

; Function Attrs: noinline nounwind
define dso_local void @_ZThn4_N6Cicada9Stm32UartD0Ev(%"class.Cicada::Stm32Uart"* noundef %0) unnamed_addr #3 align 2 !dbg !4430 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !4431
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !4431
  tail call void @_ZN6Cicada9Stm32UartD0Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3) #26, !dbg !4431
  ret void, !dbg !4431
}

; Function Attrs: noinline nounwind
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef %0) unnamed_addr #3 align 2 !dbg !4432 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !4433
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !4433
  %4 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3), !dbg !4433
  ret i1 %4, !dbg !4433
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart6isOpenEv(%"class.Cicada::Stm32Uart"* nocapture noundef readonly %0) unnamed_addr #16 align 2 !dbg !4434 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !4435
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !4435
  %4 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart6isOpenEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3), !dbg !4435
  ret i1 %4, !dbg !4435
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart15setSerialConfigEjh(%"class.Cicada::Stm32Uart"* nocapture noundef writeonly %0, i32 noundef %1, i8 noundef zeroext %2) unnamed_addr #11 align 2 !dbg !4436 {
  %4 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !4437
  %5 = bitcast i32* %4 to %"class.Cicada::Stm32Uart"*, !dbg !4437
  %6 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart15setSerialConfigEjh(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %5, i32 noundef %1, i8 noundef zeroext %2), !dbg !4437
  ret i1 %6, !dbg !4437
}

; Function Attrs: noinline nounwind
define dso_local void @_ZThn4_N6Cicada9Stm32Uart5closeEv(%"class.Cicada::Stm32Uart"* noundef %0) unnamed_addr #3 align 2 !dbg !4438 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !4439
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !4439
  tail call void @_ZN6Cicada9Stm32Uart5closeEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3), !dbg !4439
  ret void, !dbg !4439
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define dso_local noalias noundef i8* @_ZThn4_NK6Cicada9Stm32Uart8portNameEv(%"class.Cicada::Stm32Uart"* nocapture noundef readnone %0) unnamed_addr #10 align 2 !dbg !4440 {
  ret i8* null, !dbg !4441
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart7rawReadERh(%"class.Cicada::Stm32Uart"* nocapture noundef readonly %0, i8* nocapture noundef nonnull writeonly align 1 dereferenceable(1) %1) unnamed_addr #15 align 2 !dbg !4442 {
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !4443
  %4 = bitcast i32* %3 to %"class.Cicada::Stm32Uart"*, !dbg !4443
  %5 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart7rawReadERh(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %4, i8* noundef nonnull align 1 dereferenceable(1) %1), !dbg !4443
  ret i1 %5, !dbg !4443
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart8rawWriteEh(%"class.Cicada::Stm32Uart"* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #14 align 2 !dbg !4444 {
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !4445
  %4 = bitcast i32* %3 to %"class.Cicada::Stm32Uart"*, !dbg !4445
  %5 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart8rawWriteEh(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %4, i8 noundef zeroext %1), !dbg !4445
  ret i1 %5, !dbg !4445
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @_ZThn4_N6Cicada9Stm32Uart13startTransmitEv(%"class.Cicada::Stm32Uart"* nocapture noundef readonly %0) unnamed_addr #14 align 2 !dbg !4446 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !4447
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !4447
  tail call void @_ZN6Cicada9Stm32Uart13startTransmitEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3), !dbg !4447
  ret void, !dbg !4447
}

; Function Attrs: mustprogress noinline nounwind
define internal fastcc void @_ZL17__NVIC_DisableIRQ9IRQn_Type(i32 noundef %0) unnamed_addr #4 !dbg !4448 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4452, metadata !DIExpression()), !dbg !4453
  %2 = icmp sgt i32 %0, -1, !dbg !4454
  br i1 %2, label %3, label %8, !dbg !4456

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !4457
  %5 = shl i32 1, %4, !dbg !4459
  %6 = lshr i32 %0, 5, !dbg !4460
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !4461
  store volatile i32 %5, i32* %7, align 4, !dbg !4462, !tbaa !4264
  call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !4463, !srcloc !4466
  call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !4467, !srcloc !4470
  br label %8, !dbg !4471

8:                                                ; preds = %3, %1
  ret void, !dbg !4472
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind
define internal fastcc void @_ZL18__NVIC_SetPriority9IRQn_Typej(i32 noundef %0, i32 noundef %1) unnamed_addr #23 !dbg !4473 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4477, metadata !DIExpression()), !dbg !4479
  call void @llvm.dbg.value(metadata i32 %1, metadata !4478, metadata !DIExpression()), !dbg !4479
  %3 = trunc i32 %1 to i8, !dbg !4480
  %4 = shl i8 %3, 4, !dbg !4480
  %5 = and i32 %0, 15, !dbg !4482
  %6 = add nsw i32 %5, -4, !dbg !4482
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !4482
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !4482
  %9 = icmp slt i32 %0, 0, !dbg !4482
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !4482
  store volatile i8 %4, i8* %10, align 1, !dbg !4480, !tbaa !1468
  ret void, !dbg !4483
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind
define internal fastcc void @_ZL16__NVIC_EnableIRQ9IRQn_Type(i32 noundef %0) unnamed_addr #23 !dbg !4484 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4486, metadata !DIExpression()), !dbg !4487
  %2 = icmp sgt i32 %0, -1, !dbg !4488
  br i1 %2, label %3, label %8, !dbg !4490

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !4491
  %5 = shl i32 1, %4, !dbg !4493
  %6 = lshr i32 %0, 5, !dbg !4494
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !4495
  store volatile i32 %5, i32* %7, align 4, !dbg !4496, !tbaa !4264
  br label %8, !dbg !4497

8:                                                ; preds = %3, %1
  ret void, !dbg !4498
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !4499 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !4501, metadata !DIExpression()), !dbg !4503
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 4, !dbg !4504
  %3 = load i64, i64* %2, align 8, !dbg !4504, !tbaa !4505
  ret i64 %3, !dbg !4508
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialD2Ev(%"class.Cicada::BufferedSerial"* noundef nonnull returned align 8 dereferenceable(104) %0) unnamed_addr #3 comdat align 2 !dbg !4509 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4515, metadata !DIExpression()), !dbg !4517
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !4518
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer"*, !dbg !4518
  %4 = call noundef %"class.Cicada::CircularBuffer"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(46) %3) #26, !dbg !4518
  %5 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !4518
  %6 = bitcast %"class.Cicada::LineCircularBuffer"* %5 to %"class.Cicada::CircularBuffer"*, !dbg !4518
  %7 = call noundef %"class.Cicada::CircularBuffer"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(46) %6) #26, !dbg !4518
  %8 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, !dbg !4518
  %9 = call noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialD2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %8) #26, !dbg !4518
  ret %"class.Cicada::BufferedSerial"* %0, !dbg !4520
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::CircularBuffer"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer"* noundef nonnull returned align 8 dereferenceable(44) %0) unnamed_addr #3 comdat align 2 !dbg !4521 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !4523, metadata !DIExpression()), !dbg !4525
  ret %"class.Cicada::CircularBuffer"* %0, !dbg !4526
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialD2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull returned align 4 dereferenceable(8) %0) unnamed_addr #3 comdat align 2 !dbg !4527 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %0, metadata !4529, metadata !DIExpression()), !dbg !4531
  %2 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 1, !dbg !4532
  %3 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada7ISerialD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %2) #26, !dbg !4532
  %4 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 0, !dbg !4532
  %5 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %4) #26, !dbg !4532
  ret %"class.Cicada::IBufferedSerial"* %0, !dbg !4534
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada7ISerialD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #3 comdat align 2 !dbg !4535 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !4537, metadata !DIExpression()), !dbg !4539
  ret %"class.Cicada::ICommDevice"* %0, !dbg !4540
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #3 comdat align 2 !dbg !4541 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !4543, metadata !DIExpression()), !dbg !4545
  ret %"class.Cicada::ICommDevice"* %0, !dbg !4546
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartC2EPcS1_yyP13USART_TypeDefP12GPIO_TypeDeftt(%"class.Cicada::Stm32Uart"* noundef nonnull returned align 8 dereferenceable(192) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4, %struct.USART_TypeDef* noundef %5, %struct.USART_TypeDef* noundef %6, i16 noundef zeroext %7, i16 noundef zeroext %8) unnamed_addr #3 align 2 !dbg !4547 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4549, metadata !DIExpression()), !dbg !4558
  call void @llvm.dbg.value(metadata i8* %1, metadata !4550, metadata !DIExpression()), !dbg !4558
  call void @llvm.dbg.value(metadata i8* %2, metadata !4551, metadata !DIExpression()), !dbg !4558
  call void @llvm.dbg.value(metadata i64 %3, metadata !4552, metadata !DIExpression()), !dbg !4558
  call void @llvm.dbg.value(metadata i64 %4, metadata !4553, metadata !DIExpression()), !dbg !4558
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %5, metadata !4554, metadata !DIExpression()), !dbg !4558
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %6, metadata !4555, metadata !DIExpression()), !dbg !4558
  call void @llvm.dbg.value(metadata i16 %7, metadata !4556, metadata !DIExpression()), !dbg !4558
  call void @llvm.dbg.value(metadata i16 %8, metadata !4557, metadata !DIExpression()), !dbg !4558
  %10 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, !dbg !4559
  %11 = call noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialC2EPcS1_yy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %10, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4) #26, !dbg !4560
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4559
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %12, align 8, !dbg !4559, !tbaa !1432
  %13 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !4559
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %13, align 4, !dbg !4559, !tbaa !1432
  %14 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !4561
  store i8 0, i8* %14, align 8, !dbg !4561, !tbaa !4169
  %15 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, !dbg !4562
  %16 = bitcast %struct.__UART_HandleTypeDef* %15 to i8*, !dbg !4562
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(72) %16, i8 0, i32 72, i1 false), !dbg !4562
  %17 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 3, !dbg !4563
  store %struct.USART_TypeDef* %6, %struct.USART_TypeDef** %17, align 4, !dbg !4563, !tbaa !4276
  %18 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 4, !dbg !4564
  store i16 %7, i16* %18, align 8, !dbg !4564, !tbaa !4296
  %19 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 5, !dbg !4565
  store i16 %8, i16* %19, align 2, !dbg !4565, !tbaa !4312
  %20 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !4566
  store i32 0, i32* %20, align 4, !dbg !4566, !tbaa !4274
  call void @_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, %struct.USART_TypeDef* noundef %5), !dbg !4567
  ret %"class.Cicada::Stm32Uart"* %0, !dbg !4569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind
define dso_local void @_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, %struct.USART_TypeDef* noundef %1) local_unnamed_addr #24 align 2 !dbg !4570 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4572, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %1, metadata !4573, metadata !DIExpression()), !dbg !4576
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !4577
  store %struct.USART_TypeDef* %1, %struct.USART_TypeDef** %3, align 4, !dbg !4578, !tbaa !4197
  %4 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 0, !dbg !4579
  store i32 115200, i32* %4, align 8, !dbg !4580, !tbaa !4364
  %5 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 1, !dbg !4581
  store i32 0, i32* %5, align 4, !dbg !4582, !tbaa !4369
  call void @llvm.dbg.value(metadata i32 0, metadata !4574, metadata !DIExpression()), !dbg !4583
  br label %9, !dbg !4584

6:                                                ; preds = %9
  %7 = add nuw nsw i32 %10, 1, !dbg !4585
  call void @llvm.dbg.value(metadata i32 %7, metadata !4574, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i32 %10, metadata !4574, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4583
  %8 = icmp eq i32 %7, 4, !dbg !4587
  br i1 %8, label %15, label %9, !dbg !4584, !llvm.loop !4588

9:                                                ; preds = %2, %6
  %10 = phi i32 [ 0, %2 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !4574, metadata !DIExpression()), !dbg !4583
  %11 = getelementptr inbounds [4 x %"class.Cicada::Stm32Uart"*], [4 x %"class.Cicada::Stm32Uart"*]* @_ZN6Cicada9Stm32Uart8instanceE, i32 0, i32 %10, !dbg !4590
  %12 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** %11, align 4, !dbg !4590, !tbaa !1340
  %13 = icmp eq %"class.Cicada::Stm32Uart"* %12, null, !dbg !4593
  call void @llvm.dbg.value(metadata i32 %10, metadata !4574, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4583
  br i1 %13, label %14, label %6, !dbg !4594

14:                                               ; preds = %9
  store %"class.Cicada::Stm32Uart"* %0, %"class.Cicada::Stm32Uart"** %11, align 4, !dbg !4595, !tbaa !1340
  br label %15, !dbg !4597

15:                                               ; preds = %6, %14
  ret void, !dbg !4598
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartC2EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt(%"class.Cicada::Stm32Uart"* noundef nonnull returned align 8 dereferenceable(192) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, %struct.USART_TypeDef* noundef %4, %struct.USART_TypeDef* noundef %5, i16 noundef zeroext %6, i16 noundef zeroext %7) unnamed_addr #3 align 2 !dbg !4599 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4601, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i8* %1, metadata !4602, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i8* %2, metadata !4603, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i64 %3, metadata !4604, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %4, metadata !4605, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %5, metadata !4606, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i16 %6, metadata !4607, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i16 %7, metadata !4608, metadata !DIExpression()), !dbg !4609
  %9 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, !dbg !4610
  %10 = call noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialC2EPcS1_y(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %9, i8* noundef %1, i8* noundef %2, i64 noundef %3) #26, !dbg !4611
  %11 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4610
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %11, align 8, !dbg !4610, !tbaa !1432
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !4610
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %12, align 4, !dbg !4610, !tbaa !1432
  %13 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !4612
  store i8 0, i8* %13, align 8, !dbg !4612, !tbaa !4169
  %14 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, !dbg !4613
  %15 = bitcast %struct.__UART_HandleTypeDef* %14 to i8*, !dbg !4613
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(72) %15, i8 0, i32 72, i1 false), !dbg !4613
  %16 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 3, !dbg !4614
  store %struct.USART_TypeDef* %5, %struct.USART_TypeDef** %16, align 4, !dbg !4614, !tbaa !4276
  %17 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 4, !dbg !4615
  store i16 %6, i16* %17, align 8, !dbg !4615, !tbaa !4296
  %18 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 5, !dbg !4616
  store i16 %7, i16* %18, align 2, !dbg !4616, !tbaa !4312
  %19 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !4617
  store i32 0, i32* %19, align 4, !dbg !4617, !tbaa !4274
  call void @_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, %struct.USART_TypeDef* noundef %4), !dbg !4618
  ret %"class.Cicada::Stm32Uart"* %0, !dbg !4620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef(%struct.USART_TypeDef* noundef readnone %0) local_unnamed_addr #16 align 2 !dbg !4621 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !4623, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 0, metadata !4624, metadata !DIExpression()), !dbg !4630
  br label %5, !dbg !4631

2:                                                ; preds = %16
  %3 = add nuw nsw i32 %7, 1, !dbg !4632
  call void @llvm.dbg.value(metadata i32 %3, metadata !4624, metadata !DIExpression()), !dbg !4630
  call void @llvm.dbg.value(metadata i32 %7, metadata !4624, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4630
  %4 = icmp eq i32 %3, 4, !dbg !4633
  br i1 %4, label %19, label %5, !dbg !4631, !llvm.loop !4634

5:                                                ; preds = %1, %2
  %6 = phi %"class.Cicada::Stm32Uart"* [ undef, %1 ], [ %18, %2 ]
  %7 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !4624, metadata !DIExpression()), !dbg !4630
  %8 = getelementptr inbounds [4 x %"class.Cicada::Stm32Uart"*], [4 x %"class.Cicada::Stm32Uart"*]* @_ZN6Cicada9Stm32Uart8instanceE, i32 0, i32 %7, !dbg !4636
  %9 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** %8, align 4, !dbg !4636, !tbaa !1340
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %9, metadata !4626, metadata !DIExpression()), !dbg !4637
  %10 = icmp eq %"class.Cicada::Stm32Uart"* %9, null, !dbg !4638
  br i1 %10, label %15, label %11, !dbg !4640

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %9, i32 0, i32 2, i32 0, !dbg !4641
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %12, align 4, !dbg !4641, !tbaa !4197
  %14 = icmp eq %struct.USART_TypeDef* %13, %0, !dbg !4642
  br i1 %14, label %16, label %15, !dbg !4643

15:                                               ; preds = %11, %5
  br label %16, !dbg !4644

16:                                               ; preds = %11, %15
  %17 = phi i1 [ true, %15 ], [ false, %11 ]
  %18 = phi %"class.Cicada::Stm32Uart"* [ %6, %15 ], [ %9, %11 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !4624, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4630
  br i1 %17, label %2, label %19

19:                                               ; preds = %2, %16
  %20 = phi %"class.Cicada::Stm32Uart"* [ null, %2 ], [ %18, %16 ]
  ret %"class.Cicada::Stm32Uart"* %20, !dbg !4645
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada9Stm32Uart15handleInterruptEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) local_unnamed_addr #4 align 2 !dbg !4646 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4648, metadata !DIExpression()), !dbg !4649
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, !dbg !4650
  call void @_ZN6Cicada14BufferedSerial23transferToAndFromBufferEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %2) #26, !dbg !4650
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 2, !dbg !4651
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %3 to %"class.Cicada::CircularBuffer"*, !dbg !4651
  %5 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !4653
  %6 = icmp eq i64 %5, 0, !dbg !4651
  br i1 %6, label %7, label %13, !dbg !4654

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !4655
  %9 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %8, align 4, !dbg !4655, !tbaa !4197
  %10 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %9, i32 0, i32 3, !dbg !4655
  %11 = load volatile i32, i32* %10, align 4, !dbg !4655, !tbaa !4342
  %12 = and i32 %11, -129, !dbg !4655
  store volatile i32 %12, i32* %10, align 4, !dbg !4655, !tbaa !4342
  br label %13, !dbg !4655

13:                                               ; preds = %7, %1
  ret void, !dbg !4656
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14BufferedSerialD0Ev(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #3 comdat align 2 !dbg !4657 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4660, metadata !DIExpression()), !dbg !4662
  call void @llvm.trap() #28, !dbg !4663
  unreachable, !dbg !4663
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZNK6Cicada14BufferedSerial14bytesAvailableEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #4 align 2 !dbg !4664 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4666, metadata !DIExpression()), !dbg !4669
  call void @_Z18eDisableInterruptsv() #26, !dbg !4670
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !4671
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer"*, !dbg !4671
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !4672
  call void @llvm.dbg.value(metadata i64 %4, metadata !4668, metadata !DIExpression()), !dbg !4669
  call void @_Z17eEnableInterruptsv() #26, !dbg !4673
  ret i64 %4, !dbg !4674
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZNK6Cicada14BufferedSerial14spaceAvailableEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #4 align 2 !dbg !4675 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4677, metadata !DIExpression()), !dbg !4679
  call void @_Z18eDisableInterruptsv() #26, !dbg !4680
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !4681
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer"*, !dbg !4681
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !4682
  call void @llvm.dbg.value(metadata i64 %4, metadata !4678, metadata !DIExpression()), !dbg !4679
  call void @_Z17eEnableInterruptsv() #26, !dbg !4683
  ret i64 %4, !dbg !4684
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial4readEPhy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8* nocapture noundef writeonly %1, i64 noundef %2) unnamed_addr #4 align 2 !dbg !4685 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4687, metadata !DIExpression()), !dbg !4692
  call void @llvm.dbg.value(metadata i8* %1, metadata !4688, metadata !DIExpression()), !dbg !4692
  call void @llvm.dbg.value(metadata i64 %2, metadata !4689, metadata !DIExpression()), !dbg !4692
  %4 = bitcast %"class.Cicada::BufferedSerial"* %0 to i64 (%"class.Cicada::BufferedSerial"*)***, !dbg !4693
  %5 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %4, align 8, !dbg !4693, !tbaa !1432
  %6 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %5, i32 2, !dbg !4693
  %7 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %6, align 4, !dbg !4693
  %8 = call noundef i64 %7(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #26, !dbg !4693
  call void @llvm.dbg.value(metadata i64 %8, metadata !4690, metadata !DIExpression()), !dbg !4692
  %9 = icmp ult i64 %8, %2, !dbg !4694
  %10 = select i1 %9, i64 %8, i64 %2, !dbg !4696
  call void @llvm.dbg.value(metadata i64 %10, metadata !4689, metadata !DIExpression()), !dbg !4692
  call void @llvm.dbg.value(metadata i64 0, metadata !4691, metadata !DIExpression()), !dbg !4692
  %11 = icmp eq i64 %10, 0, !dbg !4697
  br i1 %11, label %24, label %12, !dbg !4698

12:                                               ; preds = %3
  %13 = bitcast %"class.Cicada::BufferedSerial"* %0 to i8 (%"class.Cicada::BufferedSerial"*)***
  br label %14, !dbg !4698

14:                                               ; preds = %12, %14
  %15 = phi i64 [ 0, %12 ], [ %20, %14 ]
  call void @llvm.dbg.value(metadata i64 %15, metadata !4691, metadata !DIExpression()), !dbg !4692
  %16 = load i8 (%"class.Cicada::BufferedSerial"*)**, i8 (%"class.Cicada::BufferedSerial"*)*** %13, align 8, !dbg !4699, !tbaa !1432
  %17 = getelementptr inbounds i8 (%"class.Cicada::BufferedSerial"*)*, i8 (%"class.Cicada::BufferedSerial"*)** %16, i32 7, !dbg !4699
  %18 = load i8 (%"class.Cicada::BufferedSerial"*)*, i8 (%"class.Cicada::BufferedSerial"*)** %17, align 4, !dbg !4699
  %19 = call noundef zeroext i8 %18(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #26, !dbg !4699
  %20 = add nuw i64 %15, 1, !dbg !4701
  call void @llvm.dbg.value(metadata i64 %20, metadata !4691, metadata !DIExpression()), !dbg !4692
  %21 = trunc i64 %15 to i32, !dbg !4702
  %22 = getelementptr inbounds i8, i8* %1, i32 %21, !dbg !4702
  store i8 %19, i8* %22, align 1, !dbg !4703, !tbaa !1468
  %23 = icmp ult i64 %20, %10, !dbg !4697
  br i1 %23, label %14, label %24, !dbg !4698, !llvm.loop !4704

24:                                               ; preds = %14, %3
  %25 = phi i64 [ 0, %3 ], [ %20, %14 ], !dbg !4692
  ret i64 %25, !dbg !4706
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial5writeEPKhy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8* nocapture noundef readonly %1, i64 noundef %2) unnamed_addr #4 align 2 !dbg !4707 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4709, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i8* %1, metadata !4710, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i64 %2, metadata !4711, metadata !DIExpression()), !dbg !4714
  %4 = bitcast %"class.Cicada::BufferedSerial"* %0 to i64 (%"class.Cicada::BufferedSerial"*)***, !dbg !4715
  %5 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %4, align 8, !dbg !4715, !tbaa !1432
  %6 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %5, i32 3, !dbg !4715
  %7 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %6, align 4, !dbg !4715
  %8 = call noundef i64 %7(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #26, !dbg !4715
  call void @llvm.dbg.value(metadata i64 %8, metadata !4712, metadata !DIExpression()), !dbg !4714
  %9 = icmp ult i64 %8, %2, !dbg !4716
  %10 = select i1 %9, i64 %8, i64 %2, !dbg !4718
  call void @llvm.dbg.value(metadata i64 %10, metadata !4711, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i64 0, metadata !4713, metadata !DIExpression()), !dbg !4714
  %11 = icmp eq i64 %10, 0, !dbg !4719
  br i1 %11, label %19, label %12, !dbg !4720

12:                                               ; preds = %3, %12
  %13 = phi i64 [ %14, %12 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i64 %13, metadata !4713, metadata !DIExpression()), !dbg !4714
  %14 = add nuw i64 %13, 1, !dbg !4721
  call void @llvm.dbg.value(metadata i64 %14, metadata !4713, metadata !DIExpression()), !dbg !4714
  %15 = trunc i64 %13 to i32, !dbg !4723
  %16 = getelementptr inbounds i8, i8* %1, i32 %15, !dbg !4723
  %17 = load i8, i8* %16, align 1, !dbg !4723, !tbaa !1468
  call void @_ZN6Cicada14BufferedSerial12copyToBufferEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %17), !dbg !4724
  %18 = icmp ult i64 %14, %10, !dbg !4719
  br i1 %18, label %12, label %19, !dbg !4720, !llvm.loop !4725

19:                                               ; preds = %12, %3
  %20 = phi i64 [ 0, %3 ], [ %14, %12 ], !dbg !4714
  %21 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, !dbg !4727
  %22 = bitcast %"class.Cicada::ICommDevice"* %21 to void (%"class.Cicada::ICommDevice"*)***, !dbg !4727
  %23 = load void (%"class.Cicada::ICommDevice"*)**, void (%"class.Cicada::ICommDevice"*)*** %22, align 4, !dbg !4727, !tbaa !1432
  %24 = getelementptr inbounds void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %23, i32 9, !dbg !4727
  %25 = load void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %24, align 4, !dbg !4727
  call void %25(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %21) #26, !dbg !4727
  ret i64 %20, !dbg !4728
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i8 @_ZN6Cicada14BufferedSerial4readEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #4 align 2 !dbg !4729 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4731, metadata !DIExpression()), !dbg !4733
  call void @_Z18eDisableInterruptsv() #26, !dbg !4734
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !4735
  %3 = call noundef zeroext i8 @_ZN6Cicada18LineCircularBuffer4pullEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %2), !dbg !4736
  call void @llvm.dbg.value(metadata i8 %3, metadata !4732, metadata !DIExpression()), !dbg !4733
  call void @_Z17eEnableInterruptsv() #26, !dbg !4737
  ret i8 %3, !dbg !4738
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial5writeEPKh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8* nocapture noundef readonly %1) unnamed_addr #4 align 2 !dbg !4739 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4741, metadata !DIExpression()), !dbg !4745
  call void @llvm.dbg.value(metadata i8* %1, metadata !4742, metadata !DIExpression()), !dbg !4745
  %3 = bitcast %"class.Cicada::BufferedSerial"* %0 to i64 (%"class.Cicada::BufferedSerial"*)***, !dbg !4746
  %4 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %3, align 8, !dbg !4746, !tbaa !1432
  %5 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %4, i32 3, !dbg !4746
  %6 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %5, align 4, !dbg !4746
  %7 = call noundef i64 %6(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #26, !dbg !4746
  call void @llvm.dbg.value(metadata i64 %7, metadata !4743, metadata !DIExpression()), !dbg !4745
  call void @llvm.dbg.value(metadata i64 0, metadata !4744, metadata !DIExpression()), !dbg !4745
  %8 = load i8, i8* %1, align 1, !dbg !4747, !tbaa !1468
  %9 = icmp ne i8 %8, 0, !dbg !4748
  %10 = icmp ne i64 %7, 0, !dbg !4749
  %11 = and i1 %9, %10, !dbg !4749
  br i1 %11, label %12, label %22, !dbg !4750

12:                                               ; preds = %2, %12
  %13 = phi i8 [ %18, %12 ], [ %8, %2 ]
  %14 = phi i64 [ %15, %12 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i64 %14, metadata !4744, metadata !DIExpression()), !dbg !4745
  %15 = add nuw i64 %14, 1, !dbg !4751
  call void @llvm.dbg.value(metadata i64 %15, metadata !4744, metadata !DIExpression()), !dbg !4745
  call void @_ZN6Cicada14BufferedSerial12copyToBufferEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %13), !dbg !4753
  %16 = trunc i64 %15 to i32, !dbg !4747
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !4747
  %18 = load i8, i8* %17, align 1, !dbg !4747, !tbaa !1468
  %19 = icmp ne i8 %18, 0, !dbg !4748
  %20 = icmp ult i64 %15, %7, !dbg !4749
  %21 = select i1 %19, i1 %20, i1 false, !dbg !4749
  br i1 %21, label %12, label %22, !dbg !4750, !llvm.loop !4754

22:                                               ; preds = %12, %2
  %23 = phi i64 [ 0, %2 ], [ %15, %12 ], !dbg !4745
  %24 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, !dbg !4756
  %25 = bitcast %"class.Cicada::ICommDevice"* %24 to void (%"class.Cicada::ICommDevice"*)***, !dbg !4756
  %26 = load void (%"class.Cicada::ICommDevice"*)**, void (%"class.Cicada::ICommDevice"*)*** %25, align 4, !dbg !4756, !tbaa !1432
  %27 = getelementptr inbounds void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %26, i32 9, !dbg !4756
  %28 = load void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %27, align 4, !dbg !4756
  call void %28(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %24) #26, !dbg !4756
  ret i64 %23, !dbg !4757
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada14BufferedSerial5writeEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %1) unnamed_addr #4 align 2 !dbg !4758 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4760, metadata !DIExpression()), !dbg !4762
  call void @llvm.dbg.value(metadata i8 %1, metadata !4761, metadata !DIExpression()), !dbg !4762
  call void @_ZN6Cicada14BufferedSerial12copyToBufferEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %1), !dbg !4763
  %3 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, !dbg !4764
  %4 = bitcast %"class.Cicada::ICommDevice"* %3 to void (%"class.Cicada::ICommDevice"*)***, !dbg !4764
  %5 = load void (%"class.Cicada::ICommDevice"*)**, void (%"class.Cicada::ICommDevice"*)*** %4, align 4, !dbg !4764, !tbaa !1432
  %6 = getelementptr inbounds void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %5, i32 9, !dbg !4764
  %7 = load void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %6, align 4, !dbg !4764
  call void %7(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %3) #26, !dbg !4764
  ret void, !dbg !4765
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZNK6Cicada14BufferedSerial11canReadLineEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #4 align 2 !dbg !4766 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4768, metadata !DIExpression()), !dbg !4770
  call void @_Z18eDisableInterruptsv() #26, !dbg !4771
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !4772
  %3 = call noundef zeroext i16 @_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %2), !dbg !4773
  call void @llvm.dbg.value(metadata i16 %3, metadata !4769, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4770
  call void @_Z17eEnableInterruptsv() #26, !dbg !4774
  %4 = icmp ne i16 %3, 0, !dbg !4775
  ret i1 %4, !dbg !4776
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial8readLineEPhy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8* nocapture noundef writeonly %1, i64 noundef %2) unnamed_addr #4 align 2 !dbg !4777 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4779, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.value(metadata i8* %1, metadata !4780, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.value(metadata i64 %2, metadata !4781, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.value(metadata i64 0, metadata !4782, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.value(metadata i8 0, metadata !4783, metadata !DIExpression()), !dbg !4784
  %4 = icmp eq i64 %2, 0, !dbg !4785
  br i1 %4, label %39, label %5, !dbg !4787

5:                                                ; preds = %3
  %6 = bitcast %"class.Cicada::BufferedSerial"* %0 to i64 (%"class.Cicada::BufferedSerial"*)***
  call void @llvm.dbg.value(metadata i8 0, metadata !4783, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.value(metadata i64 0, metadata !4782, metadata !DIExpression()), !dbg !4784
  %7 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %6, align 8, !dbg !4788, !tbaa !1432
  %8 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %7, i32 2, !dbg !4788
  %9 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %8, align 4, !dbg !4788
  %10 = call noundef i64 %9(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #26, !dbg !4788
  %11 = icmp eq i64 %10, 0, !dbg !4788
  br i1 %11, label %35, label %12, !dbg !4789

12:                                               ; preds = %5
  %13 = bitcast %"class.Cicada::BufferedSerial"* %0 to i8 (%"class.Cicada::BufferedSerial"*)***
  %14 = add i64 %2, -1
  br label %15, !dbg !4789

15:                                               ; preds = %12, %26
  %16 = phi i64 [ 0, %12 ], [ %27, %26 ]
  call void @llvm.dbg.value(metadata i64 %16, metadata !4782, metadata !DIExpression()), !dbg !4784
  %17 = load i8 (%"class.Cicada::BufferedSerial"*)**, i8 (%"class.Cicada::BufferedSerial"*)*** %13, align 8, !dbg !4790, !tbaa !1432
  %18 = getelementptr inbounds i8 (%"class.Cicada::BufferedSerial"*)*, i8 (%"class.Cicada::BufferedSerial"*)** %17, i32 7, !dbg !4790
  %19 = load i8 (%"class.Cicada::BufferedSerial"*)*, i8 (%"class.Cicada::BufferedSerial"*)** %18, align 4, !dbg !4790
  %20 = call noundef zeroext i8 %19(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #26, !dbg !4790
  call void @llvm.dbg.value(metadata i8 %20, metadata !4783, metadata !DIExpression()), !dbg !4784
  %21 = icmp ult i64 %16, %14, !dbg !4792
  br i1 %21, label %22, label %26, !dbg !4794

22:                                               ; preds = %15
  %23 = add i64 %16, 1, !dbg !4795
  call void @llvm.dbg.value(metadata i64 %23, metadata !4782, metadata !DIExpression()), !dbg !4784
  %24 = trunc i64 %16 to i32, !dbg !4797
  %25 = getelementptr inbounds i8, i8* %1, i32 %24, !dbg !4797
  store i8 %20, i8* %25, align 1, !dbg !4798, !tbaa !1468
  br label %26, !dbg !4799

26:                                               ; preds = %22, %15
  %27 = phi i64 [ %23, %22 ], [ %16, %15 ], !dbg !4784
  call void @llvm.dbg.value(metadata i8 %20, metadata !4783, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.value(metadata i64 %27, metadata !4782, metadata !DIExpression()), !dbg !4784
  %28 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %6, align 8, !dbg !4788, !tbaa !1432
  %29 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %28, i32 2, !dbg !4788
  %30 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %29, align 4, !dbg !4788
  %31 = call noundef i64 %30(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #26, !dbg !4788
  %32 = icmp ne i64 %31, 0, !dbg !4788
  %33 = icmp ne i8 %20, 10, !dbg !4800
  %34 = and i1 %33, %32, !dbg !4800
  br i1 %34, label %15, label %35, !dbg !4789, !llvm.loop !4801

35:                                               ; preds = %26, %5
  %36 = phi i64 [ 0, %5 ], [ %27, %26 ], !dbg !4784
  %37 = trunc i64 %36 to i32, !dbg !4803
  %38 = getelementptr inbounds i8, i8* %1, i32 %37, !dbg !4803
  store i8 0, i8* %38, align 1, !dbg !4804, !tbaa !1468
  br label %39, !dbg !4805

39:                                               ; preds = %3, %35
  %40 = phi i64 [ %36, %35 ], [ 0, %3 ], !dbg !4784
  ret i64 %40, !dbg !4806
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #4 align 2 !dbg !4807 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4809, metadata !DIExpression()), !dbg !4810
  call void @_Z18eDisableInterruptsv() #26, !dbg !4811
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !4812
  call void @_ZN6Cicada18LineCircularBuffer5flushEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %2), !dbg !4813
  call void @_Z17eEnableInterruptsv() #26, !dbg !4814
  ret void, !dbg !4815
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial14readBufferSizeEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #4 align 2 !dbg !4816 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4818, metadata !DIExpression()), !dbg !4819
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !4820
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer"*, !dbg !4820
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE4sizeEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !4821
  ret i64 %4, !dbg !4822
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial15writeBufferSizeEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #4 align 2 !dbg !4823 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4825, metadata !DIExpression()), !dbg !4826
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !4827
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer"*, !dbg !4827
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE4sizeEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !4828
  ret i64 %4, !dbg !4829
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::BufferedSerial"* @_ZThn4_N6Cicada14BufferedSerialD1Ev(%"class.Cicada::BufferedSerial"* noundef %0) unnamed_addr #3 comdat align 2 !dbg !4830 {
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 -1, i32 2, i32 1, !dbg !4831
  %3 = bitcast i16* %2 to %"class.Cicada::BufferedSerial"*, !dbg !4831
  %4 = tail call noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialD2Ev(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %3) #26, !dbg !4831
  ret %"class.Cicada::BufferedSerial"* undef, !dbg !4831
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada14BufferedSerialD0Ev(%"class.Cicada::BufferedSerial"* noundef %0) unnamed_addr #3 comdat align 2 !dbg !4832 {
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 -1, i32 2, i32 1, !dbg !4833
  %3 = bitcast i16* %2 to %"class.Cicada::BufferedSerial"*, !dbg !4833
  tail call void @_ZN6Cicada14BufferedSerialD0Ev(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %3) #26, !dbg !4833
  ret void, !dbg !4833
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIcE4sizeEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !4834 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !4836, metadata !DIExpression()), !dbg !4837
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 5, !dbg !4838
  %3 = load i64, i64* %2, align 8, !dbg !4838, !tbaa !4839
  ret i64 %3, !dbg !4840
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada18LineCircularBuffer5flushEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) unnamed_addr #4 comdat align 2 !dbg !4841 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !4843, metadata !DIExpression()), !dbg !4845
  %2 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !4846
  store i16 0, i16* %2, align 4, !dbg !4847, !tbaa !4848
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer"*, !dbg !4850
  call void @_ZN6Cicada14CircularBufferIcE5flushEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !4850
  ret void, !dbg !4851
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIcE5flushEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !4852 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !4854, metadata !DIExpression()), !dbg !4855
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 2, !dbg !4856
  %3 = bitcast i64* %2 to i8*, !dbg !4857
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %3, i8 0, i64 24, i1 false), !dbg !4858
  ret void, !dbg !4857
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i16 @_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) local_unnamed_addr #4 comdat align 2 !dbg !4859 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !4861, metadata !DIExpression()), !dbg !4863
  %2 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !4864
  %3 = load i16, i16* %2, align 4, !dbg !4864, !tbaa !4848
  ret i16 %3, !dbg !4865
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada14BufferedSerial12copyToBufferEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %1) local_unnamed_addr #4 align 2 !dbg !4866 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4868, metadata !DIExpression()), !dbg !4870
  call void @llvm.dbg.value(metadata i8 %1, metadata !4869, metadata !DIExpression()), !dbg !4870
  call void @_Z18eDisableInterruptsv() #26, !dbg !4871
  %3 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !4872
  call void @_ZN6Cicada18LineCircularBuffer4pushEc(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %3, i8 noundef zeroext %1), !dbg !4873
  call void @_Z17eEnableInterruptsv() #26, !dbg !4874
  ret void, !dbg !4875
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada18LineCircularBuffer4pushEc(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0, i8 noundef zeroext %1) unnamed_addr #4 comdat align 2 !dbg !4876 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !4878, metadata !DIExpression()), !dbg !4880
  call void @llvm.dbg.value(metadata i8 %1, metadata !4879, metadata !DIExpression()), !dbg !4880
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer"*, !dbg !4881
  call void @_ZN6Cicada14CircularBufferIcE4pushEc(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %3, i8 noundef zeroext %1), !dbg !4881
  %4 = icmp eq i8 %1, 10, !dbg !4882
  br i1 %4, label %5, label %9, !dbg !4884

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !4885
  %7 = load i16, i16* %6, align 4, !dbg !4887, !tbaa !4848
  %8 = add i16 %7, 1, !dbg !4887
  store i16 %8, i16* %6, align 4, !dbg !4887, !tbaa !4848
  br label %9, !dbg !4888

9:                                                ; preds = %5, %2
  ret void, !dbg !4889
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIcE4pushEc(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0, i8 noundef zeroext %1) unnamed_addr #4 comdat align 2 !dbg !4890 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !4892, metadata !DIExpression()), !dbg !4894
  call void @llvm.dbg.value(metadata i8 %1, metadata !4893, metadata !DIExpression()), !dbg !4894
  %3 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 6, !dbg !4895
  %4 = load i8*, i8** %3, align 8, !dbg !4895, !tbaa !4896
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 2, !dbg !4897
  %6 = load i64, i64* %5, align 8, !dbg !4897, !tbaa !4898
  %7 = trunc i64 %6 to i32, !dbg !4895
  %8 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4895
  store i8 %1, i8* %8, align 1, !dbg !4899, !tbaa !1468
  call void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %5), !dbg !4900
  %9 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 4, !dbg !4901
  %10 = load i64, i64* %9, align 8, !dbg !4901, !tbaa !4505
  %11 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 5, !dbg !4903
  %12 = load i64, i64* %11, align 8, !dbg !4903, !tbaa !4839
  %13 = icmp ult i64 %10, %12, !dbg !4904
  br i1 %13, label %14, label %16, !dbg !4905

14:                                               ; preds = %2
  %15 = add i64 %10, 1, !dbg !4906
  store i64 %15, i64* %9, align 8, !dbg !4906, !tbaa !4505
  br label %16, !dbg !4907

16:                                               ; preds = %14, %2
  ret void, !dbg !4908
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #4 comdat align 2 !dbg !4909 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !4911, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i64* %1, metadata !4912, metadata !DIExpression()), !dbg !4913
  %3 = load i64, i64* %1, align 8, !dbg !4914, !tbaa !4915
  %4 = add i64 %3, 1, !dbg !4914
  store i64 %4, i64* %1, align 8, !dbg !4914, !tbaa !4915
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 5, !dbg !4916
  %6 = load i64, i64* %5, align 8, !dbg !4916, !tbaa !4839
  %7 = icmp ult i64 %4, %6, !dbg !4918
  %8 = select i1 %7, i64 %4, i64 0, !dbg !4919
  store i64 %8, i64* %1, align 8, !dbg !4913
  ret void, !dbg !4920
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i8 @_ZN6Cicada18LineCircularBuffer4pullEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) unnamed_addr #4 comdat align 2 !dbg !4921 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !4923, metadata !DIExpression()), !dbg !4925
  %2 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer"*, !dbg !4926
  %3 = call noundef zeroext i8 @_ZN6Cicada14CircularBufferIcE4pullEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %2), !dbg !4926
  call void @llvm.dbg.value(metadata i8 %3, metadata !4924, metadata !DIExpression()), !dbg !4925
  %4 = icmp eq i8 %3, 10, !dbg !4927
  br i1 %4, label %5, label %9, !dbg !4929

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !4930
  %7 = load i16, i16* %6, align 4, !dbg !4932, !tbaa !4848
  %8 = add i16 %7, -1, !dbg !4932
  store i16 %8, i16* %6, align 4, !dbg !4932, !tbaa !4848
  br label %9, !dbg !4933

9:                                                ; preds = %5, %1
  ret i8 %3, !dbg !4934
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i8 @_ZN6Cicada14CircularBufferIcE4pullEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !4935 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !4937, metadata !DIExpression()), !dbg !4939
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 6, !dbg !4940
  %3 = load i8*, i8** %2, align 8, !dbg !4940, !tbaa !4896
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 3, !dbg !4941
  %5 = load i64, i64* %4, align 8, !dbg !4941, !tbaa !4942
  %6 = trunc i64 %5 to i32, !dbg !4940
  %7 = getelementptr inbounds i8, i8* %3, i32 %6, !dbg !4940
  %8 = load i8, i8* %7, align 1, !dbg !4940, !tbaa !1468
  call void @llvm.dbg.value(metadata i8 %8, metadata !4938, metadata !DIExpression()), !dbg !4939
  call void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %4), !dbg !4943
  %9 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 4, !dbg !4944
  %10 = load i64, i64* %9, align 8, !dbg !4944, !tbaa !4505
  %11 = icmp eq i64 %10, 0, !dbg !4946
  br i1 %11, label %14, label %12, !dbg !4947

12:                                               ; preds = %1
  %13 = add i64 %10, -1, !dbg !4948
  store i64 %13, i64* %9, align 8, !dbg !4948, !tbaa !4505
  br label %14, !dbg !4949

14:                                               ; preds = %12, %1
  ret i8 %8, !dbg !4950
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !4951 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !4953, metadata !DIExpression()), !dbg !4954
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 5, !dbg !4955
  %3 = load i64, i64* %2, align 8, !dbg !4955, !tbaa !4839
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 4, !dbg !4956
  %5 = load i64, i64* %4, align 8, !dbg !4956, !tbaa !4505
  %6 = sub i64 %3, %5, !dbg !4957
  ret i64 %6, !dbg !4958
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialC2EPcS1_yy(%"class.Cicada::BufferedSerial"* noundef nonnull returned align 8 dereferenceable(104) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4) unnamed_addr #3 align 2 !dbg !4959 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4961, metadata !DIExpression()), !dbg !4966
  call void @llvm.dbg.value(metadata i8* %1, metadata !4962, metadata !DIExpression()), !dbg !4966
  call void @llvm.dbg.value(metadata i8* %2, metadata !4963, metadata !DIExpression()), !dbg !4966
  call void @llvm.dbg.value(metadata i64 %3, metadata !4964, metadata !DIExpression()), !dbg !4966
  call void @llvm.dbg.value(metadata i64 %4, metadata !4965, metadata !DIExpression()), !dbg !4966
  %6 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, !dbg !4967
  %7 = call noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialC2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %6) #26, !dbg !4968
  %8 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 0, i32 0, !dbg !4967
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada14BufferedSerialE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %8, align 8, !dbg !4967, !tbaa !1432
  %9 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, i32 0, !dbg !4967
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada14BufferedSerialE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %9, align 4, !dbg !4967, !tbaa !1432
  %10 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !4969
  %11 = call noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %10, i8* noundef %1, i64 noundef %3), !dbg !4969
  %12 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !4970
  %13 = call noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %12, i8* noundef %2, i64 noundef %4), !dbg !4970
  ret %"class.Cicada::BufferedSerial"* %0, !dbg !4971
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialC2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull returned align 4 dereferenceable(8) %0) unnamed_addr #3 comdat align 2 !dbg !4972 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %0, metadata !4975, metadata !DIExpression()), !dbg !4976
  %2 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 0, !dbg !4977
  %3 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %2) #26, !dbg !4977
  %4 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 1, !dbg !4977
  %5 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada7ISerialC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %4) #26, !dbg !4977
  %6 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 0, i32 0, !dbg !4977
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada15IBufferedSerialE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 4, !dbg !4977, !tbaa !1432
  %7 = getelementptr %"class.Cicada::ICommDevice", %"class.Cicada::ICommDevice"* %4, i32 0, i32 0, !dbg !4977
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada15IBufferedSerialE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %7, align 4, !dbg !4977, !tbaa !1432
  ret %"class.Cicada::IBufferedSerial"* %0, !dbg !4977
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull returned align 8 dereferenceable(46) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #3 comdat align 2 !dbg !4978 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !4980, metadata !DIExpression()), !dbg !4983
  call void @llvm.dbg.value(metadata i8* %1, metadata !4981, metadata !DIExpression()), !dbg !4983
  call void @llvm.dbg.value(metadata i64 %2, metadata !4982, metadata !DIExpression()), !dbg !4983
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer"*, !dbg !4984
  %5 = call noundef %"class.Cicada::CircularBuffer"* @_ZN6Cicada14CircularBufferIcEC2EPcy(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %4, i8* noundef %1, i64 noundef %2), !dbg !4985
  %6 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 0, i32 0, !dbg !4984
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6Cicada18LineCircularBufferE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 8, !dbg !4984, !tbaa !1432
  %7 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !4986
  store i16 0, i16* %7, align 4, !dbg !4986, !tbaa !4848
  ret %"class.Cicada::LineCircularBuffer"* %0, !dbg !4987
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::CircularBuffer"* @_ZN6Cicada14CircularBufferIcEC2EPcy(%"class.Cicada::CircularBuffer"* noundef nonnull returned align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #3 comdat align 2 !dbg !4988 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !4990, metadata !DIExpression()), !dbg !4993
  call void @llvm.dbg.value(metadata i8* %1, metadata !4991, metadata !DIExpression()), !dbg !4993
  call void @llvm.dbg.value(metadata i64 %2, metadata !4992, metadata !DIExpression()), !dbg !4993
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 0, !dbg !4994
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6Cicada14CircularBufferIcEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8, !dbg !4994, !tbaa !1432
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 2, !dbg !4995
  %6 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 5, !dbg !4996
  %7 = bitcast i64* %5 to i8*, !dbg !4996
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false), !dbg !4997
  store i64 %2, i64* %6, align 8, !dbg !4996, !tbaa !4839
  %8 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 6, !dbg !4998
  store i8* %1, i8** %8, align 8, !dbg !4998, !tbaa !4896
  ret %"class.Cicada::CircularBuffer"* %0, !dbg !4999
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada18LineCircularBufferD0Ev(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) unnamed_addr #3 comdat align 2 !dbg !5000 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !5003, metadata !DIExpression()), !dbg !5004
  %2 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer"*, !dbg !5005
  %3 = call noundef %"class.Cicada::CircularBuffer"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(46) %2) #26, !dbg !5005
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to i8*, !dbg !5005
  call void @_ZdlPv(i8* noundef %4) #27, !dbg !5005
  ret void, !dbg !5005
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada18LineCircularBuffer4pushEPKcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #4 comdat align 2 !dbg !5006 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !5008, metadata !DIExpression()), !dbg !5012
  call void @llvm.dbg.value(metadata i8* %1, metadata !5009, metadata !DIExpression()), !dbg !5012
  call void @llvm.dbg.value(metadata i64 %2, metadata !5010, metadata !DIExpression()), !dbg !5012
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer"*, !dbg !5013
  %5 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !5013
  %6 = icmp ult i64 %5, %2, !dbg !5015
  br i1 %6, label %7, label %9, !dbg !5016

7:                                                ; preds = %3
  %8 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !5017
  call void @llvm.dbg.value(metadata i64 %8, metadata !5010, metadata !DIExpression()), !dbg !5012
  br label %9, !dbg !5018

9:                                                ; preds = %7, %3
  %10 = phi i64 [ %8, %7 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %10, metadata !5010, metadata !DIExpression()), !dbg !5012
  call void @llvm.dbg.value(metadata i64 0, metadata !5011, metadata !DIExpression()), !dbg !5012
  %11 = icmp eq i64 %10, 0, !dbg !5019
  br i1 %11, label %24, label %12, !dbg !5020

12:                                               ; preds = %9
  %13 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to void (%"class.Cicada::LineCircularBuffer"*, i8)***
  br label %14, !dbg !5020

14:                                               ; preds = %12, %14
  %15 = phi i64 [ 0, %12 ], [ %16, %14 ]
  call void @llvm.dbg.value(metadata i64 %15, metadata !5011, metadata !DIExpression()), !dbg !5012
  %16 = add nuw i64 %15, 1, !dbg !5021
  call void @llvm.dbg.value(metadata i64 %16, metadata !5011, metadata !DIExpression()), !dbg !5012
  %17 = trunc i64 %15 to i32, !dbg !5023
  %18 = getelementptr inbounds i8, i8* %1, i32 %17, !dbg !5023
  %19 = load i8, i8* %18, align 1, !dbg !5023, !tbaa !1468
  %20 = load void (%"class.Cicada::LineCircularBuffer"*, i8)**, void (%"class.Cicada::LineCircularBuffer"*, i8)*** %13, align 8, !dbg !5024, !tbaa !1432
  %21 = getelementptr inbounds void (%"class.Cicada::LineCircularBuffer"*, i8)*, void (%"class.Cicada::LineCircularBuffer"*, i8)** %20, i32 3, !dbg !5024
  %22 = load void (%"class.Cicada::LineCircularBuffer"*, i8)*, void (%"class.Cicada::LineCircularBuffer"*, i8)** %21, align 4, !dbg !5024
  call void %22(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0, i8 noundef zeroext %19) #26, !dbg !5024
  %23 = icmp ult i64 %16, %10, !dbg !5019
  br i1 %23, label %14, label %24, !dbg !5020, !llvm.loop !5025

24:                                               ; preds = %14, %9
  %25 = phi i64 [ 0, %9 ], [ %10, %14 ], !dbg !5012
  ret i64 %25, !dbg !5027
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada18LineCircularBuffer4pullEPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #4 comdat align 2 !dbg !5028 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !5030, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata i8* %1, metadata !5031, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata i64 %2, metadata !5032, metadata !DIExpression()), !dbg !5034
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer"*, !dbg !5035
  %5 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !5035
  %6 = icmp ult i64 %5, %2, !dbg !5037
  br i1 %6, label %7, label %9, !dbg !5038

7:                                                ; preds = %3
  %8 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !5039
  call void @llvm.dbg.value(metadata i64 %8, metadata !5032, metadata !DIExpression()), !dbg !5034
  br label %9, !dbg !5040

9:                                                ; preds = %7, %3
  %10 = phi i64 [ %8, %7 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %10, metadata !5032, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata i64 0, metadata !5033, metadata !DIExpression()), !dbg !5034
  %11 = icmp eq i64 %10, 0, !dbg !5041
  br i1 %11, label %24, label %12, !dbg !5042

12:                                               ; preds = %9
  %13 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to i8 (%"class.Cicada::LineCircularBuffer"*)***
  br label %14, !dbg !5042

14:                                               ; preds = %12, %14
  %15 = phi i64 [ 0, %12 ], [ %20, %14 ]
  call void @llvm.dbg.value(metadata i64 %15, metadata !5033, metadata !DIExpression()), !dbg !5034
  %16 = load i8 (%"class.Cicada::LineCircularBuffer"*)**, i8 (%"class.Cicada::LineCircularBuffer"*)*** %13, align 8, !dbg !5043, !tbaa !1432
  %17 = getelementptr inbounds i8 (%"class.Cicada::LineCircularBuffer"*)*, i8 (%"class.Cicada::LineCircularBuffer"*)** %16, i32 5, !dbg !5043
  %18 = load i8 (%"class.Cicada::LineCircularBuffer"*)*, i8 (%"class.Cicada::LineCircularBuffer"*)** %17, align 4, !dbg !5043
  %19 = call noundef zeroext i8 %18(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) #26, !dbg !5043
  %20 = add nuw i64 %15, 1, !dbg !5045
  call void @llvm.dbg.value(metadata i64 %20, metadata !5033, metadata !DIExpression()), !dbg !5034
  %21 = trunc i64 %15 to i32, !dbg !5046
  %22 = getelementptr inbounds i8, i8* %1, i32 %21, !dbg !5046
  store i8 %19, i8* %22, align 1, !dbg !5047, !tbaa !1468
  %23 = icmp ult i64 %20, %10, !dbg !5041
  br i1 %23, label %14, label %24, !dbg !5042, !llvm.loop !5048

24:                                               ; preds = %14, %9
  %25 = phi i64 [ 0, %9 ], [ %10, %14 ], !dbg !5034
  ret i64 %25, !dbg !5050
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i8 @_ZN6Cicada14CircularBufferIcE4readEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !5051 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !5053, metadata !DIExpression()), !dbg !5054
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 6, !dbg !5055
  %3 = load i8*, i8** %2, align 8, !dbg !5055, !tbaa !4896
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 3, !dbg !5056
  %5 = load i64, i64* %4, align 8, !dbg !5056, !tbaa !4942
  %6 = trunc i64 %5 to i32, !dbg !5055
  %7 = getelementptr inbounds i8, i8* %3, i32 %6, !dbg !5055
  %8 = load i8, i8* %7, align 1, !dbg !5055, !tbaa !1468
  ret i8 %8, !dbg !5057
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i1 @_ZNK6Cicada14CircularBufferIcE7isEmptyEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !5058 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !5060, metadata !DIExpression()), !dbg !5061
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 4, !dbg !5062
  %3 = load i64, i64* %2, align 8, !dbg !5062, !tbaa !4505
  %4 = icmp eq i64 %3, 0, !dbg !5063
  ret i1 %4, !dbg !5064
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i1 @_ZNK6Cicada14CircularBufferIcE6isFullEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !5065 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !5067, metadata !DIExpression()), !dbg !5068
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 4, !dbg !5069
  %3 = load i64, i64* %2, align 8, !dbg !5069, !tbaa !4505
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 5, !dbg !5070
  %5 = load i64, i64* %4, align 8, !dbg !5070, !tbaa !4839
  %6 = icmp eq i64 %3, %5, !dbg !5071
  ret i1 %6, !dbg !5072
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIcED0Ev(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #3 comdat align 2 !dbg !5073 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !5075, metadata !DIExpression()), !dbg !5076
  %2 = call noundef %"class.Cicada::CircularBuffer"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) #26, !dbg !5077
  %3 = bitcast %"class.Cicada::CircularBuffer"* %0 to i8*, !dbg !5077
  call void @_ZdlPv(i8* noundef %3) #27, !dbg !5077
  ret void, !dbg !5078
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada14CircularBufferIcE4pushEPKcy(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #4 comdat align 2 !dbg !5079 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !5081, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.value(metadata i8* %1, metadata !5082, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.value(metadata i64 %2, metadata !5083, metadata !DIExpression()), !dbg !5085
  %4 = bitcast %"class.Cicada::CircularBuffer"* %0 to i64 (%"class.Cicada::CircularBuffer"*)***, !dbg !5086
  %5 = load i64 (%"class.Cicada::CircularBuffer"*)**, i64 (%"class.Cicada::CircularBuffer"*)*** %4, align 8, !dbg !5086, !tbaa !1432
  %6 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer"*)*, i64 (%"class.Cicada::CircularBuffer"*)** %5, i32 11, !dbg !5086
  %7 = load i64 (%"class.Cicada::CircularBuffer"*)*, i64 (%"class.Cicada::CircularBuffer"*)** %6, align 4, !dbg !5086
  %8 = call noundef i64 %7(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) #26, !dbg !5086
  %9 = icmp ult i64 %8, %2, !dbg !5088
  br i1 %9, label %10, label %15, !dbg !5089

10:                                               ; preds = %3
  %11 = load i64 (%"class.Cicada::CircularBuffer"*)**, i64 (%"class.Cicada::CircularBuffer"*)*** %4, align 8, !dbg !5090, !tbaa !1432
  %12 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer"*)*, i64 (%"class.Cicada::CircularBuffer"*)** %11, i32 11, !dbg !5090
  %13 = load i64 (%"class.Cicada::CircularBuffer"*)*, i64 (%"class.Cicada::CircularBuffer"*)** %12, align 4, !dbg !5090
  %14 = call noundef i64 %13(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) #26, !dbg !5090
  call void @llvm.dbg.value(metadata i64 %14, metadata !5083, metadata !DIExpression()), !dbg !5085
  br label %15, !dbg !5091

15:                                               ; preds = %10, %3
  %16 = phi i64 [ %14, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %16, metadata !5083, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.value(metadata i64 0, metadata !5084, metadata !DIExpression()), !dbg !5085
  %17 = icmp eq i64 %16, 0, !dbg !5092
  br i1 %17, label %32, label %18, !dbg !5093

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 6
  %20 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 2
  br label %21, !dbg !5093

21:                                               ; preds = %18, %21
  %22 = phi i64 [ 0, %18 ], [ %23, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !5084, metadata !DIExpression()), !dbg !5085
  %23 = add nuw i64 %22, 1, !dbg !5094
  call void @llvm.dbg.value(metadata i64 %23, metadata !5084, metadata !DIExpression()), !dbg !5085
  %24 = trunc i64 %22 to i32, !dbg !5096
  %25 = getelementptr inbounds i8, i8* %1, i32 %24, !dbg !5096
  %26 = load i8, i8* %25, align 1, !dbg !5096, !tbaa !1468
  %27 = load i8*, i8** %19, align 8, !dbg !5097, !tbaa !4896
  %28 = load i64, i64* %20, align 8, !dbg !5098, !tbaa !4898
  %29 = trunc i64 %28 to i32, !dbg !5097
  %30 = getelementptr inbounds i8, i8* %27, i32 %29, !dbg !5097
  store i8 %26, i8* %30, align 1, !dbg !5099, !tbaa !1468
  call void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %20), !dbg !5100
  %31 = icmp ult i64 %23, %16, !dbg !5092
  br i1 %31, label %21, label %32, !dbg !5093, !llvm.loop !5101

32:                                               ; preds = %21, %15
  %33 = phi i64 [ 0, %15 ], [ %16, %21 ], !dbg !5085
  %34 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 4, !dbg !5103
  %35 = load i64, i64* %34, align 8, !dbg !5104, !tbaa !4505
  %36 = add i64 %35, %33, !dbg !5104
  store i64 %36, i64* %34, align 8, !dbg !5104, !tbaa !4505
  ret i64 %33, !dbg !5105
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada14CircularBufferIcE4pullEPcy(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #4 comdat align 2 !dbg !5106 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !5108, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i8* %1, metadata !5109, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i64 %2, metadata !5110, metadata !DIExpression()), !dbg !5112
  %4 = bitcast %"class.Cicada::CircularBuffer"* %0 to i64 (%"class.Cicada::CircularBuffer"*)***, !dbg !5113
  %5 = load i64 (%"class.Cicada::CircularBuffer"*)**, i64 (%"class.Cicada::CircularBuffer"*)*** %4, align 8, !dbg !5113, !tbaa !1432
  %6 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer"*)*, i64 (%"class.Cicada::CircularBuffer"*)** %5, i32 10, !dbg !5113
  %7 = load i64 (%"class.Cicada::CircularBuffer"*)*, i64 (%"class.Cicada::CircularBuffer"*)** %6, align 4, !dbg !5113
  %8 = call noundef i64 %7(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) #26, !dbg !5113
  %9 = icmp ult i64 %8, %2, !dbg !5115
  br i1 %9, label %10, label %15, !dbg !5116

10:                                               ; preds = %3
  %11 = load i64 (%"class.Cicada::CircularBuffer"*)**, i64 (%"class.Cicada::CircularBuffer"*)*** %4, align 8, !dbg !5117, !tbaa !1432
  %12 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer"*)*, i64 (%"class.Cicada::CircularBuffer"*)** %11, i32 10, !dbg !5117
  %13 = load i64 (%"class.Cicada::CircularBuffer"*)*, i64 (%"class.Cicada::CircularBuffer"*)** %12, align 4, !dbg !5117
  %14 = call noundef i64 %13(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) #26, !dbg !5117
  call void @llvm.dbg.value(metadata i64 %14, metadata !5110, metadata !DIExpression()), !dbg !5112
  br label %15, !dbg !5118

15:                                               ; preds = %10, %3
  %16 = phi i64 [ %14, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %16, metadata !5110, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i64 0, metadata !5111, metadata !DIExpression()), !dbg !5112
  %17 = icmp eq i64 %16, 0, !dbg !5119
  br i1 %17, label %32, label %18, !dbg !5120

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 6
  %20 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 3
  br label %21, !dbg !5120

21:                                               ; preds = %18, %21
  %22 = phi i64 [ 0, %18 ], [ %28, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !5111, metadata !DIExpression()), !dbg !5112
  %23 = load i8*, i8** %19, align 8, !dbg !5121, !tbaa !4896
  %24 = load i64, i64* %20, align 8, !dbg !5123, !tbaa !4942
  %25 = trunc i64 %24 to i32, !dbg !5121
  %26 = getelementptr inbounds i8, i8* %23, i32 %25, !dbg !5121
  %27 = load i8, i8* %26, align 1, !dbg !5121, !tbaa !1468
  %28 = add nuw i64 %22, 1, !dbg !5124
  call void @llvm.dbg.value(metadata i64 %28, metadata !5111, metadata !DIExpression()), !dbg !5112
  %29 = trunc i64 %22 to i32, !dbg !5125
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !5125
  store i8 %27, i8* %30, align 1, !dbg !5126, !tbaa !1468
  call void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %20), !dbg !5127
  %31 = icmp ult i64 %28, %16, !dbg !5119
  br i1 %31, label %21, label %32, !dbg !5120, !llvm.loop !5128

32:                                               ; preds = %21, %15
  %33 = phi i64 [ 0, %15 ], [ %16, %21 ], !dbg !5112
  %34 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 4, !dbg !5130
  %35 = load i64, i64* %34, align 8, !dbg !5131, !tbaa !4505
  %36 = sub i64 %35, %33, !dbg !5131
  store i64 %36, i64* %34, align 8, !dbg !5131, !tbaa !4505
  ret i64 %33, !dbg !5132
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #3 comdat align 2 !dbg !5133 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !5136, metadata !DIExpression()), !dbg !5137
  %2 = getelementptr inbounds %"class.Cicada::ICommDevice", %"class.Cicada::ICommDevice"* %0, i32 0, i32 0, !dbg !5138
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6Cicada11ICommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %2, align 4, !dbg !5138, !tbaa !1432
  ret %"class.Cicada::ICommDevice"* %0, !dbg !5138
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada7ISerialC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #3 comdat align 2 !dbg !5139 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !5142, metadata !DIExpression()), !dbg !5143
  %2 = getelementptr inbounds %"class.Cicada::ICommDevice", %"class.Cicada::ICommDevice"* %0, i32 0, i32 0, !dbg !5144
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN6Cicada7ISerialE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %2, align 4, !dbg !5144, !tbaa !1432
  ret %"class.Cicada::ICommDevice"* %0, !dbg !5144
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada15IBufferedSerialD0Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %0) unnamed_addr #3 comdat align 2 !dbg !5145 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %0, metadata !5147, metadata !DIExpression()), !dbg !5148
  call void @llvm.trap() #28, !dbg !5149
  unreachable, !dbg !5149
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IBufferedSerial"* @_ZThn4_N6Cicada15IBufferedSerialD1Ev(%"class.Cicada::IBufferedSerial"* noundef %0) unnamed_addr #3 comdat align 2 !dbg !5150 {
  %2 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 -1, i32 1, !dbg !5151
  %3 = bitcast %"class.Cicada::ICommDevice"* %2 to %"class.Cicada::IBufferedSerial"*, !dbg !5151
  %4 = tail call noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialD2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %3) #26, !dbg !5151
  ret %"class.Cicada::IBufferedSerial"* undef, !dbg !5151
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada15IBufferedSerialD0Ev(%"class.Cicada::IBufferedSerial"* noundef %0) unnamed_addr #3 comdat align 2 !dbg !5152 {
  %2 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 -1, i32 1, !dbg !5153
  %3 = bitcast %"class.Cicada::ICommDevice"* %2 to %"class.Cicada::IBufferedSerial"*, !dbg !5153
  tail call void @_ZN6Cicada15IBufferedSerialD0Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %3) #26, !dbg !5153
  ret void, !dbg !5153
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada7ISerialD0Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %0) unnamed_addr #3 comdat align 2 !dbg !5154 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !5156, metadata !DIExpression()), !dbg !5157
  call void @llvm.trap() #28, !dbg !5158
  unreachable, !dbg !5158
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada11ICommDeviceD0Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %0) unnamed_addr #3 comdat align 2 !dbg !5159 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !5161, metadata !DIExpression()), !dbg !5162
  call void @llvm.trap() #28, !dbg !5163
  unreachable, !dbg !5163
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialC2EPcS1_y(%"class.Cicada::BufferedSerial"* noundef nonnull returned align 8 dereferenceable(104) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3) unnamed_addr #3 align 2 !dbg !5164 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !5166, metadata !DIExpression()), !dbg !5170
  call void @llvm.dbg.value(metadata i8* %1, metadata !5167, metadata !DIExpression()), !dbg !5170
  call void @llvm.dbg.value(metadata i8* %2, metadata !5168, metadata !DIExpression()), !dbg !5170
  call void @llvm.dbg.value(metadata i64 %3, metadata !5169, metadata !DIExpression()), !dbg !5170
  %5 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, !dbg !5171
  %6 = call noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialC2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %5) #26, !dbg !5172
  %7 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5171
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada14BufferedSerialE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %7, align 8, !dbg !5171, !tbaa !1432
  %8 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, i32 0, !dbg !5171
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada14BufferedSerialE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %8, align 4, !dbg !5171, !tbaa !1432
  %9 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !5173
  %10 = call noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %9, i8* noundef %1, i64 noundef %3), !dbg !5173
  %11 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !5174
  %12 = call noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %11, i8* noundef %2, i64 noundef %3), !dbg !5174
  ret %"class.Cicada::BufferedSerial"* %0, !dbg !5175
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada14BufferedSerial23transferToAndFromBufferEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) local_unnamed_addr #4 align 2 !dbg !5176 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !5178, metadata !DIExpression()), !dbg !5180
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #26, !dbg !5181
  %3 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, !dbg !5182
  %4 = bitcast %"class.Cicada::ICommDevice"* %3 to i1 (%"class.Cicada::ICommDevice"*, i8*)***, !dbg !5182
  %5 = load i1 (%"class.Cicada::ICommDevice"*, i8*)**, i1 (%"class.Cicada::ICommDevice"*, i8*)*** %4, align 4, !dbg !5182, !tbaa !1432
  %6 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*, i8*)*, i1 (%"class.Cicada::ICommDevice"*, i8*)** %5, i32 7, !dbg !5182
  %7 = load i1 (%"class.Cicada::ICommDevice"*, i8*)*, i1 (%"class.Cicada::ICommDevice"*, i8*)** %6, align 4, !dbg !5182
  call void @llvm.dbg.value(metadata i8* %2, metadata !5179, metadata !DIExpression(DW_OP_deref)), !dbg !5180
  %8 = call noundef zeroext i1 %7(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %3, i8* noundef nonnull align 1 dereferenceable(1) %2) #26, !dbg !5182
  br i1 %8, label %9, label %15, !dbg !5184

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !5185
  %11 = bitcast %"class.Cicada::LineCircularBuffer"* %10 to %"class.Cicada::CircularBuffer"*, !dbg !5185
  %12 = call noundef zeroext i1 @_ZNK6Cicada14CircularBufferIcE6isFullEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %11), !dbg !5186
  br i1 %12, label %15, label %13, !dbg !5187

13:                                               ; preds = %9
  %14 = load i8, i8* %2, align 1, !dbg !5188, !tbaa !1468
  call void @llvm.dbg.value(metadata i8 %14, metadata !5179, metadata !DIExpression()), !dbg !5180
  call void @_ZN6Cicada18LineCircularBuffer4pushEc(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %10, i8 noundef zeroext %14), !dbg !5190
  br label %15, !dbg !5191

15:                                               ; preds = %13, %9, %1
  %16 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !5192
  %17 = bitcast %"class.Cicada::LineCircularBuffer"* %16 to %"class.Cicada::CircularBuffer"*, !dbg !5192
  %18 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %17), !dbg !5194
  %19 = icmp eq i64 %18, 0, !dbg !5192
  br i1 %19, label %29, label %20, !dbg !5195

20:                                               ; preds = %15
  %21 = call noundef zeroext i8 @_ZN6Cicada14CircularBufferIcE4readEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %17), !dbg !5196
  %22 = bitcast %"class.Cicada::ICommDevice"* %3 to i1 (%"class.Cicada::ICommDevice"*, i8)***, !dbg !5199
  %23 = load i1 (%"class.Cicada::ICommDevice"*, i8)**, i1 (%"class.Cicada::ICommDevice"*, i8)*** %22, align 4, !dbg !5199, !tbaa !1432
  %24 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*, i8)*, i1 (%"class.Cicada::ICommDevice"*, i8)** %23, i32 8, !dbg !5199
  %25 = load i1 (%"class.Cicada::ICommDevice"*, i8)*, i1 (%"class.Cicada::ICommDevice"*, i8)** %24, align 4, !dbg !5199
  %26 = call noundef zeroext i1 %25(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %3, i8 noundef zeroext %21) #26, !dbg !5199
  br i1 %26, label %27, label %29, !dbg !5200

27:                                               ; preds = %20
  %28 = call noundef zeroext i8 @_ZN6Cicada18LineCircularBuffer4pullEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %16), !dbg !5201
  br label %29, !dbg !5203

29:                                               ; preds = %20, %27, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #26, !dbg !5204
  ret void, !dbg !5204
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_Z18eDisableInterruptsv() local_unnamed_addr #4 !dbg !5205 {
  call void asm sideeffect "cpsid i", "~{memory}"() #26, !dbg !5206, !srcloc !5209
  ret void, !dbg !5210
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_Z17eEnableInterruptsv() local_unnamed_addr #4 !dbg !5211 {
  call void asm sideeffect "cpsie i", "~{memory}"() #26, !dbg !5212, !srcloc !5215
  ret void, !dbg !5216
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Init(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !5217 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5221, metadata !DIExpression()), !dbg !5222
  %2 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !5223
  br i1 %2, label %27, label %3, !dbg !5225

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !5226
  %5 = load volatile i32, i32* %4, align 4, !dbg !5226, !tbaa !5228
  %6 = icmp eq i32 %5, 0, !dbg !5231
  br i1 %6, label %7, label %9, !dbg !5232

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5233
  store i32 0, i32* %8, align 4, !dbg !5235, !tbaa !5236
  call void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !5237
  br label %9, !dbg !5238

9:                                                ; preds = %7, %3
  store volatile i32 36, i32* %4, align 4, !dbg !5239, !tbaa !5228
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5240
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %10, align 4, !dbg !5240, !tbaa !5241
  %12 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %11, i32 0, i32 3, !dbg !5240
  %13 = load volatile i32, i32* %12, align 4, !dbg !5240, !tbaa !3974
  %14 = and i32 %13, -8193, !dbg !5240
  store volatile i32 %14, i32* %12, align 4, !dbg !5240, !tbaa !3974
  call fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !5242
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %10, align 4, !dbg !5243, !tbaa !5241
  %16 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 4, !dbg !5243
  %17 = load volatile i32, i32* %16, align 4, !dbg !5243, !tbaa !3857
  %18 = and i32 %17, -18433, !dbg !5243
  store volatile i32 %18, i32* %16, align 4, !dbg !5243, !tbaa !3857
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 5, !dbg !5244
  %20 = load volatile i32, i32* %19, align 4, !dbg !5244, !tbaa !3862
  %21 = and i32 %20, -43, !dbg !5244
  store volatile i32 %21, i32* %19, align 4, !dbg !5244, !tbaa !3862
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 3, !dbg !5245
  %23 = load volatile i32, i32* %22, align 4, !dbg !5245, !tbaa !3974
  %24 = or i32 %23, 8192, !dbg !5245
  store volatile i32 %24, i32* %22, align 4, !dbg !5245, !tbaa !3974
  %25 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !5246
  store volatile i32 0, i32* %25, align 4, !dbg !5247, !tbaa !5248
  store volatile i32 32, i32* %4, align 4, !dbg !5249, !tbaa !5228
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !5250
  store volatile i32 32, i32* %26, align 4, !dbg !5251, !tbaa !5252
  br label %27, !dbg !5253

27:                                               ; preds = %1, %9
  %28 = phi i32 [ 0, %9 ], [ 1, %1 ], !dbg !5222
  ret i32 %28, !dbg !5254
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !5255 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5259, metadata !DIExpression()), !dbg !5260
  ret void, !dbg !5261
}

; Function Attrs: noinline nounwind
define internal fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* nocapture noundef readonly %0) unnamed_addr #3 !dbg !5262 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5264, metadata !DIExpression()), !dbg !5267
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5268
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !5268, !tbaa !5241
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 4, !dbg !5268
  %5 = load volatile i32, i32* %4, align 4, !dbg !5268, !tbaa !3857
  %6 = and i32 %5, -12289, !dbg !5268
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 2, !dbg !5268
  %8 = load i32, i32* %7, align 4, !dbg !5268, !tbaa !5269
  %9 = or i32 %6, %8, !dbg !5268
  store volatile i32 %9, i32* %4, align 4, !dbg !5268, !tbaa !3857
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1, !dbg !5270
  %11 = load i32, i32* %10, align 4, !dbg !5270, !tbaa !5271
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3, !dbg !5272
  %13 = load i32, i32* %12, align 4, !dbg !5272, !tbaa !5273
  %14 = or i32 %13, %11, !dbg !5274
  %15 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 4, !dbg !5275
  %16 = load i32, i32* %15, align 4, !dbg !5275, !tbaa !5276
  %17 = or i32 %14, %16, !dbg !5277
  call void @llvm.dbg.value(metadata i32 %17, metadata !5265, metadata !DIExpression()), !dbg !5267
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !5278
  %19 = load volatile i32, i32* %18, align 4, !dbg !5278, !tbaa !3974
  %20 = and i32 %19, -5645, !dbg !5278
  %21 = or i32 %17, %20, !dbg !5278
  store volatile i32 %21, i32* %18, align 4, !dbg !5278, !tbaa !3974
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !5279
  %23 = load volatile i32, i32* %22, align 4, !dbg !5279, !tbaa !3862
  %24 = and i32 %23, -769, !dbg !5279
  %25 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 5, !dbg !5279
  %26 = load i32, i32* %25, align 4, !dbg !5279, !tbaa !5280
  %27 = or i32 %24, %26, !dbg !5279
  store volatile i32 %27, i32* %22, align 4, !dbg !5279, !tbaa !3862
  %28 = icmp eq %struct.USART_TypeDef* %3, inttoptr (i32 1073821696 to %struct.USART_TypeDef*), !dbg !5281
  br i1 %28, label %29, label %31, !dbg !5283

29:                                               ; preds = %1
  %30 = call i32 @HAL_RCC_GetPCLK2Freq() #26, !dbg !5284
  call void @llvm.dbg.value(metadata i32 %30, metadata !5266, metadata !DIExpression()), !dbg !5267
  br label %33, !dbg !5286

31:                                               ; preds = %1
  %32 = call i32 @HAL_RCC_GetPCLK1Freq() #26, !dbg !5287
  call void @llvm.dbg.value(metadata i32 %32, metadata !5266, metadata !DIExpression()), !dbg !5267
  br label %33

33:                                               ; preds = %31, %29
  %34 = phi i32 [ %32, %31 ], [ %30, %29 ]
  %35 = mul i32 %34, 25, !dbg !5289
  %36 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 0, !dbg !5289
  %37 = load i32, i32* %36, align 4, !dbg !5289, !tbaa !5290
  %38 = shl i32 %37, 2, !dbg !5289
  %39 = udiv i32 %35, %38, !dbg !5289
  %40 = udiv i32 %39, 100, !dbg !5289
  %41 = shl nuw nsw i32 %40, 4, !dbg !5289
  %42 = mul i32 %40, -100, !dbg !5289
  %43 = add i32 %42, %39, !dbg !5289
  %44 = shl i32 %43, 4, !dbg !5289
  %45 = add i32 %44, 50, !dbg !5289
  %46 = udiv i32 %45, 100, !dbg !5289
  %47 = and i32 %46, 240, !dbg !5289
  %48 = add nuw nsw i32 %47, %41, !dbg !5289
  %49 = and i32 %46, 15, !dbg !5289
  %50 = or i32 %48, %49, !dbg !5289
  %51 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !5289, !tbaa !5241
  %52 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %51, i32 0, i32 2, !dbg !5289
  store volatile i32 %50, i32* %52, align 4, !dbg !5289, !tbaa !3992
  ret void, !dbg !5291
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_HalfDuplex_Init(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !5292 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5294, metadata !DIExpression()), !dbg !5295
  %2 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !5296
  br i1 %2, label %29, label %3, !dbg !5298

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !5299
  %5 = load volatile i32, i32* %4, align 4, !dbg !5299, !tbaa !5228
  %6 = icmp eq i32 %5, 0, !dbg !5301
  br i1 %6, label %7, label %9, !dbg !5302

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5303
  store i32 0, i32* %8, align 4, !dbg !5305, !tbaa !5236
  call void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !5306
  br label %9, !dbg !5307

9:                                                ; preds = %7, %3
  store volatile i32 36, i32* %4, align 4, !dbg !5308, !tbaa !5228
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5309
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %10, align 4, !dbg !5309, !tbaa !5241
  %12 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %11, i32 0, i32 3, !dbg !5309
  %13 = load volatile i32, i32* %12, align 4, !dbg !5309, !tbaa !3974
  %14 = and i32 %13, -8193, !dbg !5309
  store volatile i32 %14, i32* %12, align 4, !dbg !5309, !tbaa !3974
  call fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !5310
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %10, align 4, !dbg !5311, !tbaa !5241
  %16 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 4, !dbg !5311
  %17 = load volatile i32, i32* %16, align 4, !dbg !5311, !tbaa !3857
  %18 = and i32 %17, -18433, !dbg !5311
  store volatile i32 %18, i32* %16, align 4, !dbg !5311, !tbaa !3857
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 5, !dbg !5312
  %20 = load volatile i32, i32* %19, align 4, !dbg !5312, !tbaa !3862
  %21 = and i32 %20, -35, !dbg !5312
  store volatile i32 %21, i32* %19, align 4, !dbg !5312, !tbaa !3862
  %22 = load volatile i32, i32* %19, align 4, !dbg !5313, !tbaa !3862
  %23 = or i32 %22, 8, !dbg !5313
  store volatile i32 %23, i32* %19, align 4, !dbg !5313, !tbaa !3862
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 3, !dbg !5314
  %25 = load volatile i32, i32* %24, align 4, !dbg !5314, !tbaa !3974
  %26 = or i32 %25, 8192, !dbg !5314
  store volatile i32 %26, i32* %24, align 4, !dbg !5314, !tbaa !3974
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !5315
  store volatile i32 0, i32* %27, align 4, !dbg !5316, !tbaa !5248
  store volatile i32 32, i32* %4, align 4, !dbg !5317, !tbaa !5228
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !5318
  store volatile i32 32, i32* %28, align 4, !dbg !5319, !tbaa !5252
  br label %29, !dbg !5320

29:                                               ; preds = %1, %9
  %30 = phi i32 [ 0, %9 ], [ 1, %1 ], !dbg !5295
  ret i32 %30, !dbg !5321
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_LIN_Init(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !5322 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5326, metadata !DIExpression()), !dbg !5328
  call void @llvm.dbg.value(metadata i32 %1, metadata !5327, metadata !DIExpression()), !dbg !5328
  %3 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !5329
  br i1 %3, label %34, label %4, !dbg !5331

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !5332
  %6 = load volatile i32, i32* %5, align 4, !dbg !5332, !tbaa !5228
  %7 = icmp eq i32 %6, 0, !dbg !5334
  br i1 %7, label %8, label %10, !dbg !5335

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5336
  store i32 0, i32* %9, align 4, !dbg !5338, !tbaa !5236
  call void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !5339
  br label %10, !dbg !5340

10:                                               ; preds = %8, %4
  store volatile i32 36, i32* %5, align 4, !dbg !5341, !tbaa !5228
  %11 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5342
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %11, align 4, !dbg !5342, !tbaa !5241
  %13 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %12, i32 0, i32 3, !dbg !5342
  %14 = load volatile i32, i32* %13, align 4, !dbg !5342, !tbaa !3974
  %15 = and i32 %14, -8193, !dbg !5342
  store volatile i32 %15, i32* %13, align 4, !dbg !5342, !tbaa !3974
  call fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !5343
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %11, align 4, !dbg !5344, !tbaa !5241
  %17 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %16, i32 0, i32 4, !dbg !5344
  %18 = load volatile i32, i32* %17, align 4, !dbg !5344, !tbaa !3857
  %19 = and i32 %18, -2049, !dbg !5344
  store volatile i32 %19, i32* %17, align 4, !dbg !5344, !tbaa !3857
  %20 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %16, i32 0, i32 5, !dbg !5345
  %21 = load volatile i32, i32* %20, align 4, !dbg !5345, !tbaa !3862
  %22 = and i32 %21, -43, !dbg !5345
  store volatile i32 %22, i32* %20, align 4, !dbg !5345, !tbaa !3862
  %23 = load volatile i32, i32* %17, align 4, !dbg !5346, !tbaa !3857
  %24 = or i32 %23, 16384, !dbg !5346
  store volatile i32 %24, i32* %17, align 4, !dbg !5346, !tbaa !3857
  %25 = load volatile i32, i32* %17, align 4, !dbg !5347, !tbaa !3857
  %26 = and i32 %25, -33, !dbg !5347
  store volatile i32 %26, i32* %17, align 4, !dbg !5347, !tbaa !3857
  %27 = load volatile i32, i32* %17, align 4, !dbg !5348, !tbaa !3857
  %28 = or i32 %27, %1, !dbg !5348
  store volatile i32 %28, i32* %17, align 4, !dbg !5348, !tbaa !3857
  %29 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %16, i32 0, i32 3, !dbg !5349
  %30 = load volatile i32, i32* %29, align 4, !dbg !5349, !tbaa !3974
  %31 = or i32 %30, 8192, !dbg !5349
  store volatile i32 %31, i32* %29, align 4, !dbg !5349, !tbaa !3974
  %32 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !5350
  store volatile i32 0, i32* %32, align 4, !dbg !5351, !tbaa !5248
  store volatile i32 32, i32* %5, align 4, !dbg !5352, !tbaa !5228
  %33 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !5353
  store volatile i32 32, i32* %33, align 4, !dbg !5354, !tbaa !5252
  br label %34, !dbg !5355

34:                                               ; preds = %2, %10
  %35 = phi i32 [ 0, %10 ], [ 1, %2 ], !dbg !5328
  ret i32 %35, !dbg !5356
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_MultiProcessor_Init(%struct.__UART_HandleTypeDef* noundef %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #3 !dbg !5357 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5361, metadata !DIExpression()), !dbg !5364
  call void @llvm.dbg.value(metadata i8 %1, metadata !5362, metadata !DIExpression()), !dbg !5364
  call void @llvm.dbg.value(metadata i32 %2, metadata !5363, metadata !DIExpression()), !dbg !5364
  %4 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !5365
  br i1 %4, label %38, label %5, !dbg !5367

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !5368
  %7 = load volatile i32, i32* %6, align 4, !dbg !5368, !tbaa !5228
  %8 = icmp eq i32 %7, 0, !dbg !5370
  br i1 %8, label %9, label %11, !dbg !5371

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5372
  store i32 0, i32* %10, align 4, !dbg !5374, !tbaa !5236
  call void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !5375
  br label %11, !dbg !5376

11:                                               ; preds = %9, %5
  store volatile i32 36, i32* %6, align 4, !dbg !5377, !tbaa !5228
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5378
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %12, align 4, !dbg !5378, !tbaa !5241
  %14 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %13, i32 0, i32 3, !dbg !5378
  %15 = load volatile i32, i32* %14, align 4, !dbg !5378, !tbaa !3974
  %16 = and i32 %15, -8193, !dbg !5378
  store volatile i32 %16, i32* %14, align 4, !dbg !5378, !tbaa !3974
  call fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !5379
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %12, align 4, !dbg !5380, !tbaa !5241
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 4, !dbg !5380
  %19 = load volatile i32, i32* %18, align 4, !dbg !5380, !tbaa !3857
  %20 = and i32 %19, -18433, !dbg !5380
  store volatile i32 %20, i32* %18, align 4, !dbg !5380, !tbaa !3857
  %21 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 5, !dbg !5381
  %22 = load volatile i32, i32* %21, align 4, !dbg !5381, !tbaa !3862
  %23 = and i32 %22, -43, !dbg !5381
  store volatile i32 %23, i32* %21, align 4, !dbg !5381, !tbaa !3862
  %24 = load volatile i32, i32* %18, align 4, !dbg !5382, !tbaa !3857
  %25 = and i32 %24, -16, !dbg !5382
  store volatile i32 %25, i32* %18, align 4, !dbg !5382, !tbaa !3857
  %26 = zext i8 %1 to i32, !dbg !5383
  %27 = load volatile i32, i32* %18, align 4, !dbg !5383, !tbaa !3857
  %28 = or i32 %27, %26, !dbg !5383
  store volatile i32 %28, i32* %18, align 4, !dbg !5383, !tbaa !3857
  %29 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 3, !dbg !5384
  %30 = load volatile i32, i32* %29, align 4, !dbg !5384, !tbaa !3974
  %31 = and i32 %30, -2049, !dbg !5384
  store volatile i32 %31, i32* %29, align 4, !dbg !5384, !tbaa !3974
  %32 = load volatile i32, i32* %29, align 4, !dbg !5385, !tbaa !3974
  %33 = or i32 %32, %2, !dbg !5385
  store volatile i32 %33, i32* %29, align 4, !dbg !5385, !tbaa !3974
  %34 = load volatile i32, i32* %29, align 4, !dbg !5386, !tbaa !3974
  %35 = or i32 %34, 8192, !dbg !5386
  store volatile i32 %35, i32* %29, align 4, !dbg !5386, !tbaa !3974
  %36 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !5387
  store volatile i32 0, i32* %36, align 4, !dbg !5388, !tbaa !5248
  store volatile i32 32, i32* %6, align 4, !dbg !5389, !tbaa !5228
  %37 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !5390
  store volatile i32 32, i32* %37, align 4, !dbg !5391, !tbaa !5252
  br label %38, !dbg !5392

38:                                               ; preds = %3, %11
  %39 = phi i32 [ 0, %11 ], [ 1, %3 ], !dbg !5364
  ret i32 %39, !dbg !5393
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_DeInit(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !5394 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5396, metadata !DIExpression()), !dbg !5397
  %2 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !5398
  br i1 %2, label %13, label %3, !dbg !5400

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !5401
  store volatile i32 36, i32* %4, align 4, !dbg !5402, !tbaa !5228
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5403
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !5403, !tbaa !5241
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %6, i32 0, i32 3, !dbg !5403
  %8 = load volatile i32, i32* %7, align 4, !dbg !5403, !tbaa !3974
  %9 = and i32 %8, -8193, !dbg !5403
  store volatile i32 %9, i32* %7, align 4, !dbg !5403, !tbaa !3974
  call void @HAL_UART_MspDeInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !5404
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !5405
  store volatile i32 0, i32* %10, align 4, !dbg !5406, !tbaa !5248
  store volatile i32 0, i32* %4, align 4, !dbg !5407, !tbaa !5228
  %11 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !5408
  store volatile i32 0, i32* %11, align 4, !dbg !5409, !tbaa !5252
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5410
  store i32 0, i32* %12, align 4, !dbg !5410, !tbaa !5236
  br label %13, !dbg !5412

13:                                               ; preds = %1, %3
  %14 = phi i32 [ 0, %3 ], [ 1, %1 ], !dbg !5397
  ret i32 %14, !dbg !5413
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_MspDeInit(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !5414 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5416, metadata !DIExpression()), !dbg !5417
  ret void, !dbg !5418
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Transmit(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef readonly %1, i16 noundef zeroext %2, i32 noundef %3) local_unnamed_addr #3 !dbg !5419 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5423, metadata !DIExpression()), !dbg !5429
  call void @llvm.dbg.value(metadata i8* %1, metadata !5424, metadata !DIExpression()), !dbg !5429
  call void @llvm.dbg.value(metadata i16 %2, metadata !5425, metadata !DIExpression()), !dbg !5429
  call void @llvm.dbg.value(metadata i32 %3, metadata !5426, metadata !DIExpression()), !dbg !5429
  call void @llvm.dbg.value(metadata i32 0, metadata !5428, metadata !DIExpression()), !dbg !5429
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !5430
  %6 = load volatile i32, i32* %5, align 4, !dbg !5430, !tbaa !5228
  %7 = icmp eq i32 %6, 32, !dbg !5432
  br i1 %7, label %8, label %65, !dbg !5433

8:                                                ; preds = %4
  %9 = icmp eq i8* %1, null, !dbg !5434
  %10 = icmp eq i16 %2, 0
  %11 = or i1 %9, %10, !dbg !5437
  br i1 %11, label %65, label %12, !dbg !5437

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5438
  %14 = load i32, i32* %13, align 4, !dbg !5438, !tbaa !5236
  %15 = icmp eq i32 %14, 1, !dbg !5438
  br i1 %15, label %65, label %16, !dbg !5441

16:                                               ; preds = %12
  store i32 1, i32* %13, align 4, !dbg !5442, !tbaa !5236
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !5444
  store volatile i32 0, i32* %17, align 4, !dbg !5445, !tbaa !5248
  store volatile i32 33, i32* %5, align 4, !dbg !5446, !tbaa !5228
  %18 = call i32 @HAL_GetTick() #26, !dbg !5447
  call void @llvm.dbg.value(metadata i32 %18, metadata !5428, metadata !DIExpression()), !dbg !5429
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 3, !dbg !5448
  store i16 %2, i16* %19, align 4, !dbg !5449, !tbaa !5450
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !5451
  store volatile i16 %2, i16* %20, align 2, !dbg !5452, !tbaa !5453
  call void @llvm.dbg.value(metadata i8* %1, metadata !5424, metadata !DIExpression()), !dbg !5429
  %21 = load volatile i16, i16* %20, align 2, !dbg !5454, !tbaa !5453
  %22 = icmp eq i16 %21, 0, !dbg !5455
  br i1 %22, label %61, label %23, !dbg !5456

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1
  %25 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3
  br label %28, !dbg !5456

28:                                               ; preds = %23, %57
  %29 = phi i8* [ %1, %23 ], [ %58, %57 ]
  call void @llvm.dbg.value(metadata i8* %29, metadata !5424, metadata !DIExpression()), !dbg !5429
  %30 = load volatile i16, i16* %20, align 2, !dbg !5457, !tbaa !5453
  %31 = add i16 %30, -1, !dbg !5457
  store volatile i16 %31, i16* %20, align 2, !dbg !5457, !tbaa !5453
  %32 = load i32, i32* %24, align 4, !dbg !5459, !tbaa !5271
  %33 = icmp eq i32 %32, 4096, !dbg !5461
  %34 = call fastcc i32 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef 128, i32 noundef %18, i32 noundef %3), !dbg !5462
  %35 = icmp eq i32 %34, 0, !dbg !5462
  br i1 %33, label %36, label %50, !dbg !5463

36:                                               ; preds = %28
  br i1 %35, label %37, label %65, !dbg !5464

37:                                               ; preds = %36
  %38 = bitcast i8* %29 to i16*, !dbg !5466
  call void @llvm.dbg.value(metadata i16* %38, metadata !5427, metadata !DIExpression()), !dbg !5429
  %39 = load i16, i16* %38, align 2, !dbg !5467, !tbaa !5468
  %40 = and i16 %39, 511, !dbg !5469
  %41 = zext i16 %40 to i32, !dbg !5469
  %42 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %26, align 4, !dbg !5470, !tbaa !5241
  %43 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %42, i32 0, i32 1, !dbg !5471
  store volatile i32 %41, i32* %43, align 4, !dbg !5472, !tbaa !5473
  %44 = load i32, i32* %27, align 4, !dbg !5474, !tbaa !5273
  %45 = icmp eq i32 %44, 0, !dbg !5476
  br i1 %45, label %46, label %48, !dbg !5477

46:                                               ; preds = %37
  %47 = getelementptr inbounds i8, i8* %29, i32 2, !dbg !5478
  call void @llvm.dbg.value(metadata i8* %47, metadata !5424, metadata !DIExpression()), !dbg !5429
  br label %57, !dbg !5480

48:                                               ; preds = %37
  %49 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !5481
  call void @llvm.dbg.value(metadata i8* %49, metadata !5424, metadata !DIExpression()), !dbg !5429
  br label %57

50:                                               ; preds = %28
  br i1 %35, label %51, label %65, !dbg !5483

51:                                               ; preds = %50
  %52 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !5485
  call void @llvm.dbg.value(metadata i8* %52, metadata !5424, metadata !DIExpression()), !dbg !5429
  %53 = load i8, i8* %29, align 1, !dbg !5486, !tbaa !1653
  %54 = zext i8 %53 to i32, !dbg !5486
  %55 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %25, align 4, !dbg !5487, !tbaa !5241
  %56 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %55, i32 0, i32 1, !dbg !5488
  store volatile i32 %54, i32* %56, align 4, !dbg !5489, !tbaa !5473
  br label %57

57:                                               ; preds = %46, %48, %51
  %58 = phi i8* [ %47, %46 ], [ %49, %48 ], [ %52, %51 ], !dbg !5462
  call void @llvm.dbg.value(metadata i8* %58, metadata !5424, metadata !DIExpression()), !dbg !5429
  %59 = load volatile i16, i16* %20, align 2, !dbg !5454, !tbaa !5453
  %60 = icmp eq i16 %59, 0, !dbg !5455
  br i1 %60, label %61, label %28, !dbg !5456, !llvm.loop !5490

61:                                               ; preds = %57, %16
  %62 = call fastcc i32 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef 64, i32 noundef %18, i32 noundef %3), !dbg !5492
  %63 = icmp eq i32 %62, 0, !dbg !5494
  br i1 %63, label %64, label %65, !dbg !5495

64:                                               ; preds = %61
  store volatile i32 32, i32* %5, align 4, !dbg !5496, !tbaa !5228
  store i32 0, i32* %13, align 4, !dbg !5497, !tbaa !5236
  br label %65, !dbg !5499

65:                                               ; preds = %50, %36, %4, %61, %12, %8, %64
  %66 = phi i32 [ 0, %64 ], [ 1, %8 ], [ 2, %12 ], [ 3, %61 ], [ 2, %4 ], [ 3, %36 ], [ 3, %50 ], !dbg !5500
  ret i32 %66, !dbg !5501
}

; Function Attrs: noinline nounwind
define internal fastcc i32 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #3 !dbg !5502 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5506, metadata !DIExpression()), !dbg !5511
  call void @llvm.dbg.value(metadata i32 %1, metadata !5507, metadata !DIExpression()), !dbg !5511
  call void @llvm.dbg.value(metadata i32 0, metadata !5508, metadata !DIExpression()), !dbg !5511
  call void @llvm.dbg.value(metadata i32 %2, metadata !5509, metadata !DIExpression()), !dbg !5511
  call void @llvm.dbg.value(metadata i32 %3, metadata !5510, metadata !DIExpression()), !dbg !5511
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !5512, !tbaa !5241
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %6, i32 0, i32 0, !dbg !5512
  %8 = load volatile i32, i32* %7, align 4, !dbg !5512, !tbaa !5513
  %9 = and i32 %8, %1, !dbg !5512
  %10 = icmp eq i32 %9, %1, !dbg !5512
  br i1 %10, label %37, label %11, !dbg !5514

11:                                               ; preds = %4
  switch i32 %3, label %17 [
    i32 0, label %21
    i32 -1, label %12
  ]

12:                                               ; preds = %17, %11
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !tbaa !5241
  %14 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %13, i32 0, i32 0
  %15 = icmp eq i32 %3, -1
  br label %33, !dbg !5514

16:                                               ; preds = %33
  br i1 %15, label %33, label %17, !dbg !5515

17:                                               ; preds = %16, %11
  %18 = call i32 @HAL_GetTick() #26, !dbg !5517
  %19 = sub i32 %18, %2, !dbg !5521
  %20 = icmp ugt i32 %19, %3, !dbg !5522
  br i1 %20, label %21, label %12, !dbg !5523

21:                                               ; preds = %17, %11
  %22 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5512
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !5524, !tbaa !5241
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 3, !dbg !5524
  %25 = load volatile i32, i32* %24, align 4, !dbg !5524, !tbaa !3974
  %26 = and i32 %25, -417, !dbg !5524
  store volatile i32 %26, i32* %24, align 4, !dbg !5524, !tbaa !3974
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 5, !dbg !5526
  %28 = load volatile i32, i32* %27, align 4, !dbg !5526, !tbaa !3862
  %29 = and i32 %28, -2, !dbg !5526
  store volatile i32 %29, i32* %27, align 4, !dbg !5526, !tbaa !3862
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !5527
  store volatile i32 32, i32* %30, align 4, !dbg !5528, !tbaa !5228
  %31 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !5529
  store volatile i32 32, i32* %31, align 4, !dbg !5530, !tbaa !5252
  %32 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5531
  store i32 0, i32* %32, align 4, !dbg !5531, !tbaa !5236
  br label %37, !dbg !5533

33:                                               ; preds = %12, %16
  %34 = load volatile i32, i32* %14, align 4, !dbg !5512, !tbaa !5513
  %35 = and i32 %34, %1, !dbg !5512
  %36 = icmp eq i32 %35, %1, !dbg !5512
  br i1 %36, label %37, label %16, !dbg !5514, !llvm.loop !5534

37:                                               ; preds = %33, %4, %21
  %38 = phi i32 [ 3, %21 ], [ 0, %4 ], [ 0, %33 ], !dbg !5511
  ret i32 %38, !dbg !5536
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Receive(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef writeonly %1, i16 noundef zeroext %2, i32 noundef %3) local_unnamed_addr #3 !dbg !5537 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5539, metadata !DIExpression()), !dbg !5545
  call void @llvm.dbg.value(metadata i8* %1, metadata !5540, metadata !DIExpression()), !dbg !5545
  call void @llvm.dbg.value(metadata i16 %2, metadata !5541, metadata !DIExpression()), !dbg !5545
  call void @llvm.dbg.value(metadata i32 %3, metadata !5542, metadata !DIExpression()), !dbg !5545
  call void @llvm.dbg.value(metadata i32 0, metadata !5544, metadata !DIExpression()), !dbg !5545
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !5546
  %6 = load volatile i32, i32* %5, align 4, !dbg !5546, !tbaa !5252
  %7 = icmp eq i32 %6, 32, !dbg !5548
  br i1 %7, label %8, label %80, !dbg !5549

8:                                                ; preds = %4
  %9 = icmp eq i8* %1, null, !dbg !5550
  %10 = icmp eq i16 %2, 0
  %11 = or i1 %9, %10, !dbg !5553
  br i1 %11, label %80, label %12, !dbg !5553

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5554
  %14 = load i32, i32* %13, align 4, !dbg !5554, !tbaa !5236
  %15 = icmp eq i32 %14, 1, !dbg !5554
  br i1 %15, label %80, label %16, !dbg !5557

16:                                               ; preds = %12
  store i32 1, i32* %13, align 4, !dbg !5558, !tbaa !5236
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !5560
  store volatile i32 0, i32* %17, align 4, !dbg !5561, !tbaa !5248
  store volatile i32 34, i32* %5, align 4, !dbg !5562, !tbaa !5252
  %18 = call i32 @HAL_GetTick() #26, !dbg !5563
  call void @llvm.dbg.value(metadata i32 %18, metadata !5544, metadata !DIExpression()), !dbg !5545
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 6, !dbg !5564
  store i16 %2, i16* %19, align 4, !dbg !5565, !tbaa !5566
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !5567
  store volatile i16 %2, i16* %20, align 2, !dbg !5568, !tbaa !5569
  call void @llvm.dbg.value(metadata i8* %1, metadata !5540, metadata !DIExpression()), !dbg !5545
  %21 = load volatile i16, i16* %20, align 2, !dbg !5570, !tbaa !5569
  %22 = icmp eq i16 %21, 0, !dbg !5571
  br i1 %22, label %79, label %23, !dbg !5572

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1
  %25 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3
  %29 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  br label %31, !dbg !5572

31:                                               ; preds = %23, %75
  %32 = phi i8* [ %1, %23 ], [ %76, %75 ]
  call void @llvm.dbg.value(metadata i8* %32, metadata !5540, metadata !DIExpression()), !dbg !5545
  %33 = load volatile i16, i16* %20, align 2, !dbg !5573, !tbaa !5569
  %34 = add i16 %33, -1, !dbg !5573
  store volatile i16 %34, i16* %20, align 2, !dbg !5573, !tbaa !5569
  %35 = load i32, i32* %24, align 4, !dbg !5575, !tbaa !5271
  %36 = icmp eq i32 %35, 4096, !dbg !5577
  %37 = call fastcc i32 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef 32, i32 noundef %18, i32 noundef %3), !dbg !5578
  %38 = icmp eq i32 %37, 0, !dbg !5578
  br i1 %36, label %39, label %58, !dbg !5579

39:                                               ; preds = %31
  br i1 %38, label %40, label %80, !dbg !5580

40:                                               ; preds = %39
  %41 = bitcast i8* %32 to i16*, !dbg !5582
  call void @llvm.dbg.value(metadata i16* %41, metadata !5543, metadata !DIExpression()), !dbg !5545
  %42 = load i32, i32* %28, align 4, !dbg !5583, !tbaa !5273
  %43 = icmp eq i32 %42, 0, !dbg !5585
  br i1 %43, label %44, label %51, !dbg !5586

44:                                               ; preds = %40
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !5587, !tbaa !5241
  %46 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %45, i32 0, i32 1, !dbg !5589
  %47 = load volatile i32, i32* %46, align 4, !dbg !5589, !tbaa !5473
  %48 = trunc i32 %47 to i16, !dbg !5590
  %49 = and i16 %48, 511, !dbg !5590
  store i16 %49, i16* %41, align 2, !dbg !5591, !tbaa !5468
  %50 = getelementptr inbounds i8, i8* %32, i32 2, !dbg !5592
  call void @llvm.dbg.value(metadata i8* %50, metadata !5540, metadata !DIExpression()), !dbg !5545
  br label %75, !dbg !5593

51:                                               ; preds = %40
  %52 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %29, align 4, !dbg !5594, !tbaa !5241
  %53 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %52, i32 0, i32 1, !dbg !5596
  %54 = load volatile i32, i32* %53, align 4, !dbg !5596, !tbaa !5473
  %55 = trunc i32 %54 to i16, !dbg !5597
  %56 = and i16 %55, 255, !dbg !5597
  store i16 %56, i16* %41, align 2, !dbg !5598, !tbaa !5468
  %57 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !5599
  call void @llvm.dbg.value(metadata i8* %57, metadata !5540, metadata !DIExpression()), !dbg !5545
  br label %75

58:                                               ; preds = %31
  br i1 %38, label %59, label %80, !dbg !5600

59:                                               ; preds = %58
  %60 = load i32, i32* %25, align 4, !dbg !5602, !tbaa !5273
  %61 = icmp eq i32 %60, 0, !dbg !5604
  br i1 %61, label %62, label %68, !dbg !5605

62:                                               ; preds = %59
  %63 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %27, align 4, !dbg !5606, !tbaa !5241
  %64 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %63, i32 0, i32 1, !dbg !5608
  %65 = load volatile i32, i32* %64, align 4, !dbg !5608, !tbaa !5473
  %66 = trunc i32 %65 to i8, !dbg !5609
  %67 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !5610
  call void @llvm.dbg.value(metadata i8* %67, metadata !5540, metadata !DIExpression()), !dbg !5545
  store i8 %66, i8* %32, align 1, !dbg !5611, !tbaa !1653
  br label %75, !dbg !5612

68:                                               ; preds = %59
  %69 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %26, align 4, !dbg !5613, !tbaa !5241
  %70 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %69, i32 0, i32 1, !dbg !5615
  %71 = load volatile i32, i32* %70, align 4, !dbg !5615, !tbaa !5473
  %72 = trunc i32 %71 to i8, !dbg !5616
  %73 = and i8 %72, 127, !dbg !5616
  %74 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !5617
  call void @llvm.dbg.value(metadata i8* %74, metadata !5540, metadata !DIExpression()), !dbg !5545
  store i8 %73, i8* %32, align 1, !dbg !5618, !tbaa !1653
  br label %75

75:                                               ; preds = %62, %68, %44, %51
  %76 = phi i8* [ %50, %44 ], [ %57, %51 ], [ %67, %62 ], [ %74, %68 ], !dbg !5578
  call void @llvm.dbg.value(metadata i8* %76, metadata !5540, metadata !DIExpression()), !dbg !5545
  %77 = load volatile i16, i16* %20, align 2, !dbg !5570, !tbaa !5569
  %78 = icmp eq i16 %77, 0, !dbg !5571
  br i1 %78, label %79, label %31, !dbg !5572, !llvm.loop !5619

79:                                               ; preds = %75, %16
  store volatile i32 32, i32* %5, align 4, !dbg !5621, !tbaa !5252
  store i32 0, i32* %13, align 4, !dbg !5622, !tbaa !5236
  br label %80, !dbg !5624

80:                                               ; preds = %58, %39, %4, %12, %8, %79
  %81 = phi i32 [ 0, %79 ], [ 1, %8 ], [ 2, %12 ], [ 2, %4 ], [ 3, %39 ], [ 3, %58 ], !dbg !5625
  ret i32 %81, !dbg !5626
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_UART_Transmit_IT(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #14 !dbg !5627 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5631, metadata !DIExpression()), !dbg !5634
  call void @llvm.dbg.value(metadata i8* %1, metadata !5632, metadata !DIExpression()), !dbg !5634
  call void @llvm.dbg.value(metadata i16 %2, metadata !5633, metadata !DIExpression()), !dbg !5634
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !5635
  %5 = load volatile i32, i32* %4, align 4, !dbg !5635, !tbaa !5228
  %6 = icmp eq i32 %5, 32, !dbg !5637
  br i1 %6, label %7, label %25, !dbg !5638

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !5639
  %9 = icmp eq i16 %2, 0
  %10 = or i1 %8, %9, !dbg !5642
  br i1 %10, label %25, label %11, !dbg !5642

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5643
  %13 = load i32, i32* %12, align 4, !dbg !5643, !tbaa !5236
  %14 = icmp eq i32 %13, 1, !dbg !5643
  br i1 %14, label %25, label %15, !dbg !5646

15:                                               ; preds = %11
  store i32 1, i32* %12, align 4, !dbg !5647, !tbaa !5236
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 2, !dbg !5649
  store i8* %1, i8** %16, align 4, !dbg !5650, !tbaa !5651
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 3, !dbg !5652
  store i16 %2, i16* %17, align 4, !dbg !5653, !tbaa !5450
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !5654
  store volatile i16 %2, i16* %18, align 2, !dbg !5655, !tbaa !5453
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !5656
  store volatile i32 0, i32* %19, align 4, !dbg !5657, !tbaa !5248
  store volatile i32 33, i32* %4, align 4, !dbg !5658, !tbaa !5228
  store i32 0, i32* %12, align 4, !dbg !5659, !tbaa !5236
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5661
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %20, align 4, !dbg !5661, !tbaa !5241
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %21, i32 0, i32 3, !dbg !5661
  %23 = load volatile i32, i32* %22, align 4, !dbg !5661, !tbaa !3974
  %24 = or i32 %23, 128, !dbg !5661
  store volatile i32 %24, i32* %22, align 4, !dbg !5661, !tbaa !3974
  br label %25, !dbg !5662

25:                                               ; preds = %3, %11, %7, %15
  %26 = phi i32 [ 0, %15 ], [ 1, %7 ], [ 2, %11 ], [ 2, %3 ], !dbg !5663
  ret i32 %26, !dbg !5664
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_UART_Receive_IT(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #14 !dbg !5665 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5667, metadata !DIExpression()), !dbg !5670
  call void @llvm.dbg.value(metadata i8* %1, metadata !5668, metadata !DIExpression()), !dbg !5670
  call void @llvm.dbg.value(metadata i16 %2, metadata !5669, metadata !DIExpression()), !dbg !5670
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !5671
  %5 = load volatile i32, i32* %4, align 4, !dbg !5671, !tbaa !5252
  %6 = icmp eq i32 %5, 32, !dbg !5673
  br i1 %6, label %7, label %30, !dbg !5674

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !5675
  %9 = icmp eq i16 %2, 0
  %10 = or i1 %8, %9, !dbg !5678
  br i1 %10, label %30, label %11, !dbg !5678

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5679
  %13 = load i32, i32* %12, align 4, !dbg !5679, !tbaa !5236
  %14 = icmp eq i32 %13, 1, !dbg !5679
  br i1 %14, label %30, label %15, !dbg !5682

15:                                               ; preds = %11
  store i32 1, i32* %12, align 4, !dbg !5683, !tbaa !5236
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !5685
  store i8* %1, i8** %16, align 4, !dbg !5686, !tbaa !5687
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 6, !dbg !5688
  store i16 %2, i16* %17, align 4, !dbg !5689, !tbaa !5566
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !5690
  store volatile i16 %2, i16* %18, align 2, !dbg !5691, !tbaa !5569
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !5692
  store volatile i32 0, i32* %19, align 4, !dbg !5693, !tbaa !5248
  store volatile i32 34, i32* %4, align 4, !dbg !5694, !tbaa !5252
  store i32 0, i32* %12, align 4, !dbg !5695, !tbaa !5236
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5697
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %20, align 4, !dbg !5697, !tbaa !5241
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %21, i32 0, i32 3, !dbg !5697
  %23 = load volatile i32, i32* %22, align 4, !dbg !5697, !tbaa !3974
  %24 = or i32 %23, 256, !dbg !5697
  store volatile i32 %24, i32* %22, align 4, !dbg !5697, !tbaa !3974
  %25 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %21, i32 0, i32 5, !dbg !5698
  %26 = load volatile i32, i32* %25, align 4, !dbg !5698, !tbaa !3862
  %27 = or i32 %26, 1, !dbg !5698
  store volatile i32 %27, i32* %25, align 4, !dbg !5698, !tbaa !3862
  %28 = load volatile i32, i32* %22, align 4, !dbg !5699, !tbaa !3974
  %29 = or i32 %28, 32, !dbg !5699
  store volatile i32 %29, i32* %22, align 4, !dbg !5699, !tbaa !3974
  br label %30, !dbg !5700

30:                                               ; preds = %3, %11, %7, %15
  %31 = phi i32 [ 0, %15 ], [ 1, %7 ], [ 2, %11 ], [ 2, %3 ], !dbg !5701
  ret i32 %31, !dbg !5702
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Transmit_DMA(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #3 !dbg !5703 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5705, metadata !DIExpression()), !dbg !5709
  call void @llvm.dbg.value(metadata i8* %1, metadata !5706, metadata !DIExpression()), !dbg !5709
  call void @llvm.dbg.value(metadata i16 %2, metadata !5707, metadata !DIExpression()), !dbg !5709
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !5710
  %5 = load volatile i32, i32* %4, align 4, !dbg !5710, !tbaa !5228
  %6 = icmp eq i32 %5, 32, !dbg !5712
  br i1 %6, label %7, label %38, !dbg !5713

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !5714
  %9 = zext i16 %2 to i32
  %10 = icmp eq i16 %2, 0
  %11 = or i1 %8, %10, !dbg !5717
  br i1 %11, label %38, label %12, !dbg !5717

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5718
  %14 = load i32, i32* %13, align 4, !dbg !5718, !tbaa !5236
  %15 = icmp eq i32 %14, 1, !dbg !5718
  br i1 %15, label %38, label %16, !dbg !5721

16:                                               ; preds = %12
  store i32 1, i32* %13, align 4, !dbg !5722, !tbaa !5236
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 2, !dbg !5724
  store i8* %1, i8** %17, align 4, !dbg !5725, !tbaa !5651
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 3, !dbg !5726
  store i16 %2, i16* %18, align 4, !dbg !5727, !tbaa !5450
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !5728
  store volatile i16 %2, i16* %19, align 2, !dbg !5729, !tbaa !5453
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !5730
  store volatile i32 0, i32* %20, align 4, !dbg !5731, !tbaa !5248
  store volatile i32 33, i32* %4, align 4, !dbg !5732, !tbaa !5228
  %21 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !5733
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %21, align 4, !dbg !5733, !tbaa !5734
  %23 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 5, !dbg !5735
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMATransmitCplt, void (%struct.__DMA_HandleTypeDef*)** %23, align 4, !dbg !5736, !tbaa !5737
  %24 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 6, !dbg !5739
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMATxHalfCplt, void (%struct.__DMA_HandleTypeDef*)** %24, align 4, !dbg !5740, !tbaa !5741
  %25 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 7, !dbg !5742
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMAError, void (%struct.__DMA_HandleTypeDef*)** %25, align 4, !dbg !5743, !tbaa !5744
  %26 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 8, !dbg !5745
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %26, align 4, !dbg !5746, !tbaa !5747
  call void @llvm.dbg.value(metadata i32* undef, metadata !5708, metadata !DIExpression()), !dbg !5709
  %27 = ptrtoint i8* %1 to i32, !dbg !5748
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5749
  %29 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %28, align 4, !dbg !5749, !tbaa !5241
  %30 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %29, i32 0, i32 1, !dbg !5750
  %31 = ptrtoint i32* %30 to i32, !dbg !5751
  %32 = call i32 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* noundef %22, i32 noundef %27, i32 noundef %31, i32 noundef %9) #26, !dbg !5752
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %28, align 4, !dbg !5753, !tbaa !5241
  %34 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %33, i32 0, i32 0, !dbg !5753
  store volatile i32 -65, i32* %34, align 4, !dbg !5753, !tbaa !5513
  store i32 0, i32* %13, align 4, !dbg !5754, !tbaa !5236
  %35 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %33, i32 0, i32 5, !dbg !5756
  %36 = load volatile i32, i32* %35, align 4, !dbg !5756, !tbaa !3862
  %37 = or i32 %36, 128, !dbg !5756
  store volatile i32 %37, i32* %35, align 4, !dbg !5756, !tbaa !3862
  br label %38, !dbg !5757

38:                                               ; preds = %3, %12, %7, %16
  %39 = phi i32 [ 0, %16 ], [ 1, %7 ], [ 2, %12 ], [ 2, %3 ], !dbg !5758
  ret i32 %39, !dbg !5759
}

; Function Attrs: noinline nounwind
define internal void @UART_DMATransmitCplt(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !5760 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !5764, metadata !DIExpression()), !dbg !5766
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !5767
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !5767
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !5767, !tbaa !5768
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !5765, metadata !DIExpression()), !dbg !5766
  %5 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 0, !dbg !5769
  %6 = load %struct.DMA_Channel_TypeDef*, %struct.DMA_Channel_TypeDef** %5, align 4, !dbg !5769, !tbaa !5771
  %7 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %6, i32 0, i32 0, !dbg !5772
  %8 = load volatile i32, i32* %7, align 4, !dbg !5772, !tbaa !3201
  %9 = and i32 %8, 32, !dbg !5773
  %10 = icmp eq i32 %9, 0, !dbg !5774
  br i1 %10, label %11, label %21, !dbg !5775

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !5776
  store volatile i16 0, i16* %12, align 2, !dbg !5778, !tbaa !5453
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 0, !dbg !5779
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %13, align 4, !dbg !5779, !tbaa !5241
  %15 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %14, i32 0, i32 5, !dbg !5779
  %16 = load volatile i32, i32* %15, align 4, !dbg !5779, !tbaa !3862
  %17 = and i32 %16, -129, !dbg !5779
  store volatile i32 %17, i32* %15, align 4, !dbg !5779, !tbaa !3862
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %14, i32 0, i32 3, !dbg !5780
  %19 = load volatile i32, i32* %18, align 4, !dbg !5780, !tbaa !3974
  %20 = or i32 %19, 64, !dbg !5780
  store volatile i32 %20, i32* %18, align 4, !dbg !5780, !tbaa !3974
  br label %22, !dbg !5781

21:                                               ; preds = %1
  call void @HAL_UART_TxCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !5782
  br label %22

22:                                               ; preds = %21, %11
  ret void, !dbg !5784
}

; Function Attrs: noinline nounwind
define internal void @UART_DMATxHalfCplt(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !5785 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !5787, metadata !DIExpression()), !dbg !5789
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !5790
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !5790
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !5790, !tbaa !5768
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !5788, metadata !DIExpression()), !dbg !5789
  call void @HAL_UART_TxHalfCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !5791
  ret void, !dbg !5792
}

; Function Attrs: noinline nounwind
define internal void @UART_DMAError(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !5793 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !5795, metadata !DIExpression()), !dbg !5798
  call void @llvm.dbg.value(metadata i32 0, metadata !5796, metadata !DIExpression()), !dbg !5798
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !5799
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !5799
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !5799, !tbaa !5768
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !5797, metadata !DIExpression()), !dbg !5798
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 0, !dbg !5800
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !5800, !tbaa !5241
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %6, i32 0, i32 5, !dbg !5800
  %8 = load volatile i32, i32* %7, align 4, !dbg !5800, !tbaa !3862
  %9 = and i32 %8, 128, !dbg !5800
  %10 = icmp ne i32 %9, 0, !dbg !5800
  call void @llvm.dbg.value(metadata i1 %10, metadata !5796, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5798
  %11 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 11, !dbg !5801
  %12 = load volatile i32, i32* %11, align 4, !dbg !5801, !tbaa !5228
  %13 = icmp eq i32 %12, 33, !dbg !5803
  %14 = select i1 %13, i1 %10, i1 false, !dbg !5804
  br i1 %14, label %15, label %17, !dbg !5804

15:                                               ; preds = %1
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !5805
  store volatile i16 0, i16* %16, align 2, !dbg !5807, !tbaa !5453
  call fastcc void @UART_EndTxTransfer(%struct.__UART_HandleTypeDef* noundef %4), !dbg !5808
  br label %17, !dbg !5809

17:                                               ; preds = %15, %1
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !5810, !tbaa !5241
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %18, i32 0, i32 5, !dbg !5810
  %20 = load volatile i32, i32* %19, align 4, !dbg !5810, !tbaa !3862
  %21 = and i32 %20, 64, !dbg !5810
  %22 = icmp ne i32 %21, 0, !dbg !5810
  call void @llvm.dbg.value(metadata i1 %22, metadata !5796, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5798
  %23 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !5811
  %24 = load volatile i32, i32* %23, align 4, !dbg !5811, !tbaa !5252
  %25 = icmp eq i32 %24, 34, !dbg !5813
  %26 = select i1 %25, i1 %22, i1 false, !dbg !5814
  br i1 %26, label %27, label %29, !dbg !5814

27:                                               ; preds = %17
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !5815
  store volatile i16 0, i16* %28, align 2, !dbg !5817, !tbaa !5569
  call fastcc void @UART_EndRxTransfer(%struct.__UART_HandleTypeDef* noundef %4), !dbg !5818
  br label %29, !dbg !5819

29:                                               ; preds = %27, %17
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 13, !dbg !5820
  %31 = load volatile i32, i32* %30, align 4, !dbg !5821, !tbaa !5248
  %32 = or i32 %31, 16, !dbg !5821
  store volatile i32 %32, i32* %30, align 4, !dbg !5821, !tbaa !5248
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !5822
  ret void, !dbg !5823
}

declare !dbg !5824 dso_local i32 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #25

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @UART_EndTxTransfer(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #14 !dbg !5827 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5829, metadata !DIExpression()), !dbg !5830
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5831
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !5831, !tbaa !5241
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !5831
  %5 = load volatile i32, i32* %4, align 4, !dbg !5831, !tbaa !3974
  %6 = and i32 %5, -193, !dbg !5831
  store volatile i32 %6, i32* %4, align 4, !dbg !5831, !tbaa !3974
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !5832
  store volatile i32 32, i32* %7, align 4, !dbg !5833, !tbaa !5228
  ret void, !dbg !5834
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @UART_EndRxTransfer(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #14 !dbg !5835 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5837, metadata !DIExpression()), !dbg !5838
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5839
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !5839, !tbaa !5241
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !5839
  %5 = load volatile i32, i32* %4, align 4, !dbg !5839, !tbaa !3974
  %6 = and i32 %5, -289, !dbg !5839
  store volatile i32 %6, i32* %4, align 4, !dbg !5839, !tbaa !3974
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !5840
  %8 = load volatile i32, i32* %7, align 4, !dbg !5840, !tbaa !3862
  %9 = and i32 %8, -2, !dbg !5840
  store volatile i32 %9, i32* %7, align 4, !dbg !5840, !tbaa !3862
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !5841
  store volatile i32 32, i32* %10, align 4, !dbg !5842, !tbaa !5252
  ret void, !dbg !5843
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !5844 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5846, metadata !DIExpression()), !dbg !5847
  ret void, !dbg !5848
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_TxHalfCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !5849 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5851, metadata !DIExpression()), !dbg !5852
  ret void, !dbg !5853
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_TxCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !5854 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5856, metadata !DIExpression()), !dbg !5857
  ret void, !dbg !5858
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Receive_DMA(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #3 !dbg !5859 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5861, metadata !DIExpression()), !dbg !5869
  call void @llvm.dbg.value(metadata i8* %1, metadata !5862, metadata !DIExpression()), !dbg !5869
  call void @llvm.dbg.value(metadata i16 %2, metadata !5863, metadata !DIExpression()), !dbg !5869
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !5870
  %6 = load volatile i32, i32* %5, align 4, !dbg !5870, !tbaa !5252
  %7 = icmp eq i32 %6, 32, !dbg !5871
  br i1 %7, label %8, label %49, !dbg !5872

8:                                                ; preds = %3
  %9 = icmp eq i8* %1, null, !dbg !5873
  %10 = zext i16 %2 to i32
  %11 = icmp eq i16 %2, 0
  %12 = or i1 %9, %11, !dbg !5875
  br i1 %12, label %49, label %13, !dbg !5875

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5876
  %15 = load i32, i32* %14, align 4, !dbg !5876, !tbaa !5236
  %16 = icmp eq i32 %15, 1, !dbg !5876
  br i1 %16, label %49, label %17, !dbg !5879

17:                                               ; preds = %13
  store i32 1, i32* %14, align 4, !dbg !5880, !tbaa !5236
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !5882
  store i8* %1, i8** %18, align 4, !dbg !5883, !tbaa !5687
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 6, !dbg !5884
  store i16 %2, i16* %19, align 4, !dbg !5885, !tbaa !5566
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !5886
  store volatile i32 0, i32* %20, align 4, !dbg !5887, !tbaa !5248
  store volatile i32 34, i32* %5, align 4, !dbg !5888, !tbaa !5252
  %21 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !5889
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %21, align 4, !dbg !5889, !tbaa !5890
  %23 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 5, !dbg !5891
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMAReceiveCplt, void (%struct.__DMA_HandleTypeDef*)** %23, align 4, !dbg !5892, !tbaa !5737
  %24 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 6, !dbg !5893
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMARxHalfCplt, void (%struct.__DMA_HandleTypeDef*)** %24, align 4, !dbg !5894, !tbaa !5741
  %25 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 7, !dbg !5895
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMAError, void (%struct.__DMA_HandleTypeDef*)** %25, align 4, !dbg !5896, !tbaa !5744
  %26 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 8, !dbg !5897
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %26, align 4, !dbg !5898, !tbaa !5747
  call void @llvm.dbg.value(metadata i32* undef, metadata !5864, metadata !DIExpression()), !dbg !5869
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5899
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %27, align 4, !dbg !5899, !tbaa !5241
  %29 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %28, i32 0, i32 1, !dbg !5900
  %30 = ptrtoint i32* %29 to i32, !dbg !5901
  %31 = ptrtoint i8* %1 to i32, !dbg !5902
  %32 = call i32 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* noundef %22, i32 noundef %30, i32 noundef %31, i32 noundef %10) #26, !dbg !5903
  %33 = bitcast i32* %4 to i8*, !dbg !5904
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33), !dbg !5904
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5865, metadata !DIExpression()), !dbg !5904
  store volatile i32 0, i32* %4, align 4, !dbg !5904, !tbaa !2532
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %27, align 4, !dbg !5904, !tbaa !5241
  %35 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 0, !dbg !5904
  %36 = load volatile i32, i32* %35, align 4, !dbg !5904, !tbaa !5513
  store volatile i32 %36, i32* %4, align 4, !dbg !5904, !tbaa !2532
  %37 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 1, !dbg !5904
  %38 = load volatile i32, i32* %37, align 4, !dbg !5904, !tbaa !5473
  store volatile i32 %38, i32* %4, align 4, !dbg !5904, !tbaa !2532
  %39 = load volatile i32, i32* %4, align 4, !dbg !5904, !tbaa !2532
  %40 = bitcast i32* %4 to i8*, !dbg !5905
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40), !dbg !5905
  store i32 0, i32* %14, align 4, !dbg !5906, !tbaa !5236
  %41 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 3, !dbg !5908
  %42 = load volatile i32, i32* %41, align 4, !dbg !5908, !tbaa !3974
  %43 = or i32 %42, 256, !dbg !5908
  store volatile i32 %43, i32* %41, align 4, !dbg !5908, !tbaa !3974
  %44 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 5, !dbg !5909
  %45 = load volatile i32, i32* %44, align 4, !dbg !5909, !tbaa !3862
  %46 = or i32 %45, 1, !dbg !5909
  store volatile i32 %46, i32* %44, align 4, !dbg !5909, !tbaa !3862
  %47 = load volatile i32, i32* %44, align 4, !dbg !5910, !tbaa !3862
  %48 = or i32 %47, 64, !dbg !5910
  store volatile i32 %48, i32* %44, align 4, !dbg !5910, !tbaa !3862
  br label %49, !dbg !5911

49:                                               ; preds = %3, %13, %8, %17
  %50 = phi i32 [ 0, %17 ], [ 1, %8 ], [ 2, %13 ], [ 2, %3 ], !dbg !5912
  ret i32 %50, !dbg !5913
}

; Function Attrs: noinline nounwind
define internal void @UART_DMAReceiveCplt(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !5914 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !5916, metadata !DIExpression()), !dbg !5918
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !5919
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !5919
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !5919, !tbaa !5768
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !5917, metadata !DIExpression()), !dbg !5918
  %5 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 0, !dbg !5920
  %6 = load %struct.DMA_Channel_TypeDef*, %struct.DMA_Channel_TypeDef** %5, align 4, !dbg !5920, !tbaa !5771
  %7 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %6, i32 0, i32 0, !dbg !5922
  %8 = load volatile i32, i32* %7, align 4, !dbg !5922, !tbaa !3201
  %9 = and i32 %8, 32, !dbg !5923
  %10 = icmp eq i32 %9, 0, !dbg !5924
  br i1 %10, label %11, label %24, !dbg !5925

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !5926
  store volatile i16 0, i16* %12, align 2, !dbg !5928, !tbaa !5569
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 0, !dbg !5929
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %13, align 4, !dbg !5929, !tbaa !5241
  %15 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %14, i32 0, i32 3, !dbg !5929
  %16 = load volatile i32, i32* %15, align 4, !dbg !5929, !tbaa !3974
  %17 = and i32 %16, -257, !dbg !5929
  store volatile i32 %17, i32* %15, align 4, !dbg !5929, !tbaa !3974
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %14, i32 0, i32 5, !dbg !5930
  %19 = load volatile i32, i32* %18, align 4, !dbg !5930, !tbaa !3862
  %20 = and i32 %19, -2, !dbg !5930
  store volatile i32 %20, i32* %18, align 4, !dbg !5930, !tbaa !3862
  %21 = load volatile i32, i32* %18, align 4, !dbg !5931, !tbaa !3862
  %22 = and i32 %21, -65, !dbg !5931
  store volatile i32 %22, i32* %18, align 4, !dbg !5931, !tbaa !3862
  %23 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !5932
  store volatile i32 32, i32* %23, align 4, !dbg !5933, !tbaa !5252
  br label %24, !dbg !5934

24:                                               ; preds = %11, %1
  call void @HAL_UART_RxCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !5935
  ret void, !dbg !5936
}

; Function Attrs: noinline nounwind
define internal void @UART_DMARxHalfCplt(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !5937 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !5939, metadata !DIExpression()), !dbg !5941
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !5942
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !5942
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !5942, !tbaa !5768
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !5940, metadata !DIExpression()), !dbg !5941
  call void @HAL_UART_RxHalfCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !5943
  ret void, !dbg !5944
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_RxHalfCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !5945 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5947, metadata !DIExpression()), !dbg !5948
  ret void, !dbg !5949
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_RxCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !5950 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5952, metadata !DIExpression()), !dbg !5953
  ret void, !dbg !5954
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_UART_DMAPause(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #14 !dbg !5955 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5957, metadata !DIExpression()), !dbg !5959
  call void @llvm.dbg.value(metadata i32 0, metadata !5958, metadata !DIExpression()), !dbg !5959
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5960
  %3 = load i32, i32* %2, align 4, !dbg !5960, !tbaa !5236
  %4 = icmp eq i32 %3, 1, !dbg !5960
  br i1 %4, label %36, label %5, !dbg !5963

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !5964, !tbaa !5236
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5966
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !5966, !tbaa !5241
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %7, i32 0, i32 5, !dbg !5966
  %9 = load volatile i32, i32* %8, align 4, !dbg !5966, !tbaa !3862
  %10 = and i32 %9, 128, !dbg !5966
  %11 = icmp ne i32 %10, 0, !dbg !5966
  call void @llvm.dbg.value(metadata i1 %11, metadata !5958, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5959
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !5967
  %13 = load volatile i32, i32* %12, align 4, !dbg !5967, !tbaa !5228
  %14 = icmp eq i32 %13, 33, !dbg !5969
  %15 = select i1 %14, i1 %11, i1 false, !dbg !5970
  br i1 %15, label %16, label %19, !dbg !5970

16:                                               ; preds = %5
  %17 = load volatile i32, i32* %8, align 4, !dbg !5971, !tbaa !3862
  %18 = and i32 %17, -129, !dbg !5971
  store volatile i32 %18, i32* %8, align 4, !dbg !5971, !tbaa !3862
  br label %19, !dbg !5973

19:                                               ; preds = %16, %5
  %20 = load volatile i32, i32* %8, align 4, !dbg !5974, !tbaa !3862
  %21 = and i32 %20, 64, !dbg !5974
  %22 = icmp ne i32 %21, 0, !dbg !5974
  call void @llvm.dbg.value(metadata i1 %22, metadata !5958, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5959
  %23 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !5975
  %24 = load volatile i32, i32* %23, align 4, !dbg !5975, !tbaa !5252
  %25 = icmp eq i32 %24, 34, !dbg !5977
  %26 = select i1 %25, i1 %22, i1 false, !dbg !5978
  br i1 %26, label %27, label %35, !dbg !5978

27:                                               ; preds = %19
  %28 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %7, i32 0, i32 3, !dbg !5979
  %29 = load volatile i32, i32* %28, align 4, !dbg !5979, !tbaa !3974
  %30 = and i32 %29, -257, !dbg !5979
  store volatile i32 %30, i32* %28, align 4, !dbg !5979, !tbaa !3974
  %31 = load volatile i32, i32* %8, align 4, !dbg !5981, !tbaa !3862
  %32 = and i32 %31, -2, !dbg !5981
  store volatile i32 %32, i32* %8, align 4, !dbg !5981, !tbaa !3862
  %33 = load volatile i32, i32* %8, align 4, !dbg !5982, !tbaa !3862
  %34 = and i32 %33, -65, !dbg !5982
  store volatile i32 %34, i32* %8, align 4, !dbg !5982, !tbaa !3862
  br label %35, !dbg !5983

35:                                               ; preds = %19, %27
  store i32 0, i32* %2, align 4, !dbg !5984, !tbaa !5236
  br label %36, !dbg !5986

36:                                               ; preds = %1, %35
  %37 = phi i32 [ 0, %35 ], [ 2, %1 ], !dbg !5959
  ret i32 %37, !dbg !5987
}

; Function Attrs: nofree noinline nounwind
define dso_local i32 @HAL_UART_DMAResume(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #17 !dbg !5988 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5990, metadata !DIExpression()), !dbg !5995
  %3 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5996
  %4 = load i32, i32* %3, align 4, !dbg !5996, !tbaa !5236
  %5 = icmp eq i32 %4, 1, !dbg !5996
  br i1 %5, label %39, label %6, !dbg !5999

6:                                                ; preds = %1
  store i32 1, i32* %3, align 4, !dbg !6000, !tbaa !5236
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6002
  %8 = load volatile i32, i32* %7, align 4, !dbg !6002, !tbaa !5228
  %9 = icmp eq i32 %8, 33, !dbg !6004
  br i1 %9, label %10, label %16, !dbg !6005

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6006
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %11, align 4, !dbg !6006, !tbaa !5241
  %13 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %12, i32 0, i32 5, !dbg !6006
  %14 = load volatile i32, i32* %13, align 4, !dbg !6006, !tbaa !3862
  %15 = or i32 %14, 128, !dbg !6006
  store volatile i32 %15, i32* %13, align 4, !dbg !6006, !tbaa !3862
  br label %16, !dbg !6008

16:                                               ; preds = %10, %6
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !6009
  %18 = load volatile i32, i32* %17, align 4, !dbg !6009, !tbaa !5252
  %19 = icmp eq i32 %18, 34, !dbg !6010
  br i1 %19, label %20, label %38, !dbg !6011

20:                                               ; preds = %16
  %21 = bitcast i32* %2 to i8*, !dbg !6012
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !6012
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5991, metadata !DIExpression()), !dbg !6012
  store volatile i32 0, i32* %2, align 4, !dbg !6012, !tbaa !2532
  %22 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6012
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !6012, !tbaa !5241
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 0, !dbg !6012
  %25 = load volatile i32, i32* %24, align 4, !dbg !6012, !tbaa !5513
  store volatile i32 %25, i32* %2, align 4, !dbg !6012, !tbaa !2532
  %26 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 1, !dbg !6012
  %27 = load volatile i32, i32* %26, align 4, !dbg !6012, !tbaa !5473
  store volatile i32 %27, i32* %2, align 4, !dbg !6012, !tbaa !2532
  %28 = load volatile i32, i32* %2, align 4, !dbg !6012, !tbaa !2532
  %29 = bitcast i32* %2 to i8*, !dbg !6013
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29), !dbg !6013
  %30 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 3, !dbg !6014
  %31 = load volatile i32, i32* %30, align 4, !dbg !6014, !tbaa !3974
  %32 = or i32 %31, 256, !dbg !6014
  store volatile i32 %32, i32* %30, align 4, !dbg !6014, !tbaa !3974
  %33 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 5, !dbg !6015
  %34 = load volatile i32, i32* %33, align 4, !dbg !6015, !tbaa !3862
  %35 = or i32 %34, 1, !dbg !6015
  store volatile i32 %35, i32* %33, align 4, !dbg !6015, !tbaa !3862
  %36 = load volatile i32, i32* %33, align 4, !dbg !6016, !tbaa !3862
  %37 = or i32 %36, 64, !dbg !6016
  store volatile i32 %37, i32* %33, align 4, !dbg !6016, !tbaa !3862
  br label %38, !dbg !6017

38:                                               ; preds = %16, %20
  store i32 0, i32* %3, align 4, !dbg !6018, !tbaa !5236
  br label %39, !dbg !6020

39:                                               ; preds = %1, %38
  %40 = phi i32 [ 0, %38 ], [ 2, %1 ], !dbg !5995
  ret i32 %40, !dbg !6021
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_DMAStop(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !6022 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6024, metadata !DIExpression()), !dbg !6026
  call void @llvm.dbg.value(metadata i32 0, metadata !6025, metadata !DIExpression()), !dbg !6026
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6027
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6027, !tbaa !5241
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !6027
  %5 = load volatile i32, i32* %4, align 4, !dbg !6027, !tbaa !3862
  %6 = and i32 %5, 128, !dbg !6027
  %7 = icmp ne i32 %6, 0, !dbg !6027
  call void @llvm.dbg.value(metadata i1 %7, metadata !6025, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6026
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6028
  %9 = load volatile i32, i32* %8, align 4, !dbg !6028, !tbaa !5228
  %10 = icmp eq i32 %9, 33, !dbg !6030
  %11 = select i1 %10, i1 %7, i1 false, !dbg !6031
  br i1 %11, label %12, label %21, !dbg !6031

12:                                               ; preds = %1
  %13 = load volatile i32, i32* %4, align 4, !dbg !6032, !tbaa !3862
  %14 = and i32 %13, -129, !dbg !6032
  store volatile i32 %14, i32* %4, align 4, !dbg !6032, !tbaa !3862
  %15 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !6034
  %16 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %15, align 4, !dbg !6034, !tbaa !5734
  %17 = icmp eq %struct.__DMA_HandleTypeDef* %16, null, !dbg !6036
  br i1 %17, label %20, label %18, !dbg !6037

18:                                               ; preds = %12
  %19 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %16) #26, !dbg !6038
  br label %20, !dbg !6040

20:                                               ; preds = %18, %12
  call fastcc void @UART_EndTxTransfer(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6041
  br label %21, !dbg !6042

21:                                               ; preds = %20, %1
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6043, !tbaa !5241
  %23 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %22, i32 0, i32 5, !dbg !6043
  %24 = load volatile i32, i32* %23, align 4, !dbg !6043, !tbaa !3862
  %25 = and i32 %24, 64, !dbg !6043
  %26 = icmp ne i32 %25, 0, !dbg !6043
  call void @llvm.dbg.value(metadata i1 %26, metadata !6025, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6026
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !6044
  %28 = load volatile i32, i32* %27, align 4, !dbg !6044, !tbaa !5252
  %29 = icmp eq i32 %28, 34, !dbg !6046
  %30 = select i1 %29, i1 %26, i1 false, !dbg !6047
  br i1 %30, label %31, label %40, !dbg !6047

31:                                               ; preds = %21
  %32 = load volatile i32, i32* %23, align 4, !dbg !6048, !tbaa !3862
  %33 = and i32 %32, -65, !dbg !6048
  store volatile i32 %33, i32* %23, align 4, !dbg !6048, !tbaa !3862
  %34 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !6050
  %35 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %34, align 4, !dbg !6050, !tbaa !5890
  %36 = icmp eq %struct.__DMA_HandleTypeDef* %35, null, !dbg !6052
  br i1 %36, label %39, label %37, !dbg !6053

37:                                               ; preds = %31
  %38 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %35) #26, !dbg !6054
  br label %39, !dbg !6056

39:                                               ; preds = %37, %31
  call fastcc void @UART_EndRxTransfer(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6057
  br label %40, !dbg !6058

40:                                               ; preds = %39, %21
  ret i32 0, !dbg !6059
}

declare !dbg !6060 dso_local i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef) local_unnamed_addr #25

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Abort(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !6063 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6065, metadata !DIExpression()), !dbg !6066
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6067
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6067, !tbaa !5241
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !6067
  %5 = load volatile i32, i32* %4, align 4, !dbg !6067, !tbaa !3974
  %6 = and i32 %5, -481, !dbg !6067
  store volatile i32 %6, i32* %4, align 4, !dbg !6067, !tbaa !3974
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !6068
  %8 = load volatile i32, i32* %7, align 4, !dbg !6068, !tbaa !3862
  %9 = and i32 %8, -2, !dbg !6068
  store volatile i32 %9, i32* %7, align 4, !dbg !6068, !tbaa !3862
  %10 = load volatile i32, i32* %7, align 4, !dbg !6069, !tbaa !3862
  %11 = and i32 %10, 128, !dbg !6069
  %12 = icmp eq i32 %11, 0, !dbg !6069
  br i1 %12, label %29, label %13, !dbg !6071

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %7, align 4, !dbg !6072, !tbaa !3862
  %15 = and i32 %14, -129, !dbg !6072
  store volatile i32 %15, i32* %7, align 4, !dbg !6072, !tbaa !3862
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !6074
  %17 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !6074, !tbaa !5734
  %18 = icmp eq %struct.__DMA_HandleTypeDef* %17, null, !dbg !6076
  br i1 %18, label %29, label %19, !dbg !6077

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %17, i32 0, i32 8, !dbg !6078
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %20, align 4, !dbg !6080, !tbaa !5747
  %21 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %17) #26, !dbg !6081
  %22 = icmp eq i32 %21, 0, !dbg !6083
  br i1 %22, label %29, label %23, !dbg !6084

23:                                               ; preds = %19
  %24 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !6085, !tbaa !5734
  %25 = call i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef %24) #26, !dbg !6088
  %26 = icmp eq i32 %25, 32, !dbg !6089
  br i1 %26, label %27, label %29, !dbg !6090

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6091
  store volatile i32 16, i32* %28, align 4, !dbg !6093, !tbaa !5248
  br label %57, !dbg !6094

29:                                               ; preds = %13, %23, %19, %1
  %30 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6095, !tbaa !5241
  %31 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %30, i32 0, i32 5, !dbg !6095
  %32 = load volatile i32, i32* %31, align 4, !dbg !6095, !tbaa !3862
  %33 = and i32 %32, 64, !dbg !6095
  %34 = icmp eq i32 %33, 0, !dbg !6095
  br i1 %34, label %51, label %35, !dbg !6097

35:                                               ; preds = %29
  %36 = load volatile i32, i32* %31, align 4, !dbg !6098, !tbaa !3862
  %37 = and i32 %36, -65, !dbg !6098
  store volatile i32 %37, i32* %31, align 4, !dbg !6098, !tbaa !3862
  %38 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !6100
  %39 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %38, align 4, !dbg !6100, !tbaa !5890
  %40 = icmp eq %struct.__DMA_HandleTypeDef* %39, null, !dbg !6102
  br i1 %40, label %51, label %41, !dbg !6103

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %39, i32 0, i32 8, !dbg !6104
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %42, align 4, !dbg !6106, !tbaa !5747
  %43 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %39) #26, !dbg !6107
  %44 = icmp eq i32 %43, 0, !dbg !6109
  br i1 %44, label %51, label %45, !dbg !6110

45:                                               ; preds = %41
  %46 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %38, align 4, !dbg !6111, !tbaa !5890
  %47 = call i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef %46) #26, !dbg !6114
  %48 = icmp eq i32 %47, 32, !dbg !6115
  br i1 %48, label %49, label %51, !dbg !6116

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6117
  store volatile i32 16, i32* %50, align 4, !dbg !6119, !tbaa !5248
  br label %57, !dbg !6120

51:                                               ; preds = %35, %45, %41, %29
  %52 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !6121
  store volatile i16 0, i16* %52, align 2, !dbg !6122, !tbaa !5453
  %53 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !6123
  store volatile i16 0, i16* %53, align 2, !dbg !6124, !tbaa !5569
  %54 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6125
  store volatile i32 0, i32* %54, align 4, !dbg !6126, !tbaa !5248
  %55 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !6127
  store volatile i32 32, i32* %55, align 4, !dbg !6128, !tbaa !5252
  %56 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6129
  store volatile i32 32, i32* %56, align 4, !dbg !6130, !tbaa !5228
  br label %57, !dbg !6131

57:                                               ; preds = %51, %49, %27
  %58 = phi i32 [ 3, %27 ], [ 3, %49 ], [ 0, %51 ], !dbg !6066
  ret i32 %58, !dbg !6132
}

declare !dbg !6133 dso_local i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef) local_unnamed_addr #25

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_AbortTransmit(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !6136 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6138, metadata !DIExpression()), !dbg !6139
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6140
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6140, !tbaa !5241
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !6140
  %5 = load volatile i32, i32* %4, align 4, !dbg !6140, !tbaa !3974
  %6 = and i32 %5, -193, !dbg !6140
  store volatile i32 %6, i32* %4, align 4, !dbg !6140, !tbaa !3974
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !6141
  %8 = load volatile i32, i32* %7, align 4, !dbg !6141, !tbaa !3862
  %9 = and i32 %8, 128, !dbg !6141
  %10 = icmp eq i32 %9, 0, !dbg !6141
  br i1 %10, label %27, label %11, !dbg !6143

11:                                               ; preds = %1
  %12 = load volatile i32, i32* %7, align 4, !dbg !6144, !tbaa !3862
  %13 = and i32 %12, -129, !dbg !6144
  store volatile i32 %13, i32* %7, align 4, !dbg !6144, !tbaa !3862
  %14 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !6146
  %15 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %14, align 4, !dbg !6146, !tbaa !5734
  %16 = icmp eq %struct.__DMA_HandleTypeDef* %15, null, !dbg !6148
  br i1 %16, label %27, label %17, !dbg !6149

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %15, i32 0, i32 8, !dbg !6150
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %18, align 4, !dbg !6152, !tbaa !5747
  %19 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %15) #26, !dbg !6153
  %20 = icmp eq i32 %19, 0, !dbg !6155
  br i1 %20, label %27, label %21, !dbg !6156

21:                                               ; preds = %17
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %14, align 4, !dbg !6157, !tbaa !5734
  %23 = call i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef %22) #26, !dbg !6160
  %24 = icmp eq i32 %23, 32, !dbg !6161
  br i1 %24, label %25, label %27, !dbg !6162

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6163
  store volatile i32 16, i32* %26, align 4, !dbg !6165, !tbaa !5248
  br label %30, !dbg !6166

27:                                               ; preds = %11, %21, %17, %1
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !6167
  store volatile i16 0, i16* %28, align 2, !dbg !6168, !tbaa !5453
  %29 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6169
  store volatile i32 32, i32* %29, align 4, !dbg !6170, !tbaa !5228
  br label %30, !dbg !6171

30:                                               ; preds = %27, %25
  %31 = phi i32 [ 3, %25 ], [ 0, %27 ], !dbg !6139
  ret i32 %31, !dbg !6172
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_AbortReceive(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !6173 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6175, metadata !DIExpression()), !dbg !6176
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6177
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6177, !tbaa !5241
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !6177
  %5 = load volatile i32, i32* %4, align 4, !dbg !6177, !tbaa !3974
  %6 = and i32 %5, -289, !dbg !6177
  store volatile i32 %6, i32* %4, align 4, !dbg !6177, !tbaa !3974
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !6178
  %8 = load volatile i32, i32* %7, align 4, !dbg !6178, !tbaa !3862
  %9 = and i32 %8, -2, !dbg !6178
  store volatile i32 %9, i32* %7, align 4, !dbg !6178, !tbaa !3862
  %10 = load volatile i32, i32* %7, align 4, !dbg !6179, !tbaa !3862
  %11 = and i32 %10, 64, !dbg !6179
  %12 = icmp eq i32 %11, 0, !dbg !6179
  br i1 %12, label %29, label %13, !dbg !6181

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %7, align 4, !dbg !6182, !tbaa !3862
  %15 = and i32 %14, -65, !dbg !6182
  store volatile i32 %15, i32* %7, align 4, !dbg !6182, !tbaa !3862
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !6184
  %17 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !6184, !tbaa !5890
  %18 = icmp eq %struct.__DMA_HandleTypeDef* %17, null, !dbg !6186
  br i1 %18, label %29, label %19, !dbg !6187

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %17, i32 0, i32 8, !dbg !6188
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %20, align 4, !dbg !6190, !tbaa !5747
  %21 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %17) #26, !dbg !6191
  %22 = icmp eq i32 %21, 0, !dbg !6193
  br i1 %22, label %29, label %23, !dbg !6194

23:                                               ; preds = %19
  %24 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !6195, !tbaa !5890
  %25 = call i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef %24) #26, !dbg !6198
  %26 = icmp eq i32 %25, 32, !dbg !6199
  br i1 %26, label %27, label %29, !dbg !6200

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6201
  store volatile i32 16, i32* %28, align 4, !dbg !6203, !tbaa !5248
  br label %32, !dbg !6204

29:                                               ; preds = %13, %23, %19, %1
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !6205
  store volatile i16 0, i16* %30, align 2, !dbg !6206, !tbaa !5569
  %31 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !6207
  store volatile i32 32, i32* %31, align 4, !dbg !6208, !tbaa !5252
  br label %32, !dbg !6209

32:                                               ; preds = %29, %27
  %33 = phi i32 [ 3, %27 ], [ 0, %29 ], !dbg !6176
  ret i32 %33, !dbg !6210
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Abort_IT(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !6211 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6213, metadata !DIExpression()), !dbg !6215
  call void @llvm.dbg.value(metadata i32 1, metadata !6214, metadata !DIExpression()), !dbg !6215
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6216
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6216, !tbaa !5241
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !6216
  %5 = load volatile i32, i32* %4, align 4, !dbg !6216, !tbaa !3974
  %6 = and i32 %5, -481, !dbg !6216
  store volatile i32 %6, i32* %4, align 4, !dbg !6216, !tbaa !3974
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !6217
  %8 = load volatile i32, i32* %7, align 4, !dbg !6217, !tbaa !3862
  %9 = and i32 %8, -2, !dbg !6217
  store volatile i32 %9, i32* %7, align 4, !dbg !6217, !tbaa !3862
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !6218
  %11 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %10, align 4, !dbg !6218, !tbaa !5734
  %12 = icmp eq %struct.__DMA_HandleTypeDef* %11, null, !dbg !6220
  br i1 %12, label %19, label %13, !dbg !6221

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %7, align 4, !dbg !6222, !tbaa !3862
  %15 = and i32 %14, 128, !dbg !6222
  %16 = icmp eq i32 %15, 0, !dbg !6222
  %17 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %11, i32 0, i32 8, !dbg !6225
  %18 = select i1 %16, void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)* @UART_DMATxAbortCallback
  store void (%struct.__DMA_HandleTypeDef*)* %18, void (%struct.__DMA_HandleTypeDef*)** %17, align 4, !dbg !6225, !tbaa !5747
  br label %19, !dbg !6226

19:                                               ; preds = %13, %1
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !6226
  %21 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %20, align 4, !dbg !6226, !tbaa !5890
  %22 = icmp eq %struct.__DMA_HandleTypeDef* %21, null, !dbg !6228
  br i1 %22, label %29, label %23, !dbg !6229

23:                                               ; preds = %19
  %24 = load volatile i32, i32* %7, align 4, !dbg !6230, !tbaa !3862
  %25 = and i32 %24, 64, !dbg !6230
  %26 = icmp eq i32 %25, 0, !dbg !6230
  %27 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %21, i32 0, i32 8, !dbg !6233
  %28 = select i1 %26, void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)* @UART_DMARxAbortCallback
  store void (%struct.__DMA_HandleTypeDef*)* %28, void (%struct.__DMA_HandleTypeDef*)** %27, align 4, !dbg !6233, !tbaa !5747
  br label %29, !dbg !6234

29:                                               ; preds = %23, %19
  %30 = load volatile i32, i32* %7, align 4, !dbg !6234, !tbaa !3862
  %31 = and i32 %30, 128, !dbg !6234
  %32 = icmp eq i32 %31, 0, !dbg !6234
  br i1 %32, label %42, label %33, !dbg !6236

33:                                               ; preds = %29
  %34 = load volatile i32, i32* %7, align 4, !dbg !6237, !tbaa !3862
  %35 = and i32 %34, -129, !dbg !6237
  store volatile i32 %35, i32* %7, align 4, !dbg !6237, !tbaa !3862
  br i1 %12, label %42, label %36, !dbg !6239

36:                                               ; preds = %33
  %37 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %11) #26, !dbg !6240
  %38 = icmp eq i32 %37, 0, !dbg !6244
  br i1 %38, label %42, label %39, !dbg !6245

39:                                               ; preds = %36
  %40 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %10, align 4, !dbg !6246, !tbaa !5734
  %41 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %40, i32 0, i32 8, !dbg !6248
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %41, align 4, !dbg !6249, !tbaa !5747
  br label %42, !dbg !6250

42:                                               ; preds = %36, %33, %39, %29
  %43 = phi i32 [ 1, %39 ], [ 1, %33 ], [ 1, %29 ], [ 0, %36 ], !dbg !6215
  call void @llvm.dbg.value(metadata i32 %43, metadata !6214, metadata !DIExpression()), !dbg !6215
  %44 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6251, !tbaa !5241
  %45 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %44, i32 0, i32 5, !dbg !6251
  %46 = load volatile i32, i32* %45, align 4, !dbg !6251, !tbaa !3862
  %47 = and i32 %46, 64, !dbg !6251
  %48 = icmp eq i32 %47, 0, !dbg !6251
  br i1 %48, label %60, label %49, !dbg !6253

49:                                               ; preds = %42
  %50 = load volatile i32, i32* %45, align 4, !dbg !6254, !tbaa !3862
  %51 = and i32 %50, -65, !dbg !6254
  store volatile i32 %51, i32* %45, align 4, !dbg !6254, !tbaa !3862
  %52 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %20, align 4, !dbg !6256, !tbaa !5890
  %53 = icmp eq %struct.__DMA_HandleTypeDef* %52, null, !dbg !6258
  br i1 %53, label %60, label %54, !dbg !6259

54:                                               ; preds = %49
  %55 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %52) #26, !dbg !6260
  %56 = icmp eq i32 %55, 0, !dbg !6263
  br i1 %56, label %60, label %57, !dbg !6264

57:                                               ; preds = %54
  %58 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %20, align 4, !dbg !6265, !tbaa !5890
  %59 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %58, i32 0, i32 8, !dbg !6267
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %59, align 4, !dbg !6268, !tbaa !5747
  call void @llvm.dbg.value(metadata i32 1, metadata !6214, metadata !DIExpression()), !dbg !6215
  br label %60, !dbg !6269

60:                                               ; preds = %54, %49, %57, %42
  %61 = phi i32 [ 1, %57 ], [ %43, %49 ], [ %43, %42 ], [ 0, %54 ], !dbg !6215
  call void @llvm.dbg.value(metadata i32 %61, metadata !6214, metadata !DIExpression()), !dbg !6215
  %62 = icmp eq i32 %61, 1, !dbg !6270
  br i1 %62, label %63, label %69, !dbg !6272

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !6273
  store volatile i16 0, i16* %64, align 2, !dbg !6275, !tbaa !5453
  %65 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !6276
  store volatile i16 0, i16* %65, align 2, !dbg !6277, !tbaa !5569
  %66 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6278
  store volatile i32 0, i32* %66, align 4, !dbg !6279, !tbaa !5248
  %67 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6280
  store volatile i32 32, i32* %67, align 4, !dbg !6281, !tbaa !5228
  %68 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !6282
  store volatile i32 32, i32* %68, align 4, !dbg !6283, !tbaa !5252
  call void @HAL_UART_AbortCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6284
  br label %69, !dbg !6285

69:                                               ; preds = %63, %60
  ret i32 0, !dbg !6286
}

; Function Attrs: noinline nounwind
define internal void @UART_DMATxAbortCallback(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !6287 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !6289, metadata !DIExpression()), !dbg !6291
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !6292
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !6292
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !6292, !tbaa !5768
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !6290, metadata !DIExpression()), !dbg !6291
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 8, !dbg !6293
  %6 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %5, align 4, !dbg !6293, !tbaa !5734
  %7 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %6, i32 0, i32 8, !dbg !6294
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %7, align 4, !dbg !6295, !tbaa !5747
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 9, !dbg !6296
  %9 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %8, align 4, !dbg !6296, !tbaa !5890
  %10 = icmp eq %struct.__DMA_HandleTypeDef* %9, null, !dbg !6298
  br i1 %10, label %15, label %11, !dbg !6299

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %9, i32 0, i32 8, !dbg !6300
  %13 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %12, align 4, !dbg !6300, !tbaa !5747
  %14 = icmp eq void (%struct.__DMA_HandleTypeDef*)* %13, null, !dbg !6303
  br i1 %14, label %15, label %21, !dbg !6304

15:                                               ; preds = %11, %1
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !6305
  store volatile i16 0, i16* %16, align 2, !dbg !6306, !tbaa !5453
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !6307
  store volatile i16 0, i16* %17, align 2, !dbg !6308, !tbaa !5569
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 13, !dbg !6309
  store volatile i32 0, i32* %18, align 4, !dbg !6310, !tbaa !5248
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 11, !dbg !6311
  store volatile i32 32, i32* %19, align 4, !dbg !6312, !tbaa !5228
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !6313
  store volatile i32 32, i32* %20, align 4, !dbg !6314, !tbaa !5252
  call void @HAL_UART_AbortCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !6315
  br label %21, !dbg !6316

21:                                               ; preds = %11, %15
  ret void, !dbg !6316
}

; Function Attrs: noinline nounwind
define internal void @UART_DMARxAbortCallback(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !6317 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !6319, metadata !DIExpression()), !dbg !6321
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !6322
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !6322
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !6322, !tbaa !5768
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !6320, metadata !DIExpression()), !dbg !6321
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 9, !dbg !6323
  %6 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %5, align 4, !dbg !6323, !tbaa !5890
  %7 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %6, i32 0, i32 8, !dbg !6324
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %7, align 4, !dbg !6325, !tbaa !5747
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 8, !dbg !6326
  %9 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %8, align 4, !dbg !6326, !tbaa !5734
  %10 = icmp eq %struct.__DMA_HandleTypeDef* %9, null, !dbg !6328
  br i1 %10, label %15, label %11, !dbg !6329

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %9, i32 0, i32 8, !dbg !6330
  %13 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %12, align 4, !dbg !6330, !tbaa !5747
  %14 = icmp eq void (%struct.__DMA_HandleTypeDef*)* %13, null, !dbg !6333
  br i1 %14, label %15, label %21, !dbg !6334

15:                                               ; preds = %11, %1
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !6335
  store volatile i16 0, i16* %16, align 2, !dbg !6336, !tbaa !5453
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !6337
  store volatile i16 0, i16* %17, align 2, !dbg !6338, !tbaa !5569
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 13, !dbg !6339
  store volatile i32 0, i32* %18, align 4, !dbg !6340, !tbaa !5248
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 11, !dbg !6341
  store volatile i32 32, i32* %19, align 4, !dbg !6342, !tbaa !5228
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !6343
  store volatile i32 32, i32* %20, align 4, !dbg !6344, !tbaa !5252
  call void @HAL_UART_AbortCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !6345
  br label %21, !dbg !6346

21:                                               ; preds = %11, %15
  ret void, !dbg !6346
}

declare !dbg !6347 dso_local i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef) local_unnamed_addr #25

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_AbortCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !6348 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6350, metadata !DIExpression()), !dbg !6351
  ret void, !dbg !6352
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_AbortTransmit_IT(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !6353 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6355, metadata !DIExpression()), !dbg !6356
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6357
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6357, !tbaa !5241
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !6357
  %5 = load volatile i32, i32* %4, align 4, !dbg !6357, !tbaa !3974
  %6 = and i32 %5, -193, !dbg !6357
  store volatile i32 %6, i32* %4, align 4, !dbg !6357, !tbaa !3974
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !6358
  %8 = load volatile i32, i32* %7, align 4, !dbg !6358, !tbaa !3862
  %9 = and i32 %8, 128, !dbg !6358
  %10 = icmp eq i32 %9, 0, !dbg !6358
  br i1 %10, label %28, label %11, !dbg !6360

11:                                               ; preds = %1
  %12 = load volatile i32, i32* %7, align 4, !dbg !6361, !tbaa !3862
  %13 = and i32 %12, -129, !dbg !6361
  store volatile i32 %13, i32* %7, align 4, !dbg !6361, !tbaa !3862
  %14 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !6363
  %15 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %14, align 4, !dbg !6363, !tbaa !5734
  %16 = icmp eq %struct.__DMA_HandleTypeDef* %15, null, !dbg !6365
  br i1 %16, label %25, label %17, !dbg !6366

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %15, i32 0, i32 8, !dbg !6367
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMATxOnlyAbortCallback, void (%struct.__DMA_HandleTypeDef*)** %18, align 4, !dbg !6369, !tbaa !5747
  %19 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %15) #26, !dbg !6370
  %20 = icmp eq i32 %19, 0, !dbg !6372
  br i1 %20, label %31, label %21, !dbg !6373

21:                                               ; preds = %17
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %14, align 4, !dbg !6374, !tbaa !5734
  %23 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 8, !dbg !6376
  %24 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %23, align 4, !dbg !6376, !tbaa !5747
  call void %24(%struct.__DMA_HandleTypeDef* noundef %22) #26, !dbg !6377
  br label %31, !dbg !6378

25:                                               ; preds = %11
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !6379
  store volatile i16 0, i16* %26, align 2, !dbg !6381, !tbaa !5453
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6382
  store volatile i32 32, i32* %27, align 4, !dbg !6383, !tbaa !5228
  call void @HAL_UART_AbortTransmitCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6384
  br label %31

28:                                               ; preds = %1
  %29 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !6385
  store volatile i16 0, i16* %29, align 2, !dbg !6387, !tbaa !5453
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6388
  store volatile i32 32, i32* %30, align 4, !dbg !6389, !tbaa !5228
  call void @HAL_UART_AbortTransmitCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6390
  br label %31

31:                                               ; preds = %25, %21, %17, %28
  ret i32 0, !dbg !6391
}

; Function Attrs: noinline nounwind
define internal void @UART_DMATxOnlyAbortCallback(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !6392 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !6394, metadata !DIExpression()), !dbg !6396
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !6397
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !6397
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !6397, !tbaa !5768
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !6395, metadata !DIExpression()), !dbg !6396
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !6398
  store volatile i16 0, i16* %5, align 2, !dbg !6399, !tbaa !5453
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 11, !dbg !6400
  store volatile i32 32, i32* %6, align 4, !dbg !6401, !tbaa !5228
  call void @HAL_UART_AbortTransmitCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !6402
  ret void, !dbg !6403
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_AbortTransmitCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !6404 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6406, metadata !DIExpression()), !dbg !6407
  ret void, !dbg !6408
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_AbortReceive_IT(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !6409 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6411, metadata !DIExpression()), !dbg !6412
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6413
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6413, !tbaa !5241
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !6413
  %5 = load volatile i32, i32* %4, align 4, !dbg !6413, !tbaa !3974
  %6 = and i32 %5, -289, !dbg !6413
  store volatile i32 %6, i32* %4, align 4, !dbg !6413, !tbaa !3974
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !6414
  %8 = load volatile i32, i32* %7, align 4, !dbg !6414, !tbaa !3862
  %9 = and i32 %8, -2, !dbg !6414
  store volatile i32 %9, i32* %7, align 4, !dbg !6414, !tbaa !3862
  %10 = load volatile i32, i32* %7, align 4, !dbg !6415, !tbaa !3862
  %11 = and i32 %10, 64, !dbg !6415
  %12 = icmp eq i32 %11, 0, !dbg !6415
  br i1 %12, label %30, label %13, !dbg !6417

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %7, align 4, !dbg !6418, !tbaa !3862
  %15 = and i32 %14, -65, !dbg !6418
  store volatile i32 %15, i32* %7, align 4, !dbg !6418, !tbaa !3862
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !6420
  %17 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !6420, !tbaa !5890
  %18 = icmp eq %struct.__DMA_HandleTypeDef* %17, null, !dbg !6422
  br i1 %18, label %27, label %19, !dbg !6423

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %17, i32 0, i32 8, !dbg !6424
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMARxOnlyAbortCallback, void (%struct.__DMA_HandleTypeDef*)** %20, align 4, !dbg !6426, !tbaa !5747
  %21 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %17) #26, !dbg !6427
  %22 = icmp eq i32 %21, 0, !dbg !6429
  br i1 %22, label %33, label %23, !dbg !6430

23:                                               ; preds = %19
  %24 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !6431, !tbaa !5890
  %25 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %24, i32 0, i32 8, !dbg !6433
  %26 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %25, align 4, !dbg !6433, !tbaa !5747
  call void %26(%struct.__DMA_HandleTypeDef* noundef %24) #26, !dbg !6434
  br label %33, !dbg !6435

27:                                               ; preds = %13
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !6436
  store volatile i16 0, i16* %28, align 2, !dbg !6438, !tbaa !5569
  %29 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !6439
  store volatile i32 32, i32* %29, align 4, !dbg !6440, !tbaa !5252
  call void @HAL_UART_AbortReceiveCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6441
  br label %33

30:                                               ; preds = %1
  %31 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !6442
  store volatile i16 0, i16* %31, align 2, !dbg !6444, !tbaa !5569
  %32 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !6445
  store volatile i32 32, i32* %32, align 4, !dbg !6446, !tbaa !5252
  call void @HAL_UART_AbortReceiveCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6447
  br label %33

33:                                               ; preds = %27, %23, %19, %30
  ret i32 0, !dbg !6448
}

; Function Attrs: noinline nounwind
define internal void @UART_DMARxOnlyAbortCallback(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !6449 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !6451, metadata !DIExpression()), !dbg !6453
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !6454
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !6454
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !6454, !tbaa !5768
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !6452, metadata !DIExpression()), !dbg !6453
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !6455
  store volatile i16 0, i16* %5, align 2, !dbg !6456, !tbaa !5569
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !6457
  store volatile i32 32, i32* %6, align 4, !dbg !6458, !tbaa !5252
  call void @HAL_UART_AbortReceiveCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !6459
  ret void, !dbg !6460
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_AbortReceiveCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !6461 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6463, metadata !DIExpression()), !dbg !6464
  ret void, !dbg !6465
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_UART_IRQHandler(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !6466 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6468, metadata !DIExpression()), !dbg !6474
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6475
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6475, !tbaa !5241
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 0, !dbg !6475
  %5 = load volatile i32, i32* %4, align 4, !dbg !6475, !tbaa !5513
  call void @llvm.dbg.value(metadata i32 %5, metadata !6469, metadata !DIExpression()), !dbg !6474
  %6 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !6476
  %7 = load volatile i32, i32* %6, align 4, !dbg !6476, !tbaa !3974
  call void @llvm.dbg.value(metadata i32 %7, metadata !6470, metadata !DIExpression()), !dbg !6474
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !6477
  %9 = load volatile i32, i32* %8, align 4, !dbg !6477, !tbaa !3862
  call void @llvm.dbg.value(metadata i32 %9, metadata !6471, metadata !DIExpression()), !dbg !6474
  call void @llvm.dbg.value(metadata i32 0, metadata !6472, metadata !DIExpression()), !dbg !6474
  call void @llvm.dbg.value(metadata i32 0, metadata !6473, metadata !DIExpression()), !dbg !6474
  call void @llvm.dbg.value(metadata i32 %5, metadata !6472, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !6474
  %10 = and i32 %5, 32
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %5, 47, !dbg !6478
  %13 = icmp ne i32 %12, 32, !dbg !6478
  %14 = and i32 %7, 32
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %13, i1 true, i1 %15, !dbg !6478
  br i1 %16, label %18, label %17, !dbg !6478

17:                                               ; preds = %1
  call fastcc void @UART_Receive_IT(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6479
  br label %115, !dbg !6484

18:                                               ; preds = %1
  %19 = and i32 %5, 15, !dbg !6485
  call void @llvm.dbg.value(metadata i32 %19, metadata !6472, metadata !DIExpression()), !dbg !6474
  %20 = icmp eq i32 %19, 0, !dbg !6486
  br i1 %20, label %101, label %21, !dbg !6488

21:                                               ; preds = %18
  %22 = and i32 %9, 1, !dbg !6489
  %23 = icmp eq i32 %22, 0, !dbg !6490
  %24 = and i32 %7, 288
  %25 = icmp eq i32 %24, 0
  %26 = select i1 %23, i1 %25, i1 false, !dbg !6491
  br i1 %26, label %101, label %27, !dbg !6491

27:                                               ; preds = %21
  %28 = and i32 %5, 1, !dbg !6492
  %29 = icmp eq i32 %28, 0, !dbg !6495
  %30 = and i32 %7, 256
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %29, i1 true, i1 %31, !dbg !6496
  br i1 %32, label %37, label %33, !dbg !6496

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6497
  %35 = load volatile i32, i32* %34, align 4, !dbg !6499, !tbaa !5248
  %36 = or i32 %35, 1, !dbg !6499
  store volatile i32 %36, i32* %34, align 4, !dbg !6499, !tbaa !5248
  br label %37, !dbg !6500

37:                                               ; preds = %33, %27
  %38 = and i32 %5, 4, !dbg !6501
  %39 = icmp eq i32 %38, 0, !dbg !6503
  %40 = select i1 %39, i1 true, i1 %23, !dbg !6504
  br i1 %40, label %45, label %41, !dbg !6504

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6505
  %43 = load volatile i32, i32* %42, align 4, !dbg !6507, !tbaa !5248
  %44 = or i32 %43, 2, !dbg !6507
  store volatile i32 %44, i32* %42, align 4, !dbg !6507, !tbaa !5248
  br label %45, !dbg !6508

45:                                               ; preds = %37, %41
  %46 = and i32 %5, 2, !dbg !6509
  %47 = icmp eq i32 %46, 0, !dbg !6511
  %48 = select i1 %47, i1 true, i1 %23, !dbg !6512
  br i1 %48, label %53, label %49, !dbg !6512

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6513
  %51 = load volatile i32, i32* %50, align 4, !dbg !6515, !tbaa !5248
  %52 = or i32 %51, 4, !dbg !6515
  store volatile i32 %52, i32* %50, align 4, !dbg !6515, !tbaa !5248
  br label %53, !dbg !6516

53:                                               ; preds = %45, %49
  %54 = and i32 %5, 8, !dbg !6517
  %55 = icmp eq i32 %54, 0, !dbg !6519
  %56 = select i1 %55, i1 true, i1 %23, !dbg !6520
  br i1 %56, label %61, label %57, !dbg !6520

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6521
  %59 = load volatile i32, i32* %58, align 4, !dbg !6523, !tbaa !5248
  %60 = or i32 %59, 8, !dbg !6523
  store volatile i32 %60, i32* %58, align 4, !dbg !6523, !tbaa !5248
  br label %61, !dbg !6524

61:                                               ; preds = %53, %57
  %62 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6525
  %63 = load volatile i32, i32* %62, align 4, !dbg !6525, !tbaa !5248
  %64 = icmp eq i32 %63, 0, !dbg !6527
  br i1 %64, label %115, label %65, !dbg !6528

65:                                               ; preds = %61
  %66 = select i1 %11, i1 true, i1 %15, !dbg !6529
  br i1 %66, label %68, label %67, !dbg !6529

67:                                               ; preds = %65
  call fastcc void @UART_Receive_IT(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6532
  br label %68, !dbg !6534

68:                                               ; preds = %67, %65
  %69 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6535, !tbaa !5241
  %70 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %69, i32 0, i32 5, !dbg !6535
  %71 = load volatile i32, i32* %70, align 4, !dbg !6535, !tbaa !3862
  %72 = and i32 %71, 64, !dbg !6535
  %73 = icmp ne i32 %72, 0, !dbg !6535
  call void @llvm.dbg.value(metadata i1 %73, metadata !6473, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6474
  %74 = load volatile i32, i32* %62, align 4, !dbg !6536, !tbaa !5248
  %75 = and i32 %74, 8, !dbg !6538
  %76 = icmp ne i32 %75, 0, !dbg !6539
  %77 = select i1 %76, i1 true, i1 %73, !dbg !6540
  br i1 %77, label %78, label %100, !dbg !6540

78:                                               ; preds = %68
  call fastcc void @UART_EndRxTransfer(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6541
  %79 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6543, !tbaa !5241
  %80 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %79, i32 0, i32 5, !dbg !6543
  %81 = load volatile i32, i32* %80, align 4, !dbg !6543, !tbaa !3862
  %82 = and i32 %81, 64, !dbg !6543
  %83 = icmp eq i32 %82, 0, !dbg !6543
  br i1 %83, label %99, label %84, !dbg !6545

84:                                               ; preds = %78
  %85 = load volatile i32, i32* %80, align 4, !dbg !6546, !tbaa !3862
  %86 = and i32 %85, -65, !dbg !6546
  store volatile i32 %86, i32* %80, align 4, !dbg !6546, !tbaa !3862
  %87 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !6548
  %88 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %87, align 4, !dbg !6548, !tbaa !5890
  %89 = icmp eq %struct.__DMA_HandleTypeDef* %88, null, !dbg !6550
  br i1 %89, label %98, label %90, !dbg !6551

90:                                               ; preds = %84
  %91 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %88, i32 0, i32 8, !dbg !6552
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMAAbortOnError, void (%struct.__DMA_HandleTypeDef*)** %91, align 4, !dbg !6554, !tbaa !5747
  %92 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %88) #26, !dbg !6555
  %93 = icmp eq i32 %92, 0, !dbg !6557
  br i1 %93, label %115, label %94, !dbg !6558

94:                                               ; preds = %90
  %95 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %87, align 4, !dbg !6559, !tbaa !5890
  %96 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %95, i32 0, i32 8, !dbg !6561
  %97 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %96, align 4, !dbg !6561, !tbaa !5747
  call void %97(%struct.__DMA_HandleTypeDef* noundef %95) #26, !dbg !6562
  br label %115, !dbg !6563

98:                                               ; preds = %84
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6564
  br label %115

99:                                               ; preds = %78
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6566
  br label %115

100:                                              ; preds = %68
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6568
  store volatile i32 0, i32* %62, align 4, !dbg !6570, !tbaa !5248
  br label %115

101:                                              ; preds = %21, %18
  %102 = and i32 %5, 128, !dbg !6571
  %103 = icmp eq i32 %102, 0, !dbg !6573
  %104 = and i32 %7, 128
  %105 = icmp eq i32 %104, 0
  %106 = select i1 %103, i1 true, i1 %105, !dbg !6574
  br i1 %106, label %108, label %107, !dbg !6574

107:                                              ; preds = %101
  call fastcc void @UART_Transmit_IT(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6575
  br label %115, !dbg !6577

108:                                              ; preds = %101
  %109 = and i32 %5, 64, !dbg !6578
  %110 = icmp eq i32 %109, 0, !dbg !6580
  %111 = and i32 %7, 64
  %112 = icmp eq i32 %111, 0
  %113 = select i1 %110, i1 true, i1 %112, !dbg !6581
  br i1 %113, label %115, label %114, !dbg !6581

114:                                              ; preds = %108
  call fastcc void @UART_EndTransmit_IT(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6582
  br label %115, !dbg !6584

115:                                              ; preds = %108, %61, %99, %90, %94, %98, %100, %114, %107, %17
  ret void, !dbg !6585
}

; Function Attrs: noinline nounwind
define internal fastcc void @UART_Receive_IT(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #3 !dbg !6586 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6588, metadata !DIExpression()), !dbg !6590
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !6591
  %3 = load volatile i32, i32* %2, align 4, !dbg !6591, !tbaa !5252
  %4 = icmp eq i32 %3, 34, !dbg !6593
  br i1 %4, label %5, label %63, !dbg !6594

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1, !dbg !6595
  %7 = load i32, i32* %6, align 4, !dbg !6595, !tbaa !5271
  %8 = icmp eq i32 %7, 4096, !dbg !6598
  br i1 %8, label %9, label %29, !dbg !6599

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !6600
  %11 = bitcast i8** %10 to i16**, !dbg !6600
  %12 = load i16*, i16** %11, align 4, !dbg !6600, !tbaa !5687
  call void @llvm.dbg.value(metadata i16* %12, metadata !6589, metadata !DIExpression()), !dbg !6590
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3, !dbg !6602
  %14 = load i32, i32* %13, align 4, !dbg !6602, !tbaa !5273
  %15 = icmp eq i32 %14, 0, !dbg !6604
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6605
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %16, align 4, !dbg !6605, !tbaa !5241
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 1, !dbg !6605
  %19 = load volatile i32, i32* %18, align 4, !dbg !6605, !tbaa !5473
  %20 = trunc i32 %19 to i16, !dbg !6605
  br i1 %15, label %21, label %25, !dbg !6606

21:                                               ; preds = %9
  %22 = and i16 %20, 511, !dbg !6607
  store i16 %22, i16* %12, align 2, !dbg !6609, !tbaa !5468
  %23 = load i8*, i8** %10, align 4, !dbg !6610, !tbaa !5687
  %24 = getelementptr inbounds i8, i8* %23, i32 2, !dbg !6610
  store i8* %24, i8** %10, align 4, !dbg !6610, !tbaa !5687
  br label %47, !dbg !6611

25:                                               ; preds = %9
  %26 = and i16 %20, 255, !dbg !6612
  store i16 %26, i16* %12, align 2, !dbg !6614, !tbaa !5468
  %27 = load i8*, i8** %10, align 4, !dbg !6615, !tbaa !5687
  %28 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !6615
  store i8* %28, i8** %10, align 4, !dbg !6615, !tbaa !5687
  br label %47

29:                                               ; preds = %5
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3, !dbg !6616
  %31 = load i32, i32* %30, align 4, !dbg !6616, !tbaa !5273
  %32 = icmp eq i32 %31, 0, !dbg !6619
  %33 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6620
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %33, align 4, !dbg !6620, !tbaa !5241
  %35 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 1, !dbg !6620
  %36 = load volatile i32, i32* %35, align 4, !dbg !6620, !tbaa !5473
  %37 = trunc i32 %36 to i8, !dbg !6620
  br i1 %32, label %38, label %42, !dbg !6621

38:                                               ; preds = %29
  %39 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !6622
  %40 = load i8*, i8** %39, align 4, !dbg !6624, !tbaa !5687
  %41 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !6624
  store i8* %41, i8** %39, align 4, !dbg !6624, !tbaa !5687
  store i8 %37, i8* %40, align 1, !dbg !6625, !tbaa !1653
  br label %47, !dbg !6626

42:                                               ; preds = %29
  %43 = and i8 %37, 127, !dbg !6627
  %44 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !6629
  %45 = load i8*, i8** %44, align 4, !dbg !6630, !tbaa !5687
  %46 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !6630
  store i8* %46, i8** %44, align 4, !dbg !6630, !tbaa !5687
  store i8 %43, i8* %45, align 1, !dbg !6631, !tbaa !1653
  br label %47

47:                                               ; preds = %38, %42, %21, %25
  %48 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !6632
  %49 = load volatile i16, i16* %48, align 2, !dbg !6634, !tbaa !5569
  %50 = add i16 %49, -1, !dbg !6634
  store volatile i16 %50, i16* %48, align 2, !dbg !6634, !tbaa !5569
  %51 = icmp eq i16 %50, 0, !dbg !6635
  br i1 %51, label %52, label %63, !dbg !6636

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6637
  %54 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %53, align 4, !dbg !6637, !tbaa !5241
  %55 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %54, i32 0, i32 3, !dbg !6637
  %56 = load volatile i32, i32* %55, align 4, !dbg !6637, !tbaa !3974
  %57 = and i32 %56, -33, !dbg !6637
  store volatile i32 %57, i32* %55, align 4, !dbg !6637, !tbaa !3974
  %58 = load volatile i32, i32* %55, align 4, !dbg !6639, !tbaa !3974
  %59 = and i32 %58, -257, !dbg !6639
  store volatile i32 %59, i32* %55, align 4, !dbg !6639, !tbaa !3974
  %60 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %54, i32 0, i32 5, !dbg !6640
  %61 = load volatile i32, i32* %60, align 4, !dbg !6640, !tbaa !3862
  %62 = and i32 %61, -2, !dbg !6640
  store volatile i32 %62, i32* %60, align 4, !dbg !6640, !tbaa !3862
  store volatile i32 32, i32* %2, align 4, !dbg !6641, !tbaa !5252
  call void @HAL_UART_RxCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6642
  br label %63, !dbg !6643

63:                                               ; preds = %1, %47, %52
  ret void, !dbg !6644
}

; Function Attrs: noinline nounwind
define internal void @UART_DMAAbortOnError(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !6645 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !6647, metadata !DIExpression()), !dbg !6649
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !6650
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !6650
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !6650, !tbaa !5768
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !6648, metadata !DIExpression()), !dbg !6649
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !6651
  store volatile i16 0, i16* %5, align 2, !dbg !6652, !tbaa !5569
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !6653
  store volatile i16 0, i16* %6, align 2, !dbg !6654, !tbaa !5453
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !6655
  ret void, !dbg !6656
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @UART_Transmit_IT(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #14 !dbg !6657 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6659, metadata !DIExpression()), !dbg !6661
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6662
  %3 = load volatile i32, i32* %2, align 4, !dbg !6662, !tbaa !5228
  %4 = icmp eq i32 %3, 33, !dbg !6664
  br i1 %4, label %5, label %48, !dbg !6665

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1, !dbg !6666
  %7 = load i32, i32* %6, align 4, !dbg !6666, !tbaa !5271
  %8 = icmp eq i32 %7, 4096, !dbg !6669
  %9 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 2, !dbg !6670
  br i1 %8, label %10, label %27, !dbg !6671

10:                                               ; preds = %5
  %11 = bitcast i8** %9 to i16**, !dbg !6672
  %12 = load i16*, i16** %11, align 4, !dbg !6672, !tbaa !5651
  call void @llvm.dbg.value(metadata i16* %12, metadata !6660, metadata !DIExpression()), !dbg !6661
  %13 = load i16, i16* %12, align 2, !dbg !6674, !tbaa !5468
  %14 = and i16 %13, 511, !dbg !6675
  %15 = zext i16 %14 to i32, !dbg !6676
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6677
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %16, align 4, !dbg !6677, !tbaa !5241
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 1, !dbg !6678
  store volatile i32 %15, i32* %18, align 4, !dbg !6679, !tbaa !5473
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3, !dbg !6680
  %20 = load i32, i32* %19, align 4, !dbg !6680, !tbaa !5273
  %21 = icmp eq i32 %20, 0, !dbg !6682
  %22 = load i8*, i8** %9, align 4, !dbg !6683, !tbaa !5651
  br i1 %21, label %23, label %25, !dbg !6684

23:                                               ; preds = %10
  %24 = getelementptr inbounds i8, i8* %22, i32 2, !dbg !6685
  store i8* %24, i8** %9, align 4, !dbg !6685, !tbaa !5651
  br label %35, !dbg !6687

25:                                               ; preds = %10
  %26 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !6688
  store i8* %26, i8** %9, align 4, !dbg !6688, !tbaa !5651
  br label %35

27:                                               ; preds = %5
  %28 = load i8*, i8** %9, align 4, !dbg !6690, !tbaa !5651
  %29 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !6690
  store i8* %29, i8** %9, align 4, !dbg !6690, !tbaa !5651
  %30 = load i8, i8* %28, align 1, !dbg !6692, !tbaa !1653
  %31 = zext i8 %30 to i32, !dbg !6693
  %32 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6694
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !6694, !tbaa !5241
  %34 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %33, i32 0, i32 1, !dbg !6695
  store volatile i32 %31, i32* %34, align 4, !dbg !6696, !tbaa !5473
  br label %35

35:                                               ; preds = %23, %25, %27
  %36 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !6697
  %37 = load volatile i16, i16* %36, align 2, !dbg !6699, !tbaa !5453
  %38 = add i16 %37, -1, !dbg !6699
  store volatile i16 %38, i16* %36, align 2, !dbg !6699, !tbaa !5453
  %39 = icmp eq i16 %38, 0, !dbg !6700
  br i1 %39, label %40, label %48, !dbg !6701

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6702
  %42 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %41, align 4, !dbg !6702, !tbaa !5241
  %43 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %42, i32 0, i32 3, !dbg !6702
  %44 = load volatile i32, i32* %43, align 4, !dbg !6702, !tbaa !3974
  %45 = and i32 %44, -129, !dbg !6702
  store volatile i32 %45, i32* %43, align 4, !dbg !6702, !tbaa !3974
  %46 = load volatile i32, i32* %43, align 4, !dbg !6704, !tbaa !3974
  %47 = or i32 %46, 64, !dbg !6704
  store volatile i32 %47, i32* %43, align 4, !dbg !6704, !tbaa !3974
  br label %48, !dbg !6705

48:                                               ; preds = %1, %35, %40
  ret void, !dbg !6706
}

; Function Attrs: noinline nounwind
define internal fastcc void @UART_EndTransmit_IT(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #3 !dbg !6707 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6709, metadata !DIExpression()), !dbg !6710
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6711
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6711, !tbaa !5241
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !6711
  %5 = load volatile i32, i32* %4, align 4, !dbg !6711, !tbaa !3974
  %6 = and i32 %5, -65, !dbg !6711
  store volatile i32 %6, i32* %4, align 4, !dbg !6711, !tbaa !3974
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6712
  store volatile i32 32, i32* %7, align 4, !dbg !6713, !tbaa !5228
  call void @HAL_UART_TxCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6714
  ret void, !dbg !6715
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_LIN_SendBreak(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #14 !dbg !6716 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6718, metadata !DIExpression()), !dbg !6719
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !6720
  %3 = load i32, i32* %2, align 4, !dbg !6720, !tbaa !5236
  %4 = icmp eq i32 %3, 1, !dbg !6720
  br i1 %4, label %12, label %5, !dbg !6723

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !6724, !tbaa !5236
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6726
  store volatile i32 36, i32* %6, align 4, !dbg !6727, !tbaa !5228
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6728
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !6728, !tbaa !5241
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !6728
  %10 = load volatile i32, i32* %9, align 4, !dbg !6728, !tbaa !3974
  %11 = or i32 %10, 1, !dbg !6728
  store volatile i32 %11, i32* %9, align 4, !dbg !6728, !tbaa !3974
  store volatile i32 32, i32* %6, align 4, !dbg !6729, !tbaa !5228
  store i32 0, i32* %2, align 4, !dbg !6730, !tbaa !5236
  br label %12, !dbg !6732

12:                                               ; preds = %1, %5
  %13 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !6719
  ret i32 %13, !dbg !6733
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_MultiProcessor_EnterMuteMode(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #14 !dbg !6734 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6736, metadata !DIExpression()), !dbg !6737
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !6738
  %3 = load i32, i32* %2, align 4, !dbg !6738, !tbaa !5236
  %4 = icmp eq i32 %3, 1, !dbg !6738
  br i1 %4, label %12, label %5, !dbg !6741

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !6742, !tbaa !5236
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6744
  store volatile i32 36, i32* %6, align 4, !dbg !6745, !tbaa !5228
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6746
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !6746, !tbaa !5241
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !6746
  %10 = load volatile i32, i32* %9, align 4, !dbg !6746, !tbaa !3974
  %11 = or i32 %10, 2, !dbg !6746
  store volatile i32 %11, i32* %9, align 4, !dbg !6746, !tbaa !3974
  store volatile i32 32, i32* %6, align 4, !dbg !6747, !tbaa !5228
  store i32 0, i32* %2, align 4, !dbg !6748, !tbaa !5236
  br label %12, !dbg !6750

12:                                               ; preds = %1, %5
  %13 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !6737
  ret i32 %13, !dbg !6751
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_MultiProcessor_ExitMuteMode(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #14 !dbg !6752 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6754, metadata !DIExpression()), !dbg !6755
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !6756
  %3 = load i32, i32* %2, align 4, !dbg !6756, !tbaa !5236
  %4 = icmp eq i32 %3, 1, !dbg !6756
  br i1 %4, label %12, label %5, !dbg !6759

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !6760, !tbaa !5236
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6762
  store volatile i32 36, i32* %6, align 4, !dbg !6763, !tbaa !5228
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6764
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !6764, !tbaa !5241
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !6764
  %10 = load volatile i32, i32* %9, align 4, !dbg !6764, !tbaa !3974
  %11 = and i32 %10, -3, !dbg !6764
  store volatile i32 %11, i32* %9, align 4, !dbg !6764, !tbaa !3974
  store volatile i32 32, i32* %6, align 4, !dbg !6765, !tbaa !5228
  store i32 0, i32* %2, align 4, !dbg !6766, !tbaa !5236
  br label %12, !dbg !6768

12:                                               ; preds = %1, %5
  %13 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !6755
  ret i32 %13, !dbg !6769
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_HalfDuplex_EnableTransmitter(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #14 !dbg !6770 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6772, metadata !DIExpression()), !dbg !6774
  call void @llvm.dbg.value(metadata i32 0, metadata !6773, metadata !DIExpression()), !dbg !6774
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !6775
  %3 = load i32, i32* %2, align 4, !dbg !6775, !tbaa !5236
  %4 = icmp eq i32 %3, 1, !dbg !6775
  br i1 %4, label %13, label %5, !dbg !6778

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !6779, !tbaa !5236
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6781
  store volatile i32 36, i32* %6, align 4, !dbg !6782, !tbaa !5228
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6783
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !6783, !tbaa !5241
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !6784
  %10 = load volatile i32, i32* %9, align 4, !dbg !6784, !tbaa !3974
  call void @llvm.dbg.value(metadata i32 %10, metadata !6773, metadata !DIExpression()), !dbg !6774
  %11 = and i32 %10, -13, !dbg !6785
  call void @llvm.dbg.value(metadata i32 %11, metadata !6773, metadata !DIExpression()), !dbg !6774
  %12 = or i32 %11, 8, !dbg !6786
  call void @llvm.dbg.value(metadata i32 %12, metadata !6773, metadata !DIExpression()), !dbg !6774
  store volatile i32 %12, i32* %9, align 4, !dbg !6787, !tbaa !3974
  store volatile i32 32, i32* %6, align 4, !dbg !6788, !tbaa !5228
  store i32 0, i32* %2, align 4, !dbg !6789, !tbaa !5236
  br label %13, !dbg !6791

13:                                               ; preds = %1, %5
  %14 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !6774
  ret i32 %14, !dbg !6792
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_HalfDuplex_EnableReceiver(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #14 !dbg !6793 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6795, metadata !DIExpression()), !dbg !6797
  call void @llvm.dbg.value(metadata i32 0, metadata !6796, metadata !DIExpression()), !dbg !6797
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !6798
  %3 = load i32, i32* %2, align 4, !dbg !6798, !tbaa !5236
  %4 = icmp eq i32 %3, 1, !dbg !6798
  br i1 %4, label %13, label %5, !dbg !6801

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !6802, !tbaa !5236
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6804
  store volatile i32 36, i32* %6, align 4, !dbg !6805, !tbaa !5228
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6806
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !6806, !tbaa !5241
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !6807
  %10 = load volatile i32, i32* %9, align 4, !dbg !6807, !tbaa !3974
  call void @llvm.dbg.value(metadata i32 %10, metadata !6796, metadata !DIExpression()), !dbg !6797
  %11 = and i32 %10, -13, !dbg !6808
  call void @llvm.dbg.value(metadata i32 %11, metadata !6796, metadata !DIExpression()), !dbg !6797
  %12 = or i32 %11, 4, !dbg !6809
  call void @llvm.dbg.value(metadata i32 %12, metadata !6796, metadata !DIExpression()), !dbg !6797
  store volatile i32 %12, i32* %9, align 4, !dbg !6810, !tbaa !3974
  store volatile i32 32, i32* %6, align 4, !dbg !6811, !tbaa !5228
  store i32 0, i32* %2, align 4, !dbg !6812, !tbaa !5236
  br label %13, !dbg !6814

13:                                               ; preds = %1, %5
  %14 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !6797
  ret i32 %14, !dbg !6815
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_UART_GetState(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #15 !dbg !6816 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6820, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i32 0, metadata !6821, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i32 0, metadata !6822, metadata !DIExpression()), !dbg !6823
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6824
  %3 = load volatile i32, i32* %2, align 4, !dbg !6824, !tbaa !5228
  call void @llvm.dbg.value(metadata i32 %3, metadata !6821, metadata !DIExpression()), !dbg !6823
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !6825
  %5 = load volatile i32, i32* %4, align 4, !dbg !6825, !tbaa !5252
  call void @llvm.dbg.value(metadata i32 %5, metadata !6822, metadata !DIExpression()), !dbg !6823
  %6 = or i32 %5, %3, !dbg !6826
  ret i32 %6, !dbg !6827
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_UART_GetError(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #15 !dbg !6828 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6832, metadata !DIExpression()), !dbg !6833
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6834
  %3 = load volatile i32, i32* %2, align 4, !dbg !6834, !tbaa !5248
  ret i32 %3, !dbg !6835
}

attributes #0 = { mustprogress noinline norecurse nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nofree nosync nounwind willreturn }
attributes #3 = { noinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { mustprogress noinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nobuiltin nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { argmemonly nofree nounwind willreturn writeonly }
attributes #8 = { nofree nounwind }
attributes #9 = { nofree nosync nounwind willreturn }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline norecurse nosync nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nosync nounwind readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nosync nounwind readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { noinline noreturn nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nosync nounwind willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress noinline noreturn nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { mustprogress nofree noinline norecurse nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline norecurse nosync nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #26 = { nounwind }
attributes #27 = { builtin nounwind }
attributes #28 = { noreturn nounwind }
attributes #29 = { noreturn }

!llvm.dbg.cu = !{!6, !403, !451, !850, !528, !904, !958, !1011, !1040, !649, !1043, !1172, !1174}
!llvm.ident = !{!1286, !1286, !1286, !1286, !1286, !1286, !1286, !1286, !1286, !1286, !1286, !1286, !1286}
!llvm.module.flags = !{!1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "instance", scope: !2, file: !3, line: 121, type: !203, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "USART1_IRQHandler", scope: !3, file: !3, line: 119, type: !4, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, retainedNodes: !202)
!3 = !DIFile(filename: "../examples/stm32f1/dualport_stm32.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "9aa0201d7a0ff6942362ea67abd47171")
!4 = !DISubroutineType(types: !5)
!5 = !{null}
!6 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !7, retainedTypes: !16, globals: !198, imports: !232, splitDebugInlining: false, nameTableKind: None)
!7 = !{!8}
!8 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 41, baseType: !10, size: 32, elements: !11, identifier: "_ZTS17HAL_StatusTypeDef")
!9 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "4d6e0bbb91efacee14a68a416f506def")
!10 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!11 = !{!12, !13, !14, !15}
!12 = !DIEnumerator(name: "HAL_OK", value: 0, isUnsigned: true)
!13 = !DIEnumerator(name: "HAL_ERROR", value: 1, isUnsigned: true)
!14 = !DIEnumerator(name: "HAL_BUSY", value: 2, isUnsigned: true)
!15 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3, isUnsigned: true)
!16 = !{!17, !34, !37, !40, !43, !45, !46, !49}
!17 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18, size: 32)
!18 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !19, line: 516, baseType: !20)
!19 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "d2562af6d7239ab46ca8ba238a43c848")
!20 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 507, size: 224, flags: DIFlagTypePassByValue, elements: !21, identifier: "_ZTS13USART_TypeDef")
!21 = !{!22, !28, !29, !30, !31, !32, !33}
!22 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !20, file: !19, line: 509, baseType: !23, size: 32)
!23 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !24)
!24 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !25, line: 48, baseType: !26)
!25 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "ab914e287601b2385e57880e6599aa6b")
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !27, line: 79, baseType: !10)
!27 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "f7024d0682a918b41f94e8be9cd90461")
!28 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !20, file: !19, line: 510, baseType: !23, size: 32, offset: 32)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !20, file: !19, line: 511, baseType: !23, size: 32, offset: 64)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !20, file: !19, line: 512, baseType: !23, size: 32, offset: 96)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !20, file: !19, line: 513, baseType: !23, size: 32, offset: 128)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !20, file: !19, line: 514, baseType: !23, size: 32, offset: 160)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !20, file: !19, line: 515, baseType: !23, size: 32, offset: 192)
!34 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !35, size: 32)
!35 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !19, line: 367, baseType: !36)
!36 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 358, size: 224, flags: DIFlagFwdDecl, identifier: "_ZTS12GPIO_TypeDef")
!37 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !25, line: 36, baseType: !38)
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !27, line: 57, baseType: !39)
!39 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!40 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !25, line: 24, baseType: !41)
!41 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !27, line: 43, baseType: !42)
!42 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 32)
!44 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !40)
!45 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 32)
!46 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "SerialTask", file: !3, line: 16, size: 224, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !47, vtableHolder: !49, identifier: "_ZTS10SerialTask")
!47 = !{!48, !93, !190, !191, !195}
!48 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !46, baseType: !49, flags: DIFlagPublic, extraData: i32 0)
!49 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Task", scope: !51, file: !50, line: 193, size: 160, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !52, vtableHolder: !49, identifier: "_ZTSN6Cicada4TaskE")
!50 = !DIFile(filename: "../cicada/task.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "c2aeaca9a01dbc0caa84f135ef9fda2b")
!51 = !DINamespace(name: "Cicada", scope: null)
!52 = !{!53, !59, !60, !61, !63, !64, !68, !71, !76, !77, !80, !83, !84, !85, !86, !89}
!53 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$Task", scope: !50, file: !50, baseType: !54, size: 32, flags: DIFlagArtificial)
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 32)
!55 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "__vtbl_ptr_type", baseType: !56, size: 32)
!56 = !DISubroutineType(types: !57)
!57 = !{!58}
!58 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "_delay", scope: !49, file: !50, line: 283, baseType: !37, size: 16, offset: 32)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "_timeout", scope: !49, file: !50, line: 284, baseType: !24, size: 32, offset: 64)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "_isTimeoutRunning", scope: !49, file: !50, line: 285, baseType: !62, size: 8, offset: 96)
!62 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "_lastRun", scope: !49, file: !50, line: 286, baseType: !24, size: 32, offset: 128)
!64 = !DISubprogram(name: "Task", scope: !49, file: !50, line: 196, type: !65, scopeLine: 196, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!65 = !DISubroutineType(types: !66)
!66 = !{null, !67, !37}
!67 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !49, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!68 = !DISubprogram(name: "~Task", scope: !49, file: !50, line: 198, type: !69, scopeLine: 198, containingType: !49, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!69 = !DISubroutineType(types: !70)
!70 = !{null, !67}
!71 = !DISubprogram(name: "delay", linkageName: "_ZNK6Cicada4Task5delayEv", scope: !49, file: !50, line: 203, type: !72, scopeLine: 203, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!72 = !DISubroutineType(types: !73)
!73 = !{!37, !74}
!74 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !75, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!75 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !49)
!76 = !DISubprogram(name: "setDelay", linkageName: "_ZN6Cicada4Task8setDelayEt", scope: !49, file: !50, line: 212, type: !65, scopeLine: 212, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!77 = !DISubprogram(name: "lastRun", linkageName: "_ZN6Cicada4Task7lastRunEv", scope: !49, file: !50, line: 222, type: !78, scopeLine: 222, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!78 = !DISubroutineType(types: !79)
!79 = !{!24, !67}
!80 = !DISubprogram(name: "setLastRun", linkageName: "_ZN6Cicada4Task10setLastRunEj", scope: !49, file: !50, line: 230, type: !81, scopeLine: 230, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!81 = !DISubroutineType(types: !82)
!82 = !{null, !67, !24}
!83 = !DISubprogram(name: "run", linkageName: "_ZN6Cicada4Task3runEv", scope: !49, file: !50, line: 245, type: !69, scopeLine: 245, containingType: !49, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!84 = !DISubprogram(name: "startTimeout", linkageName: "_ZN6Cicada4Task12startTimeoutEv", scope: !49, file: !50, line: 251, type: !69, scopeLine: 251, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!85 = !DISubprogram(name: "resetTimeout", linkageName: "_ZN6Cicada4Task12resetTimeoutEv", scope: !49, file: !50, line: 262, type: !69, scopeLine: 262, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!86 = !DISubprogram(name: "isTimeout", linkageName: "_ZN6Cicada4Task9isTimeoutEj", scope: !49, file: !50, line: 272, type: !87, scopeLine: 272, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!87 = !DISubroutineType(types: !88)
!88 = !{!62, !67, !24}
!89 = !DISubprogram(name: "Task", scope: !49, file: !50, line: 281, type: !90, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!90 = !DISubroutineType(types: !91)
!91 = !{null, !67, !92}
!92 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !75, size: 32)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "m_serial", scope: !46, file: !3, line: 55, baseType: !94, size: 32, offset: 160)
!94 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !95, size: 32)
!95 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "IBufferedSerial", scope: !51, file: !96, line: 39, size: 64, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !97, vtableHolder: !99, identifier: "_ZTSN6Cicada15IBufferedSerialE")
!96 = !DIFile(filename: "../cicada/ibufferedserial.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "0e5db7c0b86651abb573e233dc791166")
!97 = !{!98, !127, !160, !164, !167, !170, !173, !176, !179, !184, !185, !186, !189}
!98 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !95, baseType: !99, flags: DIFlagPublic, extraData: i32 0)
!99 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "ICommDevice", scope: !51, file: !100, line: 43, size: 32, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !101, vtableHolder: !99, identifier: "_ZTSN6Cicada11ICommDeviceE")
!100 = !DIFile(filename: "../cicada/icommdevice.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e83d2959922f5020d303a6315b56c6e9")
!101 = !{!102, !103, !107, !117, !118, !121, !124}
!102 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$ICommDevice", scope: !100, file: !100, baseType: !54, size: 32, flags: DIFlagArtificial)
!103 = !DISubprogram(name: "~ICommDevice", scope: !99, file: !100, line: 46, type: !104, scopeLine: 46, containingType: !99, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!104 = !DISubroutineType(types: !105)
!105 = !{null, !106}
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !99, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!107 = !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada11ICommDevice14bytesAvailableEv", scope: !99, file: !100, line: 52, type: !108, scopeLine: 52, containingType: !99, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!108 = !DISubroutineType(types: !109)
!109 = !{!110, !115}
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "Size", scope: !51, file: !111, line: 32, baseType: !112)
!111 = !DIFile(filename: "../cicada/types.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "6dfa4c2c933d4c520c13fa7638528c51")
!112 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !25, line: 60, baseType: !113)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !27, line: 105, baseType: !114)
!114 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !99)
!117 = !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada11ICommDevice14spaceAvailableEv", scope: !99, file: !100, line: 60, type: !108, scopeLine: 60, containingType: !99, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!118 = !DISubprogram(name: "writeBufferProcessed", linkageName: "_ZNK6Cicada11ICommDevice20writeBufferProcessedEv", scope: !99, file: !100, line: 71, type: !119, scopeLine: 71, containingType: !99, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!119 = !DISubroutineType(types: !120)
!120 = !{!62, !115}
!121 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada11ICommDevice4readEPhy", scope: !99, file: !100, line: 85, type: !122, scopeLine: 85, containingType: !99, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!122 = !DISubroutineType(types: !123)
!123 = !{!110, !106, !45, !110}
!124 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada11ICommDevice5writeEPKhy", scope: !99, file: !100, line: 98, type: !125, scopeLine: 98, containingType: !99, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!125 = !DISubroutineType(types: !126)
!126 = !{!110, !106, !43, !110}
!127 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !95, baseType: !128, offset: 32, flags: DIFlagPublic, extraData: i32 0)
!128 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "ISerial", scope: !51, file: !129, line: 37, size: 32, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !130, vtableHolder: !128, identifier: "_ZTSN6Cicada7ISerialE")
!129 = !DIFile(filename: "../cicada/iserial.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e3dc53a2acd15a8e90c357a32168f40f")
!130 = !{!131, !132, !136, !139, !140, !143, !144, !152, !156, !159}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$ISerial", scope: !129, file: !129, baseType: !54, size: 32, flags: DIFlagArtificial)
!132 = !DISubprogram(name: "~ISerial", scope: !128, file: !129, line: 40, type: !133, scopeLine: 40, containingType: !128, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!133 = !DISubroutineType(types: !134)
!134 = !{null, !135}
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!136 = !DISubprogram(name: "open", linkageName: "_ZN6Cicada7ISerial4openEv", scope: !128, file: !129, line: 46, type: !137, scopeLine: 46, containingType: !128, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!137 = !DISubroutineType(types: !138)
!138 = !{!62, !135}
!139 = !DISubprogram(name: "isOpen", linkageName: "_ZN6Cicada7ISerial6isOpenEv", scope: !128, file: !129, line: 52, type: !137, scopeLine: 52, containingType: !128, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!140 = !DISubprogram(name: "setSerialConfig", linkageName: "_ZN6Cicada7ISerial15setSerialConfigEjh", scope: !128, file: !129, line: 60, type: !141, scopeLine: 60, containingType: !128, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!141 = !DISubroutineType(types: !142)
!142 = !{!62, !135, !24, !40}
!143 = !DISubprogram(name: "close", linkageName: "_ZN6Cicada7ISerial5closeEv", scope: !128, file: !129, line: 65, type: !133, scopeLine: 65, containingType: !128, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!144 = !DISubprogram(name: "portName", linkageName: "_ZNK6Cicada7ISerial8portNameEv", scope: !128, file: !129, line: 71, type: !145, scopeLine: 71, containingType: !128, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!145 = !DISubroutineType(types: !146)
!146 = !{!147, !150}
!147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !148, size: 32)
!148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !149)
!149 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !128)
!152 = !DISubprogram(name: "rawRead", linkageName: "_ZN6Cicada7ISerial7rawReadERh", scope: !128, file: !129, line: 80, type: !153, scopeLine: 80, containingType: !128, virtualIndex: 7, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!153 = !DISubroutineType(types: !154)
!154 = !{!62, !135, !155}
!155 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !40, size: 32)
!156 = !DISubprogram(name: "rawWrite", linkageName: "_ZN6Cicada7ISerial8rawWriteEh", scope: !128, file: !129, line: 87, type: !157, scopeLine: 87, containingType: !128, virtualIndex: 8, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!157 = !DISubroutineType(types: !158)
!158 = !{!62, !135, !40}
!159 = !DISubprogram(name: "startTransmit", linkageName: "_ZN6Cicada7ISerial13startTransmitEv", scope: !128, file: !129, line: 93, type: !133, scopeLine: 93, containingType: !128, virtualIndex: 9, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!160 = !DISubprogram(name: "~IBufferedSerial", scope: !95, file: !96, line: 42, type: !161, scopeLine: 42, containingType: !95, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!161 = !DISubroutineType(types: !162)
!162 = !{null, !163}
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!164 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada15IBufferedSerial4readEPhy", scope: !95, file: !96, line: 44, type: !165, scopeLine: 44, containingType: !95, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!165 = !DISubroutineType(types: !166)
!166 = !{!110, !163, !45, !110}
!167 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada15IBufferedSerial5writeEPKhy", scope: !95, file: !96, line: 45, type: !168, scopeLine: 45, containingType: !95, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!168 = !DISubroutineType(types: !169)
!169 = !{!110, !163, !43, !110}
!170 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada15IBufferedSerial4readEv", scope: !95, file: !96, line: 51, type: !171, scopeLine: 51, containingType: !95, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!171 = !DISubroutineType(types: !172)
!172 = !{!40, !163}
!173 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada15IBufferedSerial5writeEPKh", scope: !95, file: !96, line: 62, type: !174, scopeLine: 62, containingType: !95, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!174 = !DISubroutineType(types: !175)
!175 = !{!110, !163, !43}
!176 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada15IBufferedSerial5writeEh", scope: !95, file: !96, line: 68, type: !177, scopeLine: 68, containingType: !95, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!177 = !DISubroutineType(types: !178)
!178 = !{null, !163, !40}
!179 = !DISubprogram(name: "canReadLine", linkageName: "_ZNK6Cicada15IBufferedSerial11canReadLineEv", scope: !95, file: !96, line: 73, type: !180, scopeLine: 73, containingType: !95, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!180 = !DISubroutineType(types: !181)
!181 = !{!62, !182}
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !95)
!184 = !DISubprogram(name: "readLine", linkageName: "_ZN6Cicada15IBufferedSerial8readLineEPhy", scope: !95, file: !96, line: 85, type: !165, scopeLine: 85, containingType: !95, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!185 = !DISubprogram(name: "flushReceiveBuffers", linkageName: "_ZN6Cicada15IBufferedSerial19flushReceiveBuffersEv", scope: !95, file: !96, line: 90, type: !161, scopeLine: 90, containingType: !95, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!186 = !DISubprogram(name: "readBufferSize", linkageName: "_ZN6Cicada15IBufferedSerial14readBufferSizeEv", scope: !95, file: !96, line: 95, type: !187, scopeLine: 95, containingType: !95, virtualIndex: 13, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!187 = !DISubroutineType(types: !188)
!188 = !{!110, !163}
!189 = !DISubprogram(name: "writeBufferSize", linkageName: "_ZN6Cicada15IBufferedSerial15writeBufferSizeEv", scope: !95, file: !96, line: 96, type: !187, scopeLine: 96, containingType: !95, virtualIndex: 14, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "m_i", scope: !46, file: !3, line: 56, baseType: !58, size: 32, offset: 192)
!191 = !DISubprogram(name: "SerialTask", scope: !46, file: !3, line: 19, type: !192, scopeLine: 19, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!192 = !DISubroutineType(types: !193)
!193 = !{null, !194, !94}
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !46, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!195 = !DISubprogram(name: "run", linkageName: "_ZN10SerialTask3runEv", scope: !46, file: !3, line: 21, type: !196, scopeLine: 21, containingType: !46, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!196 = !DISubroutineType(types: !197)
!197 = !{null, !194}
!198 = !{!0, !199, !206, !213}
!199 = !DIGlobalVariableExpression(var: !200, expr: !DIExpression())
!200 = distinct !DIGlobalVariable(name: "instance", scope: !201, file: !3, line: 127, type: !203, isLocal: true, isDefinition: true)
!201 = distinct !DISubprogram(name: "USART2_IRQHandler", scope: !3, file: !3, line: 125, type: !4, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, retainedNodes: !202)
!202 = !{}
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 32)
!204 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Stm32Uart", scope: !51, file: !205, line: 51, size: 1536, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada9Stm32UartE")
!205 = !DIFile(filename: "../cicada/platform/stm32f1/stm32uart.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "f1205a68111afe9a0868ac35ca31b4e6")
!206 = !DIGlobalVariableExpression(var: !207, expr: !DIExpression())
!207 = distinct !DIGlobalVariable(name: "serial", scope: !208, file: !3, line: 133, type: !203, isLocal: true, isDefinition: true)
!208 = distinct !DISubprogram(name: "_putchar", scope: !3, file: !3, line: 131, type: !209, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, retainedNodes: !211)
!209 = !DISubroutineType(types: !210)
!210 = !{null, !149}
!211 = !{!212}
!212 = !DILocalVariable(name: "c", arg: 1, scope: !208, file: !3, line: 131, type: !149)
!213 = !DIGlobalVariableExpression(var: !214, expr: !DIExpression())
!214 = distinct !DIGlobalVariable(name: "entrypoint", scope: !215, file: !3, line: 23, type: !40, isLocal: false, isDefinition: true)
!215 = distinct !DISubprogram(name: "run", linkageName: "_ZN10SerialTask3runEv", scope: !46, file: !3, line: 21, type: !196, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !195, retainedNodes: !216)
!216 = !{!217, !219, !225, !226, !231}
!217 = !DILocalVariable(name: "this", arg: 1, scope: !215, type: !218, flags: DIFlagArtificial | DIFlagObjectPointer)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !46, size: 32)
!219 = !DILocalVariable(name: "send_str", scope: !220, file: !3, line: 27, type: !147)
!220 = distinct !DILexicalBlock(scope: !221, file: !3, line: 26, column: 13)
!221 = distinct !DILexicalBlock(scope: !222, file: !3, line: 25, column: 41)
!222 = distinct !DILexicalBlock(scope: !223, file: !3, line: 25, column: 9)
!223 = distinct !DILexicalBlock(scope: !224, file: !3, line: 25, column: 9)
!224 = distinct !DILexicalBlock(scope: !215, file: !3, line: 23, column: 9)
!225 = !DILocalVariable(name: "bytesWritten", scope: !220, file: !3, line: 29, type: !58)
!226 = !DILocalVariable(name: "buf", scope: !227, file: !3, line: 37, type: !228)
!227 = distinct !DILexicalBlock(scope: !221, file: !3, line: 36, column: 13)
!228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !149, size: 256, elements: !229)
!229 = !{!230}
!230 = !DISubrange(count: 32)
!231 = !DILocalVariable(name: "bytesReceived", scope: !227, file: !3, line: 38, type: !58)
!232 = !{!233, !239, !243, !246, !250, !253, !255, !257, !259, !262, !265, !268, !271, !274, !277, !278, !279, !280, !281, !283, !285, !287, !289, !292, !295, !298, !301, !304, !307, !320, !324, !328, !330, !334, !339, !343, !345, !347, !351, !355, !359, !363, !367, !369, !371, !373, !377, !381, !385, !387, !389}
!233 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !235, file: !238, line: 47)
!234 = !DINamespace(name: "std", scope: null)
!235 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !25, line: 20, baseType: !236)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !27, line: 41, baseType: !237)
!237 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!238 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/cstdint", directory: "/home/mjshen/RTOSExploration")
!239 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !240, file: !238, line: 48)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !25, line: 32, baseType: !241)
!241 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int16_t", file: !27, line: 55, baseType: !242)
!242 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!243 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !244, file: !238, line: 49)
!244 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !25, line: 44, baseType: !245)
!245 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !27, line: 77, baseType: !58)
!246 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !247, file: !238, line: 50)
!247 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !25, line: 56, baseType: !248)
!248 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !27, line: 103, baseType: !249)
!249 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!250 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !251, file: !238, line: 52)
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast8_t", file: !252, line: 51, baseType: !237)
!252 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdint.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "a169a1d650067906a9e00519a9405ebb")
!253 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !254, file: !238, line: 53)
!254 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast16_t", file: !252, line: 61, baseType: !242)
!255 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !256, file: !238, line: 54)
!256 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast32_t", file: !252, line: 71, baseType: !58)
!257 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !258, file: !238, line: 55)
!258 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast64_t", file: !252, line: 81, baseType: !249)
!259 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !260, file: !238, line: 57)
!260 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least8_t", file: !252, line: 21, baseType: !261)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least8_t", file: !27, line: 134, baseType: !237)
!262 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !263, file: !238, line: 58)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least16_t", file: !252, line: 27, baseType: !264)
!264 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least16_t", file: !27, line: 160, baseType: !242)
!265 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !266, file: !238, line: 59)
!266 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least32_t", file: !252, line: 33, baseType: !267)
!267 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least32_t", file: !27, line: 182, baseType: !58)
!268 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !269, file: !238, line: 60)
!269 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least64_t", file: !252, line: 39, baseType: !270)
!270 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !27, line: 200, baseType: !249)
!271 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !272, file: !238, line: 62)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !25, line: 67, baseType: !273)
!273 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !27, line: 214, baseType: !249)
!274 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !275, file: !238, line: 63)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !25, line: 77, baseType: !276)
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intptr_t", file: !27, line: 230, baseType: !58)
!277 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !40, file: !238, line: 65)
!278 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !37, file: !238, line: 66)
!279 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !24, file: !238, line: 67)
!280 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !112, file: !238, line: 68)
!281 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !282, file: !238, line: 70)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast8_t", file: !252, line: 52, baseType: !42)
!283 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !284, file: !238, line: 71)
!284 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast16_t", file: !252, line: 62, baseType: !39)
!285 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !286, file: !238, line: 72)
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast32_t", file: !252, line: 72, baseType: !10)
!287 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !288, file: !238, line: 73)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast64_t", file: !252, line: 82, baseType: !114)
!289 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !290, file: !238, line: 75)
!290 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least8_t", file: !252, line: 22, baseType: !291)
!291 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least8_t", file: !27, line: 136, baseType: !42)
!292 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !293, file: !238, line: 76)
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least16_t", file: !252, line: 28, baseType: !294)
!294 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least16_t", file: !27, line: 162, baseType: !39)
!295 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !296, file: !238, line: 77)
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least32_t", file: !252, line: 34, baseType: !297)
!297 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least32_t", file: !27, line: 184, baseType: !10)
!298 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !299, file: !238, line: 78)
!299 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !252, line: 40, baseType: !300)
!300 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least64_t", file: !27, line: 202, baseType: !114)
!301 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !302, file: !238, line: 80)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !25, line: 72, baseType: !303)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !27, line: 222, baseType: !114)
!304 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !305, file: !238, line: 81)
!305 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !25, line: 82, baseType: !306)
!306 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintptr_t", file: !27, line: 232, baseType: !10)
!307 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !308, file: !319, line: 77)
!308 = !DISubprogram(name: "memchr", scope: !309, file: !309, line: 29, type: !310, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!309 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/string.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "00b3471f69c722645cab66876c511e27")
!310 = !DISubroutineType(types: !311)
!311 = !{!312, !313, !58, !315}
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !316, line: 40, baseType: !317)
!316 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/strings.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "dceb1b71cd72987b246237af8552faba")
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "__size_t", file: !318, line: 131, baseType: !10)
!318 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "b45aad52ebaa1042158f2766af29f8e2")
!319 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/cstring", directory: "/home/mjshen/RTOSExploration")
!320 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !321, file: !319, line: 78)
!321 = !DISubprogram(name: "memcmp", scope: !309, file: !309, line: 30, type: !322, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!322 = !DISubroutineType(types: !323)
!323 = !{!58, !313, !313, !315}
!324 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !325, file: !319, line: 79)
!325 = !DISubprogram(name: "memcpy", scope: !309, file: !309, line: 31, type: !326, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!326 = !DISubroutineType(types: !327)
!327 = !{!312, !312, !313, !315}
!328 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !329, file: !319, line: 80)
!329 = !DISubprogram(name: "memmove", scope: !309, file: !309, line: 32, type: !326, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!330 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !331, file: !319, line: 81)
!331 = !DISubprogram(name: "memset", scope: !309, file: !309, line: 33, type: !332, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!332 = !DISubroutineType(types: !333)
!333 = !{!312, !312, !58, !315}
!334 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !335, file: !319, line: 82)
!335 = !DISubprogram(name: "strcat", scope: !309, file: !309, line: 34, type: !336, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!336 = !DISubroutineType(types: !337)
!337 = !{!338, !338, !147}
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!339 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !340, file: !319, line: 83)
!340 = !DISubprogram(name: "strcmp", scope: !309, file: !309, line: 36, type: !341, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!341 = !DISubroutineType(types: !342)
!342 = !{!58, !147, !147}
!343 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !344, file: !319, line: 84)
!344 = !DISubprogram(name: "strcoll", scope: !309, file: !309, line: 37, type: !341, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!345 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !346, file: !319, line: 85)
!346 = !DISubprogram(name: "strcpy", scope: !309, file: !309, line: 38, type: !336, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!347 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !348, file: !319, line: 86)
!348 = !DISubprogram(name: "strcspn", scope: !309, file: !309, line: 39, type: !349, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!349 = !DISubroutineType(types: !350)
!350 = !{!315, !147, !147}
!351 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !352, file: !319, line: 87)
!352 = !DISubprogram(name: "strerror", scope: !309, file: !309, line: 40, type: !353, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!353 = !DISubroutineType(types: !354)
!354 = !{!338, !58}
!355 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !356, file: !319, line: 88)
!356 = !DISubprogram(name: "strlen", scope: !309, file: !309, line: 41, type: !357, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!357 = !DISubroutineType(types: !358)
!358 = !{!315, !147}
!359 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !360, file: !319, line: 89)
!360 = !DISubprogram(name: "strncat", scope: !309, file: !309, line: 42, type: !361, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!361 = !DISubroutineType(types: !362)
!362 = !{!338, !338, !147, !315}
!363 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !364, file: !319, line: 90)
!364 = !DISubprogram(name: "strncmp", scope: !309, file: !309, line: 43, type: !365, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!365 = !DISubroutineType(types: !366)
!366 = !{!58, !147, !147, !315}
!367 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !368, file: !319, line: 91)
!368 = !DISubprogram(name: "strncpy", scope: !309, file: !309, line: 44, type: !361, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!369 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !370, file: !319, line: 92)
!370 = !DISubprogram(name: "strspn", scope: !309, file: !309, line: 47, type: !349, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!371 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !372, file: !319, line: 93)
!372 = !DISubprogram(name: "strtok", scope: !309, file: !309, line: 50, type: !336, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!373 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !374, file: !319, line: 94)
!374 = !DISubprogram(name: "strxfrm", scope: !309, file: !309, line: 52, type: !375, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!375 = !DISubroutineType(types: !376)
!376 = !{!315, !338, !147, !315}
!377 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !378, file: !319, line: 95)
!378 = !DISubprogram(name: "strchr", scope: !309, file: !309, line: 35, type: !379, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!379 = !DISubroutineType(types: !380)
!380 = !{!338, !147, !58}
!381 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !382, file: !319, line: 96)
!382 = !DISubprogram(name: "strpbrk", scope: !309, file: !309, line: 45, type: !383, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!383 = !DISubroutineType(types: !384)
!384 = !{!338, !147, !147}
!385 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !386, file: !319, line: 97)
!386 = !DISubprogram(name: "strrchr", scope: !309, file: !309, line: 46, type: !379, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!387 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !388, file: !319, line: 98)
!388 = !DISubprogram(name: "strstr", scope: !309, file: !309, line: 48, type: !383, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!389 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !6, entity: !51, file: !3, line: 12)
!390 = !DIGlobalVariableExpression(var: !391, expr: !DIExpression())
!391 = distinct !DIGlobalVariable(name: "pow10", scope: !392, file: !393, line: 311, type: !446, isLocal: true, isDefinition: true)
!392 = distinct !DISubprogram(name: "_ftoa", scope: !393, file: !393, line: 299, type: !394, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !416)
!393 = !DIFile(filename: "../dep/printf/src/printf.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "7383fa86adf0d25d8eda174a9b330d6a")
!394 = !DISubroutineType(types: !395)
!395 = !{!396, !398, !338, !396, !396, !402, !10, !10, !10}
!396 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !397, line: 46, baseType: !10)
!397 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "", checksumkind: CSK_MD5, checksum: "2499dd2361b915724b073282bea3a7bc")
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "out_fct_type", file: !393, line: 97, baseType: !399)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 32)
!400 = !DISubroutineType(types: !401)
!401 = !{null, !149, !312, !396, !396}
!402 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!403 = distinct !DICompileUnit(language: DW_LANG_C99, file: !393, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !404, globals: !415, splitDebugInlining: false, nameTableKind: None)
!404 = !{!396, !338, !305, !10, !58, !114, !405, !149, !242, !42, !39, !402, !406}
!405 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 32)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "out_fct_wrap_type", file: !393, line: 104, baseType: !408)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !393, line: 101, size: 64, elements: !409)
!409 = !{!410, !414}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "fct", scope: !408, file: !393, line: 102, baseType: !411, size: 32)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 32)
!412 = !DISubroutineType(types: !413)
!413 = !{null, !149, !312}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !408, file: !393, line: 103, baseType: !312, size: 32, offset: 32)
!415 = !{!390}
!416 = !{!417, !418, !419, !420, !421, !422, !423, !424, !425, !427, !428, !429, !430, !432, !434, !435, !436, !437, !440, !444}
!417 = !DILocalVariable(name: "out", arg: 1, scope: !392, file: !393, line: 299, type: !398)
!418 = !DILocalVariable(name: "buffer", arg: 2, scope: !392, file: !393, line: 299, type: !338)
!419 = !DILocalVariable(name: "idx", arg: 3, scope: !392, file: !393, line: 299, type: !396)
!420 = !DILocalVariable(name: "maxlen", arg: 4, scope: !392, file: !393, line: 299, type: !396)
!421 = !DILocalVariable(name: "value", arg: 5, scope: !392, file: !393, line: 299, type: !402)
!422 = !DILocalVariable(name: "prec", arg: 6, scope: !392, file: !393, line: 299, type: !10)
!423 = !DILocalVariable(name: "width", arg: 7, scope: !392, file: !393, line: 299, type: !10)
!424 = !DILocalVariable(name: "flags", arg: 8, scope: !392, file: !393, line: 299, type: !10)
!425 = !DILocalVariable(name: "start_idx", scope: !392, file: !393, line: 301, type: !426)
!426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !396)
!427 = !DILocalVariable(name: "buf", scope: !392, file: !393, line: 303, type: !228)
!428 = !DILocalVariable(name: "len", scope: !392, file: !393, line: 304, type: !396)
!429 = !DILocalVariable(name: "diff", scope: !392, file: !393, line: 305, type: !402)
!430 = !DILocalVariable(name: "thres_max", scope: !392, file: !393, line: 308, type: !431)
!431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !402)
!432 = !DILocalVariable(name: "negative", scope: !392, file: !393, line: 322, type: !433)
!433 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!434 = !DILocalVariable(name: "whole", scope: !392, file: !393, line: 338, type: !58)
!435 = !DILocalVariable(name: "tmp", scope: !392, file: !393, line: 339, type: !402)
!436 = !DILocalVariable(name: "frac", scope: !392, file: !393, line: 340, type: !405)
!437 = !DILocalVariable(name: "count", scope: !438, file: !393, line: 373, type: !10)
!438 = distinct !DILexicalBlock(scope: !439, file: !393, line: 372, column: 8)
!439 = distinct !DILexicalBlock(scope: !392, file: !393, line: 364, column: 7)
!440 = !DILocalVariable(name: "i", scope: !441, file: !393, line: 424, type: !396)
!441 = distinct !DILexicalBlock(scope: !442, file: !393, line: 424, column: 5)
!442 = distinct !DILexicalBlock(scope: !443, file: !393, line: 423, column: 58)
!443 = distinct !DILexicalBlock(scope: !392, file: !393, line: 423, column: 7)
!444 = !DILocalVariable(name: "i", scope: !445, file: !393, line: 430, type: !396)
!445 = distinct !DILexicalBlock(scope: !392, file: !393, line: 430, column: 3)
!446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !431, size: 640, elements: !447)
!447 = !{!448}
!448 = !DISubrange(count: 10)
!449 = !DIGlobalVariableExpression(var: !450, expr: !DIExpression())
!450 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !451, file: !452, line: 124, type: !523, isLocal: false, isDefinition: true)
!451 = distinct !DICompileUnit(language: DW_LANG_C99, file: !452, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !453, retainedTypes: !459, globals: !515, splitDebugInlining: false, nameTableKind: None)
!452 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/system_stm32f1xx.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "2e873de3002e5d783190a46ff1c7da2d")
!453 = !{!454}
!454 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !455, line: 151, baseType: !10, size: 32, elements: !456)
!455 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "dc4ed8bdf8589b30d30d93eb6ee6ca27")
!456 = !{!457, !458}
!457 = !DIEnumerator(name: "RESET", value: 0)
!458 = !DIEnumerator(name: "SET", value: 1)
!459 = !{!460, !474, !24}
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 32)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !19, line: 438, baseType: !462)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 424, size: 320, elements: !463)
!463 = !{!464, !465, !466, !467, !468, !469, !470, !471, !472, !473}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !462, file: !19, line: 426, baseType: !23, size: 32)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !462, file: !19, line: 427, baseType: !23, size: 32, offset: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !462, file: !19, line: 428, baseType: !23, size: 32, offset: 64)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !462, file: !19, line: 429, baseType: !23, size: 32, offset: 96)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !462, file: !19, line: 430, baseType: !23, size: 32, offset: 128)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !462, file: !19, line: 431, baseType: !23, size: 32, offset: 160)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !462, file: !19, line: 432, baseType: !23, size: 32, offset: 192)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !462, file: !19, line: 433, baseType: !23, size: 32, offset: 224)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !462, file: !19, line: 434, baseType: !23, size: 32, offset: 256)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !462, file: !19, line: 435, baseType: !23, size: 32, offset: 288)
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !476, line: 397, baseType: !477)
!476 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build")
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 374, size: 1120, elements: !478)
!478 = !{!479, !481, !482, !483, !484, !485, !486, !491, !492, !493, !494, !495, !496, !497, !498, !502, !503, !504, !508, !512, !514}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !477, file: !476, line: 376, baseType: !480, size: 32)
!480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !23)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !477, file: !476, line: 377, baseType: !23, size: 32, offset: 32)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !477, file: !476, line: 378, baseType: !23, size: 32, offset: 64)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !477, file: !476, line: 379, baseType: !23, size: 32, offset: 96)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !477, file: !476, line: 380, baseType: !23, size: 32, offset: 128)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !477, file: !476, line: 381, baseType: !23, size: 32, offset: 160)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !477, file: !476, line: 382, baseType: !487, size: 96, offset: 192)
!487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !488, size: 96, elements: !489)
!488 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !40)
!489 = !{!490}
!490 = !DISubrange(count: 12)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !477, file: !476, line: 383, baseType: !23, size: 32, offset: 288)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !477, file: !476, line: 384, baseType: !23, size: 32, offset: 320)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !477, file: !476, line: 385, baseType: !23, size: 32, offset: 352)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !477, file: !476, line: 386, baseType: !23, size: 32, offset: 384)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !477, file: !476, line: 387, baseType: !23, size: 32, offset: 416)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !477, file: !476, line: 388, baseType: !23, size: 32, offset: 448)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !477, file: !476, line: 389, baseType: !23, size: 32, offset: 480)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !477, file: !476, line: 390, baseType: !499, size: 64, offset: 512)
!499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !480, size: 64, elements: !500)
!500 = !{!501}
!501 = !DISubrange(count: 2)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !477, file: !476, line: 391, baseType: !480, size: 32, offset: 576)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !477, file: !476, line: 392, baseType: !480, size: 32, offset: 608)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !477, file: !476, line: 393, baseType: !505, size: 128, offset: 640)
!505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !480, size: 128, elements: !506)
!506 = !{!507}
!507 = !DISubrange(count: 4)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !477, file: !476, line: 394, baseType: !509, size: 160, offset: 768)
!509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !480, size: 160, elements: !510)
!510 = !{!511}
!511 = !DISubrange(count: 5)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !477, file: !476, line: 395, baseType: !513, size: 160, offset: 928)
!513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 160, elements: !510)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !477, file: !476, line: 396, baseType: !23, size: 32, offset: 1088)
!515 = !{!516, !449, !518}
!516 = !DIGlobalVariableExpression(var: !517, expr: !DIExpression())
!517 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !451, file: !452, line: 123, type: !24, isLocal: false, isDefinition: true)
!518 = !DIGlobalVariableExpression(var: !519, expr: !DIExpression())
!519 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !451, file: !452, line: 125, type: !520, isLocal: false, isDefinition: true)
!520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !44, size: 64, elements: !521)
!521 = !{!522}
!522 = !DISubrange(count: 8)
!523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !44, size: 128, elements: !524)
!524 = !{!525}
!525 = !DISubrange(count: 16)
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "uwTickPrio", scope: !528, file: !529, line: 80, type: !24, isLocal: false, isDefinition: true)
!528 = distinct !DICompileUnit(language: DW_LANG_C99, file: !529, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !530, retainedTypes: !598, globals: !641, splitDebugInlining: false, nameTableKind: None)
!529 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "1a5fa7b79e9e470cf817b81d791a6ccb")
!530 = !{!531, !538, !544}
!531 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !532, line: 49, baseType: !10, size: 32, elements: !533)
!532 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "5eab64b252ccd159497a11d87d26bc0b")
!533 = !{!534, !535, !536, !537}
!534 = !DIEnumerator(name: "HAL_TICK_FREQ_10HZ", value: 100)
!535 = !DIEnumerator(name: "HAL_TICK_FREQ_100HZ", value: 10)
!536 = !DIEnumerator(name: "HAL_TICK_FREQ_1KHZ", value: 1)
!537 = !DIEnumerator(name: "HAL_TICK_FREQ_DEFAULT", value: 1)
!538 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 41, baseType: !10, size: 32, elements: !539)
!539 = !{!540, !541, !542, !543}
!540 = !DIEnumerator(name: "HAL_OK", value: 0)
!541 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!542 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!543 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!544 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !19, line: 69, baseType: !58, size: 32, elements: !545)
!545 = !{!546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597}
!546 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!547 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!548 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!549 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!550 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!551 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!552 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!553 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!554 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!555 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!556 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!557 = !DIEnumerator(name: "TAMPER_IRQn", value: 2)
!558 = !DIEnumerator(name: "RTC_IRQn", value: 3)
!559 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!560 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!561 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!562 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!563 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!564 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!565 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!566 = !DIEnumerator(name: "DMA1_Channel1_IRQn", value: 11)
!567 = !DIEnumerator(name: "DMA1_Channel2_IRQn", value: 12)
!568 = !DIEnumerator(name: "DMA1_Channel3_IRQn", value: 13)
!569 = !DIEnumerator(name: "DMA1_Channel4_IRQn", value: 14)
!570 = !DIEnumerator(name: "DMA1_Channel5_IRQn", value: 15)
!571 = !DIEnumerator(name: "DMA1_Channel6_IRQn", value: 16)
!572 = !DIEnumerator(name: "DMA1_Channel7_IRQn", value: 17)
!573 = !DIEnumerator(name: "ADC1_2_IRQn", value: 18)
!574 = !DIEnumerator(name: "USB_HP_CAN1_TX_IRQn", value: 19)
!575 = !DIEnumerator(name: "USB_LP_CAN1_RX0_IRQn", value: 20)
!576 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!577 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!578 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!579 = !DIEnumerator(name: "TIM1_BRK_IRQn", value: 24)
!580 = !DIEnumerator(name: "TIM1_UP_IRQn", value: 25)
!581 = !DIEnumerator(name: "TIM1_TRG_COM_IRQn", value: 26)
!582 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!583 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!584 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!585 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!586 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!587 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!588 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!589 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!590 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!591 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!592 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!593 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!594 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!595 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!596 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!597 = !DIEnumerator(name: "USBWakeUp_IRQn", value: 42)
!598 = !{!599, !24, !612, !626, !634, !640}
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 32)
!600 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !19, line: 336, baseType: !601)
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 325, size: 288, elements: !602)
!602 = !{!603, !604, !605, !606, !607, !608, !609, !610, !611}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !601, file: !19, line: 327, baseType: !23, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !601, file: !19, line: 328, baseType: !23, size: 32, offset: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !601, file: !19, line: 329, baseType: !23, size: 32, offset: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !601, file: !19, line: 330, baseType: !23, size: 32, offset: 96)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !601, file: !19, line: 331, baseType: !23, size: 32, offset: 128)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "AR", scope: !601, file: !19, line: 332, baseType: !23, size: 32, offset: 160)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !601, file: !19, line: 333, baseType: !23, size: 32, offset: 192)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !601, file: !19, line: 334, baseType: !23, size: 32, offset: 224)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR", scope: !601, file: !19, line: 335, baseType: !23, size: 32, offset: 256)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 32)
!613 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !19, line: 438, baseType: !614)
!614 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 424, size: 320, elements: !615)
!615 = !{!616, !617, !618, !619, !620, !621, !622, !623, !624, !625}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !614, file: !19, line: 426, baseType: !23, size: 32)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !614, file: !19, line: 427, baseType: !23, size: 32, offset: 32)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !614, file: !19, line: 428, baseType: !23, size: 32, offset: 64)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !614, file: !19, line: 429, baseType: !23, size: 32, offset: 96)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !614, file: !19, line: 430, baseType: !23, size: 32, offset: 128)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !614, file: !19, line: 431, baseType: !23, size: 32, offset: 160)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !614, file: !19, line: 432, baseType: !23, size: 32, offset: 192)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !614, file: !19, line: 433, baseType: !23, size: 32, offset: 224)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !614, file: !19, line: 434, baseType: !23, size: 32, offset: 256)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !614, file: !19, line: 435, baseType: !23, size: 32, offset: 288)
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 32)
!627 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !476, line: 700, baseType: !628)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 694, size: 128, elements: !629)
!629 = !{!630, !631, !632, !633}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !628, file: !476, line: 696, baseType: !23, size: 32)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !628, file: !476, line: 697, baseType: !23, size: 32, offset: 32)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !628, file: !476, line: 698, baseType: !23, size: 32, offset: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !628, file: !476, line: 699, baseType: !480, size: 32, offset: 96)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 32)
!635 = !DIDerivedType(tag: DW_TAG_typedef, name: "DBGMCU_TypeDef", file: !19, line: 285, baseType: !636)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 281, size: 64, elements: !637)
!637 = !{!638, !639}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "IDCODE", scope: !636, file: !19, line: 283, baseType: !23, size: 32)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !636, file: !19, line: 284, baseType: !23, size: 32, offset: 32)
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 32)
!641 = !{!526, !642, !645}
!642 = !DIGlobalVariableExpression(var: !643, expr: !DIExpression())
!643 = distinct !DIGlobalVariable(name: "uwTickFreq", scope: !528, file: !529, line: 81, type: !644, isLocal: false, isDefinition: true)
!644 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_TickFreqTypeDef", file: !532, line: 55, baseType: !531)
!645 = !DIGlobalVariableExpression(var: !646, expr: !DIExpression())
!646 = distinct !DIGlobalVariable(name: "uwTick", scope: !528, file: !529, line: 79, type: !23, isLocal: false, isDefinition: true)
!647 = !DIGlobalVariableExpression(var: !648, expr: !DIExpression())
!648 = distinct !DIGlobalVariable(name: "instance", linkageName: "_ZN6Cicada9Stm32Uart8instanceE", scope: !649, file: !650, line: 32, type: !754, isLocal: false, isDefinition: true, declaration: !753)
!649 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !650, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !651, retainedTypes: !668, globals: !847, imports: !848, splitDebugInlining: false, nameTableKind: None)
!650 = !DIFile(filename: "../cicada/platform/stm32f1/stm32uart.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "3cfb26aba75e1df83974cb6e4fff6457")
!651 = !{!652, !8, !653, !657}
!652 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, file: !19, line: 69, baseType: !58, size: 32, elements: !545, identifier: "_ZTS9IRQn_Type")
!653 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 52, baseType: !10, size: 32, elements: !654, identifier: "_ZTS15HAL_LockTypeDef")
!654 = !{!655, !656}
!655 = !DIEnumerator(name: "HAL_UNLOCKED", value: 0, isUnsigned: true)
!656 = !DIEnumerator(name: "HAL_LOCKED", value: 1, isUnsigned: true)
!657 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, file: !658, line: 117, baseType: !10, size: 32, elements: !659, identifier: "_ZTS21HAL_UART_StateTypeDef")
!658 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "74469f61b271b78e5ff5784cb5eb97d1")
!659 = !{!660, !661, !662, !663, !664, !665, !666, !667}
!660 = !DIEnumerator(name: "HAL_UART_STATE_RESET", value: 0, isUnsigned: true)
!661 = !DIEnumerator(name: "HAL_UART_STATE_READY", value: 32, isUnsigned: true)
!662 = !DIEnumerator(name: "HAL_UART_STATE_BUSY", value: 36, isUnsigned: true)
!663 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_TX", value: 33, isUnsigned: true)
!664 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_RX", value: 34, isUnsigned: true)
!665 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_TX_RX", value: 35, isUnsigned: true)
!666 = !DIEnumerator(name: "HAL_UART_STATE_TIMEOUT", value: 160, isUnsigned: true)
!667 = !DIEnumerator(name: "HAL_UART_STATE_ERROR", value: 224, isUnsigned: true)
!668 = !{!24, !17, !669, !679, !34, !40, !37, !244, !693, !723, !748}
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 32)
!670 = !DIDerivedType(tag: DW_TAG_typedef, name: "AFIO_TypeDef", file: !19, line: 380, baseType: !671)
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 373, size: 256, flags: DIFlagTypePassByValue, elements: !672, identifier: "_ZTS12AFIO_TypeDef")
!672 = !{!673, !674, !675, !677, !678}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "EVCR", scope: !671, file: !19, line: 375, baseType: !23, size: 32)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "MAPR", scope: !671, file: !19, line: 376, baseType: !23, size: 32, offset: 32)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !671, file: !19, line: 377, baseType: !676, size: 128, offset: 64)
!676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 128, elements: !506)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !671, file: !19, line: 378, baseType: !24, size: 32, offset: 192)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "MAPR2", scope: !671, file: !19, line: 379, baseType: !23, size: 32, offset: 224)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 32)
!680 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !19, line: 438, baseType: !681)
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 424, size: 320, flags: DIFlagTypePassByValue, elements: !682, identifier: "_ZTS11RCC_TypeDef")
!682 = !{!683, !684, !685, !686, !687, !688, !689, !690, !691, !692}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !681, file: !19, line: 426, baseType: !23, size: 32)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !681, file: !19, line: 427, baseType: !23, size: 32, offset: 32)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !681, file: !19, line: 428, baseType: !23, size: 32, offset: 64)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !681, file: !19, line: 429, baseType: !23, size: 32, offset: 96)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !681, file: !19, line: 430, baseType: !23, size: 32, offset: 128)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !681, file: !19, line: 431, baseType: !23, size: 32, offset: 160)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !681, file: !19, line: 432, baseType: !23, size: 32, offset: 192)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !681, file: !19, line: 433, baseType: !23, size: 32, offset: 224)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !681, file: !19, line: 434, baseType: !23, size: 32, offset: 256)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !681, file: !19, line: 435, baseType: !23, size: 32, offset: 288)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 32)
!694 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !476, line: 355, baseType: !695)
!695 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 340, size: 28704, flags: DIFlagTypePassByValue, elements: !696, identifier: "_ZTS9NVIC_Type")
!696 = !{!697, !699, !703, !704, !705, !706, !707, !708, !709, !710, !714, !718, !722}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !695, file: !476, line: 342, baseType: !698, size: 256)
!698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 256, elements: !521)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !695, file: !476, line: 343, baseType: !700, size: 768, offset: 256)
!700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 768, elements: !701)
!701 = !{!702}
!702 = !DISubrange(count: 24)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !695, file: !476, line: 344, baseType: !698, size: 256, offset: 1024)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !695, file: !476, line: 345, baseType: !700, size: 768, offset: 1280)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !695, file: !476, line: 346, baseType: !698, size: 256, offset: 2048)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !695, file: !476, line: 347, baseType: !700, size: 768, offset: 2304)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !695, file: !476, line: 348, baseType: !698, size: 256, offset: 3072)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !695, file: !476, line: 349, baseType: !700, size: 768, offset: 3328)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !695, file: !476, line: 350, baseType: !698, size: 256, offset: 4096)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !695, file: !476, line: 351, baseType: !711, size: 1792, offset: 4352)
!711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 1792, elements: !712)
!712 = !{!713}
!713 = !DISubrange(count: 56)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !695, file: !476, line: 352, baseType: !715, size: 1920, offset: 6144)
!715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !488, size: 1920, elements: !716)
!716 = !{!717}
!717 = !DISubrange(count: 240)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !695, file: !476, line: 353, baseType: !719, size: 20608, offset: 8064)
!719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 20608, elements: !720)
!720 = !{!721}
!721 = !DISubrange(count: 644)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !695, file: !476, line: 354, baseType: !23, size: 32, offset: 28672)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 32)
!724 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !476, line: 397, baseType: !725)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 374, size: 1120, flags: DIFlagTypePassByValue, elements: !726, identifier: "_ZTS8SCB_Type")
!726 = !{!727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !725, file: !476, line: 376, baseType: !480, size: 32)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !725, file: !476, line: 377, baseType: !23, size: 32, offset: 32)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !725, file: !476, line: 378, baseType: !23, size: 32, offset: 64)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !725, file: !476, line: 379, baseType: !23, size: 32, offset: 96)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !725, file: !476, line: 380, baseType: !23, size: 32, offset: 128)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !725, file: !476, line: 381, baseType: !23, size: 32, offset: 160)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !725, file: !476, line: 382, baseType: !487, size: 96, offset: 192)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !725, file: !476, line: 383, baseType: !23, size: 32, offset: 288)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !725, file: !476, line: 384, baseType: !23, size: 32, offset: 320)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !725, file: !476, line: 385, baseType: !23, size: 32, offset: 352)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !725, file: !476, line: 386, baseType: !23, size: 32, offset: 384)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !725, file: !476, line: 387, baseType: !23, size: 32, offset: 416)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !725, file: !476, line: 388, baseType: !23, size: 32, offset: 448)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !725, file: !476, line: 389, baseType: !23, size: 32, offset: 480)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !725, file: !476, line: 390, baseType: !499, size: 64, offset: 512)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !725, file: !476, line: 391, baseType: !480, size: 32, offset: 576)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !725, file: !476, line: 392, baseType: !480, size: 32, offset: 608)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !725, file: !476, line: 393, baseType: !505, size: 128, offset: 640)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !725, file: !476, line: 394, baseType: !509, size: 160, offset: 768)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !725, file: !476, line: 395, baseType: !513, size: 160, offset: 928)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !725, file: !476, line: 396, baseType: !23, size: 32, offset: 1088)
!748 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Stm32Uart", scope: !51, file: !205, line: 51, size: 1536, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !749, vtableHolder: !99)
!749 = !{!750, !753, !756, !757, !793, !794, !795, !796, !798, !802, !805, !808, !811, !814, !817, !818, !821, !822, !827, !830, !831, !832, !835, !836, !840, !844}
!750 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !748, baseType: !751, flags: DIFlagPublic, extraData: i32 0)
!751 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "BufferedSerial", scope: !51, file: !752, line: 42, size: 832, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada14BufferedSerialE")
!752 = !DIFile(filename: "../cicada/bufferedserial.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "b9c9871d742db1af5ee8abb5df52fc59")
!753 = !DIDerivedType(tag: DW_TAG_member, name: "instance", scope: !748, file: !205, line: 120, baseType: !754, flags: DIFlagStaticMember)
!754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !755, size: 128, elements: !506)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 32)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !748, file: !205, line: 122, baseType: !40, size: 8, offset: 832)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "_handle", scope: !748, file: !205, line: 123, baseType: !758, size: 576, offset: 864)
!758 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_HandleTypeDef", file: !658, line: 189, baseType: !759)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__UART_HandleTypeDef", file: !658, line: 141, size: 576, flags: DIFlagTypePassByValue, elements: !760, identifier: "_ZTS20__UART_HandleTypeDef")
!760 = !{!761, !762, !773, !774, !775, !777, !778, !779, !780, !785, !786, !788, !791, !792}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "Instance", scope: !759, file: !658, line: 143, baseType: !17, size: 32)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "Init", scope: !759, file: !658, line: 145, baseType: !763, size: 224, offset: 32)
!763 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_InitTypeDef", file: !658, line: 76, baseType: !764)
!764 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !658, line: 47, size: 224, flags: DIFlagTypePassByValue, elements: !765, identifier: "_ZTS16UART_InitTypeDef")
!765 = !{!766, !767, !768, !769, !770, !771, !772}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "BaudRate", scope: !764, file: !658, line: 49, baseType: !24, size: 32)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "WordLength", scope: !764, file: !658, line: 54, baseType: !24, size: 32, offset: 32)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "StopBits", scope: !764, file: !658, line: 57, baseType: !24, size: 32, offset: 64)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "Parity", scope: !764, file: !658, line: 60, baseType: !24, size: 32, offset: 96)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !764, file: !658, line: 67, baseType: !24, size: 32, offset: 128)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "HwFlowCtl", scope: !764, file: !658, line: 70, baseType: !24, size: 32, offset: 160)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "OverSampling", scope: !764, file: !658, line: 73, baseType: !24, size: 32, offset: 192)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "pTxBuffPtr", scope: !759, file: !658, line: 147, baseType: !45, size: 32, offset: 256)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "TxXferSize", scope: !759, file: !658, line: 149, baseType: !37, size: 16, offset: 288)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "TxXferCount", scope: !759, file: !658, line: 151, baseType: !776, size: 16, offset: 304)
!776 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !37)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "pRxBuffPtr", scope: !759, file: !658, line: 153, baseType: !45, size: 32, offset: 320)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "RxXferSize", scope: !759, file: !658, line: 155, baseType: !37, size: 16, offset: 352)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "RxXferCount", scope: !759, file: !658, line: 157, baseType: !776, size: 16, offset: 368)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "hdmatx", scope: !759, file: !658, line: 159, baseType: !781, size: 32, offset: 384)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 32)
!782 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_HandleTypeDef", file: !783, line: 137, baseType: !784)
!783 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "dd8e7645a79a80f8166404bb078b3d4e")
!784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__DMA_HandleTypeDef", file: !783, line: 111, size: 576, flags: DIFlagFwdDecl, identifier: "_ZTS19__DMA_HandleTypeDef")
!785 = !DIDerivedType(tag: DW_TAG_member, name: "hdmarx", scope: !759, file: !658, line: 161, baseType: !781, size: 32, offset: 416)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "Lock", scope: !759, file: !658, line: 163, baseType: !787, size: 32, offset: 448)
!787 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_LockTypeDef", file: !9, line: 56, baseType: !653)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "gState", scope: !759, file: !658, line: 165, baseType: !789, size: 32, offset: 480)
!789 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !790)
!790 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_UART_StateTypeDef", file: !658, line: 136, baseType: !657)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "RxState", scope: !759, file: !658, line: 169, baseType: !789, size: 32, offset: 512)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "ErrorCode", scope: !759, file: !658, line: 172, baseType: !23, size: 32, offset: 544)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "_uartPort", scope: !748, file: !205, line: 124, baseType: !34, size: 32, offset: 1440)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "_txPin", scope: !748, file: !205, line: 125, baseType: !37, size: 16, offset: 1472)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "_rxPin", scope: !748, file: !205, line: 126, baseType: !37, size: 16, offset: 1488)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "_uartInterruptInstance", scope: !748, file: !205, line: 127, baseType: !797, size: 32, offset: 1504)
!797 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !19, line: 126, baseType: !652)
!798 = !DISubprogram(name: "Stm32Uart", scope: !748, file: !205, line: 66, type: !799, scopeLine: 66, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!799 = !DISubroutineType(types: !800)
!800 = !{null, !801, !338, !338, !110, !17, !34, !37, !37}
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!802 = !DISubprogram(name: "Stm32Uart", scope: !748, file: !205, line: 83, type: !803, scopeLine: 83, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!803 = !DISubroutineType(types: !804)
!804 = !{null, !801, !338, !338, !110, !110, !17, !34, !37, !37}
!805 = !DISubprogram(name: "~Stm32Uart", scope: !748, file: !205, line: 86, type: !806, scopeLine: 86, containingType: !748, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!806 = !DISubroutineType(types: !807)
!807 = !{null, !801}
!808 = !DISubprogram(name: "getInstance", linkageName: "_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef", scope: !748, file: !205, line: 88, type: !809, scopeLine: 88, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!809 = !DISubroutineType(types: !810)
!810 = !{!755, !17}
!811 = !DISubprogram(name: "open", linkageName: "_ZN6Cicada9Stm32Uart4openEv", scope: !748, file: !205, line: 93, type: !812, scopeLine: 93, containingType: !748, virtualIndex: 15, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!812 = !DISubroutineType(types: !813)
!813 = !{!62, !801}
!814 = !DISubprogram(name: "open", linkageName: "_ZN6Cicada9Stm32Uart4openEh", scope: !748, file: !205, line: 100, type: !815, scopeLine: 100, containingType: !748, virtualIndex: 16, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!815 = !DISubroutineType(types: !816)
!816 = !{!62, !801, !40}
!817 = !DISubprogram(name: "isOpen", linkageName: "_ZN6Cicada9Stm32Uart6isOpenEv", scope: !748, file: !205, line: 102, type: !812, scopeLine: 102, containingType: !748, virtualIndex: 17, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!818 = !DISubprogram(name: "setSerialConfig", linkageName: "_ZN6Cicada9Stm32Uart15setSerialConfigEjh", scope: !748, file: !205, line: 103, type: !819, scopeLine: 103, containingType: !748, virtualIndex: 18, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!819 = !DISubroutineType(types: !820)
!820 = !{!62, !801, !24, !40}
!821 = !DISubprogram(name: "close", linkageName: "_ZN6Cicada9Stm32Uart5closeEv", scope: !748, file: !205, line: 104, type: !806, scopeLine: 104, containingType: !748, virtualIndex: 19, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!822 = !DISubprogram(name: "portName", linkageName: "_ZNK6Cicada9Stm32Uart8portNameEv", scope: !748, file: !205, line: 105, type: !823, scopeLine: 105, containingType: !748, virtualIndex: 20, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!823 = !DISubroutineType(types: !824)
!824 = !{!147, !825}
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !748)
!827 = !DISubprogram(name: "rawRead", linkageName: "_ZN6Cicada9Stm32Uart7rawReadERh", scope: !748, file: !205, line: 106, type: !828, scopeLine: 106, containingType: !748, virtualIndex: 21, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!828 = !DISubroutineType(types: !829)
!829 = !{!62, !801, !155}
!830 = !DISubprogram(name: "rawWrite", linkageName: "_ZN6Cicada9Stm32Uart8rawWriteEh", scope: !748, file: !205, line: 107, type: !815, scopeLine: 107, containingType: !748, virtualIndex: 22, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!831 = !DISubprogram(name: "startTransmit", linkageName: "_ZN6Cicada9Stm32Uart13startTransmitEv", scope: !748, file: !205, line: 108, type: !806, scopeLine: 108, containingType: !748, virtualIndex: 23, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!832 = !DISubprogram(name: "writeBufferProcessed", linkageName: "_ZNK6Cicada9Stm32Uart20writeBufferProcessedEv", scope: !748, file: !205, line: 109, type: !833, scopeLine: 109, containingType: !748, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!833 = !DISubroutineType(types: !834)
!834 = !{!62, !825}
!835 = !DISubprogram(name: "handleInterrupt", linkageName: "_ZN6Cicada9Stm32Uart15handleInterruptEv", scope: !748, file: !205, line: 111, type: !806, scopeLine: 111, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!836 = !DISubprogram(name: "Stm32Uart", scope: !748, file: !205, line: 115, type: !837, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!837 = !DISubroutineType(types: !838)
!838 = !{null, !801, !839}
!839 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !826, size: 32)
!840 = !DISubprogram(name: "operator=", linkageName: "_ZN6Cicada9Stm32UartaSERKS0_", scope: !748, file: !205, line: 116, type: !841, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!841 = !DISubroutineType(types: !842)
!842 = !{!843, !801, !839}
!843 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !748, size: 32)
!844 = !DISubprogram(name: "init", linkageName: "_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef", scope: !748, file: !205, line: 118, type: !845, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!845 = !DISubroutineType(types: !846)
!846 = !{null, !801, !17}
!847 = !{!647}
!848 = !{!233, !239, !243, !246, !250, !253, !255, !257, !259, !262, !265, !268, !271, !274, !277, !278, !279, !280, !281, !283, !285, !287, !289, !292, !295, !298, !301, !304, !849}
!849 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !649, entity: !51, file: !650, line: 28)
!850 = distinct !DICompileUnit(language: DW_LANG_C99, file: !851, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !852, retainedTypes: !857, splitDebugInlining: false, nameTableKind: None)
!851 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "bf5d5e021854d33cea3d58ed6b9d5087")
!852 = !{!538, !454, !853}
!853 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !455, line: 157, baseType: !10, size: 32, elements: !854)
!854 = !{!855, !856}
!855 = !DIEnumerator(name: "DISABLE", value: 0)
!856 = !DIEnumerator(name: "ENABLE", value: 1)
!857 = !{!858, !24, !312, !40, !872, !873, !879, !37, !892, !903}
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 32)
!859 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !19, line: 438, baseType: !860)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 424, size: 320, elements: !861)
!861 = !{!862, !863, !864, !865, !866, !867, !868, !869, !870, !871}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !860, file: !19, line: 426, baseType: !23, size: 32)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !860, file: !19, line: 427, baseType: !23, size: 32, offset: 32)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !860, file: !19, line: 428, baseType: !23, size: 32, offset: 64)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !860, file: !19, line: 429, baseType: !23, size: 32, offset: 96)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !860, file: !19, line: 430, baseType: !23, size: 32, offset: 128)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !860, file: !19, line: 431, baseType: !23, size: 32, offset: 160)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !860, file: !19, line: 432, baseType: !23, size: 32, offset: 192)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !860, file: !19, line: 433, baseType: !23, size: 32, offset: 224)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !860, file: !19, line: 434, baseType: !23, size: 32, offset: 256)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !860, file: !19, line: 435, baseType: !23, size: 32, offset: 288)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 32)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 32)
!874 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !19, line: 418, baseType: !875)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 414, size: 64, elements: !876)
!876 = !{!877, !878}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !875, file: !19, line: 416, baseType: !23, size: 32)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !875, file: !19, line: 417, baseType: !23, size: 32, offset: 32)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 32)
!880 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !19, line: 336, baseType: !881)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 325, size: 288, elements: !882)
!882 = !{!883, !884, !885, !886, !887, !888, !889, !890, !891}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !881, file: !19, line: 327, baseType: !23, size: 32)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !881, file: !19, line: 328, baseType: !23, size: 32, offset: 32)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !881, file: !19, line: 329, baseType: !23, size: 32, offset: 64)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !881, file: !19, line: 330, baseType: !23, size: 32, offset: 96)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !881, file: !19, line: 331, baseType: !23, size: 32, offset: 128)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "AR", scope: !881, file: !19, line: 332, baseType: !23, size: 32, offset: 160)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !881, file: !19, line: 333, baseType: !23, size: 32, offset: 192)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !881, file: !19, line: 334, baseType: !23, size: 32, offset: 224)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR", scope: !881, file: !19, line: 335, baseType: !23, size: 32, offset: 256)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 32)
!893 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !19, line: 367, baseType: !894)
!894 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 358, size: 224, elements: !895)
!895 = !{!896, !897, !898, !899, !900, !901, !902}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "CRL", scope: !894, file: !19, line: 360, baseType: !23, size: 32)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "CRH", scope: !894, file: !19, line: 361, baseType: !23, size: 32, offset: 32)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !894, file: !19, line: 362, baseType: !23, size: 32, offset: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !894, file: !19, line: 363, baseType: !23, size: 32, offset: 96)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !894, file: !19, line: 364, baseType: !23, size: 32, offset: 128)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !894, file: !19, line: 365, baseType: !23, size: 32, offset: 160)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !894, file: !19, line: 366, baseType: !23, size: 32, offset: 192)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 32)
!904 = distinct !DICompileUnit(language: DW_LANG_C99, file: !905, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !906, retainedTypes: !907, splitDebugInlining: false, nameTableKind: None)
!905 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "83cb8d6817603f64d73dca2a0b01efa1")
!906 = !{!544}
!907 = !{!908, !24, !916, !244, !40, !941}
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 32)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !476, line: 700, baseType: !910)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 694, size: 128, elements: !911)
!911 = !{!912, !913, !914, !915}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !910, file: !476, line: 696, baseType: !23, size: 32)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !910, file: !476, line: 697, baseType: !23, size: 32, offset: 32)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !910, file: !476, line: 698, baseType: !23, size: 32, offset: 64)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !910, file: !476, line: 699, baseType: !480, size: 32, offset: 96)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 32)
!917 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !476, line: 397, baseType: !918)
!918 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 374, size: 1120, elements: !919)
!919 = !{!920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !918, file: !476, line: 376, baseType: !480, size: 32)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !918, file: !476, line: 377, baseType: !23, size: 32, offset: 32)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !918, file: !476, line: 378, baseType: !23, size: 32, offset: 64)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !918, file: !476, line: 379, baseType: !23, size: 32, offset: 96)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !918, file: !476, line: 380, baseType: !23, size: 32, offset: 128)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !918, file: !476, line: 381, baseType: !23, size: 32, offset: 160)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !918, file: !476, line: 382, baseType: !487, size: 96, offset: 192)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !918, file: !476, line: 383, baseType: !23, size: 32, offset: 288)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !918, file: !476, line: 384, baseType: !23, size: 32, offset: 320)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !918, file: !476, line: 385, baseType: !23, size: 32, offset: 352)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !918, file: !476, line: 386, baseType: !23, size: 32, offset: 384)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !918, file: !476, line: 387, baseType: !23, size: 32, offset: 416)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !918, file: !476, line: 388, baseType: !23, size: 32, offset: 448)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !918, file: !476, line: 389, baseType: !23, size: 32, offset: 480)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !918, file: !476, line: 390, baseType: !499, size: 64, offset: 512)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !918, file: !476, line: 391, baseType: !480, size: 32, offset: 576)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !918, file: !476, line: 392, baseType: !480, size: 32, offset: 608)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !918, file: !476, line: 393, baseType: !505, size: 128, offset: 640)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !918, file: !476, line: 394, baseType: !509, size: 160, offset: 768)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !918, file: !476, line: 395, baseType: !513, size: 160, offset: 928)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !918, file: !476, line: 396, baseType: !23, size: 32, offset: 1088)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 32)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !476, line: 355, baseType: !943)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 340, size: 28704, elements: !944)
!944 = !{!945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !943, file: !476, line: 342, baseType: !698, size: 256)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !943, file: !476, line: 343, baseType: !700, size: 768, offset: 256)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !943, file: !476, line: 344, baseType: !698, size: 256, offset: 1024)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !943, file: !476, line: 345, baseType: !700, size: 768, offset: 1280)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !943, file: !476, line: 346, baseType: !698, size: 256, offset: 2048)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !943, file: !476, line: 347, baseType: !700, size: 768, offset: 2304)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !943, file: !476, line: 348, baseType: !698, size: 256, offset: 3072)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !943, file: !476, line: 349, baseType: !700, size: 768, offset: 3328)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !943, file: !476, line: 350, baseType: !698, size: 256, offset: 4096)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !943, file: !476, line: 351, baseType: !711, size: 1792, offset: 4352)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !943, file: !476, line: 352, baseType: !715, size: 1920, offset: 6144)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !943, file: !476, line: 353, baseType: !719, size: 20608, offset: 8064)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !943, file: !476, line: 354, baseType: !23, size: 32, offset: 28672)
!958 = distinct !DICompileUnit(language: DW_LANG_C99, file: !959, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !960, retainedTypes: !966, splitDebugInlining: false, nameTableKind: None)
!959 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "de98d9c05272efa2ca465428751dd1b5")
!960 = !{!961, !538}
!961 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !962, line: 65, baseType: !10, size: 32, elements: !963)
!962 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "b5ff32b0624c591654a3e02ee400cffe")
!963 = !{!964, !965}
!964 = !DIEnumerator(name: "GPIO_PIN_RESET", value: 0)
!965 = !DIEnumerator(name: "GPIO_PIN_SET", value: 1)
!966 = !{!24, !37, !967, !981, !990, !1001}
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!968 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !19, line: 438, baseType: !969)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 424, size: 320, elements: !970)
!970 = !{!971, !972, !973, !974, !975, !976, !977, !978, !979, !980}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !969, file: !19, line: 426, baseType: !23, size: 32)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !969, file: !19, line: 427, baseType: !23, size: 32, offset: 32)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !969, file: !19, line: 428, baseType: !23, size: 32, offset: 64)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !969, file: !19, line: 429, baseType: !23, size: 32, offset: 96)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !969, file: !19, line: 430, baseType: !23, size: 32, offset: 128)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !969, file: !19, line: 431, baseType: !23, size: 32, offset: 160)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !969, file: !19, line: 432, baseType: !23, size: 32, offset: 192)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !969, file: !19, line: 433, baseType: !23, size: 32, offset: 224)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !969, file: !19, line: 434, baseType: !23, size: 32, offset: 256)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !969, file: !19, line: 435, baseType: !23, size: 32, offset: 288)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 32)
!982 = !DIDerivedType(tag: DW_TAG_typedef, name: "AFIO_TypeDef", file: !19, line: 380, baseType: !983)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 373, size: 256, elements: !984)
!984 = !{!985, !986, !987, !988, !989}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "EVCR", scope: !983, file: !19, line: 375, baseType: !23, size: 32)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "MAPR", scope: !983, file: !19, line: 376, baseType: !23, size: 32, offset: 32)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !983, file: !19, line: 377, baseType: !676, size: 128, offset: 64)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !983, file: !19, line: 378, baseType: !24, size: 32, offset: 192)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "MAPR2", scope: !983, file: !19, line: 379, baseType: !23, size: 32, offset: 224)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 32)
!991 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !19, line: 367, baseType: !992)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 358, size: 224, elements: !993)
!993 = !{!994, !995, !996, !997, !998, !999, !1000}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "CRL", scope: !992, file: !19, line: 360, baseType: !23, size: 32)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "CRH", scope: !992, file: !19, line: 361, baseType: !23, size: 32, offset: 32)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !992, file: !19, line: 362, baseType: !23, size: 32, offset: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !992, file: !19, line: 363, baseType: !23, size: 32, offset: 96)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !992, file: !19, line: 364, baseType: !23, size: 32, offset: 128)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !992, file: !19, line: 365, baseType: !23, size: 32, offset: 160)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !992, file: !19, line: 366, baseType: !23, size: 32, offset: 192)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 32)
!1002 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !19, line: 319, baseType: !1003)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 311, size: 192, elements: !1004)
!1004 = !{!1005, !1006, !1007, !1008, !1009, !1010}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1003, file: !19, line: 313, baseType: !23, size: 32)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !1003, file: !19, line: 314, baseType: !23, size: 32, offset: 32)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !1003, file: !19, line: 315, baseType: !23, size: 32, offset: 64)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !1003, file: !19, line: 316, baseType: !23, size: 32, offset: 96)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !1003, file: !19, line: 317, baseType: !23, size: 32, offset: 128)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !1003, file: !19, line: 318, baseType: !23, size: 32, offset: 160)
!1011 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1012, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1013, imports: !1033, splitDebugInlining: false, nameTableKind: None)
!1012 = !DIFile(filename: "../cicada/scheduler.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e3803bdb34845899b60a060630b7fca8")
!1013 = !{!1014}
!1014 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Scheduler", scope: !51, file: !1015, line: 53, size: 96, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !1016, identifier: "_ZTSN6Cicada9SchedulerE")
!1015 = !DIFile(filename: "../cicada/scheduler.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "040734eea83ce445208abbcb76b1b1f5")
!1016 = !{!1017, !1021, !1024, !1025, !1029, !1032}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "_tickFunction", scope: !1014, file: !1015, line: 77, baseType: !1018, size: 32)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 32)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!24}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "_taskList", scope: !1014, file: !1015, line: 78, baseType: !1022, size: 32, offset: 32)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 32)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !49, size: 32)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "_currentTask", scope: !1014, file: !1015, line: 79, baseType: !1022, size: 32, offset: 64)
!1025 = !DISubprogram(name: "Scheduler", scope: !1014, file: !1015, line: 62, type: !1026, scopeLine: 62, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1026 = !DISubroutineType(types: !1027)
!1027 = !{null, !1028, !1018, !1022}
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1029 = !DISubprogram(name: "runTask", linkageName: "_ZN6Cicada9Scheduler7runTaskEv", scope: !1014, file: !1015, line: 68, type: !1030, scopeLine: 68, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1030 = !DISubroutineType(types: !1031)
!1031 = !{null, !1028}
!1032 = !DISubprogram(name: "start", linkageName: "_ZN6Cicada9Scheduler5startEv", scope: !1014, file: !1015, line: 74, type: !1030, scopeLine: 74, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1033 = !{!1034, !1039}
!1034 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !234, entity: !1035, file: !1038, line: 58)
!1035 = !DIDerivedType(tag: DW_TAG_typedef, name: "max_align_t", file: !1036, line: 24, baseType: !1037)
!1036 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/__stddef_max_align_t.h", directory: "", checksumkind: CSK_MD5, checksum: "48e8e2456f77e6cda35d245130fa7259")
!1037 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1036, line: 19, size: 128, flags: DIFlagFwdDecl, identifier: "_ZTS11max_align_t")
!1038 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/cstddef", directory: "/home/mjshen/RTOSExploration")
!1039 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1011, entity: !51, file: !1012, line: 27)
!1040 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1041, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, imports: !1042, splitDebugInlining: false, nameTableKind: None)
!1041 = !DIFile(filename: "../cicada/platform/stm32f1/tick_stm32.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "2e21bec54557ce151e165eda219ada53")
!1042 = !{!233, !239, !243, !246, !250, !253, !255, !257, !259, !262, !265, !268, !271, !274, !277, !278, !279, !280, !281, !283, !285, !287, !289, !292, !295, !298, !301, !304}
!1043 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1044, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1045, imports: !1170, splitDebugInlining: false, nameTableKind: None)
!1044 = !DIFile(filename: "../cicada/bufferedserial.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "0c50e54046b616f386000f55e6143c47")
!1045 = !{!1046, !95, !99, !128, !1050, !1054}
!1046 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "BufferedSerial", scope: !51, file: !752, line: 42, size: 832, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1047, vtableHolder: !99)
!1047 = !{!1048, !1049, !1128, !1129, !1133, !1136, !1141, !1142, !1145, !1148, !1151, !1154, !1157, !1160, !1161, !1164, !1167, !1168, !1169}
!1048 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1046, baseType: !95, flags: DIFlagPublic, extraData: i32 0)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "_readBuffer", scope: !1046, file: !752, line: 105, baseType: !1050, size: 384, offset: 64, flags: DIFlagProtected)
!1050 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "LineCircularBuffer", scope: !51, file: !1051, line: 38, size: 384, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1052, vtableHolder: !1054, identifier: "_ZTSN6Cicada18LineCircularBufferE")
!1051 = !DIFile(filename: "../cicada/linecircularbuffer.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "7c64ede70efe975ae69caea246f4ce64")
!1052 = !{!1053, !1102, !1103, !1107, !1110, !1113, !1116, !1119, !1124, !1125}
!1053 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1050, baseType: !1054, flags: DIFlagPublic, extraData: i32 0)
!1054 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "CircularBuffer<char>", scope: !51, file: !1055, line: 39, size: 384, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1056, vtableHolder: !1054, templateParams: !1100, identifier: "_ZTSN6Cicada14CircularBufferIcEE")
!1055 = !DIFile(filename: "../cicada/circularbuffer.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "eefa34d28a75acab61b1e5f45f9ba1dd")
!1056 = !{!1057, !1058, !1059, !1060, !1061, !1063, !1064, !1068, !1071, !1074, !1077, !1080, !1083, !1084, !1085, !1090, !1091, !1094, !1095, !1096}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$CircularBuffer", scope: !1055, file: !1055, baseType: !54, size: 32, flags: DIFlagArtificial)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "_writeHead", scope: !1054, file: !1055, line: 196, baseType: !110, size: 64, offset: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "_readHead", scope: !1054, file: !1055, line: 197, baseType: !110, size: 64, offset: 128)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "_availableData", scope: !1054, file: !1055, line: 198, baseType: !110, size: 64, offset: 192)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "_bufferSize", scope: !1054, file: !1055, line: 199, baseType: !1062, size: 64, offset: 256)
!1062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "_buffer", scope: !1054, file: !1055, line: 200, baseType: !338, size: 32, offset: 320)
!1064 = !DISubprogram(name: "CircularBuffer", scope: !1054, file: !1055, line: 48, type: !1065, scopeLine: 48, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{null, !1067, !338, !110}
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1068 = !DISubprogram(name: "~CircularBuffer", scope: !1054, file: !1055, line: 56, type: !1069, scopeLine: 56, containingType: !1054, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{null, !1067}
!1071 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIcE4pushEPKcy", scope: !1054, file: !1055, line: 65, type: !1072, scopeLine: 65, containingType: !1054, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!110, !1067, !147, !110}
!1074 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIcE4pushEc", scope: !1054, file: !1055, line: 88, type: !1075, scopeLine: 88, containingType: !1054, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1075 = !DISubroutineType(types: !1076)
!1076 = !{null, !1067, !149}
!1077 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIcE4pullEPcy", scope: !1054, file: !1055, line: 102, type: !1078, scopeLine: 102, containingType: !1054, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!110, !1067, !338, !110}
!1080 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIcE4pullEv", scope: !1054, file: !1055, line: 124, type: !1081, scopeLine: 124, containingType: !1054, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{!149, !1067}
!1083 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada14CircularBufferIcE4readEv", scope: !1054, file: !1055, line: 140, type: !1081, scopeLine: 140, containingType: !1054, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1084 = !DISubprogram(name: "flush", linkageName: "_ZN6Cicada14CircularBufferIcE5flushEv", scope: !1054, file: !1055, line: 148, type: !1069, scopeLine: 148, containingType: !1054, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1085 = !DISubprogram(name: "isEmpty", linkageName: "_ZNK6Cicada14CircularBufferIcE7isEmptyEv", scope: !1054, file: !1055, line: 158, type: !1086, scopeLine: 158, containingType: !1054, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!62, !1088}
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1089 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1054)
!1090 = !DISubprogram(name: "isFull", linkageName: "_ZNK6Cicada14CircularBufferIcE6isFullEv", scope: !1054, file: !1055, line: 166, type: !1086, scopeLine: 166, containingType: !1054, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1091 = !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv", scope: !1054, file: !1055, line: 174, type: !1092, scopeLine: 174, containingType: !1054, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!110, !1088}
!1094 = !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv", scope: !1054, file: !1055, line: 182, type: !1092, scopeLine: 182, containingType: !1054, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1095 = !DISubprogram(name: "size", linkageName: "_ZNK6Cicada14CircularBufferIcE4sizeEv", scope: !1054, file: !1055, line: 190, type: !1092, scopeLine: 190, containingType: !1054, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1096 = !DISubprogram(name: "incrementOrResetHead", linkageName: "_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy", scope: !1054, file: !1055, line: 202, type: !1097, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{null, !1067, !1099}
!1099 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !110, size: 32)
!1100 = !{!1101}
!1101 = !DITemplateTypeParameter(name: "T", type: !149)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "_bufferedLines", scope: !1050, file: !1051, line: 130, baseType: !37, size: 16, offset: 352)
!1103 = !DISubprogram(name: "LineCircularBuffer", scope: !1050, file: !1051, line: 41, type: !1104, scopeLine: 41, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{null, !1106, !338, !110}
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1107 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada18LineCircularBuffer4pushEPKcy", scope: !1050, file: !1051, line: 46, type: !1108, scopeLine: 46, containingType: !1050, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!110, !1106, !147, !110}
!1110 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada18LineCircularBuffer4pushEc", scope: !1050, file: !1051, line: 60, type: !1111, scopeLine: 60, containingType: !1050, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{null, !1106, !149}
!1113 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada18LineCircularBuffer4pullEPcy", scope: !1050, file: !1051, line: 69, type: !1114, scopeLine: 69, containingType: !1050, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1114 = !DISubroutineType(types: !1115)
!1115 = !{!110, !1106, !338, !110}
!1116 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada18LineCircularBuffer4pullEv", scope: !1050, file: !1051, line: 83, type: !1117, scopeLine: 83, containingType: !1050, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1117 = !DISubroutineType(types: !1118)
!1118 = !{!149, !1106}
!1119 = !DISubprogram(name: "numBufferedLines", linkageName: "_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv", scope: !1050, file: !1051, line: 97, type: !1120, scopeLine: 97, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{!37, !1122}
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1050)
!1124 = !DISubprogram(name: "readLine", linkageName: "_ZN6Cicada18LineCircularBuffer8readLineEPcy", scope: !1050, file: !1051, line: 108, type: !1114, scopeLine: 108, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1125 = !DISubprogram(name: "flush", linkageName: "_ZN6Cicada18LineCircularBuffer5flushEv", scope: !1050, file: !1051, line: 123, type: !1126, scopeLine: 123, containingType: !1050, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{null, !1106}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "_writeBuffer", scope: !1046, file: !752, line: 106, baseType: !1050, size: 384, offset: 448, flags: DIFlagProtected)
!1129 = !DISubprogram(name: "BufferedSerial", scope: !1046, file: !752, line: 54, type: !1130, scopeLine: 54, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1130 = !DISubroutineType(types: !1131)
!1131 = !{null, !1132, !338, !338, !110, !110}
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1133 = !DISubprogram(name: "BufferedSerial", scope: !1046, file: !752, line: 64, type: !1134, scopeLine: 64, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1134 = !DISubroutineType(types: !1135)
!1135 = !{null, !1132, !338, !338, !110}
!1136 = !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14BufferedSerial14bytesAvailableEv", scope: !1046, file: !752, line: 66, type: !1137, scopeLine: 66, containingType: !1046, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1137 = !DISubroutineType(types: !1138)
!1138 = !{!110, !1139}
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1046)
!1141 = !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14BufferedSerial14spaceAvailableEv", scope: !1046, file: !752, line: 68, type: !1137, scopeLine: 68, containingType: !1046, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1142 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada14BufferedSerial4readEPhy", scope: !1046, file: !752, line: 70, type: !1143, scopeLine: 70, containingType: !1046, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{!110, !1132, !45, !110}
!1145 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada14BufferedSerial4readEv", scope: !1046, file: !752, line: 72, type: !1146, scopeLine: 72, containingType: !1046, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1146 = !DISubroutineType(types: !1147)
!1147 = !{!40, !1132}
!1148 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEPKhy", scope: !1046, file: !752, line: 74, type: !1149, scopeLine: 74, containingType: !1046, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1149 = !DISubroutineType(types: !1150)
!1150 = !{!110, !1132, !43, !110}
!1151 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEPKh", scope: !1046, file: !752, line: 76, type: !1152, scopeLine: 76, containingType: !1046, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1152 = !DISubroutineType(types: !1153)
!1153 = !{!110, !1132, !43}
!1154 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEh", scope: !1046, file: !752, line: 78, type: !1155, scopeLine: 78, containingType: !1046, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{null, !1132, !40}
!1157 = !DISubprogram(name: "canReadLine", linkageName: "_ZNK6Cicada14BufferedSerial11canReadLineEv", scope: !1046, file: !752, line: 80, type: !1158, scopeLine: 80, containingType: !1046, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1158 = !DISubroutineType(types: !1159)
!1159 = !{!62, !1139}
!1160 = !DISubprogram(name: "readLine", linkageName: "_ZN6Cicada14BufferedSerial8readLineEPhy", scope: !1046, file: !752, line: 91, type: !1143, scopeLine: 91, containingType: !1046, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1161 = !DISubprogram(name: "flushReceiveBuffers", linkageName: "_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv", scope: !1046, file: !752, line: 93, type: !1162, scopeLine: 93, containingType: !1046, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{null, !1132}
!1164 = !DISubprogram(name: "readBufferSize", linkageName: "_ZN6Cicada14BufferedSerial14readBufferSizeEv", scope: !1046, file: !752, line: 95, type: !1165, scopeLine: 95, containingType: !1046, virtualIndex: 13, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1165 = !DISubroutineType(types: !1166)
!1166 = !{!110, !1132}
!1167 = !DISubprogram(name: "writeBufferSize", linkageName: "_ZN6Cicada14BufferedSerial15writeBufferSizeEv", scope: !1046, file: !752, line: 96, type: !1165, scopeLine: 96, containingType: !1046, virtualIndex: 14, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1168 = !DISubprogram(name: "transferToAndFromBuffer", linkageName: "_ZN6Cicada14BufferedSerial23transferToAndFromBufferEv", scope: !1046, file: !752, line: 102, type: !1162, scopeLine: 102, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1169 = !DISubprogram(name: "copyToBuffer", linkageName: "_ZN6Cicada14BufferedSerial12copyToBufferEh", scope: !1046, file: !752, line: 109, type: !1155, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1170 = !{!233, !239, !243, !246, !250, !253, !255, !257, !259, !262, !265, !268, !271, !274, !277, !278, !279, !280, !281, !283, !285, !287, !289, !292, !295, !298, !301, !304, !1171}
!1171 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1043, entity: !51, file: !1044, line: 28)
!1172 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1173, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1173 = !DIFile(filename: "../cicada/platform/stm32f1/irq_stm32.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e34a510e3cc4f838fcfeb73936339393")
!1174 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1175, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1176, retainedTypes: !1197, splitDebugInlining: false, nameTableKind: None)
!1175 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "16c165b28ca3d4a5c8d7d66f2c899e26")
!1176 = !{!538, !1177, !1181, !1187, !454}
!1177 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 52, baseType: !10, size: 32, elements: !1178)
!1178 = !{!1179, !1180}
!1179 = !DIEnumerator(name: "HAL_UNLOCKED", value: 0)
!1180 = !DIEnumerator(name: "HAL_LOCKED", value: 1)
!1181 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !783, line: 78, baseType: !10, size: 32, elements: !1182)
!1182 = !{!1183, !1184, !1185, !1186}
!1183 = !DIEnumerator(name: "HAL_DMA_STATE_RESET", value: 0)
!1184 = !DIEnumerator(name: "HAL_DMA_STATE_READY", value: 1)
!1185 = !DIEnumerator(name: "HAL_DMA_STATE_BUSY", value: 2)
!1186 = !DIEnumerator(name: "HAL_DMA_STATE_TIMEOUT", value: 3)
!1187 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !658, line: 117, baseType: !10, size: 32, elements: !1188)
!1188 = !{!1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196}
!1189 = !DIEnumerator(name: "HAL_UART_STATE_RESET", value: 0)
!1190 = !DIEnumerator(name: "HAL_UART_STATE_READY", value: 32)
!1191 = !DIEnumerator(name: "HAL_UART_STATE_BUSY", value: 36)
!1192 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_TX", value: 33)
!1193 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_RX", value: 34)
!1194 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_TX_RX", value: 35)
!1195 = !DIEnumerator(name: "HAL_UART_STATE_TIMEOUT", value: 160)
!1196 = !DIEnumerator(name: "HAL_UART_STATE_ERROR", value: 224)
!1197 = !{!312, !24, !1198, !37, !40, !640, !1199, !1200, !1234, !1205}
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 32)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_UART_StateTypeDef", file: !658, line: 136, baseType: !1187)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 32)
!1201 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_HandleTypeDef", file: !658, line: 189, baseType: !1202)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__UART_HandleTypeDef", file: !658, line: 141, size: 576, elements: !1203)
!1203 = !{!1204, !1216, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1280, !1281, !1282, !1284, !1285}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "Instance", scope: !1202, file: !658, line: 143, baseType: !1205, size: 32)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 32)
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !19, line: 516, baseType: !1207)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 507, size: 224, elements: !1208)
!1208 = !{!1209, !1210, !1211, !1212, !1213, !1214, !1215}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1207, file: !19, line: 509, baseType: !23, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1207, file: !19, line: 510, baseType: !23, size: 32, offset: 32)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1207, file: !19, line: 511, baseType: !23, size: 32, offset: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1207, file: !19, line: 512, baseType: !23, size: 32, offset: 96)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1207, file: !19, line: 513, baseType: !23, size: 32, offset: 128)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1207, file: !19, line: 514, baseType: !23, size: 32, offset: 160)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1207, file: !19, line: 515, baseType: !23, size: 32, offset: 192)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "Init", scope: !1202, file: !658, line: 145, baseType: !1217, size: 224, offset: 32)
!1217 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_InitTypeDef", file: !658, line: 76, baseType: !1218)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !658, line: 47, size: 224, elements: !1219)
!1219 = !{!1220, !1221, !1222, !1223, !1224, !1225, !1226}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "BaudRate", scope: !1218, file: !658, line: 49, baseType: !24, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "WordLength", scope: !1218, file: !658, line: 54, baseType: !24, size: 32, offset: 32)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "StopBits", scope: !1218, file: !658, line: 57, baseType: !24, size: 32, offset: 64)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "Parity", scope: !1218, file: !658, line: 60, baseType: !24, size: 32, offset: 96)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !1218, file: !658, line: 67, baseType: !24, size: 32, offset: 128)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "HwFlowCtl", scope: !1218, file: !658, line: 70, baseType: !24, size: 32, offset: 160)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "OverSampling", scope: !1218, file: !658, line: 73, baseType: !24, size: 32, offset: 192)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "pTxBuffPtr", scope: !1202, file: !658, line: 147, baseType: !45, size: 32, offset: 256)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "TxXferSize", scope: !1202, file: !658, line: 149, baseType: !37, size: 16, offset: 288)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "TxXferCount", scope: !1202, file: !658, line: 151, baseType: !776, size: 16, offset: 304)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "pRxBuffPtr", scope: !1202, file: !658, line: 153, baseType: !45, size: 32, offset: 320)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "RxXferSize", scope: !1202, file: !658, line: 155, baseType: !37, size: 16, offset: 352)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "RxXferCount", scope: !1202, file: !658, line: 157, baseType: !776, size: 16, offset: 368)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "hdmatx", scope: !1202, file: !658, line: 159, baseType: !1234, size: 32, offset: 384)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 32)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_HandleTypeDef", file: !783, line: 137, baseType: !1236)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__DMA_HandleTypeDef", file: !783, line: 111, size: 576, elements: !1237)
!1237 = !{!1238, !1247, !1258, !1260, !1262, !1263, !1268, !1269, !1270, !1271, !1272, !1279}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "Instance", scope: !1236, file: !783, line: 113, baseType: !1239, size: 32)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 32)
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_Channel_TypeDef", file: !19, line: 297, baseType: !1241)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 291, size: 128, elements: !1242)
!1242 = !{!1243, !1244, !1245, !1246}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1241, file: !19, line: 293, baseType: !23, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "CNDTR", scope: !1241, file: !19, line: 294, baseType: !23, size: 32, offset: 32)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "CPAR", scope: !1241, file: !19, line: 295, baseType: !23, size: 32, offset: 64)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "CMAR", scope: !1241, file: !19, line: 296, baseType: !23, size: 32, offset: 96)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "Init", scope: !1236, file: !783, line: 115, baseType: !1248, size: 224, offset: 32)
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_InitTypeDef", file: !783, line: 73, baseType: !1249)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !783, line: 48, size: 224, elements: !1250)
!1250 = !{!1251, !1252, !1253, !1254, !1255, !1256, !1257}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "Direction", scope: !1249, file: !783, line: 50, baseType: !24, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphInc", scope: !1249, file: !783, line: 54, baseType: !24, size: 32, offset: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "MemInc", scope: !1249, file: !783, line: 57, baseType: !24, size: 32, offset: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphDataAlignment", scope: !1249, file: !783, line: 60, baseType: !24, size: 32, offset: 96)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "MemDataAlignment", scope: !1249, file: !783, line: 63, baseType: !24, size: 32, offset: 128)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !1249, file: !783, line: 66, baseType: !24, size: 32, offset: 160)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "Priority", scope: !1249, file: !783, line: 71, baseType: !24, size: 32, offset: 192)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "Lock", scope: !1236, file: !783, line: 117, baseType: !1259, size: 32, offset: 256)
!1259 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_LockTypeDef", file: !9, line: 56, baseType: !1177)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "State", scope: !1236, file: !783, line: 119, baseType: !1261, size: 32, offset: 288)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_DMA_StateTypeDef", file: !783, line: 84, baseType: !1181)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "Parent", scope: !1236, file: !783, line: 121, baseType: !312, size: 32, offset: 320)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "XferCpltCallback", scope: !1236, file: !783, line: 123, baseType: !1264, size: 32, offset: 352)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 32)
!1265 = !DISubroutineType(types: !1266)
!1266 = !{null, !1267}
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "XferHalfCpltCallback", scope: !1236, file: !783, line: 125, baseType: !1264, size: 32, offset: 384)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "XferErrorCallback", scope: !1236, file: !783, line: 127, baseType: !1264, size: 32, offset: 416)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "XferAbortCallback", scope: !1236, file: !783, line: 129, baseType: !1264, size: 32, offset: 448)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "ErrorCode", scope: !1236, file: !783, line: 131, baseType: !23, size: 32, offset: 480)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "DmaBaseAddress", scope: !1236, file: !783, line: 133, baseType: !1273, size: 32, offset: 512)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 32)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_TypeDef", file: !19, line: 303, baseType: !1275)
!1275 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 299, size: 64, elements: !1276)
!1276 = !{!1277, !1278}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !1275, file: !19, line: 301, baseType: !23, size: 32)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "IFCR", scope: !1275, file: !19, line: 302, baseType: !23, size: 32, offset: 32)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "ChannelIndex", scope: !1236, file: !783, line: 135, baseType: !24, size: 32, offset: 544)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "hdmarx", scope: !1202, file: !658, line: 161, baseType: !1234, size: 32, offset: 416)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "Lock", scope: !1202, file: !658, line: 163, baseType: !1259, size: 32, offset: 448)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "gState", scope: !1202, file: !658, line: 165, baseType: !1283, size: 32, offset: 480)
!1283 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1199)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "RxState", scope: !1202, file: !658, line: 169, baseType: !1283, size: 32, offset: 512)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "ErrorCode", scope: !1202, file: !658, line: 172, baseType: !23, size: 32, offset: 544)
!1286 = !{!"Ubuntu clang version 14.0.6"}
!1287 = !{i32 7, !"Dwarf Version", i32 5}
!1288 = !{i32 2, !"Debug Info Version", i32 3}
!1289 = !{i32 1, !"wchar_size", i32 4}
!1290 = !{i32 1, !"min_enum_size", i32 4}
!1291 = !{i32 1, !"branch-target-enforcement", i32 0}
!1292 = !{i32 1, !"sign-return-address", i32 0}
!1293 = !{i32 1, !"sign-return-address-all", i32 0}
!1294 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!1295 = !{i32 7, !"frame-pointer", i32 2}
!1296 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 59, type: !1297, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, retainedNodes: !1300)
!1297 = !DISubroutineType(types: !1298)
!1298 = !{!58, !58, !1299}
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 32)
!1300 = !{!1301, !1302, !1303, !1305, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1317}
!1301 = !DILocalVariable(name: "argc", arg: 1, scope: !1296, file: !3, line: 59, type: !58)
!1302 = !DILocalVariable(name: "argv", arg: 2, scope: !1296, file: !3, line: 59, type: !1299)
!1303 = !DILocalVariable(name: "bufferSize", scope: !1296, file: !3, line: 65, type: !1304)
!1304 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !37)
!1305 = !DILocalVariable(name: "readBufferDebug", scope: !1296, file: !3, line: 66, type: !1306)
!1306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !149, size: 12032, elements: !1307)
!1307 = !{!1308}
!1308 = !DISubrange(count: 1504)
!1309 = !DILocalVariable(name: "writeBufferDebug", scope: !1296, file: !3, line: 67, type: !1306)
!1310 = !DILocalVariable(name: "readBuffer", scope: !1296, file: !3, line: 68, type: !1306)
!1311 = !DILocalVariable(name: "writeBuffer", scope: !1296, file: !3, line: 69, type: !1306)
!1312 = !DILocalVariable(name: "debug", scope: !1296, file: !3, line: 70, type: !204)
!1313 = !DILocalVariable(name: "serial", scope: !1296, file: !3, line: 71, type: !204)
!1314 = !DILocalVariable(name: "task", scope: !1296, file: !3, line: 73, type: !46)
!1315 = !DILocalVariable(name: "taskList", scope: !1296, file: !3, line: 75, type: !1316)
!1316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1023, size: 64, elements: !500)
!1317 = !DILocalVariable(name: "s", scope: !1296, file: !3, line: 77, type: !1014)
!1318 = !DILocation(line: 0, scope: !1296)
!1319 = !DILocation(line: 62, column: 5, scope: !1296)
!1320 = !DILocation(line: 63, column: 5, scope: !1296)
!1321 = !DILocation(line: 66, column: 5, scope: !1296)
!1322 = !DILocation(line: 66, column: 10, scope: !1296)
!1323 = !DILocation(line: 67, column: 5, scope: !1296)
!1324 = !DILocation(line: 67, column: 10, scope: !1296)
!1325 = !DILocation(line: 68, column: 5, scope: !1296)
!1326 = !DILocation(line: 68, column: 10, scope: !1296)
!1327 = !DILocation(line: 69, column: 5, scope: !1296)
!1328 = !DILocation(line: 69, column: 10, scope: !1296)
!1329 = !DILocation(line: 70, column: 5, scope: !1296)
!1330 = !DILocation(line: 70, column: 15, scope: !1296)
!1331 = !DILocation(line: 71, column: 5, scope: !1296)
!1332 = !DILocation(line: 71, column: 15, scope: !1296)
!1333 = !DILocation(line: 73, column: 5, scope: !1296)
!1334 = !DILocation(line: 73, column: 16, scope: !1296)
!1335 = !DILocation(line: 73, column: 21, scope: !1296)
!1336 = !DILocation(line: 75, column: 5, scope: !1296)
!1337 = !DILocation(line: 75, column: 11, scope: !1296)
!1338 = !DILocation(line: 75, column: 24, scope: !1296)
!1339 = !DILocation(line: 75, column: 26, scope: !1296)
!1340 = !{!1341, !1341, i64 0}
!1341 = !{!"any pointer", !1342, i64 0}
!1342 = !{!"omnipotent char", !1343, i64 0}
!1343 = !{!"Simple C++ TBAA"}
!1344 = !DILocation(line: 77, column: 5, scope: !1296)
!1345 = !DILocation(line: 77, column: 15, scope: !1296)
!1346 = !DILocation(line: 79, column: 11, scope: !1296)
!1347 = !DILocation(line: 80, column: 12, scope: !1296)
!1348 = !DILocation(line: 82, column: 7, scope: !1296)
!1349 = !DILocation(line: 83, column: 1, scope: !1296)
!1350 = distinct !DISubprogram(name: "SystemClock_Config", linkageName: "_ZL18SystemClock_Configv", scope: !3, file: !3, line: 85, type: !4, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !6, retainedNodes: !1351)
!1351 = !{!1352, !1372}
!1352 = !DILocalVariable(name: "RCC_OscInitStruct", scope: !1350, file: !3, line: 87, type: !1353)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !1354, line: 261, baseType: !1355)
!1354 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "49bf7e29630a7d603739687645591a41")
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1354, line: 228, size: 320, flags: DIFlagTypePassByValue, elements: !1356, identifier: "_ZTS18RCC_OscInitTypeDef")
!1356 = !{!1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !1355, file: !1354, line: 230, baseType: !24, size: 32)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !1355, file: !1354, line: 238, baseType: !24, size: 32, offset: 32)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "HSEPredivValue", scope: !1355, file: !1354, line: 241, baseType: !24, size: 32, offset: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !1355, file: !1354, line: 244, baseType: !24, size: 32, offset: 96)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !1355, file: !1354, line: 247, baseType: !24, size: 32, offset: 128)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !1355, file: !1354, line: 250, baseType: !24, size: 32, offset: 160)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !1355, file: !1354, line: 253, baseType: !24, size: 32, offset: 192)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !1355, file: !1354, line: 256, baseType: !1365, size: 96, offset: 224)
!1365 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !1366, line: 59, baseType: !1367)
!1366 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "3e0cb02f236e8f5a4c479e8d7b418957")
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1366, line: 49, size: 96, flags: DIFlagTypePassByValue, elements: !1368, identifier: "_ZTS18RCC_PLLInitTypeDef")
!1368 = !{!1369, !1370, !1371}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !1367, file: !1366, line: 51, baseType: !24, size: 32)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !1367, file: !1366, line: 54, baseType: !24, size: 32, offset: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !1367, file: !1366, line: 57, baseType: !24, size: 32, offset: 64)
!1372 = !DILocalVariable(name: "RCC_ClkInitStruct", scope: !1350, file: !3, line: 88, type: !1373)
!1373 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !1366, line: 80, baseType: !1374)
!1374 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1366, line: 64, size: 160, flags: DIFlagTypePassByValue, elements: !1375, identifier: "_ZTS18RCC_ClkInitTypeDef")
!1375 = !{!1376, !1377, !1378, !1379, !1380}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !1374, file: !1366, line: 66, baseType: !24, size: 32)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !1374, file: !1366, line: 69, baseType: !24, size: 32, offset: 32)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !1374, file: !1366, line: 72, baseType: !24, size: 32, offset: 64)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !1374, file: !1366, line: 75, baseType: !24, size: 32, offset: 96)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !1374, file: !1366, line: 78, baseType: !24, size: 32, offset: 128)
!1381 = !DILocation(line: 87, column: 5, scope: !1350)
!1382 = !DILocation(line: 87, column: 24, scope: !1350)
!1383 = !DILocation(line: 88, column: 5, scope: !1350)
!1384 = !DILocation(line: 88, column: 24, scope: !1350)
!1385 = !DILocation(line: 92, column: 23, scope: !1350)
!1386 = !DILocation(line: 92, column: 38, scope: !1350)
!1387 = !{!1388, !1389, i64 0}
!1388 = !{!"_ZTS18RCC_OscInitTypeDef", !1389, i64 0, !1389, i64 4, !1389, i64 8, !1389, i64 12, !1389, i64 16, !1389, i64 20, !1389, i64 24, !1390, i64 28}
!1389 = !{!"int", !1342, i64 0}
!1390 = !{!"_ZTS18RCC_PLLInitTypeDef", !1389, i64 0, !1389, i64 4, !1389, i64 8}
!1391 = !DILocation(line: 93, column: 23, scope: !1350)
!1392 = !DILocation(line: 93, column: 32, scope: !1350)
!1393 = !{!1388, !1389, i64 16}
!1394 = !DILocation(line: 94, column: 23, scope: !1350)
!1395 = !DILocation(line: 94, column: 43, scope: !1350)
!1396 = !{!1388, !1389, i64 20}
!1397 = !DILocation(line: 95, column: 27, scope: !1350)
!1398 = !DILocation(line: 95, column: 36, scope: !1350)
!1399 = !{!1388, !1389, i64 28}
!1400 = !DILocation(line: 96, column: 27, scope: !1350)
!1401 = !DILocation(line: 96, column: 37, scope: !1350)
!1402 = !{!1388, !1389, i64 32}
!1403 = !DILocation(line: 97, column: 27, scope: !1350)
!1404 = !DILocation(line: 97, column: 34, scope: !1350)
!1405 = !{!1388, !1389, i64 36}
!1406 = !DILocation(line: 98, column: 5, scope: !1350)
!1407 = !DILocation(line: 102, column: 23, scope: !1350)
!1408 = !DILocation(line: 103, column: 9, scope: !1350)
!1409 = !{!1410, !1389, i64 0}
!1410 = !{!"_ZTS18RCC_ClkInitTypeDef", !1389, i64 0, !1389, i64 4, !1389, i64 8, !1389, i64 12, !1389, i64 16}
!1411 = !DILocation(line: 104, column: 23, scope: !1350)
!1412 = !DILocation(line: 104, column: 36, scope: !1350)
!1413 = !{!1410, !1389, i64 4}
!1414 = !DILocation(line: 105, column: 23, scope: !1350)
!1415 = !DILocation(line: 105, column: 37, scope: !1350)
!1416 = !{!1410, !1389, i64 8}
!1417 = !DILocation(line: 106, column: 23, scope: !1350)
!1418 = !DILocation(line: 106, column: 38, scope: !1350)
!1419 = !{!1410, !1389, i64 12}
!1420 = !DILocation(line: 107, column: 23, scope: !1350)
!1421 = !DILocation(line: 107, column: 38, scope: !1350)
!1422 = !{!1410, !1389, i64 16}
!1423 = !DILocation(line: 109, column: 5, scope: !1350)
!1424 = !DILocation(line: 110, column: 1, scope: !1350)
!1425 = distinct !DISubprogram(name: "SerialTask", linkageName: "_ZN10SerialTaskC2ERN6Cicada15IBufferedSerialE", scope: !46, file: !3, line: 19, type: !192, scopeLine: 19, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !191, retainedNodes: !1426)
!1426 = !{!1427, !1428}
!1427 = !DILocalVariable(name: "this", arg: 1, scope: !1425, type: !218, flags: DIFlagArtificial | DIFlagObjectPointer)
!1428 = !DILocalVariable(name: "serial", arg: 2, scope: !1425, file: !3, line: 19, type: !94)
!1429 = !DILocation(line: 0, scope: !1425)
!1430 = !DILocation(line: 19, column: 68, scope: !1425)
!1431 = !DILocation(line: 19, column: 5, scope: !1425)
!1432 = !{!1433, !1433, i64 0}
!1433 = !{!"vtable pointer", !1343, i64 0}
!1434 = !DILocation(line: 19, column: 43, scope: !1425)
!1435 = !DILocation(line: 19, column: 61, scope: !1425)
!1436 = !{!1437, !1389, i64 24}
!1437 = !{!"_ZTS10SerialTask", !1341, i64 20, !1389, i64 24}
!1438 = !DILocation(line: 19, column: 69, scope: !1425)
!1439 = distinct !DISubprogram(name: "~Task", linkageName: "_ZN6Cicada4TaskD2Ev", scope: !49, file: !50, line: 198, type: !69, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !68, retainedNodes: !1440)
!1440 = !{!1441}
!1441 = !DILocalVariable(name: "this", arg: 1, scope: !1439, type: !1023, flags: DIFlagArtificial | DIFlagObjectPointer)
!1442 = !DILocation(line: 0, scope: !1439)
!1443 = !DILocation(line: 198, column: 22, scope: !1439)
!1444 = distinct !DISubprogram(name: "Task", linkageName: "_ZN6Cicada4TaskC2Et", scope: !49, file: !50, line: 196, type: !65, scopeLine: 196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !64, retainedNodes: !1445)
!1445 = !{!1446, !1447}
!1446 = !DILocalVariable(name: "this", arg: 1, scope: !1444, type: !1023, flags: DIFlagArtificial | DIFlagObjectPointer)
!1447 = !DILocalVariable(name: "initialDelay", arg: 2, scope: !1444, file: !50, line: 196, type: !37)
!1448 = !DILocation(line: 0, scope: !1444)
!1449 = !DILocation(line: 196, column: 73, scope: !1444)
!1450 = !DILocation(line: 196, column: 39, scope: !1444)
!1451 = !{!1452, !1453, i64 4}
!1452 = !{!"_ZTSN6Cicada4TaskE", !1453, i64 4, !1389, i64 8, !1454, i64 12, !1389, i64 16}
!1453 = !{!"short", !1342, i64 0}
!1454 = !{!"bool", !1342, i64 0}
!1455 = !DILocation(line: 285, column: 10, scope: !1444)
!1456 = !{!1452, !1454, i64 12}
!1457 = !DILocation(line: 196, column: 61, scope: !1444)
!1458 = !{!1452, !1389, i64 16}
!1459 = !DILocation(line: 196, column: 74, scope: !1444)
!1460 = distinct !DISubprogram(name: "~SerialTask", linkageName: "_ZN10SerialTaskD0Ev", scope: !46, file: !3, line: 16, type: !196, scopeLine: 16, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !1461, retainedNodes: !1462)
!1461 = !DISubprogram(name: "~SerialTask", scope: !46, type: !196, containingType: !46, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1462 = !{!1463}
!1463 = !DILocalVariable(name: "this", arg: 1, scope: !1460, type: !218, flags: DIFlagArtificial | DIFlagObjectPointer)
!1464 = !DILocation(line: 0, scope: !1460)
!1465 = !DILocation(line: 16, column: 7, scope: !1460)
!1466 = !DILocation(line: 0, scope: !215)
!1467 = !DILocation(line: 23, column: 9, scope: !215)
!1468 = !{!1342, !1342, i64 0}
!1469 = !DILocation(line: 25, column: 14, scope: !223)
!1470 = !DILocation(line: 25, column: 18, scope: !223)
!1471 = !DILocation(line: 25, column: 23, scope: !222)
!1472 = !DILocation(line: 25, column: 27, scope: !222)
!1473 = !DILocation(line: 25, column: 9, scope: !223)
!1474 = !DILocation(line: 0, scope: !220)
!1475 = !DILocation(line: 28, column: 17, scope: !220)
!1476 = !DILocation(line: 29, column: 36, scope: !220)
!1477 = !{!1437, !1341, i64 20}
!1478 = !DILocation(line: 29, column: 45, scope: !220)
!1479 = !DILocation(line: 31, column: 17, scope: !220)
!1480 = !DILocation(line: 34, column: 13, scope: !221)
!1481 = !DILocation(line: 34, column: 13, scope: !1482)
!1482 = distinct !DILexicalBlock(scope: !221, file: !3, line: 34, column: 13)
!1483 = !DILocation(line: 37, column: 17, scope: !227)
!1484 = !DILocation(line: 37, column: 22, scope: !227)
!1485 = !DILocation(line: 39, column: 33, scope: !227)
!1486 = !DILocation(line: 39, column: 42, scope: !227)
!1487 = !DILocation(line: 0, scope: !227)
!1488 = !DILocation(line: 40, column: 17, scope: !227)
!1489 = !DILocation(line: 42, column: 17, scope: !227)
!1490 = !DILocation(line: 42, column: 36, scope: !227)
!1491 = !DILocation(line: 43, column: 17, scope: !227)
!1492 = !DILocation(line: 44, column: 13, scope: !221)
!1493 = !DILocation(line: 46, column: 13, scope: !221)
!1494 = !DILocation(line: 25, column: 34, scope: !222)
!1495 = !DILocation(line: 25, column: 37, scope: !222)
!1496 = !DILocation(line: 25, column: 9, scope: !222)
!1497 = distinct !{!1497, !1473, !1498, !1499, !1500}
!1498 = !DILocation(line: 47, column: 9, scope: !223)
!1499 = !{!"llvm.loop.mustprogress"}
!1500 = !{!"llvm.loop.unroll.disable"}
!1501 = !DILocation(line: 49, column: 9, scope: !224)
!1502 = !DILocation(line: 49, column: 18, scope: !224)
!1503 = !DILocation(line: 51, column: 9, scope: !224)
!1504 = !DILocation(line: 0, scope: !224)
!1505 = !DILocation(line: 52, column: 5, scope: !215)
!1506 = distinct !DISubprogram(name: "setDelay", linkageName: "_ZN6Cicada4Task8setDelayEt", scope: !49, file: !50, line: 212, type: !65, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !76, retainedNodes: !1507)
!1507 = !{!1508, !1509}
!1508 = !DILocalVariable(name: "this", arg: 1, scope: !1506, type: !1023, flags: DIFlagArtificial | DIFlagObjectPointer)
!1509 = !DILocalVariable(name: "delay", arg: 2, scope: !1506, file: !50, line: 212, type: !37)
!1510 = !DILocation(line: 0, scope: !1506)
!1511 = !DILocation(line: 214, column: 9, scope: !1506)
!1512 = !DILocation(line: 214, column: 16, scope: !1506)
!1513 = !DILocation(line: 215, column: 5, scope: !1506)
!1514 = distinct !DISubprogram(name: "~Task", linkageName: "_ZN6Cicada4TaskD0Ev", scope: !49, file: !50, line: 198, type: !69, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !68, retainedNodes: !1515)
!1515 = !{!1516}
!1516 = !DILocalVariable(name: "this", arg: 1, scope: !1514, type: !1023, flags: DIFlagArtificial | DIFlagObjectPointer)
!1517 = !DILocation(line: 0, scope: !1514)
!1518 = !DILocation(line: 198, column: 21, scope: !1514)
!1519 = distinct !DISubprogram(name: "SysTick_Handler", scope: !3, file: !3, line: 114, type: !4, scopeLine: 115, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, retainedNodes: !202)
!1520 = !DILocation(line: 116, column: 5, scope: !1519)
!1521 = !DILocation(line: 117, column: 1, scope: !1519)
!1522 = !DILocation(line: 121, column: 5, scope: !2)
!1523 = !{!"branch_weights", i32 1, i32 1048575}
!1524 = !DILocation(line: 121, column: 34, scope: !2)
!1525 = !DILocation(line: 122, column: 5, scope: !2)
!1526 = !DILocation(line: 122, column: 15, scope: !2)
!1527 = !DILocation(line: 123, column: 1, scope: !2)
!1528 = !DILocation(line: 127, column: 5, scope: !201)
!1529 = !DILocation(line: 127, column: 34, scope: !201)
!1530 = !DILocation(line: 128, column: 5, scope: !201)
!1531 = !DILocation(line: 128, column: 15, scope: !201)
!1532 = !DILocation(line: 129, column: 1, scope: !201)
!1533 = !DILocation(line: 0, scope: !208)
!1534 = !DILocation(line: 134, column: 10, scope: !1535)
!1535 = distinct !DILexicalBlock(scope: !208, file: !3, line: 134, column: 9)
!1536 = !DILocation(line: 134, column: 9, scope: !208)
!1537 = !DILocation(line: 135, column: 18, scope: !1538)
!1538 = distinct !DILexicalBlock(scope: !1535, file: !3, line: 134, column: 18)
!1539 = !DILocation(line: 135, column: 16, scope: !1538)
!1540 = !DILocation(line: 136, column: 5, scope: !1538)
!1541 = !DILocation(line: 137, column: 5, scope: !208)
!1542 = !DILocation(line: 137, column: 13, scope: !208)
!1543 = !DILocation(line: 138, column: 1, scope: !208)
!1544 = distinct !DISubprogram(name: "printf_", scope: !393, file: !393, line: 720, type: !1545, scopeLine: 721, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !1547)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{!58, !147, null}
!1547 = !{!1548, !1549, !1557, !1561}
!1548 = !DILocalVariable(name: "format", arg: 1, scope: !1544, file: !393, line: 720, type: !147)
!1549 = !DILocalVariable(name: "va", scope: !1544, file: !393, line: 722, type: !1550)
!1550 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1551, line: 14, baseType: !1552)
!1551 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "", checksumkind: CSK_MD5, checksum: "4de3cbd931b589d291e5c39387aecf82")
!1552 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1553, baseType: !1554)
!1553 = !DIFile(filename: "../dep/printf/src/printf.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build")
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !1555)
!1555 = !{!1556}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !1554, file: !1553, line: 722, baseType: !312, size: 32)
!1557 = !DILocalVariable(name: "buffer", scope: !1544, file: !393, line: 724, type: !1558)
!1558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !149, size: 8, elements: !1559)
!1559 = !{!1560}
!1560 = !DISubrange(count: 1)
!1561 = !DILocalVariable(name: "ret", scope: !1544, file: !393, line: 725, type: !1562)
!1562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !58)
!1563 = !DILocation(line: 0, scope: !1544)
!1564 = !DILocation(line: 722, column: 3, scope: !1544)
!1565 = !DILocation(line: 722, column: 11, scope: !1544)
!1566 = !DILocation(line: 723, column: 3, scope: !1544)
!1567 = !DILocation(line: 724, column: 3, scope: !1544)
!1568 = !DILocation(line: 724, column: 8, scope: !1544)
!1569 = !DILocation(line: 725, column: 19, scope: !1544)
!1570 = !DILocation(line: 726, column: 3, scope: !1544)
!1571 = !DILocation(line: 728, column: 1, scope: !1544)
!1572 = !DILocation(line: 727, column: 3, scope: !1544)
!1573 = distinct !DISubprogram(name: "_out_char", scope: !393, file: !393, line: 124, type: !400, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !1574)
!1574 = !{!1575, !1576, !1577, !1578}
!1575 = !DILocalVariable(name: "character", arg: 1, scope: !1573, file: !393, line: 124, type: !149)
!1576 = !DILocalVariable(name: "buffer", arg: 2, scope: !1573, file: !393, line: 124, type: !312)
!1577 = !DILocalVariable(name: "idx", arg: 3, scope: !1573, file: !393, line: 124, type: !396)
!1578 = !DILocalVariable(name: "maxlen", arg: 4, scope: !1573, file: !393, line: 124, type: !396)
!1579 = !DILocation(line: 0, scope: !1573)
!1580 = !DILocation(line: 127, column: 7, scope: !1581)
!1581 = distinct !DILexicalBlock(scope: !1573, file: !393, line: 127, column: 7)
!1582 = !DILocation(line: 127, column: 7, scope: !1573)
!1583 = !DILocation(line: 128, column: 5, scope: !1584)
!1584 = distinct !DILexicalBlock(scope: !1581, file: !393, line: 127, column: 18)
!1585 = !DILocation(line: 129, column: 3, scope: !1584)
!1586 = !DILocation(line: 130, column: 1, scope: !1573)
!1587 = distinct !DISubprogram(name: "_vsnprintf", scope: !393, file: !393, line: 447, type: !1588, scopeLine: 448, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !1590)
!1588 = !DISubroutineType(types: !1589)
!1589 = !{!58, !398, !338, !426, !147, !1550}
!1590 = !{!1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1606, !1612, !1615, !1621, !1626, !1628, !1634, !1636, !1638, !1639}
!1591 = !DILocalVariable(name: "out", arg: 1, scope: !1587, file: !393, line: 447, type: !398)
!1592 = !DILocalVariable(name: "buffer", arg: 2, scope: !1587, file: !393, line: 447, type: !338)
!1593 = !DILocalVariable(name: "maxlen", arg: 3, scope: !1587, file: !393, line: 447, type: !426)
!1594 = !DILocalVariable(name: "format", arg: 4, scope: !1587, file: !393, line: 447, type: !147)
!1595 = !DILocalVariable(name: "va", arg: 5, scope: !1587, file: !393, line: 447, type: !1550)
!1596 = !DILocalVariable(name: "flags", scope: !1587, file: !393, line: 449, type: !10)
!1597 = !DILocalVariable(name: "width", scope: !1587, file: !393, line: 449, type: !10)
!1598 = !DILocalVariable(name: "precision", scope: !1587, file: !393, line: 449, type: !10)
!1599 = !DILocalVariable(name: "n", scope: !1587, file: !393, line: 449, type: !10)
!1600 = !DILocalVariable(name: "idx", scope: !1587, file: !393, line: 450, type: !396)
!1601 = !DILocalVariable(name: "w", scope: !1602, file: !393, line: 490, type: !1562)
!1602 = distinct !DILexicalBlock(scope: !1603, file: !393, line: 489, column: 30)
!1603 = distinct !DILexicalBlock(scope: !1604, file: !393, line: 489, column: 14)
!1604 = distinct !DILexicalBlock(scope: !1605, file: !393, line: 486, column: 9)
!1605 = distinct !DILexicalBlock(scope: !1587, file: !393, line: 458, column: 3)
!1606 = !DILocalVariable(name: "prec", scope: !1607, file: !393, line: 510, type: !1562)
!1607 = distinct !DILexicalBlock(scope: !1608, file: !393, line: 509, column: 32)
!1608 = distinct !DILexicalBlock(scope: !1609, file: !393, line: 509, column: 16)
!1609 = distinct !DILexicalBlock(scope: !1610, file: !393, line: 506, column: 11)
!1610 = distinct !DILexicalBlock(scope: !1611, file: !393, line: 503, column: 25)
!1611 = distinct !DILexicalBlock(scope: !1605, file: !393, line: 503, column: 9)
!1612 = !DILocalVariable(name: "base", scope: !1613, file: !393, line: 562, type: !10)
!1613 = distinct !DILexicalBlock(scope: !1614, file: !393, line: 560, column: 18)
!1614 = distinct !DILexicalBlock(scope: !1605, file: !393, line: 553, column: 22)
!1615 = !DILocalVariable(name: "value", scope: !1616, file: !393, line: 596, type: !1620)
!1616 = distinct !DILexicalBlock(scope: !1617, file: !393, line: 594, column: 40)
!1617 = distinct !DILexicalBlock(scope: !1618, file: !393, line: 594, column: 15)
!1618 = distinct !DILexicalBlock(scope: !1619, file: !393, line: 592, column: 51)
!1619 = distinct !DILexicalBlock(scope: !1613, file: !393, line: 592, column: 13)
!1620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !249)
!1621 = !DILocalVariable(name: "value", scope: !1622, file: !393, line: 601, type: !1624)
!1622 = distinct !DILexicalBlock(scope: !1623, file: !393, line: 600, column: 40)
!1623 = distinct !DILexicalBlock(scope: !1617, file: !393, line: 600, column: 20)
!1624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1625)
!1625 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!1626 = !DILocalVariable(name: "value", scope: !1627, file: !393, line: 605, type: !1562)
!1627 = distinct !DILexicalBlock(scope: !1623, file: !393, line: 604, column: 16)
!1628 = !DILocalVariable(name: "value", scope: !1629, file: !393, line: 620, type: !1633)
!1629 = distinct !DILexicalBlock(scope: !1630, file: !393, line: 619, column: 16)
!1630 = distinct !DILexicalBlock(scope: !1631, file: !393, line: 616, column: 20)
!1631 = distinct !DILexicalBlock(scope: !1632, file: !393, line: 611, column: 15)
!1632 = distinct !DILexicalBlock(scope: !1619, file: !393, line: 609, column: 14)
!1633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10)
!1634 = !DILocalVariable(name: "l", scope: !1635, file: !393, line: 635, type: !10)
!1635 = distinct !DILexicalBlock(scope: !1614, file: !393, line: 634, column: 18)
!1636 = !DILocalVariable(name: "p", scope: !1637, file: !393, line: 655, type: !147)
!1637 = distinct !DILexicalBlock(scope: !1614, file: !393, line: 654, column: 18)
!1638 = !DILocalVariable(name: "l", scope: !1637, file: !393, line: 656, type: !10)
!1639 = !DILocalVariable(name: "is_ll", scope: !1640, file: !393, line: 684, type: !1641)
!1640 = distinct !DILexicalBlock(scope: !1614, file: !393, line: 680, column: 18)
!1641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !433)
!1642 = !DILocation(line: 0, scope: !1587)
!1643 = !{!1644, !1644, i64 0}
!1644 = !{!"any pointer", !1645, i64 0}
!1645 = !{!"omnipotent char", !1646, i64 0}
!1646 = !{!"Simple C/C++ TBAA"}
!1647 = !DILocation(line: 452, column: 8, scope: !1648)
!1648 = distinct !DILexicalBlock(scope: !1587, file: !393, line: 452, column: 7)
!1649 = !DILocation(line: 452, column: 7, scope: !1587)
!1650 = !DILocation(line: 457, column: 3, scope: !1587)
!1651 = !DILocation(line: 457, column: 11, scope: !1587)
!1652 = !DILocation(line: 457, column: 10, scope: !1587)
!1653 = !{!1645, !1645, i64 0}
!1654 = !DILocation(line: 462, column: 31, scope: !1655)
!1655 = distinct !DILexicalBlock(scope: !1656, file: !393, line: 460, column: 25)
!1656 = distinct !DILexicalBlock(scope: !1605, file: !393, line: 460, column: 9)
!1657 = !DILocation(line: 462, column: 7, scope: !1655)
!1658 = !{void (i8, i8*, i32, i32)* @_out_buffer, void (i8, i8*, i32, i32)* @_out_char, void (i8, i8*, i32, i32)* @_out_fct, void (i8, i8*, i32, i32)* @_out_null}
!1659 = !DILocation(line: 463, column: 13, scope: !1655)
!1660 = !DILocation(line: 464, column: 7, scope: !1655)
!1661 = distinct !{!1661, !1650, !1662, !1499, !1500}
!1662 = !DILocation(line: 708, column: 3, scope: !1587)
!1663 = !DILocation(line: 468, column: 13, scope: !1664)
!1664 = distinct !DILexicalBlock(scope: !1656, file: !393, line: 466, column: 10)
!1665 = !DILocation(line: 473, column: 5, scope: !1605)
!1666 = !DILocation(line: 472, column: 11, scope: !1605)
!1667 = !DILocation(line: 474, column: 16, scope: !1668)
!1668 = distinct !DILexicalBlock(scope: !1605, file: !393, line: 473, column: 8)
!1669 = !DILocation(line: 474, column: 15, scope: !1668)
!1670 = !DILocation(line: 474, column: 7, scope: !1668)
!1671 = !DILocation(line: 475, column: 25, scope: !1672)
!1672 = distinct !DILexicalBlock(scope: !1668, file: !393, line: 474, column: 24)
!1673 = !DILocation(line: 475, column: 49, scope: !1672)
!1674 = !DILocation(line: 475, column: 61, scope: !1672)
!1675 = !DILocation(line: 476, column: 25, scope: !1672)
!1676 = !DILocation(line: 476, column: 49, scope: !1672)
!1677 = !DILocation(line: 476, column: 61, scope: !1672)
!1678 = !DILocation(line: 477, column: 25, scope: !1672)
!1679 = !DILocation(line: 477, column: 49, scope: !1672)
!1680 = !DILocation(line: 477, column: 61, scope: !1672)
!1681 = !DILocation(line: 478, column: 25, scope: !1672)
!1682 = !DILocation(line: 478, column: 49, scope: !1672)
!1683 = !DILocation(line: 478, column: 61, scope: !1672)
!1684 = !DILocation(line: 479, column: 25, scope: !1672)
!1685 = !DILocation(line: 479, column: 49, scope: !1672)
!1686 = !DILocation(line: 479, column: 61, scope: !1672)
!1687 = !DILocation(line: 0, scope: !1672)
!1688 = !DILocation(line: 0, scope: !1605)
!1689 = !DILocation(line: 482, column: 5, scope: !1668)
!1690 = distinct !{!1690, !1665, !1691, !1499, !1500}
!1691 = !DILocation(line: 482, column: 15, scope: !1605)
!1692 = !DILocation(line: 486, column: 20, scope: !1604)
!1693 = !DILocation(line: 486, column: 19, scope: !1604)
!1694 = !DILocation(line: 486, column: 9, scope: !1604)
!1695 = !DILocation(line: 486, column: 9, scope: !1605)
!1696 = !DILocation(line: 487, column: 15, scope: !1697)
!1697 = distinct !DILexicalBlock(scope: !1604, file: !393, line: 486, column: 29)
!1698 = !DILocation(line: 488, column: 5, scope: !1697)
!1699 = !DILocation(line: 489, column: 22, scope: !1603)
!1700 = !DILocation(line: 489, column: 14, scope: !1604)
!1701 = !DILocation(line: 490, column: 21, scope: !1602)
!1702 = !DILocation(line: 0, scope: !1602)
!1703 = !DILocation(line: 491, column: 13, scope: !1704)
!1704 = distinct !DILexicalBlock(scope: !1602, file: !393, line: 491, column: 11)
!1705 = !DILocation(line: 491, column: 11, scope: !1602)
!1706 = !DILocation(line: 498, column: 13, scope: !1602)
!1707 = !DILocation(line: 499, column: 5, scope: !1602)
!1708 = !DILocation(line: 503, column: 10, scope: !1611)
!1709 = !DILocation(line: 503, column: 9, scope: !1611)
!1710 = !DILocation(line: 503, column: 17, scope: !1611)
!1711 = !DILocation(line: 503, column: 9, scope: !1605)
!1712 = !DILocation(line: 504, column: 13, scope: !1610)
!1713 = !DILocation(line: 505, column: 13, scope: !1610)
!1714 = !DILocation(line: 506, column: 21, scope: !1609)
!1715 = !DILocation(line: 506, column: 11, scope: !1609)
!1716 = !DILocation(line: 506, column: 11, scope: !1610)
!1717 = !DILocation(line: 507, column: 21, scope: !1718)
!1718 = distinct !DILexicalBlock(scope: !1609, file: !393, line: 506, column: 31)
!1719 = !DILocation(line: 508, column: 7, scope: !1718)
!1720 = !DILocation(line: 509, column: 24, scope: !1608)
!1721 = !DILocation(line: 509, column: 16, scope: !1609)
!1722 = !DILocation(line: 510, column: 31, scope: !1607)
!1723 = !DILocation(line: 0, scope: !1607)
!1724 = !DILocation(line: 511, column: 26, scope: !1607)
!1725 = !DILocation(line: 511, column: 21, scope: !1607)
!1726 = !DILocation(line: 512, column: 15, scope: !1607)
!1727 = !DILocation(line: 513, column: 7, scope: !1607)
!1728 = !DILocation(line: 517, column: 14, scope: !1605)
!1729 = !DILocation(line: 517, column: 13, scope: !1605)
!1730 = !DILocation(line: 517, column: 5, scope: !1605)
!1731 = !DILocation(line: 519, column: 15, scope: !1732)
!1732 = distinct !DILexicalBlock(scope: !1605, file: !393, line: 517, column: 22)
!1733 = !DILocation(line: 520, column: 15, scope: !1732)
!1734 = !DILocation(line: 521, column: 13, scope: !1735)
!1735 = distinct !DILexicalBlock(scope: !1732, file: !393, line: 521, column: 13)
!1736 = !DILocation(line: 521, column: 21, scope: !1735)
!1737 = !DILocation(line: 521, column: 13, scope: !1732)
!1738 = !DILocation(line: 522, column: 17, scope: !1739)
!1739 = distinct !DILexicalBlock(scope: !1735, file: !393, line: 521, column: 29)
!1740 = !DILocation(line: 523, column: 17, scope: !1739)
!1741 = !DILocation(line: 524, column: 9, scope: !1739)
!1742 = !DILocation(line: 527, column: 15, scope: !1732)
!1743 = !DILocation(line: 528, column: 15, scope: !1732)
!1744 = !DILocation(line: 529, column: 13, scope: !1745)
!1745 = distinct !DILexicalBlock(scope: !1732, file: !393, line: 529, column: 13)
!1746 = !DILocation(line: 529, column: 21, scope: !1745)
!1747 = !DILocation(line: 529, column: 13, scope: !1732)
!1748 = !DILocation(line: 530, column: 17, scope: !1749)
!1749 = distinct !DILexicalBlock(scope: !1745, file: !393, line: 529, column: 29)
!1750 = !DILocation(line: 531, column: 17, scope: !1749)
!1751 = !DILocation(line: 532, column: 9, scope: !1749)
!1752 = !DILocation(line: 536, column: 15, scope: !1732)
!1753 = !DILocation(line: 537, column: 15, scope: !1732)
!1754 = !DILocation(line: 538, column: 9, scope: !1732)
!1755 = !DILocation(line: 541, column: 15, scope: !1732)
!1756 = !DILocation(line: 542, column: 15, scope: !1732)
!1757 = !DILocation(line: 543, column: 9, scope: !1732)
!1758 = !DILocation(line: 545, column: 15, scope: !1732)
!1759 = !DILocation(line: 546, column: 15, scope: !1732)
!1760 = !DILocation(line: 547, column: 9, scope: !1732)
!1761 = !DILocation(line: 553, column: 14, scope: !1605)
!1762 = !DILocation(line: 553, column: 13, scope: !1605)
!1763 = !DILocation(line: 553, column: 5, scope: !1605)
!1764 = !DILocation(line: 0, scope: !1613)
!1765 = !DILocation(line: 568, column: 9, scope: !1766)
!1766 = distinct !DILexicalBlock(scope: !1767, file: !393, line: 566, column: 34)
!1767 = distinct !DILexicalBlock(scope: !1768, file: !393, line: 566, column: 18)
!1768 = distinct !DILexicalBlock(scope: !1613, file: !393, line: 563, column: 13)
!1769 = !DILocation(line: 571, column: 9, scope: !1770)
!1770 = distinct !DILexicalBlock(scope: !1771, file: !393, line: 569, column: 34)
!1771 = distinct !DILexicalBlock(scope: !1767, file: !393, line: 569, column: 18)
!1772 = !DILocation(line: 574, column: 17, scope: !1773)
!1773 = distinct !DILexicalBlock(scope: !1771, file: !393, line: 572, column: 14)
!1774 = !DILocation(line: 0, scope: !1768)
!1775 = !DILocation(line: 577, column: 21, scope: !1776)
!1776 = distinct !DILexicalBlock(scope: !1613, file: !393, line: 577, column: 13)
!1777 = !DILocation(line: 577, column: 13, scope: !1613)
!1778 = !DILocation(line: 582, column: 30, scope: !1779)
!1779 = distinct !DILexicalBlock(scope: !1613, file: !393, line: 582, column: 13)
!1780 = !DILocation(line: 583, column: 17, scope: !1781)
!1781 = distinct !DILexicalBlock(scope: !1779, file: !393, line: 582, column: 51)
!1782 = !DILocation(line: 584, column: 9, scope: !1781)
!1783 = !DILocation(line: 587, column: 19, scope: !1784)
!1784 = distinct !DILexicalBlock(scope: !1613, file: !393, line: 587, column: 13)
!1785 = !DILocation(line: 587, column: 13, scope: !1613)
!1786 = !DILocation(line: 592, column: 30, scope: !1619)
!1787 = !DILocation(line: 594, column: 21, scope: !1617)
!1788 = !DILocation(line: 594, column: 15, scope: !1618)
!1789 = !DILocation(line: 596, column: 37, scope: !1616)
!1790 = !DILocation(line: 0, scope: !1616)
!1791 = !DILocation(line: 597, column: 82, scope: !1616)
!1792 = !DILocation(line: 597, column: 120, scope: !1616)
!1793 = !DILocation(line: 597, column: 125, scope: !1616)
!1794 = !DILocation(line: 597, column: 19, scope: !1616)
!1795 = !DILocation(line: 599, column: 11, scope: !1616)
!1796 = !DILocation(line: 600, column: 26, scope: !1623)
!1797 = !DILocation(line: 600, column: 20, scope: !1617)
!1798 = !DILocation(line: 601, column: 32, scope: !1622)
!1799 = !DILocation(line: 0, scope: !1622)
!1800 = !DILocation(line: 602, column: 72, scope: !1622)
!1801 = !DILocation(line: 602, column: 110, scope: !1622)
!1802 = !DILocation(line: 602, column: 19, scope: !1622)
!1803 = !DILocation(line: 603, column: 11, scope: !1622)
!1804 = !DILocation(line: 605, column: 38, scope: !1627)
!1805 = !DILocation(line: 605, column: 31, scope: !1627)
!1806 = !DILocation(line: 605, column: 60, scope: !1627)
!1807 = !DILocation(line: 605, column: 54, scope: !1627)
!1808 = !DILocation(line: 605, column: 85, scope: !1627)
!1809 = !DILocation(line: 0, scope: !1627)
!1810 = !DILocation(line: 605, column: 78, scope: !1627)
!1811 = !DILocation(line: 605, column: 102, scope: !1627)
!1812 = !DILocation(line: 606, column: 71, scope: !1627)
!1813 = !DILocation(line: 606, column: 109, scope: !1627)
!1814 = !DILocation(line: 606, column: 19, scope: !1627)
!1815 = !DILocation(line: 611, column: 21, scope: !1631)
!1816 = !DILocation(line: 611, column: 15, scope: !1632)
!1817 = !DILocation(line: 613, column: 61, scope: !1818)
!1818 = distinct !DILexicalBlock(scope: !1631, file: !393, line: 611, column: 40)
!1819 = !DILocation(line: 613, column: 100, scope: !1818)
!1820 = !DILocation(line: 613, column: 19, scope: !1818)
!1821 = !DILocation(line: 615, column: 11, scope: !1818)
!1822 = !DILocation(line: 616, column: 26, scope: !1630)
!1823 = !DILocation(line: 616, column: 20, scope: !1631)
!1824 = !DILocation(line: 617, column: 56, scope: !1825)
!1825 = distinct !DILexicalBlock(scope: !1630, file: !393, line: 616, column: 40)
!1826 = !DILocation(line: 617, column: 19, scope: !1825)
!1827 = !DILocation(line: 618, column: 11, scope: !1825)
!1828 = !DILocation(line: 620, column: 47, scope: !1629)
!1829 = !DILocation(line: 620, column: 40, scope: !1629)
!1830 = !DILocation(line: 620, column: 78, scope: !1629)
!1831 = !DILocation(line: 620, column: 63, scope: !1629)
!1832 = !DILocation(line: 620, column: 112, scope: !1629)
!1833 = !DILocation(line: 0, scope: !1629)
!1834 = !DILocation(line: 620, column: 105, scope: !1629)
!1835 = !DILocation(line: 621, column: 19, scope: !1629)
!1836 = !DILocation(line: 0, scope: !1619)
!1837 = !DILocation(line: 624, column: 15, scope: !1613)
!1838 = !DILocation(line: 630, column: 47, scope: !1614)
!1839 = !DILocation(line: 630, column: 15, scope: !1614)
!1840 = !DILocation(line: 631, column: 15, scope: !1614)
!1841 = !DILocation(line: 632, column: 9, scope: !1614)
!1842 = !DILocation(line: 0, scope: !1635)
!1843 = !DILocation(line: 637, column: 21, scope: !1844)
!1844 = distinct !DILexicalBlock(scope: !1635, file: !393, line: 637, column: 13)
!1845 = !DILocation(line: 637, column: 13, scope: !1635)
!1846 = !DILocation(line: 638, column: 22, scope: !1847)
!1847 = distinct !DILexicalBlock(scope: !1844, file: !393, line: 637, column: 36)
!1848 = !DILocation(line: 638, column: 11, scope: !1847)
!1849 = !DILocation(line: 639, column: 33, scope: !1850)
!1850 = distinct !DILexicalBlock(scope: !1847, file: !393, line: 638, column: 31)
!1851 = !DILocation(line: 639, column: 13, scope: !1850)
!1852 = !DILocation(line: 638, column: 19, scope: !1847)
!1853 = distinct !{!1853, !1848, !1854, !1499, !1500}
!1854 = !DILocation(line: 640, column: 11, scope: !1847)
!1855 = !DILocation(line: 450, column: 10, scope: !1587)
!1856 = !DILocation(line: 643, column: 19, scope: !1635)
!1857 = !DILocation(line: 643, column: 13, scope: !1635)
!1858 = !DILocation(line: 643, column: 47, scope: !1635)
!1859 = !DILocation(line: 643, column: 9, scope: !1635)
!1860 = !DILocation(line: 645, column: 13, scope: !1635)
!1861 = !DILocation(line: 646, column: 19, scope: !1862)
!1862 = distinct !DILexicalBlock(scope: !1863, file: !393, line: 645, column: 33)
!1863 = distinct !DILexicalBlock(scope: !1635, file: !393, line: 645, column: 13)
!1864 = !DILocation(line: 647, column: 33, scope: !1865)
!1865 = distinct !DILexicalBlock(scope: !1862, file: !393, line: 646, column: 31)
!1866 = !DILocation(line: 647, column: 13, scope: !1865)
!1867 = !DILocation(line: 646, column: 22, scope: !1862)
!1868 = !DILocation(line: 646, column: 11, scope: !1862)
!1869 = distinct !{!1869, !1868, !1870, !1499, !1500}
!1870 = !DILocation(line: 648, column: 11, scope: !1862)
!1871 = !DILocation(line: 650, column: 15, scope: !1635)
!1872 = !DILocation(line: 655, column: 25, scope: !1637)
!1873 = !DILocation(line: 0, scope: !1637)
!1874 = !DILocation(line: 656, column: 40, scope: !1637)
!1875 = !DILocation(line: 656, column: 26, scope: !1637)
!1876 = !DILocation(line: 658, column: 19, scope: !1877)
!1877 = distinct !DILexicalBlock(scope: !1637, file: !393, line: 658, column: 13)
!1878 = !DILocation(line: 658, column: 13, scope: !1637)
!1879 = !DILocation(line: 661, column: 21, scope: !1880)
!1880 = distinct !DILexicalBlock(scope: !1637, file: !393, line: 661, column: 13)
!1881 = !DILocation(line: 661, column: 13, scope: !1637)
!1882 = !DILocation(line: 662, column: 19, scope: !1883)
!1883 = distinct !DILexicalBlock(scope: !1880, file: !393, line: 661, column: 36)
!1884 = !DILocation(line: 662, column: 22, scope: !1883)
!1885 = !DILocation(line: 662, column: 11, scope: !1883)
!1886 = !DILocation(line: 663, column: 33, scope: !1887)
!1887 = distinct !DILexicalBlock(scope: !1883, file: !393, line: 662, column: 31)
!1888 = !DILocation(line: 663, column: 13, scope: !1887)
!1889 = distinct !{!1889, !1885, !1890, !1499, !1500}
!1890 = !DILocation(line: 664, column: 11, scope: !1883)
!1891 = !DILocation(line: 667, column: 17, scope: !1637)
!1892 = !DILocation(line: 667, column: 20, scope: !1637)
!1893 = !DILocation(line: 667, column: 26, scope: !1637)
!1894 = !DILocation(line: 667, column: 57, scope: !1637)
!1895 = !DILocation(line: 667, column: 69, scope: !1637)
!1896 = !DILocation(line: 667, column: 9, scope: !1637)
!1897 = !DILocation(line: 668, column: 18, scope: !1898)
!1898 = distinct !DILexicalBlock(scope: !1637, file: !393, line: 667, column: 74)
!1899 = !DILocation(line: 668, column: 34, scope: !1898)
!1900 = !DILocation(line: 668, column: 11, scope: !1898)
!1901 = distinct !{!1901, !1896, !1902, !1499, !1500}
!1902 = !DILocation(line: 669, column: 9, scope: !1637)
!1903 = !DILocation(line: 671, column: 13, scope: !1637)
!1904 = !DILocation(line: 672, column: 19, scope: !1905)
!1905 = distinct !DILexicalBlock(scope: !1906, file: !393, line: 671, column: 33)
!1906 = distinct !DILexicalBlock(scope: !1637, file: !393, line: 671, column: 13)
!1907 = !DILocation(line: 673, column: 33, scope: !1908)
!1908 = distinct !DILexicalBlock(scope: !1905, file: !393, line: 672, column: 31)
!1909 = !DILocation(line: 673, column: 13, scope: !1908)
!1910 = !DILocation(line: 672, column: 22, scope: !1905)
!1911 = !DILocation(line: 672, column: 11, scope: !1905)
!1912 = distinct !{!1912, !1911, !1913, !1499, !1500}
!1913 = !DILocation(line: 674, column: 11, scope: !1905)
!1914 = !DILocation(line: 676, column: 15, scope: !1637)
!1915 = !DILocation(line: 682, column: 15, scope: !1640)
!1916 = !DILocation(line: 0, scope: !1640)
!1917 = !DILocation(line: 690, column: 81, scope: !1918)
!1918 = distinct !DILexicalBlock(scope: !1919, file: !393, line: 688, column: 14)
!1919 = distinct !DILexicalBlock(scope: !1640, file: !393, line: 685, column: 13)
!1920 = !DILocation(line: 690, column: 70, scope: !1918)
!1921 = !DILocation(line: 690, column: 17, scope: !1918)
!1922 = !DILocation(line: 694, column: 15, scope: !1640)
!1923 = !DILocation(line: 699, column: 29, scope: !1614)
!1924 = !DILocation(line: 699, column: 9, scope: !1614)
!1925 = !DILocation(line: 700, column: 15, scope: !1614)
!1926 = !DILocation(line: 701, column: 9, scope: !1614)
!1927 = !DILocation(line: 704, column: 33, scope: !1614)
!1928 = !DILocation(line: 704, column: 9, scope: !1614)
!1929 = !DILocation(line: 705, column: 15, scope: !1614)
!1930 = !DILocation(line: 706, column: 9, scope: !1614)
!1931 = !DILocation(line: 711, column: 28, scope: !1587)
!1932 = !DILocation(line: 711, column: 24, scope: !1587)
!1933 = !DILocation(line: 711, column: 3, scope: !1587)
!1934 = !DILocation(line: 714, column: 3, scope: !1587)
!1935 = distinct !DISubprogram(name: "_out_null", scope: !393, file: !393, line: 117, type: !400, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !1936)
!1936 = !{!1937, !1938, !1939, !1940}
!1937 = !DILocalVariable(name: "character", arg: 1, scope: !1935, file: !393, line: 117, type: !149)
!1938 = !DILocalVariable(name: "buffer", arg: 2, scope: !1935, file: !393, line: 117, type: !312)
!1939 = !DILocalVariable(name: "idx", arg: 3, scope: !1935, file: !393, line: 117, type: !396)
!1940 = !DILocalVariable(name: "maxlen", arg: 4, scope: !1935, file: !393, line: 117, type: !396)
!1941 = !DILocation(line: 0, scope: !1935)
!1942 = !DILocation(line: 120, column: 1, scope: !1935)
!1943 = distinct !DISubprogram(name: "_out_buffer", scope: !393, file: !393, line: 108, type: !400, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !1944)
!1944 = !{!1945, !1946, !1947, !1948}
!1945 = !DILocalVariable(name: "character", arg: 1, scope: !1943, file: !393, line: 108, type: !149)
!1946 = !DILocalVariable(name: "buffer", arg: 2, scope: !1943, file: !393, line: 108, type: !312)
!1947 = !DILocalVariable(name: "idx", arg: 3, scope: !1943, file: !393, line: 108, type: !396)
!1948 = !DILocalVariable(name: "maxlen", arg: 4, scope: !1943, file: !393, line: 108, type: !396)
!1949 = !DILocation(line: 0, scope: !1943)
!1950 = !DILocation(line: 110, column: 11, scope: !1951)
!1951 = distinct !DILexicalBlock(scope: !1943, file: !393, line: 110, column: 7)
!1952 = !DILocation(line: 110, column: 7, scope: !1943)
!1953 = !DILocation(line: 111, column: 5, scope: !1954)
!1954 = distinct !DILexicalBlock(scope: !1951, file: !393, line: 110, column: 21)
!1955 = !DILocation(line: 111, column: 26, scope: !1954)
!1956 = !DILocation(line: 112, column: 3, scope: !1954)
!1957 = !DILocation(line: 113, column: 1, scope: !1943)
!1958 = distinct !DISubprogram(name: "_out_fct", scope: !393, file: !393, line: 134, type: !400, scopeLine: 135, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !1959)
!1959 = !{!1960, !1961, !1962, !1963}
!1960 = !DILocalVariable(name: "character", arg: 1, scope: !1958, file: !393, line: 134, type: !149)
!1961 = !DILocalVariable(name: "buffer", arg: 2, scope: !1958, file: !393, line: 134, type: !312)
!1962 = !DILocalVariable(name: "idx", arg: 3, scope: !1958, file: !393, line: 134, type: !396)
!1963 = !DILocalVariable(name: "maxlen", arg: 4, scope: !1958, file: !393, line: 134, type: !396)
!1964 = !DILocation(line: 0, scope: !1958)
!1965 = !DILocation(line: 137, column: 7, scope: !1966)
!1966 = distinct !DILexicalBlock(scope: !1958, file: !393, line: 137, column: 7)
!1967 = !DILocation(line: 137, column: 7, scope: !1958)
!1968 = !DILocation(line: 139, column: 35, scope: !1969)
!1969 = distinct !DILexicalBlock(scope: !1966, file: !393, line: 137, column: 18)
!1970 = !{!1971, !1644, i64 0}
!1971 = !{!"", !1644, i64 0, !1644, i64 4}
!1972 = !DILocation(line: 139, column: 80, scope: !1969)
!1973 = !{!1971, !1644, i64 4}
!1974 = !DILocation(line: 139, column: 5, scope: !1969)
!1975 = !DILocation(line: 140, column: 3, scope: !1969)
!1976 = !DILocation(line: 141, column: 1, scope: !1958)
!1977 = distinct !DISubprogram(name: "_is_digit", scope: !393, file: !393, line: 156, type: !1978, scopeLine: 157, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !1980)
!1978 = !DISubroutineType(types: !1979)
!1979 = !{!433, !149}
!1980 = !{!1981}
!1981 = !DILocalVariable(name: "ch", arg: 1, scope: !1977, file: !393, line: 156, type: !149)
!1982 = !DILocation(line: 0, scope: !1977)
!1983 = !DILocation(line: 158, column: 22, scope: !1977)
!1984 = !DILocation(line: 158, column: 3, scope: !1977)
!1985 = distinct !DISubprogram(name: "_atoi", scope: !393, file: !393, line: 163, type: !1986, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !1989)
!1986 = !DISubroutineType(types: !1987)
!1987 = !{!10, !1988}
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!1989 = !{!1990, !1991}
!1990 = !DILocalVariable(name: "str", arg: 1, scope: !1985, file: !393, line: 163, type: !1988)
!1991 = !DILocalVariable(name: "i", scope: !1985, file: !393, line: 165, type: !10)
!1992 = !DILocation(line: 0, scope: !1985)
!1993 = !DILocation(line: 166, column: 21, scope: !1985)
!1994 = !DILocation(line: 166, column: 20, scope: !1985)
!1995 = !DILocation(line: 166, column: 10, scope: !1985)
!1996 = !DILocation(line: 166, column: 3, scope: !1985)
!1997 = !DILocation(line: 167, column: 11, scope: !1998)
!1998 = distinct !DILexicalBlock(scope: !1985, file: !393, line: 166, column: 28)
!1999 = !DILocation(line: 167, column: 42, scope: !1998)
!2000 = !DILocation(line: 167, column: 34, scope: !1998)
!2001 = !DILocation(line: 167, column: 46, scope: !1998)
!2002 = !DILocation(line: 167, column: 17, scope: !1998)
!2003 = distinct !{!2003, !1996, !2004, !1499, !1500}
!2004 = !DILocation(line: 168, column: 3, scope: !1985)
!2005 = !DILocation(line: 169, column: 3, scope: !1985)
!2006 = distinct !DISubprogram(name: "_ntoa_long_long", scope: !393, file: !393, line: 274, type: !2007, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !2009)
!2007 = !DISubroutineType(types: !2008)
!2008 = !{!396, !398, !338, !396, !396, !114, !433, !114, !10, !10, !10}
!2009 = !{!2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022}
!2010 = !DILocalVariable(name: "out", arg: 1, scope: !2006, file: !393, line: 274, type: !398)
!2011 = !DILocalVariable(name: "buffer", arg: 2, scope: !2006, file: !393, line: 274, type: !338)
!2012 = !DILocalVariable(name: "idx", arg: 3, scope: !2006, file: !393, line: 274, type: !396)
!2013 = !DILocalVariable(name: "maxlen", arg: 4, scope: !2006, file: !393, line: 274, type: !396)
!2014 = !DILocalVariable(name: "value", arg: 5, scope: !2006, file: !393, line: 274, type: !114)
!2015 = !DILocalVariable(name: "negative", arg: 6, scope: !2006, file: !393, line: 274, type: !433)
!2016 = !DILocalVariable(name: "base", arg: 7, scope: !2006, file: !393, line: 274, type: !114)
!2017 = !DILocalVariable(name: "prec", arg: 8, scope: !2006, file: !393, line: 274, type: !10)
!2018 = !DILocalVariable(name: "width", arg: 9, scope: !2006, file: !393, line: 274, type: !10)
!2019 = !DILocalVariable(name: "flags", arg: 10, scope: !2006, file: !393, line: 274, type: !10)
!2020 = !DILocalVariable(name: "buf", scope: !2006, file: !393, line: 276, type: !228)
!2021 = !DILocalVariable(name: "len", scope: !2006, file: !393, line: 277, type: !396)
!2022 = !DILocalVariable(name: "digit", scope: !2023, file: !393, line: 287, type: !148)
!2023 = distinct !DILexicalBlock(scope: !2024, file: !393, line: 286, column: 8)
!2024 = distinct !DILexicalBlock(scope: !2025, file: !393, line: 285, column: 44)
!2025 = distinct !DILexicalBlock(scope: !2006, file: !393, line: 285, column: 7)
!2026 = !DILocation(line: 0, scope: !2006)
!2027 = !DILocation(line: 276, column: 3, scope: !2006)
!2028 = !DILocation(line: 276, column: 8, scope: !2006)
!2029 = !DILocation(line: 280, column: 8, scope: !2030)
!2030 = distinct !DILexicalBlock(scope: !2006, file: !393, line: 280, column: 7)
!2031 = !DILocation(line: 280, column: 7, scope: !2006)
!2032 = !DILocation(line: 285, column: 15, scope: !2025)
!2033 = !DILocation(line: 285, column: 34, scope: !2025)
!2034 = !DILocation(line: 286, column: 5, scope: !2024)
!2035 = !DILocation(line: 289, column: 13, scope: !2023)
!2036 = !DILocation(line: 287, column: 26, scope: !2023)
!2037 = !DILocation(line: 288, column: 20, scope: !2023)
!2038 = !DILocation(line: 0, scope: !2023)
!2039 = !DILocation(line: 288, column: 26, scope: !2023)
!2040 = !DILocation(line: 288, column: 14, scope: !2023)
!2041 = !DILocation(line: 288, column: 7, scope: !2023)
!2042 = !DILocation(line: 288, column: 18, scope: !2023)
!2043 = !DILocation(line: 290, column: 14, scope: !2024)
!2044 = !DILocation(line: 290, column: 20, scope: !2024)
!2045 = !DILocation(line: 290, column: 5, scope: !2023)
!2046 = distinct !{!2046, !2034, !2047, !1499, !1500}
!2047 = !DILocation(line: 290, column: 54, scope: !2024)
!2048 = !DILocation(line: 293, column: 69, scope: !2006)
!2049 = !DILocation(line: 293, column: 10, scope: !2006)
!2050 = !DILocation(line: 294, column: 1, scope: !2006)
!2051 = !DILocation(line: 293, column: 3, scope: !2006)
!2052 = distinct !DISubprogram(name: "_ntoa_long", scope: !393, file: !393, line: 249, type: !2053, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !2055)
!2053 = !DISubroutineType(types: !2054)
!2054 = !{!396, !398, !338, !396, !396, !405, !433, !405, !10, !10, !10}
!2055 = !{!2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068}
!2056 = !DILocalVariable(name: "out", arg: 1, scope: !2052, file: !393, line: 249, type: !398)
!2057 = !DILocalVariable(name: "buffer", arg: 2, scope: !2052, file: !393, line: 249, type: !338)
!2058 = !DILocalVariable(name: "idx", arg: 3, scope: !2052, file: !393, line: 249, type: !396)
!2059 = !DILocalVariable(name: "maxlen", arg: 4, scope: !2052, file: !393, line: 249, type: !396)
!2060 = !DILocalVariable(name: "value", arg: 5, scope: !2052, file: !393, line: 249, type: !405)
!2061 = !DILocalVariable(name: "negative", arg: 6, scope: !2052, file: !393, line: 249, type: !433)
!2062 = !DILocalVariable(name: "base", arg: 7, scope: !2052, file: !393, line: 249, type: !405)
!2063 = !DILocalVariable(name: "prec", arg: 8, scope: !2052, file: !393, line: 249, type: !10)
!2064 = !DILocalVariable(name: "width", arg: 9, scope: !2052, file: !393, line: 249, type: !10)
!2065 = !DILocalVariable(name: "flags", arg: 10, scope: !2052, file: !393, line: 249, type: !10)
!2066 = !DILocalVariable(name: "buf", scope: !2052, file: !393, line: 251, type: !228)
!2067 = !DILocalVariable(name: "len", scope: !2052, file: !393, line: 252, type: !396)
!2068 = !DILocalVariable(name: "digit", scope: !2069, file: !393, line: 262, type: !148)
!2069 = distinct !DILexicalBlock(scope: !2070, file: !393, line: 261, column: 8)
!2070 = distinct !DILexicalBlock(scope: !2071, file: !393, line: 260, column: 44)
!2071 = distinct !DILexicalBlock(scope: !2052, file: !393, line: 260, column: 7)
!2072 = !DILocation(line: 0, scope: !2052)
!2073 = !DILocation(line: 251, column: 3, scope: !2052)
!2074 = !DILocation(line: 251, column: 8, scope: !2052)
!2075 = !DILocation(line: 255, column: 8, scope: !2076)
!2076 = distinct !DILexicalBlock(scope: !2052, file: !393, line: 255, column: 7)
!2077 = !DILocation(line: 255, column: 7, scope: !2052)
!2078 = !DILocation(line: 260, column: 15, scope: !2071)
!2079 = !DILocation(line: 260, column: 34, scope: !2071)
!2080 = !DILocation(line: 261, column: 5, scope: !2070)
!2081 = !DILocation(line: 264, column: 13, scope: !2069)
!2082 = !DILocation(line: 263, column: 20, scope: !2069)
!2083 = !DILocation(line: 0, scope: !2069)
!2084 = !DILocation(line: 263, column: 26, scope: !2069)
!2085 = !DILocation(line: 263, column: 14, scope: !2069)
!2086 = !DILocation(line: 263, column: 7, scope: !2069)
!2087 = !DILocation(line: 263, column: 18, scope: !2069)
!2088 = !DILocation(line: 265, column: 14, scope: !2070)
!2089 = !DILocation(line: 265, column: 20, scope: !2070)
!2090 = !DILocation(line: 265, column: 5, scope: !2069)
!2091 = distinct !{!2091, !2080, !2092, !1499, !1500}
!2092 = !DILocation(line: 265, column: 54, scope: !2070)
!2093 = !DILocation(line: 268, column: 10, scope: !2052)
!2094 = !DILocation(line: 269, column: 1, scope: !2052)
!2095 = !DILocation(line: 268, column: 3, scope: !2052)
!2096 = !DILocation(line: 0, scope: !392)
!2097 = !DILocation(line: 303, column: 3, scope: !392)
!2098 = !DILocation(line: 303, column: 8, scope: !392)
!2099 = !DILocation(line: 314, column: 13, scope: !2100)
!2100 = distinct !DILexicalBlock(scope: !392, file: !393, line: 314, column: 7)
!2101 = !DILocation(line: 314, column: 7, scope: !392)
!2102 = !DILocation(line: 315, column: 25, scope: !2103)
!2103 = distinct !DILexicalBlock(scope: !2100, file: !393, line: 314, column: 23)
!2104 = !DILocation(line: 315, column: 5, scope: !2103)
!2105 = !DILocation(line: 316, column: 25, scope: !2103)
!2106 = !DILocation(line: 316, column: 5, scope: !2103)
!2107 = !DILocation(line: 317, column: 25, scope: !2103)
!2108 = !DILocation(line: 317, column: 5, scope: !2103)
!2109 = !DILocation(line: 318, column: 5, scope: !2103)
!2110 = !DILocation(line: 323, column: 13, scope: !2111)
!2111 = distinct !DILexicalBlock(scope: !392, file: !393, line: 323, column: 7)
!2112 = !DILocation(line: 323, column: 7, scope: !392)
!2113 = !DILocation(line: 329, column: 15, scope: !2114)
!2114 = distinct !DILexicalBlock(scope: !392, file: !393, line: 329, column: 7)
!2115 = !DILocation(line: 329, column: 7, scope: !392)
!2116 = !DILocation(line: 333, column: 42, scope: !392)
!2117 = !DILocation(line: 333, column: 3, scope: !392)
!2118 = !DILocation(line: 334, column: 16, scope: !2119)
!2119 = distinct !DILexicalBlock(scope: !392, file: !393, line: 333, column: 58)
!2120 = !DILocation(line: 334, column: 12, scope: !2119)
!2121 = !DILocation(line: 335, column: 9, scope: !2119)
!2122 = distinct !{!2122, !2117, !2123, !1499, !1500}
!2123 = !DILocation(line: 336, column: 3, scope: !392)
!2124 = !DILocation(line: 333, column: 15, scope: !392)
!2125 = !DILocation(line: 338, column: 15, scope: !392)
!2126 = !DILocation(line: 339, column: 25, scope: !392)
!2127 = !DILocation(line: 339, column: 23, scope: !392)
!2128 = !DILocation(line: 339, column: 34, scope: !392)
!2129 = !{!2130, !2130, i64 0}
!2130 = !{!"double", !1645, i64 0}
!2131 = !DILocation(line: 339, column: 32, scope: !392)
!2132 = !DILocation(line: 340, column: 24, scope: !392)
!2133 = !DILocation(line: 341, column: 16, scope: !392)
!2134 = !DILocation(line: 341, column: 14, scope: !392)
!2135 = !DILocation(line: 343, column: 12, scope: !2136)
!2136 = distinct !DILexicalBlock(scope: !392, file: !393, line: 343, column: 7)
!2137 = !DILocation(line: 343, column: 7, scope: !392)
!2138 = !DILocation(line: 344, column: 5, scope: !2139)
!2139 = distinct !DILexicalBlock(scope: !2136, file: !393, line: 343, column: 19)
!2140 = !DILocation(line: 346, column: 9, scope: !2141)
!2141 = distinct !DILexicalBlock(scope: !2139, file: !393, line: 346, column: 9)
!2142 = !DILocation(line: 346, column: 14, scope: !2141)
!2143 = !DILocation(line: 346, column: 9, scope: !2139)
!2144 = !DILocation(line: 348, column: 7, scope: !2145)
!2145 = distinct !DILexicalBlock(scope: !2141, file: !393, line: 346, column: 30)
!2146 = !DILocation(line: 349, column: 5, scope: !2145)
!2147 = !DILocation(line: 351, column: 17, scope: !2148)
!2148 = distinct !DILexicalBlock(scope: !2136, file: !393, line: 351, column: 12)
!2149 = !DILocation(line: 351, column: 12, scope: !2136)
!2150 = !DILocation(line: 353, column: 18, scope: !2151)
!2151 = distinct !DILexicalBlock(scope: !2148, file: !393, line: 353, column: 12)
!2152 = !DILocation(line: 353, column: 25, scope: !2151)
!2153 = !DILocation(line: 360, column: 13, scope: !2154)
!2154 = distinct !DILexicalBlock(scope: !392, file: !393, line: 360, column: 7)
!2155 = !DILocation(line: 360, column: 7, scope: !392)
!2156 = !DILocation(line: 364, column: 12, scope: !439)
!2157 = !DILocation(line: 364, column: 7, scope: !392)
!2158 = !DILocation(line: 365, column: 20, scope: !2159)
!2159 = distinct !DILexicalBlock(scope: !439, file: !393, line: 364, column: 19)
!2160 = !DILocation(line: 365, column: 18, scope: !2159)
!2161 = !DILocation(line: 366, column: 24, scope: !2162)
!2162 = distinct !DILexicalBlock(scope: !2159, file: !393, line: 366, column: 9)
!2163 = !DILocation(line: 0, scope: !438)
!2164 = !DILocation(line: 375, column: 5, scope: !438)
!2165 = !DILocation(line: 376, column: 7, scope: !2166)
!2166 = distinct !DILexicalBlock(scope: !438, file: !393, line: 375, column: 43)
!2167 = !DILocation(line: 378, column: 18, scope: !2168)
!2168 = distinct !DILexicalBlock(scope: !2166, file: !393, line: 378, column: 11)
!2169 = !DILocation(line: 377, column: 20, scope: !2166)
!2170 = !DILocation(line: 377, column: 14, scope: !2166)
!2171 = !DILocation(line: 377, column: 7, scope: !2166)
!2172 = !DILocation(line: 377, column: 18, scope: !2166)
!2173 = !DILocation(line: 378, column: 11, scope: !2166)
!2174 = distinct !{!2174, !2164, !2175, !1499, !1500}
!2175 = !DILocation(line: 381, column: 5, scope: !438)
!2176 = !DILocation(line: 383, column: 17, scope: !438)
!2177 = !DILocation(line: 383, column: 44, scope: !438)
!2178 = !DILocation(line: 383, column: 53, scope: !438)
!2179 = !DILocation(line: 384, column: 14, scope: !2180)
!2180 = distinct !DILexicalBlock(scope: !438, file: !393, line: 383, column: 63)
!2181 = !DILocation(line: 384, column: 7, scope: !2180)
!2182 = !DILocation(line: 384, column: 18, scope: !2180)
!2183 = distinct !{!2183, !2184, !2185, !1499, !1500}
!2184 = !DILocation(line: 383, column: 5, scope: !438)
!2185 = !DILocation(line: 385, column: 5, scope: !438)
!2186 = !DILocation(line: 386, column: 9, scope: !438)
!2187 = !DILocation(line: 388, column: 14, scope: !2188)
!2188 = distinct !DILexicalBlock(scope: !2189, file: !393, line: 386, column: 40)
!2189 = distinct !DILexicalBlock(scope: !438, file: !393, line: 386, column: 9)
!2190 = !DILocation(line: 388, column: 7, scope: !2188)
!2191 = !DILocation(line: 388, column: 18, scope: !2188)
!2192 = !DILocation(line: 389, column: 5, scope: !2188)
!2193 = !DILocation(line: 393, column: 14, scope: !392)
!2194 = !DILocation(line: 393, column: 3, scope: !392)
!2195 = !DILocation(line: 395, column: 17, scope: !2196)
!2196 = distinct !DILexicalBlock(scope: !2197, file: !393, line: 395, column: 9)
!2197 = distinct !DILexicalBlock(scope: !392, file: !393, line: 393, column: 41)
!2198 = !DILocation(line: 394, column: 18, scope: !2197)
!2199 = !DILocation(line: 394, column: 12, scope: !2197)
!2200 = !DILocation(line: 394, column: 5, scope: !2197)
!2201 = !DILocation(line: 394, column: 16, scope: !2197)
!2202 = !DILocation(line: 395, column: 9, scope: !2197)
!2203 = distinct !{!2203, !2194, !2204, !1499, !1500}
!2204 = !DILocation(line: 398, column: 3, scope: !392)
!2205 = !DILocation(line: 401, column: 15, scope: !2206)
!2206 = distinct !DILexicalBlock(scope: !392, file: !393, line: 401, column: 7)
!2207 = !DILocation(line: 401, column: 29, scope: !2206)
!2208 = !DILocation(line: 402, column: 9, scope: !2209)
!2209 = distinct !DILexicalBlock(scope: !2210, file: !393, line: 402, column: 9)
!2210 = distinct !DILexicalBlock(scope: !2206, file: !393, line: 401, column: 57)
!2211 = !DILocation(line: 402, column: 15, scope: !2209)
!2212 = !DILocation(line: 402, column: 28, scope: !2209)
!2213 = !DILocation(line: 405, column: 17, scope: !2210)
!2214 = !DILocation(line: 405, column: 26, scope: !2210)
!2215 = !DILocation(line: 405, column: 5, scope: !2210)
!2216 = !DILocation(line: 406, column: 18, scope: !2217)
!2217 = distinct !DILexicalBlock(scope: !2210, file: !393, line: 405, column: 62)
!2218 = !DILocation(line: 410, column: 11, scope: !2219)
!2219 = distinct !DILexicalBlock(scope: !392, file: !393, line: 410, column: 7)
!2220 = !DILocation(line: 410, column: 7, scope: !392)
!2221 = !DILocation(line: 411, column: 9, scope: !2222)
!2222 = distinct !DILexicalBlock(scope: !2219, file: !393, line: 410, column: 38)
!2223 = !DILocation(line: 414, column: 20, scope: !2224)
!2224 = distinct !DILexicalBlock(scope: !2225, file: !393, line: 414, column: 14)
!2225 = distinct !DILexicalBlock(scope: !2222, file: !393, line: 411, column: 9)
!2226 = !DILocation(line: 414, column: 14, scope: !2225)
!2227 = !DILocation(line: 417, column: 20, scope: !2228)
!2228 = distinct !DILexicalBlock(scope: !2224, file: !393, line: 417, column: 14)
!2229 = !DILocation(line: 417, column: 14, scope: !2224)
!2230 = !DILocation(line: 0, scope: !2225)
!2231 = !DILocation(line: 423, column: 29, scope: !443)
!2232 = !DILocation(line: 0, scope: !441)
!2233 = !DILocation(line: 425, column: 27, scope: !2234)
!2234 = distinct !DILexicalBlock(scope: !2235, file: !393, line: 424, column: 42)
!2235 = distinct !DILexicalBlock(scope: !441, file: !393, line: 424, column: 5)
!2236 = !DILocation(line: 425, column: 7, scope: !2234)
!2237 = !DILocation(line: 424, column: 38, scope: !2235)
!2238 = !DILocation(line: 424, column: 28, scope: !2235)
!2239 = !DILocation(line: 424, column: 5, scope: !441)
!2240 = distinct !{!2240, !2239, !2241, !1499, !1500}
!2241 = !DILocation(line: 426, column: 5, scope: !441)
!2242 = !DILocation(line: 0, scope: !445)
!2243 = !DILocation(line: 430, column: 25, scope: !2244)
!2244 = distinct !DILexicalBlock(scope: !445, file: !393, line: 430, column: 3)
!2245 = !DILocation(line: 430, column: 3, scope: !445)
!2246 = !DILocation(line: 435, column: 7, scope: !392)
!2247 = !DILocation(line: 431, column: 21, scope: !2248)
!2248 = distinct !DILexicalBlock(scope: !2244, file: !393, line: 430, column: 37)
!2249 = !DILocation(line: 431, column: 9, scope: !2248)
!2250 = !DILocation(line: 431, column: 39, scope: !2248)
!2251 = !DILocation(line: 431, column: 5, scope: !2248)
!2252 = !DILocation(line: 430, column: 33, scope: !2244)
!2253 = distinct !{!2253, !2245, !2254, !1499, !1500}
!2254 = !DILocation(line: 432, column: 3, scope: !445)
!2255 = !DILocation(line: 437, column: 27, scope: !2256)
!2256 = distinct !DILexicalBlock(scope: !2257, file: !393, line: 436, column: 37)
!2257 = distinct !DILexicalBlock(scope: !2258, file: !393, line: 435, column: 27)
!2258 = distinct !DILexicalBlock(scope: !392, file: !393, line: 435, column: 7)
!2259 = !DILocation(line: 437, column: 7, scope: !2256)
!2260 = !DILocation(line: 436, column: 16, scope: !2257)
!2261 = !DILocation(line: 436, column: 28, scope: !2257)
!2262 = !DILocation(line: 436, column: 5, scope: !2257)
!2263 = distinct !{!2263, !2262, !2264, !1499, !1500}
!2264 = !DILocation(line: 438, column: 5, scope: !2257)
!2265 = !DILocation(line: 442, column: 1, scope: !392)
!2266 = distinct !DISubprogram(name: "_strnlen_s", scope: !393, file: !393, line: 146, type: !2267, scopeLine: 147, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !2269)
!2267 = !DISubroutineType(types: !2268)
!2268 = !{!10, !147, !396}
!2269 = !{!2270, !2271, !2272}
!2270 = !DILocalVariable(name: "str", arg: 1, scope: !2266, file: !393, line: 146, type: !147)
!2271 = !DILocalVariable(name: "maxsize", arg: 2, scope: !2266, file: !393, line: 146, type: !396)
!2272 = !DILocalVariable(name: "s", scope: !2266, file: !393, line: 148, type: !147)
!2273 = !DILocation(line: 0, scope: !2266)
!2274 = !DILocation(line: 149, column: 17, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !2276, file: !393, line: 149, column: 3)
!2276 = distinct !DILexicalBlock(scope: !2266, file: !393, line: 149, column: 3)
!2277 = !DILocation(line: 149, column: 20, scope: !2275)
!2278 = !DILocation(line: 149, column: 30, scope: !2275)
!2279 = !DILocation(line: 149, column: 34, scope: !2275)
!2280 = distinct !{!2280, !2281, !2282, !1499, !1500}
!2281 = !DILocation(line: 149, column: 3, scope: !2276)
!2282 = !DILocation(line: 149, column: 38, scope: !2276)
!2283 = !DILocation(line: 0, scope: !2276)
!2284 = !DILocation(line: 150, column: 27, scope: !2266)
!2285 = !DILocation(line: 150, column: 3, scope: !2266)
!2286 = distinct !DISubprogram(name: "_ntoa_format", scope: !393, file: !393, line: 174, type: !2287, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !2289)
!2287 = !DISubroutineType(types: !2288)
!2288 = !{!396, !398, !338, !396, !396, !338, !396, !433, !10, !10, !10, !10}
!2289 = !{!2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2306}
!2290 = !DILocalVariable(name: "out", arg: 1, scope: !2286, file: !393, line: 174, type: !398)
!2291 = !DILocalVariable(name: "buffer", arg: 2, scope: !2286, file: !393, line: 174, type: !338)
!2292 = !DILocalVariable(name: "idx", arg: 3, scope: !2286, file: !393, line: 174, type: !396)
!2293 = !DILocalVariable(name: "maxlen", arg: 4, scope: !2286, file: !393, line: 174, type: !396)
!2294 = !DILocalVariable(name: "buf", arg: 5, scope: !2286, file: !393, line: 174, type: !338)
!2295 = !DILocalVariable(name: "len", arg: 6, scope: !2286, file: !393, line: 174, type: !396)
!2296 = !DILocalVariable(name: "negative", arg: 7, scope: !2286, file: !393, line: 174, type: !433)
!2297 = !DILocalVariable(name: "base", arg: 8, scope: !2286, file: !393, line: 174, type: !10)
!2298 = !DILocalVariable(name: "prec", arg: 9, scope: !2286, file: !393, line: 174, type: !10)
!2299 = !DILocalVariable(name: "width", arg: 10, scope: !2286, file: !393, line: 174, type: !10)
!2300 = !DILocalVariable(name: "flags", arg: 11, scope: !2286, file: !393, line: 174, type: !10)
!2301 = !DILocalVariable(name: "start_idx", scope: !2286, file: !393, line: 176, type: !426)
!2302 = !DILocalVariable(name: "i", scope: !2303, file: !393, line: 227, type: !396)
!2303 = distinct !DILexicalBlock(scope: !2304, file: !393, line: 227, column: 5)
!2304 = distinct !DILexicalBlock(scope: !2305, file: !393, line: 226, column: 58)
!2305 = distinct !DILexicalBlock(scope: !2286, file: !393, line: 226, column: 7)
!2306 = !DILocalVariable(name: "i", scope: !2307, file: !393, line: 233, type: !396)
!2307 = distinct !DILexicalBlock(scope: !2286, file: !393, line: 233, column: 3)
!2308 = !DILocation(line: 0, scope: !2286)
!2309 = !DILocation(line: 179, column: 15, scope: !2310)
!2310 = distinct !DILexicalBlock(scope: !2286, file: !393, line: 179, column: 7)
!2311 = !DILocation(line: 179, column: 7, scope: !2286)
!2312 = !DILocation(line: 180, column: 9, scope: !2313)
!2313 = distinct !DILexicalBlock(scope: !2314, file: !393, line: 180, column: 9)
!2314 = distinct !DILexicalBlock(scope: !2310, file: !393, line: 179, column: 30)
!2315 = !DILocation(line: 180, column: 15, scope: !2313)
!2316 = !DILocation(line: 180, column: 25, scope: !2313)
!2317 = !DILocation(line: 180, column: 42, scope: !2313)
!2318 = !DILocation(line: 180, column: 55, scope: !2313)
!2319 = !DILocation(line: 183, column: 17, scope: !2314)
!2320 = !DILocation(line: 183, column: 25, scope: !2314)
!2321 = !DILocation(line: 183, column: 5, scope: !2314)
!2322 = !DILocation(line: 184, column: 18, scope: !2323)
!2323 = distinct !DILexicalBlock(scope: !2314, file: !393, line: 183, column: 61)
!2324 = !DILocation(line: 186, column: 36, scope: !2314)
!2325 = !DILocation(line: 186, column: 44, scope: !2314)
!2326 = !DILocation(line: 186, column: 53, scope: !2314)
!2327 = !DILocation(line: 187, column: 14, scope: !2328)
!2328 = distinct !DILexicalBlock(scope: !2314, file: !393, line: 186, column: 89)
!2329 = !DILocation(line: 187, column: 7, scope: !2328)
!2330 = !DILocation(line: 187, column: 18, scope: !2328)
!2331 = distinct !{!2331, !2332, !2333, !1499, !1500}
!2332 = !DILocation(line: 186, column: 5, scope: !2314)
!2333 = !DILocation(line: 188, column: 5, scope: !2314)
!2334 = !DILocation(line: 192, column: 13, scope: !2335)
!2335 = distinct !DILexicalBlock(scope: !2286, file: !393, line: 192, column: 7)
!2336 = !DILocation(line: 192, column: 7, scope: !2286)
!2337 = !DILocation(line: 193, column: 17, scope: !2338)
!2338 = distinct !DILexicalBlock(scope: !2339, file: !393, line: 193, column: 9)
!2339 = distinct !DILexicalBlock(scope: !2335, file: !393, line: 192, column: 27)
!2340 = !DILocation(line: 193, column: 36, scope: !2338)
!2341 = !DILocation(line: 193, column: 52, scope: !2338)
!2342 = !DILocation(line: 193, column: 61, scope: !2338)
!2343 = !DILocation(line: 194, column: 10, scope: !2344)
!2344 = distinct !DILexicalBlock(scope: !2338, file: !393, line: 193, column: 81)
!2345 = !DILocation(line: 195, column: 11, scope: !2346)
!2346 = distinct !DILexicalBlock(scope: !2344, file: !393, line: 195, column: 11)
!2347 = !DILocation(line: 195, column: 15, scope: !2346)
!2348 = !DILocation(line: 199, column: 15, scope: !2349)
!2349 = distinct !DILexicalBlock(scope: !2339, file: !393, line: 199, column: 9)
!2350 = !DILocation(line: 199, column: 23, scope: !2349)
!2351 = !DILocation(line: 199, column: 34, scope: !2349)
!2352 = !DILocation(line: 199, column: 53, scope: !2349)
!2353 = !DILocation(line: 202, column: 38, scope: !2354)
!2354 = distinct !DILexicalBlock(scope: !2349, file: !393, line: 202, column: 14)
!2355 = !DILocation(line: 202, column: 57, scope: !2354)
!2356 = !DILocation(line: 205, column: 20, scope: !2357)
!2357 = distinct !DILexicalBlock(scope: !2354, file: !393, line: 205, column: 14)
!2358 = !DILocation(line: 205, column: 27, scope: !2357)
!2359 = !DILocation(line: 0, scope: !2349)
!2360 = !DILocation(line: 208, column: 13, scope: !2361)
!2361 = distinct !DILexicalBlock(scope: !2339, file: !393, line: 208, column: 9)
!2362 = !DILocation(line: 0, scope: !2339)
!2363 = !DILocation(line: 208, column: 9, scope: !2339)
!2364 = !DILocation(line: 209, column: 14, scope: !2365)
!2365 = distinct !DILexicalBlock(scope: !2361, file: !393, line: 208, column: 40)
!2366 = !DILocation(line: 209, column: 7, scope: !2365)
!2367 = !DILocation(line: 209, column: 18, scope: !2365)
!2368 = !DILocation(line: 210, column: 5, scope: !2365)
!2369 = !DILocation(line: 213, column: 11, scope: !2370)
!2370 = distinct !DILexicalBlock(scope: !2286, file: !393, line: 213, column: 7)
!2371 = !DILocation(line: 213, column: 7, scope: !2286)
!2372 = !DILocation(line: 214, column: 9, scope: !2373)
!2373 = distinct !DILexicalBlock(scope: !2370, file: !393, line: 213, column: 38)
!2374 = !DILocation(line: 217, column: 20, scope: !2375)
!2375 = distinct !DILexicalBlock(scope: !2376, file: !393, line: 217, column: 14)
!2376 = distinct !DILexicalBlock(scope: !2373, file: !393, line: 214, column: 9)
!2377 = !DILocation(line: 217, column: 14, scope: !2376)
!2378 = !DILocation(line: 220, column: 20, scope: !2379)
!2379 = distinct !DILexicalBlock(scope: !2375, file: !393, line: 220, column: 14)
!2380 = !DILocation(line: 220, column: 14, scope: !2375)
!2381 = !DILocation(line: 0, scope: !2376)
!2382 = !DILocation(line: 226, column: 29, scope: !2305)
!2383 = !DILocation(line: 0, scope: !2303)
!2384 = !DILocation(line: 228, column: 27, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !2386, file: !393, line: 227, column: 42)
!2386 = distinct !DILexicalBlock(scope: !2303, file: !393, line: 227, column: 5)
!2387 = !DILocation(line: 228, column: 7, scope: !2385)
!2388 = !DILocation(line: 227, column: 38, scope: !2386)
!2389 = !DILocation(line: 227, column: 28, scope: !2386)
!2390 = !DILocation(line: 227, column: 5, scope: !2303)
!2391 = distinct !{!2391, !2390, !2392, !1499, !1500}
!2392 = !DILocation(line: 229, column: 5, scope: !2303)
!2393 = !DILocation(line: 0, scope: !2307)
!2394 = !DILocation(line: 233, column: 25, scope: !2395)
!2395 = distinct !DILexicalBlock(scope: !2307, file: !393, line: 233, column: 3)
!2396 = !DILocation(line: 233, column: 3, scope: !2307)
!2397 = !DILocation(line: 238, column: 7, scope: !2286)
!2398 = !DILocation(line: 234, column: 21, scope: !2399)
!2399 = distinct !DILexicalBlock(scope: !2395, file: !393, line: 233, column: 37)
!2400 = !DILocation(line: 234, column: 9, scope: !2399)
!2401 = !DILocation(line: 234, column: 39, scope: !2399)
!2402 = !DILocation(line: 234, column: 5, scope: !2399)
!2403 = !DILocation(line: 233, column: 33, scope: !2395)
!2404 = distinct !{!2404, !2396, !2405, !1499, !1500}
!2405 = !DILocation(line: 235, column: 3, scope: !2307)
!2406 = !DILocation(line: 240, column: 27, scope: !2407)
!2407 = distinct !DILexicalBlock(scope: !2408, file: !393, line: 239, column: 37)
!2408 = distinct !DILexicalBlock(scope: !2409, file: !393, line: 238, column: 27)
!2409 = distinct !DILexicalBlock(scope: !2286, file: !393, line: 238, column: 7)
!2410 = !DILocation(line: 240, column: 7, scope: !2407)
!2411 = !DILocation(line: 239, column: 16, scope: !2408)
!2412 = !DILocation(line: 239, column: 28, scope: !2408)
!2413 = !DILocation(line: 239, column: 5, scope: !2408)
!2414 = distinct !{!2414, !2413, !2415, !1499, !1500}
!2415 = !DILocation(line: 241, column: 5, scope: !2408)
!2416 = !DILocation(line: 244, column: 3, scope: !2286)
!2417 = distinct !DISubprogram(name: "sprintf_", scope: !393, file: !393, line: 731, type: !2418, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !2420)
!2418 = !DISubroutineType(types: !2419)
!2419 = !{!58, !338, !147, null}
!2420 = !{!2421, !2422, !2423, !2424}
!2421 = !DILocalVariable(name: "buffer", arg: 1, scope: !2417, file: !393, line: 731, type: !338)
!2422 = !DILocalVariable(name: "format", arg: 2, scope: !2417, file: !393, line: 731, type: !147)
!2423 = !DILocalVariable(name: "va", scope: !2417, file: !393, line: 733, type: !1550)
!2424 = !DILocalVariable(name: "ret", scope: !2417, file: !393, line: 735, type: !1562)
!2425 = !DILocation(line: 0, scope: !2417)
!2426 = !DILocation(line: 733, column: 3, scope: !2417)
!2427 = !DILocation(line: 733, column: 11, scope: !2417)
!2428 = !DILocation(line: 734, column: 3, scope: !2417)
!2429 = !DILocation(line: 735, column: 19, scope: !2417)
!2430 = !DILocation(line: 736, column: 3, scope: !2417)
!2431 = !DILocation(line: 738, column: 1, scope: !2417)
!2432 = !DILocation(line: 737, column: 3, scope: !2417)
!2433 = distinct !DISubprogram(name: "snprintf_", scope: !393, file: !393, line: 741, type: !2434, scopeLine: 742, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !2436)
!2434 = !DISubroutineType(types: !2435)
!2435 = !{!58, !338, !396, !147, null}
!2436 = !{!2437, !2438, !2439, !2440, !2441}
!2437 = !DILocalVariable(name: "buffer", arg: 1, scope: !2433, file: !393, line: 741, type: !338)
!2438 = !DILocalVariable(name: "count", arg: 2, scope: !2433, file: !393, line: 741, type: !396)
!2439 = !DILocalVariable(name: "format", arg: 3, scope: !2433, file: !393, line: 741, type: !147)
!2440 = !DILocalVariable(name: "va", scope: !2433, file: !393, line: 743, type: !1550)
!2441 = !DILocalVariable(name: "ret", scope: !2433, file: !393, line: 745, type: !1562)
!2442 = !DILocation(line: 0, scope: !2433)
!2443 = !DILocation(line: 743, column: 3, scope: !2433)
!2444 = !DILocation(line: 743, column: 11, scope: !2433)
!2445 = !DILocation(line: 744, column: 3, scope: !2433)
!2446 = !DILocation(line: 745, column: 19, scope: !2433)
!2447 = !DILocation(line: 746, column: 3, scope: !2433)
!2448 = !DILocation(line: 748, column: 1, scope: !2433)
!2449 = !DILocation(line: 747, column: 3, scope: !2433)
!2450 = distinct !DISubprogram(name: "vsnprintf_", scope: !393, file: !393, line: 751, type: !2451, scopeLine: 752, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !2453)
!2451 = !DISubroutineType(types: !2452)
!2452 = !{!58, !338, !396, !147, !1550}
!2453 = !{!2454, !2455, !2456, !2457}
!2454 = !DILocalVariable(name: "buffer", arg: 1, scope: !2450, file: !393, line: 751, type: !338)
!2455 = !DILocalVariable(name: "count", arg: 2, scope: !2450, file: !393, line: 751, type: !396)
!2456 = !DILocalVariable(name: "format", arg: 3, scope: !2450, file: !393, line: 751, type: !147)
!2457 = !DILocalVariable(name: "va", arg: 4, scope: !2450, file: !393, line: 751, type: !1550)
!2458 = !DILocation(line: 0, scope: !2450)
!2459 = !DILocation(line: 753, column: 10, scope: !2450)
!2460 = !DILocation(line: 753, column: 3, scope: !2450)
!2461 = distinct !DISubprogram(name: "fctprintf", scope: !393, file: !393, line: 757, type: !2462, scopeLine: 758, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !2464)
!2462 = !DISubroutineType(types: !2463)
!2463 = !{!58, !411, !312, !147, null}
!2464 = !{!2465, !2466, !2467, !2468, !2469, !2471}
!2465 = !DILocalVariable(name: "out", arg: 1, scope: !2461, file: !393, line: 757, type: !411)
!2466 = !DILocalVariable(name: "arg", arg: 2, scope: !2461, file: !393, line: 757, type: !312)
!2467 = !DILocalVariable(name: "format", arg: 3, scope: !2461, file: !393, line: 757, type: !147)
!2468 = !DILocalVariable(name: "va", scope: !2461, file: !393, line: 759, type: !1550)
!2469 = !DILocalVariable(name: "out_fct_wrap", scope: !2461, file: !393, line: 761, type: !2470)
!2470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !407)
!2471 = !DILocalVariable(name: "ret", scope: !2461, file: !393, line: 762, type: !1562)
!2472 = !DILocation(line: 0, scope: !2461)
!2473 = !DILocation(line: 759, column: 3, scope: !2461)
!2474 = !DILocation(line: 759, column: 11, scope: !2461)
!2475 = !DILocation(line: 760, column: 3, scope: !2461)
!2476 = !DILocation(line: 761, column: 3, scope: !2461)
!2477 = !DILocation(line: 761, column: 27, scope: !2461)
!2478 = !DILocation(line: 761, column: 42, scope: !2461)
!2479 = !DILocation(line: 762, column: 19, scope: !2461)
!2480 = !DILocation(line: 763, column: 3, scope: !2461)
!2481 = !DILocation(line: 765, column: 1, scope: !2461)
!2482 = !DILocation(line: 764, column: 3, scope: !2461)
!2483 = distinct !DISubprogram(name: "SystemInit", scope: !452, file: !452, line: 157, type: !4, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !451, retainedNodes: !202)
!2484 = !DILocation(line: 161, column: 11, scope: !2483)
!2485 = !{!2486, !2487, i64 0}
!2486 = !{!"", !2487, i64 0, !2487, i64 4, !2487, i64 8, !2487, i64 12, !2487, i64 16, !2487, i64 20, !2487, i64 24, !2487, i64 28, !2487, i64 32, !2487, i64 36}
!2487 = !{!"int", !1645, i64 0}
!2488 = !DILocation(line: 165, column: 13, scope: !2483)
!2489 = !{!2486, !2487, i64 4}
!2490 = !DILocation(line: 171, column: 11, scope: !2483)
!2491 = !DILocation(line: 174, column: 11, scope: !2483)
!2492 = !DILocation(line: 177, column: 13, scope: !2483)
!2493 = !DILocation(line: 196, column: 12, scope: !2483)
!2494 = !{!2486, !2487, i64 8}
!2495 = !DILocation(line: 208, column: 13, scope: !2483)
!2496 = !{!2497, !2487, i64 8}
!2497 = !{!"", !2487, i64 0, !2487, i64 4, !2487, i64 8, !2487, i64 12, !2487, i64 16, !2487, i64 20, !1645, i64 24, !2487, i64 36, !2487, i64 40, !2487, i64 44, !2487, i64 48, !2487, i64 52, !2487, i64 56, !2487, i64 60, !1645, i64 64, !2487, i64 72, !2487, i64 76, !1645, i64 80, !1645, i64 96, !1645, i64 116, !2487, i64 136}
!2498 = !DILocation(line: 210, column: 1, scope: !2483)
!2499 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !452, file: !452, line: 247, type: !4, scopeLine: 248, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !451, retainedNodes: !2500)
!2500 = !{!2501, !2502, !2503}
!2501 = !DILocalVariable(name: "tmp", scope: !2499, file: !452, line: 249, type: !24)
!2502 = !DILocalVariable(name: "pllmull", scope: !2499, file: !452, line: 249, type: !24)
!2503 = !DILocalVariable(name: "pllsource", scope: !2499, file: !452, line: 249, type: !24)
!2504 = !DILocation(line: 0, scope: !2499)
!2505 = !DILocation(line: 260, column: 14, scope: !2499)
!2506 = !DILocation(line: 260, column: 19, scope: !2499)
!2507 = !DILocation(line: 262, column: 3, scope: !2499)
!2508 = !DILocation(line: 273, column: 22, scope: !2509)
!2509 = distinct !DILexicalBlock(scope: !2499, file: !452, line: 263, column: 3)
!2510 = !DILocation(line: 274, column: 24, scope: !2509)
!2511 = !DILocation(line: 274, column: 29, scope: !2509)
!2512 = !DILocation(line: 277, column: 27, scope: !2509)
!2513 = !DILocation(line: 277, column: 35, scope: !2509)
!2514 = !DILocation(line: 279, column: 21, scope: !2515)
!2515 = distinct !DILexicalBlock(scope: !2509, file: !452, line: 279, column: 11)
!2516 = !DILocation(line: 279, column: 11, scope: !2509)
!2517 = !DILocation(line: 282, column: 45, scope: !2518)
!2518 = distinct !DILexicalBlock(scope: !2515, file: !452, line: 280, column: 7)
!2519 = !DILocation(line: 283, column: 7, scope: !2518)
!2520 = !DILocation(line: 292, column: 19, scope: !2521)
!2521 = distinct !DILexicalBlock(scope: !2522, file: !452, line: 292, column: 13)
!2522 = distinct !DILexicalBlock(scope: !2515, file: !452, line: 285, column: 7)
!2523 = !DILocation(line: 292, column: 24, scope: !2521)
!2524 = !DILocation(line: 292, column: 45, scope: !2521)
!2525 = !DILocation(line: 292, column: 13, scope: !2522)
!2526 = !DILocation(line: 294, column: 47, scope: !2527)
!2527 = distinct !DILexicalBlock(scope: !2521, file: !452, line: 293, column: 9)
!2528 = !DILocation(line: 295, column: 9, scope: !2527)
!2529 = !DILocation(line: 298, column: 39, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !2521, file: !452, line: 297, column: 9)
!2531 = !DILocation(line: 0, scope: !2509)
!2532 = !{!2487, !2487, i64 0}
!2533 = !DILocation(line: 350, column: 30, scope: !2499)
!2534 = !DILocation(line: 350, column: 52, scope: !2499)
!2535 = !DILocation(line: 350, column: 9, scope: !2499)
!2536 = !DILocation(line: 352, column: 19, scope: !2499)
!2537 = !DILocation(line: 353, column: 1, scope: !2499)
!2538 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !851, file: !851, line: 202, type: !2539, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !850, retainedNodes: !2542)
!2539 = !DISubroutineType(types: !2540)
!2540 = !{!2541}
!2541 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !9, line: 47, baseType: !538)
!2542 = !{!2543}
!2543 = !DILocalVariable(name: "tickstart", scope: !2538, file: !851, line: 204, type: !24)
!2544 = !DILocation(line: 207, column: 15, scope: !2538)
!2545 = !DILocation(line: 0, scope: !2538)
!2546 = !DILocation(line: 210, column: 3, scope: !2538)
!2547 = !DILocation(line: 213, column: 3, scope: !2538)
!2548 = !DILocation(line: 213, column: 10, scope: !2538)
!2549 = !DILocation(line: 213, column: 43, scope: !2538)
!2550 = !DILocation(line: 215, column: 10, scope: !2551)
!2551 = distinct !DILexicalBlock(scope: !2552, file: !851, line: 215, column: 9)
!2552 = distinct !DILexicalBlock(scope: !2538, file: !851, line: 214, column: 3)
!2553 = !DILocation(line: 215, column: 24, scope: !2551)
!2554 = !DILocation(line: 215, column: 37, scope: !2551)
!2555 = !DILocation(line: 215, column: 9, scope: !2552)
!2556 = distinct !{!2556, !2547, !2557, !1499, !1500}
!2557 = !DILocation(line: 219, column: 3, scope: !2538)
!2558 = !DILocation(line: 222, column: 3, scope: !2538)
!2559 = !DILocation(line: 225, column: 15, scope: !2538)
!2560 = !DILocation(line: 228, column: 3, scope: !2538)
!2561 = !DILocation(line: 231, column: 3, scope: !2538)
!2562 = !DILocation(line: 231, column: 10, scope: !2538)
!2563 = !DILocation(line: 231, column: 44, scope: !2538)
!2564 = !DILocation(line: 233, column: 10, scope: !2565)
!2565 = distinct !DILexicalBlock(scope: !2566, file: !851, line: 233, column: 9)
!2566 = distinct !DILexicalBlock(scope: !2538, file: !851, line: 232, column: 3)
!2567 = !DILocation(line: 233, column: 24, scope: !2565)
!2568 = !DILocation(line: 233, column: 37, scope: !2565)
!2569 = !DILocation(line: 233, column: 9, scope: !2566)
!2570 = distinct !{!2570, !2561, !2571, !1499, !1500}
!2571 = !DILocation(line: 237, column: 3, scope: !2538)
!2572 = !DILocation(line: 240, column: 19, scope: !2538)
!2573 = !DILocation(line: 243, column: 20, scope: !2574)
!2574 = distinct !DILexicalBlock(scope: !2538, file: !851, line: 243, column: 7)
!2575 = !DILocation(line: 243, column: 7, scope: !2574)
!2576 = !DILocation(line: 243, column: 32, scope: !2574)
!2577 = !DILocation(line: 243, column: 7, scope: !2538)
!2578 = !DILocation(line: 249, column: 15, scope: !2538)
!2579 = !DILocation(line: 252, column: 3, scope: !2538)
!2580 = !DILocation(line: 255, column: 3, scope: !2538)
!2581 = !DILocation(line: 255, column: 10, scope: !2538)
!2582 = !DILocation(line: 255, column: 43, scope: !2538)
!2583 = !DILocation(line: 257, column: 10, scope: !2584)
!2584 = distinct !DILexicalBlock(scope: !2585, file: !851, line: 257, column: 9)
!2585 = distinct !DILexicalBlock(scope: !2538, file: !851, line: 256, column: 3)
!2586 = !DILocation(line: 257, column: 24, scope: !2584)
!2587 = !DILocation(line: 257, column: 37, scope: !2584)
!2588 = !DILocation(line: 257, column: 9, scope: !2585)
!2589 = distinct !{!2589, !2580, !2590, !1499, !1500}
!2590 = !DILocation(line: 261, column: 3, scope: !2538)
!2591 = !DILocation(line: 264, column: 3, scope: !2538)
!2592 = !DILocation(line: 267, column: 15, scope: !2538)
!2593 = !DILocation(line: 270, column: 3, scope: !2538)
!2594 = !DILocation(line: 273, column: 3, scope: !2538)
!2595 = !DILocation(line: 273, column: 10, scope: !2538)
!2596 = !DILocation(line: 273, column: 43, scope: !2538)
!2597 = !DILocation(line: 275, column: 10, scope: !2598)
!2598 = distinct !DILexicalBlock(scope: !2599, file: !851, line: 275, column: 9)
!2599 = distinct !DILexicalBlock(scope: !2538, file: !851, line: 274, column: 3)
!2600 = !DILocation(line: 275, column: 24, scope: !2598)
!2601 = !DILocation(line: 275, column: 37, scope: !2598)
!2602 = !DILocation(line: 275, column: 9, scope: !2599)
!2603 = distinct !{!2603, !2594, !2604, !1499, !1500}
!2604 = !DILocation(line: 279, column: 3, scope: !2538)
!2605 = !DILocation(line: 282, column: 3, scope: !2538)
!2606 = !DILocation(line: 324, column: 3, scope: !2538)
!2607 = !{!2486, !2487, i64 36}
!2608 = !DILocation(line: 327, column: 3, scope: !2538)
!2609 = !DILocation(line: 329, column: 3, scope: !2538)
!2610 = !DILocation(line: 330, column: 1, scope: !2538)
!2611 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !851, file: !851, line: 347, type: !2612, scopeLine: 348, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !850, retainedNodes: !2632)
!2612 = !DISubroutineType(types: !2613)
!2613 = !{!2541, !2614}
!2614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2615, size: 32)
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !1354, line: 261, baseType: !2616)
!2616 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1354, line: 228, size: 320, elements: !2617)
!2617 = !{!2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !2616, file: !1354, line: 230, baseType: !24, size: 32)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !2616, file: !1354, line: 238, baseType: !24, size: 32, offset: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "HSEPredivValue", scope: !2616, file: !1354, line: 241, baseType: !24, size: 32, offset: 64)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !2616, file: !1354, line: 244, baseType: !24, size: 32, offset: 96)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !2616, file: !1354, line: 247, baseType: !24, size: 32, offset: 128)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !2616, file: !1354, line: 250, baseType: !24, size: 32, offset: 160)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !2616, file: !1354, line: 253, baseType: !24, size: 32, offset: 192)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !2616, file: !1354, line: 256, baseType: !2626, size: 96, offset: 224)
!2626 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !1366, line: 59, baseType: !2627)
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1366, line: 49, size: 96, elements: !2628)
!2628 = !{!2629, !2630, !2631}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !2627, file: !1366, line: 51, baseType: !24, size: 32)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !2627, file: !1366, line: 54, baseType: !24, size: 32, offset: 32)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !2627, file: !1366, line: 57, baseType: !24, size: 32, offset: 64)
!2632 = !{!2633, !2634, !2635, !2636, !2640}
!2633 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !2611, file: !851, line: 347, type: !2614)
!2634 = !DILocalVariable(name: "tickstart", scope: !2611, file: !851, line: 349, type: !24)
!2635 = !DILocalVariable(name: "pll_config", scope: !2611, file: !851, line: 350, type: !24)
!2636 = !DILocalVariable(name: "pwrclkchanged", scope: !2637, file: !851, line: 526, type: !2639)
!2637 = distinct !DILexicalBlock(scope: !2638, file: !851, line: 525, column: 3)
!2638 = distinct !DILexicalBlock(scope: !2611, file: !851, line: 524, column: 7)
!2639 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !455, line: 155, baseType: !454)
!2640 = !DILocalVariable(name: "tmpreg", scope: !2641, file: !851, line: 535, type: !23)
!2641 = distinct !DILexicalBlock(scope: !2642, file: !851, line: 535, column: 7)
!2642 = distinct !DILexicalBlock(scope: !2643, file: !851, line: 534, column: 5)
!2643 = distinct !DILexicalBlock(scope: !2637, file: !851, line: 533, column: 9)
!2644 = !DILocation(line: 0, scope: !2611)
!2645 = !DILocation(line: 353, column: 25, scope: !2646)
!2646 = distinct !DILexicalBlock(scope: !2611, file: !851, line: 353, column: 7)
!2647 = !DILocation(line: 353, column: 7, scope: !2611)
!2648 = !DILocation(line: 362, column: 28, scope: !2649)
!2649 = distinct !DILexicalBlock(scope: !2611, file: !851, line: 362, column: 7)
!2650 = !{!2651, !2487, i64 0}
!2651 = !{!"", !2487, i64 0, !2487, i64 4, !2487, i64 8, !2487, i64 12, !2487, i64 16, !2487, i64 20, !2487, i64 24, !2652, i64 28}
!2652 = !{!"", !2487, i64 0, !2487, i64 4, !2487, i64 8}
!2653 = !DILocation(line: 362, column: 44, scope: !2649)
!2654 = !DILocation(line: 362, column: 70, scope: !2649)
!2655 = !DILocation(line: 362, column: 7, scope: !2611)
!2656 = !DILocation(line: 368, column: 10, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !2658, file: !851, line: 368, column: 9)
!2658 = distinct !DILexicalBlock(scope: !2649, file: !851, line: 363, column: 3)
!2659 = !DILocation(line: 368, column: 40, scope: !2657)
!2660 = !DILocation(line: 369, column: 9, scope: !2657)
!2661 = !DILocation(line: 369, column: 14, scope: !2657)
!2662 = !DILocation(line: 369, column: 44, scope: !2657)
!2663 = !DILocation(line: 369, column: 79, scope: !2657)
!2664 = !DILocation(line: 369, column: 83, scope: !2657)
!2665 = !DILocation(line: 369, column: 113, scope: !2657)
!2666 = !DILocation(line: 368, column: 9, scope: !2658)
!2667 = !DILocation(line: 371, column: 12, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2669, file: !851, line: 371, column: 11)
!2669 = distinct !DILexicalBlock(scope: !2657, file: !851, line: 370, column: 5)
!2670 = !DILocation(line: 371, column: 48, scope: !2668)
!2671 = !DILocation(line: 371, column: 58, scope: !2668)
!2672 = !DILocation(line: 371, column: 81, scope: !2668)
!2673 = !{!2651, !2487, i64 4}
!2674 = !DILocation(line: 371, column: 90, scope: !2668)
!2675 = !DILocation(line: 371, column: 11, scope: !2669)
!2676 = !DILocation(line: 379, column: 7, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2678, file: !851, line: 379, column: 7)
!2678 = distinct !DILexicalBlock(scope: !2679, file: !851, line: 379, column: 7)
!2679 = distinct !DILexicalBlock(scope: !2657, file: !851, line: 377, column: 5)
!2680 = !DILocation(line: 379, column: 7, scope: !2678)
!2681 = !DILocation(line: 379, column: 7, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !2677, file: !851, line: 379, column: 7)
!2683 = !DILocation(line: 379, column: 7, scope: !2684)
!2684 = distinct !DILexicalBlock(scope: !2685, file: !851, line: 379, column: 7)
!2685 = distinct !DILexicalBlock(scope: !2677, file: !851, line: 379, column: 7)
!2686 = !DILocation(line: 379, column: 7, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2688, file: !851, line: 379, column: 7)
!2688 = distinct !DILexicalBlock(scope: !2685, file: !851, line: 379, column: 7)
!2689 = !DILocation(line: 379, column: 7, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2688, file: !851, line: 379, column: 7)
!2691 = !DILocation(line: 0, scope: !2677)
!2692 = !DILocation(line: 383, column: 39, scope: !2693)
!2693 = distinct !DILexicalBlock(scope: !2679, file: !851, line: 383, column: 11)
!2694 = !DILocation(line: 0, scope: !2693)
!2695 = !DILocation(line: 383, column: 11, scope: !2679)
!2696 = !DILocation(line: 389, column: 16, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !2693, file: !851, line: 384, column: 7)
!2698 = !DILocation(line: 389, column: 52, scope: !2697)
!2699 = !DILocation(line: 389, column: 9, scope: !2697)
!2700 = !DILocation(line: 391, column: 16, scope: !2701)
!2701 = distinct !DILexicalBlock(scope: !2702, file: !851, line: 391, column: 15)
!2702 = distinct !DILexicalBlock(scope: !2697, file: !851, line: 390, column: 9)
!2703 = !DILocation(line: 391, column: 30, scope: !2701)
!2704 = !DILocation(line: 391, column: 43, scope: !2701)
!2705 = !DILocation(line: 391, column: 15, scope: !2702)
!2706 = distinct !{!2706, !2699, !2707, !1499, !1500}
!2707 = !DILocation(line: 395, column: 9, scope: !2697)
!2708 = !DILocation(line: 403, column: 16, scope: !2709)
!2709 = distinct !DILexicalBlock(scope: !2693, file: !851, line: 398, column: 7)
!2710 = !DILocation(line: 403, column: 52, scope: !2709)
!2711 = !DILocation(line: 403, column: 9, scope: !2709)
!2712 = !DILocation(line: 405, column: 16, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2714, file: !851, line: 405, column: 15)
!2714 = distinct !DILexicalBlock(scope: !2709, file: !851, line: 404, column: 9)
!2715 = !DILocation(line: 405, column: 30, scope: !2713)
!2716 = !DILocation(line: 405, column: 43, scope: !2713)
!2717 = !DILocation(line: 405, column: 15, scope: !2714)
!2718 = distinct !{!2718, !2711, !2719, !1499, !1500}
!2719 = !DILocation(line: 409, column: 9, scope: !2709)
!2720 = !DILocation(line: 414, column: 28, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2611, file: !851, line: 414, column: 7)
!2722 = !DILocation(line: 414, column: 44, scope: !2721)
!2723 = !DILocation(line: 414, column: 70, scope: !2721)
!2724 = !DILocation(line: 414, column: 7, scope: !2611)
!2725 = !DILocation(line: 421, column: 10, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !2727, file: !851, line: 421, column: 9)
!2727 = distinct !DILexicalBlock(scope: !2721, file: !851, line: 415, column: 3)
!2728 = !DILocation(line: 421, column: 40, scope: !2726)
!2729 = !DILocation(line: 422, column: 9, scope: !2726)
!2730 = !DILocation(line: 422, column: 14, scope: !2726)
!2731 = !DILocation(line: 422, column: 44, scope: !2726)
!2732 = !DILocation(line: 422, column: 79, scope: !2726)
!2733 = !DILocation(line: 422, column: 83, scope: !2726)
!2734 = !DILocation(line: 422, column: 113, scope: !2726)
!2735 = !DILocation(line: 421, column: 9, scope: !2727)
!2736 = !DILocation(line: 425, column: 12, scope: !2737)
!2737 = distinct !DILexicalBlock(scope: !2738, file: !851, line: 425, column: 11)
!2738 = distinct !DILexicalBlock(scope: !2726, file: !851, line: 423, column: 5)
!2739 = !DILocation(line: 425, column: 48, scope: !2737)
!2740 = !DILocation(line: 425, column: 58, scope: !2737)
!2741 = !DILocation(line: 425, column: 81, scope: !2737)
!2742 = !{!2651, !2487, i64 16}
!2743 = !DILocation(line: 425, column: 90, scope: !2737)
!2744 = !DILocation(line: 425, column: 11, scope: !2738)
!2745 = !DILocation(line: 439, column: 30, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2747, file: !851, line: 439, column: 11)
!2747 = distinct !DILexicalBlock(scope: !2726, file: !851, line: 437, column: 5)
!2748 = !DILocation(line: 439, column: 39, scope: !2746)
!2749 = !DILocation(line: 439, column: 11, scope: !2747)
!2750 = !DILocation(line: 442, column: 9, scope: !2751)
!2751 = distinct !DILexicalBlock(scope: !2746, file: !851, line: 440, column: 7)
!2752 = !DILocation(line: 445, column: 21, scope: !2751)
!2753 = !DILocation(line: 448, column: 9, scope: !2751)
!2754 = !DILocation(line: 448, column: 16, scope: !2751)
!2755 = !DILocation(line: 448, column: 52, scope: !2751)
!2756 = !DILocation(line: 450, column: 16, scope: !2757)
!2757 = distinct !DILexicalBlock(scope: !2758, file: !851, line: 450, column: 15)
!2758 = distinct !DILexicalBlock(scope: !2751, file: !851, line: 449, column: 9)
!2759 = !DILocation(line: 450, column: 30, scope: !2757)
!2760 = !DILocation(line: 450, column: 43, scope: !2757)
!2761 = !DILocation(line: 450, column: 15, scope: !2758)
!2762 = distinct !{!2762, !2753, !2763, !1499, !1500}
!2763 = !DILocation(line: 454, column: 9, scope: !2751)
!2764 = !DILocation(line: 462, column: 9, scope: !2765)
!2765 = distinct !DILexicalBlock(scope: !2746, file: !851, line: 460, column: 7)
!2766 = !DILocation(line: 465, column: 21, scope: !2765)
!2767 = !DILocation(line: 468, column: 9, scope: !2765)
!2768 = !DILocation(line: 468, column: 16, scope: !2765)
!2769 = !DILocation(line: 468, column: 52, scope: !2765)
!2770 = !DILocation(line: 470, column: 16, scope: !2771)
!2771 = distinct !DILexicalBlock(scope: !2772, file: !851, line: 470, column: 15)
!2772 = distinct !DILexicalBlock(scope: !2765, file: !851, line: 469, column: 9)
!2773 = !DILocation(line: 470, column: 30, scope: !2771)
!2774 = !DILocation(line: 470, column: 43, scope: !2771)
!2775 = !DILocation(line: 470, column: 15, scope: !2772)
!2776 = distinct !{!2776, !2767, !2777, !1499, !1500}
!2777 = !DILocation(line: 474, column: 9, scope: !2765)
!2778 = !DILocation(line: 0, scope: !2726)
!2779 = !{!2651, !2487, i64 20}
!2780 = !DILocation(line: 479, column: 28, scope: !2781)
!2781 = distinct !DILexicalBlock(scope: !2611, file: !851, line: 479, column: 7)
!2782 = !DILocation(line: 479, column: 44, scope: !2781)
!2783 = !DILocation(line: 479, column: 70, scope: !2781)
!2784 = !DILocation(line: 479, column: 7, scope: !2611)
!2785 = !DILocation(line: 485, column: 28, scope: !2786)
!2786 = distinct !DILexicalBlock(scope: !2787, file: !851, line: 485, column: 9)
!2787 = distinct !DILexicalBlock(scope: !2781, file: !851, line: 480, column: 3)
!2788 = !{!2651, !2487, i64 24}
!2789 = !DILocation(line: 485, column: 37, scope: !2786)
!2790 = !DILocation(line: 485, column: 9, scope: !2787)
!2791 = !DILocation(line: 488, column: 7, scope: !2792)
!2792 = distinct !DILexicalBlock(scope: !2786, file: !851, line: 486, column: 5)
!2793 = !DILocation(line: 491, column: 19, scope: !2792)
!2794 = !DILocation(line: 494, column: 7, scope: !2792)
!2795 = !DILocation(line: 494, column: 14, scope: !2792)
!2796 = !DILocation(line: 494, column: 50, scope: !2792)
!2797 = !DILocation(line: 496, column: 14, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !2799, file: !851, line: 496, column: 13)
!2799 = distinct !DILexicalBlock(scope: !2792, file: !851, line: 495, column: 7)
!2800 = !DILocation(line: 496, column: 28, scope: !2798)
!2801 = !DILocation(line: 496, column: 41, scope: !2798)
!2802 = !DILocation(line: 496, column: 13, scope: !2799)
!2803 = distinct !{!2803, !2794, !2804, !1499, !1500}
!2804 = !DILocation(line: 500, column: 7, scope: !2792)
!2805 = !DILocation(line: 503, column: 7, scope: !2792)
!2806 = !DILocation(line: 504, column: 5, scope: !2792)
!2807 = !DILocation(line: 508, column: 7, scope: !2808)
!2808 = distinct !DILexicalBlock(scope: !2786, file: !851, line: 506, column: 5)
!2809 = !DILocation(line: 511, column: 19, scope: !2808)
!2810 = !DILocation(line: 514, column: 7, scope: !2808)
!2811 = !DILocation(line: 514, column: 14, scope: !2808)
!2812 = !DILocation(line: 514, column: 50, scope: !2808)
!2813 = !DILocation(line: 516, column: 14, scope: !2814)
!2814 = distinct !DILexicalBlock(scope: !2815, file: !851, line: 516, column: 13)
!2815 = distinct !DILexicalBlock(scope: !2808, file: !851, line: 515, column: 7)
!2816 = !DILocation(line: 516, column: 28, scope: !2814)
!2817 = !DILocation(line: 516, column: 41, scope: !2814)
!2818 = !DILocation(line: 516, column: 13, scope: !2815)
!2819 = distinct !{!2819, !2810, !2820, !1499, !1500}
!2820 = !DILocation(line: 520, column: 7, scope: !2808)
!2821 = !DILocation(line: 524, column: 28, scope: !2638)
!2822 = !DILocation(line: 524, column: 44, scope: !2638)
!2823 = !DILocation(line: 524, column: 70, scope: !2638)
!2824 = !DILocation(line: 524, column: 7, scope: !2611)
!2825 = !DILocation(line: 0, scope: !2637)
!2826 = !DILocation(line: 533, column: 9, scope: !2643)
!2827 = !{!2486, !2487, i64 28}
!2828 = !DILocation(line: 533, column: 9, scope: !2637)
!2829 = !DILocation(line: 535, column: 7, scope: !2641)
!2830 = !DILocation(line: 535, column: 7, scope: !2642)
!2831 = !DILocation(line: 537, column: 5, scope: !2642)
!2832 = !DILocation(line: 539, column: 9, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2637, file: !851, line: 539, column: 9)
!2834 = !{!2835, !2487, i64 0}
!2835 = !{!"", !2487, i64 0, !2487, i64 4}
!2836 = !DILocation(line: 539, column: 9, scope: !2637)
!2837 = !DILocation(line: 542, column: 7, scope: !2838)
!2838 = distinct !DILexicalBlock(scope: !2833, file: !851, line: 540, column: 5)
!2839 = !DILocation(line: 545, column: 19, scope: !2838)
!2840 = !DILocation(line: 547, column: 7, scope: !2838)
!2841 = !DILocation(line: 547, column: 14, scope: !2838)
!2842 = !DILocation(line: 549, column: 14, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2844, file: !851, line: 549, column: 13)
!2844 = distinct !DILexicalBlock(scope: !2838, file: !851, line: 548, column: 7)
!2845 = !DILocation(line: 549, column: 28, scope: !2843)
!2846 = !DILocation(line: 549, column: 41, scope: !2843)
!2847 = !DILocation(line: 549, column: 13, scope: !2844)
!2848 = distinct !{!2848, !2840, !2849, !1499, !1500}
!2849 = !DILocation(line: 553, column: 7, scope: !2838)
!2850 = !DILocation(line: 557, column: 5, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !2852, file: !851, line: 557, column: 5)
!2852 = distinct !DILexicalBlock(scope: !2637, file: !851, line: 557, column: 5)
!2853 = !{!2651, !2487, i64 12}
!2854 = !DILocation(line: 557, column: 5, scope: !2852)
!2855 = !DILocation(line: 557, column: 5, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !2851, file: !851, line: 557, column: 5)
!2857 = !{!2486, !2487, i64 32}
!2858 = !DILocation(line: 557, column: 5, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2860, file: !851, line: 557, column: 5)
!2860 = distinct !DILexicalBlock(scope: !2851, file: !851, line: 557, column: 5)
!2861 = !DILocation(line: 557, column: 5, scope: !2862)
!2862 = distinct !DILexicalBlock(scope: !2863, file: !851, line: 557, column: 5)
!2863 = distinct !DILexicalBlock(scope: !2860, file: !851, line: 557, column: 5)
!2864 = !DILocation(line: 557, column: 5, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !2863, file: !851, line: 557, column: 5)
!2866 = !DILocation(line: 0, scope: !2851)
!2867 = !DILocation(line: 559, column: 37, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2637, file: !851, line: 559, column: 9)
!2869 = !DILocation(line: 0, scope: !2868)
!2870 = !DILocation(line: 559, column: 9, scope: !2637)
!2871 = !DILocation(line: 565, column: 14, scope: !2872)
!2872 = distinct !DILexicalBlock(scope: !2868, file: !851, line: 560, column: 5)
!2873 = !DILocation(line: 565, column: 50, scope: !2872)
!2874 = !DILocation(line: 565, column: 7, scope: !2872)
!2875 = !DILocation(line: 567, column: 14, scope: !2876)
!2876 = distinct !DILexicalBlock(scope: !2877, file: !851, line: 567, column: 13)
!2877 = distinct !DILexicalBlock(scope: !2872, file: !851, line: 566, column: 7)
!2878 = !DILocation(line: 567, column: 28, scope: !2876)
!2879 = !DILocation(line: 567, column: 41, scope: !2876)
!2880 = !DILocation(line: 567, column: 13, scope: !2877)
!2881 = distinct !{!2881, !2874, !2882, !1499, !1500}
!2882 = !DILocation(line: 571, column: 7, scope: !2872)
!2883 = !DILocation(line: 579, column: 14, scope: !2884)
!2884 = distinct !DILexicalBlock(scope: !2868, file: !851, line: 574, column: 5)
!2885 = !DILocation(line: 579, column: 50, scope: !2884)
!2886 = !DILocation(line: 579, column: 7, scope: !2884)
!2887 = !DILocation(line: 581, column: 14, scope: !2888)
!2888 = distinct !DILexicalBlock(scope: !2889, file: !851, line: 581, column: 13)
!2889 = distinct !DILexicalBlock(scope: !2884, file: !851, line: 580, column: 7)
!2890 = !DILocation(line: 581, column: 28, scope: !2888)
!2891 = !DILocation(line: 581, column: 41, scope: !2888)
!2892 = !DILocation(line: 581, column: 13, scope: !2889)
!2893 = distinct !{!2893, !2886, !2894, !1499, !1500}
!2894 = !DILocation(line: 585, column: 7, scope: !2884)
!2895 = !DILocation(line: 589, column: 9, scope: !2637)
!2896 = !DILocation(line: 591, column: 7, scope: !2897)
!2897 = distinct !DILexicalBlock(scope: !2898, file: !851, line: 590, column: 5)
!2898 = distinct !DILexicalBlock(scope: !2637, file: !851, line: 589, column: 9)
!2899 = !DILocation(line: 592, column: 5, scope: !2897)
!2900 = !DILocation(line: 688, column: 31, scope: !2901)
!2901 = distinct !DILexicalBlock(scope: !2611, file: !851, line: 688, column: 7)
!2902 = !{!2651, !2487, i64 28}
!2903 = !DILocation(line: 688, column: 41, scope: !2901)
!2904 = !DILocation(line: 688, column: 7, scope: !2611)
!2905 = !DILocation(line: 691, column: 9, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2907, file: !851, line: 691, column: 9)
!2907 = distinct !DILexicalBlock(scope: !2901, file: !851, line: 689, column: 3)
!2908 = !DILocation(line: 691, column: 39, scope: !2906)
!2909 = !DILocation(line: 691, column: 9, scope: !2907)
!2910 = !DILocation(line: 693, column: 45, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2912, file: !851, line: 693, column: 11)
!2912 = distinct !DILexicalBlock(scope: !2906, file: !851, line: 692, column: 5)
!2913 = !DILocation(line: 0, scope: !2911)
!2914 = !DILocation(line: 693, column: 11, scope: !2912)
!2915 = !DILocation(line: 706, column: 16, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !2911, file: !851, line: 694, column: 7)
!2917 = !DILocation(line: 706, column: 53, scope: !2916)
!2918 = !DILocation(line: 706, column: 9, scope: !2916)
!2919 = !DILocation(line: 708, column: 16, scope: !2920)
!2920 = distinct !DILexicalBlock(scope: !2921, file: !851, line: 708, column: 15)
!2921 = distinct !DILexicalBlock(scope: !2916, file: !851, line: 707, column: 9)
!2922 = !DILocation(line: 708, column: 30, scope: !2920)
!2923 = !DILocation(line: 708, column: 43, scope: !2920)
!2924 = !DILocation(line: 708, column: 15, scope: !2921)
!2925 = distinct !{!2925, !2918, !2926, !1499, !1500}
!2926 = !DILocation(line: 712, column: 9, scope: !2916)
!2927 = !DILocation(line: 716, column: 36, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2916, file: !851, line: 716, column: 13)
!2929 = !{!2651, !2487, i64 32}
!2930 = !DILocation(line: 716, column: 46, scope: !2928)
!2931 = !DILocation(line: 716, column: 13, scope: !2916)
!2932 = !DILocation(line: 728, column: 11, scope: !2933)
!2933 = distinct !DILexicalBlock(scope: !2928, file: !851, line: 717, column: 9)
!2934 = !{!2651, !2487, i64 8}
!2935 = !DILocation(line: 729, column: 9, scope: !2933)
!2936 = !DILocation(line: 732, column: 9, scope: !2916)
!2937 = !{!2651, !2487, i64 36}
!2938 = !DILocation(line: 735, column: 9, scope: !2916)
!2939 = !DILocation(line: 738, column: 21, scope: !2916)
!2940 = !DILocation(line: 741, column: 9, scope: !2916)
!2941 = !DILocation(line: 741, column: 16, scope: !2916)
!2942 = !DILocation(line: 741, column: 53, scope: !2916)
!2943 = !DILocation(line: 743, column: 16, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !2945, file: !851, line: 743, column: 15)
!2945 = distinct !DILexicalBlock(scope: !2916, file: !851, line: 742, column: 9)
!2946 = !DILocation(line: 743, column: 30, scope: !2944)
!2947 = !DILocation(line: 743, column: 43, scope: !2944)
!2948 = !DILocation(line: 743, column: 15, scope: !2945)
!2949 = distinct !{!2949, !2940, !2950, !1499, !1500}
!2950 = !DILocation(line: 747, column: 9, scope: !2916)
!2951 = !DILocation(line: 758, column: 16, scope: !2952)
!2952 = distinct !DILexicalBlock(scope: !2911, file: !851, line: 750, column: 7)
!2953 = !DILocation(line: 758, column: 53, scope: !2952)
!2954 = !DILocation(line: 758, column: 9, scope: !2952)
!2955 = !DILocation(line: 760, column: 16, scope: !2956)
!2956 = distinct !DILexicalBlock(scope: !2957, file: !851, line: 760, column: 15)
!2957 = distinct !DILexicalBlock(scope: !2952, file: !851, line: 759, column: 9)
!2958 = !DILocation(line: 760, column: 30, scope: !2956)
!2959 = !DILocation(line: 760, column: 43, scope: !2956)
!2960 = !DILocation(line: 760, column: 15, scope: !2957)
!2961 = distinct !{!2961, !2954, !2962, !1499, !1500}
!2962 = !DILocation(line: 764, column: 9, scope: !2952)
!2963 = !DILocation(line: 770, column: 45, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !2965, file: !851, line: 770, column: 11)
!2965 = distinct !DILexicalBlock(scope: !2906, file: !851, line: 768, column: 5)
!2966 = !DILocation(line: 770, column: 11, scope: !2965)
!2967 = !DILocation(line: 777, column: 27, scope: !2968)
!2968 = distinct !DILexicalBlock(scope: !2964, file: !851, line: 775, column: 7)
!2969 = !DILocation(line: 778, column: 14, scope: !2970)
!2970 = distinct !DILexicalBlock(scope: !2968, file: !851, line: 778, column: 13)
!2971 = !DILocation(line: 778, column: 78, scope: !2970)
!2972 = !DILocation(line: 778, column: 52, scope: !2970)
!2973 = !DILocation(line: 778, column: 89, scope: !2970)
!2974 = !DILocation(line: 779, column: 14, scope: !2970)
!2975 = !DILocation(line: 779, column: 79, scope: !2970)
!2976 = !DILocation(line: 779, column: 53, scope: !2970)
!2977 = !DILocation(line: 778, column: 13, scope: !2968)
!2978 = !DILocation(line: 787, column: 3, scope: !2611)
!2979 = !DILocation(line: 788, column: 1, scope: !2611)
!2980 = distinct !DISubprogram(name: "RCC_Delay", scope: !851, file: !851, line: 1365, type: !2981, scopeLine: 1366, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !850, retainedNodes: !2983)
!2981 = !DISubroutineType(types: !2982)
!2982 = !{null, !24}
!2983 = !{!2984, !2985}
!2984 = !DILocalVariable(name: "mdelay", arg: 1, scope: !2980, file: !851, line: 1365, type: !24)
!2985 = !DILocalVariable(name: "Delay", scope: !2980, file: !851, line: 1367, type: !23)
!2986 = !DILocation(line: 0, scope: !2980)
!2987 = !DILocation(line: 1367, column: 3, scope: !2980)
!2988 = !DILocation(line: 1367, column: 17, scope: !2980)
!2989 = !DILocation(line: 1367, column: 35, scope: !2980)
!2990 = !DILocation(line: 1367, column: 56, scope: !2980)
!2991 = !DILocation(line: 1368, column: 3, scope: !2980)
!2992 = !DILocation(line: 1370, column: 5, scope: !2993)
!2993 = distinct !DILexicalBlock(scope: !2980, file: !851, line: 1369, column: 3)
!2994 = !{i64 2149488927}
!2995 = !DILocation(line: 1372, column: 16, scope: !2980)
!2996 = !DILocation(line: 1371, column: 3, scope: !2993)
!2997 = distinct !{!2997, !2991, !2998, !1499, !1500}
!2998 = !DILocation(line: 1372, column: 18, scope: !2980)
!2999 = !DILocation(line: 1373, column: 1, scope: !2980)
!3000 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !851, file: !851, line: 813, type: !3001, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !850, retainedNodes: !3012)
!3001 = !DISubroutineType(types: !3002)
!3002 = !{!2541, !3003, !24}
!3003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3004, size: 32)
!3004 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !1366, line: 80, baseType: !3005)
!3005 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1366, line: 64, size: 160, elements: !3006)
!3006 = !{!3007, !3008, !3009, !3010, !3011}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !3005, file: !1366, line: 66, baseType: !24, size: 32)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !3005, file: !1366, line: 69, baseType: !24, size: 32, offset: 32)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !3005, file: !1366, line: 72, baseType: !24, size: 32, offset: 64)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !3005, file: !1366, line: 75, baseType: !24, size: 32, offset: 96)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !3005, file: !1366, line: 78, baseType: !24, size: 32, offset: 128)
!3012 = !{!3013, !3014, !3015}
!3013 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !3000, file: !851, line: 813, type: !3003)
!3014 = !DILocalVariable(name: "FLatency", arg: 2, scope: !3000, file: !851, line: 813, type: !24)
!3015 = !DILocalVariable(name: "tickstart", scope: !3000, file: !851, line: 815, type: !24)
!3016 = !DILocation(line: 0, scope: !3000)
!3017 = !DILocation(line: 818, column: 25, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !3000, file: !851, line: 818, column: 7)
!3019 = !DILocation(line: 818, column: 7, scope: !3000)
!3020 = !DILocation(line: 833, column: 18, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !3000, file: !851, line: 833, column: 7)
!3022 = !{!3023, !2487, i64 0}
!3023 = !{!"", !2487, i64 0, !2487, i64 4, !2487, i64 8, !2487, i64 12, !2487, i64 16, !2487, i64 20, !2487, i64 24, !2487, i64 28, !2487, i64 32}
!3024 = !DILocation(line: 833, column: 16, scope: !3021)
!3025 = !DILocation(line: 833, column: 7, scope: !3000)
!3026 = !DILocation(line: 836, column: 5, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !3021, file: !851, line: 834, column: 3)
!3028 = !DILocation(line: 840, column: 9, scope: !3029)
!3029 = distinct !DILexicalBlock(scope: !3027, file: !851, line: 840, column: 9)
!3030 = !DILocation(line: 840, column: 35, scope: !3029)
!3031 = !DILocation(line: 840, column: 9, scope: !3027)
!3032 = !DILocation(line: 848, column: 26, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !3000, file: !851, line: 848, column: 5)
!3034 = !{!3035, !2487, i64 0}
!3035 = !{!"", !2487, i64 0, !2487, i64 4, !2487, i64 8, !2487, i64 12, !2487, i64 16}
!3036 = !DILocation(line: 848, column: 37, scope: !3033)
!3037 = !DILocation(line: 848, column: 59, scope: !3033)
!3038 = !DILocation(line: 848, column: 5, scope: !3000)
!3039 = !DILocation(line: 852, column: 41, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !3041, file: !851, line: 852, column: 9)
!3041 = distinct !DILexicalBlock(scope: !3033, file: !851, line: 849, column: 3)
!3042 = !DILocation(line: 852, column: 64, scope: !3040)
!3043 = !DILocation(line: 852, column: 9, scope: !3041)
!3044 = !DILocation(line: 854, column: 7, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3040, file: !851, line: 853, column: 5)
!3046 = !DILocation(line: 855, column: 5, scope: !3045)
!3047 = !DILocation(line: 857, column: 41, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3041, file: !851, line: 857, column: 9)
!3049 = !DILocation(line: 857, column: 64, scope: !3048)
!3050 = !DILocation(line: 857, column: 9, scope: !3041)
!3051 = !DILocation(line: 859, column: 7, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3048, file: !851, line: 858, column: 5)
!3053 = !DILocation(line: 860, column: 5, scope: !3052)
!3054 = !DILocation(line: 864, column: 5, scope: !3041)
!3055 = !{!3035, !2487, i64 8}
!3056 = !DILocation(line: 865, column: 3, scope: !3041)
!3057 = !DILocation(line: 868, column: 39, scope: !3058)
!3058 = distinct !DILexicalBlock(scope: !3000, file: !851, line: 868, column: 7)
!3059 = !DILocation(line: 868, column: 63, scope: !3058)
!3060 = !DILocation(line: 868, column: 7, scope: !3000)
!3061 = !DILocation(line: 873, column: 28, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3063, file: !851, line: 873, column: 9)
!3063 = distinct !DILexicalBlock(scope: !3058, file: !851, line: 869, column: 3)
!3064 = !{!3035, !2487, i64 4}
!3065 = !DILocation(line: 873, column: 9, scope: !3063)
!3066 = !DILocation(line: 876, column: 11, scope: !3067)
!3067 = distinct !DILexicalBlock(scope: !3068, file: !851, line: 876, column: 11)
!3068 = distinct !DILexicalBlock(scope: !3062, file: !851, line: 874, column: 5)
!3069 = !DILocation(line: 876, column: 47, scope: !3067)
!3070 = !DILocation(line: 876, column: 11, scope: !3068)
!3071 = !DILocation(line: 885, column: 11, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !3073, file: !851, line: 885, column: 11)
!3073 = distinct !DILexicalBlock(scope: !3074, file: !851, line: 883, column: 5)
!3074 = distinct !DILexicalBlock(scope: !3062, file: !851, line: 882, column: 14)
!3075 = !DILocation(line: 885, column: 47, scope: !3072)
!3076 = !DILocation(line: 885, column: 11, scope: !3073)
!3077 = !DILocation(line: 894, column: 11, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3079, file: !851, line: 894, column: 11)
!3079 = distinct !DILexicalBlock(scope: !3074, file: !851, line: 892, column: 5)
!3080 = !DILocation(line: 894, column: 47, scope: !3078)
!3081 = !DILocation(line: 894, column: 11, scope: !3079)
!3082 = !DILocation(line: 899, column: 5, scope: !3063)
!3083 = !DILocation(line: 902, column: 17, scope: !3063)
!3084 = !DILocation(line: 904, column: 5, scope: !3063)
!3085 = !DILocation(line: 904, column: 12, scope: !3063)
!3086 = !DILocation(line: 904, column: 65, scope: !3063)
!3087 = !DILocation(line: 904, column: 78, scope: !3063)
!3088 = !DILocation(line: 904, column: 42, scope: !3063)
!3089 = !DILocation(line: 906, column: 12, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3091, file: !851, line: 906, column: 11)
!3091 = distinct !DILexicalBlock(scope: !3063, file: !851, line: 905, column: 5)
!3092 = !DILocation(line: 906, column: 26, scope: !3090)
!3093 = !DILocation(line: 906, column: 39, scope: !3090)
!3094 = !DILocation(line: 906, column: 11, scope: !3091)
!3095 = distinct !{!3095, !3084, !3096, !1499, !1500}
!3096 = !DILocation(line: 910, column: 5, scope: !3063)
!3097 = !DILocation(line: 915, column: 18, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !3000, file: !851, line: 915, column: 7)
!3099 = !DILocation(line: 915, column: 16, scope: !3098)
!3100 = !DILocation(line: 915, column: 7, scope: !3000)
!3101 = !DILocation(line: 918, column: 5, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3098, file: !851, line: 916, column: 3)
!3103 = !DILocation(line: 922, column: 9, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3102, file: !851, line: 922, column: 9)
!3105 = !DILocation(line: 922, column: 35, scope: !3104)
!3106 = !DILocation(line: 922, column: 9, scope: !3102)
!3107 = !DILocation(line: 930, column: 26, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3000, file: !851, line: 930, column: 5)
!3109 = !DILocation(line: 930, column: 37, scope: !3108)
!3110 = !DILocation(line: 930, column: 60, scope: !3108)
!3111 = !DILocation(line: 930, column: 5, scope: !3000)
!3112 = !DILocation(line: 933, column: 5, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3108, file: !851, line: 931, column: 3)
!3114 = !{!3035, !2487, i64 12}
!3115 = !DILocation(line: 934, column: 3, scope: !3113)
!3116 = !DILocation(line: 937, column: 39, scope: !3117)
!3117 = distinct !DILexicalBlock(scope: !3000, file: !851, line: 937, column: 7)
!3118 = !DILocation(line: 937, column: 62, scope: !3117)
!3119 = !DILocation(line: 937, column: 7, scope: !3000)
!3120 = !DILocation(line: 940, column: 5, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3117, file: !851, line: 938, column: 3)
!3122 = !{!3035, !2487, i64 16}
!3123 = !DILocation(line: 941, column: 3, scope: !3121)
!3124 = !DILocation(line: 944, column: 21, scope: !3000)
!3125 = !DILocation(line: 944, column: 70, scope: !3000)
!3126 = !DILocation(line: 944, column: 92, scope: !3000)
!3127 = !DILocation(line: 944, column: 50, scope: !3000)
!3128 = !DILocation(line: 944, column: 47, scope: !3000)
!3129 = !DILocation(line: 944, column: 19, scope: !3000)
!3130 = !DILocation(line: 947, column: 16, scope: !3000)
!3131 = !DILocation(line: 947, column: 3, scope: !3000)
!3132 = !DILocation(line: 949, column: 3, scope: !3000)
!3133 = !DILocation(line: 950, column: 1, scope: !3000)
!3134 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !851, file: !851, line: 1082, type: !1019, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !850, retainedNodes: !3135)
!3135 = !{!3136, !3137, !3139, !3140, !3141, !3142, !3143}
!3136 = !DILocalVariable(name: "aPLLMULFactorTable", scope: !3134, file: !851, line: 1088, type: !523)
!3137 = !DILocalVariable(name: "aPredivFactorTable", scope: !3134, file: !851, line: 1092, type: !3138)
!3138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !44, size: 16, elements: !500)
!3139 = !DILocalVariable(name: "tmpreg", scope: !3134, file: !851, line: 1096, type: !24)
!3140 = !DILocalVariable(name: "prediv", scope: !3134, file: !851, line: 1096, type: !24)
!3141 = !DILocalVariable(name: "pllclk", scope: !3134, file: !851, line: 1096, type: !24)
!3142 = !DILocalVariable(name: "pllmul", scope: !3134, file: !851, line: 1096, type: !24)
!3143 = !DILocalVariable(name: "sysclockfreq", scope: !3134, file: !851, line: 1097, type: !24)
!3144 = !DILocation(line: 1088, column: 17, scope: !3134)
!3145 = !DILocation(line: 1092, column: 17, scope: !3134)
!3146 = !DILocation(line: 0, scope: !3134)
!3147 = !DILocation(line: 1102, column: 17, scope: !3134)
!3148 = !DILocation(line: 1105, column: 18, scope: !3134)
!3149 = !DILocation(line: 1105, column: 3, scope: !3134)
!3150 = !DILocation(line: 1114, column: 73, scope: !3151)
!3151 = distinct !DILexicalBlock(scope: !3152, file: !851, line: 1113, column: 5)
!3152 = distinct !DILexicalBlock(scope: !3134, file: !851, line: 1106, column: 3)
!3153 = !DILocation(line: 1114, column: 16, scope: !3151)
!3154 = !DILocation(line: 1115, column: 19, scope: !3155)
!3155 = distinct !DILexicalBlock(scope: !3151, file: !851, line: 1115, column: 11)
!3156 = !DILocation(line: 1115, column: 38, scope: !3155)
!3157 = !DILocation(line: 1115, column: 11, scope: !3151)
!3158 = !DILocation(line: 1120, column: 53, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3155, file: !851, line: 1116, column: 7)
!3160 = !DILocation(line: 1120, column: 79, scope: !3159)
!3161 = !DILocation(line: 1120, column: 18, scope: !3159)
!3162 = !DILocation(line: 1146, column: 41, scope: !3159)
!3163 = !DILocation(line: 1146, column: 51, scope: !3159)
!3164 = !DILocation(line: 1148, column: 7, scope: !3159)
!3165 = !DILocation(line: 1152, column: 46, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3155, file: !851, line: 1150, column: 7)
!3167 = !DILocation(line: 0, scope: !3152)
!3168 = !DILocation(line: 1164, column: 3, scope: !3134)
!3169 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !851, file: !851, line: 1002, type: !3170, scopeLine: 1003, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !850, retainedNodes: !3172)
!3170 = !DISubroutineType(types: !3171)
!3171 = !{null, !24, !24, !24}
!3172 = !{!3173, !3174, !3175, !3176, !3184}
!3173 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !3169, file: !851, line: 1002, type: !24)
!3174 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !3169, file: !851, line: 1002, type: !24)
!3175 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !3169, file: !851, line: 1002, type: !24)
!3176 = !DILocalVariable(name: "gpio", scope: !3169, file: !851, line: 1004, type: !3177)
!3177 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !962, line: 60, baseType: !3178)
!3178 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !962, line: 47, size: 128, elements: !3179)
!3179 = !{!3180, !3181, !3182, !3183}
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !3178, file: !962, line: 49, baseType: !24, size: 32)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !3178, file: !962, line: 52, baseType: !24, size: 32, offset: 32)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !3178, file: !962, line: 55, baseType: !24, size: 32, offset: 64)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !3178, file: !962, line: 58, baseType: !24, size: 32, offset: 96)
!3184 = !DILocalVariable(name: "tmpreg", scope: !3185, file: !851, line: 1022, type: !23)
!3185 = distinct !DILexicalBlock(scope: !3169, file: !851, line: 1022, column: 3)
!3186 = !DILocation(line: 0, scope: !3169)
!3187 = !DILocation(line: 1004, column: 3, scope: !3169)
!3188 = !DILocation(line: 1004, column: 20, scope: !3169)
!3189 = !DILocation(line: 1016, column: 8, scope: !3169)
!3190 = !DILocation(line: 1016, column: 18, scope: !3169)
!3191 = !{!3192, !2487, i64 4}
!3192 = !{!"", !2487, i64 0, !2487, i64 4, !2487, i64 8, !2487, i64 12}
!3193 = !DILocation(line: 1017, column: 8, scope: !3169)
!3194 = !DILocation(line: 1017, column: 18, scope: !3169)
!3195 = !{!3192, !2487, i64 12}
!3196 = !DILocation(line: 1018, column: 8, scope: !3169)
!3197 = !DILocation(line: 1018, column: 18, scope: !3169)
!3198 = !{!3192, !2487, i64 8}
!3199 = !DILocation(line: 1019, column: 8, scope: !3169)
!3200 = !DILocation(line: 1019, column: 18, scope: !3169)
!3201 = !{!3192, !2487, i64 0}
!3202 = !DILocation(line: 1022, column: 3, scope: !3185)
!3203 = !{!2486, !2487, i64 24}
!3204 = !DILocation(line: 1022, column: 3, scope: !3169)
!3205 = !DILocation(line: 1024, column: 3, scope: !3169)
!3206 = !DILocation(line: 1027, column: 3, scope: !3169)
!3207 = !DILocation(line: 1028, column: 1, scope: !3169)
!3208 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !851, file: !851, line: 1039, type: !4, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !850, retainedNodes: !202)
!3209 = !DILocation(line: 1041, column: 38, scope: !3208)
!3210 = !DILocation(line: 1042, column: 1, scope: !3208)
!3211 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !851, file: !851, line: 1048, type: !4, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !850, retainedNodes: !202)
!3212 = !DILocation(line: 1050, column: 38, scope: !3211)
!3213 = !DILocation(line: 1051, column: 1, scope: !3211)
!3214 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !851, file: !851, line: 1176, type: !1019, scopeLine: 1177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !850, retainedNodes: !202)
!3215 = !DILocation(line: 1178, column: 10, scope: !3214)
!3216 = !DILocation(line: 1178, column: 3, scope: !3214)
!3217 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !851, file: !851, line: 1187, type: !1019, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !850, retainedNodes: !202)
!3218 = !DILocation(line: 1190, column: 11, scope: !3217)
!3219 = !DILocation(line: 1190, column: 56, scope: !3217)
!3220 = !DILocation(line: 1190, column: 79, scope: !3217)
!3221 = !DILocation(line: 1190, column: 36, scope: !3217)
!3222 = !DILocation(line: 1190, column: 33, scope: !3217)
!3223 = !DILocation(line: 1190, column: 3, scope: !3217)
!3224 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !851, file: !851, line: 1199, type: !1019, scopeLine: 1200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !850, retainedNodes: !202)
!3225 = !DILocation(line: 1202, column: 11, scope: !3224)
!3226 = !DILocation(line: 1202, column: 56, scope: !3224)
!3227 = !DILocation(line: 1202, column: 79, scope: !3224)
!3228 = !DILocation(line: 1202, column: 36, scope: !3224)
!3229 = !DILocation(line: 1202, column: 33, scope: !3224)
!3230 = !DILocation(line: 1202, column: 3, scope: !3224)
!3231 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !851, file: !851, line: 1212, type: !3232, scopeLine: 1213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !850, retainedNodes: !3234)
!3232 = !DISubroutineType(types: !3233)
!3233 = !{null, !2614}
!3234 = !{!3235}
!3235 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !3231, file: !851, line: 1212, type: !2614)
!3236 = !DILocation(line: 0, scope: !3231)
!3237 = !DILocation(line: 1218, column: 22, scope: !3231)
!3238 = !DILocation(line: 1218, column: 37, scope: !3231)
!3239 = !DILocation(line: 1227, column: 13, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3231, file: !851, line: 1227, column: 7)
!3241 = !DILocation(line: 1227, column: 16, scope: !3240)
!3242 = !DILocation(line: 1227, column: 33, scope: !3240)
!3243 = !DILocation(line: 1227, column: 7, scope: !3231)
!3244 = !DILocation(line: 1229, column: 24, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3240, file: !851, line: 1228, column: 3)
!3246 = !DILocation(line: 1229, column: 33, scope: !3245)
!3247 = !DILocation(line: 1230, column: 3, scope: !3245)
!3248 = !DILocation(line: 1231, column: 18, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3240, file: !851, line: 1231, column: 12)
!3250 = !DILocation(line: 1231, column: 21, scope: !3249)
!3251 = !DILocation(line: 1231, column: 37, scope: !3249)
!3252 = !DILocation(line: 0, scope: !3249)
!3253 = !DILocation(line: 1231, column: 12, scope: !3240)
!3254 = !DILocation(line: 1233, column: 33, scope: !3255)
!3255 = distinct !DILexicalBlock(scope: !3249, file: !851, line: 1232, column: 3)
!3256 = !DILocation(line: 1234, column: 3, scope: !3255)
!3257 = !DILocation(line: 1237, column: 33, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3249, file: !851, line: 1236, column: 3)
!3259 = !DILocation(line: 1239, column: 39, scope: !3231)
!3260 = !DILocation(line: 1239, column: 22, scope: !3231)
!3261 = !DILocation(line: 1239, column: 37, scope: !3231)
!3262 = !DILocation(line: 1242, column: 13, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3231, file: !851, line: 1242, column: 7)
!3264 = !DILocation(line: 1242, column: 16, scope: !3263)
!3265 = !DILocation(line: 0, scope: !3263)
!3266 = !DILocation(line: 1251, column: 61, scope: !3231)
!3267 = !DILocation(line: 1251, column: 82, scope: !3231)
!3268 = !DILocation(line: 1251, column: 22, scope: !3231)
!3269 = !DILocation(line: 1251, column: 42, scope: !3231)
!3270 = !DILocation(line: 1254, column: 13, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !3231, file: !851, line: 1254, column: 7)
!3272 = !DILocation(line: 1254, column: 18, scope: !3271)
!3273 = !DILocation(line: 1254, column: 37, scope: !3271)
!3274 = !DILocation(line: 1254, column: 7, scope: !3231)
!3275 = !DILocation(line: 1256, column: 24, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3271, file: !851, line: 1255, column: 3)
!3277 = !DILocation(line: 1256, column: 33, scope: !3276)
!3278 = !DILocation(line: 1257, column: 3, scope: !3276)
!3279 = !DILocation(line: 1258, column: 18, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3271, file: !851, line: 1258, column: 12)
!3281 = !DILocation(line: 1258, column: 23, scope: !3280)
!3282 = !DILocation(line: 1258, column: 41, scope: !3280)
!3283 = !DILocation(line: 0, scope: !3280)
!3284 = !DILocation(line: 1258, column: 12, scope: !3271)
!3285 = !DILocation(line: 1260, column: 33, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3280, file: !851, line: 1259, column: 3)
!3287 = !DILocation(line: 1261, column: 3, scope: !3286)
!3288 = !DILocation(line: 1264, column: 33, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3280, file: !851, line: 1263, column: 3)
!3290 = !DILocation(line: 1268, column: 13, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3231, file: !851, line: 1268, column: 7)
!3292 = !DILocation(line: 1268, column: 17, scope: !3291)
!3293 = !DILocation(line: 0, scope: !3291)
!3294 = !DILocation(line: 1279, column: 13, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3231, file: !851, line: 1279, column: 7)
!3296 = !DILocation(line: 1279, column: 16, scope: !3295)
!3297 = !DILocation(line: 1279, column: 32, scope: !3295)
!3298 = !DILocation(line: 1279, column: 7, scope: !3231)
!3299 = !DILocation(line: 0, scope: !3295)
!3300 = !DILocation(line: 1287, column: 54, scope: !3231)
!3301 = !DILocation(line: 1287, column: 59, scope: !3231)
!3302 = !DILocation(line: 1287, column: 26, scope: !3231)
!3303 = !DILocation(line: 1287, column: 36, scope: !3231)
!3304 = !DILocation(line: 1288, column: 51, scope: !3231)
!3305 = !DILocation(line: 1288, column: 56, scope: !3231)
!3306 = !DILocation(line: 1288, column: 26, scope: !3231)
!3307 = !DILocation(line: 1288, column: 33, scope: !3231)
!3308 = !DILocation(line: 1302, column: 1, scope: !3231)
!3309 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !851, file: !851, line: 1312, type: !3310, scopeLine: 1313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !850, retainedNodes: !3312)
!3310 = !DISubroutineType(types: !3311)
!3311 = !{null, !3003, !640}
!3312 = !{!3313, !3314}
!3313 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !3309, file: !851, line: 1312, type: !3003)
!3314 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !3309, file: !851, line: 1312, type: !640)
!3315 = !DILocation(line: 0, scope: !3309)
!3316 = !DILocation(line: 1319, column: 22, scope: !3309)
!3317 = !DILocation(line: 1319, column: 32, scope: !3309)
!3318 = !DILocation(line: 1322, column: 53, scope: !3309)
!3319 = !DILocation(line: 1322, column: 58, scope: !3309)
!3320 = !DILocation(line: 1322, column: 22, scope: !3309)
!3321 = !DILocation(line: 1322, column: 35, scope: !3309)
!3322 = !DILocation(line: 1325, column: 54, scope: !3309)
!3323 = !DILocation(line: 1325, column: 59, scope: !3309)
!3324 = !DILocation(line: 1325, column: 22, scope: !3309)
!3325 = !DILocation(line: 1325, column: 36, scope: !3309)
!3326 = !DILocation(line: 1328, column: 55, scope: !3309)
!3327 = !DILocation(line: 1328, column: 60, scope: !3309)
!3328 = !DILocation(line: 1328, column: 22, scope: !3309)
!3329 = !DILocation(line: 1328, column: 37, scope: !3309)
!3330 = !DILocation(line: 1331, column: 56, scope: !3309)
!3331 = !DILocation(line: 1331, column: 79, scope: !3309)
!3332 = !DILocation(line: 1331, column: 22, scope: !3309)
!3333 = !DILocation(line: 1331, column: 37, scope: !3309)
!3334 = !DILocation(line: 1335, column: 34, scope: !3309)
!3335 = !DILocation(line: 1335, column: 38, scope: !3309)
!3336 = !DILocation(line: 1335, column: 14, scope: !3309)
!3337 = !DILocation(line: 1340, column: 1, scope: !3309)
!3338 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !851, file: !851, line: 1347, type: !4, scopeLine: 1348, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !850, retainedNodes: !202)
!3339 = !DILocation(line: 1350, column: 7, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3338, file: !851, line: 1350, column: 7)
!3341 = !DILocation(line: 1350, column: 7, scope: !3338)
!3342 = !DILocation(line: 1353, column: 5, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3340, file: !851, line: 1351, column: 3)
!3344 = !DILocation(line: 1356, column: 5, scope: !3343)
!3345 = !DILocation(line: 1357, column: 3, scope: !3343)
!3346 = !DILocation(line: 1358, column: 1, scope: !3338)
!3347 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !851, file: !851, line: 1379, type: !4, scopeLine: 1380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !850, retainedNodes: !202)
!3348 = !DILocation(line: 1384, column: 1, scope: !3347)
!3349 = distinct !DISubprogram(name: "HAL_Init", scope: !529, file: !529, line: 142, type: !2539, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !202)
!3350 = !DILocation(line: 152, column: 3, scope: !3349)
!3351 = !DILocation(line: 157, column: 3, scope: !3349)
!3352 = !DILocation(line: 160, column: 3, scope: !3349)
!3353 = !DILocation(line: 163, column: 3, scope: !3349)
!3354 = !DILocation(line: 166, column: 3, scope: !3349)
!3355 = distinct !DISubprogram(name: "HAL_InitTick", scope: !529, file: !529, line: 234, type: !3356, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !3358)
!3356 = !DISubroutineType(types: !3357)
!3357 = !{!2541, !24}
!3358 = !{!3359}
!3359 = !DILocalVariable(name: "TickPriority", arg: 1, scope: !3355, file: !529, line: 234, type: !24)
!3360 = !DILocation(line: 0, scope: !3355)
!3361 = !DILocation(line: 237, column: 26, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3355, file: !529, line: 237, column: 7)
!3363 = !DILocation(line: 237, column: 53, scope: !3362)
!3364 = !DILocation(line: 237, column: 51, scope: !3362)
!3365 = !DILocation(line: 237, column: 42, scope: !3362)
!3366 = !DILocation(line: 237, column: 7, scope: !3362)
!3367 = !DILocation(line: 237, column: 66, scope: !3362)
!3368 = !DILocation(line: 237, column: 7, scope: !3355)
!3369 = !DILocation(line: 245, column: 5, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3371, file: !529, line: 244, column: 3)
!3371 = distinct !DILexicalBlock(scope: !3355, file: !529, line: 243, column: 7)
!3372 = !DILocation(line: 246, column: 16, scope: !3370)
!3373 = !DILocation(line: 254, column: 3, scope: !3355)
!3374 = !DILocation(line: 255, column: 1, scope: !3355)
!3375 = distinct !DISubprogram(name: "HAL_MspInit", scope: !529, file: !529, line: 200, type: !4, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !202)
!3376 = !DILocation(line: 205, column: 1, scope: !3375)
!3377 = distinct !DISubprogram(name: "HAL_DeInit", scope: !529, file: !529, line: 175, type: !2539, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !202)
!3378 = !DILocation(line: 178, column: 3, scope: !3377)
!3379 = !{!2486, !2487, i64 12}
!3380 = !DILocation(line: 179, column: 3, scope: !3377)
!3381 = !{!2486, !2487, i64 16}
!3382 = !DILocation(line: 181, column: 3, scope: !3377)
!3383 = !DILocation(line: 182, column: 3, scope: !3377)
!3384 = !DILocation(line: 190, column: 3, scope: !3377)
!3385 = !DILocation(line: 193, column: 3, scope: !3377)
!3386 = distinct !DISubprogram(name: "HAL_MspDeInit", scope: !529, file: !529, line: 211, type: !4, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !202)
!3387 = !DILocation(line: 216, column: 1, scope: !3386)
!3388 = distinct !DISubprogram(name: "HAL_IncTick", scope: !529, file: !529, line: 293, type: !4, scopeLine: 294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !202)
!3389 = !DILocation(line: 295, column: 13, scope: !3388)
!3390 = !DILocation(line: 295, column: 10, scope: !3388)
!3391 = !DILocation(line: 296, column: 1, scope: !3388)
!3392 = distinct !DISubprogram(name: "HAL_GetTick", scope: !529, file: !529, line: 304, type: !1019, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !202)
!3393 = !DILocation(line: 306, column: 10, scope: !3392)
!3394 = !DILocation(line: 306, column: 3, scope: !3392)
!3395 = distinct !DISubprogram(name: "HAL_GetTickPrio", scope: !529, file: !529, line: 313, type: !1019, scopeLine: 314, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !202)
!3396 = !DILocation(line: 315, column: 10, scope: !3395)
!3397 = !DILocation(line: 315, column: 3, scope: !3395)
!3398 = distinct !DISubprogram(name: "HAL_SetTickFreq", scope: !529, file: !529, line: 322, type: !3399, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !3401)
!3399 = !DISubroutineType(types: !3400)
!3400 = !{!2541, !644}
!3401 = !{!3402, !3403}
!3402 = !DILocalVariable(name: "Freq", arg: 1, scope: !3398, file: !529, line: 322, type: !644)
!3403 = !DILocalVariable(name: "status", scope: !3398, file: !529, line: 324, type: !2541)
!3404 = !DILocation(line: 0, scope: !3398)
!3405 = !DILocation(line: 327, column: 7, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3398, file: !529, line: 327, column: 7)
!3407 = !DILocation(line: 327, column: 18, scope: !3406)
!3408 = !DILocation(line: 327, column: 7, scope: !3398)
!3409 = !DILocation(line: 330, column: 27, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3406, file: !529, line: 328, column: 3)
!3411 = !DILocation(line: 330, column: 14, scope: !3410)
!3412 = !DILocation(line: 331, column: 16, scope: !3413)
!3413 = distinct !DILexicalBlock(scope: !3410, file: !529, line: 331, column: 9)
!3414 = !DILocation(line: 331, column: 9, scope: !3410)
!3415 = !DILocation(line: 333, column: 18, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3413, file: !529, line: 332, column: 5)
!3417 = !DILocation(line: 334, column: 5, scope: !3416)
!3418 = !DILocation(line: 337, column: 3, scope: !3398)
!3419 = distinct !DISubprogram(name: "HAL_GetTickFreq", scope: !529, file: !529, line: 344, type: !3420, scopeLine: 345, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !202)
!3420 = !DISubroutineType(types: !3421)
!3421 = !{!644}
!3422 = !DILocation(line: 346, column: 10, scope: !3419)
!3423 = !DILocation(line: 346, column: 3, scope: !3419)
!3424 = distinct !DISubprogram(name: "HAL_Delay", scope: !529, file: !529, line: 360, type: !2981, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !3425)
!3425 = !{!3426, !3427, !3428}
!3426 = !DILocalVariable(name: "Delay", arg: 1, scope: !3424, file: !529, line: 360, type: !24)
!3427 = !DILocalVariable(name: "tickstart", scope: !3424, file: !529, line: 362, type: !24)
!3428 = !DILocalVariable(name: "wait", scope: !3424, file: !529, line: 363, type: !24)
!3429 = !DILocation(line: 0, scope: !3424)
!3430 = !DILocation(line: 362, column: 24, scope: !3424)
!3431 = !DILocation(line: 366, column: 12, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3424, file: !529, line: 366, column: 7)
!3433 = !DILocation(line: 366, column: 7, scope: !3424)
!3434 = !DILocation(line: 371, column: 3, scope: !3424)
!3435 = !DILocation(line: 371, column: 11, scope: !3424)
!3436 = !DILocation(line: 371, column: 25, scope: !3424)
!3437 = !DILocation(line: 371, column: 38, scope: !3424)
!3438 = distinct !{!3438, !3434, !3439, !1499, !1500}
!3439 = !DILocation(line: 373, column: 3, scope: !3424)
!3440 = !DILocation(line: 374, column: 1, scope: !3424)
!3441 = distinct !DISubprogram(name: "HAL_SuspendTick", scope: !529, file: !529, line: 386, type: !4, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !202)
!3442 = !DILocation(line: 389, column: 3, scope: !3441)
!3443 = !DILocation(line: 390, column: 1, scope: !3441)
!3444 = distinct !DISubprogram(name: "HAL_ResumeTick", scope: !529, file: !529, line: 402, type: !4, scopeLine: 403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !202)
!3445 = !DILocation(line: 405, column: 3, scope: !3444)
!3446 = !DILocation(line: 406, column: 1, scope: !3444)
!3447 = distinct !DISubprogram(name: "HAL_GetHalVersion", scope: !529, file: !529, line: 412, type: !1019, scopeLine: 413, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !202)
!3448 = !DILocation(line: 414, column: 3, scope: !3447)
!3449 = distinct !DISubprogram(name: "HAL_GetREVID", scope: !529, file: !529, line: 428, type: !1019, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !202)
!3450 = !DILocation(line: 430, column: 20, scope: !3449)
!3451 = !DILocation(line: 430, column: 28, scope: !3449)
!3452 = !DILocation(line: 430, column: 3, scope: !3449)
!3453 = distinct !DISubprogram(name: "HAL_GetDEVID", scope: !529, file: !529, line: 444, type: !1019, scopeLine: 445, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !202)
!3454 = !DILocation(line: 446, column: 20, scope: !3453)
!3455 = !DILocation(line: 446, column: 28, scope: !3453)
!3456 = !DILocation(line: 446, column: 3, scope: !3453)
!3457 = distinct !DISubprogram(name: "HAL_GetUIDw0", scope: !529, file: !529, line: 453, type: !1019, scopeLine: 454, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !202)
!3458 = !DILocation(line: 455, column: 11, scope: !3457)
!3459 = !DILocation(line: 455, column: 4, scope: !3457)
!3460 = distinct !DISubprogram(name: "HAL_GetUIDw1", scope: !529, file: !529, line: 462, type: !1019, scopeLine: 463, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !202)
!3461 = !DILocation(line: 464, column: 11, scope: !3460)
!3462 = !DILocation(line: 464, column: 4, scope: !3460)
!3463 = distinct !DISubprogram(name: "HAL_GetUIDw2", scope: !529, file: !529, line: 471, type: !1019, scopeLine: 472, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !202)
!3464 = !DILocation(line: 473, column: 11, scope: !3463)
!3465 = !DILocation(line: 473, column: 4, scope: !3463)
!3466 = distinct !DISubprogram(name: "HAL_DBGMCU_EnableDBGSleepMode", scope: !529, file: !529, line: 480, type: !4, scopeLine: 481, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !202)
!3467 = !DILocation(line: 482, column: 3, scope: !3466)
!3468 = !{!2835, !2487, i64 4}
!3469 = !DILocation(line: 483, column: 1, scope: !3466)
!3470 = distinct !DISubprogram(name: "HAL_DBGMCU_DisableDBGSleepMode", scope: !529, file: !529, line: 496, type: !4, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !202)
!3471 = !DILocation(line: 498, column: 3, scope: !3470)
!3472 = !DILocation(line: 499, column: 1, scope: !3470)
!3473 = distinct !DISubprogram(name: "HAL_DBGMCU_EnableDBGStopMode", scope: !529, file: !529, line: 526, type: !4, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !202)
!3474 = !DILocation(line: 528, column: 3, scope: !3473)
!3475 = !DILocation(line: 529, column: 1, scope: !3473)
!3476 = distinct !DISubprogram(name: "HAL_DBGMCU_DisableDBGStopMode", scope: !529, file: !529, line: 542, type: !4, scopeLine: 543, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !202)
!3477 = !DILocation(line: 544, column: 3, scope: !3476)
!3478 = !DILocation(line: 545, column: 1, scope: !3476)
!3479 = distinct !DISubprogram(name: "HAL_DBGMCU_EnableDBGStandbyMode", scope: !529, file: !529, line: 558, type: !4, scopeLine: 559, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !202)
!3480 = !DILocation(line: 560, column: 3, scope: !3479)
!3481 = !DILocation(line: 561, column: 1, scope: !3479)
!3482 = distinct !DISubprogram(name: "HAL_DBGMCU_DisableDBGStandbyMode", scope: !529, file: !529, line: 574, type: !4, scopeLine: 575, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !202)
!3483 = !DILocation(line: 576, column: 3, scope: !3482)
!3484 = !DILocation(line: 577, column: 1, scope: !3482)
!3485 = distinct !DISubprogram(name: "HAL_NVIC_SetPriorityGrouping", scope: !905, file: !905, line: 143, type: !2981, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !3486)
!3486 = !{!3487}
!3487 = !DILocalVariable(name: "PriorityGroup", arg: 1, scope: !3485, file: !905, line: 143, type: !24)
!3488 = !DILocation(line: 0, scope: !3485)
!3489 = !DILocation(line: 149, column: 3, scope: !3485)
!3490 = !DILocation(line: 150, column: 1, scope: !3485)
!3491 = distinct !DISubprogram(name: "__NVIC_SetPriorityGrouping", scope: !476, file: !476, line: 1480, type: !2981, scopeLine: 1481, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !3492)
!3492 = !{!3493, !3494, !3495}
!3493 = !DILocalVariable(name: "PriorityGroup", arg: 1, scope: !3491, file: !476, line: 1480, type: !24)
!3494 = !DILocalVariable(name: "reg_value", scope: !3491, file: !476, line: 1482, type: !24)
!3495 = !DILocalVariable(name: "PriorityGroupTmp", scope: !3491, file: !476, line: 1483, type: !24)
!3496 = !DILocation(line: 0, scope: !3491)
!3497 = !DILocation(line: 1485, column: 22, scope: !3491)
!3498 = !{!2497, !2487, i64 12}
!3499 = !DILocation(line: 1486, column: 13, scope: !3491)
!3500 = !DILocation(line: 1489, column: 35, scope: !3491)
!3501 = !DILocation(line: 1488, column: 62, scope: !3491)
!3502 = !DILocation(line: 1490, column: 14, scope: !3491)
!3503 = !DILocation(line: 1491, column: 1, scope: !3491)
!3504 = distinct !DISubprogram(name: "HAL_NVIC_SetPriority", scope: !905, file: !905, line: 165, type: !3505, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !3508)
!3505 = !DISubroutineType(types: !3506)
!3506 = !{null, !3507, !24, !24}
!3507 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !19, line: 126, baseType: !544)
!3508 = !{!3509, !3510, !3511, !3512}
!3509 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3504, file: !905, line: 165, type: !3507)
!3510 = !DILocalVariable(name: "PreemptPriority", arg: 2, scope: !3504, file: !905, line: 165, type: !24)
!3511 = !DILocalVariable(name: "SubPriority", arg: 3, scope: !3504, file: !905, line: 165, type: !24)
!3512 = !DILocalVariable(name: "prioritygroup", scope: !3504, file: !905, line: 167, type: !24)
!3513 = !DILocation(line: 0, scope: !3504)
!3514 = !DILocation(line: 173, column: 19, scope: !3504)
!3515 = !{i32 0, i32 8}
!3516 = !DILocation(line: 175, column: 26, scope: !3504)
!3517 = !DILocation(line: 175, column: 3, scope: !3504)
!3518 = !DILocation(line: 176, column: 1, scope: !3504)
!3519 = distinct !DISubprogram(name: "__NVIC_GetPriorityGrouping", scope: !476, file: !476, line: 1499, type: !1019, scopeLine: 1500, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !202)
!3520 = !DILocation(line: 1501, column: 28, scope: !3519)
!3521 = !DILocation(line: 1501, column: 60, scope: !3519)
!3522 = !DILocation(line: 1501, column: 3, scope: !3519)
!3523 = distinct !DISubprogram(name: "NVIC_EncodePriority", scope: !476, file: !476, line: 1686, type: !3524, scopeLine: 1687, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !3526)
!3524 = !DISubroutineType(types: !3525)
!3525 = !{!24, !24, !24, !24}
!3526 = !{!3527, !3528, !3529, !3530, !3531, !3532}
!3527 = !DILocalVariable(name: "PriorityGroup", arg: 1, scope: !3523, file: !476, line: 1686, type: !24)
!3528 = !DILocalVariable(name: "PreemptPriority", arg: 2, scope: !3523, file: !476, line: 1686, type: !24)
!3529 = !DILocalVariable(name: "SubPriority", arg: 3, scope: !3523, file: !476, line: 1686, type: !24)
!3530 = !DILocalVariable(name: "PriorityGroupTmp", scope: !3523, file: !476, line: 1688, type: !24)
!3531 = !DILocalVariable(name: "PreemptPriorityBits", scope: !3523, file: !476, line: 1689, type: !24)
!3532 = !DILocalVariable(name: "SubPriorityBits", scope: !3523, file: !476, line: 1690, type: !24)
!3533 = !DILocation(line: 0, scope: !3523)
!3534 = !DILocation(line: 1688, column: 46, scope: !3523)
!3535 = !DILocation(line: 1692, column: 31, scope: !3523)
!3536 = !DILocation(line: 1692, column: 25, scope: !3523)
!3537 = !DILocation(line: 1693, column: 25, scope: !3523)
!3538 = !DILocation(line: 1696, column: 74, scope: !3523)
!3539 = !DILocation(line: 1696, column: 30, scope: !3523)
!3540 = !DILocation(line: 1696, column: 82, scope: !3523)
!3541 = !DILocation(line: 1697, column: 74, scope: !3523)
!3542 = !DILocation(line: 1697, column: 30, scope: !3523)
!3543 = !DILocation(line: 1696, column: 102, scope: !3523)
!3544 = !DILocation(line: 1695, column: 3, scope: !3523)
!3545 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !476, file: !476, line: 1639, type: !3546, scopeLine: 1640, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !3548)
!3546 = !DISubroutineType(types: !3547)
!3547 = !{null, !3507, !24}
!3548 = !{!3549, !3550}
!3549 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3545, file: !476, line: 1639, type: !3507)
!3550 = !DILocalVariable(name: "priority", arg: 2, scope: !3545, file: !476, line: 1639, type: !24)
!3551 = !DILocation(line: 0, scope: !3545)
!3552 = !DILocation(line: 0, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3545, file: !476, line: 1641, column: 7)
!3554 = !DILocation(line: 1641, column: 7, scope: !3545)
!3555 = !DILocation(line: 1649, column: 1, scope: !3545)
!3556 = distinct !DISubprogram(name: "HAL_NVIC_EnableIRQ", scope: !905, file: !905, line: 187, type: !3557, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !3559)
!3557 = !DISubroutineType(types: !3558)
!3558 = !{null, !3507}
!3559 = !{!3560}
!3560 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3556, file: !905, line: 187, type: !3507)
!3561 = !DILocation(line: 0, scope: !3556)
!3562 = !DILocation(line: 193, column: 3, scope: !3556)
!3563 = !DILocation(line: 194, column: 1, scope: !3556)
!3564 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !476, file: !476, line: 1511, type: !3557, scopeLine: 1512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !3565)
!3565 = !{!3566}
!3566 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3564, file: !476, line: 1511, type: !3507)
!3567 = !DILocation(line: 0, scope: !3564)
!3568 = !DILocation(line: 1513, column: 23, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3564, file: !476, line: 1513, column: 7)
!3570 = !DILocation(line: 1513, column: 7, scope: !3564)
!3571 = !DILocation(line: 1515, column: 81, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3569, file: !476, line: 1514, column: 3)
!3573 = !DILocation(line: 1515, column: 60, scope: !3572)
!3574 = !DILocation(line: 1515, column: 34, scope: !3572)
!3575 = !DILocation(line: 1515, column: 5, scope: !3572)
!3576 = !DILocation(line: 1515, column: 43, scope: !3572)
!3577 = !DILocation(line: 1516, column: 3, scope: !3572)
!3578 = !DILocation(line: 1517, column: 1, scope: !3564)
!3579 = distinct !DISubprogram(name: "HAL_NVIC_DisableIRQ", scope: !905, file: !905, line: 203, type: !3557, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !3580)
!3580 = !{!3581}
!3581 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3579, file: !905, line: 203, type: !3507)
!3582 = !DILocation(line: 0, scope: !3579)
!3583 = !DILocation(line: 209, column: 3, scope: !3579)
!3584 = !DILocation(line: 210, column: 1, scope: !3579)
!3585 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !476, file: !476, line: 1547, type: !3557, scopeLine: 1548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !3586)
!3586 = !{!3587}
!3587 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3585, file: !476, line: 1547, type: !3507)
!3588 = !DILocation(line: 0, scope: !3585)
!3589 = !DILocation(line: 1549, column: 23, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3585, file: !476, line: 1549, column: 7)
!3591 = !DILocation(line: 1549, column: 7, scope: !3585)
!3592 = !DILocation(line: 1551, column: 81, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3590, file: !476, line: 1550, column: 3)
!3594 = !DILocation(line: 1551, column: 60, scope: !3593)
!3595 = !DILocation(line: 1551, column: 34, scope: !3593)
!3596 = !DILocation(line: 1551, column: 5, scope: !3593)
!3597 = !DILocation(line: 1551, column: 43, scope: !3593)
!3598 = !DILocation(line: 879, column: 3, scope: !3599, inlinedAt: !3601)
!3599 = distinct !DISubprogram(name: "__DSB", scope: !3600, file: !3600, line: 877, type: !4, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !202)
!3600 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "ba7e4770884341336138fcec9d34fc09")
!3601 = distinct !DILocation(line: 1552, column: 5, scope: !3593)
!3602 = !{i64 1222529}
!3603 = !DILocation(line: 868, column: 3, scope: !3604, inlinedAt: !3605)
!3604 = distinct !DISubprogram(name: "__ISB", scope: !3600, file: !3600, line: 866, type: !4, scopeLine: 867, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !202)
!3605 = distinct !DILocation(line: 1553, column: 5, scope: !3593)
!3606 = !{i64 1222235}
!3607 = !DILocation(line: 1554, column: 3, scope: !3593)
!3608 = !DILocation(line: 1555, column: 1, scope: !3585)
!3609 = distinct !DISubprogram(name: "HAL_NVIC_SystemReset", scope: !905, file: !905, line: 216, type: !4, scopeLine: 217, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !202)
!3610 = !DILocation(line: 219, column: 3, scope: !3609)
!3611 = distinct !DISubprogram(name: "__NVIC_SystemReset", scope: !476, file: !476, line: 1762, type: !4, scopeLine: 1763, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !202)
!3612 = !DILocation(line: 879, column: 3, scope: !3599, inlinedAt: !3613)
!3613 = distinct !DILocation(line: 1764, column: 3, scope: !3611)
!3614 = !DILocation(line: 1767, column: 34, scope: !3611)
!3615 = !DILocation(line: 1767, column: 40, scope: !3611)
!3616 = !DILocation(line: 1767, column: 66, scope: !3611)
!3617 = !DILocation(line: 1766, column: 15, scope: !3611)
!3618 = !DILocation(line: 879, column: 3, scope: !3599, inlinedAt: !3619)
!3619 = distinct !DILocation(line: 1769, column: 3, scope: !3611)
!3620 = !DILocation(line: 1771, column: 3, scope: !3611)
!3621 = !DILocation(line: 1773, column: 5, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3623, file: !476, line: 1772, column: 3)
!3623 = distinct !DILexicalBlock(scope: !3624, file: !476, line: 1771, column: 3)
!3624 = distinct !DILexicalBlock(scope: !3611, file: !476, line: 1771, column: 3)
!3625 = !{i64 2148746398}
!3626 = !DILocation(line: 1771, column: 3, scope: !3623)
!3627 = distinct !{!3627, !3628, !3629, !1500}
!3628 = !DILocation(line: 1771, column: 3, scope: !3624)
!3629 = !DILocation(line: 1774, column: 3, scope: !3624)
!3630 = distinct !DISubprogram(name: "HAL_SYSTICK_Config", scope: !905, file: !905, line: 229, type: !3631, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !3633)
!3631 = !DISubroutineType(types: !3632)
!3632 = !{!24, !24}
!3633 = !{!3634}
!3634 = !DILocalVariable(name: "TicksNumb", arg: 1, scope: !3630, file: !905, line: 229, type: !24)
!3635 = !DILocation(line: 0, scope: !3630)
!3636 = !DILocation(line: 231, column: 11, scope: !3630)
!3637 = !DILocation(line: 231, column: 4, scope: !3630)
!3638 = distinct !DISubprogram(name: "SysTick_Config", scope: !476, file: !476, line: 1834, type: !3631, scopeLine: 1835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !3639)
!3639 = !{!3640}
!3640 = !DILocalVariable(name: "ticks", arg: 1, scope: !3638, file: !476, line: 1834, type: !24)
!3641 = !DILocation(line: 0, scope: !3638)
!3642 = !DILocation(line: 1836, column: 14, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3638, file: !476, line: 1836, column: 7)
!3644 = !DILocation(line: 1836, column: 21, scope: !3643)
!3645 = !DILocation(line: 1836, column: 7, scope: !3638)
!3646 = !DILocation(line: 1841, column: 18, scope: !3638)
!3647 = !DILocation(line: 1842, column: 3, scope: !3638)
!3648 = !DILocation(line: 1843, column: 18, scope: !3638)
!3649 = !DILocation(line: 1844, column: 18, scope: !3638)
!3650 = !DILocation(line: 1847, column: 3, scope: !3638)
!3651 = !DILocation(line: 1848, column: 1, scope: !3638)
!3652 = distinct !DISubprogram(name: "HAL_NVIC_GetPriorityGrouping", scope: !905, file: !905, line: 344, type: !1019, scopeLine: 345, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !202)
!3653 = !DILocation(line: 347, column: 10, scope: !3652)
!3654 = !DILocation(line: 347, column: 3, scope: !3652)
!3655 = distinct !DISubprogram(name: "HAL_NVIC_GetPriority", scope: !905, file: !905, line: 371, type: !3656, scopeLine: 372, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !3658)
!3656 = !DISubroutineType(types: !3657)
!3657 = !{null, !3507, !24, !640, !640}
!3658 = !{!3659, !3660, !3661, !3662}
!3659 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3655, file: !905, line: 371, type: !3507)
!3660 = !DILocalVariable(name: "PriorityGroup", arg: 2, scope: !3655, file: !905, line: 371, type: !24)
!3661 = !DILocalVariable(name: "pPreemptPriority", arg: 3, scope: !3655, file: !905, line: 371, type: !640)
!3662 = !DILocalVariable(name: "pSubPriority", arg: 4, scope: !3655, file: !905, line: 371, type: !640)
!3663 = !DILocation(line: 0, scope: !3655)
!3664 = !DILocation(line: 376, column: 23, scope: !3655)
!3665 = !{i32 0, i32 16}
!3666 = !DILocation(line: 376, column: 3, scope: !3655)
!3667 = !DILocation(line: 377, column: 1, scope: !3655)
!3668 = distinct !DISubprogram(name: "__NVIC_GetPriority", scope: !476, file: !476, line: 1661, type: !3669, scopeLine: 1662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !3671)
!3669 = !DISubroutineType(types: !3670)
!3670 = !{!24, !3507}
!3671 = !{!3672}
!3672 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3668, file: !476, line: 1661, type: !3507)
!3673 = !DILocation(line: 0, scope: !3668)
!3674 = !DILocation(line: 1664, column: 7, scope: !3668)
!3675 = !DILocation(line: 0, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3668, file: !476, line: 1664, column: 7)
!3677 = !DILocation(line: 1672, column: 1, scope: !3668)
!3678 = distinct !DISubprogram(name: "NVIC_DecodePriority", scope: !476, file: !476, line: 1713, type: !3679, scopeLine: 1714, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !3682)
!3679 = !DISubroutineType(types: !3680)
!3680 = !{null, !24, !24, !3681, !3681}
!3681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !640)
!3682 = !{!3683, !3684, !3685, !3686, !3687, !3688, !3689}
!3683 = !DILocalVariable(name: "Priority", arg: 1, scope: !3678, file: !476, line: 1713, type: !24)
!3684 = !DILocalVariable(name: "PriorityGroup", arg: 2, scope: !3678, file: !476, line: 1713, type: !24)
!3685 = !DILocalVariable(name: "pPreemptPriority", arg: 3, scope: !3678, file: !476, line: 1713, type: !3681)
!3686 = !DILocalVariable(name: "pSubPriority", arg: 4, scope: !3678, file: !476, line: 1713, type: !3681)
!3687 = !DILocalVariable(name: "PriorityGroupTmp", scope: !3678, file: !476, line: 1715, type: !24)
!3688 = !DILocalVariable(name: "PreemptPriorityBits", scope: !3678, file: !476, line: 1716, type: !24)
!3689 = !DILocalVariable(name: "SubPriorityBits", scope: !3678, file: !476, line: 1717, type: !24)
!3690 = !DILocation(line: 0, scope: !3678)
!3691 = !DILocation(line: 1715, column: 46, scope: !3678)
!3692 = !DILocation(line: 1719, column: 31, scope: !3678)
!3693 = !DILocation(line: 1719, column: 25, scope: !3678)
!3694 = !DILocation(line: 1720, column: 25, scope: !3678)
!3695 = !DILocation(line: 1722, column: 33, scope: !3678)
!3696 = !DILocation(line: 1722, column: 97, scope: !3678)
!3697 = !DILocation(line: 1722, column: 53, scope: !3678)
!3698 = !DILocation(line: 1722, column: 21, scope: !3678)
!3699 = !DILocation(line: 1723, column: 97, scope: !3678)
!3700 = !DILocation(line: 1723, column: 53, scope: !3678)
!3701 = !DILocation(line: 1723, column: 21, scope: !3678)
!3702 = !DILocation(line: 1724, column: 1, scope: !3678)
!3703 = distinct !DISubprogram(name: "HAL_NVIC_SetPendingIRQ", scope: !905, file: !905, line: 386, type: !3557, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !3704)
!3704 = !{!3705}
!3705 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3703, file: !905, line: 386, type: !3507)
!3706 = !DILocation(line: 0, scope: !3703)
!3707 = !DILocation(line: 392, column: 3, scope: !3703)
!3708 = !DILocation(line: 393, column: 1, scope: !3703)
!3709 = distinct !DISubprogram(name: "__NVIC_SetPendingIRQ", scope: !476, file: !476, line: 1585, type: !3557, scopeLine: 1586, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !3710)
!3710 = !{!3711}
!3711 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3709, file: !476, line: 1585, type: !3507)
!3712 = !DILocation(line: 0, scope: !3709)
!3713 = !DILocation(line: 1587, column: 23, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3709, file: !476, line: 1587, column: 7)
!3715 = !DILocation(line: 1587, column: 7, scope: !3709)
!3716 = !DILocation(line: 1589, column: 81, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3714, file: !476, line: 1588, column: 3)
!3718 = !DILocation(line: 1589, column: 60, scope: !3717)
!3719 = !DILocation(line: 1589, column: 34, scope: !3717)
!3720 = !DILocation(line: 1589, column: 5, scope: !3717)
!3721 = !DILocation(line: 1589, column: 43, scope: !3717)
!3722 = !DILocation(line: 1590, column: 3, scope: !3717)
!3723 = !DILocation(line: 1591, column: 1, scope: !3709)
!3724 = distinct !DISubprogram(name: "HAL_NVIC_GetPendingIRQ", scope: !905, file: !905, line: 404, type: !3669, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !3725)
!3725 = !{!3726}
!3726 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3724, file: !905, line: 404, type: !3507)
!3727 = !DILocation(line: 0, scope: !3724)
!3728 = !DILocation(line: 410, column: 10, scope: !3724)
!3729 = !DILocation(line: 410, column: 3, scope: !3724)
!3730 = distinct !DISubprogram(name: "__NVIC_GetPendingIRQ", scope: !476, file: !476, line: 1566, type: !3669, scopeLine: 1567, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !3731)
!3731 = !{!3732}
!3732 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3730, file: !476, line: 1566, type: !3507)
!3733 = !DILocation(line: 0, scope: !3730)
!3734 = !DILocation(line: 1568, column: 23, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3730, file: !476, line: 1568, column: 7)
!3736 = !DILocation(line: 1568, column: 7, scope: !3730)
!3737 = !DILocation(line: 1570, column: 54, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3735, file: !476, line: 1569, column: 3)
!3739 = !DILocation(line: 1570, column: 25, scope: !3738)
!3740 = !DILocation(line: 1570, column: 91, scope: !3738)
!3741 = !DILocation(line: 1570, column: 23, scope: !3738)
!3742 = !DILocation(line: 1570, column: 5, scope: !3738)
!3743 = !DILocation(line: 0, scope: !3735)
!3744 = !DILocation(line: 1576, column: 1, scope: !3730)
!3745 = distinct !DISubprogram(name: "HAL_NVIC_ClearPendingIRQ", scope: !905, file: !905, line: 420, type: !3557, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !3746)
!3746 = !{!3747}
!3747 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3745, file: !905, line: 420, type: !3507)
!3748 = !DILocation(line: 0, scope: !3745)
!3749 = !DILocation(line: 426, column: 3, scope: !3745)
!3750 = !DILocation(line: 427, column: 1, scope: !3745)
!3751 = distinct !DISubprogram(name: "__NVIC_ClearPendingIRQ", scope: !476, file: !476, line: 1600, type: !3557, scopeLine: 1601, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !3752)
!3752 = !{!3753}
!3753 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3751, file: !476, line: 1600, type: !3507)
!3754 = !DILocation(line: 0, scope: !3751)
!3755 = !DILocation(line: 1602, column: 23, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3751, file: !476, line: 1602, column: 7)
!3757 = !DILocation(line: 1602, column: 7, scope: !3751)
!3758 = !DILocation(line: 1604, column: 81, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3756, file: !476, line: 1603, column: 3)
!3760 = !DILocation(line: 1604, column: 60, scope: !3759)
!3761 = !DILocation(line: 1604, column: 34, scope: !3759)
!3762 = !DILocation(line: 1604, column: 5, scope: !3759)
!3763 = !DILocation(line: 1604, column: 43, scope: !3759)
!3764 = !DILocation(line: 1605, column: 3, scope: !3759)
!3765 = !DILocation(line: 1606, column: 1, scope: !3751)
!3766 = distinct !DISubprogram(name: "HAL_NVIC_GetActive", scope: !905, file: !905, line: 437, type: !3669, scopeLine: 438, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !3767)
!3767 = !{!3768}
!3768 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3766, file: !905, line: 437, type: !3507)
!3769 = !DILocation(line: 0, scope: !3766)
!3770 = !DILocation(line: 443, column: 10, scope: !3766)
!3771 = !DILocation(line: 443, column: 3, scope: !3766)
!3772 = distinct !DISubprogram(name: "__NVIC_GetActive", scope: !476, file: !476, line: 1617, type: !3669, scopeLine: 1618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !3773)
!3773 = !{!3774}
!3774 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3772, file: !476, line: 1617, type: !3507)
!3775 = !DILocation(line: 0, scope: !3772)
!3776 = !DILocation(line: 1619, column: 23, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3772, file: !476, line: 1619, column: 7)
!3778 = !DILocation(line: 1619, column: 7, scope: !3772)
!3779 = !DILocation(line: 1621, column: 54, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3777, file: !476, line: 1620, column: 3)
!3781 = !DILocation(line: 1621, column: 25, scope: !3780)
!3782 = !DILocation(line: 1621, column: 91, scope: !3780)
!3783 = !DILocation(line: 1621, column: 23, scope: !3780)
!3784 = !DILocation(line: 1621, column: 5, scope: !3780)
!3785 = !DILocation(line: 0, scope: !3777)
!3786 = !DILocation(line: 1627, column: 1, scope: !3772)
!3787 = distinct !DISubprogram(name: "HAL_SYSTICK_CLKSourceConfig", scope: !905, file: !905, line: 454, type: !2981, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !3788)
!3788 = !{!3789}
!3789 = !DILocalVariable(name: "CLKSource", arg: 1, scope: !3787, file: !905, line: 454, type: !24)
!3790 = !DILocation(line: 0, scope: !3787)
!3791 = !DILocation(line: 458, column: 17, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3787, file: !905, line: 458, column: 7)
!3793 = !DILocation(line: 0, scope: !3792)
!3794 = !DILocation(line: 458, column: 7, scope: !3787)
!3795 = !DILocation(line: 466, column: 1, scope: !3787)
!3796 = distinct !DISubprogram(name: "HAL_SYSTICK_IRQHandler", scope: !905, file: !905, line: 472, type: !4, scopeLine: 473, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !202)
!3797 = !DILocation(line: 474, column: 3, scope: !3796)
!3798 = !DILocation(line: 475, column: 1, scope: !3796)
!3799 = distinct !DISubprogram(name: "HAL_SYSTICK_Callback", scope: !905, file: !905, line: 481, type: !4, scopeLine: 482, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !904, retainedNodes: !202)
!3800 = !DILocation(line: 486, column: 1, scope: !3799)
!3801 = distinct !DISubprogram(name: "HAL_GPIO_Init", scope: !959, file: !959, line: 178, type: !3802, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !958, retainedNodes: !3812)
!3802 = !DISubroutineType(types: !3803)
!3803 = !{null, !990, !3804}
!3804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3805, size: 32)
!3805 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !962, line: 60, baseType: !3806)
!3806 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !962, line: 47, size: 128, elements: !3807)
!3807 = !{!3808, !3809, !3810, !3811}
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !3806, file: !962, line: 49, baseType: !24, size: 32)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !3806, file: !962, line: 52, baseType: !24, size: 32, offset: 32)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !3806, file: !962, line: 55, baseType: !24, size: 32, offset: 64)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !3806, file: !962, line: 58, baseType: !24, size: 32, offset: 96)
!3812 = !{!3813, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3821, !3822}
!3813 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !3801, file: !959, line: 178, type: !990)
!3814 = !DILocalVariable(name: "GPIO_Init", arg: 2, scope: !3801, file: !959, line: 178, type: !3804)
!3815 = !DILocalVariable(name: "position", scope: !3801, file: !959, line: 180, type: !24)
!3816 = !DILocalVariable(name: "ioposition", scope: !3801, file: !959, line: 181, type: !24)
!3817 = !DILocalVariable(name: "iocurrent", scope: !3801, file: !959, line: 182, type: !24)
!3818 = !DILocalVariable(name: "temp", scope: !3801, file: !959, line: 183, type: !24)
!3819 = !DILocalVariable(name: "config", scope: !3801, file: !959, line: 184, type: !24)
!3820 = !DILocalVariable(name: "configregister", scope: !3801, file: !959, line: 185, type: !872)
!3821 = !DILocalVariable(name: "registeroffset", scope: !3801, file: !959, line: 186, type: !24)
!3822 = !DILocalVariable(name: "tmpreg", scope: !3823, file: !959, line: 291, type: !23)
!3823 = distinct !DILexicalBlock(scope: !3824, file: !959, line: 291, column: 9)
!3824 = distinct !DILexicalBlock(scope: !3825, file: !959, line: 289, column: 7)
!3825 = distinct !DILexicalBlock(scope: !3826, file: !959, line: 288, column: 11)
!3826 = distinct !DILexicalBlock(scope: !3827, file: !959, line: 203, column: 5)
!3827 = distinct !DILexicalBlock(scope: !3828, file: !959, line: 202, column: 9)
!3828 = distinct !DILexicalBlock(scope: !3801, file: !959, line: 195, column: 3)
!3829 = !DILocation(line: 0, scope: !3801)
!3830 = !DILocation(line: 194, column: 23, scope: !3801)
!3831 = !DILocation(line: 194, column: 41, scope: !3801)
!3832 = !DILocation(line: 194, column: 3, scope: !3801)
!3833 = !DILocation(line: 197, column: 26, scope: !3828)
!3834 = !DILocation(line: 200, column: 44, scope: !3828)
!3835 = !DILocation(line: 202, column: 19, scope: !3827)
!3836 = !DILocation(line: 202, column: 9, scope: !3828)
!3837 = !DILocation(line: 208, column: 26, scope: !3826)
!3838 = !DILocation(line: 208, column: 7, scope: !3826)
!3839 = !DILocation(line: 214, column: 31, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3826, file: !959, line: 209, column: 7)
!3841 = !DILocation(line: 215, column: 11, scope: !3840)
!3842 = !DILocation(line: 221, column: 31, scope: !3840)
!3843 = !DILocation(line: 221, column: 37, scope: !3840)
!3844 = !DILocation(line: 222, column: 11, scope: !3840)
!3845 = !DILocation(line: 228, column: 31, scope: !3840)
!3846 = !DILocation(line: 228, column: 37, scope: !3840)
!3847 = !DILocation(line: 229, column: 11, scope: !3840)
!3848 = !DILocation(line: 235, column: 31, scope: !3840)
!3849 = !DILocation(line: 235, column: 37, scope: !3840)
!3850 = !DILocation(line: 236, column: 11, scope: !3840)
!3851 = !DILocation(line: 248, column: 26, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3840, file: !959, line: 248, column: 15)
!3853 = !DILocation(line: 248, column: 15, scope: !3840)
!3854 = !DILocation(line: 257, column: 25, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3856, file: !959, line: 253, column: 11)
!3856 = distinct !DILexicalBlock(scope: !3852, file: !959, line: 252, column: 20)
!3857 = !{!3858, !2487, i64 16}
!3858 = !{!"", !2487, i64 0, !2487, i64 4, !2487, i64 8, !2487, i64 12, !2487, i64 16, !2487, i64 20, !2487, i64 24}
!3859 = !DILocation(line: 258, column: 11, scope: !3855)
!3860 = !DILocation(line: 264, column: 24, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3856, file: !959, line: 260, column: 11)
!3862 = !{!3858, !2487, i64 20}
!3863 = !DILocation(line: 271, column: 11, scope: !3840)
!3864 = !DILocation(line: 280, column: 35, scope: !3826)
!3865 = !DILocation(line: 280, column: 24, scope: !3826)
!3866 = !DILocation(line: 281, column: 24, scope: !3826)
!3867 = !DILocation(line: 284, column: 7, scope: !3826)
!3868 = !DILocation(line: 288, column: 23, scope: !3825)
!3869 = !DILocation(line: 288, column: 28, scope: !3825)
!3870 = !DILocation(line: 288, column: 41, scope: !3825)
!3871 = !DILocation(line: 288, column: 11, scope: !3826)
!3872 = !DILocation(line: 291, column: 9, scope: !3823)
!3873 = !DILocation(line: 291, column: 9, scope: !3824)
!3874 = !DILocation(line: 292, column: 38, scope: !3824)
!3875 = !DILocation(line: 292, column: 16, scope: !3824)
!3876 = !DILocation(line: 293, column: 9, scope: !3824)
!3877 = !DILocation(line: 294, column: 9, scope: !3824)
!3878 = !DILocation(line: 295, column: 38, scope: !3824)
!3879 = !DILocation(line: 299, column: 25, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3824, file: !959, line: 299, column: 13)
!3881 = !DILocation(line: 299, column: 30, scope: !3880)
!3882 = !DILocation(line: 299, column: 46, scope: !3880)
!3883 = !DILocation(line: 299, column: 13, scope: !3824)
!3884 = !DILocation(line: 301, column: 11, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3880, file: !959, line: 300, column: 9)
!3886 = !{!3887, !2487, i64 0}
!3887 = !{!"", !2487, i64 0, !2487, i64 4, !2487, i64 8, !2487, i64 12, !2487, i64 16, !2487, i64 20}
!3888 = !DILocation(line: 302, column: 9, scope: !3885)
!3889 = !DILocation(line: 305, column: 11, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3880, file: !959, line: 304, column: 9)
!3891 = !DILocation(line: 0, scope: !3880)
!3892 = !DILocation(line: 309, column: 30, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3824, file: !959, line: 309, column: 13)
!3894 = !DILocation(line: 309, column: 47, scope: !3893)
!3895 = !DILocation(line: 309, column: 13, scope: !3824)
!3896 = !DILocation(line: 311, column: 11, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3893, file: !959, line: 310, column: 9)
!3898 = !{!3887, !2487, i64 4}
!3899 = !DILocation(line: 312, column: 9, scope: !3897)
!3900 = !DILocation(line: 315, column: 11, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3893, file: !959, line: 314, column: 9)
!3902 = !DILocation(line: 0, scope: !3893)
!3903 = !DILocation(line: 319, column: 30, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3824, file: !959, line: 319, column: 13)
!3905 = !DILocation(line: 319, column: 45, scope: !3904)
!3906 = !DILocation(line: 319, column: 13, scope: !3824)
!3907 = !DILocation(line: 321, column: 11, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3904, file: !959, line: 320, column: 9)
!3909 = !{!3887, !2487, i64 8}
!3910 = !DILocation(line: 322, column: 9, scope: !3908)
!3911 = !DILocation(line: 325, column: 11, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3904, file: !959, line: 324, column: 9)
!3913 = !DILocation(line: 0, scope: !3904)
!3914 = !DILocation(line: 329, column: 30, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3824, file: !959, line: 329, column: 13)
!3916 = !DILocation(line: 329, column: 46, scope: !3915)
!3917 = !DILocation(line: 329, column: 13, scope: !3824)
!3918 = !DILocation(line: 331, column: 11, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3915, file: !959, line: 330, column: 9)
!3920 = !{!3887, !2487, i64 12}
!3921 = !DILocation(line: 332, column: 9, scope: !3919)
!3922 = !DILocation(line: 335, column: 11, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3915, file: !959, line: 334, column: 9)
!3924 = !DILocation(line: 0, scope: !3915)
!3925 = !DILocation(line: 340, column: 10, scope: !3828)
!3926 = !DILocation(line: 184, column: 12, scope: !3801)
!3927 = !DILocation(line: 194, column: 28, scope: !3801)
!3928 = distinct !{!3928, !3832, !3929, !1499, !1500}
!3929 = !DILocation(line: 341, column: 3, scope: !3801)
!3930 = !DILocation(line: 342, column: 1, scope: !3801)
!3931 = distinct !DISubprogram(name: "HAL_GPIO_DeInit", scope: !959, file: !959, line: 351, type: !3932, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !958, retainedNodes: !3934)
!3932 = !DISubroutineType(types: !3933)
!3933 = !{null, !990, !24}
!3934 = !{!3935, !3936, !3937, !3938, !3939, !3940, !3941}
!3935 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !3931, file: !959, line: 351, type: !990)
!3936 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !3931, file: !959, line: 351, type: !24)
!3937 = !DILocalVariable(name: "position", scope: !3931, file: !959, line: 353, type: !24)
!3938 = !DILocalVariable(name: "iocurrent", scope: !3931, file: !959, line: 354, type: !24)
!3939 = !DILocalVariable(name: "tmp", scope: !3931, file: !959, line: 355, type: !24)
!3940 = !DILocalVariable(name: "configregister", scope: !3931, file: !959, line: 356, type: !872)
!3941 = !DILocalVariable(name: "registeroffset", scope: !3931, file: !959, line: 357, type: !24)
!3942 = !DILocation(line: 0, scope: !3931)
!3943 = !DILocation(line: 364, column: 33, scope: !3931)
!3944 = !DILocation(line: 364, column: 3, scope: !3931)
!3945 = !DILocation(line: 367, column: 35, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3931, file: !959, line: 365, column: 3)
!3947 = !DILocation(line: 367, column: 28, scope: !3946)
!3948 = !DILocation(line: 369, column: 9, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !3946, file: !959, line: 369, column: 9)
!3950 = !DILocation(line: 369, column: 9, scope: !3946)
!3951 = !DILocation(line: 374, column: 35, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3949, file: !959, line: 370, column: 5)
!3953 = !DILocation(line: 374, column: 13, scope: !3952)
!3954 = !DILocation(line: 375, column: 28, scope: !3952)
!3955 = !DILocation(line: 375, column: 21, scope: !3952)
!3956 = !DILocation(line: 375, column: 11, scope: !3952)
!3957 = !DILocation(line: 376, column: 19, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3952, file: !959, line: 376, column: 11)
!3959 = !DILocation(line: 376, column: 41, scope: !3958)
!3960 = !DILocation(line: 376, column: 15, scope: !3958)
!3961 = !DILocation(line: 376, column: 11, scope: !3952)
!3962 = !DILocation(line: 379, column: 9, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3958, file: !959, line: 377, column: 7)
!3964 = !DILocation(line: 382, column: 9, scope: !3963)
!3965 = !DILocation(line: 383, column: 9, scope: !3963)
!3966 = !DILocation(line: 386, column: 9, scope: !3963)
!3967 = !DILocation(line: 387, column: 9, scope: !3963)
!3968 = !DILocation(line: 388, column: 7, scope: !3963)
!3969 = !DILocation(line: 392, column: 35, scope: !3952)
!3970 = !DILocation(line: 392, column: 24, scope: !3952)
!3971 = !DILocation(line: 393, column: 24, scope: !3952)
!3972 = !DILocation(line: 396, column: 7, scope: !3952)
!3973 = !DILocation(line: 399, column: 7, scope: !3952)
!3974 = !{!3858, !2487, i64 12}
!3975 = !DILocation(line: 400, column: 5, scope: !3952)
!3976 = !DILocation(line: 402, column: 13, scope: !3946)
!3977 = !DILocation(line: 364, column: 20, scope: !3931)
!3978 = distinct !{!3978, !3944, !3979, !1499, !1500}
!3979 = !DILocation(line: 403, column: 3, scope: !3931)
!3980 = !DILocation(line: 404, column: 1, scope: !3931)
!3981 = distinct !DISubprogram(name: "HAL_GPIO_ReadPin", scope: !959, file: !959, line: 431, type: !3982, scopeLine: 432, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !958, retainedNodes: !3985)
!3982 = !DISubroutineType(types: !3983)
!3983 = !{!3984, !990, !37}
!3984 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PinState", file: !962, line: 69, baseType: !961)
!3985 = !{!3986, !3987, !3988}
!3986 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !3981, file: !959, line: 431, type: !990)
!3987 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !3981, file: !959, line: 431, type: !37)
!3988 = !DILocalVariable(name: "bitstatus", scope: !3981, file: !959, line: 433, type: !3984)
!3989 = !DILocation(line: 0, scope: !3981)
!3990 = !DILocation(line: 438, column: 15, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3981, file: !959, line: 438, column: 7)
!3992 = !{!3858, !2487, i64 8}
!3993 = !DILocation(line: 438, column: 21, scope: !3991)
!3994 = !DILocation(line: 438, column: 19, scope: !3991)
!3995 = !DILocation(line: 438, column: 31, scope: !3991)
!3996 = !DILocation(line: 446, column: 3, scope: !3981)
!3997 = distinct !DISubprogram(name: "HAL_GPIO_WritePin", scope: !959, file: !959, line: 465, type: !3998, scopeLine: 466, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !958, retainedNodes: !4000)
!3998 = !DISubroutineType(types: !3999)
!3999 = !{null, !990, !37, !3984}
!4000 = !{!4001, !4002, !4003}
!4001 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !3997, file: !959, line: 465, type: !990)
!4002 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !3997, file: !959, line: 465, type: !37)
!4003 = !DILocalVariable(name: "PinState", arg: 3, scope: !3997, file: !959, line: 465, type: !3984)
!4004 = !DILocation(line: 0, scope: !3997)
!4005 = !DILocation(line: 471, column: 16, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !3997, file: !959, line: 471, column: 7)
!4007 = !DILocation(line: 0, scope: !4006)
!4008 = !DILocation(line: 471, column: 7, scope: !3997)
!4009 = !DILocation(line: 479, column: 1, scope: !3997)
!4010 = distinct !DISubprogram(name: "HAL_GPIO_TogglePin", scope: !959, file: !959, line: 487, type: !4011, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !958, retainedNodes: !4013)
!4011 = !DISubroutineType(types: !4012)
!4012 = !{null, !990, !37}
!4013 = !{!4014, !4015}
!4014 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !4010, file: !959, line: 487, type: !990)
!4015 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !4010, file: !959, line: 487, type: !37)
!4016 = !DILocation(line: 0, scope: !4010)
!4017 = !DILocation(line: 492, column: 15, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !4010, file: !959, line: 492, column: 7)
!4019 = !DILocation(line: 492, column: 21, scope: !4018)
!4020 = !DILocation(line: 492, column: 19, scope: !4018)
!4021 = !DILocation(line: 492, column: 31, scope: !4018)
!4022 = !DILocation(line: 492, column: 7, scope: !4010)
!4023 = !DILocation(line: 0, scope: !4018)
!4024 = !DILocation(line: 500, column: 1, scope: !4010)
!4025 = distinct !DISubprogram(name: "HAL_GPIO_LockPin", scope: !959, file: !959, line: 512, type: !4026, scopeLine: 513, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !958, retainedNodes: !4028)
!4026 = !DISubroutineType(types: !4027)
!4027 = !{!2541, !990, !37}
!4028 = !{!4029, !4030, !4031}
!4029 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !4025, file: !959, line: 512, type: !990)
!4030 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !4025, file: !959, line: 512, type: !37)
!4031 = !DILocalVariable(name: "tmp", scope: !4025, file: !959, line: 514, type: !23)
!4032 = !DILocation(line: 0, scope: !4025)
!4033 = !DILocation(line: 514, column: 3, scope: !4025)
!4034 = !DILocation(line: 514, column: 17, scope: !4025)
!4035 = !DILocation(line: 521, column: 3, scope: !4025)
!4036 = !DILocation(line: 523, column: 17, scope: !4025)
!4037 = !DILocation(line: 523, column: 10, scope: !4025)
!4038 = !DILocation(line: 523, column: 15, scope: !4025)
!4039 = !{!3858, !2487, i64 24}
!4040 = !DILocation(line: 525, column: 15, scope: !4025)
!4041 = !DILocation(line: 527, column: 17, scope: !4025)
!4042 = !DILocation(line: 527, column: 15, scope: !4025)
!4043 = !DILocation(line: 529, column: 16, scope: !4025)
!4044 = !DILocation(line: 529, column: 7, scope: !4025)
!4045 = !DILocation(line: 532, column: 25, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4025, file: !959, line: 532, column: 7)
!4047 = !DILocation(line: 0, scope: !4046)
!4048 = !DILocation(line: 540, column: 1, scope: !4025)
!4049 = distinct !DISubprogram(name: "HAL_GPIO_EXTI_IRQHandler", scope: !959, file: !959, line: 547, type: !4050, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !958, retainedNodes: !4052)
!4050 = !DISubroutineType(types: !4051)
!4051 = !{null, !37}
!4052 = !{!4053}
!4053 = !DILocalVariable(name: "GPIO_Pin", arg: 1, scope: !4049, file: !959, line: 547, type: !37)
!4054 = !DILocation(line: 0, scope: !4049)
!4055 = !DILocation(line: 550, column: 7, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !4049, file: !959, line: 550, column: 7)
!4057 = !{!3887, !2487, i64 20}
!4058 = !DILocation(line: 550, column: 40, scope: !4056)
!4059 = !DILocation(line: 550, column: 7, scope: !4049)
!4060 = !DILocation(line: 552, column: 5, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4056, file: !959, line: 551, column: 3)
!4062 = !DILocation(line: 553, column: 5, scope: !4061)
!4063 = !DILocation(line: 554, column: 3, scope: !4061)
!4064 = !DILocation(line: 555, column: 1, scope: !4049)
!4065 = distinct !DISubprogram(name: "HAL_GPIO_EXTI_Callback", scope: !959, file: !959, line: 562, type: !4050, scopeLine: 563, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !958, retainedNodes: !4066)
!4066 = !{!4067}
!4067 = !DILocalVariable(name: "GPIO_Pin", arg: 1, scope: !4065, file: !959, line: 562, type: !37)
!4068 = !DILocation(line: 0, scope: !4065)
!4069 = !DILocation(line: 569, column: 1, scope: !4065)
!4070 = distinct !DISubprogram(name: "Scheduler", linkageName: "_ZN6Cicada9SchedulerC2EPFjvEPPNS_4TaskE", scope: !1014, file: !1012, line: 29, type: !1026, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1011, declaration: !1025, retainedNodes: !4071)
!4071 = !{!4072, !4074, !4075}
!4072 = !DILocalVariable(name: "this", arg: 1, scope: !4070, type: !4073, flags: DIFlagArtificial | DIFlagObjectPointer)
!4073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 32)
!4074 = !DILocalVariable(name: "tickFunction", arg: 2, scope: !4070, file: !1012, line: 29, type: !1018)
!4075 = !DILocalVariable(name: "taskList", arg: 3, scope: !4070, file: !1012, line: 29, type: !1022)
!4076 = !DILocation(line: 0, scope: !4070)
!4077 = !DILocation(line: 30, column: 5, scope: !4070)
!4078 = !{!4079, !1341, i64 0}
!4079 = !{!"_ZTSN6Cicada9SchedulerE", !1341, i64 0, !1341, i64 4, !1341, i64 8}
!4080 = !DILocation(line: 30, column: 34, scope: !4070)
!4081 = !{!4079, !1341, i64 4}
!4082 = !DILocation(line: 30, column: 55, scope: !4070)
!4083 = !{!4079, !1341, i64 8}
!4084 = !DILocation(line: 31, column: 2, scope: !4070)
!4085 = distinct !DISubprogram(name: "runTask", linkageName: "_ZN6Cicada9Scheduler7runTaskEv", scope: !1014, file: !1012, line: 33, type: !1030, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1011, declaration: !1029, retainedNodes: !4086)
!4086 = !{!4087, !4088}
!4087 = !DILocalVariable(name: "this", arg: 1, scope: !4085, type: !4073, flags: DIFlagArtificial | DIFlagObjectPointer)
!4088 = !DILocalVariable(name: "tick", scope: !4085, file: !1012, line: 35, type: !24)
!4089 = !DILocation(line: 0, scope: !4085)
!4090 = !DILocation(line: 35, column: 24, scope: !4085)
!4091 = !DILocation(line: 36, column: 11, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4085, file: !1012, line: 36, column: 9)
!4093 = !DILocation(line: 36, column: 10, scope: !4092)
!4094 = !DILocation(line: 36, column: 26, scope: !4092)
!4095 = !DILocation(line: 36, column: 34, scope: !4092)
!4096 = !DILocation(line: 37, column: 9, scope: !4092)
!4097 = !DILocation(line: 37, column: 21, scope: !4092)
!4098 = !DILocation(line: 37, column: 20, scope: !4092)
!4099 = !DILocation(line: 37, column: 36, scope: !4092)
!4100 = !DILocation(line: 37, column: 17, scope: !4092)
!4101 = !DILocation(line: 37, column: 51, scope: !4092)
!4102 = !DILocation(line: 37, column: 50, scope: !4092)
!4103 = !DILocation(line: 37, column: 66, scope: !4092)
!4104 = !DILocation(line: 37, column: 49, scope: !4092)
!4105 = !DILocation(line: 37, column: 46, scope: !4092)
!4106 = !DILocation(line: 36, column: 9, scope: !4085)
!4107 = !DILocation(line: 38, column: 11, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4092, file: !1012, line: 37, column: 75)
!4109 = !DILocation(line: 38, column: 10, scope: !4108)
!4110 = !DILocation(line: 38, column: 26, scope: !4108)
!4111 = !DILocation(line: 39, column: 11, scope: !4108)
!4112 = !DILocation(line: 39, column: 10, scope: !4108)
!4113 = !DILocation(line: 39, column: 26, scope: !4108)
!4114 = !DILocation(line: 40, column: 5, scope: !4108)
!4115 = !DILocation(line: 42, column: 10, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4085, file: !1012, line: 42, column: 9)
!4117 = !DILocation(line: 42, column: 9, scope: !4116)
!4118 = !DILocation(line: 42, column: 25, scope: !4116)
!4119 = !DILocation(line: 42, column: 9, scope: !4085)
!4120 = !DILocation(line: 43, column: 24, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4116, file: !1012, line: 42, column: 34)
!4122 = !DILocation(line: 43, column: 22, scope: !4121)
!4123 = !DILocation(line: 44, column: 5, scope: !4121)
!4124 = !DILocation(line: 45, column: 1, scope: !4085)
!4125 = distinct !DISubprogram(name: "delay", linkageName: "_ZNK6Cicada4Task5delayEv", scope: !49, file: !50, line: 203, type: !72, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1011, declaration: !71, retainedNodes: !4126)
!4126 = !{!4127}
!4127 = !DILocalVariable(name: "this", arg: 1, scope: !4125, type: !4128, flags: DIFlagArtificial | DIFlagObjectPointer)
!4128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !75, size: 32)
!4129 = !DILocation(line: 0, scope: !4125)
!4130 = !DILocation(line: 205, column: 16, scope: !4125)
!4131 = !DILocation(line: 205, column: 9, scope: !4125)
!4132 = distinct !DISubprogram(name: "lastRun", linkageName: "_ZN6Cicada4Task7lastRunEv", scope: !49, file: !50, line: 222, type: !78, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1011, declaration: !77, retainedNodes: !4133)
!4133 = !{!4134}
!4134 = !DILocalVariable(name: "this", arg: 1, scope: !4132, type: !1023, flags: DIFlagArtificial | DIFlagObjectPointer)
!4135 = !DILocation(line: 0, scope: !4132)
!4136 = !DILocation(line: 224, column: 16, scope: !4132)
!4137 = !DILocation(line: 224, column: 9, scope: !4132)
!4138 = distinct !DISubprogram(name: "setLastRun", linkageName: "_ZN6Cicada4Task10setLastRunEj", scope: !49, file: !50, line: 230, type: !81, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1011, declaration: !80, retainedNodes: !4139)
!4139 = !{!4140, !4141}
!4140 = !DILocalVariable(name: "this", arg: 1, scope: !4138, type: !1023, flags: DIFlagArtificial | DIFlagObjectPointer)
!4141 = !DILocalVariable(name: "time", arg: 2, scope: !4138, file: !50, line: 230, type: !24)
!4142 = !DILocation(line: 0, scope: !4138)
!4143 = !DILocation(line: 232, column: 9, scope: !4138)
!4144 = !DILocation(line: 232, column: 18, scope: !4138)
!4145 = !DILocation(line: 233, column: 5, scope: !4138)
!4146 = distinct !DISubprogram(name: "start", linkageName: "_ZN6Cicada9Scheduler5startEv", scope: !1014, file: !1012, line: 47, type: !1030, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1011, declaration: !1032, retainedNodes: !4147)
!4147 = !{!4148}
!4148 = !DILocalVariable(name: "this", arg: 1, scope: !4146, type: !4073, flags: DIFlagArtificial | DIFlagObjectPointer)
!4149 = !DILocation(line: 0, scope: !4146)
!4150 = !DILocation(line: 49, column: 5, scope: !4146)
!4151 = !DILocation(line: 50, column: 9, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4153, file: !1012, line: 49, column: 5)
!4153 = distinct !DILexicalBlock(scope: !4146, file: !1012, line: 49, column: 5)
!4154 = !DILocation(line: 49, column: 5, scope: !4152)
!4155 = distinct !{!4155, !4156, !4157, !1499, !1500}
!4156 = !DILocation(line: 49, column: 5, scope: !4153)
!4157 = !DILocation(line: 50, column: 17, scope: !4153)
!4158 = distinct !DISubprogram(name: "eTickFunction", linkageName: "_Z13eTickFunctionv", scope: !1041, file: !1041, line: 27, type: !1019, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1040, retainedNodes: !202)
!4159 = !DILocation(line: 29, column: 12, scope: !4158)
!4160 = !DILocation(line: 29, column: 5, scope: !4158)
!4161 = distinct !DISubprogram(name: "~Stm32Uart", linkageName: "_ZN6Cicada9Stm32UartD2Ev", scope: !748, file: !650, line: 73, type: !806, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, declaration: !805, retainedNodes: !4162)
!4162 = !{!4163}
!4163 = !DILocalVariable(name: "this", arg: 1, scope: !4161, type: !755, flags: DIFlagArtificial | DIFlagObjectPointer)
!4164 = !DILocation(line: 0, scope: !4161)
!4165 = !DILocation(line: 74, column: 1, scope: !4161)
!4166 = !DILocation(line: 75, column: 9, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4168, file: !650, line: 75, column: 9)
!4168 = distinct !DILexicalBlock(scope: !4161, file: !650, line: 74, column: 1)
!4169 = !{!4170, !1342, i64 104}
!4170 = !{!"_ZTSN6Cicada9Stm32UartE", !1342, i64 104, !4171, i64 108, !1341, i64 180, !1453, i64 184, !1453, i64 186, !4175, i64 188}
!4171 = !{!"_ZTS20__UART_HandleTypeDef", !1341, i64 0, !4172, i64 4, !1341, i64 32, !1453, i64 36, !1453, i64 38, !1341, i64 40, !1453, i64 44, !1453, i64 46, !1341, i64 48, !1341, i64 52, !4173, i64 56, !4174, i64 60, !4174, i64 64, !1389, i64 68}
!4172 = !{!"_ZTS16UART_InitTypeDef", !1389, i64 0, !1389, i64 4, !1389, i64 8, !1389, i64 12, !1389, i64 16, !1389, i64 20, !1389, i64 24}
!4173 = !{!"_ZTS15HAL_LockTypeDef", !1342, i64 0}
!4174 = !{!"_ZTS21HAL_UART_StateTypeDef", !1342, i64 0}
!4175 = !{!"_ZTS9IRQn_Type", !1342, i64 0}
!4176 = !DILocation(line: 75, column: 16, scope: !4167)
!4177 = !DILocation(line: 75, column: 9, scope: !4168)
!4178 = !DILocation(line: 76, column: 9, scope: !4167)
!4179 = !DILocation(line: 77, column: 1, scope: !4168)
!4180 = !DILocation(line: 77, column: 1, scope: !4161)
!4181 = distinct !DISubprogram(name: "~Stm32Uart", linkageName: "_ZN6Cicada9Stm32UartD0Ev", scope: !748, file: !650, line: 73, type: !806, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, declaration: !805, retainedNodes: !4182)
!4182 = !{!4183}
!4183 = !DILocalVariable(name: "this", arg: 1, scope: !4181, type: !755, flags: DIFlagArtificial | DIFlagObjectPointer)
!4184 = !DILocation(line: 0, scope: !4181)
!4185 = !DILocation(line: 74, column: 1, scope: !4181)
!4186 = !DILocation(line: 77, column: 1, scope: !4181)
!4187 = distinct !DISubprogram(name: "writeBufferProcessed", linkageName: "_ZNK6Cicada9Stm32Uart20writeBufferProcessedEv", scope: !748, file: !650, line: 251, type: !833, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, declaration: !832, retainedNodes: !4188)
!4188 = !{!4189}
!4189 = !DILocalVariable(name: "this", arg: 1, scope: !4187, type: !4190, flags: DIFlagArtificial | DIFlagObjectPointer)
!4190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 32)
!4191 = !DILocation(line: 0, scope: !4187)
!4192 = !DILocation(line: 253, column: 12, scope: !4187)
!4193 = !DILocation(line: 253, column: 25, scope: !4187)
!4194 = !DILocation(line: 253, column: 42, scope: !4187)
!4195 = !DILocation(line: 253, column: 47, scope: !4187)
!4196 = !DILocation(line: 253, column: 50, scope: !4187)
!4197 = !{!4170, !1341, i64 108}
!4198 = !{!4199, !1389, i64 0}
!4199 = !{!"_ZTS13USART_TypeDef", !1389, i64 0, !1389, i64 4, !1389, i64 8, !1389, i64 12, !1389, i64 16, !1389, i64 20, !1389, i64 24}
!4200 = !DILocation(line: 253, column: 5, scope: !4187)
!4201 = distinct !DISubprogram(name: "open", linkageName: "_ZN6Cicada9Stm32Uart4openEv", scope: !748, file: !650, line: 112, type: !812, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, declaration: !811, retainedNodes: !4202)
!4202 = !{!4203}
!4203 = !DILocalVariable(name: "this", arg: 1, scope: !4201, type: !755, flags: DIFlagArtificial | DIFlagObjectPointer)
!4204 = !DILocation(line: 0, scope: !4201)
!4205 = !DILocation(line: 114, column: 12, scope: !4201)
!4206 = !DILocation(line: 114, column: 5, scope: !4201)
!4207 = distinct !DISubprogram(name: "open", linkageName: "_ZN6Cicada9Stm32Uart4openEh", scope: !748, file: !650, line: 117, type: !815, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, declaration: !814, retainedNodes: !4208)
!4208 = !{!4209, !4210, !4211, !4215, !4217, !4221, !4225, !4229, !4233, !4237, !4241, !4245}
!4209 = !DILocalVariable(name: "this", arg: 1, scope: !4207, type: !755, flags: DIFlagArtificial | DIFlagObjectPointer)
!4210 = !DILocalVariable(name: "priority", arg: 2, scope: !4207, file: !650, line: 117, type: !40)
!4211 = !DILocalVariable(name: "tmpreg", scope: !4212, file: !650, line: 121, type: !24)
!4212 = distinct !DILexicalBlock(scope: !4213, file: !650, line: 121, column: 9)
!4213 = distinct !DILexicalBlock(scope: !4214, file: !650, line: 120, column: 37)
!4214 = distinct !DILexicalBlock(scope: !4207, file: !650, line: 120, column: 9)
!4215 = !DILocalVariable(name: "tmpreg", scope: !4216, file: !650, line: 122, type: !23)
!4216 = distinct !DILexicalBlock(scope: !4213, file: !650, line: 122, column: 9)
!4217 = !DILocalVariable(name: "tmpreg", scope: !4218, file: !650, line: 125, type: !23)
!4218 = distinct !DILexicalBlock(scope: !4219, file: !650, line: 125, column: 9)
!4219 = distinct !DILexicalBlock(scope: !4220, file: !650, line: 124, column: 44)
!4220 = distinct !DILexicalBlock(scope: !4214, file: !650, line: 124, column: 16)
!4221 = !DILocalVariable(name: "tmpreg", scope: !4222, file: !650, line: 128, type: !23)
!4222 = distinct !DILexicalBlock(scope: !4223, file: !650, line: 128, column: 9)
!4223 = distinct !DILexicalBlock(scope: !4224, file: !650, line: 127, column: 44)
!4224 = distinct !DILexicalBlock(scope: !4220, file: !650, line: 127, column: 16)
!4225 = !DILocalVariable(name: "tmpreg", scope: !4226, file: !650, line: 146, type: !23)
!4226 = distinct !DILexicalBlock(scope: !4227, file: !650, line: 146, column: 9)
!4227 = distinct !DILexicalBlock(scope: !4228, file: !650, line: 145, column: 29)
!4228 = distinct !DILexicalBlock(scope: !4207, file: !650, line: 145, column: 9)
!4229 = !DILocalVariable(name: "tmpreg", scope: !4230, file: !650, line: 148, type: !23)
!4230 = distinct !DILexicalBlock(scope: !4231, file: !650, line: 148, column: 9)
!4231 = distinct !DILexicalBlock(scope: !4232, file: !650, line: 147, column: 36)
!4232 = distinct !DILexicalBlock(scope: !4228, file: !650, line: 147, column: 16)
!4233 = !DILocalVariable(name: "tmpreg", scope: !4234, file: !650, line: 150, type: !23)
!4234 = distinct !DILexicalBlock(scope: !4235, file: !650, line: 150, column: 9)
!4235 = distinct !DILexicalBlock(scope: !4236, file: !650, line: 149, column: 36)
!4236 = distinct !DILexicalBlock(scope: !4232, file: !650, line: 149, column: 16)
!4237 = !DILocalVariable(name: "tmpreg", scope: !4238, file: !650, line: 152, type: !23)
!4238 = distinct !DILexicalBlock(scope: !4239, file: !650, line: 152, column: 9)
!4239 = distinct !DILexicalBlock(scope: !4240, file: !650, line: 151, column: 36)
!4240 = distinct !DILexicalBlock(scope: !4236, file: !650, line: 151, column: 16)
!4241 = !DILocalVariable(name: "tmpreg", scope: !4242, file: !650, line: 154, type: !23)
!4242 = distinct !DILexicalBlock(scope: !4243, file: !650, line: 154, column: 9)
!4243 = distinct !DILexicalBlock(scope: !4244, file: !650, line: 153, column: 36)
!4244 = distinct !DILexicalBlock(scope: !4240, file: !650, line: 153, column: 16)
!4245 = !DILocalVariable(name: "gpio", scope: !4207, file: !650, line: 166, type: !4246)
!4246 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !962, line: 60, baseType: !4247)
!4247 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !962, line: 47, size: 128, flags: DIFlagTypePassByValue, elements: !4248, identifier: "_ZTS16GPIO_InitTypeDef")
!4248 = !{!4249, !4250, !4251, !4252}
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !4247, file: !962, line: 49, baseType: !24, size: 32)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !4247, file: !962, line: 52, baseType: !24, size: 32, offset: 32)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !4247, file: !962, line: 55, baseType: !24, size: 32, offset: 64)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !4247, file: !962, line: 58, baseType: !24, size: 32, offset: 96)
!4253 = !DILocation(line: 0, scope: !4207)
!4254 = !DILocation(line: 120, column: 9, scope: !4214)
!4255 = !DILocation(line: 120, column: 17, scope: !4214)
!4256 = !DILocation(line: 120, column: 9, scope: !4207)
!4257 = !DILocation(line: 121, column: 9, scope: !4212)
!4258 = !{!4259, !1389, i64 4}
!4259 = !{!"_ZTS12AFIO_TypeDef", !1389, i64 0, !1389, i64 4, !1342, i64 8, !1389, i64 24, !1389, i64 28}
!4260 = !DILocation(line: 0, scope: !4212)
!4261 = !DILocation(line: 122, column: 9, scope: !4216)
!4262 = !{!4263, !1389, i64 24}
!4263 = !{!"_ZTS11RCC_TypeDef", !1389, i64 0, !1389, i64 4, !1389, i64 8, !1389, i64 12, !1389, i64 16, !1389, i64 20, !1389, i64 24, !1389, i64 28, !1389, i64 32, !1389, i64 36}
!4264 = !{!1389, !1389, i64 0}
!4265 = !DILocation(line: 122, column: 9, scope: !4213)
!4266 = !DILocation(line: 124, column: 5, scope: !4213)
!4267 = !DILocation(line: 125, column: 9, scope: !4218)
!4268 = !{!4263, !1389, i64 28}
!4269 = !DILocation(line: 125, column: 9, scope: !4219)
!4270 = !DILocation(line: 127, column: 5, scope: !4219)
!4271 = !DILocation(line: 128, column: 9, scope: !4222)
!4272 = !DILocation(line: 128, column: 9, scope: !4223)
!4273 = !DILocation(line: 0, scope: !4214)
!4274 = !{!4170, !4175, i64 188}
!4275 = !DILocation(line: 145, column: 9, scope: !4228)
!4276 = !{!4170, !1341, i64 180}
!4277 = !DILocation(line: 145, column: 9, scope: !4207)
!4278 = !DILocation(line: 146, column: 9, scope: !4226)
!4279 = !DILocation(line: 146, column: 9, scope: !4227)
!4280 = !DILocation(line: 147, column: 5, scope: !4227)
!4281 = !DILocation(line: 148, column: 9, scope: !4230)
!4282 = !DILocation(line: 148, column: 9, scope: !4231)
!4283 = !DILocation(line: 149, column: 5, scope: !4231)
!4284 = !DILocation(line: 150, column: 9, scope: !4234)
!4285 = !DILocation(line: 150, column: 9, scope: !4235)
!4286 = !DILocation(line: 151, column: 5, scope: !4235)
!4287 = !DILocation(line: 152, column: 9, scope: !4238)
!4288 = !DILocation(line: 152, column: 9, scope: !4239)
!4289 = !DILocation(line: 153, column: 5, scope: !4239)
!4290 = !DILocation(line: 154, column: 9, scope: !4242)
!4291 = !DILocation(line: 154, column: 9, scope: !4243)
!4292 = !DILocation(line: 163, column: 5, scope: !4243)
!4293 = !DILocation(line: 166, column: 5, scope: !4207)
!4294 = !DILocation(line: 166, column: 22, scope: !4207)
!4295 = !DILocation(line: 167, column: 16, scope: !4207)
!4296 = !{!4170, !1453, i64 184}
!4297 = !DILocation(line: 167, column: 10, scope: !4207)
!4298 = !DILocation(line: 167, column: 14, scope: !4207)
!4299 = !{!4300, !1389, i64 0}
!4300 = !{!"_ZTS16GPIO_InitTypeDef", !1389, i64 0, !1389, i64 4, !1389, i64 8, !1389, i64 12}
!4301 = !DILocation(line: 168, column: 10, scope: !4207)
!4302 = !DILocation(line: 168, column: 15, scope: !4207)
!4303 = !{!4300, !1389, i64 4}
!4304 = !DILocation(line: 169, column: 10, scope: !4207)
!4305 = !DILocation(line: 169, column: 15, scope: !4207)
!4306 = !{!4300, !1389, i64 8}
!4307 = !DILocation(line: 170, column: 10, scope: !4207)
!4308 = !DILocation(line: 170, column: 16, scope: !4207)
!4309 = !{!4300, !1389, i64 12}
!4310 = !DILocation(line: 171, column: 5, scope: !4207)
!4311 = !DILocation(line: 173, column: 16, scope: !4207)
!4312 = !{!4170, !1453, i64 186}
!4313 = !DILocation(line: 173, column: 14, scope: !4207)
!4314 = !DILocation(line: 174, column: 15, scope: !4207)
!4315 = !DILocation(line: 175, column: 19, scope: !4207)
!4316 = !DILocation(line: 175, column: 5, scope: !4207)
!4317 = !DILocation(line: 178, column: 18, scope: !4207)
!4318 = !DILocation(line: 178, column: 27, scope: !4207)
!4319 = !{!4170, !1389, i64 120}
!4320 = !DILocation(line: 179, column: 18, scope: !4207)
!4321 = !DILocation(line: 179, column: 25, scope: !4207)
!4322 = !{!4170, !1389, i64 124}
!4323 = !DILocation(line: 180, column: 18, scope: !4207)
!4324 = !DILocation(line: 180, column: 23, scope: !4207)
!4325 = !{!4170, !1389, i64 128}
!4326 = !DILocation(line: 181, column: 18, scope: !4207)
!4327 = !DILocation(line: 181, column: 28, scope: !4207)
!4328 = !{!4170, !1389, i64 132}
!4329 = !DILocation(line: 182, column: 18, scope: !4207)
!4330 = !DILocation(line: 182, column: 31, scope: !4207)
!4331 = !{!4170, !1389, i64 136}
!4332 = !DILocation(line: 184, column: 9, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4207, file: !650, line: 184, column: 9)
!4334 = !DILocation(line: 184, column: 33, scope: !4333)
!4335 = !DILocation(line: 184, column: 9, scope: !4207)
!4336 = !DILocation(line: 188, column: 22, scope: !4207)
!4337 = !DILocation(line: 188, column: 46, scope: !4207)
!4338 = !DILocation(line: 188, column: 5, scope: !4207)
!4339 = !DILocation(line: 189, column: 20, scope: !4207)
!4340 = !DILocation(line: 189, column: 5, scope: !4207)
!4341 = !DILocation(line: 190, column: 5, scope: !4207)
!4342 = !{!4199, !1389, i64 12}
!4343 = !DILocation(line: 192, column: 5, scope: !4207)
!4344 = !DILocation(line: 192, column: 12, scope: !4207)
!4345 = !DILocation(line: 194, column: 5, scope: !4207)
!4346 = !DILocation(line: 195, column: 1, scope: !4207)
!4347 = distinct !DISubprogram(name: "isOpen", linkageName: "_ZN6Cicada9Stm32Uart6isOpenEv", scope: !748, file: !650, line: 207, type: !812, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, declaration: !817, retainedNodes: !4348)
!4348 = !{!4349}
!4349 = !DILocalVariable(name: "this", arg: 1, scope: !4347, type: !755, flags: DIFlagArtificial | DIFlagObjectPointer)
!4350 = !DILocation(line: 0, scope: !4347)
!4351 = !DILocation(line: 209, column: 12, scope: !4347)
!4352 = !DILocation(line: 209, column: 19, scope: !4347)
!4353 = !DILocation(line: 209, column: 5, scope: !4347)
!4354 = distinct !DISubprogram(name: "setSerialConfig", linkageName: "_ZN6Cicada9Stm32Uart15setSerialConfigEjh", scope: !748, file: !650, line: 91, type: !819, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, declaration: !818, retainedNodes: !4355)
!4355 = !{!4356, !4357, !4358}
!4356 = !DILocalVariable(name: "this", arg: 1, scope: !4354, type: !755, flags: DIFlagArtificial | DIFlagObjectPointer)
!4357 = !DILocalVariable(name: "baudRate", arg: 2, scope: !4354, file: !650, line: 91, type: !24)
!4358 = !DILocalVariable(name: "dataBits", arg: 3, scope: !4354, file: !650, line: 91, type: !40)
!4359 = !DILocation(line: 0, scope: !4354)
!4360 = !DILocation(line: 93, column: 23, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4354, file: !650, line: 93, column: 9)
!4362 = !DILocation(line: 96, column: 18, scope: !4354)
!4363 = !DILocation(line: 96, column: 27, scope: !4354)
!4364 = !{!4170, !1389, i64 112}
!4365 = !DILocation(line: 98, column: 5, scope: !4354)
!4366 = !DILocation(line: 104, column: 9, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4354, file: !650, line: 98, column: 23)
!4368 = !DILocation(line: 0, scope: !4367)
!4369 = !{!4170, !1389, i64 116}
!4370 = !DILocation(line: 110, column: 1, scope: !4354)
!4371 = distinct !DISubprogram(name: "close", linkageName: "_ZN6Cicada9Stm32Uart5closeEv", scope: !748, file: !650, line: 197, type: !806, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, declaration: !821, retainedNodes: !4372)
!4372 = !{!4373}
!4373 = !DILocalVariable(name: "this", arg: 1, scope: !4371, type: !755, flags: DIFlagArtificial | DIFlagObjectPointer)
!4374 = !DILocation(line: 0, scope: !4371)
!4375 = !DILocation(line: 199, column: 21, scope: !4371)
!4376 = !DILocation(line: 199, column: 5, scope: !4371)
!4377 = !DILocation(line: 200, column: 22, scope: !4371)
!4378 = !DILocation(line: 200, column: 5, scope: !4371)
!4379 = !DILocation(line: 201, column: 21, scope: !4371)
!4380 = !DILocation(line: 201, column: 32, scope: !4371)
!4381 = !DILocation(line: 201, column: 5, scope: !4371)
!4382 = !DILocation(line: 202, column: 21, scope: !4371)
!4383 = !DILocation(line: 202, column: 32, scope: !4371)
!4384 = !DILocation(line: 202, column: 5, scope: !4371)
!4385 = !DILocation(line: 204, column: 5, scope: !4371)
!4386 = !DILocation(line: 204, column: 12, scope: !4371)
!4387 = !DILocation(line: 205, column: 1, scope: !4371)
!4388 = distinct !DISubprogram(name: "portName", linkageName: "_ZNK6Cicada9Stm32Uart8portNameEv", scope: !748, file: !650, line: 212, type: !823, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, declaration: !822, retainedNodes: !4389)
!4389 = !{!4390}
!4390 = !DILocalVariable(name: "this", arg: 1, scope: !4388, type: !4190, flags: DIFlagArtificial | DIFlagObjectPointer)
!4391 = !DILocation(line: 0, scope: !4388)
!4392 = !DILocation(line: 214, column: 5, scope: !4388)
!4393 = distinct !DISubprogram(name: "rawRead", linkageName: "_ZN6Cicada9Stm32Uart7rawReadERh", scope: !748, file: !650, line: 217, type: !828, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, declaration: !827, retainedNodes: !4394)
!4394 = !{!4395, !4396}
!4395 = !DILocalVariable(name: "this", arg: 1, scope: !4393, type: !755, flags: DIFlagArtificial | DIFlagObjectPointer)
!4396 = !DILocalVariable(name: "data", arg: 2, scope: !4393, file: !650, line: 217, type: !155)
!4397 = !DILocation(line: 0, scope: !4393)
!4398 = !DILocation(line: 219, column: 9, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4393, file: !650, line: 219, column: 9)
!4400 = !DILocation(line: 219, column: 55, scope: !4399)
!4401 = !DILocation(line: 220, column: 9, scope: !4399)
!4402 = !DILocation(line: 219, column: 9, scope: !4393)
!4403 = !DILocation(line: 221, column: 25, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4399, file: !650, line: 220, column: 55)
!4405 = !{!4199, !1389, i64 4}
!4406 = !DILocation(line: 221, column: 14, scope: !4404)
!4407 = !DILocation(line: 222, column: 9, scope: !4404)
!4408 = !DILocation(line: 226, column: 1, scope: !4393)
!4409 = distinct !DISubprogram(name: "rawWrite", linkageName: "_ZN6Cicada9Stm32Uart8rawWriteEh", scope: !748, file: !650, line: 228, type: !815, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, declaration: !830, retainedNodes: !4410)
!4410 = !{!4411, !4412}
!4411 = !DILocalVariable(name: "this", arg: 1, scope: !4409, type: !755, flags: DIFlagArtificial | DIFlagObjectPointer)
!4412 = !DILocalVariable(name: "data", arg: 2, scope: !4409, file: !650, line: 228, type: !40)
!4413 = !DILocation(line: 0, scope: !4409)
!4414 = !DILocation(line: 230, column: 9, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4409, file: !650, line: 230, column: 9)
!4416 = !DILocation(line: 230, column: 9, scope: !4409)
!4417 = !DILocation(line: 231, column: 9, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4415, file: !650, line: 230, column: 55)
!4419 = !DILocation(line: 232, column: 9, scope: !4418)
!4420 = !DILocation(line: 236, column: 1, scope: !4409)
!4421 = distinct !DISubprogram(name: "startTransmit", linkageName: "_ZN6Cicada9Stm32Uart13startTransmitEv", scope: !748, file: !650, line: 238, type: !806, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, declaration: !831, retainedNodes: !4422)
!4422 = !{!4423}
!4423 = !DILocalVariable(name: "this", arg: 1, scope: !4421, type: !755, flags: DIFlagArtificial | DIFlagObjectPointer)
!4424 = !DILocation(line: 0, scope: !4421)
!4425 = !DILocation(line: 240, column: 5, scope: !4421)
!4426 = !DILocation(line: 241, column: 1, scope: !4421)
!4427 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32UartD1Ev", scope: !650, file: !650, line: 73, type: !4428, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, retainedNodes: !202)
!4428 = !DISubroutineType(types: !202)
!4429 = !DILocation(line: 0, scope: !4427)
!4430 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32UartD0Ev", scope: !650, file: !650, line: 73, type: !4428, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, retainedNodes: !202)
!4431 = !DILocation(line: 0, scope: !4430)
!4432 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart4openEv", scope: !650, file: !650, line: 112, type: !4428, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, retainedNodes: !202)
!4433 = !DILocation(line: 0, scope: !4432)
!4434 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart6isOpenEv", scope: !650, file: !650, line: 207, type: !4428, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, retainedNodes: !202)
!4435 = !DILocation(line: 0, scope: !4434)
!4436 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart15setSerialConfigEjh", scope: !650, file: !650, line: 91, type: !4428, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, retainedNodes: !202)
!4437 = !DILocation(line: 0, scope: !4436)
!4438 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart5closeEv", scope: !650, file: !650, line: 197, type: !4428, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, retainedNodes: !202)
!4439 = !DILocation(line: 0, scope: !4438)
!4440 = distinct !DISubprogram(linkageName: "_ZThn4_NK6Cicada9Stm32Uart8portNameEv", scope: !650, file: !650, line: 212, type: !4428, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, retainedNodes: !202)
!4441 = !DILocation(line: 0, scope: !4440)
!4442 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart7rawReadERh", scope: !650, file: !650, line: 217, type: !4428, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, retainedNodes: !202)
!4443 = !DILocation(line: 0, scope: !4442)
!4444 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart8rawWriteEh", scope: !650, file: !650, line: 228, type: !4428, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, retainedNodes: !202)
!4445 = !DILocation(line: 0, scope: !4444)
!4446 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart13startTransmitEv", scope: !650, file: !650, line: 238, type: !4428, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, retainedNodes: !202)
!4447 = !DILocation(line: 0, scope: !4446)
!4448 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", linkageName: "_ZL17__NVIC_DisableIRQ9IRQn_Type", scope: !476, file: !476, line: 1547, type: !4449, scopeLine: 1548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !649, retainedNodes: !4451)
!4449 = !DISubroutineType(types: !4450)
!4450 = !{null, !797}
!4451 = !{!4452}
!4452 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4448, file: !476, line: 1547, type: !797)
!4453 = !DILocation(line: 0, scope: !4448)
!4454 = !DILocation(line: 1549, column: 23, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4448, file: !476, line: 1549, column: 7)
!4456 = !DILocation(line: 1549, column: 7, scope: !4448)
!4457 = !DILocation(line: 1551, column: 81, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4455, file: !476, line: 1550, column: 3)
!4459 = !DILocation(line: 1551, column: 60, scope: !4458)
!4460 = !DILocation(line: 1551, column: 34, scope: !4458)
!4461 = !DILocation(line: 1551, column: 5, scope: !4458)
!4462 = !DILocation(line: 1551, column: 43, scope: !4458)
!4463 = !DILocation(line: 879, column: 3, scope: !4464, inlinedAt: !4465)
!4464 = distinct !DISubprogram(name: "__DSB", linkageName: "_ZL5__DSBv", scope: !3600, file: !3600, line: 877, type: !4, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !649, retainedNodes: !202)
!4465 = distinct !DILocation(line: 1552, column: 5, scope: !4458)
!4466 = !{i64 1321711}
!4467 = !DILocation(line: 868, column: 3, scope: !4468, inlinedAt: !4469)
!4468 = distinct !DISubprogram(name: "__ISB", linkageName: "_ZL5__ISBv", scope: !3600, file: !3600, line: 866, type: !4, scopeLine: 867, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !649, retainedNodes: !202)
!4469 = distinct !DILocation(line: 1553, column: 5, scope: !4458)
!4470 = !{i64 1321417}
!4471 = !DILocation(line: 1554, column: 3, scope: !4458)
!4472 = !DILocation(line: 1555, column: 1, scope: !4448)
!4473 = distinct !DISubprogram(name: "__NVIC_SetPriority", linkageName: "_ZL18__NVIC_SetPriority9IRQn_Typej", scope: !476, file: !476, line: 1639, type: !4474, scopeLine: 1640, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !649, retainedNodes: !4476)
!4474 = !DISubroutineType(types: !4475)
!4475 = !{null, !797, !24}
!4476 = !{!4477, !4478}
!4477 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4473, file: !476, line: 1639, type: !797)
!4478 = !DILocalVariable(name: "priority", arg: 2, scope: !4473, file: !476, line: 1639, type: !24)
!4479 = !DILocation(line: 0, scope: !4473)
!4480 = !DILocation(line: 0, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4473, file: !476, line: 1641, column: 7)
!4482 = !DILocation(line: 1641, column: 7, scope: !4473)
!4483 = !DILocation(line: 1649, column: 1, scope: !4473)
!4484 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", linkageName: "_ZL16__NVIC_EnableIRQ9IRQn_Type", scope: !476, file: !476, line: 1511, type: !4449, scopeLine: 1512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !649, retainedNodes: !4485)
!4485 = !{!4486}
!4486 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4484, file: !476, line: 1511, type: !797)
!4487 = !DILocation(line: 0, scope: !4484)
!4488 = !DILocation(line: 1513, column: 23, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4484, file: !476, line: 1513, column: 7)
!4490 = !DILocation(line: 1513, column: 7, scope: !4484)
!4491 = !DILocation(line: 1515, column: 81, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4489, file: !476, line: 1514, column: 3)
!4493 = !DILocation(line: 1515, column: 60, scope: !4492)
!4494 = !DILocation(line: 1515, column: 34, scope: !4492)
!4495 = !DILocation(line: 1515, column: 5, scope: !4492)
!4496 = !DILocation(line: 1515, column: 43, scope: !4492)
!4497 = !DILocation(line: 1516, column: 3, scope: !4492)
!4498 = !DILocation(line: 1517, column: 1, scope: !4484)
!4499 = distinct !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv", scope: !1054, file: !1055, line: 174, type: !1092, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, declaration: !1091, retainedNodes: !4500)
!4500 = !{!4501}
!4501 = !DILocalVariable(name: "this", arg: 1, scope: !4499, type: !4502, flags: DIFlagArtificial | DIFlagObjectPointer)
!4502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 32)
!4503 = !DILocation(line: 0, scope: !4499)
!4504 = !DILocation(line: 176, column: 16, scope: !4499)
!4505 = !{!4506, !4507, i64 24}
!4506 = !{!"_ZTSN6Cicada14CircularBufferIcEE", !4507, i64 8, !4507, i64 16, !4507, i64 24, !4507, i64 32, !1341, i64 40}
!4507 = !{!"long long", !1342, i64 0}
!4508 = !DILocation(line: 176, column: 9, scope: !4499)
!4509 = distinct !DISubprogram(name: "~BufferedSerial", linkageName: "_ZN6Cicada14BufferedSerialD2Ev", scope: !751, file: !752, line: 42, type: !4510, scopeLine: 42, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, declaration: !4513, retainedNodes: !4514)
!4510 = !DISubroutineType(types: !4511)
!4511 = !{null, !4512}
!4512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!4513 = !DISubprogram(name: "~BufferedSerial", scope: !751, type: !4510, containingType: !751, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!4514 = !{!4515}
!4515 = !DILocalVariable(name: "this", arg: 1, scope: !4509, type: !4516, flags: DIFlagArtificial | DIFlagObjectPointer)
!4516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 32)
!4517 = !DILocation(line: 0, scope: !4509)
!4518 = !DILocation(line: 42, column: 7, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4509, file: !752, line: 42, column: 7)
!4520 = !DILocation(line: 42, column: 7, scope: !4509)
!4521 = distinct !DISubprogram(name: "~CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIcED2Ev", scope: !1054, file: !1055, line: 56, type: !1069, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, declaration: !1068, retainedNodes: !4522)
!4522 = !{!4523}
!4523 = !DILocalVariable(name: "this", arg: 1, scope: !4521, type: !4524, flags: DIFlagArtificial | DIFlagObjectPointer)
!4524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 32)
!4525 = !DILocation(line: 0, scope: !4521)
!4526 = !DILocation(line: 57, column: 7, scope: !4521)
!4527 = distinct !DISubprogram(name: "~IBufferedSerial", linkageName: "_ZN6Cicada15IBufferedSerialD2Ev", scope: !95, file: !96, line: 42, type: !161, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, declaration: !160, retainedNodes: !4528)
!4528 = !{!4529}
!4529 = !DILocalVariable(name: "this", arg: 1, scope: !4527, type: !4530, flags: DIFlagArtificial | DIFlagObjectPointer)
!4530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 32)
!4531 = !DILocation(line: 0, scope: !4527)
!4532 = !DILocation(line: 42, column: 34, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4527, file: !96, line: 42, column: 32)
!4534 = !DILocation(line: 42, column: 34, scope: !4527)
!4535 = distinct !DISubprogram(name: "~ISerial", linkageName: "_ZN6Cicada7ISerialD2Ev", scope: !128, file: !129, line: 40, type: !133, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, declaration: !132, retainedNodes: !4536)
!4536 = !{!4537}
!4537 = !DILocalVariable(name: "this", arg: 1, scope: !4535, type: !4538, flags: DIFlagArtificial | DIFlagObjectPointer)
!4538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 32)
!4539 = !DILocation(line: 0, scope: !4535)
!4540 = !DILocation(line: 40, column: 26, scope: !4535)
!4541 = distinct !DISubprogram(name: "~ICommDevice", linkageName: "_ZN6Cicada11ICommDeviceD2Ev", scope: !99, file: !100, line: 46, type: !104, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, declaration: !103, retainedNodes: !4542)
!4542 = !{!4543}
!4543 = !DILocalVariable(name: "this", arg: 1, scope: !4541, type: !4544, flags: DIFlagArtificial | DIFlagObjectPointer)
!4544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !99, size: 32)
!4545 = !DILocation(line: 0, scope: !4541)
!4546 = !DILocation(line: 46, column: 30, scope: !4541)
!4547 = distinct !DISubprogram(name: "Stm32Uart", linkageName: "_ZN6Cicada9Stm32UartC2EPcS1_yyP13USART_TypeDefP12GPIO_TypeDeftt", scope: !748, file: !650, line: 34, type: !803, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, declaration: !802, retainedNodes: !4548)
!4548 = !{!4549, !4550, !4551, !4552, !4553, !4554, !4555, !4556, !4557}
!4549 = !DILocalVariable(name: "this", arg: 1, scope: !4547, type: !755, flags: DIFlagArtificial | DIFlagObjectPointer)
!4550 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !4547, file: !650, line: 34, type: !338)
!4551 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !4547, file: !650, line: 34, type: !338)
!4552 = !DILocalVariable(name: "readBufferSize", arg: 4, scope: !4547, file: !650, line: 34, type: !110)
!4553 = !DILocalVariable(name: "writeBufferSize", arg: 5, scope: !4547, file: !650, line: 34, type: !110)
!4554 = !DILocalVariable(name: "uartInstance", arg: 6, scope: !4547, file: !650, line: 35, type: !17)
!4555 = !DILocalVariable(name: "uartPort", arg: 7, scope: !4547, file: !650, line: 35, type: !34)
!4556 = !DILocalVariable(name: "txPin", arg: 8, scope: !4547, file: !650, line: 35, type: !37)
!4557 = !DILocalVariable(name: "rxPin", arg: 9, scope: !4547, file: !650, line: 35, type: !37)
!4558 = !DILocation(line: 0, scope: !4547)
!4559 = !DILocation(line: 43, column: 1, scope: !4547)
!4560 = !DILocation(line: 36, column: 5, scope: !4547)
!4561 = !DILocation(line: 37, column: 5, scope: !4547)
!4562 = !DILocation(line: 38, column: 5, scope: !4547)
!4563 = !DILocation(line: 39, column: 5, scope: !4547)
!4564 = !DILocation(line: 40, column: 5, scope: !4547)
!4565 = !DILocation(line: 41, column: 5, scope: !4547)
!4566 = !DILocation(line: 42, column: 5, scope: !4547)
!4567 = !DILocation(line: 44, column: 5, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4547, file: !650, line: 43, column: 1)
!4569 = !DILocation(line: 45, column: 1, scope: !4547)
!4570 = distinct !DISubprogram(name: "init", linkageName: "_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef", scope: !748, file: !650, line: 59, type: !845, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, declaration: !844, retainedNodes: !4571)
!4571 = !{!4572, !4573, !4574}
!4572 = !DILocalVariable(name: "this", arg: 1, scope: !4570, type: !755, flags: DIFlagArtificial | DIFlagObjectPointer)
!4573 = !DILocalVariable(name: "uartInstance", arg: 2, scope: !4570, file: !650, line: 59, type: !17)
!4574 = !DILocalVariable(name: "i", scope: !4575, file: !650, line: 65, type: !58)
!4575 = distinct !DILexicalBlock(scope: !4570, file: !650, line: 65, column: 5)
!4576 = !DILocation(line: 0, scope: !4570)
!4577 = !DILocation(line: 61, column: 13, scope: !4570)
!4578 = !DILocation(line: 61, column: 22, scope: !4570)
!4579 = !DILocation(line: 62, column: 18, scope: !4570)
!4580 = !DILocation(line: 62, column: 27, scope: !4570)
!4581 = !DILocation(line: 63, column: 18, scope: !4570)
!4582 = !DILocation(line: 63, column: 29, scope: !4570)
!4583 = !DILocation(line: 0, scope: !4575)
!4584 = !DILocation(line: 65, column: 5, scope: !4575)
!4585 = !DILocation(line: 65, column: 52, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4575, file: !650, line: 65, column: 5)
!4587 = !DILocation(line: 65, column: 23, scope: !4586)
!4588 = distinct !{!4588, !4584, !4589, !1499, !1500}
!4589 = !DILocation(line: 70, column: 5, scope: !4575)
!4590 = !DILocation(line: 66, column: 13, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4592, file: !650, line: 66, column: 13)
!4592 = distinct !DILexicalBlock(scope: !4586, file: !650, line: 65, column: 56)
!4593 = !DILocation(line: 66, column: 25, scope: !4591)
!4594 = !DILocation(line: 66, column: 13, scope: !4592)
!4595 = !DILocation(line: 67, column: 25, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4591, file: !650, line: 66, column: 34)
!4597 = !DILocation(line: 68, column: 13, scope: !4596)
!4598 = !DILocation(line: 71, column: 1, scope: !4570)
!4599 = distinct !DISubprogram(name: "Stm32Uart", linkageName: "_ZN6Cicada9Stm32UartC2EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt", scope: !748, file: !650, line: 46, type: !799, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, declaration: !798, retainedNodes: !4600)
!4600 = !{!4601, !4602, !4603, !4604, !4605, !4606, !4607, !4608}
!4601 = !DILocalVariable(name: "this", arg: 1, scope: !4599, type: !755, flags: DIFlagArtificial | DIFlagObjectPointer)
!4602 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !4599, file: !650, line: 46, type: !338)
!4603 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !4599, file: !650, line: 46, type: !338)
!4604 = !DILocalVariable(name: "bufferSize", arg: 4, scope: !4599, file: !650, line: 46, type: !110)
!4605 = !DILocalVariable(name: "uartInstance", arg: 5, scope: !4599, file: !650, line: 47, type: !17)
!4606 = !DILocalVariable(name: "uartPort", arg: 6, scope: !4599, file: !650, line: 47, type: !34)
!4607 = !DILocalVariable(name: "txPin", arg: 7, scope: !4599, file: !650, line: 47, type: !37)
!4608 = !DILocalVariable(name: "rxPin", arg: 8, scope: !4599, file: !650, line: 47, type: !37)
!4609 = !DILocation(line: 0, scope: !4599)
!4610 = !DILocation(line: 55, column: 1, scope: !4599)
!4611 = !DILocation(line: 48, column: 5, scope: !4599)
!4612 = !DILocation(line: 49, column: 5, scope: !4599)
!4613 = !DILocation(line: 50, column: 5, scope: !4599)
!4614 = !DILocation(line: 51, column: 5, scope: !4599)
!4615 = !DILocation(line: 52, column: 5, scope: !4599)
!4616 = !DILocation(line: 53, column: 5, scope: !4599)
!4617 = !DILocation(line: 54, column: 5, scope: !4599)
!4618 = !DILocation(line: 56, column: 5, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4599, file: !650, line: 55, column: 1)
!4620 = !DILocation(line: 57, column: 1, scope: !4599)
!4621 = distinct !DISubprogram(name: "getInstance", linkageName: "_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef", scope: !748, file: !650, line: 79, type: !809, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, declaration: !808, retainedNodes: !4622)
!4622 = !{!4623, !4624, !4626}
!4623 = !DILocalVariable(name: "uartInstance", arg: 1, scope: !4621, file: !650, line: 79, type: !17)
!4624 = !DILocalVariable(name: "i", scope: !4625, file: !650, line: 81, type: !58)
!4625 = distinct !DILexicalBlock(scope: !4621, file: !650, line: 81, column: 5)
!4626 = !DILocalVariable(name: "uart", scope: !4627, file: !650, line: 82, type: !755)
!4627 = distinct !DILexicalBlock(scope: !4628, file: !650, line: 81, column: 56)
!4628 = distinct !DILexicalBlock(scope: !4625, file: !650, line: 81, column: 5)
!4629 = !DILocation(line: 0, scope: !4621)
!4630 = !DILocation(line: 0, scope: !4625)
!4631 = !DILocation(line: 81, column: 5, scope: !4625)
!4632 = !DILocation(line: 81, column: 52, scope: !4628)
!4633 = !DILocation(line: 81, column: 23, scope: !4628)
!4634 = distinct !{!4634, !4631, !4635, !1499, !1500}
!4635 = !DILocation(line: 86, column: 5, scope: !4625)
!4636 = !DILocation(line: 82, column: 27, scope: !4627)
!4637 = !DILocation(line: 0, scope: !4627)
!4638 = !DILocation(line: 83, column: 18, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4627, file: !650, line: 83, column: 13)
!4640 = !DILocation(line: 83, column: 26, scope: !4639)
!4641 = !DILocation(line: 83, column: 43, scope: !4639)
!4642 = !DILocation(line: 83, column: 52, scope: !4639)
!4643 = !DILocation(line: 83, column: 13, scope: !4627)
!4644 = !DILocation(line: 86, column: 5, scope: !4628)
!4645 = !DILocation(line: 89, column: 1, scope: !4621)
!4646 = distinct !DISubprogram(name: "handleInterrupt", linkageName: "_ZN6Cicada9Stm32Uart15handleInterruptEv", scope: !748, file: !650, line: 243, type: !806, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !649, declaration: !835, retainedNodes: !4647)
!4647 = !{!4648}
!4648 = !DILocalVariable(name: "this", arg: 1, scope: !4646, type: !755, flags: DIFlagArtificial | DIFlagObjectPointer)
!4649 = !DILocation(line: 0, scope: !4646)
!4650 = !DILocation(line: 245, column: 5, scope: !4646)
!4651 = !DILocation(line: 247, column: 10, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4646, file: !650, line: 247, column: 9)
!4653 = !DILocation(line: 247, column: 23, scope: !4652)
!4654 = !DILocation(line: 247, column: 9, scope: !4646)
!4655 = !DILocation(line: 248, column: 9, scope: !4652)
!4656 = !DILocation(line: 249, column: 1, scope: !4646)
!4657 = distinct !DISubprogram(name: "~BufferedSerial", linkageName: "_ZN6Cicada14BufferedSerialD0Ev", scope: !1046, file: !752, line: 42, type: !1162, scopeLine: 42, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !4658, retainedNodes: !4659)
!4658 = !DISubprogram(name: "~BufferedSerial", scope: !1046, type: !1162, containingType: !1046, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!4659 = !{!4660}
!4660 = !DILocalVariable(name: "this", arg: 1, scope: !4657, type: !4661, flags: DIFlagArtificial | DIFlagObjectPointer)
!4661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 32)
!4662 = !DILocation(line: 0, scope: !4657)
!4663 = !DILocation(line: 42, column: 7, scope: !4657)
!4664 = distinct !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14BufferedSerial14bytesAvailableEv", scope: !1046, file: !1044, line: 39, type: !1137, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1136, retainedNodes: !4665)
!4665 = !{!4666, !4668}
!4666 = !DILocalVariable(name: "this", arg: 1, scope: !4664, type: !4667, flags: DIFlagArtificial | DIFlagObjectPointer)
!4667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 32)
!4668 = !DILocalVariable(name: "availableData", scope: !4664, file: !1044, line: 42, type: !110)
!4669 = !DILocation(line: 0, scope: !4664)
!4670 = !DILocation(line: 41, column: 5, scope: !4664)
!4671 = !DILocation(line: 42, column: 26, scope: !4664)
!4672 = !DILocation(line: 42, column: 38, scope: !4664)
!4673 = !DILocation(line: 43, column: 5, scope: !4664)
!4674 = !DILocation(line: 45, column: 5, scope: !4664)
!4675 = distinct !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14BufferedSerial14spaceAvailableEv", scope: !1046, file: !1044, line: 48, type: !1137, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1141, retainedNodes: !4676)
!4676 = !{!4677, !4678}
!4677 = !DILocalVariable(name: "this", arg: 1, scope: !4675, type: !4667, flags: DIFlagArtificial | DIFlagObjectPointer)
!4678 = !DILocalVariable(name: "spaceAvailable", scope: !4675, file: !1044, line: 51, type: !110)
!4679 = !DILocation(line: 0, scope: !4675)
!4680 = !DILocation(line: 50, column: 5, scope: !4675)
!4681 = !DILocation(line: 51, column: 27, scope: !4675)
!4682 = !DILocation(line: 51, column: 40, scope: !4675)
!4683 = !DILocation(line: 52, column: 5, scope: !4675)
!4684 = !DILocation(line: 54, column: 5, scope: !4675)
!4685 = distinct !DISubprogram(name: "read", linkageName: "_ZN6Cicada14BufferedSerial4readEPhy", scope: !1046, file: !1044, line: 57, type: !1143, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1142, retainedNodes: !4686)
!4686 = !{!4687, !4688, !4689, !4690, !4691}
!4687 = !DILocalVariable(name: "this", arg: 1, scope: !4685, type: !4661, flags: DIFlagArtificial | DIFlagObjectPointer)
!4688 = !DILocalVariable(name: "data", arg: 2, scope: !4685, file: !1044, line: 57, type: !45)
!4689 = !DILocalVariable(name: "size", arg: 3, scope: !4685, file: !1044, line: 57, type: !110)
!4690 = !DILocalVariable(name: "avail", scope: !4685, file: !1044, line: 59, type: !110)
!4691 = !DILocalVariable(name: "readCount", scope: !4685, file: !1044, line: 63, type: !110)
!4692 = !DILocation(line: 0, scope: !4685)
!4693 = !DILocation(line: 59, column: 18, scope: !4685)
!4694 = !DILocation(line: 60, column: 14, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4685, file: !1044, line: 60, column: 9)
!4696 = !DILocation(line: 60, column: 9, scope: !4685)
!4697 = !DILocation(line: 65, column: 22, scope: !4685)
!4698 = !DILocation(line: 65, column: 5, scope: !4685)
!4699 = !DILocation(line: 66, column: 29, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4685, file: !1044, line: 65, column: 30)
!4701 = !DILocation(line: 66, column: 23, scope: !4700)
!4702 = !DILocation(line: 66, column: 9, scope: !4700)
!4703 = !DILocation(line: 66, column: 27, scope: !4700)
!4704 = distinct !{!4704, !4698, !4705, !1499, !1500}
!4705 = !DILocation(line: 67, column: 5, scope: !4685)
!4706 = !DILocation(line: 69, column: 5, scope: !4685)
!4707 = distinct !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEPKhy", scope: !1046, file: !1044, line: 81, type: !1149, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1148, retainedNodes: !4708)
!4708 = !{!4709, !4710, !4711, !4712, !4713}
!4709 = !DILocalVariable(name: "this", arg: 1, scope: !4707, type: !4661, flags: DIFlagArtificial | DIFlagObjectPointer)
!4710 = !DILocalVariable(name: "data", arg: 2, scope: !4707, file: !1044, line: 81, type: !43)
!4711 = !DILocalVariable(name: "size", arg: 3, scope: !4707, file: !1044, line: 81, type: !110)
!4712 = !DILocalVariable(name: "space", scope: !4707, file: !1044, line: 83, type: !110)
!4713 = !DILocalVariable(name: "writeCount", scope: !4707, file: !1044, line: 87, type: !110)
!4714 = !DILocation(line: 0, scope: !4707)
!4715 = !DILocation(line: 83, column: 18, scope: !4707)
!4716 = !DILocation(line: 84, column: 14, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4707, file: !1044, line: 84, column: 9)
!4718 = !DILocation(line: 84, column: 9, scope: !4707)
!4719 = !DILocation(line: 89, column: 23, scope: !4707)
!4720 = !DILocation(line: 89, column: 5, scope: !4707)
!4721 = !DILocation(line: 90, column: 37, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4707, file: !1044, line: 89, column: 31)
!4723 = !DILocation(line: 90, column: 22, scope: !4722)
!4724 = !DILocation(line: 90, column: 9, scope: !4722)
!4725 = distinct !{!4725, !4720, !4726, !1499, !1500}
!4726 = !DILocation(line: 91, column: 5, scope: !4707)
!4727 = !DILocation(line: 93, column: 5, scope: !4707)
!4728 = !DILocation(line: 95, column: 5, scope: !4707)
!4729 = distinct !DISubprogram(name: "read", linkageName: "_ZN6Cicada14BufferedSerial4readEv", scope: !1046, file: !1044, line: 72, type: !1146, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1145, retainedNodes: !4730)
!4730 = !{!4731, !4732}
!4731 = !DILocalVariable(name: "this", arg: 1, scope: !4729, type: !4661, flags: DIFlagArtificial | DIFlagObjectPointer)
!4732 = !DILocalVariable(name: "c", scope: !4729, file: !1044, line: 75, type: !40)
!4733 = !DILocation(line: 0, scope: !4729)
!4734 = !DILocation(line: 74, column: 5, scope: !4729)
!4735 = !DILocation(line: 75, column: 17, scope: !4729)
!4736 = !DILocation(line: 75, column: 29, scope: !4729)
!4737 = !DILocation(line: 76, column: 5, scope: !4729)
!4738 = !DILocation(line: 78, column: 5, scope: !4729)
!4739 = distinct !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEPKh", scope: !1046, file: !1044, line: 98, type: !1152, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1151, retainedNodes: !4740)
!4740 = !{!4741, !4742, !4743, !4744}
!4741 = !DILocalVariable(name: "this", arg: 1, scope: !4739, type: !4661, flags: DIFlagArtificial | DIFlagObjectPointer)
!4742 = !DILocalVariable(name: "data", arg: 2, scope: !4739, file: !1044, line: 98, type: !43)
!4743 = !DILocalVariable(name: "space", scope: !4739, file: !1044, line: 100, type: !110)
!4744 = !DILocalVariable(name: "writeCount", scope: !4739, file: !1044, line: 102, type: !110)
!4745 = !DILocation(line: 0, scope: !4739)
!4746 = !DILocation(line: 100, column: 18, scope: !4739)
!4747 = !DILocation(line: 104, column: 12, scope: !4739)
!4748 = !DILocation(line: 104, column: 29, scope: !4739)
!4749 = !DILocation(line: 104, column: 37, scope: !4739)
!4750 = !DILocation(line: 104, column: 5, scope: !4739)
!4751 = !DILocation(line: 105, column: 37, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4739, file: !1044, line: 104, column: 60)
!4753 = !DILocation(line: 105, column: 9, scope: !4752)
!4754 = distinct !{!4754, !4750, !4755, !1499, !1500}
!4755 = !DILocation(line: 106, column: 5, scope: !4739)
!4756 = !DILocation(line: 108, column: 5, scope: !4739)
!4757 = !DILocation(line: 110, column: 5, scope: !4739)
!4758 = distinct !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEh", scope: !1046, file: !1044, line: 113, type: !1155, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1154, retainedNodes: !4759)
!4759 = !{!4760, !4761}
!4760 = !DILocalVariable(name: "this", arg: 1, scope: !4758, type: !4661, flags: DIFlagArtificial | DIFlagObjectPointer)
!4761 = !DILocalVariable(name: "data", arg: 2, scope: !4758, file: !1044, line: 113, type: !40)
!4762 = !DILocation(line: 0, scope: !4758)
!4763 = !DILocation(line: 115, column: 5, scope: !4758)
!4764 = !DILocation(line: 116, column: 5, scope: !4758)
!4765 = !DILocation(line: 117, column: 1, scope: !4758)
!4766 = distinct !DISubprogram(name: "canReadLine", linkageName: "_ZNK6Cicada14BufferedSerial11canReadLineEv", scope: !1046, file: !1044, line: 126, type: !1158, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1157, retainedNodes: !4767)
!4767 = !{!4768, !4769}
!4768 = !DILocalVariable(name: "this", arg: 1, scope: !4766, type: !4667, flags: DIFlagArtificial | DIFlagObjectPointer)
!4769 = !DILocalVariable(name: "lines", scope: !4766, file: !1044, line: 129, type: !110)
!4770 = !DILocation(line: 0, scope: !4766)
!4771 = !DILocation(line: 128, column: 5, scope: !4766)
!4772 = !DILocation(line: 129, column: 18, scope: !4766)
!4773 = !DILocation(line: 129, column: 30, scope: !4766)
!4774 = !DILocation(line: 130, column: 5, scope: !4766)
!4775 = !DILocation(line: 132, column: 18, scope: !4766)
!4776 = !DILocation(line: 132, column: 5, scope: !4766)
!4777 = distinct !DISubprogram(name: "readLine", linkageName: "_ZN6Cicada14BufferedSerial8readLineEPhy", scope: !1046, file: !1044, line: 135, type: !1143, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1160, retainedNodes: !4778)
!4778 = !{!4779, !4780, !4781, !4782, !4783}
!4779 = !DILocalVariable(name: "this", arg: 1, scope: !4777, type: !4661, flags: DIFlagArtificial | DIFlagObjectPointer)
!4780 = !DILocalVariable(name: "data", arg: 2, scope: !4777, file: !1044, line: 135, type: !45)
!4781 = !DILocalVariable(name: "size", arg: 3, scope: !4777, file: !1044, line: 135, type: !110)
!4782 = !DILocalVariable(name: "readCount", scope: !4777, file: !1044, line: 137, type: !110)
!4783 = !DILocalVariable(name: "c", scope: !4777, file: !1044, line: 138, type: !40)
!4784 = !DILocation(line: 0, scope: !4777)
!4785 = !DILocation(line: 140, column: 14, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4777, file: !1044, line: 140, column: 9)
!4787 = !DILocation(line: 140, column: 9, scope: !4777)
!4788 = !DILocation(line: 143, column: 12, scope: !4777)
!4789 = !DILocation(line: 143, column: 5, scope: !4777)
!4790 = !DILocation(line: 144, column: 13, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4777, file: !1044, line: 143, column: 43)
!4792 = !DILocation(line: 145, column: 23, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4791, file: !1044, line: 145, column: 13)
!4794 = !DILocation(line: 145, column: 13, scope: !4791)
!4795 = !DILocation(line: 146, column: 27, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4793, file: !1044, line: 145, column: 35)
!4797 = !DILocation(line: 146, column: 13, scope: !4796)
!4798 = !DILocation(line: 146, column: 31, scope: !4796)
!4799 = !DILocation(line: 147, column: 9, scope: !4796)
!4800 = !DILocation(line: 143, column: 29, scope: !4777)
!4801 = distinct !{!4801, !4789, !4802, !1499, !1500}
!4802 = !DILocation(line: 148, column: 5, scope: !4777)
!4803 = !DILocation(line: 149, column: 5, scope: !4777)
!4804 = !DILocation(line: 149, column: 21, scope: !4777)
!4805 = !DILocation(line: 151, column: 5, scope: !4777)
!4806 = !DILocation(line: 152, column: 1, scope: !4777)
!4807 = distinct !DISubprogram(name: "flushReceiveBuffers", linkageName: "_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv", scope: !1046, file: !1044, line: 154, type: !1162, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1161, retainedNodes: !4808)
!4808 = !{!4809}
!4809 = !DILocalVariable(name: "this", arg: 1, scope: !4807, type: !4661, flags: DIFlagArtificial | DIFlagObjectPointer)
!4810 = !DILocation(line: 0, scope: !4807)
!4811 = !DILocation(line: 156, column: 5, scope: !4807)
!4812 = !DILocation(line: 157, column: 5, scope: !4807)
!4813 = !DILocation(line: 157, column: 17, scope: !4807)
!4814 = !DILocation(line: 158, column: 5, scope: !4807)
!4815 = !DILocation(line: 159, column: 1, scope: !4807)
!4816 = distinct !DISubprogram(name: "readBufferSize", linkageName: "_ZN6Cicada14BufferedSerial14readBufferSizeEv", scope: !1046, file: !1044, line: 161, type: !1165, scopeLine: 162, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1164, retainedNodes: !4817)
!4817 = !{!4818}
!4818 = !DILocalVariable(name: "this", arg: 1, scope: !4816, type: !4661, flags: DIFlagArtificial | DIFlagObjectPointer)
!4819 = !DILocation(line: 0, scope: !4816)
!4820 = !DILocation(line: 163, column: 12, scope: !4816)
!4821 = !DILocation(line: 163, column: 24, scope: !4816)
!4822 = !DILocation(line: 163, column: 5, scope: !4816)
!4823 = distinct !DISubprogram(name: "writeBufferSize", linkageName: "_ZN6Cicada14BufferedSerial15writeBufferSizeEv", scope: !1046, file: !1044, line: 166, type: !1165, scopeLine: 167, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1167, retainedNodes: !4824)
!4824 = !{!4825}
!4825 = !DILocalVariable(name: "this", arg: 1, scope: !4823, type: !4661, flags: DIFlagArtificial | DIFlagObjectPointer)
!4826 = !DILocation(line: 0, scope: !4823)
!4827 = !DILocation(line: 168, column: 12, scope: !4823)
!4828 = !DILocation(line: 168, column: 25, scope: !4823)
!4829 = !DILocation(line: 168, column: 5, scope: !4823)
!4830 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada14BufferedSerialD1Ev", scope: !752, file: !752, line: 42, type: !4428, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, retainedNodes: !202)
!4831 = !DILocation(line: 0, scope: !4830)
!4832 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada14BufferedSerialD0Ev", scope: !752, file: !752, line: 42, type: !4428, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, retainedNodes: !202)
!4833 = !DILocation(line: 0, scope: !4832)
!4834 = distinct !DISubprogram(name: "size", linkageName: "_ZNK6Cicada14CircularBufferIcE4sizeEv", scope: !1054, file: !1055, line: 190, type: !1092, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1095, retainedNodes: !4835)
!4835 = !{!4836}
!4836 = !DILocalVariable(name: "this", arg: 1, scope: !4834, type: !4502, flags: DIFlagArtificial | DIFlagObjectPointer)
!4837 = !DILocation(line: 0, scope: !4834)
!4838 = !DILocation(line: 192, column: 16, scope: !4834)
!4839 = !{!4506, !4507, i64 32}
!4840 = !DILocation(line: 192, column: 9, scope: !4834)
!4841 = distinct !DISubprogram(name: "flush", linkageName: "_ZN6Cicada18LineCircularBuffer5flushEv", scope: !1050, file: !1051, line: 123, type: !1126, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1125, retainedNodes: !4842)
!4842 = !{!4843}
!4843 = !DILocalVariable(name: "this", arg: 1, scope: !4841, type: !4844, flags: DIFlagArtificial | DIFlagObjectPointer)
!4844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 32)
!4845 = !DILocation(line: 0, scope: !4841)
!4846 = !DILocation(line: 125, column: 9, scope: !4841)
!4847 = !DILocation(line: 125, column: 24, scope: !4841)
!4848 = !{!4849, !1453, i64 44}
!4849 = !{!"_ZTSN6Cicada18LineCircularBufferE", !1453, i64 44}
!4850 = !DILocation(line: 126, column: 25, scope: !4841)
!4851 = !DILocation(line: 127, column: 5, scope: !4841)
!4852 = distinct !DISubprogram(name: "flush", linkageName: "_ZN6Cicada14CircularBufferIcE5flushEv", scope: !1054, file: !1055, line: 148, type: !1069, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1084, retainedNodes: !4853)
!4853 = !{!4854}
!4854 = !DILocalVariable(name: "this", arg: 1, scope: !4852, type: !4524, flags: DIFlagArtificial | DIFlagObjectPointer)
!4855 = !DILocation(line: 0, scope: !4852)
!4856 = !DILocation(line: 150, column: 9, scope: !4852)
!4857 = !DILocation(line: 153, column: 5, scope: !4852)
!4858 = !DILocation(line: 151, column: 19, scope: !4852)
!4859 = distinct !DISubprogram(name: "numBufferedLines", linkageName: "_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv", scope: !1050, file: !1051, line: 97, type: !1120, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1119, retainedNodes: !4860)
!4860 = !{!4861}
!4861 = !DILocalVariable(name: "this", arg: 1, scope: !4859, type: !4862, flags: DIFlagArtificial | DIFlagObjectPointer)
!4862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 32)
!4863 = !DILocation(line: 0, scope: !4859)
!4864 = !DILocation(line: 99, column: 16, scope: !4859)
!4865 = !DILocation(line: 99, column: 9, scope: !4859)
!4866 = distinct !DISubprogram(name: "copyToBuffer", linkageName: "_ZN6Cicada14BufferedSerial12copyToBufferEh", scope: !1046, file: !1044, line: 119, type: !1155, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1169, retainedNodes: !4867)
!4867 = !{!4868, !4869}
!4868 = !DILocalVariable(name: "this", arg: 1, scope: !4866, type: !4661, flags: DIFlagArtificial | DIFlagObjectPointer)
!4869 = !DILocalVariable(name: "data", arg: 2, scope: !4866, file: !1044, line: 119, type: !40)
!4870 = !DILocation(line: 0, scope: !4866)
!4871 = !DILocation(line: 121, column: 5, scope: !4866)
!4872 = !DILocation(line: 122, column: 5, scope: !4866)
!4873 = !DILocation(line: 122, column: 18, scope: !4866)
!4874 = !DILocation(line: 123, column: 5, scope: !4866)
!4875 = !DILocation(line: 124, column: 1, scope: !4866)
!4876 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada18LineCircularBuffer4pushEc", scope: !1050, file: !1051, line: 60, type: !1111, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1110, retainedNodes: !4877)
!4877 = !{!4878, !4879}
!4878 = !DILocalVariable(name: "this", arg: 1, scope: !4876, type: !4844, flags: DIFlagArtificial | DIFlagObjectPointer)
!4879 = !DILocalVariable(name: "data", arg: 2, scope: !4876, file: !1051, line: 60, type: !149)
!4880 = !DILocation(line: 0, scope: !4876)
!4881 = !DILocation(line: 62, column: 31, scope: !4876)
!4882 = !DILocation(line: 64, column: 18, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4876, file: !1051, line: 64, column: 13)
!4884 = !DILocation(line: 64, column: 13, scope: !4876)
!4885 = !DILocation(line: 65, column: 13, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4883, file: !1051, line: 64, column: 27)
!4887 = !DILocation(line: 65, column: 27, scope: !4886)
!4888 = !DILocation(line: 66, column: 9, scope: !4886)
!4889 = !DILocation(line: 67, column: 5, scope: !4876)
!4890 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIcE4pushEc", scope: !1054, file: !1055, line: 88, type: !1075, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1074, retainedNodes: !4891)
!4891 = !{!4892, !4893}
!4892 = !DILocalVariable(name: "this", arg: 1, scope: !4890, type: !4524, flags: DIFlagArtificial | DIFlagObjectPointer)
!4893 = !DILocalVariable(name: "data", arg: 2, scope: !4890, file: !1055, line: 88, type: !149)
!4894 = !DILocation(line: 0, scope: !4890)
!4895 = !DILocation(line: 90, column: 9, scope: !4890)
!4896 = !{!4506, !1341, i64 40}
!4897 = !DILocation(line: 90, column: 17, scope: !4890)
!4898 = !{!4506, !4507, i64 8}
!4899 = !DILocation(line: 90, column: 29, scope: !4890)
!4900 = !DILocation(line: 91, column: 9, scope: !4890)
!4901 = !DILocation(line: 92, column: 13, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4890, file: !1055, line: 92, column: 13)
!4903 = !DILocation(line: 92, column: 30, scope: !4902)
!4904 = !DILocation(line: 92, column: 28, scope: !4902)
!4905 = !DILocation(line: 92, column: 13, scope: !4890)
!4906 = !DILocation(line: 93, column: 27, scope: !4902)
!4907 = !DILocation(line: 93, column: 13, scope: !4902)
!4908 = !DILocation(line: 94, column: 5, scope: !4890)
!4909 = distinct !DISubprogram(name: "incrementOrResetHead", linkageName: "_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy", scope: !1054, file: !1055, line: 202, type: !1097, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1096, retainedNodes: !4910)
!4910 = !{!4911, !4912}
!4911 = !DILocalVariable(name: "this", arg: 1, scope: !4909, type: !4524, flags: DIFlagArtificial | DIFlagObjectPointer)
!4912 = !DILocalVariable(name: "head", arg: 2, scope: !4909, file: !1055, line: 202, type: !1099)
!4913 = !DILocation(line: 0, scope: !4909)
!4914 = !DILocation(line: 204, column: 13, scope: !4909)
!4915 = !{!4507, !4507, i64 0}
!4916 = !DILocation(line: 205, column: 21, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4909, file: !1055, line: 205, column: 13)
!4918 = !DILocation(line: 205, column: 18, scope: !4917)
!4919 = !DILocation(line: 205, column: 13, scope: !4909)
!4920 = !DILocation(line: 207, column: 5, scope: !4909)
!4921 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada18LineCircularBuffer4pullEv", scope: !1050, file: !1051, line: 83, type: !1117, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1116, retainedNodes: !4922)
!4922 = !{!4923, !4924}
!4923 = !DILocalVariable(name: "this", arg: 1, scope: !4921, type: !4844, flags: DIFlagArtificial | DIFlagObjectPointer)
!4924 = !DILocalVariable(name: "data", scope: !4921, file: !1051, line: 85, type: !149)
!4925 = !DILocation(line: 0, scope: !4921)
!4926 = !DILocation(line: 85, column: 43, scope: !4921)
!4927 = !DILocation(line: 87, column: 18, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4921, file: !1051, line: 87, column: 13)
!4929 = !DILocation(line: 87, column: 13, scope: !4921)
!4930 = !DILocation(line: 88, column: 13, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4928, file: !1051, line: 87, column: 27)
!4932 = !DILocation(line: 88, column: 27, scope: !4931)
!4933 = !DILocation(line: 89, column: 9, scope: !4931)
!4934 = !DILocation(line: 91, column: 9, scope: !4921)
!4935 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIcE4pullEv", scope: !1054, file: !1055, line: 124, type: !1081, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1080, retainedNodes: !4936)
!4936 = !{!4937, !4938}
!4937 = !DILocalVariable(name: "this", arg: 1, scope: !4935, type: !4524, flags: DIFlagArtificial | DIFlagObjectPointer)
!4938 = !DILocalVariable(name: "data", scope: !4935, file: !1055, line: 126, type: !149)
!4939 = !DILocation(line: 0, scope: !4935)
!4940 = !DILocation(line: 126, column: 18, scope: !4935)
!4941 = !DILocation(line: 126, column: 26, scope: !4935)
!4942 = !{!4506, !4507, i64 16}
!4943 = !DILocation(line: 127, column: 9, scope: !4935)
!4944 = !DILocation(line: 128, column: 13, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4935, file: !1055, line: 128, column: 13)
!4946 = !DILocation(line: 128, column: 28, scope: !4945)
!4947 = !DILocation(line: 128, column: 13, scope: !4935)
!4948 = !DILocation(line: 129, column: 27, scope: !4945)
!4949 = !DILocation(line: 129, column: 13, scope: !4945)
!4950 = !DILocation(line: 131, column: 9, scope: !4935)
!4951 = distinct !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv", scope: !1054, file: !1055, line: 182, type: !1092, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1094, retainedNodes: !4952)
!4952 = !{!4953}
!4953 = !DILocalVariable(name: "this", arg: 1, scope: !4951, type: !4502, flags: DIFlagArtificial | DIFlagObjectPointer)
!4954 = !DILocation(line: 0, scope: !4951)
!4955 = !DILocation(line: 184, column: 16, scope: !4951)
!4956 = !DILocation(line: 184, column: 30, scope: !4951)
!4957 = !DILocation(line: 184, column: 28, scope: !4951)
!4958 = !DILocation(line: 184, column: 9, scope: !4951)
!4959 = distinct !DISubprogram(name: "BufferedSerial", linkageName: "_ZN6Cicada14BufferedSerialC2EPcS1_yy", scope: !1046, file: !1044, line: 30, type: !1130, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1129, retainedNodes: !4960)
!4960 = !{!4961, !4962, !4963, !4964, !4965}
!4961 = !DILocalVariable(name: "this", arg: 1, scope: !4959, type: !4661, flags: DIFlagArtificial | DIFlagObjectPointer)
!4962 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !4959, file: !1044, line: 31, type: !338)
!4963 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !4959, file: !1044, line: 31, type: !338)
!4964 = !DILocalVariable(name: "readBufferSize", arg: 4, scope: !4959, file: !1044, line: 31, type: !110)
!4965 = !DILocalVariable(name: "writeBufferSize", arg: 5, scope: !4959, file: !1044, line: 31, type: !110)
!4966 = !DILocation(line: 0, scope: !4959)
!4967 = !DILocation(line: 33, column: 1, scope: !4959)
!4968 = !DILocation(line: 30, column: 17, scope: !4959)
!4969 = !DILocation(line: 32, column: 5, scope: !4959)
!4970 = !DILocation(line: 32, column: 46, scope: !4959)
!4971 = !DILocation(line: 33, column: 2, scope: !4959)
!4972 = distinct !DISubprogram(name: "IBufferedSerial", linkageName: "_ZN6Cicada15IBufferedSerialC2Ev", scope: !95, file: !96, line: 39, type: !161, scopeLine: 39, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !4973, retainedNodes: !4974)
!4973 = !DISubprogram(name: "IBufferedSerial", scope: !95, type: !161, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4974 = !{!4975}
!4975 = !DILocalVariable(name: "this", arg: 1, scope: !4972, type: !4530, flags: DIFlagArtificial | DIFlagObjectPointer)
!4976 = !DILocation(line: 0, scope: !4972)
!4977 = !DILocation(line: 39, column: 7, scope: !4972)
!4978 = distinct !DISubprogram(name: "LineCircularBuffer", linkageName: "_ZN6Cicada18LineCircularBufferC2EPcy", scope: !1050, file: !1051, line: 41, type: !1104, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1103, retainedNodes: !4979)
!4979 = !{!4980, !4981, !4982}
!4980 = !DILocalVariable(name: "this", arg: 1, scope: !4978, type: !4844, flags: DIFlagArtificial | DIFlagObjectPointer)
!4981 = !DILocalVariable(name: "buffer", arg: 2, scope: !4978, file: !1051, line: 41, type: !338)
!4982 = !DILocalVariable(name: "bufferSize", arg: 3, scope: !4978, file: !1051, line: 41, type: !110)
!4983 = !DILocation(line: 0, scope: !4978)
!4984 = !DILocation(line: 44, column: 5, scope: !4978)
!4985 = !DILocation(line: 42, column: 9, scope: !4978)
!4986 = !DILocation(line: 43, column: 9, scope: !4978)
!4987 = !DILocation(line: 44, column: 7, scope: !4978)
!4988 = distinct !DISubprogram(name: "CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIcEC2EPcy", scope: !1054, file: !1055, line: 48, type: !1065, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1064, retainedNodes: !4989)
!4989 = !{!4990, !4991, !4992}
!4990 = !DILocalVariable(name: "this", arg: 1, scope: !4988, type: !4524, flags: DIFlagArtificial | DIFlagObjectPointer)
!4991 = !DILocalVariable(name: "buffer", arg: 2, scope: !4988, file: !1055, line: 48, type: !338)
!4992 = !DILocalVariable(name: "bufferSize", arg: 3, scope: !4988, file: !1055, line: 48, type: !110)
!4993 = !DILocation(line: 0, scope: !4988)
!4994 = !DILocation(line: 54, column: 5, scope: !4988)
!4995 = !DILocation(line: 49, column: 9, scope: !4988)
!4996 = !DILocation(line: 52, column: 9, scope: !4988)
!4997 = !DILocation(line: 50, column: 9, scope: !4988)
!4998 = !DILocation(line: 53, column: 9, scope: !4988)
!4999 = !DILocation(line: 54, column: 7, scope: !4988)
!5000 = distinct !DISubprogram(name: "~LineCircularBuffer", linkageName: "_ZN6Cicada18LineCircularBufferD0Ev", scope: !1050, file: !1051, line: 38, type: !1126, scopeLine: 38, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !5001, retainedNodes: !5002)
!5001 = !DISubprogram(name: "~LineCircularBuffer", scope: !1050, type: !1126, containingType: !1050, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!5002 = !{!5003}
!5003 = !DILocalVariable(name: "this", arg: 1, scope: !5000, type: !4844, flags: DIFlagArtificial | DIFlagObjectPointer)
!5004 = !DILocation(line: 0, scope: !5000)
!5005 = !DILocation(line: 38, column: 7, scope: !5000)
!5006 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada18LineCircularBuffer4pushEPKcy", scope: !1050, file: !1051, line: 46, type: !1108, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1107, retainedNodes: !5007)
!5007 = !{!5008, !5009, !5010, !5011}
!5008 = !DILocalVariable(name: "this", arg: 1, scope: !5006, type: !4844, flags: DIFlagArtificial | DIFlagObjectPointer)
!5009 = !DILocalVariable(name: "data", arg: 2, scope: !5006, file: !1051, line: 46, type: !147)
!5010 = !DILocalVariable(name: "size", arg: 3, scope: !5006, file: !1051, line: 46, type: !110)
!5011 = !DILocalVariable(name: "writeCount", scope: !5006, file: !1051, line: 51, type: !110)
!5012 = !DILocation(line: 0, scope: !5006)
!5013 = !DILocation(line: 48, column: 42, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5006, file: !1051, line: 48, column: 13)
!5015 = !DILocation(line: 48, column: 18, scope: !5014)
!5016 = !DILocation(line: 48, column: 13, scope: !5006)
!5017 = !DILocation(line: 49, column: 42, scope: !5014)
!5018 = !DILocation(line: 49, column: 13, scope: !5014)
!5019 = !DILocation(line: 53, column: 27, scope: !5006)
!5020 = !DILocation(line: 53, column: 9, scope: !5006)
!5021 = !DILocation(line: 54, column: 33, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5006, file: !1051, line: 53, column: 35)
!5023 = !DILocation(line: 54, column: 18, scope: !5022)
!5024 = !DILocation(line: 54, column: 13, scope: !5022)
!5025 = distinct !{!5025, !5020, !5026, !1499, !1500}
!5026 = !DILocation(line: 55, column: 9, scope: !5006)
!5027 = !DILocation(line: 57, column: 9, scope: !5006)
!5028 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada18LineCircularBuffer4pullEPcy", scope: !1050, file: !1051, line: 69, type: !1114, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1113, retainedNodes: !5029)
!5029 = !{!5030, !5031, !5032, !5033}
!5030 = !DILocalVariable(name: "this", arg: 1, scope: !5028, type: !4844, flags: DIFlagArtificial | DIFlagObjectPointer)
!5031 = !DILocalVariable(name: "data", arg: 2, scope: !5028, file: !1051, line: 69, type: !338)
!5032 = !DILocalVariable(name: "size", arg: 3, scope: !5028, file: !1051, line: 69, type: !110)
!5033 = !DILocalVariable(name: "readCount", scope: !5028, file: !1051, line: 74, type: !110)
!5034 = !DILocation(line: 0, scope: !5028)
!5035 = !DILocation(line: 71, column: 42, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5028, file: !1051, line: 71, column: 13)
!5037 = !DILocation(line: 71, column: 18, scope: !5036)
!5038 = !DILocation(line: 71, column: 13, scope: !5028)
!5039 = !DILocation(line: 72, column: 42, scope: !5036)
!5040 = !DILocation(line: 72, column: 13, scope: !5036)
!5041 = !DILocation(line: 76, column: 26, scope: !5028)
!5042 = !DILocation(line: 76, column: 9, scope: !5028)
!5043 = !DILocation(line: 77, column: 33, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5028, file: !1051, line: 76, column: 34)
!5045 = !DILocation(line: 77, column: 27, scope: !5044)
!5046 = !DILocation(line: 77, column: 13, scope: !5044)
!5047 = !DILocation(line: 77, column: 31, scope: !5044)
!5048 = distinct !{!5048, !5042, !5049, !1499, !1500}
!5049 = !DILocation(line: 78, column: 9, scope: !5028)
!5050 = !DILocation(line: 80, column: 9, scope: !5028)
!5051 = distinct !DISubprogram(name: "read", linkageName: "_ZN6Cicada14CircularBufferIcE4readEv", scope: !1054, file: !1055, line: 140, type: !1081, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1083, retainedNodes: !5052)
!5052 = !{!5053}
!5053 = !DILocalVariable(name: "this", arg: 1, scope: !5051, type: !4524, flags: DIFlagArtificial | DIFlagObjectPointer)
!5054 = !DILocation(line: 0, scope: !5051)
!5055 = !DILocation(line: 142, column: 16, scope: !5051)
!5056 = !DILocation(line: 142, column: 24, scope: !5051)
!5057 = !DILocation(line: 142, column: 9, scope: !5051)
!5058 = distinct !DISubprogram(name: "isEmpty", linkageName: "_ZNK6Cicada14CircularBufferIcE7isEmptyEv", scope: !1054, file: !1055, line: 158, type: !1086, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1085, retainedNodes: !5059)
!5059 = !{!5060}
!5060 = !DILocalVariable(name: "this", arg: 1, scope: !5058, type: !4502, flags: DIFlagArtificial | DIFlagObjectPointer)
!5061 = !DILocation(line: 0, scope: !5058)
!5062 = !DILocation(line: 160, column: 16, scope: !5058)
!5063 = !DILocation(line: 160, column: 31, scope: !5058)
!5064 = !DILocation(line: 160, column: 9, scope: !5058)
!5065 = distinct !DISubprogram(name: "isFull", linkageName: "_ZNK6Cicada14CircularBufferIcE6isFullEv", scope: !1054, file: !1055, line: 166, type: !1086, scopeLine: 167, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1090, retainedNodes: !5066)
!5066 = !{!5067}
!5067 = !DILocalVariable(name: "this", arg: 1, scope: !5065, type: !4502, flags: DIFlagArtificial | DIFlagObjectPointer)
!5068 = !DILocation(line: 0, scope: !5065)
!5069 = !DILocation(line: 168, column: 16, scope: !5065)
!5070 = !DILocation(line: 168, column: 34, scope: !5065)
!5071 = !DILocation(line: 168, column: 31, scope: !5065)
!5072 = !DILocation(line: 168, column: 9, scope: !5065)
!5073 = distinct !DISubprogram(name: "~CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIcED0Ev", scope: !1054, file: !1055, line: 56, type: !1069, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1068, retainedNodes: !5074)
!5074 = !{!5075}
!5075 = !DILocalVariable(name: "this", arg: 1, scope: !5073, type: !4524, flags: DIFlagArtificial | DIFlagObjectPointer)
!5076 = !DILocation(line: 0, scope: !5073)
!5077 = !DILocation(line: 57, column: 5, scope: !5073)
!5078 = !DILocation(line: 57, column: 7, scope: !5073)
!5079 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIcE4pushEPKcy", scope: !1054, file: !1055, line: 65, type: !1072, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1071, retainedNodes: !5080)
!5080 = !{!5081, !5082, !5083, !5084}
!5081 = !DILocalVariable(name: "this", arg: 1, scope: !5079, type: !4524, flags: DIFlagArtificial | DIFlagObjectPointer)
!5082 = !DILocalVariable(name: "data", arg: 2, scope: !5079, file: !1055, line: 65, type: !147)
!5083 = !DILocalVariable(name: "size", arg: 3, scope: !5079, file: !1055, line: 65, type: !110)
!5084 = !DILocalVariable(name: "writeCount", scope: !5079, file: !1055, line: 70, type: !110)
!5085 = !DILocation(line: 0, scope: !5079)
!5086 = !DILocation(line: 67, column: 20, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5079, file: !1055, line: 67, column: 13)
!5088 = !DILocation(line: 67, column: 18, scope: !5087)
!5089 = !DILocation(line: 67, column: 13, scope: !5079)
!5090 = !DILocation(line: 68, column: 20, scope: !5087)
!5091 = !DILocation(line: 68, column: 13, scope: !5087)
!5092 = !DILocation(line: 72, column: 27, scope: !5079)
!5093 = !DILocation(line: 72, column: 9, scope: !5079)
!5094 = !DILocation(line: 73, column: 50, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5079, file: !1055, line: 72, column: 35)
!5096 = !DILocation(line: 73, column: 35, scope: !5095)
!5097 = !DILocation(line: 73, column: 13, scope: !5095)
!5098 = !DILocation(line: 73, column: 21, scope: !5095)
!5099 = !DILocation(line: 73, column: 33, scope: !5095)
!5100 = !DILocation(line: 74, column: 13, scope: !5095)
!5101 = distinct !{!5101, !5093, !5102, !1499, !1500}
!5102 = !DILocation(line: 75, column: 9, scope: !5079)
!5103 = !DILocation(line: 76, column: 9, scope: !5079)
!5104 = !DILocation(line: 76, column: 24, scope: !5079)
!5105 = !DILocation(line: 78, column: 9, scope: !5079)
!5106 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIcE4pullEPcy", scope: !1054, file: !1055, line: 102, type: !1078, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1077, retainedNodes: !5107)
!5107 = !{!5108, !5109, !5110, !5111}
!5108 = !DILocalVariable(name: "this", arg: 1, scope: !5106, type: !4524, flags: DIFlagArtificial | DIFlagObjectPointer)
!5109 = !DILocalVariable(name: "data", arg: 2, scope: !5106, file: !1055, line: 102, type: !338)
!5110 = !DILocalVariable(name: "size", arg: 3, scope: !5106, file: !1055, line: 102, type: !110)
!5111 = !DILocalVariable(name: "readCount", scope: !5106, file: !1055, line: 107, type: !110)
!5112 = !DILocation(line: 0, scope: !5106)
!5113 = !DILocation(line: 104, column: 20, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5106, file: !1055, line: 104, column: 13)
!5115 = !DILocation(line: 104, column: 18, scope: !5114)
!5116 = !DILocation(line: 104, column: 13, scope: !5106)
!5117 = !DILocation(line: 105, column: 20, scope: !5114)
!5118 = !DILocation(line: 105, column: 13, scope: !5114)
!5119 = !DILocation(line: 109, column: 26, scope: !5106)
!5120 = !DILocation(line: 109, column: 9, scope: !5106)
!5121 = !DILocation(line: 110, column: 33, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5106, file: !1055, line: 109, column: 34)
!5123 = !DILocation(line: 110, column: 41, scope: !5122)
!5124 = !DILocation(line: 110, column: 27, scope: !5122)
!5125 = !DILocation(line: 110, column: 13, scope: !5122)
!5126 = !DILocation(line: 110, column: 31, scope: !5122)
!5127 = !DILocation(line: 111, column: 13, scope: !5122)
!5128 = distinct !{!5128, !5120, !5129, !1499, !1500}
!5129 = !DILocation(line: 112, column: 9, scope: !5106)
!5130 = !DILocation(line: 113, column: 9, scope: !5106)
!5131 = !DILocation(line: 113, column: 24, scope: !5106)
!5132 = !DILocation(line: 115, column: 9, scope: !5106)
!5133 = distinct !DISubprogram(name: "ICommDevice", linkageName: "_ZN6Cicada11ICommDeviceC2Ev", scope: !99, file: !100, line: 43, type: !104, scopeLine: 43, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !5134, retainedNodes: !5135)
!5134 = !DISubprogram(name: "ICommDevice", scope: !99, type: !104, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5135 = !{!5136}
!5136 = !DILocalVariable(name: "this", arg: 1, scope: !5133, type: !4544, flags: DIFlagArtificial | DIFlagObjectPointer)
!5137 = !DILocation(line: 0, scope: !5133)
!5138 = !DILocation(line: 43, column: 7, scope: !5133)
!5139 = distinct !DISubprogram(name: "ISerial", linkageName: "_ZN6Cicada7ISerialC2Ev", scope: !128, file: !129, line: 37, type: !133, scopeLine: 37, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !5140, retainedNodes: !5141)
!5140 = !DISubprogram(name: "ISerial", scope: !128, type: !133, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5141 = !{!5142}
!5142 = !DILocalVariable(name: "this", arg: 1, scope: !5139, type: !4538, flags: DIFlagArtificial | DIFlagObjectPointer)
!5143 = !DILocation(line: 0, scope: !5139)
!5144 = !DILocation(line: 37, column: 7, scope: !5139)
!5145 = distinct !DISubprogram(name: "~IBufferedSerial", linkageName: "_ZN6Cicada15IBufferedSerialD0Ev", scope: !95, file: !96, line: 42, type: !161, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !160, retainedNodes: !5146)
!5146 = !{!5147}
!5147 = !DILocalVariable(name: "this", arg: 1, scope: !5145, type: !4530, flags: DIFlagArtificial | DIFlagObjectPointer)
!5148 = !DILocation(line: 0, scope: !5145)
!5149 = !DILocation(line: 42, column: 32, scope: !5145)
!5150 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada15IBufferedSerialD1Ev", scope: !96, file: !96, line: 42, type: !4428, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, retainedNodes: !202)
!5151 = !DILocation(line: 0, scope: !5150)
!5152 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada15IBufferedSerialD0Ev", scope: !96, file: !96, line: 42, type: !4428, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, retainedNodes: !202)
!5153 = !DILocation(line: 0, scope: !5152)
!5154 = distinct !DISubprogram(name: "~ISerial", linkageName: "_ZN6Cicada7ISerialD0Ev", scope: !128, file: !129, line: 40, type: !133, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !132, retainedNodes: !5155)
!5155 = !{!5156}
!5156 = !DILocalVariable(name: "this", arg: 1, scope: !5154, type: !4538, flags: DIFlagArtificial | DIFlagObjectPointer)
!5157 = !DILocation(line: 0, scope: !5154)
!5158 = !DILocation(line: 40, column: 24, scope: !5154)
!5159 = distinct !DISubprogram(name: "~ICommDevice", linkageName: "_ZN6Cicada11ICommDeviceD0Ev", scope: !99, file: !100, line: 46, type: !104, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !103, retainedNodes: !5160)
!5160 = !{!5161}
!5161 = !DILocalVariable(name: "this", arg: 1, scope: !5159, type: !4544, flags: DIFlagArtificial | DIFlagObjectPointer)
!5162 = !DILocation(line: 0, scope: !5159)
!5163 = !DILocation(line: 46, column: 28, scope: !5159)
!5164 = distinct !DISubprogram(name: "BufferedSerial", linkageName: "_ZN6Cicada14BufferedSerialC2EPcS1_y", scope: !1046, file: !1044, line: 35, type: !1134, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1133, retainedNodes: !5165)
!5165 = !{!5166, !5167, !5168, !5169}
!5166 = !DILocalVariable(name: "this", arg: 1, scope: !5164, type: !4661, flags: DIFlagArtificial | DIFlagObjectPointer)
!5167 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !5164, file: !1044, line: 35, type: !338)
!5168 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !5164, file: !1044, line: 35, type: !338)
!5169 = !DILocalVariable(name: "bufferSize", arg: 4, scope: !5164, file: !1044, line: 35, type: !110)
!5170 = !DILocation(line: 0, scope: !5164)
!5171 = !DILocation(line: 37, column: 1, scope: !5164)
!5172 = !DILocation(line: 35, column: 17, scope: !5164)
!5173 = !DILocation(line: 36, column: 5, scope: !5164)
!5174 = !DILocation(line: 36, column: 42, scope: !5164)
!5175 = !DILocation(line: 37, column: 2, scope: !5164)
!5176 = distinct !DISubprogram(name: "transferToAndFromBuffer", linkageName: "_ZN6Cicada14BufferedSerial23transferToAndFromBufferEv", scope: !1046, file: !1044, line: 171, type: !1162, scopeLine: 172, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1043, declaration: !1168, retainedNodes: !5177)
!5177 = !{!5178, !5179}
!5178 = !DILocalVariable(name: "this", arg: 1, scope: !5176, type: !4661, flags: DIFlagArtificial | DIFlagObjectPointer)
!5179 = !DILocalVariable(name: "data", scope: !5176, file: !1044, line: 173, type: !40)
!5180 = !DILocation(line: 0, scope: !5176)
!5181 = !DILocation(line: 173, column: 5, scope: !5176)
!5182 = !DILocation(line: 174, column: 9, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5176, file: !1044, line: 174, column: 9)
!5184 = !DILocation(line: 174, column: 23, scope: !5183)
!5185 = !DILocation(line: 174, column: 27, scope: !5183)
!5186 = !DILocation(line: 174, column: 39, scope: !5183)
!5187 = !DILocation(line: 174, column: 9, scope: !5176)
!5188 = !DILocation(line: 175, column: 26, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5183, file: !1044, line: 174, column: 49)
!5190 = !DILocation(line: 175, column: 21, scope: !5189)
!5191 = !DILocation(line: 176, column: 5, scope: !5189)
!5192 = !DILocation(line: 178, column: 9, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5176, file: !1044, line: 178, column: 9)
!5194 = !DILocation(line: 178, column: 22, scope: !5193)
!5195 = !DILocation(line: 178, column: 9, scope: !5176)
!5196 = !DILocation(line: 179, column: 35, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5198, file: !1044, line: 179, column: 13)
!5198 = distinct !DILexicalBlock(scope: !5193, file: !1044, line: 178, column: 40)
!5199 = !DILocation(line: 179, column: 13, scope: !5197)
!5200 = !DILocation(line: 179, column: 13, scope: !5198)
!5201 = !DILocation(line: 180, column: 26, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5197, file: !1044, line: 179, column: 44)
!5203 = !DILocation(line: 181, column: 9, scope: !5202)
!5204 = !DILocation(line: 183, column: 1, scope: !5176)
!5205 = distinct !DISubprogram(name: "eDisableInterrupts", linkageName: "_Z18eDisableInterruptsv", scope: !1173, file: !1173, line: 27, type: !4, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1172, retainedNodes: !202)
!5206 = !DILocation(line: 142, column: 3, scope: !5207, inlinedAt: !5208)
!5207 = distinct !DISubprogram(name: "__disable_irq", linkageName: "_ZL13__disable_irqv", scope: !3600, file: !3600, line: 140, type: !4, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1172, retainedNodes: !202)
!5208 = distinct !DILocation(line: 29, column: 5, scope: !5205)
!5209 = !{i64 1184613}
!5210 = !DILocation(line: 30, column: 1, scope: !5205)
!5211 = distinct !DISubprogram(name: "eEnableInterrupts", linkageName: "_Z17eEnableInterruptsv", scope: !1173, file: !1173, line: 32, type: !4, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1172, retainedNodes: !202)
!5212 = !DILocation(line: 131, column: 3, scope: !5213, inlinedAt: !5214)
!5213 = distinct !DISubprogram(name: "__enable_irq", linkageName: "_ZL12__enable_irqv", scope: !3600, file: !3600, line: 129, type: !4, scopeLine: 130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1172, retainedNodes: !202)
!5214 = distinct !DILocation(line: 34, column: 5, scope: !5211)
!5215 = !{i64 1184341}
!5216 = !DILocation(line: 35, column: 1, scope: !5211)
!5217 = distinct !DISubprogram(name: "HAL_UART_Init", scope: !1175, file: !1175, line: 314, type: !5218, scopeLine: 315, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5220)
!5218 = !DISubroutineType(types: !5219)
!5219 = !{!2541, !1200}
!5220 = !{!5221}
!5221 = !DILocalVariable(name: "huart", arg: 1, scope: !5217, file: !1175, line: 314, type: !1200)
!5222 = !DILocation(line: 0, scope: !5217)
!5223 = !DILocation(line: 317, column: 13, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5217, file: !1175, line: 317, column: 7)
!5225 = !DILocation(line: 317, column: 7, scope: !5217)
!5226 = !DILocation(line: 338, column: 14, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5217, file: !1175, line: 338, column: 7)
!5228 = !{!5229, !1645, i64 60}
!5229 = !{!"__UART_HandleTypeDef", !1644, i64 0, !3858, i64 4, !1644, i64 32, !5230, i64 36, !5230, i64 38, !1644, i64 40, !5230, i64 44, !5230, i64 46, !1644, i64 48, !1644, i64 52, !1645, i64 56, !1645, i64 60, !1645, i64 64, !2487, i64 68}
!5230 = !{!"short", !1645, i64 0}
!5231 = !DILocation(line: 338, column: 21, scope: !5227)
!5232 = !DILocation(line: 338, column: 7, scope: !5217)
!5233 = !DILocation(line: 341, column: 12, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5227, file: !1175, line: 339, column: 3)
!5235 = !DILocation(line: 341, column: 17, scope: !5234)
!5236 = !{!5229, !1645, i64 56}
!5237 = !DILocation(line: 355, column: 5, scope: !5234)
!5238 = !DILocation(line: 357, column: 3, scope: !5234)
!5239 = !DILocation(line: 359, column: 17, scope: !5217)
!5240 = !DILocation(line: 362, column: 3, scope: !5217)
!5241 = !{!5229, !1644, i64 0}
!5242 = !DILocation(line: 365, column: 3, scope: !5217)
!5243 = !DILocation(line: 370, column: 3, scope: !5217)
!5244 = !DILocation(line: 371, column: 3, scope: !5217)
!5245 = !DILocation(line: 374, column: 3, scope: !5217)
!5246 = !DILocation(line: 377, column: 10, scope: !5217)
!5247 = !DILocation(line: 377, column: 20, scope: !5217)
!5248 = !{!5229, !2487, i64 68}
!5249 = !DILocation(line: 378, column: 17, scope: !5217)
!5250 = !DILocation(line: 379, column: 10, scope: !5217)
!5251 = !DILocation(line: 379, column: 18, scope: !5217)
!5252 = !{!5229, !1645, i64 64}
!5253 = !DILocation(line: 381, column: 3, scope: !5217)
!5254 = !DILocation(line: 382, column: 1, scope: !5217)
!5255 = distinct !DISubprogram(name: "HAL_UART_MspInit", scope: !1175, file: !1175, line: 672, type: !5256, scopeLine: 673, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5258)
!5256 = !DISubroutineType(types: !5257)
!5257 = !{null, !1200}
!5258 = !{!5259}
!5259 = !DILocalVariable(name: "huart", arg: 1, scope: !5255, file: !1175, line: 672, type: !1200)
!5260 = !DILocation(line: 0, scope: !5255)
!5261 = !DILocation(line: 679, column: 1, scope: !5255)
!5262 = distinct !DISubprogram(name: "UART_SetConfig", scope: !1175, file: !1175, line: 3063, type: !5256, scopeLine: 3064, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5263)
!5263 = !{!5264, !5265, !5266}
!5264 = !DILocalVariable(name: "huart", arg: 1, scope: !5262, file: !1175, line: 3063, type: !1200)
!5265 = !DILocalVariable(name: "tmpreg", scope: !5262, file: !1175, line: 3065, type: !24)
!5266 = !DILocalVariable(name: "pclk", scope: !5262, file: !1175, line: 3066, type: !24)
!5267 = !DILocation(line: 0, scope: !5262)
!5268 = !DILocation(line: 3077, column: 3, scope: !5262)
!5269 = !{!5229, !2487, i64 12}
!5270 = !DILocation(line: 3092, column: 34, scope: !5262)
!5271 = !{!5229, !2487, i64 8}
!5272 = !DILocation(line: 3092, column: 59, scope: !5262)
!5273 = !{!5229, !2487, i64 16}
!5274 = !DILocation(line: 3092, column: 45, scope: !5262)
!5275 = !DILocation(line: 3092, column: 80, scope: !5262)
!5276 = !{!5229, !2487, i64 20}
!5277 = !DILocation(line: 3092, column: 66, scope: !5262)
!5278 = !DILocation(line: 3093, column: 3, scope: !5262)
!5279 = !DILocation(line: 3100, column: 3, scope: !5262)
!5280 = !{!5229, !2487, i64 24}
!5281 = !DILocation(line: 3134, column: 22, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5262, file: !1175, line: 3134, column: 6)
!5283 = !DILocation(line: 3134, column: 6, scope: !5262)
!5284 = !DILocation(line: 3136, column: 12, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5282, file: !1175, line: 3135, column: 3)
!5286 = !DILocation(line: 3138, column: 3, scope: !5285)
!5287 = !DILocation(line: 3141, column: 12, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5282, file: !1175, line: 3140, column: 3)
!5289 = !DILocation(line: 0, scope: !5282)
!5290 = !{!5229, !2487, i64 4}
!5291 = !DILocation(line: 3145, column: 1, scope: !5262)
!5292 = distinct !DISubprogram(name: "HAL_HalfDuplex_Init", scope: !1175, file: !1175, line: 391, type: !5218, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5293)
!5293 = !{!5294}
!5294 = !DILocalVariable(name: "huart", arg: 1, scope: !5292, file: !1175, line: 391, type: !1200)
!5295 = !DILocation(line: 0, scope: !5292)
!5296 = !DILocation(line: 394, column: 13, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5292, file: !1175, line: 394, column: 7)
!5298 = !DILocation(line: 394, column: 7, scope: !5292)
!5299 = !DILocation(line: 406, column: 14, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5292, file: !1175, line: 406, column: 7)
!5301 = !DILocation(line: 406, column: 21, scope: !5300)
!5302 = !DILocation(line: 406, column: 7, scope: !5292)
!5303 = !DILocation(line: 409, column: 12, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5300, file: !1175, line: 407, column: 3)
!5305 = !DILocation(line: 409, column: 17, scope: !5304)
!5306 = !DILocation(line: 423, column: 5, scope: !5304)
!5307 = !DILocation(line: 425, column: 3, scope: !5304)
!5308 = !DILocation(line: 427, column: 17, scope: !5292)
!5309 = !DILocation(line: 430, column: 3, scope: !5292)
!5310 = !DILocation(line: 433, column: 3, scope: !5292)
!5311 = !DILocation(line: 438, column: 3, scope: !5292)
!5312 = !DILocation(line: 439, column: 3, scope: !5292)
!5313 = !DILocation(line: 442, column: 3, scope: !5292)
!5314 = !DILocation(line: 445, column: 3, scope: !5292)
!5315 = !DILocation(line: 448, column: 10, scope: !5292)
!5316 = !DILocation(line: 448, column: 20, scope: !5292)
!5317 = !DILocation(line: 449, column: 17, scope: !5292)
!5318 = !DILocation(line: 450, column: 10, scope: !5292)
!5319 = !DILocation(line: 450, column: 18, scope: !5292)
!5320 = !DILocation(line: 452, column: 3, scope: !5292)
!5321 = !DILocation(line: 453, column: 1, scope: !5292)
!5322 = distinct !DISubprogram(name: "HAL_LIN_Init", scope: !1175, file: !1175, line: 466, type: !5323, scopeLine: 467, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5325)
!5323 = !DISubroutineType(types: !5324)
!5324 = !{!2541, !1200, !24}
!5325 = !{!5326, !5327}
!5326 = !DILocalVariable(name: "huart", arg: 1, scope: !5322, file: !1175, line: 466, type: !1200)
!5327 = !DILocalVariable(name: "BreakDetectLength", arg: 2, scope: !5322, file: !1175, line: 466, type: !24)
!5328 = !DILocation(line: 0, scope: !5322)
!5329 = !DILocation(line: 469, column: 13, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5322, file: !1175, line: 469, column: 7)
!5331 = !DILocation(line: 469, column: 7, scope: !5322)
!5332 = !DILocation(line: 484, column: 14, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5322, file: !1175, line: 484, column: 7)
!5334 = !DILocation(line: 484, column: 21, scope: !5333)
!5335 = !DILocation(line: 484, column: 7, scope: !5322)
!5336 = !DILocation(line: 487, column: 12, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5333, file: !1175, line: 485, column: 3)
!5338 = !DILocation(line: 487, column: 17, scope: !5337)
!5339 = !DILocation(line: 501, column: 5, scope: !5337)
!5340 = !DILocation(line: 503, column: 3, scope: !5337)
!5341 = !DILocation(line: 505, column: 17, scope: !5322)
!5342 = !DILocation(line: 508, column: 3, scope: !5322)
!5343 = !DILocation(line: 511, column: 3, scope: !5322)
!5344 = !DILocation(line: 516, column: 3, scope: !5322)
!5345 = !DILocation(line: 517, column: 3, scope: !5322)
!5346 = !DILocation(line: 520, column: 3, scope: !5322)
!5347 = !DILocation(line: 523, column: 3, scope: !5322)
!5348 = !DILocation(line: 524, column: 3, scope: !5322)
!5349 = !DILocation(line: 527, column: 3, scope: !5322)
!5350 = !DILocation(line: 530, column: 10, scope: !5322)
!5351 = !DILocation(line: 530, column: 20, scope: !5322)
!5352 = !DILocation(line: 531, column: 17, scope: !5322)
!5353 = !DILocation(line: 532, column: 10, scope: !5322)
!5354 = !DILocation(line: 532, column: 18, scope: !5322)
!5355 = !DILocation(line: 534, column: 3, scope: !5322)
!5356 = !DILocation(line: 535, column: 1, scope: !5322)
!5357 = distinct !DISubprogram(name: "HAL_MultiProcessor_Init", scope: !1175, file: !1175, line: 549, type: !5358, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5360)
!5358 = !DISubroutineType(types: !5359)
!5359 = !{!2541, !1200, !40, !24}
!5360 = !{!5361, !5362, !5363}
!5361 = !DILocalVariable(name: "huart", arg: 1, scope: !5357, file: !1175, line: 549, type: !1200)
!5362 = !DILocalVariable(name: "Address", arg: 2, scope: !5357, file: !1175, line: 549, type: !40)
!5363 = !DILocalVariable(name: "WakeUpMethod", arg: 3, scope: !5357, file: !1175, line: 549, type: !24)
!5364 = !DILocation(line: 0, scope: !5357)
!5365 = !DILocation(line: 552, column: 13, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5357, file: !1175, line: 552, column: 7)
!5367 = !DILocation(line: 552, column: 7, scope: !5357)
!5368 = !DILocation(line: 568, column: 14, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5357, file: !1175, line: 568, column: 7)
!5370 = !DILocation(line: 568, column: 21, scope: !5369)
!5371 = !DILocation(line: 568, column: 7, scope: !5357)
!5372 = !DILocation(line: 571, column: 12, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5369, file: !1175, line: 569, column: 3)
!5374 = !DILocation(line: 571, column: 17, scope: !5373)
!5375 = !DILocation(line: 585, column: 5, scope: !5373)
!5376 = !DILocation(line: 587, column: 3, scope: !5373)
!5377 = !DILocation(line: 589, column: 17, scope: !5357)
!5378 = !DILocation(line: 592, column: 3, scope: !5357)
!5379 = !DILocation(line: 595, column: 3, scope: !5357)
!5380 = !DILocation(line: 600, column: 3, scope: !5357)
!5381 = !DILocation(line: 601, column: 3, scope: !5357)
!5382 = !DILocation(line: 604, column: 3, scope: !5357)
!5383 = !DILocation(line: 605, column: 3, scope: !5357)
!5384 = !DILocation(line: 608, column: 3, scope: !5357)
!5385 = !DILocation(line: 609, column: 3, scope: !5357)
!5386 = !DILocation(line: 612, column: 3, scope: !5357)
!5387 = !DILocation(line: 615, column: 10, scope: !5357)
!5388 = !DILocation(line: 615, column: 20, scope: !5357)
!5389 = !DILocation(line: 616, column: 17, scope: !5357)
!5390 = !DILocation(line: 617, column: 10, scope: !5357)
!5391 = !DILocation(line: 617, column: 18, scope: !5357)
!5392 = !DILocation(line: 619, column: 3, scope: !5357)
!5393 = !DILocation(line: 620, column: 1, scope: !5357)
!5394 = distinct !DISubprogram(name: "HAL_UART_DeInit", scope: !1175, file: !1175, line: 628, type: !5218, scopeLine: 629, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5395)
!5395 = !{!5396}
!5396 = !DILocalVariable(name: "huart", arg: 1, scope: !5394, file: !1175, line: 628, type: !1200)
!5397 = !DILocation(line: 0, scope: !5394)
!5398 = !DILocation(line: 631, column: 13, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5394, file: !1175, line: 631, column: 7)
!5400 = !DILocation(line: 631, column: 7, scope: !5394)
!5401 = !DILocation(line: 639, column: 10, scope: !5394)
!5402 = !DILocation(line: 639, column: 17, scope: !5394)
!5403 = !DILocation(line: 642, column: 3, scope: !5394)
!5404 = !DILocation(line: 653, column: 3, scope: !5394)
!5405 = !DILocation(line: 656, column: 10, scope: !5394)
!5406 = !DILocation(line: 656, column: 20, scope: !5394)
!5407 = !DILocation(line: 657, column: 17, scope: !5394)
!5408 = !DILocation(line: 658, column: 10, scope: !5394)
!5409 = !DILocation(line: 658, column: 18, scope: !5394)
!5410 = !DILocation(line: 661, column: 3, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5394, file: !1175, line: 661, column: 3)
!5412 = !DILocation(line: 663, column: 3, scope: !5394)
!5413 = !DILocation(line: 664, column: 1, scope: !5394)
!5414 = distinct !DISubprogram(name: "HAL_UART_MspDeInit", scope: !1175, file: !1175, line: 687, type: !5256, scopeLine: 688, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5415)
!5415 = !{!5416}
!5416 = !DILocalVariable(name: "huart", arg: 1, scope: !5414, file: !1175, line: 687, type: !1200)
!5417 = !DILocation(line: 0, scope: !5414)
!5418 = !DILocation(line: 694, column: 1, scope: !5414)
!5419 = distinct !DISubprogram(name: "HAL_UART_Transmit", scope: !1175, file: !1175, line: 1027, type: !5420, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5422)
!5420 = !DISubroutineType(types: !5421)
!5421 = !{!2541, !1200, !45, !37, !24}
!5422 = !{!5423, !5424, !5425, !5426, !5427, !5428}
!5423 = !DILocalVariable(name: "huart", arg: 1, scope: !5419, file: !1175, line: 1027, type: !1200)
!5424 = !DILocalVariable(name: "pData", arg: 2, scope: !5419, file: !1175, line: 1027, type: !45)
!5425 = !DILocalVariable(name: "Size", arg: 3, scope: !5419, file: !1175, line: 1027, type: !37)
!5426 = !DILocalVariable(name: "Timeout", arg: 4, scope: !5419, file: !1175, line: 1027, type: !24)
!5427 = !DILocalVariable(name: "tmp", scope: !5419, file: !1175, line: 1029, type: !1198)
!5428 = !DILocalVariable(name: "tickstart", scope: !5419, file: !1175, line: 1030, type: !24)
!5429 = !DILocation(line: 0, scope: !5419)
!5430 = !DILocation(line: 1033, column: 14, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5419, file: !1175, line: 1033, column: 7)
!5432 = !DILocation(line: 1033, column: 21, scope: !5431)
!5433 = !DILocation(line: 1033, column: 7, scope: !5419)
!5434 = !DILocation(line: 1035, column: 16, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5436, file: !1175, line: 1035, column: 9)
!5436 = distinct !DILexicalBlock(scope: !5431, file: !1175, line: 1034, column: 3)
!5437 = !DILocation(line: 1035, column: 25, scope: !5435)
!5438 = !DILocation(line: 1041, column: 5, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5440, file: !1175, line: 1041, column: 5)
!5440 = distinct !DILexicalBlock(scope: !5436, file: !1175, line: 1041, column: 5)
!5441 = !DILocation(line: 1041, column: 5, scope: !5440)
!5442 = !DILocation(line: 1041, column: 5, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5439, file: !1175, line: 1041, column: 5)
!5444 = !DILocation(line: 1043, column: 12, scope: !5436)
!5445 = !DILocation(line: 1043, column: 22, scope: !5436)
!5446 = !DILocation(line: 1044, column: 19, scope: !5436)
!5447 = !DILocation(line: 1047, column: 17, scope: !5436)
!5448 = !DILocation(line: 1049, column: 12, scope: !5436)
!5449 = !DILocation(line: 1049, column: 23, scope: !5436)
!5450 = !{!5229, !5230, i64 36}
!5451 = !DILocation(line: 1050, column: 12, scope: !5436)
!5452 = !DILocation(line: 1050, column: 24, scope: !5436)
!5453 = !{!5229, !5230, i64 38}
!5454 = !DILocation(line: 1051, column: 19, scope: !5436)
!5455 = !DILocation(line: 1051, column: 31, scope: !5436)
!5456 = !DILocation(line: 1051, column: 5, scope: !5436)
!5457 = !DILocation(line: 1053, column: 25, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5436, file: !1175, line: 1052, column: 5)
!5459 = !DILocation(line: 1054, column: 23, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5458, file: !1175, line: 1054, column: 11)
!5461 = !DILocation(line: 1054, column: 34, scope: !5460)
!5462 = !DILocation(line: 0, scope: !5460)
!5463 = !DILocation(line: 1054, column: 11, scope: !5458)
!5464 = !DILocation(line: 1056, column: 13, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5460, file: !1175, line: 1055, column: 7)
!5466 = !DILocation(line: 1060, column: 15, scope: !5465)
!5467 = !DILocation(line: 1061, column: 32, scope: !5465)
!5468 = !{!5230, !5230, i64 0}
!5469 = !DILocation(line: 1061, column: 37, scope: !5465)
!5470 = !DILocation(line: 1061, column: 16, scope: !5465)
!5471 = !DILocation(line: 1061, column: 26, scope: !5465)
!5472 = !DILocation(line: 1061, column: 29, scope: !5465)
!5473 = !{!3858, !2487, i64 4}
!5474 = !DILocation(line: 1062, column: 25, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5465, file: !1175, line: 1062, column: 13)
!5476 = !DILocation(line: 1062, column: 32, scope: !5475)
!5477 = !DILocation(line: 1062, column: 13, scope: !5465)
!5478 = !DILocation(line: 1064, column: 17, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5475, file: !1175, line: 1063, column: 9)
!5480 = !DILocation(line: 1065, column: 9, scope: !5479)
!5481 = !DILocation(line: 1068, column: 17, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5475, file: !1175, line: 1067, column: 9)
!5483 = !DILocation(line: 1073, column: 13, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5460, file: !1175, line: 1072, column: 7)
!5485 = !DILocation(line: 1077, column: 38, scope: !5484)
!5486 = !DILocation(line: 1077, column: 32, scope: !5484)
!5487 = !DILocation(line: 1077, column: 16, scope: !5484)
!5488 = !DILocation(line: 1077, column: 26, scope: !5484)
!5489 = !DILocation(line: 1077, column: 29, scope: !5484)
!5490 = distinct !{!5490, !5456, !5491, !1499, !1500}
!5491 = !DILocation(line: 1079, column: 5, scope: !5436)
!5492 = !DILocation(line: 1081, column: 9, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5436, file: !1175, line: 1081, column: 9)
!5494 = !DILocation(line: 1081, column: 85, scope: !5493)
!5495 = !DILocation(line: 1081, column: 9, scope: !5436)
!5496 = !DILocation(line: 1087, column: 19, scope: !5436)
!5497 = !DILocation(line: 1090, column: 5, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5436, file: !1175, line: 1090, column: 5)
!5499 = !DILocation(line: 1092, column: 5, scope: !5436)
!5500 = !DILocation(line: 0, scope: !5431)
!5501 = !DILocation(line: 1098, column: 1, scope: !5419)
!5502 = distinct !DISubprogram(name: "UART_WaitOnFlagUntilTimeout", scope: !1175, file: !1175, line: 2690, type: !5503, scopeLine: 2691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5505)
!5503 = !DISubroutineType(types: !5504)
!5504 = !{!2541, !1200, !24, !2639, !24, !24}
!5505 = !{!5506, !5507, !5508, !5509, !5510}
!5506 = !DILocalVariable(name: "huart", arg: 1, scope: !5502, file: !1175, line: 2690, type: !1200)
!5507 = !DILocalVariable(name: "Flag", arg: 2, scope: !5502, file: !1175, line: 2690, type: !24)
!5508 = !DILocalVariable(name: "Status", arg: 3, scope: !5502, file: !1175, line: 2690, type: !2639)
!5509 = !DILocalVariable(name: "Tickstart", arg: 4, scope: !5502, file: !1175, line: 2690, type: !24)
!5510 = !DILocalVariable(name: "Timeout", arg: 5, scope: !5502, file: !1175, line: 2690, type: !24)
!5511 = !DILocation(line: 0, scope: !5502)
!5512 = !DILocation(line: 2693, column: 11, scope: !5502)
!5513 = !{!3858, !2487, i64 0}
!5514 = !DILocation(line: 2693, column: 3, scope: !5502)
!5515 = !DILocation(line: 2696, column: 9, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5502, file: !1175, line: 2694, column: 3)
!5517 = !DILocation(line: 2698, column: 32, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5519, file: !1175, line: 2698, column: 11)
!5519 = distinct !DILexicalBlock(scope: !5520, file: !1175, line: 2697, column: 5)
!5520 = distinct !DILexicalBlock(scope: !5516, file: !1175, line: 2696, column: 9)
!5521 = !DILocation(line: 2698, column: 46, scope: !5518)
!5522 = !DILocation(line: 2698, column: 59, scope: !5518)
!5523 = !DILocation(line: 2698, column: 11, scope: !5519)
!5524 = !DILocation(line: 2701, column: 9, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5518, file: !1175, line: 2699, column: 7)
!5526 = !DILocation(line: 2702, column: 9, scope: !5525)
!5527 = !DILocation(line: 2704, column: 16, scope: !5525)
!5528 = !DILocation(line: 2704, column: 24, scope: !5525)
!5529 = !DILocation(line: 2705, column: 16, scope: !5525)
!5530 = !DILocation(line: 2705, column: 24, scope: !5525)
!5531 = !DILocation(line: 2708, column: 9, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5525, file: !1175, line: 2708, column: 9)
!5533 = !DILocation(line: 2710, column: 9, scope: !5525)
!5534 = distinct !{!5534, !5514, !5535, !1499, !1500}
!5535 = !DILocation(line: 2713, column: 3, scope: !5502)
!5536 = !DILocation(line: 2715, column: 1, scope: !5502)
!5537 = distinct !DISubprogram(name: "HAL_UART_Receive", scope: !1175, file: !1175, line: 1112, type: !5420, scopeLine: 1113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5538)
!5538 = !{!5539, !5540, !5541, !5542, !5543, !5544}
!5539 = !DILocalVariable(name: "huart", arg: 1, scope: !5537, file: !1175, line: 1112, type: !1200)
!5540 = !DILocalVariable(name: "pData", arg: 2, scope: !5537, file: !1175, line: 1112, type: !45)
!5541 = !DILocalVariable(name: "Size", arg: 3, scope: !5537, file: !1175, line: 1112, type: !37)
!5542 = !DILocalVariable(name: "Timeout", arg: 4, scope: !5537, file: !1175, line: 1112, type: !24)
!5543 = !DILocalVariable(name: "tmp", scope: !5537, file: !1175, line: 1114, type: !1198)
!5544 = !DILocalVariable(name: "tickstart", scope: !5537, file: !1175, line: 1115, type: !24)
!5545 = !DILocation(line: 0, scope: !5537)
!5546 = !DILocation(line: 1118, column: 14, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5537, file: !1175, line: 1118, column: 7)
!5548 = !DILocation(line: 1118, column: 22, scope: !5547)
!5549 = !DILocation(line: 1118, column: 7, scope: !5537)
!5550 = !DILocation(line: 1120, column: 16, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5552, file: !1175, line: 1120, column: 9)
!5552 = distinct !DILexicalBlock(scope: !5547, file: !1175, line: 1119, column: 3)
!5553 = !DILocation(line: 1120, column: 25, scope: !5551)
!5554 = !DILocation(line: 1126, column: 5, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5556, file: !1175, line: 1126, column: 5)
!5556 = distinct !DILexicalBlock(scope: !5552, file: !1175, line: 1126, column: 5)
!5557 = !DILocation(line: 1126, column: 5, scope: !5556)
!5558 = !DILocation(line: 1126, column: 5, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5555, file: !1175, line: 1126, column: 5)
!5560 = !DILocation(line: 1128, column: 12, scope: !5552)
!5561 = !DILocation(line: 1128, column: 22, scope: !5552)
!5562 = !DILocation(line: 1129, column: 20, scope: !5552)
!5563 = !DILocation(line: 1132, column: 17, scope: !5552)
!5564 = !DILocation(line: 1134, column: 12, scope: !5552)
!5565 = !DILocation(line: 1134, column: 23, scope: !5552)
!5566 = !{!5229, !5230, i64 44}
!5567 = !DILocation(line: 1135, column: 12, scope: !5552)
!5568 = !DILocation(line: 1135, column: 24, scope: !5552)
!5569 = !{!5229, !5230, i64 46}
!5570 = !DILocation(line: 1138, column: 19, scope: !5552)
!5571 = !DILocation(line: 1138, column: 31, scope: !5552)
!5572 = !DILocation(line: 1138, column: 5, scope: !5552)
!5573 = !DILocation(line: 1140, column: 25, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5552, file: !1175, line: 1139, column: 5)
!5575 = !DILocation(line: 1141, column: 23, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5574, file: !1175, line: 1141, column: 11)
!5577 = !DILocation(line: 1141, column: 34, scope: !5576)
!5578 = !DILocation(line: 0, scope: !5576)
!5579 = !DILocation(line: 1141, column: 11, scope: !5574)
!5580 = !DILocation(line: 1143, column: 13, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5576, file: !1175, line: 1142, column: 7)
!5582 = !DILocation(line: 1147, column: 15, scope: !5581)
!5583 = !DILocation(line: 1148, column: 25, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5581, file: !1175, line: 1148, column: 13)
!5585 = !DILocation(line: 1148, column: 32, scope: !5584)
!5586 = !DILocation(line: 1148, column: 13, scope: !5581)
!5587 = !DILocation(line: 1150, column: 36, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5584, file: !1175, line: 1149, column: 9)
!5589 = !DILocation(line: 1150, column: 46, scope: !5588)
!5590 = !DILocation(line: 1150, column: 18, scope: !5588)
!5591 = !DILocation(line: 1150, column: 16, scope: !5588)
!5592 = !DILocation(line: 1151, column: 17, scope: !5588)
!5593 = !DILocation(line: 1152, column: 9, scope: !5588)
!5594 = !DILocation(line: 1155, column: 36, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5584, file: !1175, line: 1154, column: 9)
!5596 = !DILocation(line: 1155, column: 46, scope: !5595)
!5597 = !DILocation(line: 1155, column: 18, scope: !5595)
!5598 = !DILocation(line: 1155, column: 16, scope: !5595)
!5599 = !DILocation(line: 1156, column: 17, scope: !5595)
!5600 = !DILocation(line: 1162, column: 13, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5576, file: !1175, line: 1161, column: 7)
!5602 = !DILocation(line: 1166, column: 25, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5601, file: !1175, line: 1166, column: 13)
!5604 = !DILocation(line: 1166, column: 32, scope: !5603)
!5605 = !DILocation(line: 1166, column: 13, scope: !5601)
!5606 = !DILocation(line: 1168, column: 39, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5603, file: !1175, line: 1167, column: 9)
!5608 = !DILocation(line: 1168, column: 49, scope: !5607)
!5609 = !DILocation(line: 1168, column: 22, scope: !5607)
!5610 = !DILocation(line: 1168, column: 17, scope: !5607)
!5611 = !DILocation(line: 1168, column: 20, scope: !5607)
!5612 = !DILocation(line: 1169, column: 9, scope: !5607)
!5613 = !DILocation(line: 1172, column: 39, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5603, file: !1175, line: 1171, column: 9)
!5615 = !DILocation(line: 1172, column: 49, scope: !5614)
!5616 = !DILocation(line: 1172, column: 22, scope: !5614)
!5617 = !DILocation(line: 1172, column: 17, scope: !5614)
!5618 = !DILocation(line: 1172, column: 20, scope: !5614)
!5619 = distinct !{!5619, !5572, !5620, !1499, !1500}
!5620 = !DILocation(line: 1176, column: 5, scope: !5552)
!5621 = !DILocation(line: 1179, column: 20, scope: !5552)
!5622 = !DILocation(line: 1182, column: 5, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5552, file: !1175, line: 1182, column: 5)
!5624 = !DILocation(line: 1184, column: 5, scope: !5552)
!5625 = !DILocation(line: 0, scope: !5547)
!5626 = !DILocation(line: 1190, column: 1, scope: !5537)
!5627 = distinct !DISubprogram(name: "HAL_UART_Transmit_IT", scope: !1175, file: !1175, line: 1203, type: !5628, scopeLine: 1204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5630)
!5628 = !DISubroutineType(types: !5629)
!5629 = !{!2541, !1200, !45, !37}
!5630 = !{!5631, !5632, !5633}
!5631 = !DILocalVariable(name: "huart", arg: 1, scope: !5627, file: !1175, line: 1203, type: !1200)
!5632 = !DILocalVariable(name: "pData", arg: 2, scope: !5627, file: !1175, line: 1203, type: !45)
!5633 = !DILocalVariable(name: "Size", arg: 3, scope: !5627, file: !1175, line: 1203, type: !37)
!5634 = !DILocation(line: 0, scope: !5627)
!5635 = !DILocation(line: 1206, column: 14, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5627, file: !1175, line: 1206, column: 7)
!5637 = !DILocation(line: 1206, column: 21, scope: !5636)
!5638 = !DILocation(line: 1206, column: 7, scope: !5627)
!5639 = !DILocation(line: 1208, column: 16, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5641, file: !1175, line: 1208, column: 9)
!5641 = distinct !DILexicalBlock(scope: !5636, file: !1175, line: 1207, column: 3)
!5642 = !DILocation(line: 1208, column: 25, scope: !5640)
!5643 = !DILocation(line: 1214, column: 5, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5645, file: !1175, line: 1214, column: 5)
!5645 = distinct !DILexicalBlock(scope: !5641, file: !1175, line: 1214, column: 5)
!5646 = !DILocation(line: 1214, column: 5, scope: !5645)
!5647 = !DILocation(line: 1214, column: 5, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5644, file: !1175, line: 1214, column: 5)
!5649 = !DILocation(line: 1216, column: 12, scope: !5641)
!5650 = !DILocation(line: 1216, column: 23, scope: !5641)
!5651 = !{!5229, !1644, i64 32}
!5652 = !DILocation(line: 1217, column: 12, scope: !5641)
!5653 = !DILocation(line: 1217, column: 23, scope: !5641)
!5654 = !DILocation(line: 1218, column: 12, scope: !5641)
!5655 = !DILocation(line: 1218, column: 24, scope: !5641)
!5656 = !DILocation(line: 1220, column: 12, scope: !5641)
!5657 = !DILocation(line: 1220, column: 22, scope: !5641)
!5658 = !DILocation(line: 1221, column: 19, scope: !5641)
!5659 = !DILocation(line: 1224, column: 5, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5641, file: !1175, line: 1224, column: 5)
!5661 = !DILocation(line: 1227, column: 5, scope: !5641)
!5662 = !DILocation(line: 1229, column: 5, scope: !5641)
!5663 = !DILocation(line: 0, scope: !5636)
!5664 = !DILocation(line: 1235, column: 1, scope: !5627)
!5665 = distinct !DISubprogram(name: "HAL_UART_Receive_IT", scope: !1175, file: !1175, line: 1248, type: !5628, scopeLine: 1249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5666)
!5666 = !{!5667, !5668, !5669}
!5667 = !DILocalVariable(name: "huart", arg: 1, scope: !5665, file: !1175, line: 1248, type: !1200)
!5668 = !DILocalVariable(name: "pData", arg: 2, scope: !5665, file: !1175, line: 1248, type: !45)
!5669 = !DILocalVariable(name: "Size", arg: 3, scope: !5665, file: !1175, line: 1248, type: !37)
!5670 = !DILocation(line: 0, scope: !5665)
!5671 = !DILocation(line: 1251, column: 14, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5665, file: !1175, line: 1251, column: 7)
!5673 = !DILocation(line: 1251, column: 22, scope: !5672)
!5674 = !DILocation(line: 1251, column: 7, scope: !5665)
!5675 = !DILocation(line: 1253, column: 16, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5677, file: !1175, line: 1253, column: 9)
!5677 = distinct !DILexicalBlock(scope: !5672, file: !1175, line: 1252, column: 3)
!5678 = !DILocation(line: 1253, column: 25, scope: !5676)
!5679 = !DILocation(line: 1259, column: 5, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5681, file: !1175, line: 1259, column: 5)
!5681 = distinct !DILexicalBlock(scope: !5677, file: !1175, line: 1259, column: 5)
!5682 = !DILocation(line: 1259, column: 5, scope: !5681)
!5683 = !DILocation(line: 1259, column: 5, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5680, file: !1175, line: 1259, column: 5)
!5685 = !DILocation(line: 1261, column: 12, scope: !5677)
!5686 = !DILocation(line: 1261, column: 23, scope: !5677)
!5687 = !{!5229, !1644, i64 40}
!5688 = !DILocation(line: 1262, column: 12, scope: !5677)
!5689 = !DILocation(line: 1262, column: 23, scope: !5677)
!5690 = !DILocation(line: 1263, column: 12, scope: !5677)
!5691 = !DILocation(line: 1263, column: 24, scope: !5677)
!5692 = !DILocation(line: 1265, column: 12, scope: !5677)
!5693 = !DILocation(line: 1265, column: 22, scope: !5677)
!5694 = !DILocation(line: 1266, column: 20, scope: !5677)
!5695 = !DILocation(line: 1269, column: 5, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5677, file: !1175, line: 1269, column: 5)
!5697 = !DILocation(line: 1272, column: 5, scope: !5677)
!5698 = !DILocation(line: 1275, column: 5, scope: !5677)
!5699 = !DILocation(line: 1278, column: 5, scope: !5677)
!5700 = !DILocation(line: 1280, column: 5, scope: !5677)
!5701 = !DILocation(line: 0, scope: !5672)
!5702 = !DILocation(line: 1286, column: 1, scope: !5665)
!5703 = distinct !DISubprogram(name: "HAL_UART_Transmit_DMA", scope: !1175, file: !1175, line: 1299, type: !5628, scopeLine: 1300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5704)
!5704 = !{!5705, !5706, !5707, !5708}
!5705 = !DILocalVariable(name: "huart", arg: 1, scope: !5703, file: !1175, line: 1299, type: !1200)
!5706 = !DILocalVariable(name: "pData", arg: 2, scope: !5703, file: !1175, line: 1299, type: !45)
!5707 = !DILocalVariable(name: "Size", arg: 3, scope: !5703, file: !1175, line: 1299, type: !37)
!5708 = !DILocalVariable(name: "tmp", scope: !5703, file: !1175, line: 1301, type: !640)
!5709 = !DILocation(line: 0, scope: !5703)
!5710 = !DILocation(line: 1304, column: 14, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5703, file: !1175, line: 1304, column: 7)
!5712 = !DILocation(line: 1304, column: 21, scope: !5711)
!5713 = !DILocation(line: 1304, column: 7, scope: !5703)
!5714 = !DILocation(line: 1306, column: 16, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5716, file: !1175, line: 1306, column: 9)
!5716 = distinct !DILexicalBlock(scope: !5711, file: !1175, line: 1305, column: 3)
!5717 = !DILocation(line: 1306, column: 25, scope: !5715)
!5718 = !DILocation(line: 1312, column: 5, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5720, file: !1175, line: 1312, column: 5)
!5720 = distinct !DILexicalBlock(scope: !5716, file: !1175, line: 1312, column: 5)
!5721 = !DILocation(line: 1312, column: 5, scope: !5720)
!5722 = !DILocation(line: 1312, column: 5, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5719, file: !1175, line: 1312, column: 5)
!5724 = !DILocation(line: 1314, column: 12, scope: !5716)
!5725 = !DILocation(line: 1314, column: 23, scope: !5716)
!5726 = !DILocation(line: 1315, column: 12, scope: !5716)
!5727 = !DILocation(line: 1315, column: 23, scope: !5716)
!5728 = !DILocation(line: 1316, column: 12, scope: !5716)
!5729 = !DILocation(line: 1316, column: 24, scope: !5716)
!5730 = !DILocation(line: 1318, column: 12, scope: !5716)
!5731 = !DILocation(line: 1318, column: 22, scope: !5716)
!5732 = !DILocation(line: 1319, column: 19, scope: !5716)
!5733 = !DILocation(line: 1322, column: 12, scope: !5716)
!5734 = !{!5229, !1644, i64 48}
!5735 = !DILocation(line: 1322, column: 20, scope: !5716)
!5736 = !DILocation(line: 1322, column: 37, scope: !5716)
!5737 = !{!5738, !1644, i64 44}
!5738 = !{!"__DMA_HandleTypeDef", !1644, i64 0, !3858, i64 4, !1645, i64 32, !1645, i64 36, !1644, i64 40, !1644, i64 44, !1644, i64 48, !1644, i64 52, !1644, i64 56, !2487, i64 60, !1644, i64 64, !2487, i64 68}
!5739 = !DILocation(line: 1325, column: 20, scope: !5716)
!5740 = !DILocation(line: 1325, column: 41, scope: !5716)
!5741 = !{!5738, !1644, i64 48}
!5742 = !DILocation(line: 1328, column: 20, scope: !5716)
!5743 = !DILocation(line: 1328, column: 38, scope: !5716)
!5744 = !{!5738, !1644, i64 52}
!5745 = !DILocation(line: 1331, column: 20, scope: !5716)
!5746 = !DILocation(line: 1331, column: 38, scope: !5716)
!5747 = !{!5738, !1644, i64 56}
!5748 = !DILocation(line: 1335, column: 37, scope: !5716)
!5749 = !DILocation(line: 1335, column: 73, scope: !5716)
!5750 = !DILocation(line: 1335, column: 83, scope: !5716)
!5751 = !DILocation(line: 1335, column: 55, scope: !5716)
!5752 = !DILocation(line: 1335, column: 5, scope: !5716)
!5753 = !DILocation(line: 1338, column: 5, scope: !5716)
!5754 = !DILocation(line: 1341, column: 5, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5716, file: !1175, line: 1341, column: 5)
!5756 = !DILocation(line: 1345, column: 5, scope: !5716)
!5757 = !DILocation(line: 1347, column: 5, scope: !5716)
!5758 = !DILocation(line: 0, scope: !5711)
!5759 = !DILocation(line: 1353, column: 1, scope: !5703)
!5760 = distinct !DISubprogram(name: "UART_DMATransmitCplt", scope: !1175, file: !1175, line: 2542, type: !5761, scopeLine: 2543, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5763)
!5761 = !DISubroutineType(types: !5762)
!5762 = !{null, !1234}
!5763 = !{!5764, !5765}
!5764 = !DILocalVariable(name: "hdma", arg: 1, scope: !5760, file: !1175, line: 2542, type: !1234)
!5765 = !DILocalVariable(name: "huart", scope: !5760, file: !1175, line: 2544, type: !1200)
!5766 = !DILocation(line: 0, scope: !5760)
!5767 = !DILocation(line: 2544, column: 82, scope: !5760)
!5768 = !{!5738, !1644, i64 40}
!5769 = !DILocation(line: 2546, column: 14, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5760, file: !1175, line: 2546, column: 7)
!5771 = !{!5738, !1644, i64 0}
!5772 = !DILocation(line: 2546, column: 24, scope: !5770)
!5773 = !DILocation(line: 2546, column: 28, scope: !5770)
!5774 = !DILocation(line: 2546, column: 44, scope: !5770)
!5775 = !DILocation(line: 2546, column: 7, scope: !5760)
!5776 = !DILocation(line: 2548, column: 12, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5770, file: !1175, line: 2547, column: 3)
!5778 = !DILocation(line: 2548, column: 24, scope: !5777)
!5779 = !DILocation(line: 2552, column: 5, scope: !5777)
!5780 = !DILocation(line: 2555, column: 5, scope: !5777)
!5781 = !DILocation(line: 2557, column: 3, scope: !5777)
!5782 = !DILocation(line: 2566, column: 5, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5770, file: !1175, line: 2560, column: 3)
!5784 = !DILocation(line: 2569, column: 1, scope: !5760)
!5785 = distinct !DISubprogram(name: "UART_DMATxHalfCplt", scope: !1175, file: !1175, line: 2577, type: !5761, scopeLine: 2578, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5786)
!5786 = !{!5787, !5788}
!5787 = !DILocalVariable(name: "hdma", arg: 1, scope: !5785, file: !1175, line: 2577, type: !1234)
!5788 = !DILocalVariable(name: "huart", scope: !5785, file: !1175, line: 2579, type: !1200)
!5789 = !DILocation(line: 0, scope: !5785)
!5790 = !DILocation(line: 2579, column: 82, scope: !5785)
!5791 = !DILocation(line: 2586, column: 3, scope: !5785)
!5792 = !DILocation(line: 2588, column: 1, scope: !5785)
!5793 = distinct !DISubprogram(name: "UART_DMAError", scope: !1175, file: !1175, line: 2649, type: !5761, scopeLine: 2650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5794)
!5794 = !{!5795, !5796, !5797}
!5795 = !DILocalVariable(name: "hdma", arg: 1, scope: !5793, file: !1175, line: 2649, type: !1234)
!5796 = !DILocalVariable(name: "dmarequest", scope: !5793, file: !1175, line: 2651, type: !24)
!5797 = !DILocalVariable(name: "huart", scope: !5793, file: !1175, line: 2652, type: !1200)
!5798 = !DILocation(line: 0, scope: !5793)
!5799 = !DILocation(line: 2652, column: 82, scope: !5793)
!5800 = !DILocation(line: 2655, column: 16, scope: !5793)
!5801 = !DILocation(line: 2656, column: 15, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5793, file: !1175, line: 2656, column: 7)
!5803 = !DILocation(line: 2656, column: 22, scope: !5802)
!5804 = !DILocation(line: 2656, column: 49, scope: !5802)
!5805 = !DILocation(line: 2658, column: 12, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5802, file: !1175, line: 2657, column: 3)
!5807 = !DILocation(line: 2658, column: 24, scope: !5806)
!5808 = !DILocation(line: 2659, column: 5, scope: !5806)
!5809 = !DILocation(line: 2660, column: 3, scope: !5806)
!5810 = !DILocation(line: 2663, column: 16, scope: !5793)
!5811 = !DILocation(line: 2664, column: 15, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5793, file: !1175, line: 2664, column: 7)
!5813 = !DILocation(line: 2664, column: 23, scope: !5812)
!5814 = !DILocation(line: 2664, column: 50, scope: !5812)
!5815 = !DILocation(line: 2666, column: 12, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5812, file: !1175, line: 2665, column: 3)
!5817 = !DILocation(line: 2666, column: 24, scope: !5816)
!5818 = !DILocation(line: 2667, column: 5, scope: !5816)
!5819 = !DILocation(line: 2668, column: 3, scope: !5816)
!5820 = !DILocation(line: 2670, column: 10, scope: !5793)
!5821 = !DILocation(line: 2670, column: 20, scope: !5793)
!5822 = !DILocation(line: 2676, column: 3, scope: !5793)
!5823 = !DILocation(line: 2678, column: 1, scope: !5793)
!5824 = !DISubprogram(name: "HAL_DMA_Start_IT", scope: !783, file: !783, line: 378, type: !5825, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !202)
!5825 = !DISubroutineType(types: !5826)
!5826 = !{!2541, !1234, !24, !24, !24}
!5827 = distinct !DISubprogram(name: "UART_EndTxTransfer", scope: !1175, file: !1175, line: 2722, type: !5256, scopeLine: 2723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5828)
!5828 = !{!5829}
!5829 = !DILocalVariable(name: "huart", arg: 1, scope: !5827, file: !1175, line: 2722, type: !1200)
!5830 = !DILocation(line: 0, scope: !5827)
!5831 = !DILocation(line: 2725, column: 3, scope: !5827)
!5832 = !DILocation(line: 2728, column: 10, scope: !5827)
!5833 = !DILocation(line: 2728, column: 17, scope: !5827)
!5834 = !DILocation(line: 2729, column: 1, scope: !5827)
!5835 = distinct !DISubprogram(name: "UART_EndRxTransfer", scope: !1175, file: !1175, line: 2736, type: !5256, scopeLine: 2737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5836)
!5836 = !{!5837}
!5837 = !DILocalVariable(name: "huart", arg: 1, scope: !5835, file: !1175, line: 2736, type: !1200)
!5838 = !DILocation(line: 0, scope: !5835)
!5839 = !DILocation(line: 2739, column: 3, scope: !5835)
!5840 = !DILocation(line: 2740, column: 3, scope: !5835)
!5841 = !DILocation(line: 2743, column: 10, scope: !5835)
!5842 = !DILocation(line: 2743, column: 18, scope: !5835)
!5843 = !DILocation(line: 2744, column: 1, scope: !5835)
!5844 = distinct !DISubprogram(name: "HAL_UART_ErrorCallback", scope: !1175, file: !1175, line: 2227, type: !5256, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5845)
!5845 = !{!5846}
!5846 = !DILocalVariable(name: "huart", arg: 1, scope: !5844, file: !1175, line: 2227, type: !1200)
!5847 = !DILocation(line: 0, scope: !5844)
!5848 = !DILocation(line: 2234, column: 1, scope: !5844)
!5849 = distinct !DISubprogram(name: "HAL_UART_TxHalfCpltCallback", scope: !1175, file: !1175, line: 2182, type: !5256, scopeLine: 2183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5850)
!5850 = !{!5851}
!5851 = !DILocalVariable(name: "huart", arg: 1, scope: !5849, file: !1175, line: 2182, type: !1200)
!5852 = !DILocation(line: 0, scope: !5849)
!5853 = !DILocation(line: 2189, column: 1, scope: !5849)
!5854 = distinct !DISubprogram(name: "HAL_UART_TxCpltCallback", scope: !1175, file: !1175, line: 2167, type: !5256, scopeLine: 2168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5855)
!5855 = !{!5856}
!5856 = !DILocalVariable(name: "huart", arg: 1, scope: !5854, file: !1175, line: 2167, type: !1200)
!5857 = !DILocation(line: 0, scope: !5854)
!5858 = !DILocation(line: 2174, column: 1, scope: !5854)
!5859 = distinct !DISubprogram(name: "HAL_UART_Receive_DMA", scope: !1175, file: !1175, line: 1367, type: !5628, scopeLine: 1368, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5860)
!5860 = !{!5861, !5862, !5863, !5864, !5865}
!5861 = !DILocalVariable(name: "huart", arg: 1, scope: !5859, file: !1175, line: 1367, type: !1200)
!5862 = !DILocalVariable(name: "pData", arg: 2, scope: !5859, file: !1175, line: 1367, type: !45)
!5863 = !DILocalVariable(name: "Size", arg: 3, scope: !5859, file: !1175, line: 1367, type: !37)
!5864 = !DILocalVariable(name: "tmp", scope: !5859, file: !1175, line: 1369, type: !640)
!5865 = !DILocalVariable(name: "tmpreg", scope: !5866, file: !1175, line: 1405, type: !23)
!5866 = distinct !DILexicalBlock(scope: !5867, file: !1175, line: 1405, column: 5)
!5867 = distinct !DILexicalBlock(scope: !5868, file: !1175, line: 1373, column: 3)
!5868 = distinct !DILexicalBlock(scope: !5859, file: !1175, line: 1372, column: 7)
!5869 = !DILocation(line: 0, scope: !5859)
!5870 = !DILocation(line: 1372, column: 14, scope: !5868)
!5871 = !DILocation(line: 1372, column: 22, scope: !5868)
!5872 = !DILocation(line: 1372, column: 7, scope: !5859)
!5873 = !DILocation(line: 1374, column: 16, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5867, file: !1175, line: 1374, column: 9)
!5875 = !DILocation(line: 1374, column: 25, scope: !5874)
!5876 = !DILocation(line: 1380, column: 5, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5878, file: !1175, line: 1380, column: 5)
!5878 = distinct !DILexicalBlock(scope: !5867, file: !1175, line: 1380, column: 5)
!5879 = !DILocation(line: 1380, column: 5, scope: !5878)
!5880 = !DILocation(line: 1380, column: 5, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5877, file: !1175, line: 1380, column: 5)
!5882 = !DILocation(line: 1382, column: 12, scope: !5867)
!5883 = !DILocation(line: 1382, column: 23, scope: !5867)
!5884 = !DILocation(line: 1383, column: 12, scope: !5867)
!5885 = !DILocation(line: 1383, column: 23, scope: !5867)
!5886 = !DILocation(line: 1385, column: 12, scope: !5867)
!5887 = !DILocation(line: 1385, column: 22, scope: !5867)
!5888 = !DILocation(line: 1386, column: 20, scope: !5867)
!5889 = !DILocation(line: 1389, column: 12, scope: !5867)
!5890 = !{!5229, !1644, i64 52}
!5891 = !DILocation(line: 1389, column: 20, scope: !5867)
!5892 = !DILocation(line: 1389, column: 37, scope: !5867)
!5893 = !DILocation(line: 1392, column: 20, scope: !5867)
!5894 = !DILocation(line: 1392, column: 41, scope: !5867)
!5895 = !DILocation(line: 1395, column: 20, scope: !5867)
!5896 = !DILocation(line: 1395, column: 38, scope: !5867)
!5897 = !DILocation(line: 1398, column: 20, scope: !5867)
!5898 = !DILocation(line: 1398, column: 38, scope: !5867)
!5899 = !DILocation(line: 1402, column: 55, scope: !5867)
!5900 = !DILocation(line: 1402, column: 65, scope: !5867)
!5901 = !DILocation(line: 1402, column: 37, scope: !5867)
!5902 = !DILocation(line: 1402, column: 69, scope: !5867)
!5903 = !DILocation(line: 1402, column: 5, scope: !5867)
!5904 = !DILocation(line: 1405, column: 5, scope: !5866)
!5905 = !DILocation(line: 1405, column: 5, scope: !5867)
!5906 = !DILocation(line: 1408, column: 5, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5867, file: !1175, line: 1408, column: 5)
!5908 = !DILocation(line: 1411, column: 5, scope: !5867)
!5909 = !DILocation(line: 1414, column: 5, scope: !5867)
!5910 = !DILocation(line: 1418, column: 5, scope: !5867)
!5911 = !DILocation(line: 1420, column: 5, scope: !5867)
!5912 = !DILocation(line: 0, scope: !5868)
!5913 = !DILocation(line: 1426, column: 1, scope: !5859)
!5914 = distinct !DISubprogram(name: "UART_DMAReceiveCplt", scope: !1175, file: !1175, line: 2596, type: !5761, scopeLine: 2597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5915)
!5915 = !{!5916, !5917}
!5916 = !DILocalVariable(name: "hdma", arg: 1, scope: !5914, file: !1175, line: 2596, type: !1234)
!5917 = !DILocalVariable(name: "huart", scope: !5914, file: !1175, line: 2598, type: !1200)
!5918 = !DILocation(line: 0, scope: !5914)
!5919 = !DILocation(line: 2598, column: 82, scope: !5914)
!5920 = !DILocation(line: 2600, column: 14, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5914, file: !1175, line: 2600, column: 7)
!5922 = !DILocation(line: 2600, column: 24, scope: !5921)
!5923 = !DILocation(line: 2600, column: 28, scope: !5921)
!5924 = !DILocation(line: 2600, column: 44, scope: !5921)
!5925 = !DILocation(line: 2600, column: 7, scope: !5914)
!5926 = !DILocation(line: 2602, column: 12, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5921, file: !1175, line: 2601, column: 3)
!5928 = !DILocation(line: 2602, column: 24, scope: !5927)
!5929 = !DILocation(line: 2605, column: 5, scope: !5927)
!5930 = !DILocation(line: 2606, column: 5, scope: !5927)
!5931 = !DILocation(line: 2610, column: 5, scope: !5927)
!5932 = !DILocation(line: 2613, column: 12, scope: !5927)
!5933 = !DILocation(line: 2613, column: 20, scope: !5927)
!5934 = !DILocation(line: 2614, column: 3, scope: !5927)
!5935 = !DILocation(line: 2620, column: 3, scope: !5914)
!5936 = !DILocation(line: 2622, column: 1, scope: !5914)
!5937 = distinct !DISubprogram(name: "UART_DMARxHalfCplt", scope: !1175, file: !1175, line: 2630, type: !5761, scopeLine: 2631, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5938)
!5938 = !{!5939, !5940}
!5939 = !DILocalVariable(name: "hdma", arg: 1, scope: !5937, file: !1175, line: 2630, type: !1234)
!5940 = !DILocalVariable(name: "huart", scope: !5937, file: !1175, line: 2632, type: !1200)
!5941 = !DILocation(line: 0, scope: !5937)
!5942 = !DILocation(line: 2632, column: 82, scope: !5937)
!5943 = !DILocation(line: 2639, column: 3, scope: !5937)
!5944 = !DILocation(line: 2641, column: 1, scope: !5937)
!5945 = distinct !DISubprogram(name: "HAL_UART_RxHalfCpltCallback", scope: !1175, file: !1175, line: 2212, type: !5256, scopeLine: 2213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5946)
!5946 = !{!5947}
!5947 = !DILocalVariable(name: "huart", arg: 1, scope: !5945, file: !1175, line: 2212, type: !1200)
!5948 = !DILocation(line: 0, scope: !5945)
!5949 = !DILocation(line: 2219, column: 1, scope: !5945)
!5950 = distinct !DISubprogram(name: "HAL_UART_RxCpltCallback", scope: !1175, file: !1175, line: 2197, type: !5256, scopeLine: 2198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5951)
!5951 = !{!5952}
!5952 = !DILocalVariable(name: "huart", arg: 1, scope: !5950, file: !1175, line: 2197, type: !1200)
!5953 = !DILocation(line: 0, scope: !5950)
!5954 = !DILocation(line: 2204, column: 1, scope: !5950)
!5955 = distinct !DISubprogram(name: "HAL_UART_DMAPause", scope: !1175, file: !1175, line: 1434, type: !5218, scopeLine: 1435, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5956)
!5956 = !{!5957, !5958}
!5957 = !DILocalVariable(name: "huart", arg: 1, scope: !5955, file: !1175, line: 1434, type: !1200)
!5958 = !DILocalVariable(name: "dmarequest", scope: !5955, file: !1175, line: 1436, type: !24)
!5959 = !DILocation(line: 0, scope: !5955)
!5960 = !DILocation(line: 1439, column: 3, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5962, file: !1175, line: 1439, column: 3)
!5962 = distinct !DILexicalBlock(scope: !5955, file: !1175, line: 1439, column: 3)
!5963 = !DILocation(line: 1439, column: 3, scope: !5962)
!5964 = !DILocation(line: 1439, column: 3, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5961, file: !1175, line: 1439, column: 3)
!5966 = !DILocation(line: 1441, column: 16, scope: !5955)
!5967 = !DILocation(line: 1442, column: 15, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5955, file: !1175, line: 1442, column: 7)
!5969 = !DILocation(line: 1442, column: 22, scope: !5968)
!5970 = !DILocation(line: 1442, column: 49, scope: !5968)
!5971 = !DILocation(line: 1445, column: 5, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5968, file: !1175, line: 1443, column: 3)
!5973 = !DILocation(line: 1446, column: 3, scope: !5972)
!5974 = !DILocation(line: 1448, column: 16, scope: !5955)
!5975 = !DILocation(line: 1449, column: 15, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5955, file: !1175, line: 1449, column: 7)
!5977 = !DILocation(line: 1449, column: 23, scope: !5976)
!5978 = !DILocation(line: 1449, column: 50, scope: !5976)
!5979 = !DILocation(line: 1452, column: 5, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5976, file: !1175, line: 1450, column: 3)
!5981 = !DILocation(line: 1453, column: 5, scope: !5980)
!5982 = !DILocation(line: 1456, column: 5, scope: !5980)
!5983 = !DILocation(line: 1457, column: 3, scope: !5980)
!5984 = !DILocation(line: 1460, column: 3, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5955, file: !1175, line: 1460, column: 3)
!5986 = !DILocation(line: 1462, column: 3, scope: !5955)
!5987 = !DILocation(line: 1463, column: 1, scope: !5955)
!5988 = distinct !DISubprogram(name: "HAL_UART_DMAResume", scope: !1175, file: !1175, line: 1471, type: !5218, scopeLine: 1472, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !5989)
!5989 = !{!5990, !5991}
!5990 = !DILocalVariable(name: "huart", arg: 1, scope: !5988, file: !1175, line: 1471, type: !1200)
!5991 = !DILocalVariable(name: "tmpreg", scope: !5992, file: !1175, line: 1485, type: !23)
!5992 = distinct !DILexicalBlock(scope: !5993, file: !1175, line: 1485, column: 5)
!5993 = distinct !DILexicalBlock(scope: !5994, file: !1175, line: 1483, column: 3)
!5994 = distinct !DILexicalBlock(scope: !5988, file: !1175, line: 1482, column: 7)
!5995 = !DILocation(line: 0, scope: !5988)
!5996 = !DILocation(line: 1474, column: 3, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5998, file: !1175, line: 1474, column: 3)
!5998 = distinct !DILexicalBlock(scope: !5988, file: !1175, line: 1474, column: 3)
!5999 = !DILocation(line: 1474, column: 3, scope: !5998)
!6000 = !DILocation(line: 1474, column: 3, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5997, file: !1175, line: 1474, column: 3)
!6002 = !DILocation(line: 1476, column: 14, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !5988, file: !1175, line: 1476, column: 7)
!6004 = !DILocation(line: 1476, column: 21, scope: !6003)
!6005 = !DILocation(line: 1476, column: 7, scope: !5988)
!6006 = !DILocation(line: 1479, column: 5, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !6003, file: !1175, line: 1477, column: 3)
!6008 = !DILocation(line: 1480, column: 3, scope: !6007)
!6009 = !DILocation(line: 1482, column: 14, scope: !5994)
!6010 = !DILocation(line: 1482, column: 22, scope: !5994)
!6011 = !DILocation(line: 1482, column: 7, scope: !5988)
!6012 = !DILocation(line: 1485, column: 5, scope: !5992)
!6013 = !DILocation(line: 1485, column: 5, scope: !5993)
!6014 = !DILocation(line: 1488, column: 5, scope: !5993)
!6015 = !DILocation(line: 1489, column: 5, scope: !5993)
!6016 = !DILocation(line: 1492, column: 5, scope: !5993)
!6017 = !DILocation(line: 1493, column: 3, scope: !5993)
!6018 = !DILocation(line: 1496, column: 3, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !5988, file: !1175, line: 1496, column: 3)
!6020 = !DILocation(line: 1498, column: 3, scope: !5988)
!6021 = !DILocation(line: 1499, column: 1, scope: !5988)
!6022 = distinct !DISubprogram(name: "HAL_UART_DMAStop", scope: !1175, file: !1175, line: 1507, type: !5218, scopeLine: 1508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6023)
!6023 = !{!6024, !6025}
!6024 = !DILocalVariable(name: "huart", arg: 1, scope: !6022, file: !1175, line: 1507, type: !1200)
!6025 = !DILocalVariable(name: "dmarequest", scope: !6022, file: !1175, line: 1509, type: !24)
!6026 = !DILocation(line: 0, scope: !6022)
!6027 = !DILocation(line: 1517, column: 16, scope: !6022)
!6028 = !DILocation(line: 1518, column: 15, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6022, file: !1175, line: 1518, column: 7)
!6030 = !DILocation(line: 1518, column: 22, scope: !6029)
!6031 = !DILocation(line: 1518, column: 49, scope: !6029)
!6032 = !DILocation(line: 1520, column: 5, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6029, file: !1175, line: 1519, column: 3)
!6034 = !DILocation(line: 1523, column: 16, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6033, file: !1175, line: 1523, column: 9)
!6036 = !DILocation(line: 1523, column: 23, scope: !6035)
!6037 = !DILocation(line: 1523, column: 9, scope: !6033)
!6038 = !DILocation(line: 1525, column: 7, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6035, file: !1175, line: 1524, column: 5)
!6040 = !DILocation(line: 1526, column: 5, scope: !6039)
!6041 = !DILocation(line: 1527, column: 5, scope: !6033)
!6042 = !DILocation(line: 1528, column: 3, scope: !6033)
!6043 = !DILocation(line: 1531, column: 16, scope: !6022)
!6044 = !DILocation(line: 1532, column: 15, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6022, file: !1175, line: 1532, column: 7)
!6046 = !DILocation(line: 1532, column: 23, scope: !6045)
!6047 = !DILocation(line: 1532, column: 50, scope: !6045)
!6048 = !DILocation(line: 1534, column: 5, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6045, file: !1175, line: 1533, column: 3)
!6050 = !DILocation(line: 1537, column: 16, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6049, file: !1175, line: 1537, column: 9)
!6052 = !DILocation(line: 1537, column: 23, scope: !6051)
!6053 = !DILocation(line: 1537, column: 9, scope: !6049)
!6054 = !DILocation(line: 1539, column: 7, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6051, file: !1175, line: 1538, column: 5)
!6056 = !DILocation(line: 1540, column: 5, scope: !6055)
!6057 = !DILocation(line: 1541, column: 5, scope: !6049)
!6058 = !DILocation(line: 1542, column: 3, scope: !6049)
!6059 = !DILocation(line: 1544, column: 3, scope: !6022)
!6060 = !DISubprogram(name: "HAL_DMA_Abort", scope: !783, file: !783, line: 379, type: !6061, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !202)
!6061 = !DISubroutineType(types: !6062)
!6062 = !{!2541, !1234}
!6063 = distinct !DISubprogram(name: "HAL_UART_Abort", scope: !1175, file: !1175, line: 1559, type: !5218, scopeLine: 1560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6064)
!6064 = !{!6065}
!6065 = !DILocalVariable(name: "huart", arg: 1, scope: !6063, file: !1175, line: 1559, type: !1200)
!6066 = !DILocation(line: 0, scope: !6063)
!6067 = !DILocation(line: 1562, column: 3, scope: !6063)
!6068 = !DILocation(line: 1563, column: 3, scope: !6063)
!6069 = !DILocation(line: 1566, column: 7, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6063, file: !1175, line: 1566, column: 7)
!6071 = !DILocation(line: 1566, column: 7, scope: !6063)
!6072 = !DILocation(line: 1568, column: 5, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6070, file: !1175, line: 1567, column: 3)
!6074 = !DILocation(line: 1571, column: 16, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6073, file: !1175, line: 1571, column: 9)
!6076 = !DILocation(line: 1571, column: 23, scope: !6075)
!6077 = !DILocation(line: 1571, column: 9, scope: !6073)
!6078 = !DILocation(line: 1575, column: 22, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6075, file: !1175, line: 1572, column: 5)
!6080 = !DILocation(line: 1575, column: 40, scope: !6079)
!6081 = !DILocation(line: 1577, column: 11, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6079, file: !1175, line: 1577, column: 11)
!6083 = !DILocation(line: 1577, column: 40, scope: !6082)
!6084 = !DILocation(line: 1577, column: 11, scope: !6079)
!6085 = !DILocation(line: 1579, column: 37, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6087, file: !1175, line: 1579, column: 13)
!6087 = distinct !DILexicalBlock(scope: !6082, file: !1175, line: 1578, column: 7)
!6088 = !DILocation(line: 1579, column: 13, scope: !6086)
!6089 = !DILocation(line: 1579, column: 45, scope: !6086)
!6090 = !DILocation(line: 1579, column: 13, scope: !6087)
!6091 = !DILocation(line: 1582, column: 18, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6086, file: !1175, line: 1580, column: 9)
!6093 = !DILocation(line: 1582, column: 28, scope: !6092)
!6094 = !DILocation(line: 1584, column: 11, scope: !6092)
!6095 = !DILocation(line: 1591, column: 7, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6063, file: !1175, line: 1591, column: 7)
!6097 = !DILocation(line: 1591, column: 7, scope: !6063)
!6098 = !DILocation(line: 1593, column: 5, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6096, file: !1175, line: 1592, column: 3)
!6100 = !DILocation(line: 1596, column: 16, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6099, file: !1175, line: 1596, column: 9)
!6102 = !DILocation(line: 1596, column: 23, scope: !6101)
!6103 = !DILocation(line: 1596, column: 9, scope: !6099)
!6104 = !DILocation(line: 1600, column: 22, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6101, file: !1175, line: 1597, column: 5)
!6106 = !DILocation(line: 1600, column: 40, scope: !6105)
!6107 = !DILocation(line: 1602, column: 11, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6105, file: !1175, line: 1602, column: 11)
!6109 = !DILocation(line: 1602, column: 40, scope: !6108)
!6110 = !DILocation(line: 1602, column: 11, scope: !6105)
!6111 = !DILocation(line: 1604, column: 37, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6113, file: !1175, line: 1604, column: 13)
!6113 = distinct !DILexicalBlock(scope: !6108, file: !1175, line: 1603, column: 7)
!6114 = !DILocation(line: 1604, column: 13, scope: !6112)
!6115 = !DILocation(line: 1604, column: 45, scope: !6112)
!6116 = !DILocation(line: 1604, column: 13, scope: !6113)
!6117 = !DILocation(line: 1607, column: 18, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6112, file: !1175, line: 1605, column: 9)
!6119 = !DILocation(line: 1607, column: 28, scope: !6118)
!6120 = !DILocation(line: 1609, column: 11, scope: !6118)
!6121 = !DILocation(line: 1616, column: 10, scope: !6063)
!6122 = !DILocation(line: 1616, column: 22, scope: !6063)
!6123 = !DILocation(line: 1617, column: 10, scope: !6063)
!6124 = !DILocation(line: 1617, column: 22, scope: !6063)
!6125 = !DILocation(line: 1620, column: 10, scope: !6063)
!6126 = !DILocation(line: 1620, column: 20, scope: !6063)
!6127 = !DILocation(line: 1623, column: 10, scope: !6063)
!6128 = !DILocation(line: 1623, column: 18, scope: !6063)
!6129 = !DILocation(line: 1624, column: 10, scope: !6063)
!6130 = !DILocation(line: 1624, column: 17, scope: !6063)
!6131 = !DILocation(line: 1626, column: 3, scope: !6063)
!6132 = !DILocation(line: 1627, column: 1, scope: !6063)
!6133 = !DISubprogram(name: "HAL_DMA_GetError", scope: !783, file: !783, line: 395, type: !6134, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !202)
!6134 = !DISubroutineType(types: !6135)
!6135 = !{!24, !1234}
!6136 = distinct !DISubprogram(name: "HAL_UART_AbortTransmit", scope: !1175, file: !1175, line: 1641, type: !5218, scopeLine: 1642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6137)
!6137 = !{!6138}
!6138 = !DILocalVariable(name: "huart", arg: 1, scope: !6136, file: !1175, line: 1641, type: !1200)
!6139 = !DILocation(line: 0, scope: !6136)
!6140 = !DILocation(line: 1644, column: 3, scope: !6136)
!6141 = !DILocation(line: 1647, column: 7, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6136, file: !1175, line: 1647, column: 7)
!6143 = !DILocation(line: 1647, column: 7, scope: !6136)
!6144 = !DILocation(line: 1649, column: 5, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6142, file: !1175, line: 1648, column: 3)
!6146 = !DILocation(line: 1652, column: 16, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6145, file: !1175, line: 1652, column: 9)
!6148 = !DILocation(line: 1652, column: 23, scope: !6147)
!6149 = !DILocation(line: 1652, column: 9, scope: !6145)
!6150 = !DILocation(line: 1656, column: 22, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6147, file: !1175, line: 1653, column: 5)
!6152 = !DILocation(line: 1656, column: 40, scope: !6151)
!6153 = !DILocation(line: 1658, column: 11, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6151, file: !1175, line: 1658, column: 11)
!6155 = !DILocation(line: 1658, column: 40, scope: !6154)
!6156 = !DILocation(line: 1658, column: 11, scope: !6151)
!6157 = !DILocation(line: 1660, column: 37, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6159, file: !1175, line: 1660, column: 13)
!6159 = distinct !DILexicalBlock(scope: !6154, file: !1175, line: 1659, column: 7)
!6160 = !DILocation(line: 1660, column: 13, scope: !6158)
!6161 = !DILocation(line: 1660, column: 45, scope: !6158)
!6162 = !DILocation(line: 1660, column: 13, scope: !6159)
!6163 = !DILocation(line: 1663, column: 18, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6158, file: !1175, line: 1661, column: 9)
!6165 = !DILocation(line: 1663, column: 28, scope: !6164)
!6166 = !DILocation(line: 1665, column: 11, scope: !6164)
!6167 = !DILocation(line: 1672, column: 10, scope: !6136)
!6168 = !DILocation(line: 1672, column: 22, scope: !6136)
!6169 = !DILocation(line: 1675, column: 10, scope: !6136)
!6170 = !DILocation(line: 1675, column: 17, scope: !6136)
!6171 = !DILocation(line: 1677, column: 3, scope: !6136)
!6172 = !DILocation(line: 1678, column: 1, scope: !6136)
!6173 = distinct !DISubprogram(name: "HAL_UART_AbortReceive", scope: !1175, file: !1175, line: 1692, type: !5218, scopeLine: 1693, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6174)
!6174 = !{!6175}
!6175 = !DILocalVariable(name: "huart", arg: 1, scope: !6173, file: !1175, line: 1692, type: !1200)
!6176 = !DILocation(line: 0, scope: !6173)
!6177 = !DILocation(line: 1695, column: 3, scope: !6173)
!6178 = !DILocation(line: 1696, column: 3, scope: !6173)
!6179 = !DILocation(line: 1699, column: 7, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6173, file: !1175, line: 1699, column: 7)
!6181 = !DILocation(line: 1699, column: 7, scope: !6173)
!6182 = !DILocation(line: 1701, column: 5, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6180, file: !1175, line: 1700, column: 3)
!6184 = !DILocation(line: 1704, column: 16, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6183, file: !1175, line: 1704, column: 9)
!6186 = !DILocation(line: 1704, column: 23, scope: !6185)
!6187 = !DILocation(line: 1704, column: 9, scope: !6183)
!6188 = !DILocation(line: 1708, column: 22, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6185, file: !1175, line: 1705, column: 5)
!6190 = !DILocation(line: 1708, column: 40, scope: !6189)
!6191 = !DILocation(line: 1710, column: 11, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6189, file: !1175, line: 1710, column: 11)
!6193 = !DILocation(line: 1710, column: 40, scope: !6192)
!6194 = !DILocation(line: 1710, column: 11, scope: !6189)
!6195 = !DILocation(line: 1712, column: 37, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6197, file: !1175, line: 1712, column: 13)
!6197 = distinct !DILexicalBlock(scope: !6192, file: !1175, line: 1711, column: 7)
!6198 = !DILocation(line: 1712, column: 13, scope: !6196)
!6199 = !DILocation(line: 1712, column: 45, scope: !6196)
!6200 = !DILocation(line: 1712, column: 13, scope: !6197)
!6201 = !DILocation(line: 1715, column: 18, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6196, file: !1175, line: 1713, column: 9)
!6203 = !DILocation(line: 1715, column: 28, scope: !6202)
!6204 = !DILocation(line: 1717, column: 11, scope: !6202)
!6205 = !DILocation(line: 1724, column: 10, scope: !6173)
!6206 = !DILocation(line: 1724, column: 22, scope: !6173)
!6207 = !DILocation(line: 1727, column: 10, scope: !6173)
!6208 = !DILocation(line: 1727, column: 18, scope: !6173)
!6209 = !DILocation(line: 1729, column: 3, scope: !6173)
!6210 = !DILocation(line: 1730, column: 1, scope: !6173)
!6211 = distinct !DISubprogram(name: "HAL_UART_Abort_IT", scope: !1175, file: !1175, line: 1746, type: !5218, scopeLine: 1747, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6212)
!6212 = !{!6213, !6214}
!6213 = !DILocalVariable(name: "huart", arg: 1, scope: !6211, file: !1175, line: 1746, type: !1200)
!6214 = !DILocalVariable(name: "AbortCplt", scope: !6211, file: !1175, line: 1748, type: !24)
!6215 = !DILocation(line: 0, scope: !6211)
!6216 = !DILocation(line: 1751, column: 3, scope: !6211)
!6217 = !DILocation(line: 1752, column: 3, scope: !6211)
!6218 = !DILocation(line: 1757, column: 14, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6211, file: !1175, line: 1757, column: 7)
!6220 = !DILocation(line: 1757, column: 21, scope: !6219)
!6221 = !DILocation(line: 1757, column: 7, scope: !6211)
!6222 = !DILocation(line: 1761, column: 9, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6224, file: !1175, line: 1761, column: 9)
!6224 = distinct !DILexicalBlock(scope: !6219, file: !1175, line: 1758, column: 3)
!6225 = !DILocation(line: 0, scope: !6223)
!6226 = !DILocation(line: 1771, column: 14, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6211, file: !1175, line: 1771, column: 7)
!6228 = !DILocation(line: 1771, column: 21, scope: !6227)
!6229 = !DILocation(line: 1771, column: 7, scope: !6211)
!6230 = !DILocation(line: 1775, column: 9, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6232, file: !1175, line: 1775, column: 9)
!6232 = distinct !DILexicalBlock(scope: !6227, file: !1175, line: 1772, column: 3)
!6233 = !DILocation(line: 0, scope: !6231)
!6234 = !DILocation(line: 1786, column: 7, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6211, file: !1175, line: 1786, column: 7)
!6236 = !DILocation(line: 1786, column: 7, scope: !6211)
!6237 = !DILocation(line: 1789, column: 5, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6235, file: !1175, line: 1787, column: 3)
!6239 = !DILocation(line: 1792, column: 9, scope: !6238)
!6240 = !DILocation(line: 1798, column: 11, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6242, file: !1175, line: 1798, column: 11)
!6242 = distinct !DILexicalBlock(scope: !6243, file: !1175, line: 1793, column: 5)
!6243 = distinct !DILexicalBlock(scope: !6238, file: !1175, line: 1792, column: 9)
!6244 = !DILocation(line: 1798, column: 43, scope: !6241)
!6245 = !DILocation(line: 1798, column: 11, scope: !6242)
!6246 = !DILocation(line: 1800, column: 16, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6241, file: !1175, line: 1799, column: 7)
!6248 = !DILocation(line: 1800, column: 24, scope: !6247)
!6249 = !DILocation(line: 1800, column: 42, scope: !6247)
!6250 = !DILocation(line: 1801, column: 7, scope: !6247)
!6251 = !DILocation(line: 1810, column: 7, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6211, file: !1175, line: 1810, column: 7)
!6253 = !DILocation(line: 1810, column: 7, scope: !6211)
!6254 = !DILocation(line: 1812, column: 5, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6252, file: !1175, line: 1811, column: 3)
!6256 = !DILocation(line: 1815, column: 16, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6255, file: !1175, line: 1815, column: 9)
!6258 = !DILocation(line: 1815, column: 23, scope: !6257)
!6259 = !DILocation(line: 1815, column: 9, scope: !6255)
!6260 = !DILocation(line: 1821, column: 11, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6262, file: !1175, line: 1821, column: 11)
!6262 = distinct !DILexicalBlock(scope: !6257, file: !1175, line: 1816, column: 5)
!6263 = !DILocation(line: 1821, column: 43, scope: !6261)
!6264 = !DILocation(line: 1821, column: 11, scope: !6262)
!6265 = !DILocation(line: 1823, column: 16, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6261, file: !1175, line: 1822, column: 7)
!6267 = !DILocation(line: 1823, column: 24, scope: !6266)
!6268 = !DILocation(line: 1823, column: 42, scope: !6266)
!6269 = !DILocation(line: 1825, column: 7, scope: !6266)
!6270 = !DILocation(line: 1834, column: 17, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6211, file: !1175, line: 1834, column: 7)
!6272 = !DILocation(line: 1834, column: 7, scope: !6211)
!6273 = !DILocation(line: 1837, column: 12, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6271, file: !1175, line: 1835, column: 3)
!6275 = !DILocation(line: 1837, column: 24, scope: !6274)
!6276 = !DILocation(line: 1838, column: 12, scope: !6274)
!6277 = !DILocation(line: 1838, column: 24, scope: !6274)
!6278 = !DILocation(line: 1841, column: 12, scope: !6274)
!6279 = !DILocation(line: 1841, column: 22, scope: !6274)
!6280 = !DILocation(line: 1844, column: 12, scope: !6274)
!6281 = !DILocation(line: 1844, column: 20, scope: !6274)
!6282 = !DILocation(line: 1845, column: 12, scope: !6274)
!6283 = !DILocation(line: 1845, column: 20, scope: !6274)
!6284 = !DILocation(line: 1853, column: 5, scope: !6274)
!6285 = !DILocation(line: 1855, column: 3, scope: !6274)
!6286 = !DILocation(line: 1857, column: 3, scope: !6211)
!6287 = distinct !DISubprogram(name: "UART_DMATxAbortCallback", scope: !1175, file: !1175, line: 2777, type: !5761, scopeLine: 2778, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6288)
!6288 = !{!6289, !6290}
!6289 = !DILocalVariable(name: "hdma", arg: 1, scope: !6287, file: !1175, line: 2777, type: !1234)
!6290 = !DILocalVariable(name: "huart", scope: !6287, file: !1175, line: 2779, type: !1200)
!6291 = !DILocation(line: 0, scope: !6287)
!6292 = !DILocation(line: 2779, column: 82, scope: !6287)
!6293 = !DILocation(line: 2781, column: 10, scope: !6287)
!6294 = !DILocation(line: 2781, column: 18, scope: !6287)
!6295 = !DILocation(line: 2781, column: 36, scope: !6287)
!6296 = !DILocation(line: 2784, column: 14, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6287, file: !1175, line: 2784, column: 7)
!6298 = !DILocation(line: 2784, column: 21, scope: !6297)
!6299 = !DILocation(line: 2784, column: 7, scope: !6287)
!6300 = !DILocation(line: 2786, column: 24, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6302, file: !1175, line: 2786, column: 9)
!6302 = distinct !DILexicalBlock(scope: !6297, file: !1175, line: 2785, column: 3)
!6303 = !DILocation(line: 2786, column: 42, scope: !6301)
!6304 = !DILocation(line: 2786, column: 9, scope: !6302)
!6305 = !DILocation(line: 2793, column: 10, scope: !6287)
!6306 = !DILocation(line: 2793, column: 22, scope: !6287)
!6307 = !DILocation(line: 2794, column: 10, scope: !6287)
!6308 = !DILocation(line: 2794, column: 22, scope: !6287)
!6309 = !DILocation(line: 2797, column: 10, scope: !6287)
!6310 = !DILocation(line: 2797, column: 20, scope: !6287)
!6311 = !DILocation(line: 2800, column: 10, scope: !6287)
!6312 = !DILocation(line: 2800, column: 18, scope: !6287)
!6313 = !DILocation(line: 2801, column: 10, scope: !6287)
!6314 = !DILocation(line: 2801, column: 18, scope: !6287)
!6315 = !DILocation(line: 2809, column: 3, scope: !6287)
!6316 = !DILocation(line: 2811, column: 1, scope: !6287)
!6317 = distinct !DISubprogram(name: "UART_DMARxAbortCallback", scope: !1175, file: !1175, line: 2822, type: !5761, scopeLine: 2823, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6318)
!6318 = !{!6319, !6320}
!6319 = !DILocalVariable(name: "hdma", arg: 1, scope: !6317, file: !1175, line: 2822, type: !1234)
!6320 = !DILocalVariable(name: "huart", scope: !6317, file: !1175, line: 2824, type: !1200)
!6321 = !DILocation(line: 0, scope: !6317)
!6322 = !DILocation(line: 2824, column: 82, scope: !6317)
!6323 = !DILocation(line: 2826, column: 10, scope: !6317)
!6324 = !DILocation(line: 2826, column: 18, scope: !6317)
!6325 = !DILocation(line: 2826, column: 36, scope: !6317)
!6326 = !DILocation(line: 2829, column: 14, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6317, file: !1175, line: 2829, column: 7)
!6328 = !DILocation(line: 2829, column: 21, scope: !6327)
!6329 = !DILocation(line: 2829, column: 7, scope: !6317)
!6330 = !DILocation(line: 2831, column: 24, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6332, file: !1175, line: 2831, column: 9)
!6332 = distinct !DILexicalBlock(scope: !6327, file: !1175, line: 2830, column: 3)
!6333 = !DILocation(line: 2831, column: 42, scope: !6331)
!6334 = !DILocation(line: 2831, column: 9, scope: !6332)
!6335 = !DILocation(line: 2838, column: 10, scope: !6317)
!6336 = !DILocation(line: 2838, column: 22, scope: !6317)
!6337 = !DILocation(line: 2839, column: 10, scope: !6317)
!6338 = !DILocation(line: 2839, column: 22, scope: !6317)
!6339 = !DILocation(line: 2842, column: 10, scope: !6317)
!6340 = !DILocation(line: 2842, column: 20, scope: !6317)
!6341 = !DILocation(line: 2845, column: 10, scope: !6317)
!6342 = !DILocation(line: 2845, column: 18, scope: !6317)
!6343 = !DILocation(line: 2846, column: 10, scope: !6317)
!6344 = !DILocation(line: 2846, column: 18, scope: !6317)
!6345 = !DILocation(line: 2854, column: 3, scope: !6317)
!6346 = !DILocation(line: 2856, column: 1, scope: !6317)
!6347 = !DISubprogram(name: "HAL_DMA_Abort_IT", scope: !783, file: !783, line: 380, type: !6061, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !202)
!6348 = distinct !DISubprogram(name: "HAL_UART_AbortCpltCallback", scope: !1175, file: !1175, line: 2241, type: !5256, scopeLine: 2242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6349)
!6349 = !{!6350}
!6350 = !DILocalVariable(name: "huart", arg: 1, scope: !6348, file: !1175, line: 2241, type: !1200)
!6351 = !DILocation(line: 0, scope: !6348)
!6352 = !DILocation(line: 2249, column: 1, scope: !6348)
!6353 = distinct !DISubprogram(name: "HAL_UART_AbortTransmit_IT", scope: !1175, file: !1175, line: 1874, type: !5218, scopeLine: 1875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6354)
!6354 = !{!6355}
!6355 = !DILocalVariable(name: "huart", arg: 1, scope: !6353, file: !1175, line: 1874, type: !1200)
!6356 = !DILocation(line: 0, scope: !6353)
!6357 = !DILocation(line: 1877, column: 3, scope: !6353)
!6358 = !DILocation(line: 1880, column: 7, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6353, file: !1175, line: 1880, column: 7)
!6360 = !DILocation(line: 1880, column: 7, scope: !6353)
!6361 = !DILocation(line: 1882, column: 5, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6359, file: !1175, line: 1881, column: 3)
!6363 = !DILocation(line: 1885, column: 16, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6362, file: !1175, line: 1885, column: 9)
!6365 = !DILocation(line: 1885, column: 23, scope: !6364)
!6366 = !DILocation(line: 1885, column: 9, scope: !6362)
!6367 = !DILocation(line: 1889, column: 22, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6364, file: !1175, line: 1886, column: 5)
!6369 = !DILocation(line: 1889, column: 40, scope: !6368)
!6370 = !DILocation(line: 1892, column: 11, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6368, file: !1175, line: 1892, column: 11)
!6372 = !DILocation(line: 1892, column: 43, scope: !6371)
!6373 = !DILocation(line: 1892, column: 11, scope: !6368)
!6374 = !DILocation(line: 1895, column: 16, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6371, file: !1175, line: 1893, column: 7)
!6376 = !DILocation(line: 1895, column: 24, scope: !6375)
!6377 = !DILocation(line: 1895, column: 9, scope: !6375)
!6378 = !DILocation(line: 1896, column: 7, scope: !6375)
!6379 = !DILocation(line: 1901, column: 14, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6364, file: !1175, line: 1899, column: 5)
!6381 = !DILocation(line: 1901, column: 26, scope: !6380)
!6382 = !DILocation(line: 1904, column: 14, scope: !6380)
!6383 = !DILocation(line: 1904, column: 21, scope: !6380)
!6384 = !DILocation(line: 1912, column: 7, scope: !6380)
!6385 = !DILocation(line: 1919, column: 12, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6359, file: !1175, line: 1917, column: 3)
!6387 = !DILocation(line: 1919, column: 24, scope: !6386)
!6388 = !DILocation(line: 1922, column: 12, scope: !6386)
!6389 = !DILocation(line: 1922, column: 19, scope: !6386)
!6390 = !DILocation(line: 1930, column: 5, scope: !6386)
!6391 = !DILocation(line: 1934, column: 3, scope: !6353)
!6392 = distinct !DISubprogram(name: "UART_DMATxOnlyAbortCallback", scope: !1175, file: !1175, line: 2867, type: !5761, scopeLine: 2868, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6393)
!6393 = !{!6394, !6395}
!6394 = !DILocalVariable(name: "hdma", arg: 1, scope: !6392, file: !1175, line: 2867, type: !1234)
!6395 = !DILocalVariable(name: "huart", scope: !6392, file: !1175, line: 2869, type: !1200)
!6396 = !DILocation(line: 0, scope: !6392)
!6397 = !DILocation(line: 2869, column: 82, scope: !6392)
!6398 = !DILocation(line: 2871, column: 10, scope: !6392)
!6399 = !DILocation(line: 2871, column: 22, scope: !6392)
!6400 = !DILocation(line: 2874, column: 10, scope: !6392)
!6401 = !DILocation(line: 2874, column: 17, scope: !6392)
!6402 = !DILocation(line: 2882, column: 3, scope: !6392)
!6403 = !DILocation(line: 2884, column: 1, scope: !6392)
!6404 = distinct !DISubprogram(name: "HAL_UART_AbortTransmitCpltCallback", scope: !1175, file: !1175, line: 2256, type: !5256, scopeLine: 2257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6405)
!6405 = !{!6406}
!6406 = !DILocalVariable(name: "huart", arg: 1, scope: !6404, file: !1175, line: 2256, type: !1200)
!6407 = !DILocation(line: 0, scope: !6404)
!6408 = !DILocation(line: 2264, column: 1, scope: !6404)
!6409 = distinct !DISubprogram(name: "HAL_UART_AbortReceive_IT", scope: !1175, file: !1175, line: 1951, type: !5218, scopeLine: 1952, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6410)
!6410 = !{!6411}
!6411 = !DILocalVariable(name: "huart", arg: 1, scope: !6409, file: !1175, line: 1951, type: !1200)
!6412 = !DILocation(line: 0, scope: !6409)
!6413 = !DILocation(line: 1954, column: 3, scope: !6409)
!6414 = !DILocation(line: 1955, column: 3, scope: !6409)
!6415 = !DILocation(line: 1958, column: 7, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6409, file: !1175, line: 1958, column: 7)
!6417 = !DILocation(line: 1958, column: 7, scope: !6409)
!6418 = !DILocation(line: 1960, column: 5, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6416, file: !1175, line: 1959, column: 3)
!6420 = !DILocation(line: 1963, column: 16, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6419, file: !1175, line: 1963, column: 9)
!6422 = !DILocation(line: 1963, column: 23, scope: !6421)
!6423 = !DILocation(line: 1963, column: 9, scope: !6419)
!6424 = !DILocation(line: 1967, column: 22, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6421, file: !1175, line: 1964, column: 5)
!6426 = !DILocation(line: 1967, column: 40, scope: !6425)
!6427 = !DILocation(line: 1970, column: 11, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6425, file: !1175, line: 1970, column: 11)
!6429 = !DILocation(line: 1970, column: 43, scope: !6428)
!6430 = !DILocation(line: 1970, column: 11, scope: !6425)
!6431 = !DILocation(line: 1973, column: 16, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6428, file: !1175, line: 1971, column: 7)
!6433 = !DILocation(line: 1973, column: 24, scope: !6432)
!6434 = !DILocation(line: 1973, column: 9, scope: !6432)
!6435 = !DILocation(line: 1974, column: 7, scope: !6432)
!6436 = !DILocation(line: 1979, column: 14, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6421, file: !1175, line: 1977, column: 5)
!6438 = !DILocation(line: 1979, column: 26, scope: !6437)
!6439 = !DILocation(line: 1982, column: 14, scope: !6437)
!6440 = !DILocation(line: 1982, column: 22, scope: !6437)
!6441 = !DILocation(line: 1990, column: 7, scope: !6437)
!6442 = !DILocation(line: 1997, column: 12, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6416, file: !1175, line: 1995, column: 3)
!6444 = !DILocation(line: 1997, column: 24, scope: !6443)
!6445 = !DILocation(line: 2000, column: 12, scope: !6443)
!6446 = !DILocation(line: 2000, column: 20, scope: !6443)
!6447 = !DILocation(line: 2008, column: 5, scope: !6443)
!6448 = !DILocation(line: 2012, column: 3, scope: !6409)
!6449 = distinct !DISubprogram(name: "UART_DMARxOnlyAbortCallback", scope: !1175, file: !1175, line: 2895, type: !5761, scopeLine: 2896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6450)
!6450 = !{!6451, !6452}
!6451 = !DILocalVariable(name: "hdma", arg: 1, scope: !6449, file: !1175, line: 2895, type: !1234)
!6452 = !DILocalVariable(name: "huart", scope: !6449, file: !1175, line: 2897, type: !1200)
!6453 = !DILocation(line: 0, scope: !6449)
!6454 = !DILocation(line: 2897, column: 82, scope: !6449)
!6455 = !DILocation(line: 2899, column: 10, scope: !6449)
!6456 = !DILocation(line: 2899, column: 22, scope: !6449)
!6457 = !DILocation(line: 2902, column: 10, scope: !6449)
!6458 = !DILocation(line: 2902, column: 18, scope: !6449)
!6459 = !DILocation(line: 2910, column: 3, scope: !6449)
!6460 = !DILocation(line: 2912, column: 1, scope: !6449)
!6461 = distinct !DISubprogram(name: "HAL_UART_AbortReceiveCpltCallback", scope: !1175, file: !1175, line: 2271, type: !5256, scopeLine: 2272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6462)
!6462 = !{!6463}
!6463 = !DILocalVariable(name: "huart", arg: 1, scope: !6461, file: !1175, line: 2271, type: !1200)
!6464 = !DILocation(line: 0, scope: !6461)
!6465 = !DILocation(line: 2279, column: 1, scope: !6461)
!6466 = distinct !DISubprogram(name: "HAL_UART_IRQHandler", scope: !1175, file: !1175, line: 2021, type: !5256, scopeLine: 2022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6467)
!6467 = !{!6468, !6469, !6470, !6471, !6472, !6473}
!6468 = !DILocalVariable(name: "huart", arg: 1, scope: !6466, file: !1175, line: 2021, type: !1200)
!6469 = !DILocalVariable(name: "isrflags", scope: !6466, file: !1175, line: 2023, type: !24)
!6470 = !DILocalVariable(name: "cr1its", scope: !6466, file: !1175, line: 2024, type: !24)
!6471 = !DILocalVariable(name: "cr3its", scope: !6466, file: !1175, line: 2025, type: !24)
!6472 = !DILocalVariable(name: "errorflags", scope: !6466, file: !1175, line: 2026, type: !24)
!6473 = !DILocalVariable(name: "dmarequest", scope: !6466, file: !1175, line: 2027, type: !24)
!6474 = !DILocation(line: 0, scope: !6466)
!6475 = !DILocation(line: 2023, column: 25, scope: !6466)
!6476 = !DILocation(line: 2024, column: 25, scope: !6466)
!6477 = !DILocation(line: 2025, column: 25, scope: !6466)
!6478 = !DILocation(line: 2031, column: 7, scope: !6466)
!6479 = !DILocation(line: 2036, column: 7, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6481, file: !1175, line: 2035, column: 5)
!6481 = distinct !DILexicalBlock(scope: !6482, file: !1175, line: 2034, column: 9)
!6482 = distinct !DILexicalBlock(scope: !6483, file: !1175, line: 2032, column: 3)
!6483 = distinct !DILexicalBlock(scope: !6466, file: !1175, line: 2031, column: 7)
!6484 = !DILocation(line: 2037, column: 7, scope: !6480)
!6485 = !DILocation(line: 2030, column: 26, scope: !6466)
!6486 = !DILocation(line: 2042, column: 19, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6466, file: !1175, line: 2042, column: 7)
!6488 = !DILocation(line: 2042, column: 29, scope: !6487)
!6489 = !DILocation(line: 2042, column: 42, scope: !6487)
!6490 = !DILocation(line: 2042, column: 59, scope: !6487)
!6491 = !DILocation(line: 2042, column: 69, scope: !6487)
!6492 = !DILocation(line: 2045, column: 20, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6494, file: !1175, line: 2045, column: 9)
!6494 = distinct !DILexicalBlock(scope: !6487, file: !1175, line: 2043, column: 3)
!6495 = !DILocation(line: 2045, column: 35, scope: !6493)
!6496 = !DILocation(line: 2045, column: 45, scope: !6493)
!6497 = !DILocation(line: 2047, column: 14, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6493, file: !1175, line: 2046, column: 5)
!6499 = !DILocation(line: 2047, column: 24, scope: !6498)
!6500 = !DILocation(line: 2048, column: 5, scope: !6498)
!6501 = !DILocation(line: 2051, column: 20, scope: !6502)
!6502 = distinct !DILexicalBlock(scope: !6494, file: !1175, line: 2051, column: 9)
!6503 = !DILocation(line: 2051, column: 35, scope: !6502)
!6504 = !DILocation(line: 2051, column: 45, scope: !6502)
!6505 = !DILocation(line: 2053, column: 14, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6502, file: !1175, line: 2052, column: 5)
!6507 = !DILocation(line: 2053, column: 24, scope: !6506)
!6508 = !DILocation(line: 2054, column: 5, scope: !6506)
!6509 = !DILocation(line: 2057, column: 20, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6494, file: !1175, line: 2057, column: 9)
!6511 = !DILocation(line: 2057, column: 35, scope: !6510)
!6512 = !DILocation(line: 2057, column: 45, scope: !6510)
!6513 = !DILocation(line: 2059, column: 14, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6510, file: !1175, line: 2058, column: 5)
!6515 = !DILocation(line: 2059, column: 24, scope: !6514)
!6516 = !DILocation(line: 2060, column: 5, scope: !6514)
!6517 = !DILocation(line: 2063, column: 20, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6494, file: !1175, line: 2063, column: 9)
!6519 = !DILocation(line: 2063, column: 36, scope: !6518)
!6520 = !DILocation(line: 2063, column: 46, scope: !6518)
!6521 = !DILocation(line: 2065, column: 14, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6518, file: !1175, line: 2064, column: 5)
!6523 = !DILocation(line: 2065, column: 24, scope: !6522)
!6524 = !DILocation(line: 2066, column: 5, scope: !6522)
!6525 = !DILocation(line: 2069, column: 16, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6494, file: !1175, line: 2069, column: 9)
!6527 = !DILocation(line: 2069, column: 26, scope: !6526)
!6528 = !DILocation(line: 2069, column: 9, scope: !6494)
!6529 = !DILocation(line: 2072, column: 49, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6531, file: !1175, line: 2072, column: 11)
!6531 = distinct !DILexicalBlock(scope: !6526, file: !1175, line: 2070, column: 5)
!6532 = !DILocation(line: 2074, column: 9, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6530, file: !1175, line: 2073, column: 7)
!6534 = !DILocation(line: 2075, column: 7, scope: !6533)
!6535 = !DILocation(line: 2079, column: 20, scope: !6531)
!6536 = !DILocation(line: 2080, column: 20, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6531, file: !1175, line: 2080, column: 11)
!6538 = !DILocation(line: 2080, column: 30, scope: !6537)
!6539 = !DILocation(line: 2080, column: 52, scope: !6537)
!6540 = !DILocation(line: 2080, column: 62, scope: !6537)
!6541 = !DILocation(line: 2085, column: 9, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6537, file: !1175, line: 2081, column: 7)
!6543 = !DILocation(line: 2088, column: 13, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6542, file: !1175, line: 2088, column: 13)
!6545 = !DILocation(line: 2088, column: 13, scope: !6542)
!6546 = !DILocation(line: 2090, column: 11, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6544, file: !1175, line: 2089, column: 9)
!6548 = !DILocation(line: 2093, column: 22, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6547, file: !1175, line: 2093, column: 15)
!6550 = !DILocation(line: 2093, column: 29, scope: !6549)
!6551 = !DILocation(line: 2093, column: 15, scope: !6547)
!6552 = !DILocation(line: 2097, column: 28, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6549, file: !1175, line: 2094, column: 11)
!6554 = !DILocation(line: 2097, column: 46, scope: !6553)
!6555 = !DILocation(line: 2098, column: 17, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6553, file: !1175, line: 2098, column: 17)
!6557 = !DILocation(line: 2098, column: 49, scope: !6556)
!6558 = !DILocation(line: 2098, column: 17, scope: !6553)
!6559 = !DILocation(line: 2101, column: 22, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6556, file: !1175, line: 2099, column: 13)
!6561 = !DILocation(line: 2101, column: 30, scope: !6560)
!6562 = !DILocation(line: 2101, column: 15, scope: !6560)
!6563 = !DILocation(line: 2102, column: 13, scope: !6560)
!6564 = !DILocation(line: 2112, column: 13, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6549, file: !1175, line: 2105, column: 11)
!6566 = !DILocation(line: 2124, column: 11, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6544, file: !1175, line: 2117, column: 9)
!6568 = !DILocation(line: 2137, column: 9, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6537, file: !1175, line: 2129, column: 7)
!6570 = !DILocation(line: 2140, column: 26, scope: !6569)
!6571 = !DILocation(line: 2147, column: 18, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6466, file: !1175, line: 2147, column: 7)
!6573 = !DILocation(line: 2147, column: 34, scope: !6572)
!6574 = !DILocation(line: 2147, column: 44, scope: !6572)
!6575 = !DILocation(line: 2149, column: 5, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6572, file: !1175, line: 2148, column: 3)
!6577 = !DILocation(line: 2150, column: 5, scope: !6576)
!6578 = !DILocation(line: 2154, column: 18, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6466, file: !1175, line: 2154, column: 7)
!6580 = !DILocation(line: 2154, column: 33, scope: !6579)
!6581 = !DILocation(line: 2154, column: 43, scope: !6579)
!6582 = !DILocation(line: 2156, column: 5, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6579, file: !1175, line: 2155, column: 3)
!6584 = !DILocation(line: 2157, column: 5, scope: !6583)
!6585 = !DILocation(line: 2159, column: 1, scope: !6466)
!6586 = distinct !DISubprogram(name: "UART_Receive_IT", scope: !1175, file: !1175, line: 2992, type: !5218, scopeLine: 2993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6587)
!6587 = !{!6588, !6589}
!6588 = !DILocalVariable(name: "huart", arg: 1, scope: !6586, file: !1175, line: 2992, type: !1200)
!6589 = !DILocalVariable(name: "tmp", scope: !6586, file: !1175, line: 2994, type: !1198)
!6590 = !DILocation(line: 0, scope: !6586)
!6591 = !DILocation(line: 2997, column: 14, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6586, file: !1175, line: 2997, column: 7)
!6593 = !DILocation(line: 2997, column: 22, scope: !6592)
!6594 = !DILocation(line: 2997, column: 7, scope: !6586)
!6595 = !DILocation(line: 2999, column: 21, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6597, file: !1175, line: 2999, column: 9)
!6597 = distinct !DILexicalBlock(scope: !6592, file: !1175, line: 2998, column: 3)
!6598 = !DILocation(line: 2999, column: 32, scope: !6596)
!6599 = !DILocation(line: 2999, column: 9, scope: !6597)
!6600 = !DILocation(line: 3001, column: 33, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6596, file: !1175, line: 3000, column: 5)
!6602 = !DILocation(line: 3002, column: 23, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6601, file: !1175, line: 3002, column: 11)
!6604 = !DILocation(line: 3002, column: 30, scope: !6603)
!6605 = !DILocation(line: 0, scope: !6603)
!6606 = !DILocation(line: 3002, column: 11, scope: !6601)
!6607 = !DILocation(line: 3004, column: 16, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6603, file: !1175, line: 3003, column: 7)
!6609 = !DILocation(line: 3004, column: 14, scope: !6608)
!6610 = !DILocation(line: 3005, column: 27, scope: !6608)
!6611 = !DILocation(line: 3006, column: 7, scope: !6608)
!6612 = !DILocation(line: 3009, column: 16, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6603, file: !1175, line: 3008, column: 7)
!6614 = !DILocation(line: 3009, column: 14, scope: !6613)
!6615 = !DILocation(line: 3010, column: 27, scope: !6613)
!6616 = !DILocation(line: 3015, column: 23, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6618, file: !1175, line: 3015, column: 11)
!6618 = distinct !DILexicalBlock(scope: !6596, file: !1175, line: 3014, column: 5)
!6619 = !DILocation(line: 3015, column: 30, scope: !6617)
!6620 = !DILocation(line: 0, scope: !6617)
!6621 = !DILocation(line: 3015, column: 11, scope: !6618)
!6622 = !DILocation(line: 3017, column: 17, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6617, file: !1175, line: 3016, column: 7)
!6624 = !DILocation(line: 3017, column: 27, scope: !6623)
!6625 = !DILocation(line: 3017, column: 30, scope: !6623)
!6626 = !DILocation(line: 3018, column: 7, scope: !6623)
!6627 = !DILocation(line: 3021, column: 32, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6617, file: !1175, line: 3020, column: 7)
!6629 = !DILocation(line: 3021, column: 17, scope: !6628)
!6630 = !DILocation(line: 3021, column: 27, scope: !6628)
!6631 = !DILocation(line: 3021, column: 30, scope: !6628)
!6632 = !DILocation(line: 3025, column: 18, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6597, file: !1175, line: 3025, column: 9)
!6634 = !DILocation(line: 3025, column: 9, scope: !6633)
!6635 = !DILocation(line: 3025, column: 30, scope: !6633)
!6636 = !DILocation(line: 3025, column: 9, scope: !6597)
!6637 = !DILocation(line: 3028, column: 7, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6633, file: !1175, line: 3026, column: 5)
!6639 = !DILocation(line: 3031, column: 7, scope: !6638)
!6640 = !DILocation(line: 3034, column: 7, scope: !6638)
!6641 = !DILocation(line: 3037, column: 22, scope: !6638)
!6642 = !DILocation(line: 3044, column: 7, scope: !6638)
!6643 = !DILocation(line: 3047, column: 7, scope: !6638)
!6644 = !DILocation(line: 3055, column: 1, scope: !6586)
!6645 = distinct !DISubprogram(name: "UART_DMAAbortOnError", scope: !1175, file: !1175, line: 2753, type: !5761, scopeLine: 2754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6646)
!6646 = !{!6647, !6648}
!6647 = !DILocalVariable(name: "hdma", arg: 1, scope: !6645, file: !1175, line: 2753, type: !1234)
!6648 = !DILocalVariable(name: "huart", scope: !6645, file: !1175, line: 2755, type: !1200)
!6649 = !DILocation(line: 0, scope: !6645)
!6650 = !DILocation(line: 2755, column: 82, scope: !6645)
!6651 = !DILocation(line: 2756, column: 10, scope: !6645)
!6652 = !DILocation(line: 2756, column: 22, scope: !6645)
!6653 = !DILocation(line: 2757, column: 10, scope: !6645)
!6654 = !DILocation(line: 2757, column: 22, scope: !6645)
!6655 = !DILocation(line: 2764, column: 3, scope: !6645)
!6656 = !DILocation(line: 2766, column: 1, scope: !6645)
!6657 = distinct !DISubprogram(name: "UART_Transmit_IT", scope: !1175, file: !1175, line: 2920, type: !5218, scopeLine: 2921, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6658)
!6658 = !{!6659, !6660}
!6659 = !DILocalVariable(name: "huart", arg: 1, scope: !6657, file: !1175, line: 2920, type: !1200)
!6660 = !DILocalVariable(name: "tmp", scope: !6657, file: !1175, line: 2922, type: !1198)
!6661 = !DILocation(line: 0, scope: !6657)
!6662 = !DILocation(line: 2925, column: 14, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6657, file: !1175, line: 2925, column: 7)
!6664 = !DILocation(line: 2925, column: 21, scope: !6663)
!6665 = !DILocation(line: 2925, column: 7, scope: !6657)
!6666 = !DILocation(line: 2927, column: 21, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6668, file: !1175, line: 2927, column: 9)
!6668 = distinct !DILexicalBlock(scope: !6663, file: !1175, line: 2926, column: 3)
!6669 = !DILocation(line: 2927, column: 32, scope: !6667)
!6670 = !DILocation(line: 0, scope: !6667)
!6671 = !DILocation(line: 2927, column: 9, scope: !6668)
!6672 = !DILocation(line: 2929, column: 33, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6667, file: !1175, line: 2928, column: 5)
!6674 = !DILocation(line: 2930, column: 40, scope: !6673)
!6675 = !DILocation(line: 2930, column: 45, scope: !6673)
!6676 = !DILocation(line: 2930, column: 29, scope: !6673)
!6677 = !DILocation(line: 2930, column: 14, scope: !6673)
!6678 = !DILocation(line: 2930, column: 24, scope: !6673)
!6679 = !DILocation(line: 2930, column: 27, scope: !6673)
!6680 = !DILocation(line: 2931, column: 23, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6673, file: !1175, line: 2931, column: 11)
!6682 = !DILocation(line: 2931, column: 30, scope: !6681)
!6683 = !DILocation(line: 0, scope: !6681)
!6684 = !DILocation(line: 2931, column: 11, scope: !6673)
!6685 = !DILocation(line: 2933, column: 27, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6681, file: !1175, line: 2932, column: 7)
!6687 = !DILocation(line: 2934, column: 7, scope: !6686)
!6688 = !DILocation(line: 2937, column: 27, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6681, file: !1175, line: 2936, column: 7)
!6690 = !DILocation(line: 2942, column: 57, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6667, file: !1175, line: 2941, column: 5)
!6692 = !DILocation(line: 2942, column: 39, scope: !6691)
!6693 = !DILocation(line: 2942, column: 29, scope: !6691)
!6694 = !DILocation(line: 2942, column: 14, scope: !6691)
!6695 = !DILocation(line: 2942, column: 24, scope: !6691)
!6696 = !DILocation(line: 2942, column: 27, scope: !6691)
!6697 = !DILocation(line: 2945, column: 18, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6668, file: !1175, line: 2945, column: 9)
!6699 = !DILocation(line: 2945, column: 9, scope: !6698)
!6700 = !DILocation(line: 2945, column: 30, scope: !6698)
!6701 = !DILocation(line: 2945, column: 9, scope: !6668)
!6702 = !DILocation(line: 2948, column: 7, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6698, file: !1175, line: 2946, column: 5)
!6704 = !DILocation(line: 2951, column: 7, scope: !6703)
!6705 = !DILocation(line: 2952, column: 5, scope: !6703)
!6706 = !DILocation(line: 2959, column: 1, scope: !6657)
!6707 = distinct !DISubprogram(name: "UART_EndTransmit_IT", scope: !1175, file: !1175, line: 2967, type: !5218, scopeLine: 2968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6708)
!6708 = !{!6709}
!6709 = !DILocalVariable(name: "huart", arg: 1, scope: !6707, file: !1175, line: 2967, type: !1200)
!6710 = !DILocation(line: 0, scope: !6707)
!6711 = !DILocation(line: 2970, column: 3, scope: !6707)
!6712 = !DILocation(line: 2973, column: 10, scope: !6707)
!6713 = !DILocation(line: 2973, column: 17, scope: !6707)
!6714 = !DILocation(line: 2980, column: 3, scope: !6707)
!6715 = !DILocation(line: 2983, column: 3, scope: !6707)
!6716 = distinct !DISubprogram(name: "HAL_LIN_SendBreak", scope: !1175, file: !1175, line: 2310, type: !5218, scopeLine: 2311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6717)
!6717 = !{!6718}
!6718 = !DILocalVariable(name: "huart", arg: 1, scope: !6716, file: !1175, line: 2310, type: !1200)
!6719 = !DILocation(line: 0, scope: !6716)
!6720 = !DILocation(line: 2316, column: 3, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6722, file: !1175, line: 2316, column: 3)
!6722 = distinct !DILexicalBlock(scope: !6716, file: !1175, line: 2316, column: 3)
!6723 = !DILocation(line: 2316, column: 3, scope: !6722)
!6724 = !DILocation(line: 2316, column: 3, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6721, file: !1175, line: 2316, column: 3)
!6726 = !DILocation(line: 2318, column: 10, scope: !6716)
!6727 = !DILocation(line: 2318, column: 17, scope: !6716)
!6728 = !DILocation(line: 2321, column: 3, scope: !6716)
!6729 = !DILocation(line: 2323, column: 17, scope: !6716)
!6730 = !DILocation(line: 2326, column: 3, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6716, file: !1175, line: 2326, column: 3)
!6732 = !DILocation(line: 2328, column: 3, scope: !6716)
!6733 = !DILocation(line: 2329, column: 1, scope: !6716)
!6734 = distinct !DISubprogram(name: "HAL_MultiProcessor_EnterMuteMode", scope: !1175, file: !1175, line: 2337, type: !5218, scopeLine: 2338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6735)
!6735 = !{!6736}
!6736 = !DILocalVariable(name: "huart", arg: 1, scope: !6734, file: !1175, line: 2337, type: !1200)
!6737 = !DILocation(line: 0, scope: !6734)
!6738 = !DILocation(line: 2343, column: 3, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6740, file: !1175, line: 2343, column: 3)
!6740 = distinct !DILexicalBlock(scope: !6734, file: !1175, line: 2343, column: 3)
!6741 = !DILocation(line: 2343, column: 3, scope: !6740)
!6742 = !DILocation(line: 2343, column: 3, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6739, file: !1175, line: 2343, column: 3)
!6744 = !DILocation(line: 2345, column: 10, scope: !6734)
!6745 = !DILocation(line: 2345, column: 17, scope: !6734)
!6746 = !DILocation(line: 2348, column: 3, scope: !6734)
!6747 = !DILocation(line: 2350, column: 17, scope: !6734)
!6748 = !DILocation(line: 2353, column: 3, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6734, file: !1175, line: 2353, column: 3)
!6750 = !DILocation(line: 2355, column: 3, scope: !6734)
!6751 = !DILocation(line: 2356, column: 1, scope: !6734)
!6752 = distinct !DISubprogram(name: "HAL_MultiProcessor_ExitMuteMode", scope: !1175, file: !1175, line: 2364, type: !5218, scopeLine: 2365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6753)
!6753 = !{!6754}
!6754 = !DILocalVariable(name: "huart", arg: 1, scope: !6752, file: !1175, line: 2364, type: !1200)
!6755 = !DILocation(line: 0, scope: !6752)
!6756 = !DILocation(line: 2370, column: 3, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6758, file: !1175, line: 2370, column: 3)
!6758 = distinct !DILexicalBlock(scope: !6752, file: !1175, line: 2370, column: 3)
!6759 = !DILocation(line: 2370, column: 3, scope: !6758)
!6760 = !DILocation(line: 2370, column: 3, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6757, file: !1175, line: 2370, column: 3)
!6762 = !DILocation(line: 2372, column: 10, scope: !6752)
!6763 = !DILocation(line: 2372, column: 17, scope: !6752)
!6764 = !DILocation(line: 2375, column: 3, scope: !6752)
!6765 = !DILocation(line: 2377, column: 17, scope: !6752)
!6766 = !DILocation(line: 2380, column: 3, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6752, file: !1175, line: 2380, column: 3)
!6768 = !DILocation(line: 2382, column: 3, scope: !6752)
!6769 = !DILocation(line: 2383, column: 1, scope: !6752)
!6770 = distinct !DISubprogram(name: "HAL_HalfDuplex_EnableTransmitter", scope: !1175, file: !1175, line: 2391, type: !5218, scopeLine: 2392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6771)
!6771 = !{!6772, !6773}
!6772 = !DILocalVariable(name: "huart", arg: 1, scope: !6770, file: !1175, line: 2391, type: !1200)
!6773 = !DILocalVariable(name: "tmpreg", scope: !6770, file: !1175, line: 2393, type: !24)
!6774 = !DILocation(line: 0, scope: !6770)
!6775 = !DILocation(line: 2396, column: 3, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6777, file: !1175, line: 2396, column: 3)
!6777 = distinct !DILexicalBlock(scope: !6770, file: !1175, line: 2396, column: 3)
!6778 = !DILocation(line: 2396, column: 3, scope: !6777)
!6779 = !DILocation(line: 2396, column: 3, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6776, file: !1175, line: 2396, column: 3)
!6781 = !DILocation(line: 2398, column: 10, scope: !6770)
!6782 = !DILocation(line: 2398, column: 17, scope: !6770)
!6783 = !DILocation(line: 2401, column: 19, scope: !6770)
!6784 = !DILocation(line: 2401, column: 29, scope: !6770)
!6785 = !DILocation(line: 2404, column: 10, scope: !6770)
!6786 = !DILocation(line: 2407, column: 10, scope: !6770)
!6787 = !DILocation(line: 2410, column: 3, scope: !6770)
!6788 = !DILocation(line: 2412, column: 17, scope: !6770)
!6789 = !DILocation(line: 2415, column: 3, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6770, file: !1175, line: 2415, column: 3)
!6791 = !DILocation(line: 2417, column: 3, scope: !6770)
!6792 = !DILocation(line: 2418, column: 1, scope: !6770)
!6793 = distinct !DISubprogram(name: "HAL_HalfDuplex_EnableReceiver", scope: !1175, file: !1175, line: 2426, type: !5218, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6794)
!6794 = !{!6795, !6796}
!6795 = !DILocalVariable(name: "huart", arg: 1, scope: !6793, file: !1175, line: 2426, type: !1200)
!6796 = !DILocalVariable(name: "tmpreg", scope: !6793, file: !1175, line: 2428, type: !24)
!6797 = !DILocation(line: 0, scope: !6793)
!6798 = !DILocation(line: 2431, column: 3, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6800, file: !1175, line: 2431, column: 3)
!6800 = distinct !DILexicalBlock(scope: !6793, file: !1175, line: 2431, column: 3)
!6801 = !DILocation(line: 2431, column: 3, scope: !6800)
!6802 = !DILocation(line: 2431, column: 3, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6799, file: !1175, line: 2431, column: 3)
!6804 = !DILocation(line: 2433, column: 10, scope: !6793)
!6805 = !DILocation(line: 2433, column: 17, scope: !6793)
!6806 = !DILocation(line: 2436, column: 19, scope: !6793)
!6807 = !DILocation(line: 2436, column: 29, scope: !6793)
!6808 = !DILocation(line: 2439, column: 10, scope: !6793)
!6809 = !DILocation(line: 2442, column: 10, scope: !6793)
!6810 = !DILocation(line: 2445, column: 3, scope: !6793)
!6811 = !DILocation(line: 2447, column: 17, scope: !6793)
!6812 = !DILocation(line: 2450, column: 3, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6793, file: !1175, line: 2450, column: 3)
!6814 = !DILocation(line: 2452, column: 3, scope: !6793)
!6815 = !DILocation(line: 2453, column: 1, scope: !6793)
!6816 = distinct !DISubprogram(name: "HAL_UART_GetState", scope: !1175, file: !1175, line: 2483, type: !6817, scopeLine: 2484, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6819)
!6817 = !DISubroutineType(types: !6818)
!6818 = !{!1199, !1200}
!6819 = !{!6820, !6821, !6822}
!6820 = !DILocalVariable(name: "huart", arg: 1, scope: !6816, file: !1175, line: 2483, type: !1200)
!6821 = !DILocalVariable(name: "temp1", scope: !6816, file: !1175, line: 2485, type: !24)
!6822 = !DILocalVariable(name: "temp2", scope: !6816, file: !1175, line: 2485, type: !24)
!6823 = !DILocation(line: 0, scope: !6816)
!6824 = !DILocation(line: 2486, column: 18, scope: !6816)
!6825 = !DILocation(line: 2487, column: 18, scope: !6816)
!6826 = !DILocation(line: 2489, column: 40, scope: !6816)
!6827 = !DILocation(line: 2489, column: 3, scope: !6816)
!6828 = distinct !DISubprogram(name: "HAL_UART_GetError", scope: !1175, file: !1175, line: 2498, type: !6829, scopeLine: 2499, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !6831)
!6829 = !DISubroutineType(types: !6830)
!6830 = !{!24, !1200}
!6831 = !{!6832}
!6832 = !DILocalVariable(name: "huart", arg: 1, scope: !6828, file: !1175, line: 2498, type: !1200)
!6833 = !DILocation(line: 0, scope: !6828)
!6834 = !DILocation(line: 2500, column: 17, scope: !6828)
!6835 = !DILocation(line: 2500, column: 3, scope: !6828)
