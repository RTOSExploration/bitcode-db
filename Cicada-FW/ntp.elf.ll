; ModuleID = './examples/ntp.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%"class.Cicada::Stm32Uart" = type { %"class.Cicada::BufferedSerial", i8, %struct.__UART_HandleTypeDef, %struct.USART_TypeDef*, i16, i16, i32 }
%"class.Cicada::BufferedSerial" = type { %"class.Cicada::IBufferedSerial", %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer" }
%"class.Cicada::IBufferedSerial" = type { %"class.Cicada::ICommDevice", %"class.Cicada::ICommDevice" }
%"class.Cicada::ICommDevice" = type { i32 (...)** }
%"class.Cicada::LineCircularBuffer" = type { %"class.Cicada::CircularBuffer.base", i16, [2 x i8] }
%"class.Cicada::CircularBuffer.base" = type <{ i32 (...)**, [4 x i8], i64, i64, i64, i64, i8* }>
%struct.__UART_HandleTypeDef = type { %struct.USART_TypeDef*, %struct.USART_TypeDef, i8*, i16, i16, i8*, i16, i16, %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef*, i32, i32, i32, i32 }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.__DMA_HandleTypeDef = type { %struct.DMA_Channel_TypeDef*, %struct.USART_TypeDef, i32, i32, i8*, void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)*, i32, %struct.DMA_TypeDef*, i32 }
%struct.DMA_Channel_TypeDef = type { i32, i32, i32, i32 }
%struct.DMA_TypeDef = type { i32, i32 }
%"class.Cicada::Sim7x00CommDevice" = type <{ %"class.Cicada::SimCommDevice", i8*, [4 x i8] }>
%"class.Cicada::SimCommDevice" = type { %"class.Cicada::ATCommDevice", i8*, [16 x i8], [24 x i8], i8, i16 }
%"class.Cicada::ATCommDevice" = type { %"class.Cicada::IPCommDevice.base", %"class.Cicada::IBufferedSerial"*, [61 x i8], i8, i8, i8, i64, i64, i64 }
%"class.Cicada::IPCommDevice.base" = type { %"class.Cicada::IIPCommDevice", %"class.Cicada::Task", %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0", i32, i8*, i16, i8, i32, i8* }
%"class.Cicada::IIPCommDevice" = type { %"class.Cicada::IStatefulDevice" }
%"class.Cicada::IStatefulDevice" = type { %"class.Cicada::ICommDevice" }
%"class.Cicada::Task" = type { i32 (...)**, i16, i32, i8, i32 }
%"class.Cicada::CircularBuffer.0" = type <{ i32 (...)**, [4 x i8], i64, i64, i64, i64, i8*, [4 x i8] }>
%"class.Cicada::Scheduler" = type { i32 ()*, %"class.Cicada::Task"**, %"class.Cicada::Task"** }
%class.NTPTask = type { %"class.Cicada::Task", %"class.Cicada::SimCommDevice"*, [12 x i32] }
%"class.Cicada::IPCommDevice" = type { %"class.Cicada::IIPCommDevice", %"class.Cicada::Task", %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0", i32, i8*, i16, i8, i32, i8*, [4 x i8] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.__va_list = type { i8* }
%struct.out_fct_wrap_type = type { void (i8, i8*)*, i8* }

$_ZN7NTPTaskC2ERN6Cicada13SimCommDeviceE = comdat any

$_ZN6Cicada4TaskD2Ev = comdat any

$_ZN6Cicada12IPCommDeviceD2Ev = comdat any

$_ZN6Cicada14CircularBufferIhED2Ev = comdat any

$_ZN6Cicada11ICommDeviceD2Ev = comdat any

$_ZN6Cicada4TaskC2Et = comdat any

$_ZN7NTPTaskD0Ev = comdat any

$_ZN7NTPTask3runEv = comdat any

$_ZN6Cicada4Task8setDelayEt = comdat any

$_ZN6Cicada4TaskD0Ev = comdat any

$_ZN6Cicada12ATCommDeviceD0Ev = comdat any

$_ZThn4_N6Cicada12ATCommDeviceD1Ev = comdat any

$_ZThn4_N6Cicada12ATCommDeviceD0Ev = comdat any

$_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv = comdat any

$_ZN6Cicada14CircularBufferIhE4pullEv = comdat any

$_ZN6Cicada14CircularBufferIhE20incrementOrResetHeadERy = comdat any

$_ZN6Cicada14CircularBufferIhE4pushEh = comdat any

$_ZN6Cicada12IPCommDeviceD0Ev = comdat any

$_ZThn4_N6Cicada12IPCommDeviceD1Ev = comdat any

$_ZThn4_N6Cicada12IPCommDeviceD0Ev = comdat any

$_ZN6Cicada14CircularBufferIhE4pushEPKhy = comdat any

$_ZN6Cicada14CircularBufferIhE4pullEPhy = comdat any

$_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv = comdat any

$_ZN6Cicada13IIPCommDeviceC2Ev = comdat any

$_ZN6Cicada14CircularBufferIhEC2EPhy = comdat any

$_ZN6Cicada14CircularBufferIhED0Ev = comdat any

$_ZN6Cicada14CircularBufferIhE4readEv = comdat any

$_ZN6Cicada14CircularBufferIhE5flushEv = comdat any

$_ZNK6Cicada14CircularBufferIhE7isEmptyEv = comdat any

$_ZNK6Cicada14CircularBufferIhE6isFullEv = comdat any

$_ZNK6Cicada14CircularBufferIhE4sizeEv = comdat any

$_ZN6Cicada15IStatefulDeviceC2Ev = comdat any

$_ZN6Cicada13IIPCommDeviceD0Ev = comdat any

$_ZN6Cicada11ICommDeviceC2Ev = comdat any

$_ZN6Cicada15IStatefulDeviceD0Ev = comdat any

$_ZN6Cicada11ICommDeviceD0Ev = comdat any

$_ZN6Cicada13SimCommDeviceD0Ev = comdat any

$_ZThn4_N6Cicada13SimCommDeviceD1Ev = comdat any

$_ZThn4_N6Cicada13SimCommDeviceD0Ev = comdat any

$_ZN6Cicada17Sim7x00CommDeviceD0Ev = comdat any

$_ZThn4_N6Cicada17Sim7x00CommDeviceD1Ev = comdat any

$_ZThn4_N6Cicada17Sim7x00CommDeviceD0Ev = comdat any

$_ZNK6Cicada4Task5delayEv = comdat any

$_ZN6Cicada4Task7lastRunEv = comdat any

$_ZN6Cicada4Task10setLastRunEj = comdat any

$_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv = comdat any

$_ZN6Cicada14BufferedSerialD2Ev = comdat any

$_ZN6Cicada14CircularBufferIcED2Ev = comdat any

$_ZN6Cicada15IBufferedSerialD2Ev = comdat any

$_ZN6Cicada7ISerialD2Ev = comdat any

$_ZN6Cicada14BufferedSerialD0Ev = comdat any

$_ZThn4_N6Cicada14BufferedSerialD1Ev = comdat any

$_ZThn4_N6Cicada14BufferedSerialD0Ev = comdat any

$_ZNK6Cicada14CircularBufferIcE4sizeEv = comdat any

$_ZN6Cicada18LineCircularBuffer5flushEv = comdat any

$_ZN6Cicada14CircularBufferIcE5flushEv = comdat any

$_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv = comdat any

$_ZN6Cicada18LineCircularBuffer4pushEc = comdat any

$_ZN6Cicada14CircularBufferIcE4pushEc = comdat any

$_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy = comdat any

$_ZN6Cicada18LineCircularBuffer4pullEv = comdat any

$_ZN6Cicada14CircularBufferIcE4pullEv = comdat any

$_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv = comdat any

$_ZN6Cicada15IBufferedSerialC2Ev = comdat any

$_ZN6Cicada18LineCircularBufferC2EPcy = comdat any

$_ZN6Cicada14CircularBufferIcEC2EPcy = comdat any

$_ZN6Cicada18LineCircularBufferD0Ev = comdat any

$_ZN6Cicada18LineCircularBuffer4pushEPKcy = comdat any

$_ZN6Cicada18LineCircularBuffer4pullEPcy = comdat any

$_ZN6Cicada14CircularBufferIcE4readEv = comdat any

$_ZNK6Cicada14CircularBufferIcE7isEmptyEv = comdat any

$_ZNK6Cicada14CircularBufferIcE6isFullEv = comdat any

$_ZN6Cicada14CircularBufferIcED0Ev = comdat any

$_ZN6Cicada14CircularBufferIcE4pushEPKcy = comdat any

$_ZN6Cicada14CircularBufferIcE4pullEPcy = comdat any

$_ZN6Cicada7ISerialC2Ev = comdat any

$_ZN6Cicada15IBufferedSerialD0Ev = comdat any

$_ZThn4_N6Cicada15IBufferedSerialD1Ev = comdat any

$_ZThn4_N6Cicada15IBufferedSerialD0Ev = comdat any

$_ZN6Cicada7ISerialD0Ev = comdat any

$_ZTV7NTPTask = comdat any

$_ZTS7NTPTask = comdat any

$_ZTI7NTPTask = comdat any

$_ZZN7NTPTask3runEvE10entrypoint = comdat any

$_ZTSN6Cicada13IIPCommDeviceE = comdat any

$_ZTSN6Cicada15IStatefulDeviceE = comdat any

$_ZTIN6Cicada15IStatefulDeviceE = comdat any

$_ZTIN6Cicada13IIPCommDeviceE = comdat any

$_ZTSN6Cicada4TaskE = comdat any

$_ZTIN6Cicada4TaskE = comdat any

$_ZTVN6Cicada13IIPCommDeviceE = comdat any

$_ZTVN6Cicada15IStatefulDeviceE = comdat any

$_ZTVN6Cicada4TaskE = comdat any

$_ZTVN6Cicada14CircularBufferIhEE = comdat any

$_ZTSN6Cicada14CircularBufferIhEE = comdat any

$_ZTIN6Cicada14CircularBufferIhEE = comdat any

$_ZTSN6Cicada15IBufferedSerialE = comdat any

$_ZTSN6Cicada11ICommDeviceE = comdat any

$_ZTIN6Cicada11ICommDeviceE = comdat any

$_ZTSN6Cicada7ISerialE = comdat any

$_ZTIN6Cicada7ISerialE = comdat any

$_ZTIN6Cicada15IBufferedSerialE = comdat any

$_ZTVN6Cicada15IBufferedSerialE = comdat any

$_ZTVN6Cicada11ICommDeviceE = comdat any

$_ZTVN6Cicada7ISerialE = comdat any

$_ZTVN6Cicada18LineCircularBufferE = comdat any

$_ZTSN6Cicada18LineCircularBufferE = comdat any

$_ZTSN6Cicada14CircularBufferIcEE = comdat any

$_ZTIN6Cicada14CircularBufferIcEE = comdat any

$_ZTIN6Cicada18LineCircularBufferE = comdat any

$_ZTVN6Cicada14CircularBufferIcEE = comdat any

@_ZZ17USART1_IRQHandlerE8instance = internal unnamed_addr global %"class.Cicada::Stm32Uart"* null, align 4, !dbg !0
@_ZGVZ17USART1_IRQHandlerE8instance = internal global i32 0, align 4
@_ZZ17USART2_IRQHandlerE8instance = internal unnamed_addr global %"class.Cicada::Stm32Uart"* null, align 4, !dbg !170
@_ZGVZ17USART2_IRQHandlerE8instance = internal global i32 0, align 4
@_ZZ8_putcharE6serial = internal unnamed_addr global %"class.Cicada::Stm32Uart"* null, align 4, !dbg !177
@_ZTV7NTPTask = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI7NTPTask to i8*), i8* bitcast (%"class.Cicada::Task"* (%"class.Cicada::Task"*)* @_ZN6Cicada4TaskD2Ev to i8*), i8* bitcast (void (%class.NTPTask*)* @_ZN7NTPTaskD0Ev to i8*), i8* bitcast (void (%class.NTPTask*)* @_ZN7NTPTask3runEv to i8*)] }, comdat, align 4
@_ZTS7NTPTask = linkonce_odr dso_local constant [9 x i8] c"7NTPTask\00", comdat, align 1
@_ZTI7NTPTask = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZTS7NTPTask, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada4TaskE to i8*) }, comdat, align 4
@_ZZN7NTPTask3runEvE10entrypoint = linkonce_odr dso_local local_unnamed_addr global i8 0, comdat, align 1, !dbg !184
@.str = private unnamed_addr constant [9 x i8] c"internet\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"pool.ntp.org\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"*** Connected! ***\0D\0A\00", align 1
@.str.3 = private unnamed_addr constant [31 x i8] c"Seconds since the Epoche: %u\0D\0A\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"*** Disconnected ***\0D\0A\00", align 1
@_ftoa.pow10 = internal unnamed_addr constant [10 x double] [double 1.000000e+00, double 1.000000e+01, double 1.000000e+02, double 1.000000e+03, double 1.000000e+04, double 1.000000e+05, double 1.000000e+06, double 1.000000e+07, double 1.000000e+08, double 1.000000e+09], align 8, !dbg !487
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !545
@__const.HAL_RCC_GetSysClockFreq.aPLLMULFactorTable = private unnamed_addr constant [16 x i8] c"\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\10", align 1
@__const.HAL_RCC_GetSysClockFreq.aPredivFactorTable = private unnamed_addr constant [2 x i8] c"\01\02", align 1
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !612
@uwTickPrio = dso_local local_unnamed_addr global i32 16, align 4, !dbg !620
@uwTickFreq = dso_local local_unnamed_addr global i32 1, align 4, !dbg !736
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !610
@uwTick = dso_local global i32 0, align 4, !dbg !739
@.str.27 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str.1.28 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.2.29 = private unnamed_addr constant [4 x i8] c"\22\0D\0A\00", align 1
@_ZTVN6Cicada12ATCommDeviceE = dso_local unnamed_addr constant { [17 x i8*], [5 x i8*] } { [17 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada12ATCommDeviceE to i8*), i8* bitcast (%"class.Cicada::IPCommDevice"* (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::ATCommDevice"*)* @_ZN6Cicada12ATCommDeviceD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14spaceAvailableEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice20writeBufferProcessedEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice5writeEPKhy to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice7connectEv to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice10disconnectEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice11isConnectedEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice6isIdleEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)* @_ZN6Cicada12IPCommDevice11setHostPortEPKctNS_13IIPCommDevice14ConnectionTypeE to i8*), i8* bitcast (i64 (%"class.Cicada::ATCommDevice"*, i8*)* @_ZN6Cicada12ATCommDevice11serialWriteEPc to i8*), i8* bitcast (i64 (%"class.Cicada::ATCommDevice"*, i8*, i64)* @_ZN6Cicada12ATCommDevice10serialReadEPcy to i8*)], [5 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada12ATCommDeviceE to i8*), i8* bitcast (%"class.Cicada::ATCommDevice"* (%"class.Cicada::ATCommDevice"*)* @_ZThn4_N6Cicada12ATCommDeviceD1Ev to i8*), i8* bitcast (void (%"class.Cicada::ATCommDevice"*)* @_ZThn4_N6Cicada12ATCommDeviceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 4
@.str.3.30 = private unnamed_addr constant [12 x i8] c"AT+CIPSEND=\00", align 1
@.str.4.31 = private unnamed_addr constant [3 x i8] c"0,\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c">\00", align 1
@_ZTSN6Cicada12ATCommDeviceE = dso_local constant [24 x i8] c"N6Cicada12ATCommDeviceE\00", align 1
@_ZTVN6Cicada12IPCommDeviceE = dso_local unnamed_addr constant { [15 x i8*], [5 x i8*] } { [15 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada12IPCommDeviceE to i8*), i8* bitcast (%"class.Cicada::IPCommDevice"* (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDeviceD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14spaceAvailableEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice20writeBufferProcessedEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice5writeEPKhy to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice7connectEv to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice10disconnectEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice11isConnectedEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice6isIdleEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)* @_ZN6Cicada12IPCommDevice11setHostPortEPKctNS_13IIPCommDevice14ConnectionTypeE to i8*)], [5 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada12IPCommDeviceE to i8*), i8* bitcast (%"class.Cicada::IPCommDevice"* (%"class.Cicada::IPCommDevice"*)* @_ZThn4_N6Cicada12IPCommDeviceD1Ev to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*)* @_ZThn4_N6Cicada12IPCommDeviceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 4
@_ZTSN6Cicada12IPCommDeviceE = dso_local constant [24 x i8] c"N6Cicada12IPCommDeviceE\00", align 1
@_ZTSN6Cicada13IIPCommDeviceE = linkonce_odr dso_local constant [25 x i8] c"N6Cicada13IIPCommDeviceE\00", comdat, align 1
@_ZTSN6Cicada15IStatefulDeviceE = linkonce_odr dso_local constant [27 x i8] c"N6Cicada15IStatefulDeviceE\00", comdat, align 1
@_ZTIN6Cicada15IStatefulDeviceE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @_ZTSN6Cicada15IStatefulDeviceE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada11ICommDeviceE to i8*) }, comdat, align 4
@_ZTIN6Cicada13IIPCommDeviceE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZTSN6Cicada13IIPCommDeviceE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada15IStatefulDeviceE to i8*) }, comdat, align 4
@_ZTSN6Cicada4TaskE = linkonce_odr dso_local constant [15 x i8] c"N6Cicada4TaskE\00", comdat, align 1
@_ZTIN6Cicada4TaskE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZTSN6Cicada4TaskE, i32 0, i32 0) }, comdat, align 4
@_ZTIN6Cicada12IPCommDeviceE = dso_local constant { i8*, i8*, i32, i32, i8*, i32, i8*, i32 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZTSN6Cicada12IPCommDeviceE, i32 0, i32 0), i32 0, i32 2, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada13IIPCommDeviceE to i8*), i32 2, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada4TaskE to i8*), i32 1026 }, align 4
@_ZTVN6Cicada13IIPCommDeviceE = linkonce_odr dso_local unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada13IIPCommDeviceE to i8*), i8* bitcast (%"class.Cicada::ICommDevice"* (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada11ICommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::IIPCommDevice"*)* @_ZN6Cicada13IIPCommDeviceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada15IStatefulDeviceE = linkonce_odr dso_local unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada15IStatefulDeviceE to i8*), i8* bitcast (%"class.Cicada::ICommDevice"* (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada11ICommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::IStatefulDevice"*)* @_ZN6Cicada15IStatefulDeviceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada4TaskE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada4TaskE to i8*), i8* bitcast (%"class.Cicada::Task"* (%"class.Cicada::Task"*)* @_ZN6Cicada4TaskD2Ev to i8*), i8* bitcast (void (%"class.Cicada::Task"*)* @_ZN6Cicada4TaskD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada14CircularBufferIhEE = linkonce_odr dso_local unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada14CircularBufferIhEE to i8*), i8* bitcast (%"class.Cicada::CircularBuffer.0"* (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIhED2Ev to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIhED0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*, i8*, i64)* @_ZN6Cicada14CircularBufferIhE4pushEPKhy to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer.0"*, i8)* @_ZN6Cicada14CircularBufferIhE4pushEh to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*, i8*, i64)* @_ZN6Cicada14CircularBufferIhE4pullEPhy to i8*), i8* bitcast (i8 (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIhE4pullEv to i8*), i8* bitcast (i8 (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIhE4readEv to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIhE5flushEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIhE7isEmptyEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIhE6isFullEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIhE4sizeEv to i8*)] }, comdat, align 4
@_ZTSN6Cicada14CircularBufferIhEE = linkonce_odr dso_local constant [29 x i8] c"N6Cicada14CircularBufferIhEE\00", comdat, align 1
@_ZTIN6Cicada14CircularBufferIhEE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN6Cicada14CircularBufferIhEE, i32 0, i32 0) }, comdat, align 4
@_ZTVN6Cicada13SimCommDeviceE = dso_local unnamed_addr constant { [20 x i8*], [5 x i8*] } { [20 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada13SimCommDeviceE to i8*), i8* bitcast (%"class.Cicada::IPCommDevice"* (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDeviceD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14spaceAvailableEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice20writeBufferProcessedEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice5writeEPKhy to i8*), i8* bitcast (i1 (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice7connectEv to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice10disconnectEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice11isConnectedEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice6isIdleEv to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice11resetStatesEv to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)* @_ZN6Cicada12IPCommDevice11setHostPortEPKctNS_13IIPCommDevice14ConnectionTypeE to i8*), i8* bitcast (i64 (%"class.Cicada::ATCommDevice"*, i8*)* @_ZN6Cicada12ATCommDevice11serialWriteEPc to i8*), i8* bitcast (i64 (%"class.Cicada::ATCommDevice"*, i8*, i64)* @_ZN6Cicada12ATCommDevice10serialReadEPcy to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*, i8*)* @_ZN6Cicada13SimCommDevice6setApnEPKc to i8*), i8* bitcast (i1 (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice10serialLockEv to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice12serialUnlockEv to i8*)], [5 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada13SimCommDeviceE to i8*), i8* bitcast (%"class.Cicada::SimCommDevice"* (%"class.Cicada::SimCommDevice"*)* @_ZThn4_N6Cicada13SimCommDeviceD1Ev to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*)* @_ZThn4_N6Cicada13SimCommDeviceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 4
@.str.58 = private unnamed_addr constant [12 x i8] c"+CDNSGIP: 1\00", align 1
@.str.1.59 = private unnamed_addr constant [12 x i8] c"+CDNSGIP: 0\00", align 1
@.str.2.60 = private unnamed_addr constant [16 x i8] c"+CIPRXGET: 4,0,\00", align 1
@.str.3.61 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.4.62 = private unnamed_addr constant [16 x i8] c"+CIPRXGET: 2,0,\00", align 1
@.str.5.63 = private unnamed_addr constant [7 x i8] c"+CSQ: \00", align 1
@.str.6.64 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"AT\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"+ICCID: \00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"AT+CDNSGIP=\22\00", align 1
@__const._ZN6Cicada13SimCommDevice13sendCiprxget2Ev.str = private unnamed_addr constant [17 x i8] c"AT+CIPRXGET=2,0,\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"+CIPRXGET: 1,0\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"AT+CGMI\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"AT+CGMM\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"AT+CGSN\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"AT+CIMI\00", align 1
@_ZTSN6Cicada13SimCommDeviceE = dso_local constant [25 x i8] c"N6Cicada13SimCommDeviceE\00", align 1
@_ZTIN6Cicada12ATCommDeviceE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZTSN6Cicada12ATCommDeviceE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada12IPCommDeviceE to i8*) }, align 4
@_ZTVN6Cicada17Sim7x00CommDeviceE = dso_local unnamed_addr constant { [21 x i8*], [5 x i8*] } { [21 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada17Sim7x00CommDeviceE to i8*), i8* bitcast (%"class.Cicada::IPCommDevice"* (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::Sim7x00CommDevice"*)* @_ZN6Cicada17Sim7x00CommDeviceD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14spaceAvailableEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice20writeBufferProcessedEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice5writeEPKhy to i8*), i8* bitcast (i1 (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice7connectEv to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice10disconnectEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice11isConnectedEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice6isIdleEv to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice11resetStatesEv to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)* @_ZN6Cicada12IPCommDevice11setHostPortEPKctNS_13IIPCommDevice14ConnectionTypeE to i8*), i8* bitcast (i64 (%"class.Cicada::ATCommDevice"*, i8*)* @_ZN6Cicada12ATCommDevice11serialWriteEPc to i8*), i8* bitcast (i64 (%"class.Cicada::ATCommDevice"*, i8*, i64)* @_ZN6Cicada12ATCommDevice10serialReadEPcy to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*, i8*)* @_ZN6Cicada13SimCommDevice6setApnEPKc to i8*), i8* bitcast (i1 (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice10serialLockEv to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice12serialUnlockEv to i8*), i8* bitcast (void (%"class.Cicada::Sim7x00CommDevice"*)* @_ZN6Cicada17Sim7x00CommDevice3runEv to i8*)], [5 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada17Sim7x00CommDeviceE to i8*), i8* bitcast (%"class.Cicada::Sim7x00CommDevice"* (%"class.Cicada::Sim7x00CommDevice"*)* @_ZThn4_N6Cicada17Sim7x00CommDeviceD1Ev to i8*), i8* bitcast (void (%"class.Cicada::Sim7x00CommDevice"*)* @_ZThn4_N6Cicada17Sim7x00CommDeviceD0Ev to i8*), i8* bitcast (void (%"class.Cicada::Sim7x00CommDevice"*)* @_ZThn4_N6Cicada17Sim7x00CommDevice3runEv to i8*)] }, align 4
@.str.78 = private unnamed_addr constant [10 x i8] c"AT+CICCID\00", align 1
@__const._ZN6Cicada17Sim7x00CommDevice3runEv.str = private unnamed_addr constant [10 x i8] c"AT+CRESET\00", align 1
@_ZN6Cicada12ATCommDevice11_lineEndStrE = dso_local local_unnamed_addr global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.28, i32 0, i32 0), align 4, !dbg !741
@.str.1.65 = private unnamed_addr constant [4 x i8] c"RDY\00", align 1
@.str.2.66 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@.str.3.67 = private unnamed_addr constant [12 x i8] c"+NETOPEN: 1\00", align 1
@.str.4.68 = private unnamed_addr constant [13 x i8] c"+CIPOPEN: 0,\00", align 1
@.str.5.69 = private unnamed_addr constant [13 x i8] c"+IPCLOSE: 0,\00", align 1
@_ZN6Cicada12ATCommDevice6_okStrE = dso_local local_unnamed_addr global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i32 0, i32 0), align 4, !dbg !866
@.str.6.70 = private unnamed_addr constant [7 x i8] c"AT+CSQ\00", align 1
@.str.7.71 = private unnamed_addr constant [5 x i8] c"ATE0\00", align 1
@__const._ZN6Cicada17Sim7x00CommDevice3runEv.str.8 = private unnamed_addr constant [23 x i8] c"AT+CGSOCKCONT=1,\22IP\22,\22\00", align 1
@_ZN6Cicada12ATCommDevice12_quoteEndStrE = dso_local local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.29, i32 0, i32 0), align 4, !dbg !868
@.str.9.72 = private unnamed_addr constant [16 x i8] c"AT+CSOCKSETPN=1\00", align 1
@.str.10.73 = private unnamed_addr constant [13 x i8] c"AT+CIPMODE=0\00", align 1
@.str.11.74 = private unnamed_addr constant [12 x i8] c"+NETOPEN: 0\00", align 1
@.str.12.75 = private unnamed_addr constant [11 x i8] c"AT+NETOPEN\00", align 1
@.str.13.76 = private unnamed_addr constant [14 x i8] c"AT+CIPRXGET=1\00", align 1
@.str.14.77 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"AT+CIPOPEN\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"=0,\22UDP\22,,,\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"=0,\22TCP\22,\22\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"\22,\00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c"+CIPOPEN: 0,0\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c",\22\00", align 1
@.str.21 = private unnamed_addr constant [16 x i8] c"AT+CIPRXGET=4,0\00", align 1
@.str.22 = private unnamed_addr constant [13 x i8] c"+NETCLOSE: 0\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"AT+NETCLOSE\00", align 1
@_ZTSN6Cicada17Sim7x00CommDeviceE = dso_local constant [29 x i8] c"N6Cicada17Sim7x00CommDeviceE\00", align 1
@_ZTIN6Cicada13SimCommDeviceE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZTSN6Cicada13SimCommDeviceE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada12ATCommDeviceE to i8*) }, align 4
@_ZTIN6Cicada17Sim7x00CommDeviceE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN6Cicada17Sim7x00CommDeviceE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada13SimCommDeviceE to i8*) }, align 4
@_ZN6Cicada9Stm32Uart8instanceE = dso_local local_unnamed_addr global [4 x %"class.Cicada::Stm32Uart"*] zeroinitializer, align 4, !dbg !1226
@_ZTVN6Cicada9Stm32UartE = dso_local unnamed_addr constant { [26 x i8*], [12 x i8*] } { [26 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada9Stm32UartE to i8*), i8* bitcast (%"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32UartD2Ev to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32UartD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial14spaceAvailableEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZNK6Cicada9Stm32Uart20writeBufferProcessedEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial5writeEPKhy to i8*), i8* bitcast (i8 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial4readEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*)* @_ZN6Cicada14BufferedSerial5writeEPKh to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*, i8)* @_ZN6Cicada14BufferedSerial5writeEh to i8*), i8* bitcast (i1 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial11canReadLineEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial8readLineEPhy to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial14readBufferSizeEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial15writeBufferSizeEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32Uart4openEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8)* @_ZN6Cicada9Stm32Uart4openEh to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32Uart6isOpenEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i32, i8)* @_ZN6Cicada9Stm32Uart15setSerialConfigEjh to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32Uart5closeEv to i8*), i8* bitcast (i8* (%"class.Cicada::Stm32Uart"*)* @_ZNK6Cicada9Stm32Uart8portNameEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8*)* @_ZN6Cicada9Stm32Uart7rawReadERh to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8)* @_ZN6Cicada9Stm32Uart8rawWriteEh to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32Uart13startTransmitEv to i8*)], [12 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada9Stm32UartE to i8*), i8* bitcast (%"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32UartD1Ev to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32UartD0Ev to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32Uart4openEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32Uart6isOpenEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i32, i8)* @_ZThn4_N6Cicada9Stm32Uart15setSerialConfigEjh to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32Uart5closeEv to i8*), i8* bitcast (i8* (%"class.Cicada::Stm32Uart"*)* @_ZThn4_NK6Cicada9Stm32Uart8portNameEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8*)* @_ZThn4_N6Cicada9Stm32Uart7rawReadERh to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8)* @_ZThn4_N6Cicada9Stm32Uart8rawWriteEh to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32Uart13startTransmitEv to i8*)] }, align 4
@_ZTSN6Cicada9Stm32UartE = dso_local constant [20 x i8] c"N6Cicada9Stm32UartE\00", align 1
@_ZTIN6Cicada9Stm32UartE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTSN6Cicada9Stm32UartE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada14BufferedSerialE to i8*) }, align 4
@_ZTVN6Cicada14BufferedSerialE = dso_local unnamed_addr constant { [17 x i8*], [12 x i8*] } { [17 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada14BufferedSerialE to i8*), i8* bitcast (%"class.Cicada::BufferedSerial"* (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerialD2Ev to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerialD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial14spaceAvailableEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial5writeEPKhy to i8*), i8* bitcast (i8 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial4readEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*)* @_ZN6Cicada14BufferedSerial5writeEPKh to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*, i8)* @_ZN6Cicada14BufferedSerial5writeEh to i8*), i8* bitcast (i1 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial11canReadLineEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial8readLineEPhy to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial14readBufferSizeEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial15writeBufferSizeEv to i8*)], [12 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada14BufferedSerialE to i8*), i8* bitcast (%"class.Cicada::BufferedSerial"* (%"class.Cicada::BufferedSerial"*)* @_ZThn4_N6Cicada14BufferedSerialD1Ev to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*)* @_ZThn4_N6Cicada14BufferedSerialD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 4
@_ZTVN10__cxxabiv120__si_class_type_infoE = external dso_local global i8*
@_ZTSN6Cicada14BufferedSerialE = dso_local constant [26 x i8] c"N6Cicada14BufferedSerialE\00", align 1
@_ZTVN10__cxxabiv121__vmi_class_type_infoE = external dso_local global i8*
@_ZTSN6Cicada15IBufferedSerialE = linkonce_odr dso_local constant [27 x i8] c"N6Cicada15IBufferedSerialE\00", comdat, align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external dso_local global i8*
@_ZTSN6Cicada11ICommDeviceE = linkonce_odr dso_local constant [23 x i8] c"N6Cicada11ICommDeviceE\00", comdat, align 1
@_ZTIN6Cicada11ICommDeviceE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @_ZTSN6Cicada11ICommDeviceE, i32 0, i32 0) }, comdat, align 4
@_ZTSN6Cicada7ISerialE = linkonce_odr dso_local constant [18 x i8] c"N6Cicada7ISerialE\00", comdat, align 1
@_ZTIN6Cicada7ISerialE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZTSN6Cicada7ISerialE, i32 0, i32 0) }, comdat, align 4
@_ZTIN6Cicada15IBufferedSerialE = linkonce_odr dso_local constant { i8*, i8*, i32, i32, i8*, i32, i8*, i32 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @_ZTSN6Cicada15IBufferedSerialE, i32 0, i32 0), i32 0, i32 2, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada11ICommDeviceE to i8*), i32 2, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada7ISerialE to i8*), i32 1026 }, comdat, align 4
@_ZTIN6Cicada14BufferedSerialE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @_ZTSN6Cicada14BufferedSerialE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada15IBufferedSerialE to i8*) }, align 4
@_ZTVN6Cicada15IBufferedSerialE = linkonce_odr dso_local unnamed_addr constant { [17 x i8*], [12 x i8*] } { [17 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada15IBufferedSerialE to i8*), i8* bitcast (%"class.Cicada::IBufferedSerial"* (%"class.Cicada::IBufferedSerial"*)* @_ZN6Cicada15IBufferedSerialD2Ev to i8*), i8* bitcast (void (%"class.Cicada::IBufferedSerial"*)* @_ZN6Cicada15IBufferedSerialD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], [12 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada15IBufferedSerialE to i8*), i8* bitcast (%"class.Cicada::IBufferedSerial"* (%"class.Cicada::IBufferedSerial"*)* @_ZThn4_N6Cicada15IBufferedSerialD1Ev to i8*), i8* bitcast (void (%"class.Cicada::IBufferedSerial"*)* @_ZThn4_N6Cicada15IBufferedSerialD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada11ICommDeviceE = linkonce_odr dso_local unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada11ICommDeviceE to i8*), i8* bitcast (%"class.Cicada::ICommDevice"* (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada11ICommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada11ICommDeviceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada7ISerialE = linkonce_odr dso_local unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada7ISerialE to i8*), i8* bitcast (%"class.Cicada::ICommDevice"* (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada7ISerialD2Ev to i8*), i8* bitcast (void (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada7ISerialD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada18LineCircularBufferE = linkonce_odr dso_local unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada18LineCircularBufferE to i8*), i8* bitcast (%"class.Cicada::CircularBuffer.0"* (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIcED2Ev to i8*), i8* bitcast (void (%"class.Cicada::LineCircularBuffer"*)* @_ZN6Cicada18LineCircularBufferD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::LineCircularBuffer"*, i8*, i64)* @_ZN6Cicada18LineCircularBuffer4pushEPKcy to i8*), i8* bitcast (void (%"class.Cicada::LineCircularBuffer"*, i8)* @_ZN6Cicada18LineCircularBuffer4pushEc to i8*), i8* bitcast (i64 (%"class.Cicada::LineCircularBuffer"*, i8*, i64)* @_ZN6Cicada18LineCircularBuffer4pullEPcy to i8*), i8* bitcast (i8 (%"class.Cicada::LineCircularBuffer"*)* @_ZN6Cicada18LineCircularBuffer4pullEv to i8*), i8* bitcast (i8 (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIcE4readEv to i8*), i8* bitcast (void (%"class.Cicada::LineCircularBuffer"*)* @_ZN6Cicada18LineCircularBuffer5flushEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE7isEmptyEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE6isFullEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE4sizeEv to i8*)] }, comdat, align 4
@_ZTSN6Cicada18LineCircularBufferE = linkonce_odr dso_local constant [30 x i8] c"N6Cicada18LineCircularBufferE\00", comdat, align 1
@_ZTSN6Cicada14CircularBufferIcEE = linkonce_odr dso_local constant [29 x i8] c"N6Cicada14CircularBufferIcEE\00", comdat, align 1
@_ZTIN6Cicada14CircularBufferIcEE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN6Cicada14CircularBufferIcEE, i32 0, i32 0) }, comdat, align 4
@_ZTIN6Cicada18LineCircularBufferE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @_ZTSN6Cicada18LineCircularBufferE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada14CircularBufferIcEE to i8*) }, comdat, align 4
@_ZTVN6Cicada14CircularBufferIcEE = linkonce_odr dso_local unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada14CircularBufferIcEE to i8*), i8* bitcast (%"class.Cicada::CircularBuffer.0"* (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIcED2Ev to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIcED0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*, i8*, i64)* @_ZN6Cicada14CircularBufferIcE4pushEPKcy to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer.0"*, i8)* @_ZN6Cicada14CircularBufferIcE4pushEc to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*, i8*, i64)* @_ZN6Cicada14CircularBufferIcE4pullEPcy to i8*), i8* bitcast (i8 (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIcE4pullEv to i8*), i8* bitcast (i8 (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIcE4readEv to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIcE5flushEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE7isEmptyEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE6isFullEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE4sizeEv to i8*)] }, comdat, align 4

@_ZN6Cicada17Sim7x00CommDeviceC1ERNS_15IBufferedSerialEPhS3_y = dso_local unnamed_addr alias %"class.Cicada::Sim7x00CommDevice"* (%"class.Cicada::Sim7x00CommDevice"*, %"class.Cicada::IBufferedSerial"*, i8*, i8*, i64), %"class.Cicada::Sim7x00CommDevice"* (%"class.Cicada::Sim7x00CommDevice"*, %"class.Cicada::IBufferedSerial"*, i8*, i8*, i64)* @_ZN6Cicada17Sim7x00CommDeviceC2ERNS_15IBufferedSerialEPhS3_y
@_ZN6Cicada17Sim7x00CommDeviceC1ERNS_15IBufferedSerialEPhS3_yy = dso_local unnamed_addr alias %"class.Cicada::Sim7x00CommDevice"* (%"class.Cicada::Sim7x00CommDevice"*, %"class.Cicada::IBufferedSerial"*, i8*, i8*, i64, i64), %"class.Cicada::Sim7x00CommDevice"* (%"class.Cicada::Sim7x00CommDevice"*, %"class.Cicada::IBufferedSerial"*, i8*, i8*, i64, i64)* @_ZN6Cicada17Sim7x00CommDeviceC2ERNS_15IBufferedSerialEPhS3_yy
@_ZN6Cicada9SchedulerC1EPFjvEPPNS_4TaskE = dso_local unnamed_addr alias %"class.Cicada::Scheduler"* (%"class.Cicada::Scheduler"*, i32 ()*, %"class.Cicada::Task"**), %"class.Cicada::Scheduler"* (%"class.Cicada::Scheduler"*, i32 ()*, %"class.Cicada::Task"**)* @_ZN6Cicada9SchedulerC2EPFjvEPPNS_4TaskE
@_ZN6Cicada9Stm32UartC1EPcS1_yyP13USART_TypeDefP12GPIO_TypeDeftt = dso_local unnamed_addr alias %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*, i8*, i8*, i64, i64, %struct.USART_TypeDef*, %struct.USART_TypeDef*, i16, i16), %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*, i8*, i8*, i64, i64, %struct.USART_TypeDef*, %struct.USART_TypeDef*, i16, i16)* @_ZN6Cicada9Stm32UartC2EPcS1_yyP13USART_TypeDefP12GPIO_TypeDeftt
@_ZN6Cicada9Stm32UartC1EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt = dso_local unnamed_addr alias %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*, i8*, i8*, i64, %struct.USART_TypeDef*, %struct.USART_TypeDef*, i16, i16), %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*, i8*, i8*, i64, %struct.USART_TypeDef*, %struct.USART_TypeDef*, i16, i16)* @_ZN6Cicada9Stm32UartC2EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt
@_ZN6Cicada9Stm32UartD1Ev = dso_local unnamed_addr alias %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*), %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32UartD2Ev

; Function Attrs: mustprogress nofree noinline nosync nounwind readnone willreturn
define dso_local noundef i32 @_Z8byteSwapj(i32 noundef %0) local_unnamed_addr #0 !dbg !2164 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2168, metadata !DIExpression()), !dbg !2170
  call void @llvm.dbg.value(metadata i32 %0, metadata !2169, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shl, DW_OP_stack_value)), !dbg !2170
  call void @llvm.dbg.value(metadata i32 undef, metadata !2169, metadata !DIExpression()), !dbg !2170
  call void @llvm.dbg.value(metadata i32 undef, metadata !2169, metadata !DIExpression()), !dbg !2170
  %2 = call i32 @llvm.bswap.i32(i32 %0), !dbg !2171
  call void @llvm.dbg.value(metadata i32 %2, metadata !2169, metadata !DIExpression()), !dbg !2170
  ret i32 %2, !dbg !2172
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: mustprogress noinline norecurse nounwind
define dso_local noundef i32 @main(i32 noundef %0, i8** nocapture noundef readnone %1) local_unnamed_addr #2 !dbg !2173 {
  %3 = alloca [1504 x i8], align 1
  %4 = alloca [1504 x i8], align 1
  %5 = alloca %"class.Cicada::Stm32Uart", align 8
  %6 = alloca [1504 x i8], align 1
  %7 = alloca [1504 x i8], align 1
  %8 = alloca %"class.Cicada::Stm32Uart", align 8
  %9 = alloca [1200 x i8], align 1
  %10 = alloca [1200 x i8], align 1
  %11 = alloca %"class.Cicada::Sim7x00CommDevice", align 8
  %12 = alloca %class.NTPTask, align 4
  %13 = alloca [3 x %"class.Cicada::Task"*], align 4
  %14 = alloca %"class.Cicada::Scheduler", align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !2177, metadata !DIExpression()), !dbg !2201
  call void @llvm.dbg.value(metadata i8** %1, metadata !2178, metadata !DIExpression()), !dbg !2201
  %15 = call i32 @HAL_Init() #33, !dbg !2202
  call fastcc void @_ZL18SystemClock_Configv(), !dbg !2203
  call void @HAL_Delay(i32 noundef 2000) #33, !dbg !2204
  call void @llvm.dbg.value(metadata i16 1504, metadata !2179, metadata !DIExpression()), !dbg !2201
  %16 = getelementptr inbounds [1504 x i8], [1504 x i8]* %3, i32 0, i32 0, !dbg !2205
  call void @llvm.lifetime.start.p0i8(i64 1504, i8* nonnull %16) #33, !dbg !2205
  call void @llvm.dbg.declare(metadata [1504 x i8]* %3, metadata !2180, metadata !DIExpression()), !dbg !2206
  %17 = getelementptr inbounds [1504 x i8], [1504 x i8]* %4, i32 0, i32 0, !dbg !2207
  call void @llvm.lifetime.start.p0i8(i64 1504, i8* nonnull %17) #33, !dbg !2207
  call void @llvm.dbg.declare(metadata [1504 x i8]* %4, metadata !2184, metadata !DIExpression()), !dbg !2208
  %18 = bitcast %"class.Cicada::Stm32Uart"* %5 to i8*, !dbg !2209
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %18) #33, !dbg !2209
  call void @llvm.dbg.declare(metadata %"class.Cicada::Stm32Uart"* %5, metadata !2185, metadata !DIExpression()), !dbg !2210
  %19 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartC1EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %5, i8* noundef nonnull %16, i8* noundef nonnull %17, i64 noundef 1504, %struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073809408 to %struct.USART_TypeDef*), i16 noundef zeroext 4, i16 noundef zeroext 8) #33, !dbg !2210
  %20 = getelementptr inbounds [1504 x i8], [1504 x i8]* %6, i32 0, i32 0, !dbg !2211
  call void @llvm.lifetime.start.p0i8(i64 1504, i8* nonnull %20) #33, !dbg !2211
  call void @llvm.dbg.declare(metadata [1504 x i8]* %6, metadata !2186, metadata !DIExpression()), !dbg !2212
  %21 = getelementptr inbounds [1504 x i8], [1504 x i8]* %7, i32 0, i32 0, !dbg !2213
  call void @llvm.lifetime.start.p0i8(i64 1504, i8* nonnull %21) #33, !dbg !2213
  call void @llvm.dbg.declare(metadata [1504 x i8]* %7, metadata !2187, metadata !DIExpression()), !dbg !2214
  %22 = bitcast %"class.Cicada::Stm32Uart"* %8 to i8*, !dbg !2215
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %22) #33, !dbg !2215
  call void @llvm.dbg.declare(metadata %"class.Cicada::Stm32Uart"* %8, metadata !2188, metadata !DIExpression()), !dbg !2216
  %23 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartC1EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %8, i8* noundef nonnull %20, i8* noundef nonnull %21, i64 noundef 1504, %struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073821696 to %struct.USART_TypeDef*), %struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073809408 to %struct.USART_TypeDef*), i16 noundef zeroext 512, i16 noundef zeroext 1024) #33, !dbg !2216
  call void @llvm.dbg.value(metadata i16 1200, metadata !2189, metadata !DIExpression()), !dbg !2201
  %24 = getelementptr inbounds [1200 x i8], [1200 x i8]* %9, i32 0, i32 0, !dbg !2217
  call void @llvm.lifetime.start.p0i8(i64 1200, i8* nonnull %24) #33, !dbg !2217
  call void @llvm.dbg.declare(metadata [1200 x i8]* %9, metadata !2190, metadata !DIExpression()), !dbg !2218
  %25 = getelementptr inbounds [1200 x i8], [1200 x i8]* %10, i32 0, i32 0, !dbg !2219
  call void @llvm.lifetime.start.p0i8(i64 1200, i8* nonnull %25) #33, !dbg !2219
  call void @llvm.dbg.declare(metadata [1200 x i8]* %10, metadata !2194, metadata !DIExpression()), !dbg !2220
  %26 = bitcast %"class.Cicada::Sim7x00CommDevice"* %11 to i8*, !dbg !2221
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %26) #33, !dbg !2221
  call void @llvm.dbg.declare(metadata %"class.Cicada::Sim7x00CommDevice"* %11, metadata !2195, metadata !DIExpression()), !dbg !2222
  %27 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %8, i32 0, i32 0, i32 0, !dbg !2223
  %28 = call noundef %"class.Cicada::Sim7x00CommDevice"* @_ZN6Cicada17Sim7x00CommDeviceC1ERNS_15IBufferedSerialEPhS3_y(%"class.Cicada::Sim7x00CommDevice"* noundef nonnull align 8 dereferenceable(284) %11, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %27, i8* noundef nonnull %24, i8* noundef nonnull %25, i64 noundef 1200) #33, !dbg !2222
  %29 = bitcast %class.NTPTask* %12 to i8*, !dbg !2224
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %29) #33, !dbg !2224
  call void @llvm.dbg.declare(metadata %class.NTPTask* %12, metadata !2197, metadata !DIExpression()), !dbg !2225
  %30 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %11, i32 0, i32 0, !dbg !2226
  %31 = call noundef %class.NTPTask* @_ZN7NTPTaskC2ERN6Cicada13SimCommDeviceE(%class.NTPTask* noundef nonnull align 4 dereferenceable(72) %12, %"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %30), !dbg !2225
  %32 = bitcast [3 x %"class.Cicada::Task"*]* %13 to i8*, !dbg !2227
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %32) #33, !dbg !2227
  call void @llvm.dbg.declare(metadata [3 x %"class.Cicada::Task"*]* %13, metadata !2198, metadata !DIExpression()), !dbg !2228
  %33 = getelementptr inbounds [3 x %"class.Cicada::Task"*], [3 x %"class.Cicada::Task"*]* %13, i32 0, i32 0, !dbg !2229
  %34 = getelementptr inbounds %class.NTPTask, %class.NTPTask* %12, i32 0, i32 0, !dbg !2230
  store %"class.Cicada::Task"* %34, %"class.Cicada::Task"** %33, align 4, !dbg !2229, !tbaa !2231
  %35 = getelementptr inbounds [3 x %"class.Cicada::Task"*], [3 x %"class.Cicada::Task"*]* %13, i32 0, i32 1, !dbg !2229
  %36 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %11, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2235
  store %"class.Cicada::Task"* %36, %"class.Cicada::Task"** %35, align 4, !dbg !2229, !tbaa !2231
  %37 = getelementptr inbounds [3 x %"class.Cicada::Task"*], [3 x %"class.Cicada::Task"*]* %13, i32 0, i32 2, !dbg !2229
  store %"class.Cicada::Task"* null, %"class.Cicada::Task"** %37, align 4, !dbg !2229, !tbaa !2231
  %38 = bitcast %"class.Cicada::Scheduler"* %14 to i8*, !dbg !2236
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %38) #33, !dbg !2236
  call void @llvm.dbg.declare(metadata %"class.Cicada::Scheduler"* %14, metadata !2200, metadata !DIExpression()), !dbg !2237
  %39 = call noundef %"class.Cicada::Scheduler"* @_ZN6Cicada9SchedulerC1EPFjvEPPNS_4TaskE(%"class.Cicada::Scheduler"* noundef nonnull align 4 dereferenceable(12) %14, i32 ()* noundef nonnull @_Z13eTickFunctionv, %"class.Cicada::Task"** noundef nonnull %33) #33, !dbg !2237
  %40 = call noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %5) #33, !dbg !2238
  call void @_ZN6Cicada9Scheduler5startEv(%"class.Cicada::Scheduler"* noundef nonnull align 4 dereferenceable(12) %14) #33, !dbg !2239
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %38) #33, !dbg !2240
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %32) #33, !dbg !2240
  %41 = call noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskD2Ev(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(72) %34) #33, !dbg !2240
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %29) #33, !dbg !2240
  %42 = bitcast %"class.Cicada::Sim7x00CommDevice"* %11 to %"class.Cicada::IPCommDevice"*, !dbg !2240
  %43 = call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceD2Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(284) %42) #33, !dbg !2240
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %26) #33, !dbg !2240
  call void @llvm.lifetime.end.p0i8(i64 1200, i8* nonnull %25) #33, !dbg !2240
  call void @llvm.lifetime.end.p0i8(i64 1200, i8* nonnull %24) #33, !dbg !2240
  %44 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD1Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %8) #33, !dbg !2240
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %22) #33, !dbg !2240
  call void @llvm.lifetime.end.p0i8(i64 1504, i8* nonnull %21) #33, !dbg !2240
  call void @llvm.lifetime.end.p0i8(i64 1504, i8* nonnull %20) #33, !dbg !2240
  %45 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD1Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %5) #33, !dbg !2240
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %18) #33, !dbg !2240
  call void @llvm.lifetime.end.p0i8(i64 1504, i8* nonnull %17) #33, !dbg !2240
  call void @llvm.lifetime.end.p0i8(i64 1504, i8* nonnull %16) #33, !dbg !2240
  ret i32 0, !dbg !2240
}

; Function Attrs: mustprogress noinline norecurse nounwind
define internal fastcc void @_ZL18SystemClock_Configv() unnamed_addr #2 !dbg !2241 {
  %1 = alloca %struct.RCC_OscInitTypeDef, align 4
  %2 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %3 = bitcast %struct.RCC_OscInitTypeDef* %1 to i8*, !dbg !2272
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #33, !dbg !2272
  call void @llvm.dbg.declare(metadata %struct.RCC_OscInitTypeDef* %1, metadata !2243, metadata !DIExpression()), !dbg !2273
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %3, i8 0, i32 40, i1 false), !dbg !2273
  %4 = bitcast %struct.RCC_ClkInitTypeDef* %2 to i8*, !dbg !2274
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #33, !dbg !2274
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %2, metadata !2263, metadata !DIExpression()), !dbg !2275
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(20) %4, i8 0, i32 20, i1 false), !dbg !2275
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 0, !dbg !2276
  store i32 2, i32* %5, align 4, !dbg !2277, !tbaa !2278
  %6 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 4, !dbg !2282
  store i32 1, i32* %6, align 4, !dbg !2283, !tbaa !2284
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 5, !dbg !2285
  store i32 16, i32* %7, align 4, !dbg !2286, !tbaa !2287
  %8 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 7, i32 0, !dbg !2288
  store i32 2, i32* %8, align 4, !dbg !2289, !tbaa !2290
  %9 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 7, i32 1, !dbg !2291
  store i32 0, i32* %9, align 4, !dbg !2292, !tbaa !2293
  %10 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 7, i32 2, !dbg !2294
  store i32 3670016, i32* %10, align 4, !dbg !2295, !tbaa !2296
  %11 = call i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef nonnull %1) #33, !dbg !2297
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 0, !dbg !2298
  store i32 15, i32* %12, align 4, !dbg !2299, !tbaa !2300
  %13 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 1, !dbg !2302
  store i32 2, i32* %13, align 4, !dbg !2303, !tbaa !2304
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 2, !dbg !2305
  store i32 0, i32* %14, align 4, !dbg !2306, !tbaa !2307
  %15 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 3, !dbg !2308
  store i32 1024, i32* %15, align 4, !dbg !2309, !tbaa !2310
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 4, !dbg !2311
  store i32 0, i32* %16, align 4, !dbg !2312, !tbaa !2313
  %17 = call i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef nonnull %2, i32 noundef 2) #33, !dbg !2314
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #33, !dbg !2315
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #33, !dbg !2315
  ret void, !dbg !2315
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %class.NTPTask* @_ZN7NTPTaskC2ERN6Cicada13SimCommDeviceE(%class.NTPTask* noundef nonnull returned align 4 dereferenceable(72) %0, %"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %1) unnamed_addr #4 comdat align 2 !dbg !2316 {
  call void @llvm.dbg.value(metadata %class.NTPTask* %0, metadata !2318, metadata !DIExpression()), !dbg !2320
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %1, metadata !2319, metadata !DIExpression()), !dbg !2320
  %3 = getelementptr inbounds %class.NTPTask, %class.NTPTask* %0, i32 0, i32 0, !dbg !2321
  %4 = call noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskC2Et(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %3, i16 noundef zeroext 0), !dbg !2322
  %5 = getelementptr inbounds %class.NTPTask, %class.NTPTask* %0, i32 0, i32 0, i32 0, !dbg !2321
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV7NTPTask, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %5, align 4, !dbg !2321, !tbaa !2323
  %6 = getelementptr inbounds %class.NTPTask, %class.NTPTask* %0, i32 0, i32 1, !dbg !2325
  store %"class.Cicada::SimCommDevice"* %1, %"class.Cicada::SimCommDevice"** %6, align 4, !dbg !2325, !tbaa !2231
  ret %class.NTPTask* %0, !dbg !2326
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskD2Ev(%"class.Cicada::Task"* noundef nonnull returned align 4 dereferenceable(20) %0) unnamed_addr #4 comdat align 2 !dbg !2327 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !2329, metadata !DIExpression()), !dbg !2330
  ret %"class.Cicada::Task"* %0, !dbg !2331
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceD2Ev(%"class.Cicada::IPCommDevice"* noundef nonnull returned align 8 dereferenceable(140) %0) unnamed_addr #4 comdat align 2 !dbg !2332 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !2338, metadata !DIExpression()), !dbg !2340
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 3, !dbg !2341
  %3 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %2) #33, !dbg !2341
  %4 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 2, !dbg !2341
  %5 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %4) #33, !dbg !2341
  %6 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 1, !dbg !2341
  %7 = call noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskD2Ev(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %6) #33, !dbg !2341
  %8 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 0, i32 0, i32 0, !dbg !2341
  %9 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %8) #33, !dbg !2341
  ret %"class.Cicada::IPCommDevice"* %0, !dbg !2343
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull returned align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !2344 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !2346, metadata !DIExpression()), !dbg !2348
  ret %"class.Cicada::CircularBuffer.0"* %0, !dbg !2349
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #4 comdat align 2 !dbg !2350 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !2352, metadata !DIExpression()), !dbg !2354
  ret %"class.Cicada::ICommDevice"* %0, !dbg !2355
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskC2Et(%"class.Cicada::Task"* noundef nonnull returned align 4 dereferenceable(20) %0, i16 noundef zeroext %1) unnamed_addr #4 comdat align 2 !dbg !2356 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !2358, metadata !DIExpression()), !dbg !2360
  call void @llvm.dbg.value(metadata i16 %1, metadata !2359, metadata !DIExpression()), !dbg !2360
  %3 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 0, !dbg !2361
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6Cicada4TaskE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %3, align 4, !dbg !2361, !tbaa !2323
  %4 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 1, !dbg !2362
  store i16 %1, i16* %4, align 4, !dbg !2362, !tbaa !2363
  %5 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 3, !dbg !2367
  store i8 0, i8* %5, align 4, !dbg !2367, !tbaa !2368
  %6 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 4, !dbg !2369
  store i32 0, i32* %6, align 4, !dbg !2369, !tbaa !2370
  ret %"class.Cicada::Task"* %0, !dbg !2371
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN7NTPTaskD0Ev(%class.NTPTask* noundef nonnull align 4 dereferenceable(72) %0) unnamed_addr #4 comdat align 2 !dbg !2372 {
  call void @llvm.dbg.value(metadata %class.NTPTask* %0, metadata !2375, metadata !DIExpression()), !dbg !2376
  %2 = getelementptr inbounds %class.NTPTask, %class.NTPTask* %0, i32 0, i32 0, !dbg !2377
  %3 = call noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskD2Ev(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(72) %2) #33, !dbg !2377
  %4 = bitcast %class.NTPTask* %0 to i8*, !dbg !2377
  call void @_ZdlPv(i8* noundef %4) #34, !dbg !2377
  ret void, !dbg !2377
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN7NTPTask3runEv(%class.NTPTask* noundef nonnull align 4 dereferenceable(72) %0) unnamed_addr #5 comdat align 2 !dbg !186 {
  call void @llvm.dbg.value(metadata %class.NTPTask* %0, metadata !188, metadata !DIExpression()), !dbg !2378
  %2 = load i8, i8* @_ZZN7NTPTask3runEvE10entrypoint, align 1, !dbg !2379, !tbaa !2380
  switch i8 %2, label %86 [
    i8 0, label %3
    i8 1, label %25
    i8 2, label %45
    i8 3, label %75
  ], !dbg !2379

3:                                                ; preds = %1
  %4 = getelementptr inbounds %class.NTPTask, %class.NTPTask* %0, i32 0, i32 2, i32 0, !dbg !2381
  %5 = bitcast i32* %4 to i8*, !dbg !2381
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(48) %5, i8 0, i32 48, i1 false), !dbg !2381
  %6 = getelementptr inbounds %class.NTPTask, %class.NTPTask* %0, i32 0, i32 1, !dbg !2383
  %7 = load %"class.Cicada::SimCommDevice"*, %"class.Cicada::SimCommDevice"** %6, align 4, !dbg !2383, !tbaa !2384
  %8 = bitcast %"class.Cicada::SimCommDevice"* %7 to void (%"class.Cicada::SimCommDevice"*, i8*)***, !dbg !2386
  %9 = load void (%"class.Cicada::SimCommDevice"*, i8*)**, void (%"class.Cicada::SimCommDevice"*, i8*)*** %8, align 8, !dbg !2386, !tbaa !2323
  %10 = getelementptr inbounds void (%"class.Cicada::SimCommDevice"*, i8*)*, void (%"class.Cicada::SimCommDevice"*, i8*)** %9, i32 15, !dbg !2386
  %11 = load void (%"class.Cicada::SimCommDevice"*, i8*)*, void (%"class.Cicada::SimCommDevice"*, i8*)** %10, align 4, !dbg !2386
  call void %11(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %7, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)) #33, !dbg !2386
  %12 = bitcast %"class.Cicada::SimCommDevice"** %6 to %"class.Cicada::IPCommDevice"**, !dbg !2387
  %13 = load %"class.Cicada::IPCommDevice"*, %"class.Cicada::IPCommDevice"** %12, align 4, !dbg !2387, !tbaa !2384
  %14 = bitcast %"class.Cicada::IPCommDevice"* %13 to void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)***, !dbg !2388
  %15 = load void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)**, void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)*** %14, align 8, !dbg !2388, !tbaa !2323
  %16 = getelementptr inbounds void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)*, void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)** %15, i32 12, !dbg !2388
  %17 = load void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)*, void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)** %16, align 4, !dbg !2388
  call void %17(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %13, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i32 0, i32 0), i16 noundef zeroext 123, i32 noundef 0) #33, !dbg !2388
  %18 = load %"class.Cicada::SimCommDevice"*, %"class.Cicada::SimCommDevice"** %6, align 4, !dbg !2389, !tbaa !2384
  %19 = bitcast %"class.Cicada::SimCommDevice"* %18 to i1 (%"class.Cicada::SimCommDevice"*)***, !dbg !2390
  %20 = load i1 (%"class.Cicada::SimCommDevice"*)**, i1 (%"class.Cicada::SimCommDevice"*)*** %19, align 8, !dbg !2390, !tbaa !2323
  %21 = getelementptr inbounds i1 (%"class.Cicada::SimCommDevice"*)*, i1 (%"class.Cicada::SimCommDevice"*)** %20, i32 7, !dbg !2390
  %22 = load i1 (%"class.Cicada::SimCommDevice"*)*, i1 (%"class.Cicada::SimCommDevice"*)** %21, align 4, !dbg !2390
  %23 = call noundef zeroext i1 %22(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %18) #33, !dbg !2390
  %24 = getelementptr inbounds %class.NTPTask, %class.NTPTask* %0, i32 0, i32 0, !dbg !2391
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %24, i16 noundef zeroext 0), !dbg !2391
  store i8 1, i8* @_ZZN7NTPTask3runEvE10entrypoint, align 1, !dbg !2391, !tbaa !2380
  br label %25, !dbg !2391

25:                                               ; preds = %1, %3
  %26 = getelementptr inbounds %class.NTPTask, %class.NTPTask* %0, i32 0, i32 1, !dbg !2392
  %27 = bitcast %"class.Cicada::SimCommDevice"** %26 to %"class.Cicada::IPCommDevice"**, !dbg !2392
  %28 = load %"class.Cicada::IPCommDevice"*, %"class.Cicada::IPCommDevice"** %27, align 4, !dbg !2392, !tbaa !2384
  %29 = bitcast %"class.Cicada::IPCommDevice"* %28 to i1 (%"class.Cicada::IPCommDevice"*)***, !dbg !2392
  %30 = load i1 (%"class.Cicada::IPCommDevice"*)**, i1 (%"class.Cicada::IPCommDevice"*)*** %29, align 8, !dbg !2392, !tbaa !2323
  %31 = getelementptr inbounds i1 (%"class.Cicada::IPCommDevice"*)*, i1 (%"class.Cicada::IPCommDevice"*)** %30, i32 9, !dbg !2392
  %32 = load i1 (%"class.Cicada::IPCommDevice"*)*, i1 (%"class.Cicada::IPCommDevice"*)** %31, align 4, !dbg !2392
  %33 = call noundef zeroext i1 %32(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %28) #33, !dbg !2392
  br i1 %33, label %34, label %86, !dbg !2391

34:                                               ; preds = %25
  %35 = call i32 (i8*, ...) @printf_(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i32 0, i32 0)) #33, !dbg !2394
  %36 = getelementptr inbounds %class.NTPTask, %class.NTPTask* %0, i32 0, i32 2, i32 0, !dbg !2395
  store i32 27, i32* %36, align 4, !dbg !2396, !tbaa !2397
  %37 = load %"class.Cicada::IPCommDevice"*, %"class.Cicada::IPCommDevice"** %27, align 4, !dbg !2398, !tbaa !2384
  %38 = bitcast i32* %36 to i8*, !dbg !2399
  %39 = bitcast %"class.Cicada::IPCommDevice"* %37 to i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)***, !dbg !2400
  %40 = load i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)**, i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)*** %39, align 8, !dbg !2400, !tbaa !2323
  %41 = getelementptr inbounds i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)*, i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)** %40, i32 6, !dbg !2400
  %42 = load i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)*, i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)** %41, align 4, !dbg !2400
  %43 = call noundef i64 %42(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %37, i8* noundef nonnull %38, i64 noundef 48) #33, !dbg !2400
  %44 = getelementptr inbounds %class.NTPTask, %class.NTPTask* %0, i32 0, i32 0, !dbg !2401
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %44, i16 noundef zeroext 0), !dbg !2401
  store i8 2, i8* @_ZZN7NTPTask3runEvE10entrypoint, align 1, !dbg !2401, !tbaa !2380
  br label %45, !dbg !2401

45:                                               ; preds = %1, %34
  %46 = getelementptr inbounds %class.NTPTask, %class.NTPTask* %0, i32 0, i32 1, !dbg !2402
  %47 = bitcast %"class.Cicada::SimCommDevice"** %46 to %"class.Cicada::IPCommDevice"**, !dbg !2402
  %48 = load %"class.Cicada::IPCommDevice"*, %"class.Cicada::IPCommDevice"** %47, align 4, !dbg !2402, !tbaa !2384
  %49 = bitcast %"class.Cicada::IPCommDevice"* %48 to i64 (%"class.Cicada::IPCommDevice"*)***, !dbg !2402
  %50 = load i64 (%"class.Cicada::IPCommDevice"*)**, i64 (%"class.Cicada::IPCommDevice"*)*** %49, align 8, !dbg !2402, !tbaa !2323
  %51 = getelementptr inbounds i64 (%"class.Cicada::IPCommDevice"*)*, i64 (%"class.Cicada::IPCommDevice"*)** %50, i32 2, !dbg !2402
  %52 = load i64 (%"class.Cicada::IPCommDevice"*)*, i64 (%"class.Cicada::IPCommDevice"*)** %51, align 4, !dbg !2402
  %53 = call noundef i64 %52(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %48) #33, !dbg !2402
  %54 = icmp eq i64 %53, 0, !dbg !2402
  br i1 %54, label %86, label %55, !dbg !2401

55:                                               ; preds = %45
  %56 = load %"class.Cicada::IPCommDevice"*, %"class.Cicada::IPCommDevice"** %47, align 4, !dbg !2404, !tbaa !2384
  %57 = getelementptr inbounds %class.NTPTask, %class.NTPTask* %0, i32 0, i32 2, !dbg !2405
  %58 = bitcast [12 x i32]* %57 to i8*, !dbg !2406
  %59 = bitcast %"class.Cicada::IPCommDevice"* %56 to i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)***, !dbg !2407
  %60 = load i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)**, i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)*** %59, align 8, !dbg !2407, !tbaa !2323
  %61 = getelementptr inbounds i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)*, i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)** %60, i32 5, !dbg !2407
  %62 = load i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)*, i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)** %61, align 4, !dbg !2407
  %63 = call noundef i64 %62(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %56, i8* noundef nonnull %58, i64 noundef 48) #33, !dbg !2407
  %64 = getelementptr inbounds %class.NTPTask, %class.NTPTask* %0, i32 0, i32 2, i32 10, !dbg !2408
  %65 = load i32, i32* %64, align 4, !dbg !2408, !tbaa !2397
  %66 = call noundef i32 @_Z8byteSwapj(i32 noundef %65), !dbg !2409
  %67 = add i32 %66, 2085978496, !dbg !2410
  %68 = call i32 (i8*, ...) @printf_(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i32 0, i32 0), i32 noundef %67) #33, !dbg !2411
  %69 = load %"class.Cicada::IPCommDevice"*, %"class.Cicada::IPCommDevice"** %47, align 4, !dbg !2412, !tbaa !2384
  %70 = bitcast %"class.Cicada::IPCommDevice"* %69 to void (%"class.Cicada::IPCommDevice"*)***, !dbg !2413
  %71 = load void (%"class.Cicada::IPCommDevice"*)**, void (%"class.Cicada::IPCommDevice"*)*** %70, align 8, !dbg !2413, !tbaa !2323
  %72 = getelementptr inbounds void (%"class.Cicada::IPCommDevice"*)*, void (%"class.Cicada::IPCommDevice"*)** %71, i32 8, !dbg !2413
  %73 = load void (%"class.Cicada::IPCommDevice"*)*, void (%"class.Cicada::IPCommDevice"*)** %72, align 4, !dbg !2413
  call void %73(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %69) #33, !dbg !2413
  %74 = getelementptr inbounds %class.NTPTask, %class.NTPTask* %0, i32 0, i32 0, !dbg !2414
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %74, i16 noundef zeroext 0), !dbg !2414
  store i8 3, i8* @_ZZN7NTPTask3runEvE10entrypoint, align 1, !dbg !2414, !tbaa !2380
  br label %75, !dbg !2414

75:                                               ; preds = %1, %55
  %76 = getelementptr inbounds %class.NTPTask, %class.NTPTask* %0, i32 0, i32 1, !dbg !2415
  %77 = bitcast %"class.Cicada::SimCommDevice"** %76 to %"class.Cicada::IPCommDevice"**, !dbg !2415
  %78 = load %"class.Cicada::IPCommDevice"*, %"class.Cicada::IPCommDevice"** %77, align 4, !dbg !2415, !tbaa !2384
  %79 = bitcast %"class.Cicada::IPCommDevice"* %78 to i1 (%"class.Cicada::IPCommDevice"*)***, !dbg !2415
  %80 = load i1 (%"class.Cicada::IPCommDevice"*)**, i1 (%"class.Cicada::IPCommDevice"*)*** %79, align 8, !dbg !2415, !tbaa !2323
  %81 = getelementptr inbounds i1 (%"class.Cicada::IPCommDevice"*)*, i1 (%"class.Cicada::IPCommDevice"*)** %80, i32 10, !dbg !2415
  %82 = load i1 (%"class.Cicada::IPCommDevice"*)*, i1 (%"class.Cicada::IPCommDevice"*)** %81, align 4, !dbg !2415
  %83 = call noundef zeroext i1 %82(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %78) #33, !dbg !2415
  br i1 %83, label %84, label %86, !dbg !2414

84:                                               ; preds = %75
  %85 = call i32 (i8*, ...) @printf_(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0)) #33, !dbg !2417
  store i8 4, i8* @_ZZN7NTPTask3runEvE10entrypoint, align 1, !dbg !2418, !tbaa !2380
  br label %86, !dbg !2418

86:                                               ; preds = %75, %45, %25, %1, %84
  ret void, !dbg !2419
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #6

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %0, i16 noundef zeroext %1) local_unnamed_addr #5 comdat align 2 !dbg !2420 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !2422, metadata !DIExpression()), !dbg !2424
  call void @llvm.dbg.value(metadata i16 %1, metadata !2423, metadata !DIExpression()), !dbg !2424
  %3 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 1, !dbg !2425
  store i16 %1, i16* %3, align 4, !dbg !2426, !tbaa !2363
  ret void, !dbg !2427
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8* noundef) local_unnamed_addr #7

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada4TaskD0Ev(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %0) unnamed_addr #4 comdat align 2 !dbg !2428 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !2430, metadata !DIExpression()), !dbg !2431
  call void @llvm.trap() #35, !dbg !2432
  unreachable, !dbg !2432
}

declare dso_local void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: mustprogress noinline nounwind
define dso_local void @SysTick_Handler() local_unnamed_addr #5 !dbg !2433 {
  call void @HAL_IncTick() #33, !dbg !2434
  ret void, !dbg !2435
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @USART1_IRQHandler() local_unnamed_addr #5 !dbg !2 {
  %1 = load atomic i8, i8* bitcast (i32* @_ZGVZ17USART1_IRQHandlerE8instance to i8*) acquire, align 4, !dbg !2436
  %2 = and i8 %1, 1, !dbg !2436
  %3 = icmp eq i8 %2, 0, !dbg !2436
  br i1 %3, label %4, label %9, !dbg !2436, !prof !2437

4:                                                ; preds = %0
  %5 = call i32 @__cxa_guard_acquire(i32* nonnull @_ZGVZ17USART1_IRQHandlerE8instance) #33, !dbg !2436
  %6 = icmp eq i32 %5, 0, !dbg !2436
  br i1 %6, label %9, label %7, !dbg !2436

7:                                                ; preds = %4
  %8 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef(%struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073821696 to %struct.USART_TypeDef*)) #33, !dbg !2438
  store %"class.Cicada::Stm32Uart"* %8, %"class.Cicada::Stm32Uart"** @_ZZ17USART1_IRQHandlerE8instance, align 4, !dbg !2436, !tbaa !2231
  call void @__cxa_guard_release(i32* nonnull @_ZGVZ17USART1_IRQHandlerE8instance) #33, !dbg !2436
  br label %9, !dbg !2436

9:                                                ; preds = %7, %4, %0
  %10 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** @_ZZ17USART1_IRQHandlerE8instance, align 4, !dbg !2439, !tbaa !2231
  call void @_ZN6Cicada9Stm32Uart15handleInterruptEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %10) #33, !dbg !2440
  ret void, !dbg !2441
}

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_guard_acquire(i32*) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare dso_local void @__cxa_guard_release(i32*) local_unnamed_addr #9

; Function Attrs: mustprogress noinline nounwind
define dso_local void @USART2_IRQHandler() local_unnamed_addr #5 !dbg !172 {
  %1 = load atomic i8, i8* bitcast (i32* @_ZGVZ17USART2_IRQHandlerE8instance to i8*) acquire, align 4, !dbg !2442
  %2 = and i8 %1, 1, !dbg !2442
  %3 = icmp eq i8 %2, 0, !dbg !2442
  br i1 %3, label %4, label %9, !dbg !2442, !prof !2437

4:                                                ; preds = %0
  %5 = call i32 @__cxa_guard_acquire(i32* nonnull @_ZGVZ17USART2_IRQHandlerE8instance) #33, !dbg !2442
  %6 = icmp eq i32 %5, 0, !dbg !2442
  br i1 %6, label %9, label %7, !dbg !2442

7:                                                ; preds = %4
  %8 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef(%struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073759232 to %struct.USART_TypeDef*)) #33, !dbg !2443
  store %"class.Cicada::Stm32Uart"* %8, %"class.Cicada::Stm32Uart"** @_ZZ17USART2_IRQHandlerE8instance, align 4, !dbg !2442, !tbaa !2231
  call void @__cxa_guard_release(i32* nonnull @_ZGVZ17USART2_IRQHandlerE8instance) #33, !dbg !2442
  br label %9, !dbg !2442

9:                                                ; preds = %7, %4, %0
  %10 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** @_ZZ17USART2_IRQHandlerE8instance, align 4, !dbg !2444, !tbaa !2231
  call void @_ZN6Cicada9Stm32Uart15handleInterruptEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %10) #33, !dbg !2445
  ret void, !dbg !2446
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_putchar(i8 noundef zeroext %0) local_unnamed_addr #5 !dbg !179 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !183, metadata !DIExpression()), !dbg !2447
  %2 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** @_ZZ8_putcharE6serial, align 4, !dbg !2448, !tbaa !2231
  %3 = icmp eq %"class.Cicada::Stm32Uart"* %2, null, !dbg !2448
  br i1 %3, label %4, label %6, !dbg !2450

4:                                                ; preds = %1
  %5 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef(%struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073759232 to %struct.USART_TypeDef*)) #33, !dbg !2451
  store %"class.Cicada::Stm32Uart"* %5, %"class.Cicada::Stm32Uart"** @_ZZ8_putcharE6serial, align 4, !dbg !2453, !tbaa !2231
  br label %6, !dbg !2454

6:                                                ; preds = %4, %1
  %7 = load %"class.Cicada::BufferedSerial"*, %"class.Cicada::BufferedSerial"** bitcast (%"class.Cicada::Stm32Uart"** @_ZZ8_putcharE6serial to %"class.Cicada::BufferedSerial"**), align 4, !dbg !2455, !tbaa !2231
  %8 = bitcast %"class.Cicada::BufferedSerial"* %7 to void (%"class.Cicada::BufferedSerial"*, i8)***, !dbg !2456
  %9 = load void (%"class.Cicada::BufferedSerial"*, i8)**, void (%"class.Cicada::BufferedSerial"*, i8)*** %8, align 8, !dbg !2456, !tbaa !2323
  %10 = getelementptr inbounds void (%"class.Cicada::BufferedSerial"*, i8)*, void (%"class.Cicada::BufferedSerial"*, i8)** %9, i32 9, !dbg !2456
  %11 = load void (%"class.Cicada::BufferedSerial"*, i8)*, void (%"class.Cicada::BufferedSerial"*, i8)** %10, align 4, !dbg !2456
  call void %11(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %7, i8 noundef zeroext %0) #33, !dbg !2456
  ret void, !dbg !2457
}

; Function Attrs: noinline nounwind
define dso_local i32 @printf_(i8* noundef %0, ...) local_unnamed_addr #4 !dbg !2458 {
  %2 = alloca %struct.__va_list, align 4
  %3 = alloca [1 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !2460, metadata !DIExpression()), !dbg !2472
  %4 = bitcast %struct.__va_list* %2 to i8*, !dbg !2473
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #33, !dbg !2473
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !2461, metadata !DIExpression()), !dbg !2474
  call void @llvm.va_start(i8* nonnull %4), !dbg !2475
  %5 = getelementptr inbounds [1 x i8], [1 x i8]* %3, i32 0, i32 0, !dbg !2476
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #33, !dbg !2476
  call void @llvm.dbg.declare(metadata [1 x i8]* %3, metadata !2468, metadata !DIExpression()), !dbg !2477
  %6 = bitcast %struct.__va_list* %2 to i32*, !dbg !2478
  %7 = load i32, i32* %6, align 4, !dbg !2478
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !2478
  %9 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_char, i8* noundef nonnull %5, i32 noundef -1, i8* noundef %0, [1 x i32] %8), !dbg !2478
  call void @llvm.dbg.value(metadata i32 %9, metadata !2470, metadata !DIExpression()), !dbg !2472
  call void @llvm.va_end(i8* %4), !dbg !2479
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #33, !dbg !2480
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #33, !dbg !2480
  ret i32 %9, !dbg !2481
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #10

; Function Attrs: noinline nounwind
define internal void @_out_char(i8 noundef zeroext %0, i8* nocapture noundef readnone %1, i32 noundef %2, i32 noundef %3) #4 !dbg !2482 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2484, metadata !DIExpression()), !dbg !2488
  call void @llvm.dbg.value(metadata i8* %1, metadata !2485, metadata !DIExpression()), !dbg !2488
  call void @llvm.dbg.value(metadata i32 %2, metadata !2486, metadata !DIExpression()), !dbg !2488
  call void @llvm.dbg.value(metadata i32 %3, metadata !2487, metadata !DIExpression()), !dbg !2488
  %5 = icmp eq i8 %0, 0, !dbg !2489
  br i1 %5, label %7, label %6, !dbg !2491

6:                                                ; preds = %4
  call void @_putchar(i8 noundef zeroext %0) #33, !dbg !2492
  br label %7, !dbg !2494

7:                                                ; preds = %6, %4
  ret void, !dbg !2495
}

; Function Attrs: noinline nounwind
define internal fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) unnamed_addr #4 !dbg !2496 {
  %6 = alloca i8*, align 4
  %7 = extractvalue [1 x i32] %4, 0
  %8 = inttoptr i32 %7 to i8*
  call void @llvm.dbg.value(metadata i8* %8, metadata !2504, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !2500, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata i8* %1, metadata !2501, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata i32 %2, metadata !2502, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata i8* %3, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %3, i8** %6, align 4, !tbaa !2551
  call void @llvm.dbg.value(metadata i32 0, metadata !2509, metadata !DIExpression()), !dbg !2550
  %9 = icmp eq i8* %1, null, !dbg !2555
  %10 = select i1 %9, void (i8, i8*, i32, i32)* @_out_null, void (i8, i8*, i32, i32)* %0, !dbg !2557
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %10, metadata !2500, metadata !DIExpression()), !dbg !2550
  br label %11, !dbg !2558

11:                                               ; preds = %354, %5
  %12 = phi i32 [ 0, %5 ], [ %355, %354 ]
  %13 = phi i8* [ %8, %5 ], [ %356, %354 ]
  br label %14, !dbg !2558

14:                                               ; preds = %11, %18
  %15 = phi i32 [ %19, %18 ], [ %12, %11 ], !dbg !2550
  call void @llvm.dbg.value(metadata i8* %13, metadata !2504, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata i32 %15, metadata !2509, metadata !DIExpression()), !dbg !2550
  %16 = load i8*, i8** %6, align 4, !dbg !2559, !tbaa !2551
  call void @llvm.dbg.value(metadata i8* %16, metadata !2503, metadata !DIExpression()), !dbg !2550
  %17 = load i8, i8* %16, align 1, !dbg !2560, !tbaa !2561
  switch i8 %17, label %18 [
    i8 0, label %357
    i8 37, label %22
  ], !dbg !2558

18:                                               ; preds = %14
  %19 = add i32 %15, 1, !dbg !2562
  call void @llvm.dbg.value(metadata i32 %19, metadata !2509, metadata !DIExpression()), !dbg !2550
  call void %10(i8 noundef zeroext %17, i8* noundef %1, i32 noundef %15, i32 noundef %2) #33, !dbg !2565, !callees !2566
  %20 = load i8*, i8** %6, align 4, !dbg !2567, !tbaa !2551
  call void @llvm.dbg.value(metadata i8* %20, metadata !2503, metadata !DIExpression()), !dbg !2550
  %21 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !2567
  call void @llvm.dbg.value(metadata i8* %21, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %21, i8** %6, align 4, !dbg !2567, !tbaa !2551
  br label %14, !dbg !2568, !llvm.loop !2569

22:                                               ; preds = %14
  %23 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !2573
  call void @llvm.dbg.value(metadata i8* %23, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %23, i8** %6, align 4, !dbg !2573, !tbaa !2551
  call void @llvm.dbg.value(metadata i32 0, metadata !2505, metadata !DIExpression()), !dbg !2550
  br label %24, !dbg !2575

24:                                               ; preds = %43, %22
  %25 = phi i32 [ 0, %22 ], [ %45, %43 ], !dbg !2576
  call void @llvm.dbg.value(metadata i32 %25, metadata !2505, metadata !DIExpression()), !dbg !2550
  %26 = load i8*, i8** %6, align 4, !dbg !2577, !tbaa !2551
  call void @llvm.dbg.value(metadata i8* %26, metadata !2503, metadata !DIExpression()), !dbg !2550
  %27 = load i8, i8* %26, align 1, !dbg !2579, !tbaa !2561
  switch i8 %27, label %43 [
    i8 48, label %28
    i8 45, label %31
    i8 43, label %34
    i8 32, label %37
    i8 35, label %40
  ], !dbg !2580

28:                                               ; preds = %24
  %29 = or i32 %25, 1, !dbg !2581
  call void @llvm.dbg.value(metadata i32 %29, metadata !2505, metadata !DIExpression()), !dbg !2550
  %30 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !2583
  call void @llvm.dbg.value(metadata i8* %30, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %30, i8** %6, align 4, !dbg !2583, !tbaa !2551
  call void @llvm.dbg.value(metadata i32 1, metadata !2508, metadata !DIExpression()), !dbg !2550
  br label %43, !dbg !2584

31:                                               ; preds = %24
  %32 = or i32 %25, 2, !dbg !2585
  call void @llvm.dbg.value(metadata i32 %32, metadata !2505, metadata !DIExpression()), !dbg !2550
  %33 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !2586
  call void @llvm.dbg.value(metadata i8* %33, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %33, i8** %6, align 4, !dbg !2586, !tbaa !2551
  call void @llvm.dbg.value(metadata i32 1, metadata !2508, metadata !DIExpression()), !dbg !2550
  br label %43, !dbg !2587

34:                                               ; preds = %24
  %35 = or i32 %25, 4, !dbg !2588
  call void @llvm.dbg.value(metadata i32 %35, metadata !2505, metadata !DIExpression()), !dbg !2550
  %36 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !2589
  call void @llvm.dbg.value(metadata i8* %36, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %36, i8** %6, align 4, !dbg !2589, !tbaa !2551
  call void @llvm.dbg.value(metadata i32 1, metadata !2508, metadata !DIExpression()), !dbg !2550
  br label %43, !dbg !2590

37:                                               ; preds = %24
  %38 = or i32 %25, 8, !dbg !2591
  call void @llvm.dbg.value(metadata i32 %38, metadata !2505, metadata !DIExpression()), !dbg !2550
  %39 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !2592
  call void @llvm.dbg.value(metadata i8* %39, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %39, i8** %6, align 4, !dbg !2592, !tbaa !2551
  call void @llvm.dbg.value(metadata i32 1, metadata !2508, metadata !DIExpression()), !dbg !2550
  br label %43, !dbg !2593

40:                                               ; preds = %24
  %41 = or i32 %25, 16, !dbg !2594
  call void @llvm.dbg.value(metadata i32 %41, metadata !2505, metadata !DIExpression()), !dbg !2550
  %42 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !2595
  call void @llvm.dbg.value(metadata i8* %42, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %42, i8** %6, align 4, !dbg !2595, !tbaa !2551
  call void @llvm.dbg.value(metadata i32 1, metadata !2508, metadata !DIExpression()), !dbg !2550
  br label %43, !dbg !2596

43:                                               ; preds = %24, %28, %31, %34, %37, %40
  %44 = phi i1 [ false, %28 ], [ false, %31 ], [ false, %34 ], [ false, %37 ], [ false, %40 ], [ true, %24 ], !dbg !2597
  %45 = phi i32 [ %29, %28 ], [ %32, %31 ], [ %35, %34 ], [ %38, %37 ], [ %41, %40 ], [ %25, %24 ], !dbg !2598
  call void @llvm.dbg.value(metadata i32 %45, metadata !2505, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata i32 undef, metadata !2508, metadata !DIExpression()), !dbg !2550
  br i1 %44, label %46, label %24, !dbg !2599, !llvm.loop !2600

46:                                               ; preds = %43
  call void @llvm.dbg.value(metadata i32 0, metadata !2506, metadata !DIExpression()), !dbg !2550
  %47 = load i8*, i8** %6, align 4, !dbg !2602, !tbaa !2551
  call void @llvm.dbg.value(metadata i8* %47, metadata !2503, metadata !DIExpression()), !dbg !2550
  %48 = load i8, i8* %47, align 1, !dbg !2603, !tbaa !2561
  %49 = call fastcc zeroext i1 @_is_digit(i8 noundef zeroext %48), !dbg !2604
  br i1 %49, label %50, label %52, !dbg !2605

50:                                               ; preds = %46
  call void @llvm.dbg.value(metadata i8** %6, metadata !2503, metadata !DIExpression(DW_OP_deref)), !dbg !2550
  %51 = call fastcc i32 @_atoi(i8** noundef nonnull %6), !dbg !2606
  call void @llvm.dbg.value(metadata i32 %51, metadata !2506, metadata !DIExpression()), !dbg !2550
  br label %64, !dbg !2608

52:                                               ; preds = %46
  call void @llvm.dbg.value(metadata i8* %47, metadata !2503, metadata !DIExpression()), !dbg !2550
  %53 = icmp eq i8 %48, 42, !dbg !2609
  br i1 %53, label %54, label %64, !dbg !2610

54:                                               ; preds = %52
  %55 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !2611
  call void @llvm.dbg.value(metadata i8* %55, metadata !2504, metadata !DIExpression()), !dbg !2550
  %56 = bitcast i8* %13 to i32*, !dbg !2611
  %57 = load i32, i32* %56, align 4, !dbg !2611
  call void @llvm.dbg.value(metadata i32 %57, metadata !2510, metadata !DIExpression()), !dbg !2612
  %58 = icmp slt i32 %57, 0, !dbg !2613
  %59 = or i32 %45, 2, !dbg !2615
  %60 = sub nsw i32 0, %57, !dbg !2615
  %61 = select i1 %58, i32 %60, i32 %57, !dbg !2615
  %62 = select i1 %58, i32 %59, i32 %45, !dbg !2615
  call void @llvm.dbg.value(metadata i32 %62, metadata !2505, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata i32 %61, metadata !2506, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata i8* %47, metadata !2503, metadata !DIExpression()), !dbg !2550
  %63 = getelementptr inbounds i8, i8* %47, i32 1, !dbg !2616
  call void @llvm.dbg.value(metadata i8* %63, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %63, i8** %6, align 4, !dbg !2616, !tbaa !2551
  br label %64, !dbg !2617

64:                                               ; preds = %52, %54, %50
  %65 = phi i32 [ %51, %50 ], [ %61, %54 ], [ 0, %52 ], !dbg !2598
  %66 = phi i32 [ %45, %50 ], [ %62, %54 ], [ %45, %52 ], !dbg !2598
  %67 = phi i8* [ %13, %50 ], [ %55, %54 ], [ %13, %52 ]
  call void @llvm.dbg.value(metadata i8* %67, metadata !2504, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata i32 %66, metadata !2505, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata i32 %65, metadata !2506, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata i32 0, metadata !2507, metadata !DIExpression()), !dbg !2550
  %68 = load i8*, i8** %6, align 4, !dbg !2618, !tbaa !2551
  call void @llvm.dbg.value(metadata i8* %68, metadata !2503, metadata !DIExpression()), !dbg !2550
  %69 = load i8, i8* %68, align 1, !dbg !2619, !tbaa !2561
  %70 = icmp eq i8 %69, 46, !dbg !2620
  br i1 %70, label %71, label %87, !dbg !2621

71:                                               ; preds = %64
  %72 = or i32 %66, 1024, !dbg !2622
  call void @llvm.dbg.value(metadata i32 %72, metadata !2505, metadata !DIExpression()), !dbg !2550
  %73 = getelementptr inbounds i8, i8* %68, i32 1, !dbg !2623
  call void @llvm.dbg.value(metadata i8* %73, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %73, i8** %6, align 4, !dbg !2623, !tbaa !2551
  %74 = load i8, i8* %73, align 1, !dbg !2624, !tbaa !2561
  %75 = call fastcc zeroext i1 @_is_digit(i8 noundef zeroext %74), !dbg !2625
  br i1 %75, label %76, label %78, !dbg !2626

76:                                               ; preds = %71
  call void @llvm.dbg.value(metadata i8** %6, metadata !2503, metadata !DIExpression(DW_OP_deref)), !dbg !2550
  %77 = call fastcc i32 @_atoi(i8** noundef nonnull %6), !dbg !2627
  call void @llvm.dbg.value(metadata i32 %77, metadata !2507, metadata !DIExpression()), !dbg !2550
  br label %87, !dbg !2629

78:                                               ; preds = %71
  call void @llvm.dbg.value(metadata i8* %73, metadata !2503, metadata !DIExpression()), !dbg !2550
  %79 = icmp eq i8 %74, 42, !dbg !2630
  br i1 %79, label %80, label %87, !dbg !2631

80:                                               ; preds = %78
  %81 = getelementptr inbounds i8, i8* %67, i32 4, !dbg !2632
  call void @llvm.dbg.value(metadata i8* %81, metadata !2504, metadata !DIExpression()), !dbg !2550
  %82 = bitcast i8* %67 to i32*, !dbg !2632
  %83 = load i32, i32* %82, align 4, !dbg !2632
  call void @llvm.dbg.value(metadata i32 %83, metadata !2515, metadata !DIExpression()), !dbg !2633
  %84 = icmp sgt i32 %83, 0, !dbg !2634
  %85 = select i1 %84, i32 %83, i32 0, !dbg !2635
  call void @llvm.dbg.value(metadata i32 %85, metadata !2507, metadata !DIExpression()), !dbg !2550
  %86 = getelementptr inbounds i8, i8* %68, i32 2, !dbg !2636
  call void @llvm.dbg.value(metadata i8* %86, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %86, i8** %6, align 4, !dbg !2636, !tbaa !2551
  br label %87, !dbg !2637

87:                                               ; preds = %76, %80, %78, %64
  %88 = phi i32 [ %77, %76 ], [ %85, %80 ], [ 0, %78 ], [ 0, %64 ], !dbg !2598
  %89 = phi i32 [ %72, %76 ], [ %72, %80 ], [ %72, %78 ], [ %66, %64 ], !dbg !2598
  %90 = phi i8* [ %67, %76 ], [ %81, %80 ], [ %67, %78 ], [ %67, %64 ]
  call void @llvm.dbg.value(metadata i8* %90, metadata !2504, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata i32 %89, metadata !2505, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata i32 %88, metadata !2507, metadata !DIExpression()), !dbg !2550
  %91 = load i8*, i8** %6, align 4, !dbg !2638, !tbaa !2551
  call void @llvm.dbg.value(metadata i8* %91, metadata !2503, metadata !DIExpression()), !dbg !2550
  %92 = load i8, i8* %91, align 1, !dbg !2639, !tbaa !2561
  %93 = zext i8 %92 to i32, !dbg !2639
  %94 = add nsw i32 %93, -104, !dbg !2640
  %95 = call i32 @llvm.fshl.i32(i32 %94, i32 %94, i32 31), !dbg !2640
  switch i32 %95, label %121 [
    i32 2, label %96
    i32 0, label %104
    i32 6, label %112
    i32 1, label %115
    i32 9, label %118
  ], !dbg !2640

96:                                               ; preds = %87
  %97 = or i32 %89, 256, !dbg !2641
  call void @llvm.dbg.value(metadata i32 %97, metadata !2505, metadata !DIExpression()), !dbg !2550
  %98 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !2643
  call void @llvm.dbg.value(metadata i8* %98, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %98, i8** %6, align 4, !dbg !2643, !tbaa !2551
  %99 = load i8, i8* %98, align 1, !dbg !2644, !tbaa !2561
  %100 = icmp eq i8 %99, 108, !dbg !2646
  br i1 %100, label %101, label %121, !dbg !2647

101:                                              ; preds = %96
  %102 = or i32 %89, 768, !dbg !2648
  call void @llvm.dbg.value(metadata i32 %102, metadata !2505, metadata !DIExpression()), !dbg !2550
  %103 = getelementptr inbounds i8, i8* %91, i32 2, !dbg !2650
  call void @llvm.dbg.value(metadata i8* %103, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %103, i8** %6, align 4, !dbg !2650, !tbaa !2551
  br label %121, !dbg !2651

104:                                              ; preds = %87
  %105 = or i32 %89, 128, !dbg !2652
  call void @llvm.dbg.value(metadata i32 %105, metadata !2505, metadata !DIExpression()), !dbg !2550
  %106 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !2653
  call void @llvm.dbg.value(metadata i8* %106, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %106, i8** %6, align 4, !dbg !2653, !tbaa !2551
  %107 = load i8, i8* %106, align 1, !dbg !2654, !tbaa !2561
  %108 = icmp eq i8 %107, 104, !dbg !2656
  br i1 %108, label %109, label %121, !dbg !2657

109:                                              ; preds = %104
  %110 = or i32 %89, 192, !dbg !2658
  call void @llvm.dbg.value(metadata i32 %110, metadata !2505, metadata !DIExpression()), !dbg !2550
  %111 = getelementptr inbounds i8, i8* %91, i32 2, !dbg !2660
  call void @llvm.dbg.value(metadata i8* %111, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %111, i8** %6, align 4, !dbg !2660, !tbaa !2551
  br label %121, !dbg !2661

112:                                              ; preds = %87
  %113 = or i32 %89, 256, !dbg !2662
  call void @llvm.dbg.value(metadata i32 %113, metadata !2505, metadata !DIExpression()), !dbg !2550
  %114 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !2663
  call void @llvm.dbg.value(metadata i8* %114, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %114, i8** %6, align 4, !dbg !2663, !tbaa !2551
  br label %121, !dbg !2664

115:                                              ; preds = %87
  %116 = or i32 %89, 512, !dbg !2665
  call void @llvm.dbg.value(metadata i32 %116, metadata !2505, metadata !DIExpression()), !dbg !2550
  %117 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !2666
  call void @llvm.dbg.value(metadata i8* %117, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %117, i8** %6, align 4, !dbg !2666, !tbaa !2551
  br label %121, !dbg !2667

118:                                              ; preds = %87
  %119 = or i32 %89, 256, !dbg !2668
  call void @llvm.dbg.value(metadata i32 %119, metadata !2505, metadata !DIExpression()), !dbg !2550
  %120 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !2669
  call void @llvm.dbg.value(metadata i8* %120, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %120, i8** %6, align 4, !dbg !2669, !tbaa !2551
  br label %121, !dbg !2670

121:                                              ; preds = %87, %104, %109, %96, %101, %118, %115, %112
  %122 = phi i32 [ %89, %87 ], [ %119, %118 ], [ %116, %115 ], [ %113, %112 ], [ %110, %109 ], [ %105, %104 ], [ %102, %101 ], [ %97, %96 ], !dbg !2598
  call void @llvm.dbg.value(metadata i32 %122, metadata !2505, metadata !DIExpression()), !dbg !2550
  %123 = load i8*, i8** %6, align 4, !dbg !2671, !tbaa !2551
  call void @llvm.dbg.value(metadata i8* %123, metadata !2503, metadata !DIExpression()), !dbg !2550
  %124 = load i8, i8* %123, align 1, !dbg !2672, !tbaa !2561
  switch i8 %124, label %350 [
    i8 37, label %346
    i8 112, label %337
    i8 115, label %278
    i8 99, label %244
    i8 70, label %233
    i8 102, label %233
    i8 120, label %129
    i8 88, label %129
    i8 111, label %125
    i8 98, label %126
    i8 100, label %127
    i8 105, label %127
    i8 117, label %127
  ], !dbg !2673

125:                                              ; preds = %121
  call void @llvm.dbg.value(metadata i32 8, metadata !2521, metadata !DIExpression()), !dbg !2674
  br label %129, !dbg !2675

126:                                              ; preds = %121
  call void @llvm.dbg.value(metadata i32 2, metadata !2521, metadata !DIExpression()), !dbg !2674
  br label %129, !dbg !2679

127:                                              ; preds = %121, %121, %121
  call void @llvm.dbg.value(metadata i32 10, metadata !2521, metadata !DIExpression()), !dbg !2674
  %128 = and i32 %122, -17, !dbg !2682
  call void @llvm.dbg.value(metadata i32 %128, metadata !2505, metadata !DIExpression()), !dbg !2550
  br label %129

129:                                              ; preds = %121, %121, %125, %127, %126
  %130 = phi i32 [ 8, %125 ], [ 2, %126 ], [ 10, %127 ], [ 16, %121 ], [ 16, %121 ], !dbg !2684
  %131 = phi i32 [ %122, %125 ], [ %122, %126 ], [ %128, %127 ], [ %122, %121 ], [ %122, %121 ], !dbg !2598
  call void @llvm.dbg.value(metadata i32 %131, metadata !2505, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata i32 %130, metadata !2521, metadata !DIExpression()), !dbg !2674
  call void @llvm.dbg.value(metadata i8* %123, metadata !2503, metadata !DIExpression()), !dbg !2550
  %132 = icmp eq i8 %124, 88, !dbg !2685
  %133 = or i32 %131, 32
  %134 = select i1 %132, i32 %133, i32 %131, !dbg !2687
  call void @llvm.dbg.value(metadata i32 %134, metadata !2505, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata i8* %123, metadata !2503, metadata !DIExpression()), !dbg !2550
  switch i8 %124, label %135 [
    i8 105, label %137
    i8 100, label %137
  ], !dbg !2688

135:                                              ; preds = %129
  %136 = and i32 %134, -13, !dbg !2690
  call void @llvm.dbg.value(metadata i32 %136, metadata !2505, metadata !DIExpression()), !dbg !2550
  br label %137, !dbg !2692

137:                                              ; preds = %129, %129, %135
  %138 = phi i32 [ %136, %135 ], [ %134, %129 ], [ %134, %129 ], !dbg !2674
  call void @llvm.dbg.value(metadata i32 %138, metadata !2505, metadata !DIExpression()), !dbg !2550
  %139 = and i32 %138, 1024, !dbg !2693
  %140 = icmp eq i32 %139, 0, !dbg !2693
  %141 = and i32 %138, -2
  %142 = select i1 %140, i32 %138, i32 %141, !dbg !2695
  call void @llvm.dbg.value(metadata i32 %142, metadata !2505, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata i8* %123, metadata !2503, metadata !DIExpression()), !dbg !2550
  switch i8 %124, label %189 [
    i8 105, label %143
    i8 100, label %143
  ], !dbg !2696

143:                                              ; preds = %137, %137
  %144 = and i32 %142, 512, !dbg !2697
  %145 = icmp eq i32 %144, 0, !dbg !2697
  br i1 %145, label %158, label %146, !dbg !2698

146:                                              ; preds = %143
  %147 = ptrtoint i8* %90 to i32, !dbg !2699
  %148 = add i32 %147, 7, !dbg !2699
  %149 = and i32 %148, -8, !dbg !2699
  %150 = inttoptr i32 %149 to i8*, !dbg !2699
  %151 = getelementptr inbounds i8, i8* %150, i32 8, !dbg !2699
  call void @llvm.dbg.value(metadata i8* %151, metadata !2504, metadata !DIExpression()), !dbg !2550
  %152 = inttoptr i32 %149 to i64*, !dbg !2699
  %153 = load i64, i64* %152, align 8, !dbg !2699
  call void @llvm.dbg.value(metadata i64 %153, metadata !2524, metadata !DIExpression()), !dbg !2700
  %154 = call i64 @llvm.abs.i64(i64 %153, i1 true), !dbg !2701
  %155 = icmp slt i64 %153, 0, !dbg !2702
  %156 = zext i32 %130 to i64, !dbg !2703
  %157 = call fastcc i32 @_ntoa_long_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i64 noundef %154, i1 noundef zeroext %155, i64 noundef %156, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !2704
  call void @llvm.dbg.value(metadata i32 %157, metadata !2509, metadata !DIExpression()), !dbg !2550
  br label %228, !dbg !2705

158:                                              ; preds = %143
  %159 = and i32 %142, 256, !dbg !2706
  %160 = icmp eq i32 %159, 0, !dbg !2706
  br i1 %160, label %168, label %161, !dbg !2707

161:                                              ; preds = %158
  %162 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !2708
  call void @llvm.dbg.value(metadata i8* %162, metadata !2504, metadata !DIExpression()), !dbg !2550
  %163 = bitcast i8* %90 to i32*, !dbg !2708
  %164 = load i32, i32* %163, align 4, !dbg !2708
  call void @llvm.dbg.value(metadata i32 %164, metadata !2530, metadata !DIExpression()), !dbg !2709
  %165 = call i32 @llvm.abs.i32(i32 %164, i1 true), !dbg !2710
  %166 = icmp slt i32 %164, 0, !dbg !2711
  %167 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %165, i1 noundef zeroext %166, i32 noundef %130, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !2712
  call void @llvm.dbg.value(metadata i32 %167, metadata !2509, metadata !DIExpression()), !dbg !2550
  br label %228, !dbg !2713

168:                                              ; preds = %158
  %169 = and i32 %142, 64, !dbg !2714
  %170 = icmp eq i32 %169, 0, !dbg !2714
  br i1 %170, label %175, label %171, !dbg !2715

171:                                              ; preds = %168
  call void @llvm.dbg.value(metadata i8* %90, metadata !2504, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !2550
  %172 = bitcast i8* %90 to i32*, !dbg !2716
  %173 = load i32, i32* %172, align 4, !dbg !2716
  %174 = and i32 %173, 255, !dbg !2717
  br label %183, !dbg !2715

175:                                              ; preds = %168
  %176 = and i32 %142, 128, !dbg !2718
  %177 = icmp eq i32 %176, 0, !dbg !2718
  call void @llvm.dbg.value(metadata i8* %90, metadata !2504, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !2550
  call void @llvm.dbg.value(metadata i8* %90, metadata !2504, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !2550
  %178 = bitcast i8* %90 to i32*, !dbg !2719
  %179 = load i32, i32* %178, align 4, !dbg !2719
  br i1 %177, label %183, label %180, !dbg !2720

180:                                              ; preds = %175
  %181 = shl i32 %179, 16, !dbg !2721
  %182 = ashr exact i32 %181, 16, !dbg !2721
  br label %183, !dbg !2720

183:                                              ; preds = %175, %180, %171
  %184 = phi i32 [ %174, %171 ], [ %182, %180 ], [ %179, %175 ], !dbg !2715
  %185 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !2719
  call void @llvm.dbg.value(metadata i8* %185, metadata !2504, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata i32 %184, metadata !2534, metadata !DIExpression()), !dbg !2719
  %186 = call i32 @llvm.abs.i32(i32 %184, i1 true), !dbg !2722
  %187 = icmp slt i32 %184, 0, !dbg !2723
  %188 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %186, i1 noundef zeroext %187, i32 noundef %130, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !2724
  call void @llvm.dbg.value(metadata i32 %188, metadata !2509, metadata !DIExpression()), !dbg !2550
  br label %228

189:                                              ; preds = %137
  %190 = and i32 %142, 512, !dbg !2725
  %191 = icmp eq i32 %190, 0, !dbg !2725
  br i1 %191, label %202, label %192, !dbg !2726

192:                                              ; preds = %189
  %193 = ptrtoint i8* %90 to i32, !dbg !2727
  %194 = add i32 %193, 7, !dbg !2727
  %195 = and i32 %194, -8, !dbg !2727
  %196 = inttoptr i32 %195 to i8*, !dbg !2727
  %197 = getelementptr inbounds i8, i8* %196, i32 8, !dbg !2727
  call void @llvm.dbg.value(metadata i8* %197, metadata !2504, metadata !DIExpression()), !dbg !2550
  %198 = inttoptr i32 %195 to i64*, !dbg !2727
  %199 = load i64, i64* %198, align 8, !dbg !2727
  %200 = zext i32 %130 to i64, !dbg !2729
  %201 = call fastcc i32 @_ntoa_long_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i64 noundef %199, i1 noundef zeroext false, i64 noundef %200, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !2730
  call void @llvm.dbg.value(metadata i32 %201, metadata !2509, metadata !DIExpression()), !dbg !2550
  br label %228, !dbg !2731

202:                                              ; preds = %189
  %203 = and i32 %142, 256, !dbg !2732
  %204 = icmp eq i32 %203, 0, !dbg !2732
  br i1 %204, label %210, label %205, !dbg !2733

205:                                              ; preds = %202
  %206 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !2734
  call void @llvm.dbg.value(metadata i8* %206, metadata !2504, metadata !DIExpression()), !dbg !2550
  %207 = bitcast i8* %90 to i32*, !dbg !2734
  %208 = load i32, i32* %207, align 4, !dbg !2734
  %209 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %208, i1 noundef zeroext false, i32 noundef %130, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !2736
  call void @llvm.dbg.value(metadata i32 %209, metadata !2509, metadata !DIExpression()), !dbg !2550
  br label %228, !dbg !2737

210:                                              ; preds = %202
  %211 = and i32 %142, 64, !dbg !2738
  %212 = icmp eq i32 %211, 0, !dbg !2738
  br i1 %212, label %217, label %213, !dbg !2739

213:                                              ; preds = %210
  call void @llvm.dbg.value(metadata i8* %90, metadata !2504, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !2550
  %214 = bitcast i8* %90 to i32*, !dbg !2740
  %215 = load i32, i32* %214, align 4, !dbg !2740
  %216 = and i32 %215, 255, !dbg !2741
  br label %224, !dbg !2739

217:                                              ; preds = %210
  %218 = and i32 %142, 128, !dbg !2742
  %219 = icmp eq i32 %218, 0, !dbg !2742
  call void @llvm.dbg.value(metadata i8* %90, metadata !2504, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !2550
  call void @llvm.dbg.value(metadata i8* %90, metadata !2504, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !2550
  %220 = bitcast i8* %90 to i32*, !dbg !2743
  %221 = load i32, i32* %220, align 4, !dbg !2743
  %222 = and i32 %221, 65535
  %223 = select i1 %219, i32 %221, i32 %222, !dbg !2744
  br label %224, !dbg !2744

224:                                              ; preds = %217, %213
  %225 = phi i32 [ %216, %213 ], [ %223, %217 ], !dbg !2739
  %226 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !2743
  call void @llvm.dbg.value(metadata i8* %226, metadata !2504, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata i32 %225, metadata !2536, metadata !DIExpression()), !dbg !2743
  %227 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %225, i1 noundef zeroext false, i32 noundef %130, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !2745
  call void @llvm.dbg.value(metadata i32 %227, metadata !2509, metadata !DIExpression()), !dbg !2550
  br label %228

228:                                              ; preds = %192, %224, %205, %146, %183, %161
  %229 = phi i32 [ %157, %146 ], [ %167, %161 ], [ %188, %183 ], [ %201, %192 ], [ %209, %205 ], [ %227, %224 ], !dbg !2746
  %230 = phi i8* [ %151, %146 ], [ %162, %161 ], [ %185, %183 ], [ %197, %192 ], [ %206, %205 ], [ %226, %224 ], !dbg !2746
  call void @llvm.dbg.value(metadata i8* %230, metadata !2504, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata i32 %229, metadata !2509, metadata !DIExpression()), !dbg !2550
  %231 = load i8*, i8** %6, align 4, !dbg !2747, !tbaa !2551
  call void @llvm.dbg.value(metadata i8* %231, metadata !2503, metadata !DIExpression()), !dbg !2550
  %232 = getelementptr inbounds i8, i8* %231, i32 1, !dbg !2747
  call void @llvm.dbg.value(metadata i8* %232, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %232, i8** %6, align 4, !dbg !2747, !tbaa !2551
  br label %354

233:                                              ; preds = %121, %121
  %234 = ptrtoint i8* %90 to i32, !dbg !2748
  %235 = add i32 %234, 7, !dbg !2748
  %236 = and i32 %235, -8, !dbg !2748
  %237 = inttoptr i32 %236 to i8*, !dbg !2748
  %238 = getelementptr inbounds i8, i8* %237, i32 8, !dbg !2748
  call void @llvm.dbg.value(metadata i8* %238, metadata !2504, metadata !DIExpression()), !dbg !2550
  %239 = inttoptr i32 %236 to double*, !dbg !2748
  %240 = load double, double* %239, align 8, !dbg !2748
  %241 = call fastcc i32 @_ftoa(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, double noundef %240, i32 noundef %88, i32 noundef %65, i32 noundef %122), !dbg !2749
  call void @llvm.dbg.value(metadata i32 %241, metadata !2509, metadata !DIExpression()), !dbg !2550
  %242 = load i8*, i8** %6, align 4, !dbg !2750, !tbaa !2551
  call void @llvm.dbg.value(metadata i8* %242, metadata !2503, metadata !DIExpression()), !dbg !2550
  %243 = getelementptr inbounds i8, i8* %242, i32 1, !dbg !2750
  call void @llvm.dbg.value(metadata i8* %243, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %243, i8** %6, align 4, !dbg !2750, !tbaa !2551
  br label %354, !dbg !2751

244:                                              ; preds = %121
  call void @llvm.dbg.value(metadata i32 1, metadata !2542, metadata !DIExpression()), !dbg !2752
  %245 = and i32 %122, 2, !dbg !2753
  %246 = icmp eq i32 %245, 0, !dbg !2753
  br i1 %246, label %247, label %257, !dbg !2755

247:                                              ; preds = %244
  call void @llvm.dbg.value(metadata i32 1, metadata !2542, metadata !DIExpression()), !dbg !2752
  call void @llvm.dbg.value(metadata i32 %15, metadata !2509, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata i32 2, metadata !2542, metadata !DIExpression()), !dbg !2752
  %248 = icmp ugt i32 %65, 1, !dbg !2756
  br i1 %248, label %249, label %257, !dbg !2758

249:                                              ; preds = %247
  %250 = add i32 %65, 1, !dbg !2758
  br label %251, !dbg !2758

251:                                              ; preds = %249, %251
  %252 = phi i32 [ %255, %251 ], [ 2, %249 ]
  %253 = phi i32 [ %254, %251 ], [ %15, %249 ]
  call void @llvm.dbg.value(metadata i32 %253, metadata !2509, metadata !DIExpression()), !dbg !2550
  %254 = add i32 %253, 1, !dbg !2759
  call void @llvm.dbg.value(metadata i32 %254, metadata !2509, metadata !DIExpression()), !dbg !2550
  call void %10(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %253, i32 noundef %2) #33, !dbg !2761, !callees !2566
  call void @llvm.dbg.value(metadata i32 %252, metadata !2542, metadata !DIExpression()), !dbg !2752
  %255 = add i32 %252, 1, !dbg !2762
  call void @llvm.dbg.value(metadata i32 %255, metadata !2542, metadata !DIExpression()), !dbg !2752
  %256 = icmp eq i32 %252, %65, !dbg !2756
  br i1 %256, label %257, label %251, !dbg !2758, !llvm.loop !2763

257:                                              ; preds = %251, %247, %244
  %258 = phi i32 [ %15, %244 ], [ %15, %247 ], [ %254, %251 ], !dbg !2765
  %259 = phi i32 [ 1, %244 ], [ 2, %247 ], [ %250, %251 ], !dbg !2752
  call void @llvm.dbg.value(metadata i32 %259, metadata !2542, metadata !DIExpression()), !dbg !2752
  call void @llvm.dbg.value(metadata i32 %258, metadata !2509, metadata !DIExpression()), !dbg !2550
  %260 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !2766
  call void @llvm.dbg.value(metadata i8* %260, metadata !2504, metadata !DIExpression()), !dbg !2550
  %261 = bitcast i8* %90 to i32*, !dbg !2766
  %262 = load i32, i32* %261, align 4, !dbg !2766
  %263 = trunc i32 %262 to i8, !dbg !2767
  %264 = add i32 %258, 1, !dbg !2768
  call void @llvm.dbg.value(metadata i32 %264, metadata !2509, metadata !DIExpression()), !dbg !2550
  call void %10(i8 noundef zeroext %263, i8* noundef %1, i32 noundef %258, i32 noundef %2) #33, !dbg !2769, !callees !2566
  %265 = xor i1 %246, true, !dbg !2770
  %266 = icmp ult i32 %259, %65
  %267 = select i1 %265, i1 %266, i1 false, !dbg !2770
  call void @llvm.dbg.value(metadata i32 %259, metadata !2542, metadata !DIExpression()), !dbg !2752
  call void @llvm.dbg.value(metadata i32 %264, metadata !2509, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata i32 %259, metadata !2542, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2752
  br i1 %267, label %268, label %274, !dbg !2770

268:                                              ; preds = %257, %268
  %269 = phi i32 [ %271, %268 ], [ %259, %257 ]
  %270 = phi i32 [ %272, %268 ], [ %264, %257 ]
  call void @llvm.dbg.value(metadata i32 %269, metadata !2542, metadata !DIExpression()), !dbg !2752
  call void @llvm.dbg.value(metadata i32 %270, metadata !2509, metadata !DIExpression()), !dbg !2550
  %271 = add nuw i32 %269, 1, !dbg !2771
  call void @llvm.dbg.value(metadata i32 %271, metadata !2542, metadata !DIExpression()), !dbg !2752
  %272 = add i32 %270, 1, !dbg !2774
  call void @llvm.dbg.value(metadata i32 %272, metadata !2509, metadata !DIExpression()), !dbg !2550
  call void %10(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %270, i32 noundef %2) #33, !dbg !2776, !callees !2566
  call void @llvm.dbg.value(metadata i32 %271, metadata !2542, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2752
  %273 = icmp eq i32 %271, %65, !dbg !2777
  br i1 %273, label %274, label %268, !dbg !2778, !llvm.loop !2779

274:                                              ; preds = %268, %257
  %275 = phi i32 [ %264, %257 ], [ %272, %268 ], !dbg !2768
  call void @llvm.dbg.value(metadata i32 %275, metadata !2509, metadata !DIExpression()), !dbg !2550
  %276 = load i8*, i8** %6, align 4, !dbg !2781, !tbaa !2551
  call void @llvm.dbg.value(metadata i8* %276, metadata !2503, metadata !DIExpression()), !dbg !2550
  %277 = getelementptr inbounds i8, i8* %276, i32 1, !dbg !2781
  call void @llvm.dbg.value(metadata i8* %277, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %277, i8** %6, align 4, !dbg !2781, !tbaa !2551
  br label %354

278:                                              ; preds = %121
  %279 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !2782
  call void @llvm.dbg.value(metadata i8* %279, metadata !2504, metadata !DIExpression()), !dbg !2550
  %280 = bitcast i8* %90 to i8**, !dbg !2782
  %281 = load i8*, i8** %280, align 4, !dbg !2782
  call void @llvm.dbg.value(metadata i8* %281, metadata !2544, metadata !DIExpression()), !dbg !2783
  %282 = icmp eq i32 %88, 0, !dbg !2784
  %283 = select i1 %282, i32 -1, i32 %88, !dbg !2784
  %284 = call fastcc i32 @_strnlen_s(i8* noundef %281, i32 noundef %283), !dbg !2785
  call void @llvm.dbg.value(metadata i32 %284, metadata !2546, metadata !DIExpression()), !dbg !2783
  %285 = and i32 %122, 1024, !dbg !2786
  %286 = icmp eq i32 %285, 0, !dbg !2786
  %287 = icmp ult i32 %284, %88, !dbg !2788
  %288 = select i1 %286, i1 true, i1 %287, !dbg !2788
  %289 = select i1 %288, i32 %284, i32 %88, !dbg !2788
  call void @llvm.dbg.value(metadata i32 %289, metadata !2546, metadata !DIExpression()), !dbg !2783
  %290 = and i32 %122, 2, !dbg !2789
  %291 = icmp eq i32 %290, 0, !dbg !2789
  br i1 %291, label %292, label %303, !dbg !2791

292:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 %289, metadata !2546, metadata !DIExpression()), !dbg !2783
  call void @llvm.dbg.value(metadata i32 %15, metadata !2509, metadata !DIExpression()), !dbg !2550
  %293 = add i32 %289, 1, !dbg !2792
  call void @llvm.dbg.value(metadata i32 %293, metadata !2546, metadata !DIExpression()), !dbg !2783
  %294 = icmp ult i32 %289, %65, !dbg !2794
  br i1 %294, label %295, label %303, !dbg !2795

295:                                              ; preds = %292
  %296 = add i32 %65, 1, !dbg !2795
  br label %297, !dbg !2795

297:                                              ; preds = %295, %297
  %298 = phi i32 [ %301, %297 ], [ %293, %295 ]
  %299 = phi i32 [ %300, %297 ], [ %15, %295 ]
  call void @llvm.dbg.value(metadata i32 %299, metadata !2509, metadata !DIExpression()), !dbg !2550
  %300 = add i32 %299, 1, !dbg !2796
  call void @llvm.dbg.value(metadata i32 %300, metadata !2509, metadata !DIExpression()), !dbg !2550
  call void %10(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %299, i32 noundef %2) #33, !dbg !2798, !callees !2566
  call void @llvm.dbg.value(metadata i32 %298, metadata !2546, metadata !DIExpression()), !dbg !2783
  %301 = add i32 %298, 1, !dbg !2792
  call void @llvm.dbg.value(metadata i32 %301, metadata !2546, metadata !DIExpression()), !dbg !2783
  %302 = icmp eq i32 %298, %65, !dbg !2794
  br i1 %302, label %303, label %297, !dbg !2795, !llvm.loop !2799

303:                                              ; preds = %297, %292, %278
  %304 = phi i32 [ %15, %278 ], [ %15, %292 ], [ %300, %297 ], !dbg !2765
  %305 = phi i32 [ %289, %278 ], [ %293, %292 ], [ %296, %297 ], !dbg !2783
  call void @llvm.dbg.value(metadata i32 %305, metadata !2546, metadata !DIExpression()), !dbg !2783
  call void @llvm.dbg.value(metadata i32 %304, metadata !2509, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata i8* %281, metadata !2544, metadata !DIExpression()), !dbg !2783
  call void @llvm.dbg.value(metadata i32 %88, metadata !2507, metadata !DIExpression()), !dbg !2550
  %306 = load i8, i8* %281, align 1, !dbg !2801, !tbaa !2561
  %307 = icmp eq i8 %306, 0, !dbg !2802
  br i1 %307, label %322, label %308, !dbg !2803

308:                                              ; preds = %303, %316
  %309 = phi i8 [ %320, %316 ], [ %306, %303 ]
  %310 = phi i8* [ %318, %316 ], [ %281, %303 ]
  %311 = phi i32 [ %317, %316 ], [ %88, %303 ]
  %312 = phi i32 [ %319, %316 ], [ %304, %303 ]
  call void @llvm.dbg.value(metadata i8* %310, metadata !2544, metadata !DIExpression()), !dbg !2783
  call void @llvm.dbg.value(metadata i32 %311, metadata !2507, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata i32 %312, metadata !2509, metadata !DIExpression()), !dbg !2550
  br i1 %286, label %316, label %313, !dbg !2804

313:                                              ; preds = %308
  %314 = add i32 %311, -1, !dbg !2805
  call void @llvm.dbg.value(metadata i32 %314, metadata !2507, metadata !DIExpression()), !dbg !2550
  %315 = icmp eq i32 %311, 0, !dbg !2804
  br i1 %315, label %322, label %316, !dbg !2806

316:                                              ; preds = %308, %313
  %317 = phi i32 [ %314, %313 ], [ %311, %308 ], !dbg !2598
  call void @llvm.dbg.value(metadata i32 %317, metadata !2507, metadata !DIExpression()), !dbg !2550
  %318 = getelementptr inbounds i8, i8* %310, i32 1, !dbg !2807
  call void @llvm.dbg.value(metadata i8* %318, metadata !2544, metadata !DIExpression()), !dbg !2783
  %319 = add i32 %312, 1, !dbg !2809
  call void @llvm.dbg.value(metadata i32 %319, metadata !2509, metadata !DIExpression()), !dbg !2550
  call void %10(i8 noundef zeroext %309, i8* noundef %1, i32 noundef %312, i32 noundef %2) #33, !dbg !2810, !callees !2566
  %320 = load i8, i8* %318, align 1, !dbg !2801, !tbaa !2561
  %321 = icmp eq i8 %320, 0, !dbg !2802
  br i1 %321, label %322, label %308, !dbg !2803, !llvm.loop !2811

322:                                              ; preds = %313, %316, %303
  %323 = phi i32 [ %304, %303 ], [ %312, %313 ], [ %319, %316 ], !dbg !2550
  %324 = xor i1 %291, true, !dbg !2813
  %325 = icmp ult i32 %305, %65
  %326 = select i1 %324, i1 %325, i1 false, !dbg !2813
  call void @llvm.dbg.value(metadata i32 %305, metadata !2546, metadata !DIExpression()), !dbg !2783
  call void @llvm.dbg.value(metadata i32 %323, metadata !2509, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata i32 %305, metadata !2546, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2783
  br i1 %326, label %327, label %333, !dbg !2813

327:                                              ; preds = %322, %327
  %328 = phi i32 [ %330, %327 ], [ %305, %322 ]
  %329 = phi i32 [ %331, %327 ], [ %323, %322 ]
  call void @llvm.dbg.value(metadata i32 %328, metadata !2546, metadata !DIExpression()), !dbg !2783
  call void @llvm.dbg.value(metadata i32 %329, metadata !2509, metadata !DIExpression()), !dbg !2550
  %330 = add nuw i32 %328, 1, !dbg !2814
  call void @llvm.dbg.value(metadata i32 %330, metadata !2546, metadata !DIExpression()), !dbg !2783
  %331 = add i32 %329, 1, !dbg !2817
  call void @llvm.dbg.value(metadata i32 %331, metadata !2509, metadata !DIExpression()), !dbg !2550
  call void %10(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %329, i32 noundef %2) #33, !dbg !2819, !callees !2566
  call void @llvm.dbg.value(metadata i32 %330, metadata !2546, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2783
  %332 = icmp eq i32 %330, %65, !dbg !2820
  br i1 %332, label %333, label %327, !dbg !2821, !llvm.loop !2822

333:                                              ; preds = %327, %322
  %334 = phi i32 [ %323, %322 ], [ %331, %327 ], !dbg !2765
  call void @llvm.dbg.value(metadata i32 %334, metadata !2509, metadata !DIExpression()), !dbg !2550
  %335 = load i8*, i8** %6, align 4, !dbg !2824, !tbaa !2551
  call void @llvm.dbg.value(metadata i8* %335, metadata !2503, metadata !DIExpression()), !dbg !2550
  %336 = getelementptr inbounds i8, i8* %335, i32 1, !dbg !2824
  call void @llvm.dbg.value(metadata i8* %336, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %336, i8** %6, align 4, !dbg !2824, !tbaa !2551
  br label %354

337:                                              ; preds = %121
  call void @llvm.dbg.value(metadata i32 8, metadata !2506, metadata !DIExpression()), !dbg !2550
  %338 = or i32 %122, 33, !dbg !2825
  call void @llvm.dbg.value(metadata i32 %338, metadata !2505, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.value(metadata i8 0, metadata !2547, metadata !DIExpression()), !dbg !2826
  %339 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !2827
  call void @llvm.dbg.value(metadata i8* %339, metadata !2504, metadata !DIExpression()), !dbg !2550
  %340 = bitcast i8* %90 to i8**, !dbg !2827
  %341 = load i8*, i8** %340, align 4, !dbg !2827
  %342 = ptrtoint i8* %341 to i32, !dbg !2830
  %343 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %342, i1 noundef zeroext false, i32 noundef 16, i32 noundef %88, i32 noundef 8, i32 noundef %338), !dbg !2831
  call void @llvm.dbg.value(metadata i32 %343, metadata !2509, metadata !DIExpression()), !dbg !2550
  %344 = load i8*, i8** %6, align 4, !dbg !2832, !tbaa !2551
  call void @llvm.dbg.value(metadata i8* %344, metadata !2503, metadata !DIExpression()), !dbg !2550
  %345 = getelementptr inbounds i8, i8* %344, i32 1, !dbg !2832
  call void @llvm.dbg.value(metadata i8* %345, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %345, i8** %6, align 4, !dbg !2832, !tbaa !2551
  br label %354

346:                                              ; preds = %121
  %347 = add i32 %15, 1, !dbg !2833
  call void @llvm.dbg.value(metadata i32 %347, metadata !2509, metadata !DIExpression()), !dbg !2550
  call void %10(i8 noundef zeroext 37, i8* noundef %1, i32 noundef %15, i32 noundef %2) #33, !dbg !2834, !callees !2566
  %348 = load i8*, i8** %6, align 4, !dbg !2835, !tbaa !2551
  call void @llvm.dbg.value(metadata i8* %348, metadata !2503, metadata !DIExpression()), !dbg !2550
  %349 = getelementptr inbounds i8, i8* %348, i32 1, !dbg !2835
  call void @llvm.dbg.value(metadata i8* %349, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %349, i8** %6, align 4, !dbg !2835, !tbaa !2551
  br label %354, !dbg !2836

350:                                              ; preds = %121
  %351 = add i32 %15, 1, !dbg !2837
  call void @llvm.dbg.value(metadata i32 %351, metadata !2509, metadata !DIExpression()), !dbg !2550
  call void %10(i8 noundef zeroext %124, i8* noundef %1, i32 noundef %15, i32 noundef %2) #33, !dbg !2838, !callees !2566
  %352 = load i8*, i8** %6, align 4, !dbg !2839, !tbaa !2551
  call void @llvm.dbg.value(metadata i8* %352, metadata !2503, metadata !DIExpression()), !dbg !2550
  %353 = getelementptr inbounds i8, i8* %352, i32 1, !dbg !2839
  call void @llvm.dbg.value(metadata i8* %353, metadata !2503, metadata !DIExpression()), !dbg !2550
  store i8* %353, i8** %6, align 4, !dbg !2839, !tbaa !2551
  br label %354, !dbg !2840

354:                                              ; preds = %350, %346, %337, %333, %274, %233, %228
  %355 = phi i32 [ %351, %350 ], [ %347, %346 ], [ %343, %337 ], [ %334, %333 ], [ %275, %274 ], [ %241, %233 ], [ %229, %228 ]
  %356 = phi i8* [ %90, %350 ], [ %90, %346 ], [ %339, %337 ], [ %279, %333 ], [ %260, %274 ], [ %238, %233 ], [ %230, %228 ]
  br label %11, !dbg !2558, !llvm.loop !2569

357:                                              ; preds = %14
  %358 = icmp ult i32 %15, %2, !dbg !2841
  %359 = add i32 %2, -1, !dbg !2842
  %360 = select i1 %358, i32 %15, i32 %359, !dbg !2842
  call void %10(i8 noundef zeroext 0, i8* noundef %1, i32 noundef %360, i32 noundef %2) #33, !dbg !2843, !callees !2566
  ret i32 %15, !dbg !2844
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #10

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define internal void @_out_null(i8 noundef zeroext %0, i8* nocapture noundef %1, i32 noundef %2, i32 noundef %3) #11 !dbg !2845 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2847, metadata !DIExpression()), !dbg !2851
  call void @llvm.dbg.value(metadata i8* %1, metadata !2848, metadata !DIExpression()), !dbg !2851
  call void @llvm.dbg.value(metadata i32 %2, metadata !2849, metadata !DIExpression()), !dbg !2851
  call void @llvm.dbg.value(metadata i32 %3, metadata !2850, metadata !DIExpression()), !dbg !2851
  ret void, !dbg !2852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define internal void @_out_buffer(i8 noundef zeroext %0, i8* nocapture noundef writeonly %1, i32 noundef %2, i32 noundef %3) #12 !dbg !2853 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2855, metadata !DIExpression()), !dbg !2859
  call void @llvm.dbg.value(metadata i8* %1, metadata !2856, metadata !DIExpression()), !dbg !2859
  call void @llvm.dbg.value(metadata i32 %2, metadata !2857, metadata !DIExpression()), !dbg !2859
  call void @llvm.dbg.value(metadata i32 %3, metadata !2858, metadata !DIExpression()), !dbg !2859
  %5 = icmp ult i32 %2, %3, !dbg !2860
  br i1 %5, label %6, label %8, !dbg !2862

6:                                                ; preds = %4
  %7 = getelementptr inbounds i8, i8* %1, i32 %2, !dbg !2863
  store i8 %0, i8* %7, align 1, !dbg !2865, !tbaa !2561
  br label %8, !dbg !2866

8:                                                ; preds = %6, %4
  ret void, !dbg !2867
}

; Function Attrs: noinline nounwind
define internal void @_out_fct(i8 noundef zeroext %0, i8* nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #4 !dbg !2868 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2870, metadata !DIExpression()), !dbg !2874
  call void @llvm.dbg.value(metadata i8* %1, metadata !2871, metadata !DIExpression()), !dbg !2874
  call void @llvm.dbg.value(metadata i32 %2, metadata !2872, metadata !DIExpression()), !dbg !2874
  call void @llvm.dbg.value(metadata i32 %3, metadata !2873, metadata !DIExpression()), !dbg !2874
  %5 = icmp eq i8 %0, 0, !dbg !2875
  br i1 %5, label %12, label %6, !dbg !2877

6:                                                ; preds = %4
  %7 = bitcast i8* %1 to void (i8, i8*)**, !dbg !2878
  %8 = load void (i8, i8*)*, void (i8, i8*)** %7, align 4, !dbg !2878, !tbaa !2880
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !2882
  %10 = bitcast i8* %9 to i8**, !dbg !2882
  %11 = load i8*, i8** %10, align 4, !dbg !2882, !tbaa !2883
  call void %8(i8 noundef zeroext %0, i8* noundef %11) #33, !dbg !2884
  br label %12, !dbg !2885

12:                                               ; preds = %6, %4
  ret void, !dbg !2886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define internal fastcc zeroext i1 @_is_digit(i8 noundef zeroext %0) unnamed_addr #11 !dbg !2887 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2891, metadata !DIExpression()), !dbg !2892
  %2 = add i8 %0, -48, !dbg !2893
  %3 = icmp ult i8 %2, 10, !dbg !2893
  ret i1 %3, !dbg !2894
}

; Function Attrs: nofree noinline norecurse nosync nounwind
define internal fastcc i32 @_atoi(i8** nocapture noundef %0) unnamed_addr #13 !dbg !2895 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !2900, metadata !DIExpression()), !dbg !2902
  call void @llvm.dbg.value(metadata i32 0, metadata !2901, metadata !DIExpression()), !dbg !2902
  %2 = load i8*, i8** %0, align 4, !dbg !2903, !tbaa !2551
  %3 = load i8, i8* %2, align 1, !dbg !2904, !tbaa !2561
  %4 = call fastcc zeroext i1 @_is_digit(i8 noundef zeroext %3), !dbg !2905
  br i1 %4, label %5, label %16, !dbg !2906

5:                                                ; preds = %1, %5
  %6 = phi i8* [ %9, %5 ], [ %2, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !2901, metadata !DIExpression()), !dbg !2902
  %8 = mul i32 %7, 10, !dbg !2907
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !2909
  store i8* %9, i8** %0, align 4, !dbg !2909, !tbaa !2551
  %10 = load i8, i8* %6, align 1, !dbg !2910, !tbaa !2561
  %11 = zext i8 %10 to i32, !dbg !2910
  %12 = add i32 %8, -48, !dbg !2911
  %13 = add i32 %12, %11, !dbg !2912
  call void @llvm.dbg.value(metadata i32 %13, metadata !2901, metadata !DIExpression()), !dbg !2902
  %14 = load i8, i8* %9, align 1, !dbg !2904, !tbaa !2561
  %15 = call fastcc zeroext i1 @_is_digit(i8 noundef zeroext %14), !dbg !2905
  br i1 %15, label %5, label %16, !dbg !2906, !llvm.loop !2913

16:                                               ; preds = %5, %1
  %17 = phi i32 [ 0, %1 ], [ %13, %5 ], !dbg !2902
  ret i32 %17, !dbg !2915
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.abs.i64(i64, i1 immarg) #1

; Function Attrs: noinline nounwind
define internal fastcc i32 @_ntoa_long_long(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i64 noundef %4, i1 noundef zeroext %5, i64 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %9) unnamed_addr #4 !dbg !2916 {
  %11 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !2920, metadata !DIExpression()), !dbg !2936
  call void @llvm.dbg.value(metadata i8* %1, metadata !2921, metadata !DIExpression()), !dbg !2936
  call void @llvm.dbg.value(metadata i32 %2, metadata !2922, metadata !DIExpression()), !dbg !2936
  call void @llvm.dbg.value(metadata i32 %3, metadata !2923, metadata !DIExpression()), !dbg !2936
  call void @llvm.dbg.value(metadata i64 %4, metadata !2924, metadata !DIExpression()), !dbg !2936
  call void @llvm.dbg.value(metadata i1 %5, metadata !2925, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2936
  call void @llvm.dbg.value(metadata i64 %6, metadata !2926, metadata !DIExpression()), !dbg !2936
  call void @llvm.dbg.value(metadata i32 %7, metadata !2927, metadata !DIExpression()), !dbg !2936
  call void @llvm.dbg.value(metadata i32 %8, metadata !2928, metadata !DIExpression()), !dbg !2936
  call void @llvm.dbg.value(metadata i32 %9, metadata !2929, metadata !DIExpression()), !dbg !2936
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 0, !dbg !2937
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #33, !dbg !2937
  call void @llvm.dbg.declare(metadata [32 x i8]* %11, metadata !2930, metadata !DIExpression()), !dbg !2938
  call void @llvm.dbg.value(metadata i32 0, metadata !2931, metadata !DIExpression()), !dbg !2936
  %13 = icmp ne i64 %4, 0, !dbg !2939
  %14 = and i32 %9, -17
  %15 = select i1 %13, i32 %9, i32 %14, !dbg !2941
  call void @llvm.dbg.value(metadata i32 %15, metadata !2929, metadata !DIExpression()), !dbg !2936
  %16 = and i32 %15, 1024, !dbg !2942
  %17 = icmp eq i32 %16, 0, !dbg !2942
  %18 = or i1 %13, %17, !dbg !2943
  br i1 %18, label %19, label %41, !dbg !2943

19:                                               ; preds = %10
  %20 = and i32 %15, 32
  %21 = xor i32 %20, 97
  %22 = add nuw nsw i32 %21, 246
  br label %23, !dbg !2944

23:                                               ; preds = %19, %23
  %24 = phi i32 [ %36, %23 ], [ 0, %19 ], !dbg !2936
  %25 = phi i64 [ %27, %23 ], [ %4, %19 ]
  call void @llvm.dbg.value(metadata i64 %25, metadata !2924, metadata !DIExpression()), !dbg !2936
  call void @llvm.dbg.value(metadata i32 %24, metadata !2931, metadata !DIExpression()), !dbg !2936
  %26 = freeze i64 %25
  %27 = udiv i64 %26, %6, !dbg !2945
  %28 = mul i64 %27, %6
  %29 = sub i64 %26, %28
  %30 = trunc i64 %29 to i32, !dbg !2946
  %31 = and i32 %30, 254, !dbg !2947
  call void @llvm.dbg.value(metadata i32 %30, metadata !2932, metadata !DIExpression()), !dbg !2948
  %32 = icmp ult i32 %31, 10, !dbg !2949
  %33 = select i1 %32, i32 48, i32 %22, !dbg !2947
  %34 = add i32 %33, %30, !dbg !2947
  %35 = trunc i32 %34 to i8, !dbg !2947
  %36 = add nuw nsw i32 %24, 1, !dbg !2950
  call void @llvm.dbg.value(metadata i32 %36, metadata !2931, metadata !DIExpression()), !dbg !2936
  %37 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 %24, !dbg !2951
  store i8 %35, i8* %37, align 1, !dbg !2952, !tbaa !2561
  call void @llvm.dbg.value(metadata i64 %27, metadata !2924, metadata !DIExpression()), !dbg !2936
  %38 = icmp uge i64 %25, %6, !dbg !2953
  %39 = icmp ult i32 %24, 31, !dbg !2954
  %40 = select i1 %38, i1 %39, i1 false, !dbg !2954
  br i1 %40, label %23, label %41, !dbg !2955, !llvm.loop !2956

41:                                               ; preds = %23, %10
  %42 = phi i32 [ 0, %10 ], [ %36, %23 ], !dbg !2936
  call void @llvm.dbg.value(metadata i32 %42, metadata !2931, metadata !DIExpression()), !dbg !2936
  %43 = trunc i64 %6 to i32, !dbg !2958
  %44 = call fastcc i32 @_ntoa_format(void (i8, i8*, i32, i32)* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef nonnull %12, i32 noundef %42, i1 noundef zeroext %5, i32 noundef %43, i32 noundef %7, i32 noundef %8, i32 noundef %15), !dbg !2959
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #33, !dbg !2960
  ret i32 %44, !dbg !2961
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #1

; Function Attrs: noinline nounwind
define internal fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i1 noundef zeroext %5, i32 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %9) unnamed_addr #4 !dbg !2962 {
  %11 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !2966, metadata !DIExpression()), !dbg !2982
  call void @llvm.dbg.value(metadata i8* %1, metadata !2967, metadata !DIExpression()), !dbg !2982
  call void @llvm.dbg.value(metadata i32 %2, metadata !2968, metadata !DIExpression()), !dbg !2982
  call void @llvm.dbg.value(metadata i32 %3, metadata !2969, metadata !DIExpression()), !dbg !2982
  call void @llvm.dbg.value(metadata i32 %4, metadata !2970, metadata !DIExpression()), !dbg !2982
  call void @llvm.dbg.value(metadata i1 %5, metadata !2971, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2982
  call void @llvm.dbg.value(metadata i32 %6, metadata !2972, metadata !DIExpression()), !dbg !2982
  call void @llvm.dbg.value(metadata i32 %7, metadata !2973, metadata !DIExpression()), !dbg !2982
  call void @llvm.dbg.value(metadata i32 %8, metadata !2974, metadata !DIExpression()), !dbg !2982
  call void @llvm.dbg.value(metadata i32 %9, metadata !2975, metadata !DIExpression()), !dbg !2982
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 0, !dbg !2983
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #33, !dbg !2983
  call void @llvm.dbg.declare(metadata [32 x i8]* %11, metadata !2976, metadata !DIExpression()), !dbg !2984
  call void @llvm.dbg.value(metadata i32 0, metadata !2977, metadata !DIExpression()), !dbg !2982
  %13 = icmp ne i32 %4, 0, !dbg !2985
  %14 = and i32 %9, -17
  %15 = select i1 %13, i32 %9, i32 %14, !dbg !2987
  call void @llvm.dbg.value(metadata i32 %15, metadata !2975, metadata !DIExpression()), !dbg !2982
  %16 = and i32 %15, 1024, !dbg !2988
  %17 = icmp eq i32 %16, 0, !dbg !2988
  %18 = or i1 %13, %17, !dbg !2989
  br i1 %18, label %19, label %40, !dbg !2989

19:                                               ; preds = %10
  %20 = and i32 %15, 32
  %21 = xor i32 %20, 97
  %22 = add nuw nsw i32 %21, 246
  br label %23, !dbg !2990

23:                                               ; preds = %19, %23
  %24 = phi i32 [ %35, %23 ], [ 0, %19 ], !dbg !2982
  %25 = phi i32 [ %27, %23 ], [ %4, %19 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !2970, metadata !DIExpression()), !dbg !2982
  call void @llvm.dbg.value(metadata i32 %24, metadata !2977, metadata !DIExpression()), !dbg !2982
  %26 = freeze i32 %25
  %27 = udiv i32 %26, %6, !dbg !2991
  %28 = mul i32 %27, %6
  %29 = sub i32 %26, %28
  %30 = and i32 %29, 254, !dbg !2992
  call void @llvm.dbg.value(metadata i32 %29, metadata !2978, metadata !DIExpression()), !dbg !2993
  %31 = icmp ult i32 %30, 10, !dbg !2994
  %32 = select i1 %31, i32 48, i32 %22, !dbg !2992
  %33 = add i32 %29, %32, !dbg !2992
  %34 = trunc i32 %33 to i8, !dbg !2992
  %35 = add nuw nsw i32 %24, 1, !dbg !2995
  call void @llvm.dbg.value(metadata i32 %35, metadata !2977, metadata !DIExpression()), !dbg !2982
  %36 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 %24, !dbg !2996
  store i8 %34, i8* %36, align 1, !dbg !2997, !tbaa !2561
  call void @llvm.dbg.value(metadata i32 %27, metadata !2970, metadata !DIExpression()), !dbg !2982
  %37 = icmp uge i32 %25, %6, !dbg !2998
  %38 = icmp ult i32 %24, 31, !dbg !2999
  %39 = select i1 %37, i1 %38, i1 false, !dbg !2999
  br i1 %39, label %23, label %40, !dbg !3000, !llvm.loop !3001

40:                                               ; preds = %23, %10
  %41 = phi i32 [ 0, %10 ], [ %35, %23 ], !dbg !2982
  call void @llvm.dbg.value(metadata i32 %41, metadata !2977, metadata !DIExpression()), !dbg !2982
  %42 = call fastcc i32 @_ntoa_format(void (i8, i8*, i32, i32)* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef nonnull %12, i32 noundef %41, i1 noundef zeroext %5, i32 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %15), !dbg !3003
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #33, !dbg !3004
  ret i32 %42, !dbg !3005
}

; Function Attrs: noinline nounwind
define internal fastcc i32 @_ftoa(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, double noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7) unnamed_addr #4 !dbg !489 {
  %9 = alloca [32 x i8], align 1
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 0, !dbg !3006
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !510, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.value(metadata i8* %1, metadata !511, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.value(metadata i32 %2, metadata !512, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.value(metadata i32 %3, metadata !513, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.value(metadata double %4, metadata !514, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.value(metadata i32 %5, metadata !515, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.value(metadata i32 %6, metadata !516, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.value(metadata i32 %7, metadata !517, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.value(metadata i32 %2, metadata !518, metadata !DIExpression()), !dbg !3006
  %11 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 0, !dbg !3007
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #33, !dbg !3007
  call void @llvm.dbg.declare(metadata [32 x i8]* %9, metadata !520, metadata !DIExpression()), !dbg !3008
  call void @llvm.dbg.value(metadata i32 0, metadata !524, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !525, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.value(metadata double 0x41DFFFFFFFC00000, metadata !526, metadata !DIExpression()), !dbg !3006
  %12 = fcmp uno double %4, 0.000000e+00, !dbg !3009
  br i1 %12, label %13, label %17, !dbg !3011

13:                                               ; preds = %8
  %14 = add i32 %2, 1, !dbg !3012
  call void @llvm.dbg.value(metadata i32 %14, metadata !512, metadata !DIExpression()), !dbg !3006
  call void %0(i8 noundef zeroext 110, i8* noundef %1, i32 noundef %2, i32 noundef %3) #33, !dbg !3014, !callees !2566
  %15 = add i32 %2, 2, !dbg !3015
  call void @llvm.dbg.value(metadata i32 %15, metadata !512, metadata !DIExpression()), !dbg !3006
  call void %0(i8 noundef zeroext 97, i8* noundef %1, i32 noundef %14, i32 noundef %3) #33, !dbg !3016, !callees !2566
  %16 = add i32 %2, 3, !dbg !3017
  call void @llvm.dbg.value(metadata i32 %16, metadata !512, metadata !DIExpression()), !dbg !3006
  call void %0(i8 noundef zeroext 110, i8* noundef %1, i32 noundef %15, i32 noundef %3) #33, !dbg !3018, !callees !2566
  br label %221, !dbg !3019

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i8 0, metadata !528, metadata !DIExpression()), !dbg !3006
  %18 = fcmp olt double %4, 0.000000e+00, !dbg !3020
  %19 = fsub double 0.000000e+00, %4, !dbg !3022
  %20 = select i1 %18, double %19, double %4, !dbg !3022
  call void @llvm.dbg.value(metadata i8 poison, metadata !528, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.value(metadata double %20, metadata !514, metadata !DIExpression()), !dbg !3006
  %21 = and i32 %7, 1024, !dbg !3023
  %22 = icmp eq i32 %21, 0, !dbg !3023
  %23 = select i1 %22, i32 6, i32 %5, !dbg !3025
  call void @llvm.dbg.value(metadata i32 %23, metadata !515, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.value(metadata i32 0, metadata !524, metadata !DIExpression()), !dbg !3006
  %24 = icmp ugt i32 %23, 9, !dbg !3026
  br i1 %24, label %25, label %39, !dbg !3027

25:                                               ; preds = %17
  %26 = add i32 %23, -10, !dbg !3027
  %27 = call i32 @llvm.umin.i32(i32 %26, i32 31), !dbg !3027
  %28 = add nuw nsw i32 %27, 1, !dbg !3027
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 %10, i8 48, i32 %28, i1 false), !dbg !3028, !tbaa !2561
  %29 = call i32 @llvm.umin.i32(i32 %26, i32 31), !dbg !3027
  %30 = add nuw nsw i32 %29, 1, !dbg !3027
  br label %31, !dbg !3027

31:                                               ; preds = %25, %31
  %32 = phi i32 [ %34, %31 ], [ 0, %25 ]
  %33 = phi i32 [ %35, %31 ], [ %23, %25 ]
  call void @llvm.dbg.value(metadata i32 %32, metadata !524, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.value(metadata i32 %33, metadata !515, metadata !DIExpression()), !dbg !3006
  %34 = add nuw nsw i32 %32, 1, !dbg !3030
  call void @llvm.dbg.value(metadata i32 %34, metadata !524, metadata !DIExpression()), !dbg !3006
  %35 = add i32 %33, -1, !dbg !3031
  call void @llvm.dbg.value(metadata i32 %35, metadata !515, metadata !DIExpression()), !dbg !3006
  %36 = icmp eq i32 %32, %29, !dbg !3026
  br i1 %36, label %37, label %31, !dbg !3027, !llvm.loop !3032

37:                                               ; preds = %31
  %38 = icmp ult i32 %32, 31, !dbg !3034
  br label %39, !dbg !3035

39:                                               ; preds = %37, %17
  %40 = phi i32 [ %23, %17 ], [ %35, %37 ]
  %41 = phi i32 [ 0, %17 ], [ %30, %37 ], !dbg !3006
  %42 = phi i1 [ true, %17 ], [ %38, %37 ], !dbg !3034
  %43 = fptosi double %20 to i32, !dbg !3035
  call void @llvm.dbg.value(metadata i32 %43, metadata !530, metadata !DIExpression()), !dbg !3006
  %44 = sitofp i32 %43 to double, !dbg !3036
  %45 = fsub double %20, %44, !dbg !3037
  %46 = getelementptr inbounds [10 x double], [10 x double]* @_ftoa.pow10, i32 0, i32 %40, !dbg !3038
  %47 = load double, double* %46, align 8, !dbg !3038, !tbaa !3039
  %48 = fmul double %45, %47, !dbg !3041
  call void @llvm.dbg.value(metadata double %48, metadata !531, metadata !DIExpression()), !dbg !3006
  %49 = fptoui double %48 to i32, !dbg !3042
  call void @llvm.dbg.value(metadata i32 %49, metadata !532, metadata !DIExpression()), !dbg !3006
  %50 = uitofp i32 %49 to double, !dbg !3043
  %51 = fsub double %48, %50, !dbg !3044
  call void @llvm.dbg.value(metadata double %51, metadata !525, metadata !DIExpression()), !dbg !3006
  %52 = fcmp ogt double %51, 5.000000e-01, !dbg !3045
  br i1 %52, label %53, label %59, !dbg !3047

53:                                               ; preds = %39
  %54 = add i32 %49, 1, !dbg !3048
  call void @llvm.dbg.value(metadata i32 %54, metadata !532, metadata !DIExpression()), !dbg !3006
  %55 = uitofp i32 %54 to double, !dbg !3050
  %56 = fcmp ugt double %47, %55, !dbg !3052
  br i1 %56, label %68, label %57, !dbg !3053

57:                                               ; preds = %53
  call void @llvm.dbg.value(metadata i32 0, metadata !532, metadata !DIExpression()), !dbg !3006
  %58 = add nsw i32 %43, 1, !dbg !3054
  call void @llvm.dbg.value(metadata i32 %58, metadata !530, metadata !DIExpression()), !dbg !3006
  br label %68, !dbg !3056

59:                                               ; preds = %39
  %60 = fcmp olt double %51, 5.000000e-01, !dbg !3057
  br i1 %60, label %68, label %61, !dbg !3059

61:                                               ; preds = %59
  %62 = icmp eq i32 %49, 0, !dbg !3060
  %63 = and i32 %49, 1
  %64 = icmp ne i32 %63, 0
  %65 = or i1 %62, %64, !dbg !3062
  %66 = zext i1 %65 to i32, !dbg !3062
  %67 = add i32 %66, %49, !dbg !3062
  br label %68, !dbg !3062

68:                                               ; preds = %61, %59, %53, %57
  %69 = phi i32 [ %58, %57 ], [ %43, %53 ], [ %43, %59 ], [ %43, %61 ], !dbg !3006
  %70 = phi i32 [ 0, %57 ], [ %54, %53 ], [ %49, %59 ], [ %67, %61 ], !dbg !3006
  call void @llvm.dbg.value(metadata i32 %70, metadata !532, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.value(metadata i32 %69, metadata !530, metadata !DIExpression()), !dbg !3006
  %71 = fcmp ogt double %20, 0x41DFFFFFFFC00000, !dbg !3063
  br i1 %71, label %221, label %72, !dbg !3065

72:                                               ; preds = %68
  %73 = icmp eq i32 %40, 0, !dbg !3066
  br i1 %73, label %74, label %83, !dbg !3067

74:                                               ; preds = %72
  %75 = sitofp i32 %69 to double, !dbg !3068
  %76 = fsub double %20, %75, !dbg !3070
  call void @llvm.dbg.value(metadata double %76, metadata !525, metadata !DIExpression()), !dbg !3006
  %77 = fcmp uge double %76, 5.000000e-01, !dbg !3071
  %78 = and i32 %69, 1
  %79 = icmp ne i32 %78, 0
  %80 = select i1 %77, i1 %79, i1 false, !dbg !3071
  %81 = zext i1 %80 to i32, !dbg !3071
  %82 = add nsw i32 %69, %81, !dbg !3071
  br label %123, !dbg !3071

83:                                               ; preds = %72
  call void @llvm.dbg.value(metadata i32 %40, metadata !533, metadata !DIExpression()), !dbg !3073
  br i1 %42, label %84, label %100, !dbg !3074

84:                                               ; preds = %83, %84
  %85 = phi i32 [ %95, %84 ], [ %41, %83 ], !dbg !3006
  %86 = phi i32 [ %90, %84 ], [ %70, %83 ], !dbg !3006
  %87 = phi i32 [ %88, %84 ], [ %40, %83 ], !dbg !3073
  call void @llvm.dbg.value(metadata i32 %87, metadata !533, metadata !DIExpression()), !dbg !3073
  call void @llvm.dbg.value(metadata i32 %86, metadata !532, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.value(metadata i32 %85, metadata !524, metadata !DIExpression()), !dbg !3006
  %88 = add i32 %87, -1, !dbg !3075
  call void @llvm.dbg.value(metadata i32 %88, metadata !533, metadata !DIExpression()), !dbg !3073
  %89 = freeze i32 %86
  %90 = udiv i32 %89, 10, !dbg !3077
  %91 = mul i32 %90, 10
  %92 = sub i32 %89, %91
  %93 = trunc i32 %92 to i8, !dbg !3079
  %94 = or i8 %93, 48, !dbg !3079
  %95 = add nuw nsw i32 %85, 1, !dbg !3080
  call void @llvm.dbg.value(metadata i32 %95, metadata !524, metadata !DIExpression()), !dbg !3006
  %96 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %85, !dbg !3081
  store i8 %94, i8* %96, align 1, !dbg !3082, !tbaa !2561
  call void @llvm.dbg.value(metadata i32 %90, metadata !532, metadata !DIExpression()), !dbg !3006
  %97 = icmp ugt i32 %86, 9, !dbg !3077
  %98 = icmp ult i32 %85, 31
  %99 = select i1 %97, i1 %98, i1 false, !dbg !3083
  br i1 %99, label %84, label %100, !dbg !3083, !llvm.loop !3084

100:                                              ; preds = %84, %83
  %101 = phi i32 [ %41, %83 ], [ %95, %84 ], !dbg !3006
  %102 = phi i32 [ %40, %83 ], [ %88, %84 ], !dbg !3073
  call void @llvm.dbg.value(metadata i32 %102, metadata !533, metadata !DIExpression()), !dbg !3073
  call void @llvm.dbg.value(metadata i32 %101, metadata !524, metadata !DIExpression()), !dbg !3006
  %103 = icmp ult i32 %101, 32, !dbg !3086
  %104 = xor i1 %103, true, !dbg !3087
  %105 = icmp eq i32 %102, 0
  %106 = select i1 %104, i1 true, i1 %105, !dbg !3087
  call void @llvm.dbg.value(metadata i32 %102, metadata !533, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3073
  br i1 %106, label %117, label %107, !dbg !3087

107:                                              ; preds = %100, %107
  %108 = phi i32 [ %110, %107 ], [ %102, %100 ]
  %109 = phi i32 [ %111, %107 ], [ %101, %100 ]
  call void @llvm.dbg.value(metadata i32 %108, metadata !533, metadata !DIExpression()), !dbg !3073
  call void @llvm.dbg.value(metadata i32 %109, metadata !524, metadata !DIExpression()), !dbg !3006
  %110 = add i32 %108, -1, !dbg !3088
  call void @llvm.dbg.value(metadata i32 %110, metadata !533, metadata !DIExpression()), !dbg !3073
  %111 = add i32 %109, 1, !dbg !3089
  call void @llvm.dbg.value(metadata i32 %111, metadata !524, metadata !DIExpression()), !dbg !3006
  %112 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %109, !dbg !3091
  store i8 48, i8* %112, align 1, !dbg !3092, !tbaa !2561
  %113 = icmp ult i32 %111, 32, !dbg !3086
  %114 = xor i1 %113, true, !dbg !3087
  %115 = icmp eq i32 %110, 0
  %116 = select i1 %114, i1 true, i1 %115, !dbg !3087
  call void @llvm.dbg.value(metadata i32 %110, metadata !533, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3073
  br i1 %116, label %117, label %107, !dbg !3087, !llvm.loop !3093

117:                                              ; preds = %107, %100
  %118 = phi i32 [ %101, %100 ], [ %111, %107 ], !dbg !3073
  %119 = phi i1 [ %103, %100 ], [ %113, %107 ], !dbg !3086
  br i1 %119, label %120, label %123, !dbg !3096

120:                                              ; preds = %117
  %121 = add i32 %118, 1, !dbg !3097
  call void @llvm.dbg.value(metadata i32 %121, metadata !524, metadata !DIExpression()), !dbg !3006
  %122 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %118, !dbg !3100
  store i8 46, i8* %122, align 1, !dbg !3101, !tbaa !2561
  br label %123, !dbg !3102

123:                                              ; preds = %74, %117, %120
  %124 = phi i32 [ %121, %120 ], [ %118, %117 ], [ %41, %74 ], !dbg !3006
  %125 = phi i32 [ %69, %120 ], [ %69, %117 ], [ %82, %74 ], !dbg !3006
  call void @llvm.dbg.value(metadata i32 %125, metadata !530, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.value(metadata i32 %124, metadata !524, metadata !DIExpression()), !dbg !3006
  %126 = icmp ult i32 %124, 32, !dbg !3103
  br i1 %126, label %127, label %142, !dbg !3104

127:                                              ; preds = %123, %127
  %128 = phi i32 [ %136, %127 ], [ %124, %123 ], !dbg !3006
  %129 = phi i32 [ %131, %127 ], [ %125, %123 ], !dbg !3006
  call void @llvm.dbg.value(metadata i32 %129, metadata !530, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.value(metadata i32 %128, metadata !524, metadata !DIExpression()), !dbg !3006
  %130 = freeze i32 %129
  %131 = sdiv i32 %130, 10, !dbg !3105
  %132 = mul i32 %131, 10
  %133 = sub i32 %130, %132
  %134 = trunc i32 %133 to i8, !dbg !3108
  %135 = add i8 %134, 48, !dbg !3108
  %136 = add nuw nsw i32 %128, 1, !dbg !3109
  call void @llvm.dbg.value(metadata i32 %136, metadata !524, metadata !DIExpression()), !dbg !3006
  %137 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %128, !dbg !3110
  store i8 %135, i8* %137, align 1, !dbg !3111, !tbaa !2561
  call void @llvm.dbg.value(metadata i32 %131, metadata !530, metadata !DIExpression()), !dbg !3006
  %138 = add i32 %129, -10, !dbg !3105
  %139 = icmp ult i32 %138, -19, !dbg !3105
  %140 = icmp ult i32 %128, 31
  %141 = select i1 %139, i1 %140, i1 false, !dbg !3112
  br i1 %141, label %127, label %142, !dbg !3112, !llvm.loop !3113

142:                                              ; preds = %127, %123
  %143 = phi i32 [ %124, %123 ], [ %136, %127 ], !dbg !3006
  call void @llvm.dbg.value(metadata i32 %143, metadata !524, metadata !DIExpression()), !dbg !3006
  %144 = and i32 %7, 2, !dbg !3115
  %145 = icmp ne i32 %144, 0, !dbg !3115
  %146 = and i32 %7, 3, !dbg !3117
  %147 = icmp eq i32 %146, 1, !dbg !3117
  br i1 %147, label %148, label %171, !dbg !3117

148:                                              ; preds = %142
  %149 = icmp eq i32 %6, 0, !dbg !3118
  br i1 %149, label %156, label %150, !dbg !3121

150:                                              ; preds = %148
  %151 = and i32 %7, 12
  %152 = icmp ne i32 %151, 0
  %153 = or i1 %18, %152, !dbg !3122
  %154 = sext i1 %153 to i32, !dbg !3122
  %155 = add i32 %154, %6, !dbg !3122
  br label %156, !dbg !3122

156:                                              ; preds = %150, %148
  %157 = phi i32 [ 0, %148 ], [ %155, %150 ]
  call void @llvm.dbg.value(metadata i32 %157, metadata !516, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.value(metadata i32 %143, metadata !524, metadata !DIExpression()), !dbg !3006
  %158 = icmp ult i32 %143, %157, !dbg !3123
  %159 = icmp ult i32 %143, 32, !dbg !3124
  %160 = and i1 %158, %159, !dbg !3124
  br i1 %160, label %161, label %171, !dbg !3125

161:                                              ; preds = %156
  %162 = getelementptr [32 x i8], [32 x i8]* %9, i32 0, i32 %143, !dbg !3125
  %163 = xor i32 %143, -1, !dbg !3125
  %164 = add i32 %157, %163, !dbg !3125
  %165 = sub i32 31, %143, !dbg !3125
  %166 = call i32 @llvm.umin.i32(i32 %164, i32 %165), !dbg !3125
  %167 = add nuw i32 %166, 1, !dbg !3125
  call void @llvm.memset.p0i8.i32(i8* align 1 %162, i8 48, i32 %167, i1 false), !dbg !3126, !tbaa !2561
  %168 = call i32 @llvm.umin.i32(i32 %164, i32 %165), !dbg !3125
  %169 = add i32 %143, %168, !dbg !3125
  call void @llvm.dbg.value(metadata i32 undef, metadata !524, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.value(metadata i32 undef, metadata !524, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3006
  %170 = add i32 %169, 1, !dbg !3125
  br label %171, !dbg !3128

171:                                              ; preds = %161, %156, %142
  %172 = phi i32 [ %6, %142 ], [ %157, %156 ], [ %157, %161 ]
  %173 = phi i32 [ %143, %142 ], [ %143, %156 ], [ %170, %161 ], !dbg !3109
  call void @llvm.dbg.value(metadata i32 %173, metadata !524, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.value(metadata i32 %172, metadata !516, metadata !DIExpression()), !dbg !3006
  %174 = icmp ult i32 %173, 32, !dbg !3128
  br i1 %174, label %175, label %186, !dbg !3130

175:                                              ; preds = %171
  br i1 %18, label %182, label %176, !dbg !3131

176:                                              ; preds = %175
  %177 = and i32 %7, 4, !dbg !3133
  %178 = icmp eq i32 %177, 0, !dbg !3133
  br i1 %178, label %179, label %182, !dbg !3136

179:                                              ; preds = %176
  %180 = and i32 %7, 8, !dbg !3137
  %181 = icmp eq i32 %180, 0, !dbg !3137
  br i1 %181, label %186, label %182, !dbg !3139

182:                                              ; preds = %179, %176, %175
  %183 = phi i8 [ 45, %175 ], [ 43, %176 ], [ 32, %179 ]
  %184 = add i32 %173, 1, !dbg !3140
  %185 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %173, !dbg !3140
  store i8 %183, i8* %185, align 1, !dbg !3140, !tbaa !2561
  br label %186, !dbg !3141

186:                                              ; preds = %182, %179, %171
  %187 = phi i32 [ %173, %179 ], [ %173, %171 ], [ %184, %182 ], !dbg !3006
  call void @llvm.dbg.value(metadata i32 %187, metadata !524, metadata !DIExpression()), !dbg !3006
  %188 = and i32 %7, 3, !dbg !3141
  %189 = icmp eq i32 %188, 0, !dbg !3141
  %190 = icmp ult i32 %187, %172
  %191 = select i1 %189, i1 %190, i1 false, !dbg !3141
  call void @llvm.dbg.value(metadata i32 %187, metadata !536, metadata !DIExpression()), !dbg !3142
  call void @llvm.dbg.value(metadata i32 %2, metadata !512, metadata !DIExpression()), !dbg !3006
  br i1 %191, label %192, label %198, !dbg !3141

192:                                              ; preds = %186, %192
  %193 = phi i32 [ %196, %192 ], [ %187, %186 ]
  %194 = phi i32 [ %195, %192 ], [ %2, %186 ]
  call void @llvm.dbg.value(metadata i32 %193, metadata !536, metadata !DIExpression()), !dbg !3142
  call void @llvm.dbg.value(metadata i32 %194, metadata !512, metadata !DIExpression()), !dbg !3006
  %195 = add i32 %194, 1, !dbg !3143
  call void @llvm.dbg.value(metadata i32 %195, metadata !512, metadata !DIExpression()), !dbg !3006
  call void %0(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %194, i32 noundef %3) #33, !dbg !3146, !callees !2566
  %196 = add nuw i32 %193, 1, !dbg !3147
  call void @llvm.dbg.value(metadata i32 %196, metadata !536, metadata !DIExpression()), !dbg !3142
  %197 = icmp eq i32 %196, %172, !dbg !3148
  br i1 %197, label %198, label %192, !dbg !3149, !llvm.loop !3150

198:                                              ; preds = %192, %186
  %199 = phi i32 [ %2, %186 ], [ %195, %192 ]
  call void @llvm.dbg.value(metadata i32 %199, metadata !512, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.value(metadata i32 0, metadata !540, metadata !DIExpression()), !dbg !3152
  %200 = icmp eq i32 %187, 0, !dbg !3153
  br i1 %200, label %201, label %206, !dbg !3155

201:                                              ; preds = %206, %198
  %202 = phi i32 [ %199, %198 ], [ %213, %206 ]
  %203 = sub i32 %202, %2
  %204 = icmp ult i32 %203, %172
  %205 = select i1 %145, i1 %204, i1 false, !dbg !3156
  call void @llvm.dbg.value(metadata i32 %202, metadata !512, metadata !DIExpression()), !dbg !3006
  br i1 %205, label %216, label %221, !dbg !3156

206:                                              ; preds = %198, %206
  %207 = phi i32 [ %214, %206 ], [ 0, %198 ]
  %208 = phi i32 [ %213, %206 ], [ %199, %198 ]
  call void @llvm.dbg.value(metadata i32 %207, metadata !540, metadata !DIExpression()), !dbg !3152
  call void @llvm.dbg.value(metadata i32 %208, metadata !512, metadata !DIExpression()), !dbg !3006
  %209 = xor i32 %207, -1, !dbg !3157
  %210 = add i32 %187, %209, !dbg !3157
  %211 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %210, !dbg !3159
  %212 = load i8, i8* %211, align 1, !dbg !3159, !tbaa !2561
  %213 = add i32 %208, 1, !dbg !3160
  call void @llvm.dbg.value(metadata i32 %213, metadata !512, metadata !DIExpression()), !dbg !3006
  call void %0(i8 noundef zeroext %212, i8* noundef %1, i32 noundef %208, i32 noundef %3) #33, !dbg !3161, !callees !2566
  %214 = add nuw i32 %207, 1, !dbg !3162
  call void @llvm.dbg.value(metadata i32 %214, metadata !540, metadata !DIExpression()), !dbg !3152
  %215 = icmp eq i32 %214, %187, !dbg !3153
  br i1 %215, label %201, label %206, !dbg !3155, !llvm.loop !3163

216:                                              ; preds = %201, %216
  %217 = phi i32 [ %218, %216 ], [ %202, %201 ]
  call void @llvm.dbg.value(metadata i32 %217, metadata !512, metadata !DIExpression()), !dbg !3006
  %218 = add i32 %217, 1, !dbg !3165
  call void @llvm.dbg.value(metadata i32 %218, metadata !512, metadata !DIExpression()), !dbg !3006
  call void %0(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %217, i32 noundef %3) #33, !dbg !3169, !callees !2566
  %219 = sub i32 %218, %2, !dbg !3170
  %220 = icmp ult i32 %219, %172, !dbg !3171
  br i1 %220, label %216, label %221, !dbg !3172, !llvm.loop !3173

221:                                              ; preds = %216, %68, %201, %13
  %222 = phi i32 [ %16, %13 ], [ 0, %68 ], [ %202, %201 ], [ %218, %216 ], !dbg !3006
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #33, !dbg !3175
  ret i32 %222, !dbg !3175
}

; Function Attrs: nofree noinline norecurse nosync nounwind readonly
define internal fastcc i32 @_strnlen_s(i8* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !3176 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3180, metadata !DIExpression()), !dbg !3183
  call void @llvm.dbg.value(metadata i32 %1, metadata !3181, metadata !DIExpression()), !dbg !3183
  call void @llvm.dbg.value(metadata i8* %0, metadata !3182, metadata !DIExpression()), !dbg !3183
  %3 = load i8, i8* %0, align 1, !dbg !3184, !tbaa !2561
  %4 = icmp eq i8 %3, 0, !dbg !3184
  %5 = icmp eq i32 %1, 0, !dbg !3187
  %6 = or i1 %4, %5, !dbg !3187
  call void @llvm.dbg.value(metadata i32 %1, metadata !3181, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3183
  br i1 %6, label %16, label %7, !dbg !3187

7:                                                ; preds = %2, %7
  %8 = phi i8* [ %11, %7 ], [ %0, %2 ]
  %9 = phi i32 [ %10, %7 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %8, metadata !3182, metadata !DIExpression()), !dbg !3183
  call void @llvm.dbg.value(metadata i32 %9, metadata !3181, metadata !DIExpression()), !dbg !3183
  %10 = add i32 %9, -1, !dbg !3188
  call void @llvm.dbg.value(metadata i32 %10, metadata !3181, metadata !DIExpression()), !dbg !3183
  %11 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !3189
  call void @llvm.dbg.value(metadata i8* %11, metadata !3182, metadata !DIExpression()), !dbg !3183
  %12 = load i8, i8* %11, align 1, !dbg !3184, !tbaa !2561
  %13 = icmp eq i8 %12, 0, !dbg !3184
  %14 = icmp eq i32 %10, 0, !dbg !3187
  %15 = select i1 %13, i1 true, i1 %14, !dbg !3187
  call void @llvm.dbg.value(metadata i32 %10, metadata !3181, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3183
  br i1 %15, label %16, label %7, !dbg !3187, !llvm.loop !3190

16:                                               ; preds = %7, %2
  %17 = phi i8* [ %0, %2 ], [ %11, %7 ], !dbg !3193
  %18 = ptrtoint i8* %17 to i32, !dbg !3194
  %19 = ptrtoint i8* %0 to i32, !dbg !3194
  %20 = sub i32 %18, %19, !dbg !3194
  ret i32 %20, !dbg !3195
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #1

; Function Attrs: noinline nounwind
define internal fastcc i32 @_ntoa_format(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* nocapture noundef %4, i32 noundef %5, i1 noundef zeroext %6, i32 noundef %7, i32 noundef %8, i32 noundef %9, i32 noundef %10) unnamed_addr #4 !dbg !3196 {
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !3200, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i8* %1, metadata !3201, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i32 %2, metadata !3202, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i32 %3, metadata !3203, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i8* %4, metadata !3204, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i32 %5, metadata !3205, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i1 %6, metadata !3206, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3218
  call void @llvm.dbg.value(metadata i32 %7, metadata !3207, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i32 %8, metadata !3208, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i32 %9, metadata !3209, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i32 %10, metadata !3210, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i32 %2, metadata !3211, metadata !DIExpression()), !dbg !3218
  %12 = and i32 %10, 2, !dbg !3219
  %13 = icmp eq i32 %12, 0, !dbg !3219
  br i1 %13, label %14, label %55, !dbg !3221

14:                                               ; preds = %11
  %15 = icmp eq i32 %9, 0, !dbg !3222
  br i1 %15, label %25, label %16, !dbg !3225

16:                                               ; preds = %14
  %17 = and i32 %10, 1, !dbg !3226
  %18 = icmp eq i32 %17, 0, !dbg !3226
  br i1 %18, label %25, label %19, !dbg !3227

19:                                               ; preds = %16
  %20 = and i32 %10, 12
  %21 = icmp ne i32 %20, 0
  %22 = or i1 %21, %6, !dbg !3228
  %23 = sext i1 %22 to i32, !dbg !3228
  %24 = add i32 %23, %9, !dbg !3228
  br label %25, !dbg !3228

25:                                               ; preds = %19, %16, %14
  %26 = phi i32 [ %9, %16 ], [ 0, %14 ], [ %24, %19 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !3209, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i32 %5, metadata !3205, metadata !DIExpression()), !dbg !3218
  %27 = icmp ult i32 %5, %8, !dbg !3229
  %28 = icmp ult i32 %5, 32, !dbg !3230
  %29 = and i1 %27, %28, !dbg !3230
  br i1 %29, label %30, label %40, !dbg !3231

30:                                               ; preds = %25
  %31 = getelementptr i8, i8* %4, i32 %5, !dbg !3231
  %32 = xor i32 %5, -1, !dbg !3231
  %33 = add i32 %32, %8, !dbg !3231
  %34 = sub i32 31, %5, !dbg !3231
  %35 = call i32 @llvm.umin.i32(i32 %33, i32 %34), !dbg !3231
  %36 = add nuw i32 %35, 1, !dbg !3231
  call void @llvm.memset.p0i8.i32(i8* align 1 %31, i8 48, i32 %36, i1 false), !dbg !3232, !tbaa !2561
  %37 = call i32 @llvm.umin.i32(i32 %33, i32 %34), !dbg !3231
  %38 = add i32 %37, %5, !dbg !3231
  call void @llvm.dbg.value(metadata i32 undef, metadata !3205, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i32 undef, metadata !3205, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3218
  %39 = add i32 %38, 1, !dbg !3231
  br label %40

40:                                               ; preds = %30, %25
  %41 = phi i32 [ %5, %25 ], [ %39, %30 ]
  %42 = and i32 %10, 1
  %43 = icmp eq i32 %42, 0
  call void @llvm.dbg.value(metadata i32 %41, metadata !3205, metadata !DIExpression()), !dbg !3218
  br i1 %43, label %55, label %44, !dbg !3234

44:                                               ; preds = %40
  call void @llvm.dbg.value(metadata i32 %41, metadata !3205, metadata !DIExpression()), !dbg !3218
  %45 = icmp ult i32 %41, %26, !dbg !3235
  %46 = icmp ult i32 %41, 32
  %47 = and i1 %45, %46, !dbg !3236
  br i1 %47, label %48, label %55, !dbg !3236

48:                                               ; preds = %44, %48
  %49 = phi i32 [ %50, %48 ], [ %41, %44 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !3205, metadata !DIExpression()), !dbg !3218
  %50 = add i32 %49, 1, !dbg !3237
  call void @llvm.dbg.value(metadata i32 %50, metadata !3205, metadata !DIExpression()), !dbg !3218
  %51 = getelementptr inbounds i8, i8* %4, i32 %49, !dbg !3239
  store i8 48, i8* %51, align 1, !dbg !3240, !tbaa !2561
  %52 = icmp ult i32 %50, %26, !dbg !3235
  %53 = icmp ult i32 %50, 32
  %54 = and i1 %52, %53, !dbg !3236
  br i1 %54, label %48, label %55, !dbg !3236, !llvm.loop !3241

55:                                               ; preds = %48, %44, %40, %11
  %56 = phi i32 [ %9, %11 ], [ %26, %40 ], [ %26, %44 ], [ %26, %48 ]
  %57 = phi i32 [ %5, %11 ], [ %41, %40 ], [ %41, %44 ], [ %50, %48 ]
  call void @llvm.dbg.value(metadata i32 %57, metadata !3205, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i32 %56, metadata !3209, metadata !DIExpression()), !dbg !3218
  %58 = and i32 %10, 16, !dbg !3244
  %59 = icmp eq i32 %58, 0, !dbg !3244
  br i1 %59, label %101, label %60, !dbg !3246

60:                                               ; preds = %55
  %61 = and i32 %10, 1024, !dbg !3247
  %62 = icmp eq i32 %61, 0, !dbg !3247
  %63 = icmp ne i32 %57, 0
  %64 = select i1 %62, i1 %63, i1 false, !dbg !3250
  br i1 %64, label %65, label %76, !dbg !3250

65:                                               ; preds = %60
  %66 = icmp eq i32 %57, %8, !dbg !3251
  %67 = icmp eq i32 %57, %56
  %68 = or i1 %66, %67, !dbg !3252
  br i1 %68, label %69, label %76, !dbg !3252

69:                                               ; preds = %65
  %70 = add i32 %57, -1, !dbg !3253
  call void @llvm.dbg.value(metadata i32 %70, metadata !3205, metadata !DIExpression()), !dbg !3218
  %71 = icmp ne i32 %70, 0, !dbg !3255
  %72 = icmp eq i32 %7, 16
  %73 = and i1 %72, %71, !dbg !3257
  %74 = add i32 %57, -2
  %75 = select i1 %73, i32 %74, i32 %70, !dbg !3257
  br label %76, !dbg !3257

76:                                               ; preds = %69, %65, %60
  %77 = phi i32 [ %57, %60 ], [ %57, %65 ], [ %75, %69 ]
  call void @llvm.dbg.value(metadata i32 %77, metadata !3205, metadata !DIExpression()), !dbg !3218
  %78 = icmp eq i32 %7, 16, !dbg !3258
  br i1 %78, label %79, label %87, !dbg !3260

79:                                               ; preds = %76
  %80 = and i32 %10, 32, !dbg !3261
  %81 = icmp eq i32 %80, 0, !dbg !3261
  %82 = icmp ult i32 %77, 32
  %83 = select i1 %81, i1 %82, i1 false, !dbg !3262
  br i1 %83, label %91, label %84, !dbg !3262

84:                                               ; preds = %79
  %85 = icmp ne i32 %80, 0, !dbg !3263
  %86 = select i1 %85, i1 %82, i1 false, !dbg !3265
  br i1 %86, label %91, label %87, !dbg !3265

87:                                               ; preds = %76, %84
  %88 = icmp eq i32 %7, 2, !dbg !3266
  %89 = icmp ult i32 %77, 32
  %90 = select i1 %88, i1 %89, i1 false, !dbg !3268
  br i1 %90, label %91, label %95, !dbg !3268

91:                                               ; preds = %87, %84, %79
  %92 = phi i8 [ 120, %79 ], [ 88, %84 ], [ 98, %87 ]
  %93 = add i32 %77, 1, !dbg !3269
  %94 = getelementptr inbounds i8, i8* %4, i32 %77, !dbg !3269
  store i8 %92, i8* %94, align 1, !dbg !3269, !tbaa !2561
  br label %95, !dbg !3270

95:                                               ; preds = %91, %87
  %96 = phi i32 [ %77, %87 ], [ %93, %91 ], !dbg !3272
  call void @llvm.dbg.value(metadata i32 %96, metadata !3205, metadata !DIExpression()), !dbg !3218
  %97 = icmp ult i32 %96, 32, !dbg !3270
  br i1 %97, label %98, label %101, !dbg !3273

98:                                               ; preds = %95
  %99 = add i32 %96, 1, !dbg !3274
  call void @llvm.dbg.value(metadata i32 %99, metadata !3205, metadata !DIExpression()), !dbg !3218
  %100 = getelementptr inbounds i8, i8* %4, i32 %96, !dbg !3276
  store i8 48, i8* %100, align 1, !dbg !3277, !tbaa !2561
  br label %101, !dbg !3278

101:                                              ; preds = %95, %98, %55
  %102 = phi i32 [ %99, %98 ], [ %96, %95 ], [ %57, %55 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !3205, metadata !DIExpression()), !dbg !3218
  %103 = icmp ult i32 %102, 32, !dbg !3279
  br i1 %103, label %104, label %115, !dbg !3281

104:                                              ; preds = %101
  br i1 %6, label %111, label %105, !dbg !3282

105:                                              ; preds = %104
  %106 = and i32 %10, 4, !dbg !3284
  %107 = icmp eq i32 %106, 0, !dbg !3284
  br i1 %107, label %108, label %111, !dbg !3287

108:                                              ; preds = %105
  %109 = and i32 %10, 8, !dbg !3288
  %110 = icmp eq i32 %109, 0, !dbg !3288
  br i1 %110, label %115, label %111, !dbg !3290

111:                                              ; preds = %108, %105, %104
  %112 = phi i8 [ 45, %104 ], [ 43, %105 ], [ 32, %108 ]
  %113 = add i32 %102, 1, !dbg !3291
  %114 = getelementptr inbounds i8, i8* %4, i32 %102, !dbg !3291
  store i8 %112, i8* %114, align 1, !dbg !3291, !tbaa !2561
  br label %115, !dbg !3292

115:                                              ; preds = %111, %108, %101
  %116 = phi i32 [ %102, %108 ], [ %102, %101 ], [ %113, %111 ], !dbg !3218
  call void @llvm.dbg.value(metadata i32 %116, metadata !3205, metadata !DIExpression()), !dbg !3218
  %117 = and i32 %10, 3, !dbg !3292
  %118 = icmp eq i32 %117, 0, !dbg !3292
  %119 = icmp ult i32 %116, %56
  %120 = select i1 %118, i1 %119, i1 false, !dbg !3292
  call void @llvm.dbg.value(metadata i32 %116, metadata !3212, metadata !DIExpression()), !dbg !3293
  call void @llvm.dbg.value(metadata i32 %2, metadata !3202, metadata !DIExpression()), !dbg !3218
  br i1 %120, label %121, label %127, !dbg !3292

121:                                              ; preds = %115, %121
  %122 = phi i32 [ %125, %121 ], [ %116, %115 ]
  %123 = phi i32 [ %124, %121 ], [ %2, %115 ]
  call void @llvm.dbg.value(metadata i32 %122, metadata !3212, metadata !DIExpression()), !dbg !3293
  call void @llvm.dbg.value(metadata i32 %123, metadata !3202, metadata !DIExpression()), !dbg !3218
  %124 = add i32 %123, 1, !dbg !3294
  call void @llvm.dbg.value(metadata i32 %124, metadata !3202, metadata !DIExpression()), !dbg !3218
  call void %0(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %123, i32 noundef %3) #33, !dbg !3297, !callees !2566
  %125 = add nuw i32 %122, 1, !dbg !3298
  call void @llvm.dbg.value(metadata i32 %125, metadata !3212, metadata !DIExpression()), !dbg !3293
  %126 = icmp eq i32 %125, %56, !dbg !3299
  br i1 %126, label %127, label %121, !dbg !3300, !llvm.loop !3301

127:                                              ; preds = %121, %115
  %128 = phi i32 [ %2, %115 ], [ %124, %121 ]
  call void @llvm.dbg.value(metadata i32 %128, metadata !3202, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i32 0, metadata !3216, metadata !DIExpression()), !dbg !3303
  %129 = icmp eq i32 %116, 0, !dbg !3304
  br i1 %129, label %130, label %136, !dbg !3306

130:                                              ; preds = %136, %127
  %131 = phi i32 [ %128, %127 ], [ %143, %136 ]
  %132 = xor i1 %13, true, !dbg !3307
  %133 = sub i32 %131, %2
  %134 = icmp ult i32 %133, %56
  %135 = select i1 %132, i1 %134, i1 false, !dbg !3307
  call void @llvm.dbg.value(metadata i32 %131, metadata !3202, metadata !DIExpression()), !dbg !3218
  br i1 %135, label %146, label %151, !dbg !3307

136:                                              ; preds = %127, %136
  %137 = phi i32 [ %144, %136 ], [ 0, %127 ]
  %138 = phi i32 [ %143, %136 ], [ %128, %127 ]
  call void @llvm.dbg.value(metadata i32 %137, metadata !3216, metadata !DIExpression()), !dbg !3303
  call void @llvm.dbg.value(metadata i32 %138, metadata !3202, metadata !DIExpression()), !dbg !3218
  %139 = xor i32 %137, -1, !dbg !3308
  %140 = add i32 %116, %139, !dbg !3308
  %141 = getelementptr inbounds i8, i8* %4, i32 %140, !dbg !3310
  %142 = load i8, i8* %141, align 1, !dbg !3310, !tbaa !2561
  %143 = add i32 %138, 1, !dbg !3311
  call void @llvm.dbg.value(metadata i32 %143, metadata !3202, metadata !DIExpression()), !dbg !3218
  call void %0(i8 noundef zeroext %142, i8* noundef %1, i32 noundef %138, i32 noundef %3) #33, !dbg !3312, !callees !2566
  %144 = add nuw i32 %137, 1, !dbg !3313
  call void @llvm.dbg.value(metadata i32 %144, metadata !3216, metadata !DIExpression()), !dbg !3303
  %145 = icmp eq i32 %144, %116, !dbg !3304
  br i1 %145, label %130, label %136, !dbg !3306, !llvm.loop !3314

146:                                              ; preds = %130, %146
  %147 = phi i32 [ %148, %146 ], [ %131, %130 ]
  call void @llvm.dbg.value(metadata i32 %147, metadata !3202, metadata !DIExpression()), !dbg !3218
  %148 = add i32 %147, 1, !dbg !3316
  call void @llvm.dbg.value(metadata i32 %148, metadata !3202, metadata !DIExpression()), !dbg !3218
  call void %0(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %147, i32 noundef %3) #33, !dbg !3320, !callees !2566
  %149 = sub i32 %148, %2, !dbg !3321
  %150 = icmp ult i32 %149, %56, !dbg !3322
  br i1 %150, label %146, label %151, !dbg !3323, !llvm.loop !3324

151:                                              ; preds = %146, %130
  %152 = phi i32 [ %131, %130 ], [ %148, %146 ]
  call void @llvm.dbg.value(metadata i32 %152, metadata !3202, metadata !DIExpression()), !dbg !3218
  ret i32 %152, !dbg !3326
}

; Function Attrs: noinline nounwind
define dso_local i32 @sprintf_(i8* noundef %0, i8* noundef %1, ...) local_unnamed_addr #4 !dbg !3327 {
  %3 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3329, metadata !DIExpression()), !dbg !3333
  call void @llvm.dbg.value(metadata i8* %1, metadata !3330, metadata !DIExpression()), !dbg !3333
  %4 = bitcast %struct.__va_list* %3 to i8*, !dbg !3334
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #33, !dbg !3334
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !3331, metadata !DIExpression()), !dbg !3335
  call void @llvm.va_start(i8* nonnull %4), !dbg !3336
  %5 = bitcast %struct.__va_list* %3 to i32*, !dbg !3337
  %6 = load i32, i32* %5, align 4, !dbg !3337
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3337
  %8 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_buffer, i8* noundef %0, i32 noundef -1, i8* noundef %1, [1 x i32] %7), !dbg !3337
  call void @llvm.dbg.value(metadata i32 %8, metadata !3332, metadata !DIExpression()), !dbg !3333
  call void @llvm.va_end(i8* %4), !dbg !3338
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #33, !dbg !3339
  ret i32 %8, !dbg !3340
}

; Function Attrs: noinline nounwind
define dso_local i32 @snprintf_(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #4 !dbg !3341 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3343, metadata !DIExpression()), !dbg !3348
  call void @llvm.dbg.value(metadata i32 %1, metadata !3344, metadata !DIExpression()), !dbg !3348
  call void @llvm.dbg.value(metadata i8* %2, metadata !3345, metadata !DIExpression()), !dbg !3348
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3349
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #33, !dbg !3349
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3346, metadata !DIExpression()), !dbg !3350
  call void @llvm.va_start(i8* nonnull %5), !dbg !3351
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3352
  %7 = load i32, i32* %6, align 4, !dbg !3352
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3352
  %9 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_buffer, i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8), !dbg !3352
  call void @llvm.dbg.value(metadata i32 %9, metadata !3347, metadata !DIExpression()), !dbg !3348
  call void @llvm.va_end(i8* %5), !dbg !3353
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #33, !dbg !3354
  ret i32 %9, !dbg !3355
}

; Function Attrs: noinline nounwind
define dso_local i32 @vsnprintf_(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #4 !dbg !3356 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3363, metadata !DIExpression()), !dbg !3364
  call void @llvm.dbg.value(metadata i8* %0, metadata !3360, metadata !DIExpression()), !dbg !3364
  call void @llvm.dbg.value(metadata i32 %1, metadata !3361, metadata !DIExpression()), !dbg !3364
  call void @llvm.dbg.value(metadata i8* %2, metadata !3362, metadata !DIExpression()), !dbg !3364
  %5 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_buffer, i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3), !dbg !3365
  ret i32 %5, !dbg !3366
}

; Function Attrs: noinline nounwind
define dso_local i32 @fctprintf(void (i8, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, ...) local_unnamed_addr #4 !dbg !3367 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca %struct.out_fct_wrap_type, align 4
  call void @llvm.dbg.value(metadata void (i8, i8*)* %0, metadata !3371, metadata !DIExpression()), !dbg !3378
  call void @llvm.dbg.value(metadata i8* %1, metadata !3372, metadata !DIExpression()), !dbg !3378
  call void @llvm.dbg.value(metadata i8* %2, metadata !3373, metadata !DIExpression()), !dbg !3378
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !3379
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #33, !dbg !3379
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3374, metadata !DIExpression()), !dbg !3380
  call void @llvm.va_start(i8* nonnull %6), !dbg !3381
  %7 = bitcast %struct.out_fct_wrap_type* %5 to i8*, !dbg !3382
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #33, !dbg !3382
  call void @llvm.dbg.declare(metadata %struct.out_fct_wrap_type* %5, metadata !3375, metadata !DIExpression()), !dbg !3383
  %8 = getelementptr inbounds %struct.out_fct_wrap_type, %struct.out_fct_wrap_type* %5, i32 0, i32 0, !dbg !3384
  store void (i8, i8*)* %0, void (i8, i8*)** %8, align 4, !dbg !3384, !tbaa !2880
  %9 = getelementptr inbounds %struct.out_fct_wrap_type, %struct.out_fct_wrap_type* %5, i32 0, i32 1, !dbg !3384
  store i8* %1, i8** %9, align 4, !dbg !3384, !tbaa !2883
  %10 = bitcast %struct.__va_list* %4 to i32*, !dbg !3385
  %11 = load i32, i32* %10, align 4, !dbg !3385
  %12 = insertvalue [1 x i32] poison, i32 %11, 0, !dbg !3385
  %13 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_fct, i8* noundef nonnull %7, i32 noundef -1, i8* noundef %2, [1 x i32] %12), !dbg !3385
  call void @llvm.dbg.value(metadata i32 %13, metadata !3377, metadata !DIExpression()), !dbg !3378
  call void @llvm.va_end(i8* %6), !dbg !3386
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #33, !dbg !3387
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #33, !dbg !3387
  ret i32 %13, !dbg !3388
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @SystemInit() local_unnamed_addr #15 !dbg !3389 {
  %1 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3390, !tbaa !3391
  %2 = or i32 %1, 1, !dbg !3390
  store volatile i32 %2, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3390, !tbaa !3391
  %3 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3394, !tbaa !3395
  %4 = and i32 %3, -117506048, !dbg !3394
  store volatile i32 %4, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3394, !tbaa !3395
  %5 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3396, !tbaa !3391
  %6 = and i32 %5, -17367041, !dbg !3396
  store volatile i32 %6, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3396, !tbaa !3391
  %7 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3397, !tbaa !3391
  %8 = and i32 %7, -262145, !dbg !3397
  store volatile i32 %8, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3397, !tbaa !3391
  %9 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3398, !tbaa !3395
  %10 = and i32 %9, -8323073, !dbg !3398
  store volatile i32 %10, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3398, !tbaa !3395
  store volatile i32 10420224, i32* inttoptr (i32 1073877000 to i32*), align 8, !dbg !3399, !tbaa !3400
  store volatile i32 134217728, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !3401, !tbaa !3402
  ret void, !dbg !3404
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !3405 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3407, metadata !DIExpression()), !dbg !3410
  call void @llvm.dbg.value(metadata i32 0, metadata !3408, metadata !DIExpression()), !dbg !3410
  call void @llvm.dbg.value(metadata i32 0, metadata !3409, metadata !DIExpression()), !dbg !3410
  %1 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3411, !tbaa !3395
  %2 = and i32 %1, 12, !dbg !3412
  call void @llvm.dbg.value(metadata i32 %2, metadata !3407, metadata !DIExpression()), !dbg !3410
  %3 = icmp eq i32 %2, 8, !dbg !3413
  br i1 %3, label %4, label %22, !dbg !3413

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3414, !tbaa !3395
  call void @llvm.dbg.value(metadata i32 %5, metadata !3408, metadata !DIExpression(DW_OP_constu, 3932160, DW_OP_and, DW_OP_stack_value)), !dbg !3410
  %6 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3416, !tbaa !3395
  %7 = and i32 %6, 65536, !dbg !3417
  call void @llvm.dbg.value(metadata i32 %7, metadata !3409, metadata !DIExpression()), !dbg !3410
  %8 = lshr i32 %5, 18, !dbg !3418
  %9 = and i32 %8, 15, !dbg !3418
  %10 = add nuw nsw i32 %9, 2, !dbg !3419
  call void @llvm.dbg.value(metadata i32 %10, metadata !3408, metadata !DIExpression()), !dbg !3410
  %11 = icmp eq i32 %7, 0, !dbg !3420
  br i1 %11, label %12, label %14, !dbg !3422

12:                                               ; preds = %4
  %13 = mul nuw nsw i32 %10, 4000000, !dbg !3423
  br label %22, !dbg !3425

14:                                               ; preds = %4
  %15 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3426, !tbaa !3395
  %16 = and i32 %15, 131072, !dbg !3429
  %17 = icmp eq i32 %16, 0, !dbg !3430
  br i1 %17, label %20, label %18, !dbg !3431

18:                                               ; preds = %14
  %19 = mul nuw nsw i32 %10, 4000000, !dbg !3432
  br label %22, !dbg !3434

20:                                               ; preds = %14
  %21 = mul nuw nsw i32 %10, 8000000, !dbg !3435
  br label %22

22:                                               ; preds = %0, %12, %20, %18
  %23 = phi i32 [ %13, %12 ], [ %21, %20 ], [ %19, %18 ], [ 8000000, %0 ]
  store i32 %23, i32* @SystemCoreClock, align 4, !dbg !3437, !tbaa !3438
  %24 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3439, !tbaa !3395
  %25 = lshr i32 %24, 4, !dbg !3440
  %26 = and i32 %25, 15, !dbg !3440
  %27 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %26, !dbg !3441
  %28 = load i8, i8* %27, align 1, !dbg !3441, !tbaa !2561
  %29 = zext i8 %28 to i32, !dbg !3441
  call void @llvm.dbg.value(metadata i32 %29, metadata !3407, metadata !DIExpression()), !dbg !3410
  %30 = load i32, i32* @SystemCoreClock, align 4, !dbg !3442, !tbaa !3438
  %31 = lshr i32 %30, %29, !dbg !3442
  store i32 %31, i32* @SystemCoreClock, align 4, !dbg !3442, !tbaa !3438
  ret void, !dbg !3443
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #4 !dbg !3444 {
  %1 = call i32 @HAL_GetTick() #33, !dbg !3450
  call void @llvm.dbg.value(metadata i32 %1, metadata !3449, metadata !DIExpression()), !dbg !3451
  %2 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3452, !tbaa !3391
  %3 = or i32 %2, 1, !dbg !3452
  store volatile i32 %3, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3452, !tbaa !3391
  br label %4, !dbg !3453

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3454, !tbaa !3391
  %6 = and i32 %5, 2, !dbg !3454
  %7 = icmp eq i32 %6, 0, !dbg !3455
  br i1 %7, label %8, label %12, !dbg !3453

8:                                                ; preds = %4
  %9 = call i32 @HAL_GetTick() #33, !dbg !3456
  %10 = sub i32 %9, %1, !dbg !3459
  %11 = icmp ugt i32 %10, 2, !dbg !3460
  br i1 %11, label %58, label %4, !dbg !3461, !llvm.loop !3462

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3464, !tbaa !3391
  %14 = and i32 %13, -249, !dbg !3464
  %15 = or i32 %14, 128, !dbg !3464
  store volatile i32 %15, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3464, !tbaa !3391
  %16 = call i32 @HAL_GetTick() #33, !dbg !3465
  call void @llvm.dbg.value(metadata i32 %16, metadata !3449, metadata !DIExpression()), !dbg !3451
  store volatile i32 0, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3466, !tbaa !3395
  br label %17, !dbg !3467

17:                                               ; preds = %21, %12
  %18 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3468, !tbaa !3395
  %19 = and i32 %18, 12, !dbg !3468
  %20 = icmp eq i32 %19, 0, !dbg !3469
  br i1 %20, label %25, label %21, !dbg !3467

21:                                               ; preds = %17
  %22 = call i32 @HAL_GetTick() #33, !dbg !3470
  %23 = sub i32 %22, %16, !dbg !3473
  %24 = icmp ugt i32 %23, 5000, !dbg !3474
  br i1 %24, label %58, label %17, !dbg !3475, !llvm.loop !3476

25:                                               ; preds = %17
  store i32 8000000, i32* @SystemCoreClock, align 4, !dbg !3478, !tbaa !3438
  %26 = load i32, i32* @uwTickPrio, align 4, !dbg !3479, !tbaa !3438
  %27 = call i32 @HAL_InitTick(i32 noundef %26) #33, !dbg !3481
  %28 = icmp eq i32 %27, 0, !dbg !3482
  br i1 %28, label %29, label %58, !dbg !3483

29:                                               ; preds = %25
  %30 = call i32 @HAL_GetTick() #33, !dbg !3484
  call void @llvm.dbg.value(metadata i32 %30, metadata !3449, metadata !DIExpression()), !dbg !3451
  %31 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3485, !tbaa !3391
  %32 = and i32 %31, -16777217, !dbg !3485
  store volatile i32 %32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3485, !tbaa !3391
  br label %33, !dbg !3486

33:                                               ; preds = %37, %29
  %34 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3487, !tbaa !3391
  %35 = and i32 %34, 33554432, !dbg !3487
  %36 = icmp eq i32 %35, 0, !dbg !3488
  br i1 %36, label %41, label %37, !dbg !3486

37:                                               ; preds = %33
  %38 = call i32 @HAL_GetTick() #33, !dbg !3489
  %39 = sub i32 %38, %30, !dbg !3492
  %40 = icmp ugt i32 %39, 2, !dbg !3493
  br i1 %40, label %58, label %33, !dbg !3494, !llvm.loop !3495

41:                                               ; preds = %33
  store volatile i32 0, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3497, !tbaa !3395
  %42 = call i32 @HAL_GetTick() #33, !dbg !3498
  call void @llvm.dbg.value(metadata i32 %42, metadata !3449, metadata !DIExpression()), !dbg !3451
  %43 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3499, !tbaa !3391
  %44 = and i32 %43, -589825, !dbg !3499
  store volatile i32 %44, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3499, !tbaa !3391
  br label %45, !dbg !3500

45:                                               ; preds = %49, %41
  %46 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3501, !tbaa !3391
  %47 = and i32 %46, 131072, !dbg !3501
  %48 = icmp eq i32 %47, 0, !dbg !3502
  br i1 %48, label %53, label %49, !dbg !3500

49:                                               ; preds = %45
  %50 = call i32 @HAL_GetTick() #33, !dbg !3503
  %51 = sub i32 %50, %42, !dbg !3506
  %52 = icmp ugt i32 %51, 100, !dbg !3507
  br i1 %52, label %58, label %45, !dbg !3508, !llvm.loop !3509

53:                                               ; preds = %45
  %54 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3511, !tbaa !3391
  %55 = and i32 %54, -262145, !dbg !3511
  store volatile i32 %55, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3511, !tbaa !3391
  %56 = load volatile i32, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !3512, !tbaa !3513
  %57 = or i32 %56, 16777216, !dbg !3512
  store volatile i32 %57, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !3512, !tbaa !3513
  store volatile i32 0, i32* inttoptr (i32 1073877000 to i32*), align 8, !dbg !3514, !tbaa !3400
  br label %58, !dbg !3515

58:                                               ; preds = %8, %21, %37, %49, %25, %53
  %59 = phi i32 [ 0, %53 ], [ 1, %25 ], [ 3, %49 ], [ 3, %37 ], [ 3, %21 ], [ 3, %8 ], !dbg !3451
  ret i32 %59, !dbg !3516
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #4 !dbg !3517 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !3539, metadata !DIExpression()), !dbg !3550
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !3551
  br i1 %3, label %298, label %4, !dbg !3553

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !3554
  %6 = load i32, i32* %5, align 4, !dbg !3554, !tbaa !3556
  %7 = and i32 %6, 1, !dbg !3559
  %8 = icmp eq i32 %7, 0, !dbg !3560
  br i1 %8, label %70, label %9, !dbg !3561

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3562, !tbaa !3395
  %11 = and i32 %10, 12, !dbg !3562
  %12 = icmp eq i32 %11, 4, !dbg !3565
  br i1 %12, label %21, label %13, !dbg !3566

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3567, !tbaa !3395
  %15 = and i32 %14, 12, !dbg !3567
  %16 = icmp eq i32 %15, 8, !dbg !3568
  br i1 %16, label %17, label %29, !dbg !3569

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3570, !tbaa !3395
  %19 = and i32 %18, 65536, !dbg !3570
  %20 = icmp eq i32 %19, 0, !dbg !3571
  br i1 %20, label %29, label %21, !dbg !3572

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3573, !tbaa !3391
  %23 = and i32 %22, 131072, !dbg !3573
  %24 = icmp eq i32 %23, 0, !dbg !3576
  br i1 %24, label %70, label %25, !dbg !3577

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !3578
  %27 = load i32, i32* %26, align 4, !dbg !3578, !tbaa !3579
  %28 = icmp eq i32 %27, 0, !dbg !3580
  br i1 %28, label %298, label %70, !dbg !3581

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !3582
  %31 = load i32, i32* %30, align 4, !dbg !3582, !tbaa !3579
  switch i32 %31, label %45 [
    i32 65536, label %32
    i32 0, label %35
    i32 327680, label %40
  ], !dbg !3586

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3587, !tbaa !3391
  %34 = or i32 %33, 65536, !dbg !3587
  br label %50, !dbg !3587

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3589, !tbaa !3391
  %37 = and i32 %36, -65537, !dbg !3589
  store volatile i32 %37, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3589, !tbaa !3391
  %38 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3589, !tbaa !3391
  %39 = and i32 %38, -262145, !dbg !3589
  br label %50, !dbg !3589

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3592, !tbaa !3391
  %42 = or i32 %41, 262144, !dbg !3592
  store volatile i32 %42, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3592, !tbaa !3391
  %43 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3592, !tbaa !3391
  %44 = or i32 %43, 65536, !dbg !3592
  br label %50, !dbg !3592

45:                                               ; preds = %29
  %46 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3595, !tbaa !3391
  %47 = and i32 %46, -65537, !dbg !3595
  store volatile i32 %47, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3595, !tbaa !3391
  %48 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3595, !tbaa !3391
  %49 = and i32 %48, -262145, !dbg !3595
  br label %50

50:                                               ; preds = %35, %45, %40, %32
  %51 = phi i32 [ %39, %35 ], [ %49, %45 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %51, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3597, !tbaa !3391
  %52 = icmp eq i32 %31, 0, !dbg !3598
  %53 = call i32 @HAL_GetTick() #33, !dbg !3600
  call void @llvm.dbg.value(metadata i32 %53, metadata !3540, metadata !DIExpression()), !dbg !3550
  call void @llvm.dbg.value(metadata i32 %53, metadata !3540, metadata !DIExpression()), !dbg !3550
  br i1 %52, label %62, label %54, !dbg !3601

54:                                               ; preds = %50, %58
  %55 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3602, !tbaa !3391
  %56 = and i32 %55, 131072, !dbg !3602
  %57 = icmp eq i32 %56, 0, !dbg !3604
  br i1 %57, label %58, label %70, !dbg !3605

58:                                               ; preds = %54
  %59 = call i32 @HAL_GetTick() #33, !dbg !3606
  %60 = sub i32 %59, %53, !dbg !3609
  %61 = icmp ugt i32 %60, 100, !dbg !3610
  br i1 %61, label %298, label %54, !dbg !3611, !llvm.loop !3612

62:                                               ; preds = %50, %66
  %63 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3614, !tbaa !3391
  %64 = and i32 %63, 131072, !dbg !3614
  %65 = icmp eq i32 %64, 0, !dbg !3616
  br i1 %65, label %70, label %66, !dbg !3617

66:                                               ; preds = %62
  %67 = call i32 @HAL_GetTick() #33, !dbg !3618
  %68 = sub i32 %67, %53, !dbg !3621
  %69 = icmp ugt i32 %68, 100, !dbg !3622
  br i1 %69, label %298, label %62, !dbg !3623, !llvm.loop !3624

70:                                               ; preds = %54, %62, %25, %21, %4
  %71 = load i32, i32* %5, align 4, !dbg !3626, !tbaa !3556
  %72 = and i32 %71, 2, !dbg !3628
  %73 = icmp eq i32 %72, 0, !dbg !3629
  br i1 %73, label %125, label %74, !dbg !3630

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3631, !tbaa !3395
  %76 = and i32 %75, 12, !dbg !3631
  %77 = icmp eq i32 %76, 0, !dbg !3634
  br i1 %77, label %86, label %78, !dbg !3635

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3636, !tbaa !3395
  %80 = and i32 %79, 12, !dbg !3636
  %81 = icmp eq i32 %80, 8, !dbg !3637
  br i1 %81, label %82, label %94, !dbg !3638

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3639, !tbaa !3395
  %84 = and i32 %83, 65536, !dbg !3639
  %85 = icmp eq i32 %84, 0, !dbg !3640
  br i1 %85, label %86, label %94, !dbg !3641

86:                                               ; preds = %82, %74
  %87 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3642, !tbaa !3391
  %88 = and i32 %87, 2, !dbg !3642
  %89 = icmp eq i32 %88, 0, !dbg !3645
  br i1 %89, label %118, label %90, !dbg !3646

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !3647
  %92 = load i32, i32* %91, align 4, !dbg !3647, !tbaa !3648
  %93 = icmp eq i32 %92, 1, !dbg !3649
  br i1 %93, label %118, label %298, !dbg !3650

94:                                               ; preds = %82, %78
  %95 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !3651
  %96 = load i32, i32* %95, align 4, !dbg !3651, !tbaa !3648
  %97 = icmp eq i32 %96, 0, !dbg !3654
  br i1 %97, label %108, label %98, !dbg !3655

98:                                               ; preds = %94
  store volatile i32 1, i32* inttoptr (i32 1111621632 to i32*), align 131072, !dbg !3656, !tbaa !3438
  %99 = call i32 @HAL_GetTick() #33, !dbg !3658
  call void @llvm.dbg.value(metadata i32 %99, metadata !3540, metadata !DIExpression()), !dbg !3550
  br label %100, !dbg !3659

100:                                              ; preds = %104, %98
  %101 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3660, !tbaa !3391
  %102 = and i32 %101, 2, !dbg !3660
  %103 = icmp eq i32 %102, 0, !dbg !3661
  br i1 %103, label %104, label %118, !dbg !3659

104:                                              ; preds = %100
  %105 = call i32 @HAL_GetTick() #33, !dbg !3662
  %106 = sub i32 %105, %99, !dbg !3665
  %107 = icmp ugt i32 %106, 2, !dbg !3666
  br i1 %107, label %298, label %100, !dbg !3667, !llvm.loop !3668

108:                                              ; preds = %94
  store volatile i32 0, i32* inttoptr (i32 1111621632 to i32*), align 131072, !dbg !3670, !tbaa !3438
  %109 = call i32 @HAL_GetTick() #33, !dbg !3672
  call void @llvm.dbg.value(metadata i32 %109, metadata !3540, metadata !DIExpression()), !dbg !3550
  br label %110, !dbg !3673

110:                                              ; preds = %114, %108
  %111 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3674, !tbaa !3391
  %112 = and i32 %111, 2, !dbg !3674
  %113 = icmp eq i32 %112, 0, !dbg !3675
  br i1 %113, label %125, label %114, !dbg !3673

114:                                              ; preds = %110
  %115 = call i32 @HAL_GetTick() #33, !dbg !3676
  %116 = sub i32 %115, %109, !dbg !3679
  %117 = icmp ugt i32 %116, 2, !dbg !3680
  br i1 %117, label %298, label %110, !dbg !3681, !llvm.loop !3682

118:                                              ; preds = %100, %86, %90
  %119 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3684, !tbaa !3391
  %120 = and i32 %119, -249, !dbg !3684
  %121 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !3684
  %122 = load i32, i32* %121, align 4, !dbg !3684, !tbaa !3685
  %123 = shl i32 %122, 3, !dbg !3684
  %124 = or i32 %123, %120, !dbg !3684
  store volatile i32 %124, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3684, !tbaa !3391
  br label %125, !dbg !3686

125:                                              ; preds = %110, %118, %70
  %126 = load i32, i32* %5, align 4, !dbg !3686, !tbaa !3556
  %127 = and i32 %126, 8, !dbg !3688
  %128 = icmp eq i32 %127, 0, !dbg !3689
  br i1 %128, label %154, label %129, !dbg !3690

129:                                              ; preds = %125
  %130 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !3691
  %131 = load i32, i32* %130, align 4, !dbg !3691, !tbaa !3694
  %132 = icmp eq i32 %131, 0, !dbg !3695
  br i1 %132, label %144, label %133, !dbg !3696

133:                                              ; preds = %129
  store volatile i32 1, i32* inttoptr (i32 1111622784 to i32*), align 128, !dbg !3697, !tbaa !3438
  %134 = call i32 @HAL_GetTick() #33, !dbg !3699
  call void @llvm.dbg.value(metadata i32 %134, metadata !3540, metadata !DIExpression()), !dbg !3550
  br label %135, !dbg !3700

135:                                              ; preds = %139, %133
  %136 = load volatile i32, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !3701, !tbaa !3513
  %137 = and i32 %136, 2, !dbg !3701
  %138 = icmp eq i32 %137, 0, !dbg !3702
  br i1 %138, label %139, label %143, !dbg !3700

139:                                              ; preds = %135
  %140 = call i32 @HAL_GetTick() #33, !dbg !3703
  %141 = sub i32 %140, %134, !dbg !3706
  %142 = icmp ugt i32 %141, 2, !dbg !3707
  br i1 %142, label %298, label %135, !dbg !3708, !llvm.loop !3709

143:                                              ; preds = %135
  call fastcc void @RCC_Delay(), !dbg !3711
  br label %154, !dbg !3712

144:                                              ; preds = %129
  store volatile i32 0, i32* inttoptr (i32 1111622784 to i32*), align 128, !dbg !3713, !tbaa !3438
  %145 = call i32 @HAL_GetTick() #33, !dbg !3715
  call void @llvm.dbg.value(metadata i32 %145, metadata !3540, metadata !DIExpression()), !dbg !3550
  br label %146, !dbg !3716

146:                                              ; preds = %150, %144
  %147 = load volatile i32, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !3717, !tbaa !3513
  %148 = and i32 %147, 2, !dbg !3717
  %149 = icmp eq i32 %148, 0, !dbg !3718
  br i1 %149, label %154, label %150, !dbg !3716

150:                                              ; preds = %146
  %151 = call i32 @HAL_GetTick() #33, !dbg !3719
  %152 = sub i32 %151, %145, !dbg !3722
  %153 = icmp ugt i32 %152, 2, !dbg !3723
  br i1 %153, label %298, label %146, !dbg !3724, !llvm.loop !3725

154:                                              ; preds = %146, %143, %125
  %155 = load i32, i32* %5, align 4, !dbg !3727, !tbaa !3556
  %156 = and i32 %155, 4, !dbg !3728
  %157 = icmp eq i32 %156, 0, !dbg !3729
  br i1 %157, label %231, label %158, !dbg !3730

158:                                              ; preds = %154
  call void @llvm.dbg.value(metadata i32 0, metadata !3542, metadata !DIExpression()), !dbg !3731
  %159 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !3732, !tbaa !3733
  %160 = and i32 %159, 268435456, !dbg !3732
  %161 = icmp eq i32 %160, 0, !dbg !3732
  br i1 %161, label %162, label %170, !dbg !3734

162:                                              ; preds = %158
  %163 = bitcast i32* %2 to i8*, !dbg !3735
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %163), !dbg !3735
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3546, metadata !DIExpression()), !dbg !3735
  %164 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !3735, !tbaa !3733
  %165 = or i32 %164, 268435456, !dbg !3735
  store volatile i32 %165, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !3735, !tbaa !3733
  %166 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !3735, !tbaa !3733
  %167 = and i32 %166, 268435456, !dbg !3735
  store volatile i32 %167, i32* %2, align 4, !dbg !3735, !tbaa !3438
  %168 = load volatile i32, i32* %2, align 4, !dbg !3735, !tbaa !3438
  %169 = bitcast i32* %2 to i8*, !dbg !3736
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %169), !dbg !3736
  call void @llvm.dbg.value(metadata i32 1, metadata !3542, metadata !DIExpression()), !dbg !3731
  br label %170, !dbg !3737

170:                                              ; preds = %162, %158
  call void @llvm.dbg.value(metadata i32 undef, metadata !3542, metadata !DIExpression()), !dbg !3731
  %171 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !3738, !tbaa !3740
  %172 = and i32 %171, 256, !dbg !3738
  %173 = icmp eq i32 %172, 0, !dbg !3738
  br i1 %173, label %174, label %186, !dbg !3742

174:                                              ; preds = %170
  %175 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !3743, !tbaa !3740
  %176 = or i32 %175, 256, !dbg !3743
  store volatile i32 %176, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !3743, !tbaa !3740
  %177 = call i32 @HAL_GetTick() #33, !dbg !3745
  call void @llvm.dbg.value(metadata i32 %177, metadata !3540, metadata !DIExpression()), !dbg !3550
  br label %178, !dbg !3746

178:                                              ; preds = %182, %174
  %179 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !3747, !tbaa !3740
  %180 = and i32 %179, 256, !dbg !3747
  %181 = icmp eq i32 %180, 0, !dbg !3747
  br i1 %181, label %182, label %186, !dbg !3746

182:                                              ; preds = %178
  %183 = call i32 @HAL_GetTick() #33, !dbg !3748
  %184 = sub i32 %183, %177, !dbg !3751
  %185 = icmp ugt i32 %184, 100, !dbg !3752
  br i1 %185, label %298, label %178, !dbg !3753, !llvm.loop !3754

186:                                              ; preds = %178, %170
  %187 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !3756
  %188 = load i32, i32* %187, align 4, !dbg !3756, !tbaa !3759
  switch i32 %188, label %202 [
    i32 1, label %189
    i32 0, label %192
    i32 5, label %197
  ], !dbg !3760

189:                                              ; preds = %186
  %190 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3761, !tbaa !3763
  %191 = or i32 %190, 1, !dbg !3761
  br label %207, !dbg !3761

192:                                              ; preds = %186
  %193 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3764, !tbaa !3763
  %194 = and i32 %193, -2, !dbg !3764
  store volatile i32 %194, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3764, !tbaa !3763
  %195 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3764, !tbaa !3763
  %196 = and i32 %195, -5, !dbg !3764
  br label %207, !dbg !3764

197:                                              ; preds = %186
  %198 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3767, !tbaa !3763
  %199 = or i32 %198, 4, !dbg !3767
  store volatile i32 %199, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3767, !tbaa !3763
  %200 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3767, !tbaa !3763
  %201 = or i32 %200, 1, !dbg !3767
  br label %207, !dbg !3767

202:                                              ; preds = %186
  %203 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3770, !tbaa !3763
  %204 = and i32 %203, -2, !dbg !3770
  store volatile i32 %204, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3770, !tbaa !3763
  %205 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3770, !tbaa !3763
  %206 = and i32 %205, -5, !dbg !3770
  br label %207

207:                                              ; preds = %192, %202, %197, %189
  %208 = phi i32 [ %196, %192 ], [ %206, %202 ], [ %201, %197 ], [ %191, %189 ]
  store volatile i32 %208, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3772, !tbaa !3763
  %209 = icmp eq i32 %188, 0, !dbg !3773
  %210 = call i32 @HAL_GetTick() #33, !dbg !3775
  call void @llvm.dbg.value(metadata i32 %210, metadata !3540, metadata !DIExpression()), !dbg !3550
  call void @llvm.dbg.value(metadata i32 %210, metadata !3540, metadata !DIExpression()), !dbg !3550
  br i1 %209, label %219, label %211, !dbg !3776

211:                                              ; preds = %207, %215
  %212 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3777, !tbaa !3763
  %213 = and i32 %212, 2, !dbg !3777
  %214 = icmp eq i32 %213, 0, !dbg !3779
  br i1 %214, label %215, label %227, !dbg !3780

215:                                              ; preds = %211
  %216 = call i32 @HAL_GetTick() #33, !dbg !3781
  %217 = sub i32 %216, %210, !dbg !3784
  %218 = icmp ugt i32 %217, 5000, !dbg !3785
  br i1 %218, label %298, label %211, !dbg !3786, !llvm.loop !3787

219:                                              ; preds = %207, %223
  %220 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3789, !tbaa !3763
  %221 = and i32 %220, 2, !dbg !3789
  %222 = icmp eq i32 %221, 0, !dbg !3791
  br i1 %222, label %227, label %223, !dbg !3792

223:                                              ; preds = %219
  %224 = call i32 @HAL_GetTick() #33, !dbg !3793
  %225 = sub i32 %224, %210, !dbg !3796
  %226 = icmp ugt i32 %225, 5000, !dbg !3797
  br i1 %226, label %298, label %219, !dbg !3798, !llvm.loop !3799

227:                                              ; preds = %211, %219
  br i1 %161, label %228, label %231, !dbg !3801

228:                                              ; preds = %227
  %229 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !3802, !tbaa !3733
  %230 = and i32 %229, -268435457, !dbg !3802
  store volatile i32 %230, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !3802, !tbaa !3733
  br label %231, !dbg !3805

231:                                              ; preds = %228, %227, %154
  %232 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 0, !dbg !3806
  %233 = load i32, i32* %232, align 4, !dbg !3806, !tbaa !3808
  %234 = icmp eq i32 %233, 0, !dbg !3809
  br i1 %234, label %297, label %235, !dbg !3810

235:                                              ; preds = %231
  %236 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3811, !tbaa !3395
  %237 = and i32 %236, 12, !dbg !3811
  %238 = icmp eq i32 %237, 8, !dbg !3814
  br i1 %238, label %284, label %239, !dbg !3815

239:                                              ; preds = %235
  %240 = icmp eq i32 %233, 2, !dbg !3816
  store volatile i32 0, i32* inttoptr (i32 1111621728 to i32*), align 32, !dbg !3819, !tbaa !3438
  %241 = call i32 @HAL_GetTick() #33, !dbg !3819
  call void @llvm.dbg.value(metadata i32 %241, metadata !3540, metadata !DIExpression()), !dbg !3550
  call void @llvm.dbg.value(metadata i32 %241, metadata !3540, metadata !DIExpression()), !dbg !3550
  br i1 %240, label %242, label %276, !dbg !3820

242:                                              ; preds = %239, %246
  %243 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3821, !tbaa !3391
  %244 = and i32 %243, 33554432, !dbg !3821
  %245 = icmp eq i32 %244, 0, !dbg !3823
  br i1 %245, label %250, label %246, !dbg !3824

246:                                              ; preds = %242
  %247 = call i32 @HAL_GetTick() #33, !dbg !3825
  %248 = sub i32 %247, %241, !dbg !3828
  %249 = icmp ugt i32 %248, 2, !dbg !3829
  br i1 %249, label %298, label %242, !dbg !3830, !llvm.loop !3831

250:                                              ; preds = %242
  %251 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 1, !dbg !3833
  %252 = load i32, i32* %251, align 4, !dbg !3833, !tbaa !3835
  %253 = icmp eq i32 %252, 65536, !dbg !3836
  br i1 %253, label %254, label %260, !dbg !3837

254:                                              ; preds = %250
  %255 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3838, !tbaa !3395
  %256 = and i32 %255, -131073, !dbg !3838
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !3838
  %258 = load i32, i32* %257, align 4, !dbg !3838, !tbaa !3840
  %259 = or i32 %256, %258, !dbg !3838
  store volatile i32 %259, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3838, !tbaa !3395
  br label %260, !dbg !3841

260:                                              ; preds = %254, %250
  %261 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3842, !tbaa !3395
  %262 = and i32 %261, -3997697, !dbg !3842
  %263 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 2, !dbg !3842
  %264 = load i32, i32* %263, align 4, !dbg !3842, !tbaa !3843
  %265 = or i32 %264, %252, !dbg !3842
  %266 = or i32 %265, %262, !dbg !3842
  store volatile i32 %266, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3842, !tbaa !3395
  store volatile i32 1, i32* inttoptr (i32 1111621728 to i32*), align 32, !dbg !3844, !tbaa !3438
  %267 = call i32 @HAL_GetTick() #33, !dbg !3845
  call void @llvm.dbg.value(metadata i32 %267, metadata !3540, metadata !DIExpression()), !dbg !3550
  br label %268, !dbg !3846

268:                                              ; preds = %272, %260
  %269 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3847, !tbaa !3391
  %270 = and i32 %269, 33554432, !dbg !3847
  %271 = icmp eq i32 %270, 0, !dbg !3848
  br i1 %271, label %272, label %297, !dbg !3846

272:                                              ; preds = %268
  %273 = call i32 @HAL_GetTick() #33, !dbg !3849
  %274 = sub i32 %273, %267, !dbg !3852
  %275 = icmp ugt i32 %274, 2, !dbg !3853
  br i1 %275, label %298, label %268, !dbg !3854, !llvm.loop !3855

276:                                              ; preds = %239, %280
  %277 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3857, !tbaa !3391
  %278 = and i32 %277, 33554432, !dbg !3857
  %279 = icmp eq i32 %278, 0, !dbg !3859
  br i1 %279, label %297, label %280, !dbg !3860

280:                                              ; preds = %276
  %281 = call i32 @HAL_GetTick() #33, !dbg !3861
  %282 = sub i32 %281, %241, !dbg !3864
  %283 = icmp ugt i32 %282, 2, !dbg !3865
  br i1 %283, label %298, label %276, !dbg !3866, !llvm.loop !3867

284:                                              ; preds = %235
  %285 = icmp eq i32 %233, 1, !dbg !3869
  br i1 %285, label %298, label %286, !dbg !3872

286:                                              ; preds = %284
  %287 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3873, !tbaa !3395
  call void @llvm.dbg.value(metadata i32 %287, metadata !3541, metadata !DIExpression()), !dbg !3550
  %288 = and i32 %287, 65536, !dbg !3875
  %289 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 1, !dbg !3877
  %290 = load i32, i32* %289, align 4, !dbg !3877, !tbaa !3835
  %291 = icmp eq i32 %288, %290, !dbg !3878
  br i1 %291, label %292, label %298, !dbg !3879

292:                                              ; preds = %286
  %293 = and i32 %287, 3932160, !dbg !3880
  %294 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 2, !dbg !3881
  %295 = load i32, i32* %294, align 4, !dbg !3881, !tbaa !3843
  %296 = icmp eq i32 %293, %295, !dbg !3882
  br i1 %296, label %297, label %298, !dbg !3883

297:                                              ; preds = %276, %268, %292, %231
  br label %298, !dbg !3884

298:                                              ; preds = %58, %66, %104, %114, %139, %150, %182, %215, %223, %280, %246, %272, %286, %292, %284, %90, %25, %1, %297
  %299 = phi i32 [ 0, %297 ], [ 1, %1 ], [ 1, %25 ], [ 1, %90 ], [ 1, %284 ], [ 1, %292 ], [ 1, %286 ], [ 3, %272 ], [ 3, %246 ], [ 3, %280 ], [ 3, %223 ], [ 3, %215 ], [ 3, %182 ], [ 3, %150 ], [ 3, %139 ], [ 3, %114 ], [ 3, %104 ], [ 3, %66 ], [ 3, %58 ], !dbg !3550
  ret i32 %299, !dbg !3885
}

; Function Attrs: noinline nounwind
define internal fastcc void @RCC_Delay() unnamed_addr #4 !dbg !3886 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !3890, metadata !DIExpression()), !dbg !3892
  %2 = bitcast i32* %1 to i8*, !dbg !3893
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !3893
  call void @llvm.dbg.declare(metadata i32* %1, metadata !3891, metadata !DIExpression()), !dbg !3894
  %3 = load i32, i32* @SystemCoreClock, align 4, !dbg !3895, !tbaa !3438
  %4 = udiv i32 %3, 8000, !dbg !3896
  store volatile i32 %4, i32* %1, align 4, !dbg !3894, !tbaa !3438
  br label %5, !dbg !3897

5:                                                ; preds = %5, %0
  call void asm sideeffect "nop", ""() #33, !dbg !3898, !srcloc !3900
  %6 = load volatile i32, i32* %1, align 4, !dbg !3901, !tbaa !3438
  %7 = add i32 %6, -1, !dbg !3901
  store volatile i32 %7, i32* %1, align 4, !dbg !3901, !tbaa !3438
  %8 = icmp eq i32 %6, 0, !dbg !3902
  br i1 %8, label %9, label %5, !dbg !3902, !llvm.loop !3903

9:                                                ; preds = %5
  %10 = bitcast i32* %1 to i8*, !dbg !3905
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !3905
  ret void, !dbg !3905
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #4 !dbg !3906 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !3919, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.value(metadata i32 %1, metadata !3920, metadata !DIExpression()), !dbg !3922
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !3923
  br i1 %3, label %113, label %4, !dbg !3925

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3926, !tbaa !3928
  %6 = and i32 %5, 7, !dbg !3926
  %7 = icmp ult i32 %6, %1, !dbg !3930
  br i1 %7, label %8, label %15, !dbg !3931

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3932, !tbaa !3928
  %10 = and i32 %9, -8, !dbg !3932
  %11 = or i32 %10, %1, !dbg !3932
  store volatile i32 %11, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3932, !tbaa !3928
  %12 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3934, !tbaa !3928
  %13 = and i32 %12, 7, !dbg !3934
  %14 = icmp eq i32 %13, %1, !dbg !3936
  br i1 %14, label %15, label %113, !dbg !3937

15:                                               ; preds = %8, %4
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !3938
  %17 = load i32, i32* %16, align 4, !dbg !3938, !tbaa !3940
  %18 = and i32 %17, 2, !dbg !3942
  %19 = icmp eq i32 %18, 0, !dbg !3943
  br i1 %19, label %38, label %20, !dbg !3944

20:                                               ; preds = %15
  %21 = and i32 %17, 4, !dbg !3945
  %22 = icmp eq i32 %21, 0, !dbg !3948
  br i1 %22, label %26, label %23, !dbg !3949

23:                                               ; preds = %20
  %24 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3950, !tbaa !3395
  %25 = or i32 %24, 1792, !dbg !3950
  store volatile i32 %25, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3950, !tbaa !3395
  br label %26, !dbg !3952

26:                                               ; preds = %23, %20
  %27 = and i32 %17, 8, !dbg !3953
  %28 = icmp eq i32 %27, 0, !dbg !3955
  br i1 %28, label %32, label %29, !dbg !3956

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3957, !tbaa !3395
  %31 = or i32 %30, 14336, !dbg !3957
  store volatile i32 %31, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3957, !tbaa !3395
  br label %32, !dbg !3959

32:                                               ; preds = %29, %26
  %33 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3960, !tbaa !3395
  %34 = and i32 %33, -241, !dbg !3960
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !3960
  %36 = load i32, i32* %35, align 4, !dbg !3960, !tbaa !3961
  %37 = or i32 %34, %36, !dbg !3960
  store volatile i32 %37, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3960, !tbaa !3395
  br label %38, !dbg !3962

38:                                               ; preds = %32, %15
  %39 = and i32 %17, 1, !dbg !3963
  %40 = icmp eq i32 %39, 0, !dbg !3965
  br i1 %40, label %71, label %41, !dbg !3966

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !3967
  %43 = load i32, i32* %42, align 4, !dbg !3967, !tbaa !3970
  switch i32 %43, label %52 [
    i32 1, label %44
    i32 2, label %48
  ], !dbg !3971

44:                                               ; preds = %41
  %45 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3972, !tbaa !3391
  %46 = and i32 %45, 131072, !dbg !3972
  %47 = icmp eq i32 %46, 0, !dbg !3975
  br i1 %47, label %113, label %56, !dbg !3976

48:                                               ; preds = %41
  %49 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3977, !tbaa !3391
  %50 = and i32 %49, 33554432, !dbg !3977
  %51 = icmp eq i32 %50, 0, !dbg !3981
  br i1 %51, label %113, label %56, !dbg !3982

52:                                               ; preds = %41
  %53 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3983, !tbaa !3391
  %54 = and i32 %53, 2, !dbg !3983
  %55 = icmp eq i32 %54, 0, !dbg !3986
  br i1 %55, label %113, label %56, !dbg !3987

56:                                               ; preds = %48, %52, %44
  %57 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3988, !tbaa !3395
  %58 = and i32 %57, -4, !dbg !3988
  %59 = or i32 %58, %43, !dbg !3988
  store volatile i32 %59, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3988, !tbaa !3395
  %60 = call i32 @HAL_GetTick() #33, !dbg !3989
  call void @llvm.dbg.value(metadata i32 %60, metadata !3921, metadata !DIExpression()), !dbg !3922
  br label %61, !dbg !3990

61:                                               ; preds = %67, %56
  %62 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3991, !tbaa !3395
  %63 = and i32 %62, 12, !dbg !3991
  %64 = load i32, i32* %42, align 4, !dbg !3992, !tbaa !3970
  %65 = shl i32 %64, 2, !dbg !3993
  %66 = icmp eq i32 %63, %65, !dbg !3994
  br i1 %66, label %71, label %67, !dbg !3990

67:                                               ; preds = %61
  %68 = call i32 @HAL_GetTick() #33, !dbg !3995
  %69 = sub i32 %68, %60, !dbg !3998
  %70 = icmp ugt i32 %69, 5000, !dbg !3999
  br i1 %70, label %113, label %61, !dbg !4000, !llvm.loop !4001

71:                                               ; preds = %61, %38
  %72 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !4003, !tbaa !3928
  %73 = and i32 %72, 7, !dbg !4003
  %74 = icmp ugt i32 %73, %1, !dbg !4005
  br i1 %74, label %75, label %82, !dbg !4006

75:                                               ; preds = %71
  %76 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !4007, !tbaa !3928
  %77 = and i32 %76, -8, !dbg !4007
  %78 = or i32 %77, %1, !dbg !4007
  store volatile i32 %78, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !4007, !tbaa !3928
  %79 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !4009, !tbaa !3928
  %80 = and i32 %79, 7, !dbg !4009
  %81 = icmp eq i32 %80, %1, !dbg !4011
  br i1 %81, label %82, label %113, !dbg !4012

82:                                               ; preds = %75, %71
  %83 = load i32, i32* %16, align 4, !dbg !4013, !tbaa !3940
  %84 = and i32 %83, 4, !dbg !4015
  %85 = icmp eq i32 %84, 0, !dbg !4016
  br i1 %85, label %92, label %86, !dbg !4017

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4018, !tbaa !3395
  %88 = and i32 %87, -1793, !dbg !4018
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !4018
  %90 = load i32, i32* %89, align 4, !dbg !4018, !tbaa !4020
  %91 = or i32 %88, %90, !dbg !4018
  store volatile i32 %91, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4018, !tbaa !3395
  br label %92, !dbg !4021

92:                                               ; preds = %86, %82
  %93 = and i32 %83, 8, !dbg !4022
  %94 = icmp eq i32 %93, 0, !dbg !4024
  br i1 %94, label %102, label %95, !dbg !4025

95:                                               ; preds = %92
  %96 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4026, !tbaa !3395
  %97 = and i32 %96, -14337, !dbg !4026
  %98 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !4026
  %99 = load i32, i32* %98, align 4, !dbg !4026, !tbaa !4028
  %100 = shl i32 %99, 3, !dbg !4026
  %101 = or i32 %100, %97, !dbg !4026
  store volatile i32 %101, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4026, !tbaa !3395
  br label %102, !dbg !4029

102:                                              ; preds = %95, %92
  %103 = call i32 @HAL_RCC_GetSysClockFreq(), !dbg !4030
  %104 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4031, !tbaa !3395
  %105 = lshr i32 %104, 4, !dbg !4032
  %106 = and i32 %105, 15, !dbg !4032
  %107 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %106, !dbg !4033
  %108 = load i8, i8* %107, align 1, !dbg !4033, !tbaa !2561
  %109 = zext i8 %108 to i32, !dbg !4033
  %110 = lshr i32 %103, %109, !dbg !4034
  store i32 %110, i32* @SystemCoreClock, align 4, !dbg !4035, !tbaa !3438
  %111 = load i32, i32* @uwTickPrio, align 4, !dbg !4036, !tbaa !3438
  %112 = call i32 @HAL_InitTick(i32 noundef %111) #33, !dbg !4037
  br label %113, !dbg !4038

113:                                              ; preds = %67, %75, %52, %48, %44, %8, %2, %102
  %114 = phi i32 [ 0, %102 ], [ 1, %2 ], [ 1, %8 ], [ 1, %44 ], [ 1, %48 ], [ 1, %52 ], [ 1, %75 ], [ 3, %67 ], !dbg !3922
  ret i32 %114, !dbg !4039
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #16 !dbg !4040 {
  call void @llvm.dbg.declare(metadata [16 x i8]* @__const.HAL_RCC_GetSysClockFreq.aPLLMULFactorTable, metadata !4042, metadata !DIExpression()), !dbg !4050
  call void @llvm.dbg.declare(metadata [2 x i8]* @__const.HAL_RCC_GetSysClockFreq.aPredivFactorTable, metadata !4043, metadata !DIExpression()), !dbg !4051
  call void @llvm.dbg.value(metadata i32 0, metadata !4045, metadata !DIExpression()), !dbg !4052
  call void @llvm.dbg.value(metadata i32 0, metadata !4046, metadata !DIExpression()), !dbg !4052
  call void @llvm.dbg.value(metadata i32 0, metadata !4047, metadata !DIExpression()), !dbg !4052
  call void @llvm.dbg.value(metadata i32 0, metadata !4048, metadata !DIExpression()), !dbg !4052
  call void @llvm.dbg.value(metadata i32 0, metadata !4049, metadata !DIExpression()), !dbg !4052
  %1 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4053, !tbaa !3395
  call void @llvm.dbg.value(metadata i32 %1, metadata !4045, metadata !DIExpression()), !dbg !4052
  %2 = and i32 %1, 12, !dbg !4054
  %3 = icmp eq i32 %2, 8, !dbg !4055
  br i1 %3, label %4, label %23, !dbg !4055

4:                                                ; preds = %0
  %5 = lshr i32 %1, 18, !dbg !4056
  %6 = and i32 %5, 15, !dbg !4056
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @__const.HAL_RCC_GetSysClockFreq.aPLLMULFactorTable, i32 0, i32 %6, !dbg !4059
  %8 = load i8, i8* %7, align 1, !dbg !4059, !tbaa !2561
  %9 = zext i8 %8 to i32, !dbg !4059
  call void @llvm.dbg.value(metadata i32 %9, metadata !4048, metadata !DIExpression()), !dbg !4052
  %10 = and i32 %1, 65536, !dbg !4060
  %11 = icmp eq i32 %10, 0, !dbg !4062
  br i1 %11, label %21, label %12, !dbg !4063

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4064, !tbaa !3395
  %14 = lshr i32 %13, 17, !dbg !4066
  %15 = and i32 %14, 1, !dbg !4066
  %16 = getelementptr inbounds [2 x i8], [2 x i8]* @__const.HAL_RCC_GetSysClockFreq.aPredivFactorTable, i32 0, i32 %15, !dbg !4067
  %17 = load i8, i8* %16, align 1, !dbg !4067, !tbaa !2561
  %18 = zext i8 %17 to i32, !dbg !4067
  call void @llvm.dbg.value(metadata i32 %18, metadata !4046, metadata !DIExpression()), !dbg !4052
  %19 = mul nuw nsw i32 %9, 8000000, !dbg !4068
  %20 = udiv i32 %19, %18, !dbg !4069
  call void @llvm.dbg.value(metadata i32 %20, metadata !4047, metadata !DIExpression()), !dbg !4052
  br label %23, !dbg !4070

21:                                               ; preds = %4
  %22 = mul nuw nsw i32 %9, 4000000, !dbg !4071
  call void @llvm.dbg.value(metadata i32 %22, metadata !4047, metadata !DIExpression()), !dbg !4052
  br label %23

23:                                               ; preds = %0, %12, %21
  %24 = phi i32 [ %20, %12 ], [ %22, %21 ], [ 8000000, %0 ], !dbg !4073
  call void @llvm.dbg.value(metadata i32 %24, metadata !4049, metadata !DIExpression()), !dbg !4052
  ret i32 %24, !dbg !4074
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #4 !dbg !4075 {
  %4 = alloca %struct.DMA_Channel_TypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4079, metadata !DIExpression()), !dbg !4092
  call void @llvm.dbg.value(metadata i32 %1, metadata !4080, metadata !DIExpression()), !dbg !4092
  call void @llvm.dbg.value(metadata i32 %2, metadata !4081, metadata !DIExpression()), !dbg !4092
  %6 = bitcast %struct.DMA_Channel_TypeDef* %4 to i8*, !dbg !4093
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #33, !dbg !4093
  call void @llvm.dbg.declare(metadata %struct.DMA_Channel_TypeDef* %4, metadata !4082, metadata !DIExpression()), !dbg !4094
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(16) %6, i8 0, i32 16, i1 false), !dbg !4094
  %7 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %4, i32 0, i32 1, !dbg !4095
  store i32 2, i32* %7, align 4, !dbg !4096, !tbaa !4097
  %8 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %4, i32 0, i32 3, !dbg !4099
  store i32 3, i32* %8, align 4, !dbg !4100, !tbaa !4101
  %9 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %4, i32 0, i32 2, !dbg !4102
  store i32 0, i32* %9, align 4, !dbg !4103, !tbaa !4104
  %10 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %4, i32 0, i32 0, !dbg !4105
  store i32 256, i32* %10, align 4, !dbg !4106, !tbaa !4107
  %11 = bitcast i32* %5 to i8*, !dbg !4108
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11), !dbg !4108
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4090, metadata !DIExpression()), !dbg !4108
  %12 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4108, !tbaa !4109
  %13 = or i32 %12, 4, !dbg !4108
  store volatile i32 %13, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4108, !tbaa !4109
  %14 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4108, !tbaa !4109
  %15 = and i32 %14, 4, !dbg !4108
  store volatile i32 %15, i32* %5, align 4, !dbg !4108, !tbaa !3438
  %16 = load volatile i32, i32* %5, align 4, !dbg !4108, !tbaa !3438
  %17 = bitcast i32* %5 to i8*, !dbg !4110
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17), !dbg !4110
  call void @HAL_GPIO_Init(%struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073809408 to %struct.USART_TypeDef*), %struct.DMA_Channel_TypeDef* noundef nonnull %4) #33, !dbg !4111
  %18 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4112, !tbaa !3395
  %19 = and i32 %18, -117440513, !dbg !4112
  %20 = or i32 %19, %1, !dbg !4112
  store volatile i32 %20, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4112, !tbaa !3395
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #33, !dbg !4113
  ret void, !dbg !4113
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !4114 {
  store volatile i32 1, i32* inttoptr (i32 1111621708 to i32*), align 4, !dbg !4115, !tbaa !3438
  ret void, !dbg !4116
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !4117 {
  store volatile i32 0, i32* inttoptr (i32 1111621708 to i32*), align 4, !dbg !4118, !tbaa !3438
  ret void, !dbg !4119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #17 !dbg !4120 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !4121, !tbaa !3438
  ret i32 %1, !dbg !4122
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !4123 {
  %1 = call i32 @HAL_RCC_GetHCLKFreq(), !dbg !4124
  %2 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4125, !tbaa !3395
  %3 = lshr i32 %2, 8, !dbg !4126
  %4 = and i32 %3, 7, !dbg !4126
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !4127
  %6 = load i8, i8* %5, align 1, !dbg !4127, !tbaa !2561
  %7 = zext i8 %6 to i32, !dbg !4127
  %8 = lshr i32 %1, %7, !dbg !4128
  ret i32 %8, !dbg !4129
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !4130 {
  %1 = call i32 @HAL_RCC_GetHCLKFreq(), !dbg !4131
  %2 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4132, !tbaa !3395
  %3 = lshr i32 %2, 11, !dbg !4133
  %4 = and i32 %3, 7, !dbg !4133
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !4134
  %6 = load i8, i8* %5, align 1, !dbg !4134, !tbaa !2561
  %7 = zext i8 %6 to i32, !dbg !4134
  %8 = lshr i32 %1, %7, !dbg !4135
  ret i32 %8, !dbg !4136
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #16 !dbg !4137 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !4141, metadata !DIExpression()), !dbg !4142
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !4143
  store i32 15, i32* %2, align 4, !dbg !4144, !tbaa !3556
  %3 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !4145, !tbaa !3391
  %4 = and i32 %3, 262144, !dbg !4147
  %5 = icmp eq i32 %4, 0, !dbg !4148
  br i1 %5, label %8, label %6, !dbg !4149

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !4150
  store i32 327680, i32* %7, align 4, !dbg !4152, !tbaa !3579
  br label %15, !dbg !4153

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !4154, !tbaa !3391
  %10 = and i32 %9, 65536, !dbg !4156
  %11 = icmp eq i32 %10, 0, !dbg !4157
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !4158
  br i1 %11, label %14, label %13, !dbg !4159

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !4160, !tbaa !3579
  br label %15, !dbg !4162

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !4163, !tbaa !3579
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4165, !tbaa !3395
  %17 = and i32 %16, 131072, !dbg !4165
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !4166
  store i32 %17, i32* %18, align 4, !dbg !4167, !tbaa !3840
  %19 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !4168, !tbaa !3391
  %20 = and i32 %19, 1, !dbg !4170
  %21 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !4171
  store i32 %20, i32* %21, align 4, !dbg !4171, !tbaa !3648
  %22 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !4172, !tbaa !3391
  %23 = lshr i32 %22, 3, !dbg !4173
  %24 = and i32 %23, 31, !dbg !4173
  %25 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !4174
  store i32 %24, i32* %25, align 4, !dbg !4175, !tbaa !3685
  %26 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !4176, !tbaa !3763
  %27 = and i32 %26, 4, !dbg !4178
  %28 = icmp eq i32 %27, 0, !dbg !4179
  br i1 %28, label %31, label %29, !dbg !4180

29:                                               ; preds = %15
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !4181
  store i32 5, i32* %30, align 4, !dbg !4183, !tbaa !3759
  br label %38, !dbg !4184

31:                                               ; preds = %15
  %32 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !4185, !tbaa !3763
  %33 = and i32 %32, 1, !dbg !4187
  %34 = icmp eq i32 %33, 0, !dbg !4188
  %35 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !4189
  br i1 %34, label %37, label %36, !dbg !4190

36:                                               ; preds = %31
  store i32 1, i32* %35, align 4, !dbg !4191, !tbaa !3759
  br label %38, !dbg !4193

37:                                               ; preds = %31
  store i32 0, i32* %35, align 4, !dbg !4194, !tbaa !3759
  br label %38

38:                                               ; preds = %36, %37, %29
  %39 = load volatile i32, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !4196, !tbaa !3513
  %40 = and i32 %39, 1, !dbg !4198
  %41 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !4199
  store i32 %40, i32* %41, align 4, !dbg !4199, !tbaa !3694
  %42 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !4200, !tbaa !3391
  %43 = and i32 %42, 16777216, !dbg !4202
  %44 = icmp eq i32 %43, 0, !dbg !4203
  %45 = select i1 %44, i32 1, i32 2, !dbg !4204
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 0, !dbg !4205
  store i32 %45, i32* %46, align 4, !dbg !4205, !tbaa !3808
  %47 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4206, !tbaa !3395
  %48 = and i32 %47, 65536, !dbg !4207
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 1, !dbg !4208
  store i32 %48, i32* %49, align 4, !dbg !4209, !tbaa !3835
  %50 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4210, !tbaa !3395
  %51 = and i32 %50, 3932160, !dbg !4211
  %52 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 2, !dbg !4212
  store i32 %51, i32* %52, align 4, !dbg !4213, !tbaa !3843
  ret void, !dbg !4214
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !4215 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !4219, metadata !DIExpression()), !dbg !4221
  call void @llvm.dbg.value(metadata i32* %1, metadata !4220, metadata !DIExpression()), !dbg !4221
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !4222
  store i32 15, i32* %3, align 4, !dbg !4223, !tbaa !3940
  %4 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4224, !tbaa !3395
  %5 = and i32 %4, 3, !dbg !4225
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !4226
  store i32 %5, i32* %6, align 4, !dbg !4227, !tbaa !3970
  %7 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4228, !tbaa !3395
  %8 = and i32 %7, 240, !dbg !4229
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !4230
  store i32 %8, i32* %9, align 4, !dbg !4231, !tbaa !3961
  %10 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4232, !tbaa !3395
  %11 = and i32 %10, 1792, !dbg !4233
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !4234
  store i32 %11, i32* %12, align 4, !dbg !4235, !tbaa !4020
  %13 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4236, !tbaa !3395
  %14 = lshr i32 %13, 3, !dbg !4237
  %15 = and i32 %14, 1792, !dbg !4237
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !4238
  store i32 %15, i32* %16, align 4, !dbg !4239, !tbaa !4028
  %17 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !4240, !tbaa !3928
  %18 = and i32 %17, 7, !dbg !4241
  store i32 %18, i32* %1, align 4, !dbg !4242, !tbaa !3438
  ret void, !dbg !4243
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #4 !dbg !4244 {
  %1 = load volatile i32, i32* inttoptr (i32 1073877000 to i32*), align 8, !dbg !4245, !tbaa !3400
  %2 = and i32 %1, 128, !dbg !4245
  %3 = icmp eq i32 %2, 0, !dbg !4245
  br i1 %3, label %5, label %4, !dbg !4247

4:                                                ; preds = %0
  call void @HAL_RCC_CSSCallback(), !dbg !4248
  store volatile i8 -128, i8* inttoptr (i32 1073877002 to i8*), align 2, !dbg !4250, !tbaa !2561
  br label %5, !dbg !4251

5:                                                ; preds = %4, %0
  ret void, !dbg !4252
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #4 !dbg !4253 {
  ret void, !dbg !4254
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_Init() local_unnamed_addr #4 !dbg !4255 {
  %1 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !4256, !tbaa !3928
  %2 = or i32 %1, 16, !dbg !4256
  store volatile i32 %2, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !4256, !tbaa !3928
  call void @HAL_NVIC_SetPriorityGrouping(i32 noundef 3) #33, !dbg !4257
  %3 = call i32 @HAL_InitTick(i32 noundef 0), !dbg !4258
  call void @HAL_MspInit(), !dbg !4259
  ret i32 0, !dbg !4260
}

; Function Attrs: noinline nounwind
define weak dso_local i32 @HAL_InitTick(i32 noundef %0) local_unnamed_addr #4 !dbg !4261 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4265, metadata !DIExpression()), !dbg !4266
  %2 = load i32, i32* @SystemCoreClock, align 4, !dbg !4267, !tbaa !3438
  %3 = load i32, i32* @uwTickFreq, align 4, !dbg !4269, !tbaa !2561
  %4 = udiv i32 1000, %3, !dbg !4270
  %5 = udiv i32 %2, %4, !dbg !4271
  %6 = call i32 @HAL_SYSTICK_Config(i32 noundef %5) #33, !dbg !4272
  %7 = icmp eq i32 %6, 0, !dbg !4273
  %8 = icmp ult i32 %0, 16
  %9 = and i1 %8, %7, !dbg !4274
  br i1 %9, label %10, label %11, !dbg !4274

10:                                               ; preds = %1
  call void @HAL_NVIC_SetPriority(i32 noundef -1, i32 noundef %0, i32 noundef 0) #33, !dbg !4275
  store i32 %0, i32* @uwTickPrio, align 4, !dbg !4278, !tbaa !3438
  br label %11, !dbg !4279

11:                                               ; preds = %1, %10
  %12 = phi i32 [ 0, %10 ], [ 1, %1 ], !dbg !4266
  ret i32 %12, !dbg !4280
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_MspInit() local_unnamed_addr #4 !dbg !4281 {
  ret void, !dbg !4282
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_DeInit() local_unnamed_addr #4 !dbg !4283 {
  store volatile i32 -1, i32* inttoptr (i32 1073877004 to i32*), align 4, !dbg !4284, !tbaa !4285
  store volatile i32 0, i32* inttoptr (i32 1073877008 to i32*), align 16, !dbg !4286, !tbaa !4287
  store volatile i32 -1, i32* inttoptr (i32 1073877004 to i32*), align 4, !dbg !4288, !tbaa !4285
  store volatile i32 0, i32* inttoptr (i32 1073877004 to i32*), align 4, !dbg !4289, !tbaa !4285
  call void @HAL_MspDeInit(), !dbg !4290
  ret i32 0, !dbg !4291
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_MspDeInit() local_unnamed_addr #4 !dbg !4292 {
  ret void, !dbg !4293
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_IncTick() local_unnamed_addr #4 !dbg !4294 {
  %1 = load i32, i32* @uwTickFreq, align 4, !dbg !4295, !tbaa !2561
  %2 = load volatile i32, i32* @uwTick, align 4, !dbg !4296, !tbaa !3438
  %3 = add i32 %2, %1, !dbg !4296
  store volatile i32 %3, i32* @uwTick, align 4, !dbg !4296, !tbaa !3438
  ret void, !dbg !4297
}

; Function Attrs: noinline nounwind
define weak dso_local i32 @HAL_GetTick() local_unnamed_addr #4 !dbg !4298 {
  %1 = load volatile i32, i32* @uwTick, align 4, !dbg !4299, !tbaa !3438
  ret i32 %1, !dbg !4300
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetTickPrio() local_unnamed_addr #17 !dbg !4301 {
  %1 = load i32, i32* @uwTickPrio, align 4, !dbg !4302, !tbaa !3438
  ret i32 %1, !dbg !4303
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_SetTickFreq(i32 noundef %0) local_unnamed_addr #4 !dbg !4304 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4308, metadata !DIExpression()), !dbg !4310
  call void @llvm.dbg.value(metadata i32 0, metadata !4309, metadata !DIExpression()), !dbg !4310
  %2 = load i32, i32* @uwTickFreq, align 4, !dbg !4311, !tbaa !2561
  %3 = icmp eq i32 %2, %0, !dbg !4313
  br i1 %3, label %9, label %4, !dbg !4314

4:                                                ; preds = %1
  %5 = load i32, i32* @uwTickPrio, align 4, !dbg !4315, !tbaa !3438
  %6 = call i32 @HAL_InitTick(i32 noundef %5), !dbg !4317
  call void @llvm.dbg.value(metadata i32 %6, metadata !4309, metadata !DIExpression()), !dbg !4310
  %7 = icmp eq i32 %6, 0, !dbg !4318
  br i1 %7, label %8, label %9, !dbg !4320

8:                                                ; preds = %4
  store i32 %0, i32* @uwTickFreq, align 4, !dbg !4321, !tbaa !2561
  br label %9, !dbg !4323

9:                                                ; preds = %4, %8, %1
  %10 = phi i32 [ 0, %8 ], [ %6, %4 ], [ 0, %1 ], !dbg !4310
  call void @llvm.dbg.value(metadata i32 %10, metadata !4309, metadata !DIExpression()), !dbg !4310
  ret i32 %10, !dbg !4324
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetTickFreq() local_unnamed_addr #17 !dbg !4325 {
  %1 = load i32, i32* @uwTickFreq, align 4, !dbg !4328, !tbaa !2561
  ret i32 %1, !dbg !4329
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_Delay(i32 noundef %0) local_unnamed_addr #4 !dbg !4330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4332, metadata !DIExpression()), !dbg !4335
  %2 = call i32 @HAL_GetTick(), !dbg !4336
  call void @llvm.dbg.value(metadata i32 %2, metadata !4333, metadata !DIExpression()), !dbg !4335
  call void @llvm.dbg.value(metadata i32 %0, metadata !4334, metadata !DIExpression()), !dbg !4335
  %3 = icmp eq i32 %0, -1, !dbg !4337
  %4 = load i32, i32* @uwTickFreq, align 4, !dbg !4339
  %5 = add i32 %4, %0, !dbg !4339
  %6 = select i1 %3, i32 -1, i32 %5, !dbg !4339
  call void @llvm.dbg.value(metadata i32 %6, metadata !4334, metadata !DIExpression()), !dbg !4335
  br label %7, !dbg !4340

7:                                                ; preds = %7, %1
  %8 = call i32 @HAL_GetTick(), !dbg !4341
  %9 = sub i32 %8, %2, !dbg !4342
  %10 = icmp ult i32 %9, %6, !dbg !4343
  br i1 %10, label %7, label %11, !dbg !4340, !llvm.loop !4344

11:                                               ; preds = %7
  ret void, !dbg !4346
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_SuspendTick() local_unnamed_addr #4 !dbg !4347 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !4348, !tbaa !4107
  %2 = and i32 %1, -3, !dbg !4348
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !4348, !tbaa !4107
  ret void, !dbg !4349
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_ResumeTick() local_unnamed_addr #4 !dbg !4350 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !4351, !tbaa !4107
  %2 = or i32 %1, 2, !dbg !4351
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !4351, !tbaa !4107
  ret void, !dbg !4352
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define dso_local i32 @HAL_GetHalVersion() local_unnamed_addr #11 !dbg !4353 {
  ret i32 16843776, !dbg !4354
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_GetREVID() local_unnamed_addr #16 !dbg !4355 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600576 to i32*), align 8192, !dbg !4356, !tbaa !3740
  %2 = lshr i32 %1, 16, !dbg !4357
  ret i32 %2, !dbg !4358
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_GetDEVID() local_unnamed_addr #16 !dbg !4359 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600576 to i32*), align 8192, !dbg !4360, !tbaa !3740
  %2 = and i32 %1, 4095, !dbg !4361
  ret i32 %2, !dbg !4362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetUIDw0() local_unnamed_addr #17 !dbg !4363 {
  %1 = load i32, i32* inttoptr (i32 536868840 to i32*), align 8, !dbg !4364, !tbaa !3438
  ret i32 %1, !dbg !4365
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetUIDw1() local_unnamed_addr #17 !dbg !4366 {
  %1 = load i32, i32* inttoptr (i32 536868844 to i32*), align 4, !dbg !4367, !tbaa !3438
  ret i32 %1, !dbg !4368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetUIDw2() local_unnamed_addr #17 !dbg !4369 {
  %1 = load i32, i32* inttoptr (i32 536868848 to i32*), align 16, !dbg !4370, !tbaa !3438
  ret i32 %1, !dbg !4371
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_EnableDBGSleepMode() local_unnamed_addr #15 !dbg !4372 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4373, !tbaa !4374
  %2 = or i32 %1, 1, !dbg !4373
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4373, !tbaa !4374
  ret void, !dbg !4375
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_DisableDBGSleepMode() local_unnamed_addr #15 !dbg !4376 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4377, !tbaa !4374
  %2 = and i32 %1, -2, !dbg !4377
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4377, !tbaa !4374
  ret void, !dbg !4378
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_EnableDBGStopMode() local_unnamed_addr #15 !dbg !4379 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4380, !tbaa !4374
  %2 = or i32 %1, 2, !dbg !4380
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4380, !tbaa !4374
  ret void, !dbg !4381
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_DisableDBGStopMode() local_unnamed_addr #15 !dbg !4382 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4383, !tbaa !4374
  %2 = and i32 %1, -3, !dbg !4383
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4383, !tbaa !4374
  ret void, !dbg !4384
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_EnableDBGStandbyMode() local_unnamed_addr #15 !dbg !4385 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4386, !tbaa !4374
  %2 = or i32 %1, 4, !dbg !4386
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4386, !tbaa !4374
  ret void, !dbg !4387
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_DisableDBGStandbyMode() local_unnamed_addr #15 !dbg !4388 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4389, !tbaa !4374
  %2 = and i32 %1, -5, !dbg !4389
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4389, !tbaa !4374
  ret void, !dbg !4390
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_NVIC_SetPriorityGrouping(i32 noundef %0) local_unnamed_addr #15 !dbg !4391 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4393, metadata !DIExpression()), !dbg !4394
  call fastcc void @__NVIC_SetPriorityGrouping(i32 noundef %0), !dbg !4395
  ret void, !dbg !4396
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_SetPriorityGrouping(i32 noundef %0) unnamed_addr #15 !dbg !4397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4399, metadata !DIExpression()), !dbg !4402
  call void @llvm.dbg.value(metadata i32 %0, metadata !4401, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4402
  %2 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !4403, !tbaa !4404
  call void @llvm.dbg.value(metadata i32 %2, metadata !4400, metadata !DIExpression()), !dbg !4402
  %3 = and i32 %2, 63743, !dbg !4405
  call void @llvm.dbg.value(metadata i32 %3, metadata !4400, metadata !DIExpression()), !dbg !4402
  %4 = shl i32 %0, 8, !dbg !4406
  %5 = and i32 %4, 1792, !dbg !4406
  %6 = or i32 %5, %3, !dbg !4407
  %7 = or i32 %6, 100270080, !dbg !4407
  call void @llvm.dbg.value(metadata i32 %7, metadata !4400, metadata !DIExpression()), !dbg !4402
  store volatile i32 %7, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !4408, !tbaa !4404
  ret void, !dbg !4409
}

; Function Attrs: nofree noinline nounwind
define dso_local void @HAL_NVIC_SetPriority(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !4410 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4415, metadata !DIExpression()), !dbg !4419
  call void @llvm.dbg.value(metadata i32 %1, metadata !4416, metadata !DIExpression()), !dbg !4419
  call void @llvm.dbg.value(metadata i32 %2, metadata !4417, metadata !DIExpression()), !dbg !4419
  call void @llvm.dbg.value(metadata i32 0, metadata !4418, metadata !DIExpression()), !dbg !4419
  %4 = call fastcc i32 @__NVIC_GetPriorityGrouping(), !dbg !4420, !range !4421
  call void @llvm.dbg.value(metadata i32 %4, metadata !4418, metadata !DIExpression()), !dbg !4419
  %5 = call fastcc i32 @NVIC_EncodePriority(i32 noundef %4, i32 noundef %1, i32 noundef %2), !dbg !4422
  call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %5), !dbg !4423
  ret void, !dbg !4424
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define internal fastcc i32 @__NVIC_GetPriorityGrouping() unnamed_addr #16 !dbg !4425 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !4426, !tbaa !4404
  %2 = lshr i32 %1, 8, !dbg !4427
  %3 = and i32 %2, 7, !dbg !4427
  ret i32 %3, !dbg !4428
}

; Function Attrs: mustprogress nofree noinline nosync nounwind readnone willreturn
define internal fastcc i32 @NVIC_EncodePriority(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #0 !dbg !4429 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4433, metadata !DIExpression()), !dbg !4439
  call void @llvm.dbg.value(metadata i32 %1, metadata !4434, metadata !DIExpression()), !dbg !4439
  call void @llvm.dbg.value(metadata i32 %2, metadata !4435, metadata !DIExpression()), !dbg !4439
  %4 = and i32 %0, 7, !dbg !4440
  call void @llvm.dbg.value(metadata i32 %4, metadata !4436, metadata !DIExpression()), !dbg !4439
  %5 = xor i32 %4, 7, !dbg !4441
  %6 = icmp ult i32 %5, 4, !dbg !4442
  %7 = select i1 %6, i32 %5, i32 4, !dbg !4442
  call void @llvm.dbg.value(metadata i32 %7, metadata !4437, metadata !DIExpression()), !dbg !4439
  %8 = call i32 @llvm.usub.sat.i32(i32 %4, i32 3), !dbg !4443
  call void @llvm.dbg.value(metadata i32 %8, metadata !4438, metadata !DIExpression()), !dbg !4439
  %9 = shl nsw i32 -1, %7, !dbg !4444
  %10 = xor i32 %9, -1, !dbg !4444
  %11 = and i32 %10, %1, !dbg !4445
  %12 = shl i32 %11, %8, !dbg !4446
  %13 = shl nsw i32 -1, %8, !dbg !4447
  %14 = xor i32 %13, -1, !dbg !4447
  %15 = and i32 %14, %2, !dbg !4448
  %16 = or i32 %12, %15, !dbg !4449
  ret i32 %16, !dbg !4450
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !4451 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4455, metadata !DIExpression()), !dbg !4457
  call void @llvm.dbg.value(metadata i32 %1, metadata !4456, metadata !DIExpression()), !dbg !4457
  %3 = trunc i32 %1 to i8, !dbg !4458
  %4 = shl i8 %3, 4, !dbg !4458
  %5 = and i32 %0, 15, !dbg !4460
  %6 = add nsw i32 %5, -4, !dbg !4460
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !4460
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !4460
  %9 = icmp slt i32 %0, 0, !dbg !4460
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !4460
  store volatile i8 %4, i8* %10, align 1, !dbg !4458, !tbaa !2561
  ret void, !dbg !4461
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_NVIC_EnableIRQ(i32 noundef %0) local_unnamed_addr #15 !dbg !4462 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4466, metadata !DIExpression()), !dbg !4467
  call fastcc void @__NVIC_EnableIRQ(i32 noundef %0), !dbg !4468
  ret void, !dbg !4469
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #15 !dbg !4470 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4472, metadata !DIExpression()), !dbg !4473
  %2 = icmp sgt i32 %0, -1, !dbg !4474
  br i1 %2, label %3, label %8, !dbg !4476

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !4477
  %5 = shl i32 1, %4, !dbg !4479
  %6 = lshr i32 %0, 5, !dbg !4480
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !4481
  store volatile i32 %5, i32* %7, align 4, !dbg !4482, !tbaa !3438
  br label %8, !dbg !4483

8:                                                ; preds = %3, %1
  ret void, !dbg !4484
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_NVIC_DisableIRQ(i32 noundef %0) local_unnamed_addr #4 !dbg !4485 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4487, metadata !DIExpression()), !dbg !4488
  call fastcc void @__NVIC_DisableIRQ(i32 noundef %0), !dbg !4489
  ret void, !dbg !4490
}

; Function Attrs: noinline nounwind
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #4 !dbg !4491 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4493, metadata !DIExpression()), !dbg !4494
  %2 = icmp sgt i32 %0, -1, !dbg !4495
  br i1 %2, label %3, label %8, !dbg !4497

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !4498
  %5 = shl i32 1, %4, !dbg !4500
  %6 = lshr i32 %0, 5, !dbg !4501
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !4502
  store volatile i32 %5, i32* %7, align 4, !dbg !4503, !tbaa !3438
  call void asm sideeffect "dsb 0xF", "~{memory}"() #33, !dbg !4504, !srcloc !4508
  call void asm sideeffect "isb 0xF", "~{memory}"() #33, !dbg !4509, !srcloc !4512
  br label %8, !dbg !4513

8:                                                ; preds = %3, %1
  ret void, !dbg !4514
}

; Function Attrs: noinline noreturn nounwind
define dso_local void @HAL_NVIC_SystemReset() local_unnamed_addr #19 !dbg !4515 {
  call fastcc void @__NVIC_SystemReset() #36, !dbg !4516
  unreachable, !dbg !4516
}

; Function Attrs: noinline noreturn nounwind
define internal fastcc void @__NVIC_SystemReset() unnamed_addr #19 !dbg !4517 {
  call void asm sideeffect "dsb 0xF", "~{memory}"() #33, !dbg !4518, !srcloc !4508
  %1 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !4520, !tbaa !4404
  %2 = and i32 %1, 1792, !dbg !4521
  %3 = or i32 %2, 100270084, !dbg !4522
  store volatile i32 %3, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !4523, !tbaa !4404
  call void asm sideeffect "dsb 0xF", "~{memory}"() #33, !dbg !4524, !srcloc !4508
  br label %4, !dbg !4526

4:                                                ; preds = %4, %0
  call void asm sideeffect "nop", ""() #33, !dbg !4527, !srcloc !4531
  br label %4, !dbg !4532, !llvm.loop !4533
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_SYSTICK_Config(i32 noundef %0) local_unnamed_addr #15 !dbg !4536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4538, metadata !DIExpression()), !dbg !4539
  %2 = call fastcc i32 @SysTick_Config(i32 noundef %0), !dbg !4540
  ret i32 %2, !dbg !4541
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc i32 @SysTick_Config(i32 noundef %0) unnamed_addr #15 !dbg !4542 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4544, metadata !DIExpression()), !dbg !4545
  %2 = add i32 %0, -1, !dbg !4546
  %3 = icmp ugt i32 %2, 16777215, !dbg !4548
  br i1 %3, label %5, label %4, !dbg !4549

4:                                                ; preds = %1
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !4550, !tbaa !4097
  call fastcc void @__NVIC_SetPriority(i32 noundef -1, i32 noundef 15), !dbg !4551
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !4552, !tbaa !4104
  store volatile i32 7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !4553, !tbaa !4107
  br label %5, !dbg !4554

5:                                                ; preds = %1, %4
  %6 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !4545
  ret i32 %6, !dbg !4555
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_NVIC_GetPriorityGrouping() local_unnamed_addr #16 !dbg !4556 {
  %1 = call fastcc i32 @__NVIC_GetPriorityGrouping(), !dbg !4557
  ret i32 %1, !dbg !4558
}

; Function Attrs: mustprogress nofree noinline nounwind willreturn
define dso_local void @HAL_NVIC_GetPriority(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #20 !dbg !4559 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4563, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata i32 %1, metadata !4564, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata i32* %2, metadata !4565, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata i32* %3, metadata !4566, metadata !DIExpression()), !dbg !4567
  %5 = call fastcc i32 @__NVIC_GetPriority(i32 noundef %0), !dbg !4568, !range !4569
  call fastcc void @NVIC_DecodePriority(i32 noundef %5, i32 noundef %1, i32* noundef %2, i32* noundef %3), !dbg !4570
  ret void, !dbg !4571
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define internal fastcc i32 @__NVIC_GetPriority(i32 noundef %0) unnamed_addr #16 !dbg !4572 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4576, metadata !DIExpression()), !dbg !4577
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !4578
  %3 = and i32 %0, 15, !dbg !4578
  %4 = add nsw i32 %3, -4, !dbg !4578
  %5 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %4, !dbg !4578
  %6 = icmp slt i32 %0, 0, !dbg !4578
  %7 = select i1 %6, i8* %5, i8* %2, !dbg !4578
  %8 = load volatile i8, i8* %7, align 1, !dbg !4579, !tbaa !2561
  %9 = lshr i8 %8, 4, !dbg !4579
  %10 = zext i8 %9 to i32, !dbg !4579
  ret i32 %10, !dbg !4581
}

; Function Attrs: mustprogress nofree noinline nosync nounwind willreturn writeonly
define internal fastcc void @NVIC_DecodePriority(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2, i32* nocapture noundef writeonly %3) unnamed_addr #21 !dbg !4582 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4587, metadata !DIExpression()), !dbg !4594
  call void @llvm.dbg.value(metadata i32 %1, metadata !4588, metadata !DIExpression()), !dbg !4594
  call void @llvm.dbg.value(metadata i32* %2, metadata !4589, metadata !DIExpression()), !dbg !4594
  call void @llvm.dbg.value(metadata i32* %3, metadata !4590, metadata !DIExpression()), !dbg !4594
  %5 = and i32 %1, 7, !dbg !4595
  call void @llvm.dbg.value(metadata i32 %5, metadata !4591, metadata !DIExpression()), !dbg !4594
  %6 = xor i32 %5, 7, !dbg !4596
  %7 = icmp ult i32 %6, 4, !dbg !4597
  %8 = select i1 %7, i32 %6, i32 4, !dbg !4597
  call void @llvm.dbg.value(metadata i32 %8, metadata !4592, metadata !DIExpression()), !dbg !4594
  %9 = call i32 @llvm.usub.sat.i32(i32 %5, i32 3), !dbg !4598
  call void @llvm.dbg.value(metadata i32 %9, metadata !4593, metadata !DIExpression()), !dbg !4594
  %10 = lshr i32 %0, %9, !dbg !4599
  %11 = shl nsw i32 -1, %8, !dbg !4600
  %12 = xor i32 %11, -1, !dbg !4600
  %13 = and i32 %10, %12, !dbg !4601
  store i32 %13, i32* %2, align 4, !dbg !4602, !tbaa !3438
  %14 = shl nsw i32 -1, %9, !dbg !4603
  %15 = xor i32 %14, -1, !dbg !4603
  %16 = and i32 %15, %0, !dbg !4604
  store i32 %16, i32* %3, align 4, !dbg !4605, !tbaa !3438
  ret void, !dbg !4606
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_NVIC_SetPendingIRQ(i32 noundef %0) local_unnamed_addr #15 !dbg !4607 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4609, metadata !DIExpression()), !dbg !4610
  call fastcc void @__NVIC_SetPendingIRQ(i32 noundef %0), !dbg !4611
  ret void, !dbg !4612
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #15 !dbg !4613 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4615, metadata !DIExpression()), !dbg !4616
  %2 = icmp sgt i32 %0, -1, !dbg !4617
  br i1 %2, label %3, label %8, !dbg !4619

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !4620
  %5 = shl i32 1, %4, !dbg !4622
  %6 = lshr i32 %0, 5, !dbg !4623
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %6, !dbg !4624
  store volatile i32 %5, i32* %7, align 4, !dbg !4625, !tbaa !3438
  br label %8, !dbg !4626

8:                                                ; preds = %3, %1
  ret void, !dbg !4627
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_NVIC_GetPendingIRQ(i32 noundef %0) local_unnamed_addr #16 !dbg !4628 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4630, metadata !DIExpression()), !dbg !4631
  %2 = call fastcc i32 @__NVIC_GetPendingIRQ(i32 noundef %0), !dbg !4632
  ret i32 %2, !dbg !4633
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define internal fastcc i32 @__NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #16 !dbg !4634 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4636, metadata !DIExpression()), !dbg !4637
  %2 = icmp sgt i32 %0, -1, !dbg !4638
  br i1 %2, label %3, label %10, !dbg !4640

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4641
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !4643
  %6 = load volatile i32, i32* %5, align 4, !dbg !4643, !tbaa !3438
  %7 = and i32 %0, 31, !dbg !4644
  %8 = lshr i32 %6, %7, !dbg !4645
  %9 = and i32 %8, 1, !dbg !4645
  br label %10, !dbg !4646

10:                                               ; preds = %1, %3
  %11 = phi i32 [ %9, %3 ], [ 0, %1 ], !dbg !4647
  ret i32 %11, !dbg !4648
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_NVIC_ClearPendingIRQ(i32 noundef %0) local_unnamed_addr #15 !dbg !4649 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4651, metadata !DIExpression()), !dbg !4652
  call fastcc void @__NVIC_ClearPendingIRQ(i32 noundef %0), !dbg !4653
  ret void, !dbg !4654
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #15 !dbg !4655 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4657, metadata !DIExpression()), !dbg !4658
  %2 = icmp sgt i32 %0, -1, !dbg !4659
  br i1 %2, label %3, label %8, !dbg !4661

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !4662
  %5 = shl i32 1, %4, !dbg !4664
  %6 = lshr i32 %0, 5, !dbg !4665
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %6, !dbg !4666
  store volatile i32 %5, i32* %7, align 4, !dbg !4667, !tbaa !3438
  br label %8, !dbg !4668

8:                                                ; preds = %3, %1
  ret void, !dbg !4669
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_NVIC_GetActive(i32 noundef %0) local_unnamed_addr #16 !dbg !4670 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4672, metadata !DIExpression()), !dbg !4673
  %2 = call fastcc i32 @__NVIC_GetActive(i32 noundef %0), !dbg !4674
  ret i32 %2, !dbg !4675
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define internal fastcc i32 @__NVIC_GetActive(i32 noundef %0) unnamed_addr #16 !dbg !4676 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4678, metadata !DIExpression()), !dbg !4679
  %2 = icmp sgt i32 %0, -1, !dbg !4680
  br i1 %2, label %3, label %10, !dbg !4682

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4683
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812800 to [8 x i32]*), i32 0, i32 %4, !dbg !4685
  %6 = load volatile i32, i32* %5, align 4, !dbg !4685, !tbaa !3438
  %7 = and i32 %0, 31, !dbg !4686
  %8 = lshr i32 %6, %7, !dbg !4687
  %9 = and i32 %8, 1, !dbg !4687
  br label %10, !dbg !4688

10:                                               ; preds = %1, %3
  %11 = phi i32 [ %9, %3 ], [ 0, %1 ], !dbg !4689
  ret i32 %11, !dbg !4690
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_SYSTICK_CLKSourceConfig(i32 noundef %0) local_unnamed_addr #15 !dbg !4691 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4693, metadata !DIExpression()), !dbg !4694
  %2 = icmp eq i32 %0, 4, !dbg !4695
  %3 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !4697, !tbaa !4107
  %4 = and i32 %3, -5, !dbg !4698
  %5 = select i1 %2, i32 4, i32 0, !dbg !4698
  %6 = or i32 %4, %5, !dbg !4698
  store volatile i32 %6, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !4697, !tbaa !4107
  ret void, !dbg !4699
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_SYSTICK_IRQHandler() local_unnamed_addr #4 !dbg !4700 {
  call void @HAL_SYSTICK_Callback(), !dbg !4701
  ret void, !dbg !4702
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_SYSTICK_Callback() local_unnamed_addr #4 !dbg !4703 {
  ret void, !dbg !4704
}

; Function Attrs: nofree noinline nounwind
define dso_local void @HAL_GPIO_Init(%struct.USART_TypeDef* noundef %0, %struct.DMA_Channel_TypeDef* nocapture noundef readonly %1) local_unnamed_addr #18 !dbg !4705 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !4717, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata %struct.DMA_Channel_TypeDef* %1, metadata !4718, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i32 0, metadata !4719, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i32 0, metadata !4723, metadata !DIExpression()), !dbg !4733
  %4 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !4719, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i32 0, metadata !4723, metadata !DIExpression()), !dbg !4733
  %5 = load i32, i32* %4, align 4, !dbg !4734, !tbaa !4107
  %6 = icmp eq i32 %5, 0, !dbg !4735
  br i1 %6, label %135, label %7, !dbg !4736

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 1
  %9 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 2
  %10 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4
  %11 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  %12 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 3
  %13 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 3
  %14 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 3
  %15 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 3
  %16 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0
  %17 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1
  %18 = ptrtoint %struct.USART_TypeDef* %0 to i32
  %19 = icmp eq %struct.USART_TypeDef* %0, inttoptr (i32 1073812480 to %struct.USART_TypeDef*)
  %20 = select i1 %19, i32 3, i32 4
  %21 = bitcast i32* %3 to i8*
  %22 = bitcast i32* %3 to i8*
  br label %23, !dbg !4736

23:                                               ; preds = %7, %129
  %24 = phi i32 [ %5, %7 ], [ %132, %129 ]
  %25 = phi i32 [ 0, %7 ], [ %131, %129 ]
  %26 = phi i32 [ 0, %7 ], [ %130, %129 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4719, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i32 %26, metadata !4723, metadata !DIExpression()), !dbg !4733
  %27 = shl i32 1, %25, !dbg !4737
  call void @llvm.dbg.value(metadata i32 %27, metadata !4720, metadata !DIExpression()), !dbg !4733
  %28 = and i32 %24, %27, !dbg !4738
  call void @llvm.dbg.value(metadata i32 %28, metadata !4721, metadata !DIExpression()), !dbg !4733
  %29 = icmp eq i32 %28, %27, !dbg !4739
  br i1 %29, label %30, label %129, !dbg !4740

30:                                               ; preds = %23
  %31 = load i32, i32* %8, align 4, !dbg !4741, !tbaa !4097
  switch i32 %31, label %48 [
    i32 1, label %32
    i32 17, label %34
    i32 2, label %37
    i32 18, label %40
    i32 0, label %43
    i32 269549568, label %43
    i32 270598144, label %43
    i32 271646720, label %43
    i32 269615104, label %43
    i32 270663680, label %43
    i32 271712256, label %43
    i32 3, label %47
  ], !dbg !4742

32:                                               ; preds = %30
  %33 = load i32, i32* %15, align 4, !dbg !4743, !tbaa !4101
  call void @llvm.dbg.value(metadata i32 %33, metadata !4723, metadata !DIExpression()), !dbg !4733
  br label %48, !dbg !4745

34:                                               ; preds = %30
  %35 = load i32, i32* %14, align 4, !dbg !4746, !tbaa !4101
  %36 = add i32 %35, 4, !dbg !4747
  call void @llvm.dbg.value(metadata i32 %36, metadata !4723, metadata !DIExpression()), !dbg !4733
  br label %48, !dbg !4748

37:                                               ; preds = %30
  %38 = load i32, i32* %13, align 4, !dbg !4749, !tbaa !4101
  %39 = add i32 %38, 8, !dbg !4750
  call void @llvm.dbg.value(metadata i32 %39, metadata !4723, metadata !DIExpression()), !dbg !4733
  br label %48, !dbg !4751

40:                                               ; preds = %30
  %41 = load i32, i32* %12, align 4, !dbg !4752, !tbaa !4101
  %42 = add i32 %41, 12, !dbg !4753
  call void @llvm.dbg.value(metadata i32 %42, metadata !4723, metadata !DIExpression()), !dbg !4733
  br label %48, !dbg !4754

43:                                               ; preds = %30, %30, %30, %30, %30, %30, %30
  %44 = load i32, i32* %9, align 4, !dbg !4755, !tbaa !4104
  switch i32 %44, label %46 [
    i32 0, label %48
    i32 1, label %45
  ], !dbg !4757

45:                                               ; preds = %43
  call void @llvm.dbg.value(metadata i32 8, metadata !4723, metadata !DIExpression()), !dbg !4733
  store volatile i32 %27, i32* %10, align 4, !dbg !4758, !tbaa !4761
  br label %48, !dbg !4763

46:                                               ; preds = %43
  call void @llvm.dbg.value(metadata i32 8, metadata !4723, metadata !DIExpression()), !dbg !4733
  store volatile i32 %27, i32* %11, align 4, !dbg !4764, !tbaa !4766
  br label %48

47:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 0, metadata !4723, metadata !DIExpression()), !dbg !4733
  br label %48, !dbg !4767

48:                                               ; preds = %43, %30, %46, %45, %47, %40, %37, %34, %32
  %49 = phi i32 [ %26, %30 ], [ 0, %47 ], [ 8, %45 ], [ 8, %46 ], [ %42, %40 ], [ %39, %37 ], [ %36, %34 ], [ %33, %32 ], [ 4, %43 ], !dbg !4733
  call void @llvm.dbg.value(metadata i32 %49, metadata !4723, metadata !DIExpression()), !dbg !4733
  %50 = icmp ult i32 %28, 256, !dbg !4768
  %51 = select i1 %50, i32* %16, i32* %17, !dbg !4769
  call void @llvm.dbg.value(metadata i32* %51, metadata !4724, metadata !DIExpression()), !dbg !4733
  %52 = shl i32 %25, 2, !dbg !4770
  %53 = add i32 %52, -32, !dbg !4770
  %54 = select i1 %50, i32 %52, i32 %53, !dbg !4770
  call void @llvm.dbg.value(metadata i32 %54, metadata !4725, metadata !DIExpression()), !dbg !4733
  %55 = load volatile i32, i32* %51, align 4, !dbg !4771, !tbaa !3438
  %56 = shl i32 15, %54, !dbg !4771
  %57 = xor i32 %56, -1, !dbg !4771
  %58 = and i32 %55, %57, !dbg !4771
  %59 = shl i32 %49, %54, !dbg !4771
  %60 = or i32 %58, %59, !dbg !4771
  store volatile i32 %60, i32* %51, align 4, !dbg !4771, !tbaa !3438
  %61 = load i32, i32* %8, align 4, !dbg !4772, !tbaa !4097
  %62 = and i32 %61, 268435456, !dbg !4773
  %63 = icmp eq i32 %62, 0, !dbg !4774
  br i1 %63, label %129, label %64, !dbg !4775

64:                                               ; preds = %48
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !4776
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4726, metadata !DIExpression()), !dbg !4776
  %65 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4776, !tbaa !4109
  %66 = or i32 %65, 1, !dbg !4776
  store volatile i32 %66, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4776, !tbaa !4109
  %67 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4776, !tbaa !4109
  %68 = and i32 %67, 1, !dbg !4776
  store volatile i32 %68, i32* %3, align 4, !dbg !4776, !tbaa !3438
  %69 = load volatile i32, i32* %3, align 4, !dbg !4776, !tbaa !3438
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22), !dbg !4777
  %70 = lshr i32 %25, 2, !dbg !4778
  %71 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %70, !dbg !4779
  %72 = load volatile i32, i32* %71, align 4, !dbg !4779, !tbaa !3438
  call void @llvm.dbg.value(metadata i32 %72, metadata !4722, metadata !DIExpression()), !dbg !4733
  %73 = and i32 %52, 12, !dbg !4780
  %74 = shl i32 15, %73, !dbg !4780
  %75 = xor i32 %74, -1, !dbg !4780
  %76 = and i32 %72, %75, !dbg !4780
  call void @llvm.dbg.value(metadata i32 %76, metadata !4722, metadata !DIExpression()), !dbg !4733
  switch i32 %18, label %77 [
    i32 1073809408, label %80
    i32 1073810432, label %78
    i32 1073811456, label %79
  ], !dbg !4781

77:                                               ; preds = %64
  br label %80, !dbg !4781

78:                                               ; preds = %64
  br label %80, !dbg !4781

79:                                               ; preds = %64
  br label %80, !dbg !4781

80:                                               ; preds = %64, %79, %78, %77
  %81 = phi i32 [ 0, %64 ], [ %20, %77 ], [ 1, %78 ], [ 2, %79 ], !dbg !4781
  %82 = shl i32 %81, %73, !dbg !4781
  %83 = or i32 %82, %76, !dbg !4781
  call void @llvm.dbg.value(metadata i32 %83, metadata !4722, metadata !DIExpression()), !dbg !4733
  store volatile i32 %83, i32* %71, align 4, !dbg !4782, !tbaa !3438
  %84 = load i32, i32* %8, align 4, !dbg !4783, !tbaa !4097
  %85 = and i32 %84, 65536, !dbg !4785
  %86 = icmp eq i32 %85, 0, !dbg !4786
  br i1 %86, label %90, label %87, !dbg !4787

87:                                               ; preds = %80
  %88 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !4788, !tbaa !4790
  %89 = or i32 %88, %28, !dbg !4788
  br label %94, !dbg !4792

90:                                               ; preds = %80
  %91 = xor i32 %28, -1, !dbg !4793
  %92 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !4793, !tbaa !4790
  %93 = and i32 %92, %91, !dbg !4793
  br label %94

94:                                               ; preds = %90, %87
  %95 = phi i32 [ %93, %90 ], [ %89, %87 ]
  store volatile i32 %95, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !4795, !tbaa !4790
  %96 = and i32 %84, 131072, !dbg !4796
  %97 = icmp eq i32 %96, 0, !dbg !4798
  br i1 %97, label %101, label %98, !dbg !4799

98:                                               ; preds = %94
  %99 = load volatile i32, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !4800, !tbaa !4802
  %100 = or i32 %99, %28, !dbg !4800
  br label %105, !dbg !4803

101:                                              ; preds = %94
  %102 = xor i32 %28, -1, !dbg !4804
  %103 = load volatile i32, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !4804, !tbaa !4802
  %104 = and i32 %103, %102, !dbg !4804
  br label %105

105:                                              ; preds = %101, %98
  %106 = phi i32 [ %104, %101 ], [ %100, %98 ]
  store volatile i32 %106, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !4806, !tbaa !4802
  %107 = and i32 %84, 1048576, !dbg !4807
  %108 = icmp eq i32 %107, 0, !dbg !4809
  br i1 %108, label %112, label %109, !dbg !4810

109:                                              ; preds = %105
  %110 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !4811, !tbaa !4813
  %111 = or i32 %110, %28, !dbg !4811
  br label %116, !dbg !4814

112:                                              ; preds = %105
  %113 = xor i32 %28, -1, !dbg !4815
  %114 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !4815, !tbaa !4813
  %115 = and i32 %114, %113, !dbg !4815
  br label %116

116:                                              ; preds = %112, %109
  %117 = phi i32 [ %115, %112 ], [ %111, %109 ]
  store volatile i32 %117, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !4817, !tbaa !4813
  %118 = and i32 %84, 2097152, !dbg !4818
  %119 = icmp eq i32 %118, 0, !dbg !4820
  br i1 %119, label %123, label %120, !dbg !4821

120:                                              ; preds = %116
  %121 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !4822, !tbaa !4824
  %122 = or i32 %121, %28, !dbg !4822
  br label %127, !dbg !4825

123:                                              ; preds = %116
  %124 = xor i32 %28, -1, !dbg !4826
  %125 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !4826, !tbaa !4824
  %126 = and i32 %125, %124, !dbg !4826
  br label %127

127:                                              ; preds = %120, %123
  %128 = phi i32 [ %126, %123 ], [ %122, %120 ]
  store volatile i32 %128, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !4828, !tbaa !4824
  br label %129, !dbg !4829

129:                                              ; preds = %127, %48, %23
  %130 = phi i32 [ %49, %48 ], [ %26, %23 ], [ %49, %127 ], !dbg !4830
  call void @llvm.dbg.value(metadata i32 %130, metadata !4723, metadata !DIExpression()), !dbg !4733
  %131 = add i32 %25, 1, !dbg !4829
  call void @llvm.dbg.value(metadata i32 %131, metadata !4719, metadata !DIExpression()), !dbg !4733
  %132 = load i32, i32* %4, align 4, !dbg !4734, !tbaa !4107
  %133 = lshr i32 %132, %131, !dbg !4831
  %134 = icmp eq i32 %133, 0, !dbg !4735
  br i1 %134, label %135, label %23, !dbg !4736, !llvm.loop !4832

135:                                              ; preds = %129, %2
  ret void, !dbg !4834
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_GPIO_DeInit(%struct.USART_TypeDef* noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !4835 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !4839, metadata !DIExpression()), !dbg !4846
  call void @llvm.dbg.value(metadata i32 %1, metadata !4840, metadata !DIExpression()), !dbg !4846
  call void @llvm.dbg.value(metadata i32 0, metadata !4841, metadata !DIExpression()), !dbg !4846
  %3 = icmp eq i32 %1, 0, !dbg !4847
  br i1 %3, label %62, label %4, !dbg !4848

4:                                                ; preds = %2
  %5 = ptrtoint %struct.USART_TypeDef* %0 to i32
  %6 = icmp eq %struct.USART_TypeDef* %0, inttoptr (i32 1073812480 to %struct.USART_TypeDef*)
  %7 = select i1 %6, i32 3, i32 4
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1
  %10 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %11, !dbg !4848

11:                                               ; preds = %4, %58
  %12 = phi i32 [ 0, %4 ], [ %59, %58 ]
  call void @llvm.dbg.value(metadata i32 %12, metadata !4841, metadata !DIExpression()), !dbg !4846
  %13 = shl i32 1, %12, !dbg !4849
  %14 = and i32 %13, %1, !dbg !4851
  call void @llvm.dbg.value(metadata i32 %14, metadata !4842, metadata !DIExpression()), !dbg !4846
  %15 = icmp eq i32 %14, 0, !dbg !4852
  br i1 %15, label %58, label %16, !dbg !4854

16:                                               ; preds = %11
  %17 = lshr i32 %12, 2, !dbg !4855
  %18 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %17, !dbg !4857
  %19 = load volatile i32, i32* %18, align 4, !dbg !4857, !tbaa !3438
  call void @llvm.dbg.value(metadata i32 %19, metadata !4843, metadata !DIExpression()), !dbg !4846
  %20 = shl i32 %12, 2, !dbg !4858
  %21 = and i32 %20, 12, !dbg !4858
  %22 = shl i32 15, %21, !dbg !4859
  %23 = and i32 %19, %22, !dbg !4860
  call void @llvm.dbg.value(metadata i32 %23, metadata !4843, metadata !DIExpression()), !dbg !4846
  switch i32 %5, label %24 [
    i32 1073809408, label %27
    i32 1073810432, label %25
    i32 1073811456, label %26
  ], !dbg !4861

24:                                               ; preds = %16
  br label %27, !dbg !4861

25:                                               ; preds = %16
  br label %27, !dbg !4863

26:                                               ; preds = %16
  br label %27, !dbg !4863

27:                                               ; preds = %16, %26, %25, %24
  %28 = phi i32 [ 0, %16 ], [ %7, %24 ], [ 1, %25 ], [ 2, %26 ], !dbg !4861
  %29 = shl i32 %28, %21, !dbg !4863
  %30 = icmp eq i32 %23, %29, !dbg !4864
  br i1 %30, label %31, label %44, !dbg !4865

31:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %22, metadata !4843, metadata !DIExpression()), !dbg !4846
  %32 = xor i32 %22, -1, !dbg !4866
  %33 = load volatile i32, i32* %18, align 4, !dbg !4866, !tbaa !3438
  %34 = and i32 %33, %32, !dbg !4866
  store volatile i32 %34, i32* %18, align 4, !dbg !4866, !tbaa !3438
  %35 = xor i32 %14, -1, !dbg !4868
  %36 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !4868, !tbaa !4790
  %37 = and i32 %36, %35, !dbg !4868
  store volatile i32 %37, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !4868, !tbaa !4790
  %38 = load volatile i32, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !4869, !tbaa !4802
  %39 = and i32 %38, %35, !dbg !4869
  store volatile i32 %39, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !4869, !tbaa !4802
  %40 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !4870, !tbaa !4813
  %41 = and i32 %40, %35, !dbg !4870
  store volatile i32 %41, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !4870, !tbaa !4813
  %42 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !4871, !tbaa !4824
  %43 = and i32 %42, %35, !dbg !4871
  store volatile i32 %43, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !4871, !tbaa !4824
  br label %44, !dbg !4872

44:                                               ; preds = %31, %27
  %45 = icmp ult i32 %14, 256, !dbg !4873
  %46 = select i1 %45, i32* %8, i32* %9, !dbg !4874
  call void @llvm.dbg.value(metadata i32* %46, metadata !4844, metadata !DIExpression()), !dbg !4846
  %47 = add i32 %20, -32, !dbg !4875
  %48 = select i1 %45, i32 %20, i32 %47, !dbg !4875
  call void @llvm.dbg.value(metadata i32 %48, metadata !4845, metadata !DIExpression()), !dbg !4846
  %49 = load volatile i32, i32* %46, align 4, !dbg !4876, !tbaa !3438
  %50 = shl i32 15, %48, !dbg !4876
  %51 = xor i32 %50, -1, !dbg !4876
  %52 = and i32 %49, %51, !dbg !4876
  %53 = shl i32 4, %48, !dbg !4876
  %54 = or i32 %52, %53, !dbg !4876
  store volatile i32 %54, i32* %46, align 4, !dbg !4876, !tbaa !3438
  %55 = xor i32 %14, -1, !dbg !4877
  %56 = load volatile i32, i32* %10, align 4, !dbg !4877, !tbaa !4878
  %57 = and i32 %56, %55, !dbg !4877
  store volatile i32 %57, i32* %10, align 4, !dbg !4877, !tbaa !4878
  br label %58, !dbg !4879

58:                                               ; preds = %44, %11
  %59 = add i32 %12, 1, !dbg !4880
  call void @llvm.dbg.value(metadata i32 %59, metadata !4841, metadata !DIExpression()), !dbg !4846
  %60 = lshr i32 %1, %59, !dbg !4881
  %61 = icmp eq i32 %60, 0, !dbg !4847
  br i1 %61, label %62, label %11, !dbg !4848, !llvm.loop !4882

62:                                               ; preds = %58, %2
  ret void, !dbg !4884
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_GPIO_ReadPin(%struct.USART_TypeDef* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #16 !dbg !4885 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !4890, metadata !DIExpression()), !dbg !4893
  call void @llvm.dbg.value(metadata i16 %1, metadata !4891, metadata !DIExpression()), !dbg !4893
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !4894
  %4 = load volatile i32, i32* %3, align 4, !dbg !4894, !tbaa !4896
  %5 = zext i16 %1 to i32, !dbg !4897
  %6 = and i32 %4, %5, !dbg !4898
  %7 = icmp ne i32 %6, 0, !dbg !4899
  %8 = zext i1 %7 to i32
  call void @llvm.dbg.value(metadata i32 %8, metadata !4892, metadata !DIExpression()), !dbg !4893
  ret i32 %8, !dbg !4900
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_GPIO_WritePin(%struct.USART_TypeDef* noundef %0, i16 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #15 !dbg !4901 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !4905, metadata !DIExpression()), !dbg !4908
  call void @llvm.dbg.value(metadata i16 %1, metadata !4906, metadata !DIExpression()), !dbg !4908
  call void @llvm.dbg.value(metadata i32 %2, metadata !4907, metadata !DIExpression()), !dbg !4908
  %4 = icmp eq i32 %2, 0, !dbg !4909
  %5 = zext i16 %1 to i32, !dbg !4911
  %6 = shl nuw i32 %5, 16, !dbg !4912
  %7 = select i1 %4, i32 %6, i32 %5, !dbg !4912
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !4911
  store volatile i32 %7, i32* %8, align 4, !dbg !4911, !tbaa !4761
  ret void, !dbg !4913
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_GPIO_TogglePin(%struct.USART_TypeDef* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #15 !dbg !4914 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !4918, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata i16 %1, metadata !4919, metadata !DIExpression()), !dbg !4920
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !4921
  %4 = load volatile i32, i32* %3, align 4, !dbg !4921, !tbaa !4878
  %5 = zext i16 %1 to i32, !dbg !4923
  %6 = and i32 %4, %5, !dbg !4924
  %7 = icmp eq i32 %6, 0, !dbg !4925
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !4926
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !4926
  %10 = select i1 %7, i32* %8, i32* %9, !dbg !4926
  store volatile i32 %5, i32* %10, align 4, !dbg !4927, !tbaa !3438
  ret void, !dbg !4928
}

; Function Attrs: nofree noinline nounwind
define dso_local i32 @HAL_GPIO_LockPin(%struct.USART_TypeDef* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #18 !dbg !4929 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !4933, metadata !DIExpression()), !dbg !4936
  call void @llvm.dbg.value(metadata i16 %1, metadata !4934, metadata !DIExpression()), !dbg !4936
  %4 = bitcast i32* %3 to i8*, !dbg !4937
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4937
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4935, metadata !DIExpression()), !dbg !4938
  store volatile i32 65536, i32* %3, align 4, !dbg !4938, !tbaa !3438
  %5 = zext i16 %1 to i32, !dbg !4939
  %6 = load volatile i32, i32* %3, align 4, !dbg !4939, !tbaa !3438
  %7 = or i32 %6, %5, !dbg !4939
  store volatile i32 %7, i32* %3, align 4, !dbg !4939, !tbaa !3438
  %8 = load volatile i32, i32* %3, align 4, !dbg !4940, !tbaa !3438
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 6, !dbg !4941
  store volatile i32 %8, i32* %9, align 4, !dbg !4942, !tbaa !4943
  store volatile i32 %5, i32* %9, align 4, !dbg !4944, !tbaa !4943
  %10 = load volatile i32, i32* %3, align 4, !dbg !4945, !tbaa !3438
  store volatile i32 %10, i32* %9, align 4, !dbg !4946, !tbaa !4943
  %11 = load volatile i32, i32* %9, align 4, !dbg !4947, !tbaa !4943
  store volatile i32 %11, i32* %3, align 4, !dbg !4948, !tbaa !3438
  %12 = load volatile i32, i32* %9, align 4, !dbg !4949, !tbaa !4943
  %13 = lshr i32 %12, 16, !dbg !4951
  %14 = and i32 %13, 1, !dbg !4951
  %15 = xor i32 %14, 1, !dbg !4951
  %16 = bitcast i32* %3 to i8*, !dbg !4952
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16), !dbg !4952
  ret i32 %15, !dbg !4952
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_GPIO_EXTI_IRQHandler(i16 noundef zeroext %0) local_unnamed_addr #4 !dbg !4953 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !4957, metadata !DIExpression()), !dbg !4958
  %2 = load volatile i32, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !4959, !tbaa !4961
  %3 = zext i16 %0 to i32, !dbg !4959
  %4 = and i32 %2, %3, !dbg !4959
  %5 = icmp eq i32 %4, 0, !dbg !4962
  br i1 %5, label %7, label %6, !dbg !4963

6:                                                ; preds = %1
  store volatile i32 %3, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !4964, !tbaa !4961
  call void @HAL_GPIO_EXTI_Callback(i16 noundef zeroext %0), !dbg !4966
  br label %7, !dbg !4967

7:                                                ; preds = %6, %1
  ret void, !dbg !4968
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_GPIO_EXTI_Callback(i16 noundef zeroext %0) local_unnamed_addr #4 !dbg !4969 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !4971, metadata !DIExpression()), !dbg !4972
  ret void, !dbg !4973
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada12ATCommDeviceD0Ev(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %0) unnamed_addr #4 comdat align 2 !dbg !4974 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !4976, metadata !DIExpression()), !dbg !4978
  call void @llvm.trap() #35, !dbg !4979
  unreachable, !dbg !4979
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada12ATCommDevice11serialWriteEPc(%"class.Cicada::ATCommDevice"* nocapture noundef nonnull readonly align 8 dereferenceable(232) %0, i8* noundef %1) unnamed_addr #5 align 2 !dbg !4980 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !4982, metadata !DIExpression()), !dbg !4984
  call void @llvm.dbg.value(metadata i8* %1, metadata !4983, metadata !DIExpression()), !dbg !4984
  %3 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !4985
  %4 = load i8, i8* %3, align 2, !dbg !4985, !tbaa !4987
  %5 = and i8 %4, 64, !dbg !4993
  %6 = icmp eq i8 %5, 0, !dbg !4985
  br i1 %6, label %15, label %7, !dbg !4994

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1, !dbg !4995
  %9 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %8, align 4, !dbg !4995, !tbaa !4997
  %10 = bitcast %"class.Cicada::IBufferedSerial"* %9 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !4999
  %11 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %10, align 4, !dbg !4999, !tbaa !2323
  %12 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %11, i32 8, !dbg !4999
  %13 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %12, align 4, !dbg !4999
  %14 = call noundef i64 %13(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %9, i8* noundef %1) #33, !dbg !4999
  br label %15, !dbg !5000

15:                                               ; preds = %2, %7
  %16 = phi i64 [ %14, %7 ], [ 0, %2 ], !dbg !4984
  ret i64 %16, !dbg !5001
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada12ATCommDevice10serialReadEPcy(%"class.Cicada::ATCommDevice"* nocapture noundef nonnull readonly align 8 dereferenceable(232) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #5 align 2 !dbg !5002 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !5004, metadata !DIExpression()), !dbg !5007
  call void @llvm.dbg.value(metadata i8* %1, metadata !5005, metadata !DIExpression()), !dbg !5007
  call void @llvm.dbg.value(metadata i64 %2, metadata !5006, metadata !DIExpression()), !dbg !5007
  %4 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !5008
  %5 = load i8, i8* %4, align 2, !dbg !5008, !tbaa !4987
  %6 = and i8 %5, 64, !dbg !5010
  %7 = icmp eq i8 %6, 0, !dbg !5008
  br i1 %7, label %16, label %8, !dbg !5011

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1, !dbg !5012
  %10 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %9, align 4, !dbg !5012, !tbaa !4997
  %11 = bitcast %"class.Cicada::IBufferedSerial"* %10 to i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)***, !dbg !5014
  %12 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*** %11, align 4, !dbg !5014, !tbaa !2323
  %13 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %12, i32 5, !dbg !5014
  %14 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %13, align 4, !dbg !5014
  %15 = call noundef i64 %14(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %10, i8* noundef %1, i64 noundef %2) #33, !dbg !5014
  br label %16, !dbg !5015

16:                                               ; preds = %3, %8
  %17 = phi i64 [ %15, %8 ], [ 0, %3 ], !dbg !5007
  ret i64 %17, !dbg !5016
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ATCommDevice"* @_ZThn4_N6Cicada12ATCommDeviceD1Ev(%"class.Cicada::ATCommDevice"* noundef %0) unnamed_addr #4 comdat align 2 !dbg !5017 {
  %2 = bitcast %"class.Cicada::ATCommDevice"* %0 to i8*, !dbg !5019
  %3 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !5019
  %4 = bitcast i8* %3 to %"class.Cicada::IPCommDevice"*, !dbg !5019
  %5 = tail call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceD2Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(232) %4) #33, !dbg !5019
  ret %"class.Cicada::ATCommDevice"* undef, !dbg !5019
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada12ATCommDeviceD0Ev(%"class.Cicada::ATCommDevice"* noundef %0) unnamed_addr #4 comdat align 2 !dbg !5020 {
  %2 = bitcast %"class.Cicada::ATCommDevice"* %0 to i8*, !dbg !5021
  %3 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !5021
  %4 = bitcast i8* %3 to %"class.Cicada::ATCommDevice"*, !dbg !5021
  tail call void @_ZN6Cicada12ATCommDeviceD0Ev(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %4) #33, !dbg !5021
  ret void, !dbg !5021
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::ATCommDevice"* @_ZN6Cicada12ATCommDeviceC2ERNS_15IBufferedSerialEPhS3_y(%"class.Cicada::ATCommDevice"* noundef nonnull returned align 8 dereferenceable(232) %0, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4) unnamed_addr #4 align 2 !dbg !5022 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !5024, metadata !DIExpression()), !dbg !5029
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %1, metadata !5025, metadata !DIExpression()), !dbg !5029
  call void @llvm.dbg.value(metadata i8* %2, metadata !5026, metadata !DIExpression()), !dbg !5029
  call void @llvm.dbg.value(metadata i8* %3, metadata !5027, metadata !DIExpression()), !dbg !5029
  call void @llvm.dbg.value(metadata i64 %4, metadata !5028, metadata !DIExpression()), !dbg !5029
  %6 = bitcast %"class.Cicada::ATCommDevice"* %0 to %"class.Cicada::IPCommDevice"*, !dbg !5030
  %7 = call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceC2EPhS1_y(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %6, i8* noundef %2, i8* noundef %3, i64 noundef %4) #33, !dbg !5031
  %8 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5030
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [5 x i8*] }, { [17 x i8*], [5 x i8*] }* @_ZTVN6Cicada12ATCommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %8, align 8, !dbg !5030, !tbaa !2323
  %9 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 1, i32 0, !dbg !5030
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [5 x i8*] }, { [17 x i8*], [5 x i8*] }* @_ZTVN6Cicada12ATCommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %9, align 4, !dbg !5030, !tbaa !2323
  %10 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1, !dbg !5032
  store %"class.Cicada::IBufferedSerial"* %1, %"class.Cicada::IBufferedSerial"** %10, align 4, !dbg !5032, !tbaa !2231
  ret %"class.Cicada::ATCommDevice"* %0, !dbg !5033
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::ATCommDevice"* @_ZN6Cicada12ATCommDeviceC2ERNS_15IBufferedSerialEPhS3_yy(%"class.Cicada::ATCommDevice"* noundef nonnull returned align 8 dereferenceable(232) %0, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4, i64 noundef %5) unnamed_addr #4 align 2 !dbg !5034 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !5036, metadata !DIExpression()), !dbg !5042
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %1, metadata !5037, metadata !DIExpression()), !dbg !5042
  call void @llvm.dbg.value(metadata i8* %2, metadata !5038, metadata !DIExpression()), !dbg !5042
  call void @llvm.dbg.value(metadata i8* %3, metadata !5039, metadata !DIExpression()), !dbg !5042
  call void @llvm.dbg.value(metadata i64 %4, metadata !5040, metadata !DIExpression()), !dbg !5042
  call void @llvm.dbg.value(metadata i64 %5, metadata !5041, metadata !DIExpression()), !dbg !5042
  %7 = bitcast %"class.Cicada::ATCommDevice"* %0 to %"class.Cicada::IPCommDevice"*, !dbg !5043
  %8 = call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceC2EPhS1_yy(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %7, i8* noundef %2, i8* noundef %3, i64 noundef %4, i64 noundef %5) #33, !dbg !5044
  %9 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5043
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [5 x i8*] }, { [17 x i8*], [5 x i8*] }* @_ZTVN6Cicada12ATCommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8, !dbg !5043, !tbaa !2323
  %10 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 1, i32 0, !dbg !5043
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [5 x i8*] }, { [17 x i8*], [5 x i8*] }* @_ZTVN6Cicada12ATCommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %10, align 4, !dbg !5043, !tbaa !2323
  %11 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1, !dbg !5045
  store %"class.Cicada::IBufferedSerial"* %1, %"class.Cicada::IBufferedSerial"** %11, align 4, !dbg !5045, !tbaa !2231
  ret %"class.Cicada::ATCommDevice"* %0, !dbg !5046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define dso_local void @_ZN6Cicada12ATCommDevice9logStatesEaa(%"class.Cicada::ATCommDevice"* nocapture noundef nonnull align 8 dereferenceable(232) %0, i8 noundef signext %1, i8 noundef signext %2) local_unnamed_addr #11 align 2 !dbg !5047 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !5049, metadata !DIExpression()), !dbg !5052
  call void @llvm.dbg.value(metadata i8 %1, metadata !5050, metadata !DIExpression()), !dbg !5052
  call void @llvm.dbg.value(metadata i8 %2, metadata !5051, metadata !DIExpression()), !dbg !5052
  ret void, !dbg !5053
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada12ATCommDevice15flushReadBufferEv(%"class.Cicada::ATCommDevice"* nocapture noundef nonnull align 8 dereferenceable(232) %0) local_unnamed_addr #5 align 2 !dbg !5054 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !5056, metadata !DIExpression()), !dbg !5057
  %2 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1, !dbg !5058
  %3 = bitcast %"class.Cicada::IBufferedSerial"** %2 to %"class.Cicada::ICommDevice"**, !dbg !5058
  %4 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 8
  %5 = load i64, i64* %4, align 8, !dbg !5059, !tbaa !5060
  %6 = icmp eq i64 %5, 0, !dbg !5059
  br i1 %6, label %25, label %7, !dbg !5061

7:                                                ; preds = %1, %15
  %8 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %3, align 4, !dbg !5058, !tbaa !4997
  %9 = bitcast %"class.Cicada::ICommDevice"* %8 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !5062
  %10 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %9, align 4, !dbg !5062, !tbaa !2323
  %11 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %10, i32 2, !dbg !5062
  %12 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %11, align 4, !dbg !5062
  %13 = call noundef i64 %12(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %8) #33, !dbg !5062
  %14 = icmp eq i64 %13, 0, !dbg !5058
  br i1 %14, label %25, label %15, !dbg !5063

15:                                               ; preds = %7
  %16 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %2, align 4, !dbg !5064, !tbaa !4997
  %17 = bitcast %"class.Cicada::IBufferedSerial"* %16 to i8 (%"class.Cicada::IBufferedSerial"*)***, !dbg !5066
  %18 = load i8 (%"class.Cicada::IBufferedSerial"*)**, i8 (%"class.Cicada::IBufferedSerial"*)*** %17, align 4, !dbg !5066, !tbaa !2323
  %19 = getelementptr inbounds i8 (%"class.Cicada::IBufferedSerial"*)*, i8 (%"class.Cicada::IBufferedSerial"*)** %18, i32 7, !dbg !5066
  %20 = load i8 (%"class.Cicada::IBufferedSerial"*)*, i8 (%"class.Cicada::IBufferedSerial"*)** %19, align 4, !dbg !5066
  %21 = call noundef zeroext i8 %20(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %16) #33, !dbg !5066
  %22 = load i64, i64* %4, align 8, !dbg !5067, !tbaa !5060
  %23 = add i64 %22, -1, !dbg !5067
  store i64 %23, i64* %4, align 8, !dbg !5067, !tbaa !5060
  %24 = icmp eq i64 %23, 0, !dbg !5059
  br i1 %24, label %25, label %7, !dbg !5061, !llvm.loop !5068

25:                                               ; preds = %7, %15, %1
  %26 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 7, !dbg !5070
  store i64 0, i64* %26, align 8, !dbg !5071, !tbaa !5072
  %27 = load i64, i64* %4, align 8, !dbg !5073, !tbaa !5060
  %28 = icmp eq i64 %27, 0, !dbg !5075
  br i1 %28, label %29, label %33, !dbg !5076

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !5077
  %31 = load i8, i8* %30, align 2, !dbg !5079, !tbaa !4987
  %32 = or i8 %31, 32, !dbg !5079
  store i8 %32, i8* %30, align 2, !dbg !5079, !tbaa !4987
  br label %33, !dbg !5080

33:                                               ; preds = %29, %25
  ret void, !dbg !5081
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada12ATCommDevice16handleDisconnectEa(%"class.Cicada::ATCommDevice"* nocapture noundef nonnull align 8 dereferenceable(232) %0, i8 noundef signext %1) local_unnamed_addr #22 align 2 !dbg !5082 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !5084, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.value(metadata i8 %1, metadata !5085, metadata !DIExpression()), !dbg !5086
  %3 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !5087
  %4 = load i8, i8* %3, align 2, !dbg !5087, !tbaa !4987
  %5 = and i8 %4, 8, !dbg !5089
  %6 = icmp eq i8 %5, 0, !dbg !5087
  br i1 %6, label %10, label %7, !dbg !5090

7:                                                ; preds = %2
  %8 = and i8 %4, -9, !dbg !5091
  store i8 %8, i8* %3, align 2, !dbg !5091, !tbaa !4987
  %9 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 4, !dbg !5093
  store i8 %1, i8* %9, align 2, !dbg !5094, !tbaa !5095
  br label %10, !dbg !5096

10:                                               ; preds = %2, %7
  %11 = xor i1 %6, true, !dbg !5097
  ret i1 %11, !dbg !5097
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada12ATCommDevice13handleConnectEa(%"class.Cicada::ATCommDevice"* nocapture noundef nonnull align 8 dereferenceable(232) %0, i8 noundef signext %1) local_unnamed_addr #22 align 2 !dbg !5098 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !5100, metadata !DIExpression()), !dbg !5102
  call void @llvm.dbg.value(metadata i8 %1, metadata !5101, metadata !DIExpression()), !dbg !5102
  %3 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !5103
  %4 = load i8, i8* %3, align 2, !dbg !5103, !tbaa !4987
  %5 = and i8 %4, 1, !dbg !5105
  %6 = icmp eq i8 %5, 0, !dbg !5103
  br i1 %6, label %10, label %7, !dbg !5106

7:                                                ; preds = %2
  %8 = and i8 %4, -2, !dbg !5107
  store i8 %8, i8* %3, align 2, !dbg !5107, !tbaa !4987
  %9 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 4, !dbg !5109
  store i8 %1, i8* %9, align 2, !dbg !5110, !tbaa !5095
  br label %10, !dbg !5111

10:                                               ; preds = %2, %7
  %11 = xor i1 %6, true, !dbg !5112
  ret i1 %11, !dbg !5112
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada12ATCommDevice14prepareSendingEb(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %0, i1 noundef zeroext %1) local_unnamed_addr #5 align 2 !dbg !5113 {
  %3 = alloca [6 x i8], align 1
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !5115, metadata !DIExpression()), !dbg !5121
  call void @llvm.dbg.value(metadata i1 %1, metadata !5116, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5121
  %4 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1, !dbg !5122
  %5 = bitcast %"class.Cicada::IBufferedSerial"** %4 to %"class.Cicada::ICommDevice"**, !dbg !5122
  %6 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %5, align 4, !dbg !5122, !tbaa !4997
  %7 = bitcast %"class.Cicada::ICommDevice"* %6 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !5124
  %8 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %7, align 4, !dbg !5124, !tbaa !2323
  %9 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %8, i32 3, !dbg !5124
  %10 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %9, align 4, !dbg !5124
  %11 = call noundef i64 %10(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %6) #33, !dbg !5124
  %12 = icmp ult i64 %11, 22, !dbg !5125
  br i1 %12, label %59, label %13, !dbg !5126

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 3, !dbg !5127
  %15 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %14), !dbg !5128
  %16 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 6, !dbg !5129
  store i64 %15, i64* %16, align 8, !dbg !5130, !tbaa !5131
  %17 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %5, align 4, !dbg !5132, !tbaa !4997
  %18 = bitcast %"class.Cicada::ICommDevice"* %17 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !5134
  %19 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %18, align 4, !dbg !5134, !tbaa !2323
  %20 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %19, i32 3, !dbg !5134
  %21 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %20, align 4, !dbg !5134
  %22 = call noundef i64 %21(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %17) #33, !dbg !5134
  %23 = add i64 %22, -22, !dbg !5135
  %24 = icmp ugt i64 %15, %23, !dbg !5136
  br i1 %24, label %25, label %33, !dbg !5137

25:                                               ; preds = %13
  %26 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %5, align 4, !dbg !5138, !tbaa !4997
  %27 = bitcast %"class.Cicada::ICommDevice"* %26 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !5140
  %28 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %27, align 4, !dbg !5140, !tbaa !2323
  %29 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %28, i32 3, !dbg !5140
  %30 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %29, align 4, !dbg !5140
  %31 = call noundef i64 %30(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %26) #33, !dbg !5140
  %32 = add i64 %31, -22, !dbg !5141
  store i64 %32, i64* %16, align 8, !dbg !5142, !tbaa !5131
  br label %33, !dbg !5143

33:                                               ; preds = %25, %13
  %34 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %4, align 4, !dbg !5144, !tbaa !4997
  %35 = bitcast %"class.Cicada::IBufferedSerial"* %34 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !5145
  %36 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %35, align 4, !dbg !5145, !tbaa !2323
  %37 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %36, i32 8, !dbg !5145
  %38 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %37, align 4, !dbg !5145
  %39 = call noundef i64 %38(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %34, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.30, i32 0, i32 0)) #33, !dbg !5145
  br i1 %1, label %40, label %47, !dbg !5146

40:                                               ; preds = %33
  %41 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %4, align 4, !dbg !5147, !tbaa !4997
  %42 = bitcast %"class.Cicada::IBufferedSerial"* %41 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !5150
  %43 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %42, align 4, !dbg !5150, !tbaa !2323
  %44 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %43, i32 8, !dbg !5150
  %45 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %44, align 4, !dbg !5150
  %46 = call noundef i64 %45(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %41, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.31, i32 0, i32 0)) #33, !dbg !5150
  br label %47, !dbg !5151

47:                                               ; preds = %40, %33
  %48 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i32 0, i32 0, !dbg !5152
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %48) #33, !dbg !5152
  call void @llvm.dbg.declare(metadata [6 x i8]* %3, metadata !5117, metadata !DIExpression()), !dbg !5153
  %49 = load i64, i64* %16, align 8, !dbg !5154, !tbaa !5131
  %50 = trunc i64 %49 to i32, !dbg !5154
  %51 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* noundef nonnull %48, i32 noundef 6, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 noundef %50), !dbg !5155
  %52 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %4, align 4, !dbg !5156, !tbaa !4997
  %53 = bitcast %"class.Cicada::IBufferedSerial"* %52 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !5157
  %54 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %53, align 4, !dbg !5157, !tbaa !2323
  %55 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %54, i32 8, !dbg !5157
  %56 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %55, align 4, !dbg !5157
  %57 = call noundef i64 %56(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %52, i8* noundef nonnull %48) #33, !dbg !5157
  %58 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 9, !dbg !5158
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0), i8** %58, align 8, !dbg !5159, !tbaa !5160
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %48) #33, !dbg !5161
  br label %59

59:                                               ; preds = %2, %47
  %60 = xor i1 %12, true, !dbg !5161
  ret i1 %60, !dbg !5161
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #5 comdat align 2 !dbg !5162 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5164, metadata !DIExpression()), !dbg !5166
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !5167
  %3 = load i64, i64* %2, align 8, !dbg !5167, !tbaa !5168
  ret i64 %3, !dbg !5169
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @snprintf(i8* noalias nocapture noundef writeonly, i32 noundef, i8* nocapture noundef readonly, ...) local_unnamed_addr #23

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada12ATCommDevice8sendDataEv(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %0) local_unnamed_addr #5 align 2 !dbg !5170 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !5172, metadata !DIExpression()), !dbg !5173
  %2 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 6
  %3 = load i64, i64* %2, align 8, !dbg !5174, !tbaa !5131
  %4 = add i64 %3, -1, !dbg !5174
  store i64 %4, i64* %2, align 8, !dbg !5174, !tbaa !5131
  %5 = icmp eq i64 %3, 0, !dbg !5175
  br i1 %5, label %19, label %6, !dbg !5176

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 3
  br label %9, !dbg !5176

9:                                                ; preds = %6, %9
  %10 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !5177, !tbaa !4997
  %11 = call noundef zeroext i8 @_ZN6Cicada14CircularBufferIhE4pullEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %8), !dbg !5179
  %12 = bitcast %"class.Cicada::IBufferedSerial"* %10 to void (%"class.Cicada::IBufferedSerial"*, i8)***, !dbg !5180
  %13 = load void (%"class.Cicada::IBufferedSerial"*, i8)**, void (%"class.Cicada::IBufferedSerial"*, i8)*** %12, align 4, !dbg !5180, !tbaa !2323
  %14 = getelementptr inbounds void (%"class.Cicada::IBufferedSerial"*, i8)*, void (%"class.Cicada::IBufferedSerial"*, i8)** %13, i32 9, !dbg !5180
  %15 = load void (%"class.Cicada::IBufferedSerial"*, i8)*, void (%"class.Cicada::IBufferedSerial"*, i8)** %14, align 4, !dbg !5180
  call void %15(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %10, i8 noundef zeroext %11) #33, !dbg !5180
  %16 = load i64, i64* %2, align 8, !dbg !5174, !tbaa !5131
  %17 = add i64 %16, -1, !dbg !5174
  store i64 %17, i64* %2, align 8, !dbg !5174, !tbaa !5131
  %18 = icmp eq i64 %16, 0, !dbg !5175
  br i1 %18, label %19, label %9, !dbg !5176, !llvm.loop !5181

19:                                               ; preds = %9, %1
  ret void, !dbg !5183
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i8 @_ZN6Cicada14CircularBufferIhE4pullEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #5 comdat align 2 !dbg !5184 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5186, metadata !DIExpression()), !dbg !5188
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6, !dbg !5189
  %3 = load i8*, i8** %2, align 8, !dbg !5189, !tbaa !5190
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 3, !dbg !5191
  %5 = load i64, i64* %4, align 8, !dbg !5191, !tbaa !5192
  %6 = trunc i64 %5 to i32, !dbg !5189
  %7 = getelementptr inbounds i8, i8* %3, i32 %6, !dbg !5189
  %8 = load i8, i8* %7, align 1, !dbg !5189, !tbaa !2380
  call void @llvm.dbg.value(metadata i8 %8, metadata !5187, metadata !DIExpression()), !dbg !5188
  call void @_ZN6Cicada14CircularBufferIhE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %4), !dbg !5193
  %9 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !5194
  %10 = load i64, i64* %9, align 8, !dbg !5194, !tbaa !5168
  %11 = icmp eq i64 %10, 0, !dbg !5196
  br i1 %11, label %14, label %12, !dbg !5197

12:                                               ; preds = %1
  %13 = add i64 %10, -1, !dbg !5198
  store i64 %13, i64* %9, align 8, !dbg !5198, !tbaa !5168
  br label %14, !dbg !5199

14:                                               ; preds = %12, %1
  ret i8 %8, !dbg !5200
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIhE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #5 comdat align 2 !dbg !5201 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5203, metadata !DIExpression()), !dbg !5205
  call void @llvm.dbg.value(metadata i64* %1, metadata !5204, metadata !DIExpression()), !dbg !5205
  %3 = load i64, i64* %1, align 8, !dbg !5206, !tbaa !5207
  %4 = add i64 %3, 1, !dbg !5206
  store i64 %4, i64* %1, align 8, !dbg !5206, !tbaa !5207
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !5208
  %6 = load i64, i64* %5, align 8, !dbg !5208, !tbaa !5210
  %7 = icmp ult i64 %4, %6, !dbg !5211
  %8 = select i1 %7, i64 %4, i64 0, !dbg !5212
  store i64 %8, i64* %1, align 8, !dbg !5205
  ret void, !dbg !5213
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada12ATCommDevice7receiveEv(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %0) local_unnamed_addr #5 align 2 !dbg !5214 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !5216, metadata !DIExpression()), !dbg !5217
  %2 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1, !dbg !5218
  %3 = bitcast %"class.Cicada::IBufferedSerial"** %2 to %"class.Cicada::ICommDevice"**, !dbg !5218
  %4 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %3, align 4, !dbg !5218, !tbaa !4997
  %5 = bitcast %"class.Cicada::ICommDevice"* %4 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !5220
  %6 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %5, align 4, !dbg !5220, !tbaa !2323
  %7 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %6, i32 2, !dbg !5220
  %8 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %7, align 4, !dbg !5220
  %9 = call noundef i64 %8(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %4) #33, !dbg !5220
  %10 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 8, !dbg !5221
  %11 = load i64, i64* %10, align 8, !dbg !5221, !tbaa !5060
  %12 = icmp ult i64 %9, %11, !dbg !5222
  br i1 %12, label %32, label %13, !dbg !5223

13:                                               ; preds = %1
  %14 = load i64, i64* %10, align 8, !dbg !5224, !tbaa !5060
  %15 = icmp eq i64 %14, 0, !dbg !5224
  br i1 %15, label %28, label %16, !dbg !5226

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 2
  br label %18, !dbg !5226

18:                                               ; preds = %16, %18
  %19 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %2, align 4, !dbg !5227, !tbaa !4997
  %20 = bitcast %"class.Cicada::IBufferedSerial"* %19 to i8 (%"class.Cicada::IBufferedSerial"*)***, !dbg !5229
  %21 = load i8 (%"class.Cicada::IBufferedSerial"*)**, i8 (%"class.Cicada::IBufferedSerial"*)*** %20, align 4, !dbg !5229, !tbaa !2323
  %22 = getelementptr inbounds i8 (%"class.Cicada::IBufferedSerial"*)*, i8 (%"class.Cicada::IBufferedSerial"*)** %21, i32 7, !dbg !5229
  %23 = load i8 (%"class.Cicada::IBufferedSerial"*)*, i8 (%"class.Cicada::IBufferedSerial"*)** %22, align 4, !dbg !5229
  %24 = call noundef zeroext i8 %23(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %19) #33, !dbg !5229
  call void @_ZN6Cicada14CircularBufferIhE4pushEh(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %17, i8 noundef zeroext %24), !dbg !5230
  %25 = load i64, i64* %10, align 8, !dbg !5231, !tbaa !5060
  %26 = add i64 %25, -1, !dbg !5231
  store i64 %26, i64* %10, align 8, !dbg !5231, !tbaa !5060
  %27 = icmp eq i64 %26, 0, !dbg !5224
  br i1 %27, label %28, label %18, !dbg !5226, !llvm.loop !5232

28:                                               ; preds = %18, %13
  %29 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !5234
  %30 = load i8, i8* %29, align 2, !dbg !5235, !tbaa !4987
  %31 = or i8 %30, 32, !dbg !5235
  store i8 %31, i8* %29, align 2, !dbg !5235, !tbaa !4987
  br label %32, !dbg !5236

32:                                               ; preds = %1, %28
  %33 = xor i1 %12, true, !dbg !5237
  ret i1 %33, !dbg !5237
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIhE4pushEh(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i8 noundef zeroext %1) unnamed_addr #5 comdat align 2 !dbg !5238 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5240, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata i8 %1, metadata !5241, metadata !DIExpression()), !dbg !5242
  %3 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6, !dbg !5243
  %4 = load i8*, i8** %3, align 8, !dbg !5243, !tbaa !5190
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 2, !dbg !5244
  %6 = load i64, i64* %5, align 8, !dbg !5244, !tbaa !5245
  %7 = trunc i64 %6 to i32, !dbg !5243
  %8 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5243
  store i8 %1, i8* %8, align 1, !dbg !5246, !tbaa !2380
  call void @_ZN6Cicada14CircularBufferIhE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %5), !dbg !5247
  %9 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !5248
  %10 = load i64, i64* %9, align 8, !dbg !5248, !tbaa !5168
  %11 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !5250
  %12 = load i64, i64* %11, align 8, !dbg !5250, !tbaa !5210
  %13 = icmp ult i64 %10, %12, !dbg !5251
  br i1 %13, label %14, label %16, !dbg !5252

14:                                               ; preds = %2
  %15 = add i64 %10, 1, !dbg !5253
  store i64 %15, i64* %9, align 8, !dbg !5253, !tbaa !5168
  br label %16, !dbg !5254

16:                                               ; preds = %14, %2
  ret void, !dbg !5255
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* nocapture noundef nonnull readonly align 8 dereferenceable(232) %0, i8* noundef %1) local_unnamed_addr #5 align 2 !dbg !5256 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !5258, metadata !DIExpression()), !dbg !5260
  call void @llvm.dbg.value(metadata i8* %1, metadata !5259, metadata !DIExpression()), !dbg !5260
  %3 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1, !dbg !5261
  %4 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %3, align 4, !dbg !5261, !tbaa !4997
  %5 = bitcast %"class.Cicada::IBufferedSerial"* %4 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !5262
  %6 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %5, align 4, !dbg !5262, !tbaa !2323
  %7 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %6, i32 8, !dbg !5262
  %8 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %7, align 4, !dbg !5262
  %9 = call noundef i64 %8(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %4, i8* noundef %1) #33, !dbg !5262
  %10 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %3, align 4, !dbg !5263, !tbaa !4997
  %11 = load i8*, i8** @_ZN6Cicada12ATCommDevice11_lineEndStrE, align 4, !dbg !5264, !tbaa !2231
  %12 = bitcast %"class.Cicada::IBufferedSerial"* %10 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !5265
  %13 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %12, align 4, !dbg !5265, !tbaa !2323
  %14 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %13, i32 8, !dbg !5265
  %15 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %14, align 4, !dbg !5265
  %16 = call noundef i64 %15(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %10, i8* noundef %11) #33, !dbg !5265
  ret void, !dbg !5266
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada12IPCommDeviceD0Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %0) unnamed_addr #4 comdat align 2 !dbg !5267 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5269, metadata !DIExpression()), !dbg !5271
  call void @llvm.trap() #35, !dbg !5272
  unreachable, !dbg !5272
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZNK6Cicada12IPCommDevice14bytesAvailableEv(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %0) unnamed_addr #5 align 2 !dbg !5273 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5275, metadata !DIExpression()), !dbg !5277
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 2, !dbg !5278
  %3 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %2), !dbg !5279
  ret i64 %3, !dbg !5280
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZNK6Cicada12IPCommDevice14spaceAvailableEv(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %0) unnamed_addr #5 align 2 !dbg !5281 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5283, metadata !DIExpression()), !dbg !5284
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 8, !dbg !5285
  %3 = load i32, i32* %2, align 4, !dbg !5285, !tbaa !5287
  %4 = icmp eq i32 %3, 2, !dbg !5288
  br i1 %4, label %5, label %8, !dbg !5289

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 3, !dbg !5290
  %7 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %6), !dbg !5291
  br label %8, !dbg !5292

8:                                                ; preds = %1, %5
  %9 = phi i64 [ %7, %5 ], [ 0, %1 ], !dbg !5284
  ret i64 %9, !dbg !5293
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZNK6Cicada12IPCommDevice20writeBufferProcessedEv(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %0) unnamed_addr #5 align 2 !dbg !5294 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5296, metadata !DIExpression()), !dbg !5297
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 3, !dbg !5298
  %3 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %2), !dbg !5299
  %4 = icmp eq i64 %3, 0, !dbg !5300
  %5 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 8, !dbg !5301
  %6 = load i32, i32* %5, align 4, !dbg !5301
  %7 = icmp ne i32 %6, 3, !dbg !5301
  %8 = select i1 %4, i1 %7, i1 false, !dbg !5301
  ret i1 %8, !dbg !5302
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada12IPCommDevice4readEPhy(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #5 align 2 !dbg !5303 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5305, metadata !DIExpression()), !dbg !5308
  call void @llvm.dbg.value(metadata i8* %1, metadata !5306, metadata !DIExpression()), !dbg !5308
  call void @llvm.dbg.value(metadata i64 %2, metadata !5307, metadata !DIExpression()), !dbg !5308
  %4 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 2, !dbg !5309
  %5 = call noundef i64 @_ZN6Cicada14CircularBufferIhE4pullEPhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %4, i8* noundef %1, i64 noundef %2), !dbg !5310
  ret i64 %5, !dbg !5311
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada12IPCommDevice5writeEPKhy(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #5 align 2 !dbg !5312 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5314, metadata !DIExpression()), !dbg !5317
  call void @llvm.dbg.value(metadata i8* %1, metadata !5315, metadata !DIExpression()), !dbg !5317
  call void @llvm.dbg.value(metadata i64 %2, metadata !5316, metadata !DIExpression()), !dbg !5317
  %4 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 8, !dbg !5318
  %5 = load i32, i32* %4, align 4, !dbg !5318, !tbaa !5287
  %6 = icmp eq i32 %5, 2, !dbg !5320
  br i1 %6, label %7, label %10, !dbg !5321

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 3, !dbg !5322
  %9 = call noundef i64 @_ZN6Cicada14CircularBufferIhE4pushEPKhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %8, i8* noundef %1, i64 noundef %2), !dbg !5323
  br label %10, !dbg !5324

10:                                               ; preds = %3, %7
  %11 = phi i64 [ %9, %7 ], [ 0, %3 ], !dbg !5317
  ret i64 %11, !dbg !5325
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada12IPCommDevice7connectEv(%"class.Cicada::IPCommDevice"* nocapture noundef nonnull align 8 dereferenceable(140) %0) unnamed_addr #22 align 2 !dbg !5326 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5328, metadata !DIExpression()), !dbg !5329
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 5, !dbg !5330
  %3 = load i8*, i8** %2, align 4, !dbg !5330, !tbaa !5332
  %4 = icmp eq i8* %3, null, !dbg !5333
  %5 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 6
  %6 = load i16, i16* %5, align 8
  %7 = icmp eq i16 %6, 0
  %8 = select i1 %4, i1 true, i1 %7, !dbg !5334
  br i1 %8, label %13, label %9, !dbg !5334

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 7, !dbg !5335
  %11 = load i8, i8* %10, align 2, !dbg !5336, !tbaa !4987
  %12 = or i8 %11, 1, !dbg !5336
  store i8 %12, i8* %10, align 2, !dbg !5336, !tbaa !4987
  br label %13, !dbg !5337

13:                                               ; preds = %1, %9
  %14 = xor i1 %8, true, !dbg !5338
  ret i1 %14, !dbg !5338
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada12IPCommDevice10disconnectEv(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %0) unnamed_addr #5 align 2 !dbg !5339 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5341, metadata !DIExpression()), !dbg !5342
  %2 = bitcast %"class.Cicada::IPCommDevice"* %0 to i1 (%"class.Cicada::IPCommDevice"*)***, !dbg !5343
  %3 = load i1 (%"class.Cicada::IPCommDevice"*)**, i1 (%"class.Cicada::IPCommDevice"*)*** %2, align 8, !dbg !5343, !tbaa !2323
  %4 = getelementptr inbounds i1 (%"class.Cicada::IPCommDevice"*)*, i1 (%"class.Cicada::IPCommDevice"*)** %3, i32 10, !dbg !5343
  %5 = load i1 (%"class.Cicada::IPCommDevice"*)*, i1 (%"class.Cicada::IPCommDevice"*)** %4, align 4, !dbg !5343
  %6 = call noundef zeroext i1 %5(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %0) #33, !dbg !5343
  br i1 %6, label %11, label %7, !dbg !5345

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 7, !dbg !5346
  %9 = load i8, i8* %8, align 2, !dbg !5347, !tbaa !4987
  %10 = or i8 %9, 8, !dbg !5347
  store i8 %10, i8* %8, align 2, !dbg !5347, !tbaa !4987
  br label %11, !dbg !5348

11:                                               ; preds = %1, %7
  ret void, !dbg !5348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada12IPCommDevice11isConnectedEv(%"class.Cicada::IPCommDevice"* nocapture noundef nonnull readonly align 8 dereferenceable(140) %0) unnamed_addr #17 align 2 !dbg !5349 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5351, metadata !DIExpression()), !dbg !5352
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 8, !dbg !5353
  %3 = load i32, i32* %2, align 4, !dbg !5353, !tbaa !5287
  %4 = add i32 %3, -2, !dbg !5354
  %5 = icmp ult i32 %4, 3, !dbg !5354
  ret i1 %5, !dbg !5355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada12IPCommDevice6isIdleEv(%"class.Cicada::IPCommDevice"* nocapture noundef nonnull readonly align 8 dereferenceable(140) %0) unnamed_addr #17 align 2 !dbg !5356 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5358, metadata !DIExpression()), !dbg !5359
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 8, !dbg !5360
  %3 = load i32, i32* %2, align 4, !dbg !5360, !tbaa !5287
  %4 = icmp eq i32 %3, 0, !dbg !5361
  ret i1 %4, !dbg !5362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local void @_ZN6Cicada12IPCommDevice11setHostPortEPKctNS_13IIPCommDevice14ConnectionTypeE(%"class.Cicada::IPCommDevice"* nocapture noundef nonnull writeonly align 8 dereferenceable(140) %0, i8* noundef %1, i16 noundef zeroext %2, i32 noundef %3) unnamed_addr #12 align 2 !dbg !5363 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5365, metadata !DIExpression()), !dbg !5369
  call void @llvm.dbg.value(metadata i8* %1, metadata !5366, metadata !DIExpression()), !dbg !5369
  call void @llvm.dbg.value(metadata i16 %2, metadata !5367, metadata !DIExpression()), !dbg !5369
  call void @llvm.dbg.value(metadata i32 %3, metadata !5368, metadata !DIExpression()), !dbg !5369
  %5 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 5, !dbg !5370
  store i8* %1, i8** %5, align 4, !dbg !5371, !tbaa !5332
  %6 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 6, !dbg !5372
  store i16 %2, i16* %6, align 8, !dbg !5373, !tbaa !5374
  %7 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 4, !dbg !5375
  store i32 %3, i32* %7, align 8, !dbg !5376, !tbaa !5377
  ret void, !dbg !5378
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IPCommDevice"* @_ZThn4_N6Cicada12IPCommDeviceD1Ev(%"class.Cicada::IPCommDevice"* noundef %0) unnamed_addr #4 comdat align 2 !dbg !5379 {
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 -1, i32 10, i32 0, !dbg !5380
  %3 = bitcast i8* %2 to %"class.Cicada::IPCommDevice"*, !dbg !5380
  %4 = tail call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceD2Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %3) #33, !dbg !5380
  ret %"class.Cicada::IPCommDevice"* undef, !dbg !5380
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada12IPCommDeviceD0Ev(%"class.Cicada::IPCommDevice"* noundef %0) unnamed_addr #4 comdat align 2 !dbg !5381 {
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 -1, i32 10, i32 0, !dbg !5382
  %3 = bitcast i8* %2 to %"class.Cicada::IPCommDevice"*, !dbg !5382
  tail call void @_ZN6Cicada12IPCommDeviceD0Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %3) #33, !dbg !5382
  ret void, !dbg !5382
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada14CircularBufferIhE4pushEPKhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #5 comdat align 2 !dbg !5383 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5385, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata i8* %1, metadata !5386, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata i64 %2, metadata !5387, metadata !DIExpression()), !dbg !5389
  %4 = bitcast %"class.Cicada::CircularBuffer.0"* %0 to i64 (%"class.Cicada::CircularBuffer.0"*)***, !dbg !5390
  %5 = load i64 (%"class.Cicada::CircularBuffer.0"*)**, i64 (%"class.Cicada::CircularBuffer.0"*)*** %4, align 8, !dbg !5390, !tbaa !2323
  %6 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %5, i32 11, !dbg !5390
  %7 = load i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %6, align 4, !dbg !5390
  %8 = call noundef i64 %7(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #33, !dbg !5390
  %9 = icmp ult i64 %8, %2, !dbg !5392
  br i1 %9, label %10, label %15, !dbg !5393

10:                                               ; preds = %3
  %11 = load i64 (%"class.Cicada::CircularBuffer.0"*)**, i64 (%"class.Cicada::CircularBuffer.0"*)*** %4, align 8, !dbg !5394, !tbaa !2323
  %12 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %11, i32 11, !dbg !5394
  %13 = load i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %12, align 4, !dbg !5394
  %14 = call noundef i64 %13(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #33, !dbg !5394
  call void @llvm.dbg.value(metadata i64 %14, metadata !5387, metadata !DIExpression()), !dbg !5389
  br label %15, !dbg !5395

15:                                               ; preds = %10, %3
  %16 = phi i64 [ %14, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %16, metadata !5387, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata i64 0, metadata !5388, metadata !DIExpression()), !dbg !5389
  %17 = icmp eq i64 %16, 0, !dbg !5396
  br i1 %17, label %32, label %18, !dbg !5397

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6
  %20 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 2
  br label %21, !dbg !5397

21:                                               ; preds = %18, %21
  %22 = phi i64 [ 0, %18 ], [ %23, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !5388, metadata !DIExpression()), !dbg !5389
  %23 = add nuw i64 %22, 1, !dbg !5398
  call void @llvm.dbg.value(metadata i64 %23, metadata !5388, metadata !DIExpression()), !dbg !5389
  %24 = trunc i64 %22 to i32, !dbg !5400
  %25 = getelementptr inbounds i8, i8* %1, i32 %24, !dbg !5400
  %26 = load i8, i8* %25, align 1, !dbg !5400, !tbaa !2380
  %27 = load i8*, i8** %19, align 8, !dbg !5401, !tbaa !5190
  %28 = load i64, i64* %20, align 8, !dbg !5402, !tbaa !5245
  %29 = trunc i64 %28 to i32, !dbg !5401
  %30 = getelementptr inbounds i8, i8* %27, i32 %29, !dbg !5401
  store i8 %26, i8* %30, align 1, !dbg !5403, !tbaa !2380
  call void @_ZN6Cicada14CircularBufferIhE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %20), !dbg !5404
  %31 = icmp ult i64 %23, %16, !dbg !5396
  br i1 %31, label %21, label %32, !dbg !5397, !llvm.loop !5405

32:                                               ; preds = %21, %15
  %33 = phi i64 [ 0, %15 ], [ %16, %21 ], !dbg !5389
  %34 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !5407
  %35 = load i64, i64* %34, align 8, !dbg !5408, !tbaa !5168
  %36 = add i64 %35, %33, !dbg !5408
  store i64 %36, i64* %34, align 8, !dbg !5408, !tbaa !5168
  ret i64 %33, !dbg !5409
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada14CircularBufferIhE4pullEPhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #5 comdat align 2 !dbg !5410 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5412, metadata !DIExpression()), !dbg !5416
  call void @llvm.dbg.value(metadata i8* %1, metadata !5413, metadata !DIExpression()), !dbg !5416
  call void @llvm.dbg.value(metadata i64 %2, metadata !5414, metadata !DIExpression()), !dbg !5416
  %4 = bitcast %"class.Cicada::CircularBuffer.0"* %0 to i64 (%"class.Cicada::CircularBuffer.0"*)***, !dbg !5417
  %5 = load i64 (%"class.Cicada::CircularBuffer.0"*)**, i64 (%"class.Cicada::CircularBuffer.0"*)*** %4, align 8, !dbg !5417, !tbaa !2323
  %6 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %5, i32 10, !dbg !5417
  %7 = load i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %6, align 4, !dbg !5417
  %8 = call noundef i64 %7(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #33, !dbg !5417
  %9 = icmp ult i64 %8, %2, !dbg !5419
  br i1 %9, label %10, label %15, !dbg !5420

10:                                               ; preds = %3
  %11 = load i64 (%"class.Cicada::CircularBuffer.0"*)**, i64 (%"class.Cicada::CircularBuffer.0"*)*** %4, align 8, !dbg !5421, !tbaa !2323
  %12 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %11, i32 10, !dbg !5421
  %13 = load i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %12, align 4, !dbg !5421
  %14 = call noundef i64 %13(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #33, !dbg !5421
  call void @llvm.dbg.value(metadata i64 %14, metadata !5414, metadata !DIExpression()), !dbg !5416
  br label %15, !dbg !5422

15:                                               ; preds = %10, %3
  %16 = phi i64 [ %14, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %16, metadata !5414, metadata !DIExpression()), !dbg !5416
  call void @llvm.dbg.value(metadata i64 0, metadata !5415, metadata !DIExpression()), !dbg !5416
  %17 = icmp eq i64 %16, 0, !dbg !5423
  br i1 %17, label %32, label %18, !dbg !5424

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6
  %20 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 3
  br label %21, !dbg !5424

21:                                               ; preds = %18, %21
  %22 = phi i64 [ 0, %18 ], [ %28, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !5415, metadata !DIExpression()), !dbg !5416
  %23 = load i8*, i8** %19, align 8, !dbg !5425, !tbaa !5190
  %24 = load i64, i64* %20, align 8, !dbg !5427, !tbaa !5192
  %25 = trunc i64 %24 to i32, !dbg !5425
  %26 = getelementptr inbounds i8, i8* %23, i32 %25, !dbg !5425
  %27 = load i8, i8* %26, align 1, !dbg !5425, !tbaa !2380
  %28 = add nuw i64 %22, 1, !dbg !5428
  call void @llvm.dbg.value(metadata i64 %28, metadata !5415, metadata !DIExpression()), !dbg !5416
  %29 = trunc i64 %22 to i32, !dbg !5429
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !5429
  store i8 %27, i8* %30, align 1, !dbg !5430, !tbaa !2380
  call void @_ZN6Cicada14CircularBufferIhE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %20), !dbg !5431
  %31 = icmp ult i64 %28, %16, !dbg !5423
  br i1 %31, label %21, label %32, !dbg !5424, !llvm.loop !5432

32:                                               ; preds = %21, %15
  %33 = phi i64 [ 0, %15 ], [ %16, %21 ], !dbg !5416
  %34 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !5434
  %35 = load i64, i64* %34, align 8, !dbg !5435, !tbaa !5168
  %36 = sub i64 %35, %33, !dbg !5435
  store i64 %36, i64* %34, align 8, !dbg !5435, !tbaa !5168
  ret i64 %33, !dbg !5436
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #5 comdat align 2 !dbg !5437 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5439, metadata !DIExpression()), !dbg !5440
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !5441
  %3 = load i64, i64* %2, align 8, !dbg !5441, !tbaa !5210
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !5442
  %5 = load i64, i64* %4, align 8, !dbg !5442, !tbaa !5168
  %6 = sub i64 %3, %5, !dbg !5443
  ret i64 %6, !dbg !5444
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceC2EPhS1_y(%"class.Cicada::IPCommDevice"* noundef nonnull returned align 8 dereferenceable(140) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3) unnamed_addr #4 align 2 !dbg !5445 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5447, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata i8* %1, metadata !5448, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata i8* %2, metadata !5449, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata i64 %3, metadata !5450, metadata !DIExpression()), !dbg !5451
  %5 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 0, !dbg !5452
  %6 = call noundef %"class.Cicada::IIPCommDevice"* @_ZN6Cicada13IIPCommDeviceC2Ev(%"class.Cicada::IIPCommDevice"* noundef nonnull align 4 dereferenceable(4) %5) #33, !dbg !5453
  %7 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 1, !dbg !5452
  %8 = call noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskC2Et(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %7, i16 noundef zeroext 0), !dbg !5453
  %9 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5452
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [5 x i8*] }, { [15 x i8*], [5 x i8*] }* @_ZTVN6Cicada12IPCommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8, !dbg !5452, !tbaa !2323
  %10 = getelementptr %"class.Cicada::Task", %"class.Cicada::Task"* %7, i32 0, i32 0, !dbg !5452
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [5 x i8*] }, { [15 x i8*], [5 x i8*] }* @_ZTVN6Cicada12IPCommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %10, align 4, !dbg !5452, !tbaa !2323
  %11 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 2, !dbg !5454
  %12 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhEC2EPhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %11, i8* noundef %1, i64 noundef %3), !dbg !5454
  %13 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 3, !dbg !5455
  %14 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhEC2EPhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %13, i8* noundef %2, i64 noundef %3), !dbg !5455
  %15 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 5, !dbg !5456
  store i8* null, i8** %15, align 4, !dbg !5456, !tbaa !5332
  %16 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 6, !dbg !5457
  store i16 0, i16* %16, align 8, !dbg !5457, !tbaa !5374
  %17 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 7, !dbg !5458
  store i8 32, i8* %17, align 2, !dbg !5458, !tbaa !4987
  %18 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 8, !dbg !5459
  store i32 0, i32* %18, align 4, !dbg !5459, !tbaa !5287
  %19 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 9, !dbg !5460
  store i8* null, i8** %19, align 8, !dbg !5460, !tbaa !5160
  ret %"class.Cicada::IPCommDevice"* %0, !dbg !5461
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IIPCommDevice"* @_ZN6Cicada13IIPCommDeviceC2Ev(%"class.Cicada::IIPCommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #4 comdat align 2 !dbg !5462 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IIPCommDevice"* %0, metadata !5465, metadata !DIExpression()), !dbg !5467
  %2 = getelementptr inbounds %"class.Cicada::IIPCommDevice", %"class.Cicada::IIPCommDevice"* %0, i32 0, i32 0, !dbg !5468
  %3 = call noundef %"class.Cicada::IStatefulDevice"* @_ZN6Cicada15IStatefulDeviceC2Ev(%"class.Cicada::IStatefulDevice"* noundef nonnull align 4 dereferenceable(4) %2) #33, !dbg !5468
  %4 = getelementptr inbounds %"class.Cicada::IIPCommDevice", %"class.Cicada::IIPCommDevice"* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5468
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6Cicada13IIPCommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 4, !dbg !5468, !tbaa !2323
  ret %"class.Cicada::IIPCommDevice"* %0, !dbg !5468
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhEC2EPhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull returned align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #4 comdat align 2 !dbg !5469 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5471, metadata !DIExpression()), !dbg !5474
  call void @llvm.dbg.value(metadata i8* %1, metadata !5472, metadata !DIExpression()), !dbg !5474
  call void @llvm.dbg.value(metadata i64 %2, metadata !5473, metadata !DIExpression()), !dbg !5474
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 0, !dbg !5475
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6Cicada14CircularBufferIhEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8, !dbg !5475, !tbaa !2323
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 2, !dbg !5476
  %6 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !5477
  %7 = bitcast i64* %5 to i8*, !dbg !5477
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false), !dbg !5478
  store i64 %2, i64* %6, align 8, !dbg !5477, !tbaa !5210
  %8 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6, !dbg !5479
  store i8* %1, i8** %8, align 8, !dbg !5479, !tbaa !5190
  ret %"class.Cicada::CircularBuffer.0"* %0, !dbg !5480
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIhED0Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !5481 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5483, metadata !DIExpression()), !dbg !5484
  %2 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #33, !dbg !5485
  %3 = bitcast %"class.Cicada::CircularBuffer.0"* %0 to i8*, !dbg !5485
  call void @_ZdlPv(i8* noundef %3) #34, !dbg !5485
  ret void, !dbg !5486
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i8 @_ZN6Cicada14CircularBufferIhE4readEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #5 comdat align 2 !dbg !5487 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5489, metadata !DIExpression()), !dbg !5490
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6, !dbg !5491
  %3 = load i8*, i8** %2, align 8, !dbg !5491, !tbaa !5190
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 3, !dbg !5492
  %5 = load i64, i64* %4, align 8, !dbg !5492, !tbaa !5192
  %6 = trunc i64 %5 to i32, !dbg !5491
  %7 = getelementptr inbounds i8, i8* %3, i32 %6, !dbg !5491
  %8 = load i8, i8* %7, align 1, !dbg !5491, !tbaa !2380
  ret i8 %8, !dbg !5493
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIhE5flushEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #5 comdat align 2 !dbg !5494 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5496, metadata !DIExpression()), !dbg !5497
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 2, !dbg !5498
  %3 = bitcast i64* %2 to i8*, !dbg !5499
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %3, i8 0, i64 24, i1 false), !dbg !5500
  ret void, !dbg !5499
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i1 @_ZNK6Cicada14CircularBufferIhE7isEmptyEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #5 comdat align 2 !dbg !5501 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5503, metadata !DIExpression()), !dbg !5504
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !5505
  %3 = load i64, i64* %2, align 8, !dbg !5505, !tbaa !5168
  %4 = icmp eq i64 %3, 0, !dbg !5506
  ret i1 %4, !dbg !5507
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i1 @_ZNK6Cicada14CircularBufferIhE6isFullEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #5 comdat align 2 !dbg !5508 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5510, metadata !DIExpression()), !dbg !5511
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !5512
  %3 = load i64, i64* %2, align 8, !dbg !5512, !tbaa !5168
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !5513
  %5 = load i64, i64* %4, align 8, !dbg !5513, !tbaa !5210
  %6 = icmp eq i64 %3, %5, !dbg !5514
  ret i1 %6, !dbg !5515
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIhE4sizeEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #5 comdat align 2 !dbg !5516 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !5518, metadata !DIExpression()), !dbg !5519
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !5520
  %3 = load i64, i64* %2, align 8, !dbg !5520, !tbaa !5210
  ret i64 %3, !dbg !5521
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IStatefulDevice"* @_ZN6Cicada15IStatefulDeviceC2Ev(%"class.Cicada::IStatefulDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #4 comdat align 2 !dbg !5522 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IStatefulDevice"* %0, metadata !5525, metadata !DIExpression()), !dbg !5527
  %2 = getelementptr inbounds %"class.Cicada::IStatefulDevice", %"class.Cicada::IStatefulDevice"* %0, i32 0, i32 0, !dbg !5528
  %3 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %2) #33, !dbg !5528
  %4 = getelementptr inbounds %"class.Cicada::IStatefulDevice", %"class.Cicada::IStatefulDevice"* %0, i32 0, i32 0, i32 0, !dbg !5528
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN6Cicada15IStatefulDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 4, !dbg !5528, !tbaa !2323
  ret %"class.Cicada::IStatefulDevice"* %0, !dbg !5528
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada13IIPCommDeviceD0Ev(%"class.Cicada::IIPCommDevice"* noundef nonnull align 4 dereferenceable(4) %0) unnamed_addr #4 comdat align 2 !dbg !5529 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IIPCommDevice"* %0, metadata !5531, metadata !DIExpression()), !dbg !5532
  call void @llvm.trap() #35, !dbg !5533
  unreachable, !dbg !5533
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #4 comdat align 2 !dbg !5534 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !5537, metadata !DIExpression()), !dbg !5538
  %2 = getelementptr inbounds %"class.Cicada::ICommDevice", %"class.Cicada::ICommDevice"* %0, i32 0, i32 0, !dbg !5539
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6Cicada11ICommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %2, align 4, !dbg !5539, !tbaa !2323
  ret %"class.Cicada::ICommDevice"* %0, !dbg !5539
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada15IStatefulDeviceD0Ev(%"class.Cicada::IStatefulDevice"* noundef nonnull align 4 dereferenceable(4) %0) unnamed_addr #4 comdat align 2 !dbg !5540 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IStatefulDevice"* %0, metadata !5542, metadata !DIExpression()), !dbg !5543
  call void @llvm.trap() #35, !dbg !5544
  unreachable, !dbg !5544
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada11ICommDeviceD0Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %0) unnamed_addr #4 comdat align 2 !dbg !5545 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !5547, metadata !DIExpression()), !dbg !5548
  call void @llvm.trap() #35, !dbg !5549
  unreachable, !dbg !5549
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceC2EPhS1_yy(%"class.Cicada::IPCommDevice"* noundef nonnull returned align 8 dereferenceable(140) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4) unnamed_addr #4 align 2 !dbg !5550 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !5552, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.value(metadata i8* %1, metadata !5553, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.value(metadata i8* %2, metadata !5554, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.value(metadata i64 %3, metadata !5555, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.value(metadata i64 %4, metadata !5556, metadata !DIExpression()), !dbg !5557
  %6 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 0, !dbg !5558
  %7 = call noundef %"class.Cicada::IIPCommDevice"* @_ZN6Cicada13IIPCommDeviceC2Ev(%"class.Cicada::IIPCommDevice"* noundef nonnull align 4 dereferenceable(4) %6) #33, !dbg !5559
  %8 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 1, !dbg !5558
  %9 = call noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskC2Et(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %8, i16 noundef zeroext 0), !dbg !5559
  %10 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5558
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [5 x i8*] }, { [15 x i8*], [5 x i8*] }* @_ZTVN6Cicada12IPCommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %10, align 8, !dbg !5558, !tbaa !2323
  %11 = getelementptr %"class.Cicada::Task", %"class.Cicada::Task"* %8, i32 0, i32 0, !dbg !5558
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [5 x i8*] }, { [15 x i8*], [5 x i8*] }* @_ZTVN6Cicada12IPCommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %11, align 4, !dbg !5558, !tbaa !2323
  %12 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 2, !dbg !5560
  %13 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhEC2EPhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %12, i8* noundef %1, i64 noundef %3), !dbg !5560
  %14 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 3, !dbg !5561
  %15 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhEC2EPhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %14, i8* noundef %2, i64 noundef %4), !dbg !5561
  %16 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 5, !dbg !5562
  store i8* null, i8** %16, align 4, !dbg !5562, !tbaa !5332
  %17 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 6, !dbg !5563
  store i16 0, i16* %17, align 8, !dbg !5563, !tbaa !5374
  %18 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 7, !dbg !5564
  store i8 32, i8* %18, align 2, !dbg !5564, !tbaa !4987
  %19 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 8, !dbg !5565
  store i32 0, i32* %19, align 4, !dbg !5565, !tbaa !5287
  %20 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 9, !dbg !5566
  store i8* null, i8** %20, align 8, !dbg !5566, !tbaa !5160
  ret %"class.Cicada::IPCommDevice"* %0, !dbg !5567
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada13SimCommDeviceD0Ev(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %0) unnamed_addr #4 comdat align 2 !dbg !5568 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5570, metadata !DIExpression()), !dbg !5572
  call void @llvm.trap() #35, !dbg !5573
  unreachable, !dbg !5573
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice7connectEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %0) unnamed_addr #5 align 2 !dbg !5574 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5576, metadata !DIExpression()), !dbg !5577
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 1, !dbg !5578
  %3 = load i8*, i8** %2, align 8, !dbg !5578, !tbaa !5580
  %4 = icmp eq i8* %3, null, !dbg !5582
  br i1 %4, label %8, label %5, !dbg !5583

5:                                                ; preds = %1
  %6 = bitcast %"class.Cicada::SimCommDevice"* %0 to %"class.Cicada::IPCommDevice"*, !dbg !5584
  %7 = call noundef zeroext i1 @_ZN6Cicada12IPCommDevice7connectEv(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %6) #33, !dbg !5584
  br label %8, !dbg !5585

8:                                                ; preds = %1, %5
  %9 = phi i1 [ %7, %5 ], [ false, %1 ], !dbg !5577
  ret i1 %9, !dbg !5586
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada13SimCommDevice11resetStatesEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %0) unnamed_addr #5 align 2 !dbg !5587 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5589, metadata !DIExpression()), !dbg !5590
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 1, !dbg !5591
  %3 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %2, align 4, !dbg !5591, !tbaa !4997
  %4 = bitcast %"class.Cicada::IBufferedSerial"* %3 to void (%"class.Cicada::IBufferedSerial"*)***, !dbg !5592
  %5 = load void (%"class.Cicada::IBufferedSerial"*)**, void (%"class.Cicada::IBufferedSerial"*)*** %4, align 4, !dbg !5592, !tbaa !2323
  %6 = getelementptr inbounds void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %5, i32 12, !dbg !5592
  %7 = load void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %6, align 4, !dbg !5592
  call void %7(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %3) #33, !dbg !5592
  %8 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 2, !dbg !5593
  call void @_ZN6Cicada14CircularBufferIhE5flushEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %8), !dbg !5594
  %9 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 3, !dbg !5595
  call void @_ZN6Cicada14CircularBufferIhE5flushEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %9), !dbg !5596
  %10 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 3, !dbg !5597
  %11 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 8, !dbg !5598
  store i32 0, i32* %11, align 4, !dbg !5599, !tbaa !5287
  %12 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 9, !dbg !5600
  store i8* null, i8** %12, align 8, !dbg !5601, !tbaa !5160
  %13 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !5602
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(27) %10, i8 0, i64 27, i1 false), !dbg !5603
  store i8 32, i8* %13, align 2, !dbg !5604, !tbaa !4987
  %14 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 4, !dbg !5605
  store i8 99, i8* %14, align 4, !dbg !5606, !tbaa !5607
  %15 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 0, !dbg !5608
  store i8 0, i8* %15, align 4, !dbg !5609, !tbaa !2380
  %16 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 1, !dbg !5610
  store i8 0, i8* %16, align 1, !dbg !5611, !tbaa !2380
  ret void, !dbg !5612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local void @_ZN6Cicada13SimCommDevice6setApnEPKc(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull writeonly align 8 dereferenceable(280) %0, i8* noundef %1) unnamed_addr #12 align 2 !dbg !5613 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5615, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata i8* %1, metadata !5616, metadata !DIExpression()), !dbg !5617
  %3 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 1, !dbg !5618
  store i8* %1, i8** %3, align 8, !dbg !5619, !tbaa !5580
  ret void, !dbg !5620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice10serialLockEv(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0) unnamed_addr #22 align 2 !dbg !5621 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5623, metadata !DIExpression()), !dbg !5624
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 9, !dbg !5625
  %3 = load i8*, i8** %2, align 8, !dbg !5625, !tbaa !5160
  %4 = icmp eq i8* %3, null, !dbg !5625
  %5 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 5
  %6 = load i8, i8* %5, align 1
  %7 = icmp eq i8 %6, 0
  %8 = select i1 %4, i1 %7, i1 false, !dbg !5627
  br i1 %8, label %9, label %13, !dbg !5627

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !5628
  %11 = load i8, i8* %10, align 2, !dbg !5629, !tbaa !4987
  %12 = or i8 %11, 64, !dbg !5629
  store i8 %12, i8* %10, align 2, !dbg !5629, !tbaa !4987
  br label %13, !dbg !5630

13:                                               ; preds = %1, %9
  ret i1 %8, !dbg !5631
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn
define dso_local void @_ZN6Cicada13SimCommDevice12serialUnlockEv(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0) unnamed_addr #22 align 2 !dbg !5632 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5634, metadata !DIExpression()), !dbg !5635
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !5636
  %3 = load i8, i8* %2, align 2, !dbg !5637, !tbaa !4987
  %4 = and i8 %3, -65, !dbg !5637
  store i8 %4, i8* %2, align 2, !dbg !5637, !tbaa !4987
  ret void, !dbg !5638
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::SimCommDevice"* @_ZThn4_N6Cicada13SimCommDeviceD1Ev(%"class.Cicada::SimCommDevice"* noundef %0) unnamed_addr #4 comdat align 2 !dbg !5639 {
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 -1, i32 4, !dbg !5640
  %3 = bitcast i8* %2 to %"class.Cicada::IPCommDevice"*, !dbg !5640
  %4 = tail call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceD2Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(280) %3) #33, !dbg !5640
  ret %"class.Cicada::SimCommDevice"* undef, !dbg !5640
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada13SimCommDeviceD0Ev(%"class.Cicada::SimCommDevice"* noundef %0) unnamed_addr #4 comdat align 2 !dbg !5641 {
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 -1, i32 4, !dbg !5642
  %3 = bitcast i8* %2 to %"class.Cicada::SimCommDevice"*, !dbg !5642
  tail call void @_ZN6Cicada13SimCommDeviceD0Ev(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %3) #33, !dbg !5642
  ret void, !dbg !5642
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::SimCommDevice"* @_ZN6Cicada13SimCommDeviceC2ERNS_15IBufferedSerialEPhS3_y(%"class.Cicada::SimCommDevice"* noundef nonnull returned align 8 dereferenceable(280) %0, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4) unnamed_addr #4 align 2 !dbg !5643 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5645, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %1, metadata !5646, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.value(metadata i8* %2, metadata !5647, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.value(metadata i8* %3, metadata !5648, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.value(metadata i64 %4, metadata !5649, metadata !DIExpression()), !dbg !5650
  %6 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, !dbg !5651
  %7 = call noundef %"class.Cicada::ATCommDevice"* @_ZN6Cicada12ATCommDeviceC2ERNS_15IBufferedSerialEPhS3_y(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4) #33, !dbg !5652
  %8 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5651
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [5 x i8*] }, { [20 x i8*], [5 x i8*] }* @_ZTVN6Cicada13SimCommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %8, align 8, !dbg !5651, !tbaa !2323
  %9 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !5651
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [5 x i8*] }, { [20 x i8*], [5 x i8*] }* @_ZTVN6Cicada13SimCommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %9, align 4, !dbg !5651, !tbaa !2323
  %10 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 1, !dbg !5653
  store i8* null, i8** %10, align 8, !dbg !5653, !tbaa !5580
  call void @_ZN6Cicada13SimCommDevice11resetStatesEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %0), !dbg !5654
  ret %"class.Cicada::SimCommDevice"* %0, !dbg !5656
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::SimCommDevice"* @_ZN6Cicada13SimCommDeviceC2ERNS_15IBufferedSerialEPhS3_yy(%"class.Cicada::SimCommDevice"* noundef nonnull returned align 8 dereferenceable(280) %0, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4, i64 noundef %5) unnamed_addr #4 align 2 !dbg !5657 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5659, metadata !DIExpression()), !dbg !5665
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %1, metadata !5660, metadata !DIExpression()), !dbg !5665
  call void @llvm.dbg.value(metadata i8* %2, metadata !5661, metadata !DIExpression()), !dbg !5665
  call void @llvm.dbg.value(metadata i8* %3, metadata !5662, metadata !DIExpression()), !dbg !5665
  call void @llvm.dbg.value(metadata i64 %4, metadata !5663, metadata !DIExpression()), !dbg !5665
  call void @llvm.dbg.value(metadata i64 %5, metadata !5664, metadata !DIExpression()), !dbg !5665
  %7 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, !dbg !5666
  %8 = call noundef %"class.Cicada::ATCommDevice"* @_ZN6Cicada12ATCommDeviceC2ERNS_15IBufferedSerialEPhS3_yy(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %7, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4, i64 noundef %5) #33, !dbg !5667
  %9 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5666
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [5 x i8*] }, { [20 x i8*], [5 x i8*] }* @_ZTVN6Cicada13SimCommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8, !dbg !5666, !tbaa !2323
  %10 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !5666
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [5 x i8*] }, { [20 x i8*], [5 x i8*] }* @_ZTVN6Cicada13SimCommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %10, align 4, !dbg !5666, !tbaa !2323
  %11 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 1, !dbg !5668
  store i8* null, i8** %11, align 8, !dbg !5668, !tbaa !5580
  call void @_ZN6Cicada13SimCommDevice11resetStatesEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %0), !dbg !5669
  ret %"class.Cicada::SimCommDevice"* %0, !dbg !5671
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice14fillLineBufferEv(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0) local_unnamed_addr #5 align 2 !dbg !5672 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5674, metadata !DIExpression()), !dbg !5679
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !5680
  %3 = load i8, i8* %2, align 2, !dbg !5680, !tbaa !4987
  %4 = and i8 %3, 32, !dbg !5681
  %5 = icmp eq i8 %4, 0, !dbg !5680
  br i1 %5, label %36, label %6, !dbg !5682

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.Cicada::IBufferedSerial"** %7 to %"class.Cicada::ICommDevice"**
  %9 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 3
  br label %10, !dbg !5683

10:                                               ; preds = %6, %29
  %11 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %8, align 4, !dbg !5684, !tbaa !4997
  %12 = bitcast %"class.Cicada::ICommDevice"* %11 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !5685
  %13 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %12, align 4, !dbg !5685, !tbaa !2323
  %14 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %13, i32 2, !dbg !5685
  %15 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %14, align 4, !dbg !5685
  %16 = call noundef i64 %15(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %11) #33, !dbg !5685
  %17 = icmp eq i64 %16, 0, !dbg !5684
  br i1 %17, label %36, label %18, !dbg !5683

18:                                               ; preds = %10
  %19 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !5686, !tbaa !4997
  %20 = bitcast %"class.Cicada::IBufferedSerial"* %19 to i8 (%"class.Cicada::IBufferedSerial"*)***, !dbg !5687
  %21 = load i8 (%"class.Cicada::IBufferedSerial"*)**, i8 (%"class.Cicada::IBufferedSerial"*)*** %20, align 4, !dbg !5687, !tbaa !2323
  %22 = getelementptr inbounds i8 (%"class.Cicada::IBufferedSerial"*)*, i8 (%"class.Cicada::IBufferedSerial"*)** %21, i32 7, !dbg !5687
  %23 = load i8 (%"class.Cicada::IBufferedSerial"*)*, i8 (%"class.Cicada::IBufferedSerial"*)** %22, align 4, !dbg !5687
  %24 = call noundef zeroext i8 %23(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %19) #33, !dbg !5687
  call void @llvm.dbg.value(metadata i8 %24, metadata !5675, metadata !DIExpression()), !dbg !5688
  %25 = load i8, i8* %9, align 1, !dbg !5689, !tbaa !5690
  %26 = add i8 %25, 1, !dbg !5689
  store i8 %26, i8* %9, align 1, !dbg !5689, !tbaa !5690
  %27 = zext i8 %25 to i32, !dbg !5691
  %28 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 %27, !dbg !5691
  store i8 %24, i8* %28, align 1, !dbg !5692, !tbaa !2380
  switch i8 %24, label %29 [
    i8 62, label %32
    i8 10, label %32
  ], !dbg !5693

29:                                               ; preds = %18
  %30 = load i8, i8* %9, align 1, !dbg !5695, !tbaa !5690
  %31 = icmp eq i8 %30, 60, !dbg !5696
  br i1 %31, label %32, label %10, !dbg !5697

32:                                               ; preds = %18, %18, %29
  %33 = load i8, i8* %9, align 1, !dbg !5698, !tbaa !5690
  %34 = zext i8 %33 to i32, !dbg !5700
  %35 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 %34, !dbg !5700
  store i8 0, i8* %35, align 1, !dbg !5701, !tbaa !2380
  store i8 0, i8* %9, align 1, !dbg !5702, !tbaa !5690
  br label %36

36:                                               ; preds = %10, %32, %1
  %37 = phi i1 [ false, %1 ], [ true, %32 ], [ false, %10 ], !dbg !5679
  ret i1 %37, !dbg !5703
}

; Function Attrs: mustprogress nofree noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice13parseDnsReplyEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %0) local_unnamed_addr #24 align 2 !dbg !5704 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5706, metadata !DIExpression()), !dbg !5712
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !5713
  %3 = call i32 @memcmp(i8* noundef nonnull dereferenceable(11) %2, i8* noundef nonnull dereferenceable(11) getelementptr inbounds ([12 x i8], [12 x i8]* @.str.58, i32 0, i32 0), i32 11), !dbg !5714
  %4 = icmp eq i32 %3, 0, !dbg !5715
  br i1 %4, label %5, label %55, !dbg !5716

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8 0, metadata !5711, metadata !DIExpression()), !dbg !5717
  call void @llvm.dbg.value(metadata i8 0, metadata !5710, metadata !DIExpression()), !dbg !5717
  %6 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !5718
  %7 = load i8, i8* %6, align 8, !dbg !5718, !tbaa !2380
  %8 = icmp eq i8 %7, 0, !dbg !5718
  br i1 %8, label %24, label %9, !dbg !5719

9:                                                ; preds = %5, %9
  %10 = phi i8 [ %19, %9 ], [ %7, %5 ]
  %11 = phi i8 [ %16, %9 ], [ 0, %5 ]
  %12 = phi i8 [ %13, %9 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !5711, metadata !DIExpression()), !dbg !5717
  call void @llvm.dbg.value(metadata i8 %12, metadata !5710, metadata !DIExpression()), !dbg !5717
  %13 = add i8 %12, 1, !dbg !5720
  call void @llvm.dbg.value(metadata i8 %13, metadata !5710, metadata !DIExpression()), !dbg !5717
  %14 = icmp eq i8 %10, 34, !dbg !5723
  %15 = zext i1 %14 to i8, !dbg !5724
  %16 = add i8 %11, %15, !dbg !5724
  call void @llvm.dbg.value(metadata i8 %16, metadata !5711, metadata !DIExpression()), !dbg !5717
  %17 = zext i8 %13 to i32, !dbg !5718
  %18 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 %17, !dbg !5718
  %19 = load i8, i8* %18, align 1, !dbg !5718, !tbaa !2380
  %20 = icmp eq i8 %19, 0, !dbg !5718
  br i1 %20, label %21, label %9, !dbg !5719, !llvm.loop !5725

21:                                               ; preds = %9
  %22 = add i8 %16, -11, !dbg !5727
  %23 = icmp ult i8 %22, -7, !dbg !5727
  br label %24, !dbg !5727

24:                                               ; preds = %21, %5
  %25 = phi i1 [ true, %5 ], [ %23, %21 ]
  br i1 %25, label %26, label %28, !dbg !5727

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 8, !dbg !5729
  store i32 6, i32* %27, align 4, !dbg !5731, !tbaa !5287
  br label %53, !dbg !5732

28:                                               ; preds = %24, %28
  %29 = phi i8 [ %37, %28 ], [ 0, %24 ]
  %30 = phi i8 [ %31, %28 ], [ 0, %24 ]
  call void @llvm.dbg.value(metadata i8 %29, metadata !5711, metadata !DIExpression()), !dbg !5717
  call void @llvm.dbg.value(metadata i8 %30, metadata !5710, metadata !DIExpression()), !dbg !5717
  %31 = add i8 %30, 1, !dbg !5733
  call void @llvm.dbg.value(metadata i8 %31, metadata !5710, metadata !DIExpression()), !dbg !5717
  %32 = zext i8 %30 to i32, !dbg !5735
  %33 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 %32, !dbg !5735
  %34 = load i8, i8* %33, align 1, !dbg !5735, !tbaa !2380
  %35 = icmp eq i8 %34, 34, !dbg !5736
  %36 = zext i1 %35 to i8, !dbg !5737
  %37 = add i8 %29, %36, !dbg !5737
  call void @llvm.dbg.value(metadata i8 %37, metadata !5711, metadata !DIExpression()), !dbg !5717
  %38 = icmp ult i8 %37, 3, !dbg !5738
  br i1 %38, label %28, label %39, !dbg !5739, !llvm.loop !5740

39:                                               ; preds = %28
  %40 = zext i8 %31 to i32, !dbg !5742
  call void @llvm.dbg.value(metadata i8* %50, metadata !5707, metadata !DIExpression()), !dbg !5717
  br label %41, !dbg !5743

41:                                               ; preds = %47, %39
  %42 = phi i8 [ %31, %39 ], [ %48, %47 ], !dbg !5717
  call void @llvm.dbg.value(metadata i8 %42, metadata !5710, metadata !DIExpression()), !dbg !5717
  %43 = zext i8 %42 to i32, !dbg !5744
  %44 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 %43, !dbg !5744
  %45 = load i8, i8* %44, align 1, !dbg !5744, !tbaa !2380
  switch i8 %45, label %47 [
    i8 0, label %49
    i8 34, label %46
  ], !dbg !5743

46:                                               ; preds = %41
  store i8 0, i8* %44, align 1, !dbg !5745, !tbaa !2380
  br label %47, !dbg !5748

47:                                               ; preds = %41, %46
  %48 = add i8 %42, 1, !dbg !5749
  call void @llvm.dbg.value(metadata i8 %48, metadata !5710, metadata !DIExpression()), !dbg !5717
  br label %41, !dbg !5743, !llvm.loop !5750

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 %40, !dbg !5752
  %51 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 2, i32 0, !dbg !5753
  %52 = call i8* @strcpy(i8* noundef nonnull %51, i8* noundef nonnull %50), !dbg !5754
  br label %53, !dbg !5755

53:                                               ; preds = %49, %26
  %54 = xor i1 %25, true
  br label %62

55:                                               ; preds = %1
  %56 = call i32 @memcmp(i8* noundef nonnull dereferenceable(11) %2, i8* noundef nonnull dereferenceable(11) getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.59, i32 0, i32 0), i32 11), !dbg !5756
  %57 = icmp eq i32 %56, 0, !dbg !5758
  br i1 %57, label %58, label %62, !dbg !5759

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !5760
  %60 = load i8, i8* %59, align 2, !dbg !5762, !tbaa !4987
  %61 = or i8 %60, 2, !dbg !5762
  store i8 %61, i8* %59, align 2, !dbg !5762, !tbaa !4987
  br label %62, !dbg !5763

62:                                               ; preds = %58, %55, %53
  %63 = phi i1 [ %54, %53 ], [ false, %55 ], [ false, %58 ], !dbg !5712
  ret i1 %63, !dbg !5764
}

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @memcmp(i8* nocapture, i8* nocapture, i32) local_unnamed_addr #25

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare dso_local i8* @strcpy(i8* noalias noundef returned writeonly, i8* noalias nocapture noundef readonly) local_unnamed_addr #26

; Function Attrs: mustprogress nofree noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice14parseCiprxget4Ev(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0) local_unnamed_addr #24 align 2 !dbg !5765 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5767, metadata !DIExpression()), !dbg !5771
  %3 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !5772
  %4 = call i32 @memcmp(i8* noundef nonnull dereferenceable(15) %3, i8* noundef nonnull dereferenceable(15) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.60, i32 0, i32 0), i32 15), !dbg !5773
  %5 = icmp eq i32 %4, 0, !dbg !5774
  br i1 %5, label %6, label %15, !dbg !5775

6:                                                ; preds = %1
  %7 = bitcast i32* %2 to i8*, !dbg !5776
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #33, !dbg !5776
  %8 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 15, !dbg !5777
  call void @llvm.dbg.value(metadata i32* %2, metadata !5768, metadata !DIExpression(DW_OP_deref)), !dbg !5778
  %9 = call i32 (i8*, i8*, ...) @sscanf(i8* noundef nonnull %8, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.61, i32 0, i32 0), i32* noundef nonnull %2), !dbg !5779
  %10 = load i32, i32* %2, align 4, !dbg !5780, !tbaa !2397
  call void @llvm.dbg.value(metadata i32 %10, metadata !5768, metadata !DIExpression()), !dbg !5778
  %11 = sext i32 %10 to i64, !dbg !5780
  %12 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !5781
  %13 = load i64, i64* %12, align 8, !dbg !5782, !tbaa !5072
  %14 = add i64 %13, %11, !dbg !5782
  store i64 %14, i64* %12, align 8, !dbg !5782, !tbaa !5072
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #33, !dbg !5783
  br label %15

15:                                               ; preds = %1, %6
  ret i1 %5, !dbg !5784
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @sscanf(i8* nocapture noundef readonly, i8* nocapture noundef readonly, ...) local_unnamed_addr #23

; Function Attrs: mustprogress nofree noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice14parseCiprxget2Ev(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0) local_unnamed_addr #24 align 2 !dbg !5785 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5787, metadata !DIExpression()), !dbg !5791
  %3 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !5792
  %4 = call i32 @memcmp(i8* noundef nonnull dereferenceable(15) %3, i8* noundef nonnull dereferenceable(15) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.62, i32 0, i32 0), i32 15), !dbg !5793
  %5 = icmp eq i32 %4, 0, !dbg !5794
  br i1 %5, label %6, label %21, !dbg !5795

6:                                                ; preds = %1
  %7 = bitcast i32* %2 to i8*, !dbg !5796
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #33, !dbg !5796
  %8 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 15, !dbg !5797
  call void @llvm.dbg.value(metadata i32* %2, metadata !5788, metadata !DIExpression(DW_OP_deref)), !dbg !5798
  %9 = call i32 (i8*, i8*, ...) @sscanf(i8* noundef nonnull %8, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.61, i32 0, i32 0), i32* noundef nonnull %2), !dbg !5799
  %10 = load i32, i32* %2, align 4, !dbg !5800, !tbaa !2397
  call void @llvm.dbg.value(metadata i32 %10, metadata !5788, metadata !DIExpression()), !dbg !5798
  %11 = sext i32 %10 to i64, !dbg !5800
  %12 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !5801
  %13 = load i64, i64* %12, align 8, !dbg !5802, !tbaa !5072
  %14 = sub i64 %13, %11, !dbg !5802
  store i64 %14, i64* %12, align 8, !dbg !5802, !tbaa !5072
  call void @llvm.dbg.value(metadata i32 %10, metadata !5788, metadata !DIExpression()), !dbg !5798
  %15 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 8, !dbg !5803
  %16 = load i64, i64* %15, align 8, !dbg !5804, !tbaa !5060
  %17 = add i64 %16, %11, !dbg !5804
  store i64 %17, i64* %15, align 8, !dbg !5804, !tbaa !5060
  %18 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !5805
  %19 = load i8, i8* %18, align 2, !dbg !5806, !tbaa !4987
  %20 = and i8 %19, -33, !dbg !5806
  store i8 %20, i8* %18, align 2, !dbg !5806, !tbaa !4987
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #33, !dbg !5807
  br label %21

21:                                               ; preds = %1, %6
  ret i1 %5, !dbg !5808
}

; Function Attrs: mustprogress nofree noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice8parseCsqEv(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0) local_unnamed_addr #24 align 2 !dbg !5809 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5811, metadata !DIExpression()), !dbg !5815
  %3 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !5816
  %4 = call i32 @memcmp(i8* noundef nonnull dereferenceable(6) %3, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.63, i32 0, i32 0), i32 6), !dbg !5817
  %5 = icmp eq i32 %4, 0, !dbg !5818
  br i1 %5, label %6, label %16, !dbg !5819

6:                                                ; preds = %1
  %7 = bitcast i32* %2 to i8*, !dbg !5820
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #33, !dbg !5820
  %8 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 6, !dbg !5821
  call void @llvm.dbg.value(metadata i32* %2, metadata !5812, metadata !DIExpression(DW_OP_deref)), !dbg !5823
  %9 = call i32 (i8*, i8*, ...) @sscanf(i8* noundef nonnull %8, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.64, i32 0, i32 0), i32* noundef nonnull %2), !dbg !5824
  %10 = icmp eq i32 %9, 1, !dbg !5825
  br i1 %10, label %11, label %15, !dbg !5826

11:                                               ; preds = %6
  %12 = load i32, i32* %2, align 4, !dbg !5827, !tbaa !2397
  call void @llvm.dbg.value(metadata i32 %12, metadata !5812, metadata !DIExpression()), !dbg !5823
  %13 = trunc i32 %12 to i8, !dbg !5827
  %14 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 4, !dbg !5829
  store i8 %13, i8* %14, align 4, !dbg !5830, !tbaa !5607
  br label %15, !dbg !5831

15:                                               ; preds = %11, %6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #33, !dbg !5832
  br label %16

16:                                               ; preds = %1, %15
  ret i1 %5, !dbg !5833
}

; Function Attrs: mustprogress nofree noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice12parseIDReplyEv(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0) local_unnamed_addr #24 align 2 !dbg !5834 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5836, metadata !DIExpression()), !dbg !5839
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !5840
  %3 = call i32 @memcmp(i8* noundef nonnull dereferenceable(2) %2, i8* noundef nonnull dereferenceable(2) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i32 0, i32 0), i32 2), !dbg !5842
  %4 = icmp eq i32 %3, 0, !dbg !5843
  %5 = load i8, i8* %2, align 8
  %6 = icmp eq i8 %5, 13
  %7 = select i1 %4, i1 true, i1 %6, !dbg !5844
  br i1 %7, label %29, label %8, !dbg !5844

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %2, metadata !5837, metadata !DIExpression()), !dbg !5839
  %9 = call i32 @memcmp(i8* noundef nonnull dereferenceable(8) %2, i8* noundef nonnull dereferenceable(8) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i32 0, i32 0), i32 8), !dbg !5845
  %10 = icmp eq i32 %9, 0, !dbg !5847
  %11 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 8
  %12 = select i1 %10, i8* %11, i8* %2, !dbg !5848
  call void @llvm.dbg.value(metadata i8* %12, metadata !5837, metadata !DIExpression()), !dbg !5839
  call void @llvm.dbg.value(metadata i32 0, metadata !5838, metadata !DIExpression()), !dbg !5839
  %13 = load i8, i8* %12, align 8, !dbg !5849, !tbaa !2380
  %14 = icmp eq i8 %13, 13, !dbg !5850
  br i1 %14, label %26, label %15, !dbg !5851

15:                                               ; preds = %8, %15
  %16 = phi i8 [ %22, %15 ], [ %13, %8 ]
  %17 = phi i32 [ %20, %15 ], [ 0, %8 ]
  %18 = phi i8* [ %19, %15 ], [ %12, %8 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !5838, metadata !DIExpression()), !dbg !5839
  call void @llvm.dbg.value(metadata i8* %18, metadata !5837, metadata !DIExpression()), !dbg !5839
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !5852
  call void @llvm.dbg.value(metadata i8* %19, metadata !5837, metadata !DIExpression()), !dbg !5839
  %20 = add nuw nsw i32 %17, 1, !dbg !5854
  call void @llvm.dbg.value(metadata i32 %20, metadata !5838, metadata !DIExpression()), !dbg !5839
  %21 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 %17, !dbg !5855
  store i8 %16, i8* %21, align 1, !dbg !5856, !tbaa !2380
  %22 = load i8, i8* %19, align 1, !dbg !5849, !tbaa !2380
  %23 = icmp ne i8 %22, 13, !dbg !5850
  %24 = icmp ult i32 %17, 22, !dbg !5857
  %25 = select i1 %23, i1 %24, i1 false, !dbg !5857
  br i1 %25, label %15, label %26, !dbg !5851, !llvm.loop !5858

26:                                               ; preds = %15, %8
  %27 = phi i32 [ 0, %8 ], [ %20, %15 ], !dbg !5839
  %28 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 %27, !dbg !5860
  store i8 0, i8* %28, align 1, !dbg !5861, !tbaa !2380
  br label %29

29:                                               ; preds = %1, %26
  %30 = xor i1 %7, true, !dbg !5862
  ret i1 %30, !dbg !5862
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice12sendDnsQueryEv(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull readonly align 8 dereferenceable(280) %0) local_unnamed_addr #5 align 2 !dbg !5863 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5865, metadata !DIExpression()), !dbg !5866
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 1, !dbg !5867
  %3 = bitcast %"class.Cicada::IBufferedSerial"** %2 to %"class.Cicada::ICommDevice"**, !dbg !5867
  %4 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %3, align 4, !dbg !5867, !tbaa !4997
  %5 = bitcast %"class.Cicada::ICommDevice"* %4 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !5869
  %6 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %5, align 4, !dbg !5869, !tbaa !2323
  %7 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %6, i32 3, !dbg !5869
  %8 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %7, align 4, !dbg !5869
  %9 = call noundef i64 %8(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %4) #33, !dbg !5869
  %10 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 5, !dbg !5870
  %11 = load i8*, i8** %10, align 4, !dbg !5870, !tbaa !5332
  %12 = call i32 @strlen(i8* noundef nonnull dereferenceable(1) %11), !dbg !5871
  %13 = add i32 %12, 20, !dbg !5872
  %14 = zext i32 %13 to i64, !dbg !5871
  %15 = icmp ult i64 %9, %14, !dbg !5873
  br i1 %15, label %37, label %16, !dbg !5874

16:                                               ; preds = %1
  %17 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %2, align 4, !dbg !5875, !tbaa !4997
  %18 = bitcast %"class.Cicada::IBufferedSerial"* %17 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !5876
  %19 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %18, align 4, !dbg !5876, !tbaa !2323
  %20 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %19, i32 8, !dbg !5876
  %21 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %20, align 4, !dbg !5876
  %22 = call noundef i64 %21(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %17, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i32 0, i32 0)) #33, !dbg !5876
  %23 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %2, align 4, !dbg !5877, !tbaa !4997
  %24 = load i8*, i8** %10, align 4, !dbg !5878, !tbaa !5332
  %25 = bitcast %"class.Cicada::IBufferedSerial"* %23 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !5879
  %26 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %25, align 4, !dbg !5879, !tbaa !2323
  %27 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %26, i32 8, !dbg !5879
  %28 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %27, align 4, !dbg !5879
  %29 = call noundef i64 %28(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %23, i8* noundef %24) #33, !dbg !5879
  %30 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %2, align 4, !dbg !5880, !tbaa !4997
  %31 = load i8*, i8** @_ZN6Cicada12ATCommDevice12_quoteEndStrE, align 4, !dbg !5881, !tbaa !2231
  %32 = bitcast %"class.Cicada::IBufferedSerial"* %30 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !5882
  %33 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %32, align 4, !dbg !5882, !tbaa !2323
  %34 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %33, i32 8, !dbg !5882
  %35 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %34, align 4, !dbg !5882
  %36 = call noundef i64 %35(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %30, i8* noundef %31) #33, !dbg !5882
  br label %37, !dbg !5883

37:                                               ; preds = %1, %16
  %38 = xor i1 %15, true, !dbg !5884
  ret i1 %38, !dbg !5884
}

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare dso_local i32 @strlen(i8* nocapture noundef) local_unnamed_addr #27

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice13sendCiprxget2Ev(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %0) local_unnamed_addr #5 align 2 !dbg !5885 {
  %2 = alloca [17 x i8], align 1
  %3 = alloca [6 x i8], align 1
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5887, metadata !DIExpression()), !dbg !5896
  %4 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 1, !dbg !5897
  %5 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %4, align 4, !dbg !5897, !tbaa !4997
  %6 = bitcast %"class.Cicada::IBufferedSerial"* %5 to i64 (%"class.Cicada::IBufferedSerial"*)***, !dbg !5898
  %7 = load i64 (%"class.Cicada::IBufferedSerial"*)**, i64 (%"class.Cicada::IBufferedSerial"*)*** %6, align 4, !dbg !5898, !tbaa !2323
  %8 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*)*, i64 (%"class.Cicada::IBufferedSerial"*)** %7, i32 13, !dbg !5898
  %9 = load i64 (%"class.Cicada::IBufferedSerial"*)*, i64 (%"class.Cicada::IBufferedSerial"*)** %8, align 4, !dbg !5898
  %10 = call noundef i64 %9(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %5) #33, !dbg !5898
  %11 = bitcast %"class.Cicada::IBufferedSerial"** %4 to %"class.Cicada::ICommDevice"**, !dbg !5899
  %12 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %11, align 4, !dbg !5899, !tbaa !4997
  %13 = bitcast %"class.Cicada::ICommDevice"* %12 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !5900
  %14 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %13, align 4, !dbg !5900, !tbaa !2323
  %15 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %14, i32 2, !dbg !5900
  %16 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %15, align 4, !dbg !5900
  %17 = call noundef i64 %16(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %12) #33, !dbg !5900
  %18 = sub i64 %10, %17, !dbg !5901
  %19 = icmp ugt i64 %18, 8, !dbg !5902
  br i1 %19, label %20, label %78, !dbg !5903

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 2, !dbg !5904
  %22 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %21), !dbg !5905
  %23 = icmp eq i64 %22, 0, !dbg !5906
  br i1 %23, label %78, label %24, !dbg !5907

24:                                               ; preds = %20
  %25 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %4, align 4, !dbg !5908, !tbaa !4997
  %26 = bitcast %"class.Cicada::IBufferedSerial"* %25 to i64 (%"class.Cicada::IBufferedSerial"*)***, !dbg !5909
  %27 = load i64 (%"class.Cicada::IBufferedSerial"*)**, i64 (%"class.Cicada::IBufferedSerial"*)*** %26, align 4, !dbg !5909, !tbaa !2323
  %28 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*)*, i64 (%"class.Cicada::IBufferedSerial"*)** %27, i32 13, !dbg !5909
  %29 = load i64 (%"class.Cicada::IBufferedSerial"*)*, i64 (%"class.Cicada::IBufferedSerial"*)** %28, align 4, !dbg !5909
  %30 = call noundef i64 %29(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %25) #33, !dbg !5909
  %31 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %11, align 4, !dbg !5910, !tbaa !4997
  %32 = bitcast %"class.Cicada::ICommDevice"* %31 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !5911
  %33 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %32, align 4, !dbg !5911, !tbaa !2323
  %34 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %33, i32 2, !dbg !5911
  %35 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %34, align 4, !dbg !5911
  %36 = call noundef i64 %35(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %31) #33, !dbg !5911
  %37 = sub i64 %30, %36, !dbg !5912
  %38 = add i64 %37, -8, !dbg !5913
  call void @llvm.dbg.value(metadata i64 %38, metadata !5888, metadata !DIExpression()), !dbg !5914
  %39 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !5915
  %40 = load i64, i64* %39, align 8, !dbg !5915, !tbaa !5072
  %41 = icmp ugt i64 %38, %40, !dbg !5917
  %42 = select i1 %41, i64 %40, i64 %38, !dbg !5918
  call void @llvm.dbg.value(metadata i64 %42, metadata !5888, metadata !DIExpression()), !dbg !5914
  %43 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %21), !dbg !5919
  %44 = icmp ugt i64 %42, %43, !dbg !5921
  br i1 %44, label %45, label %47, !dbg !5922

45:                                               ; preds = %24
  %46 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %21), !dbg !5923
  call void @llvm.dbg.value(metadata i64 %46, metadata !5888, metadata !DIExpression()), !dbg !5914
  br label %47, !dbg !5924

47:                                               ; preds = %45, %24
  %48 = phi i64 [ %46, %45 ], [ %42, %24 ], !dbg !5914
  call void @llvm.dbg.value(metadata i64 %48, metadata !5888, metadata !DIExpression()), !dbg !5914
  %49 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 5, !dbg !5925
  %50 = load i16, i16* %49, align 2, !dbg !5925, !tbaa !5927
  %51 = zext i16 %50 to i64, !dbg !5925
  %52 = icmp ugt i64 %48, %51, !dbg !5928
  %53 = trunc i64 %48 to i32, !dbg !5929
  %54 = zext i16 %50 to i32
  %55 = select i1 %52, i32 %54, i32 %53, !dbg !5929
  call void @llvm.dbg.value(metadata i64 poison, metadata !5888, metadata !DIExpression()), !dbg !5914
  %56 = getelementptr inbounds [17 x i8], [17 x i8]* %2, i32 0, i32 0, !dbg !5930
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %56) #33, !dbg !5930
  call void @llvm.dbg.declare(metadata [17 x i8]* %2, metadata !5891, metadata !DIExpression()), !dbg !5931
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(17) %56, i8* noundef nonnull align 1 dereferenceable(17) getelementptr inbounds ([17 x i8], [17 x i8]* @__const._ZN6Cicada13SimCommDevice13sendCiprxget2Ev.str, i32 0, i32 0), i32 17, i1 false), !dbg !5931
  %57 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i32 0, i32 0, !dbg !5932
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %57) #33, !dbg !5932
  call void @llvm.dbg.declare(metadata [6 x i8]* %3, metadata !5895, metadata !DIExpression()), !dbg !5933
  %58 = call i32 (i8*, i8*, ...) @sprintf(i8* noundef nonnull %57, i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.64, i32 0, i32 0), i32 noundef %55), !dbg !5934
  %59 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %4, align 4, !dbg !5935, !tbaa !4997
  %60 = bitcast %"class.Cicada::IBufferedSerial"* %59 to i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)***, !dbg !5936
  %61 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*** %60, align 4, !dbg !5936, !tbaa !2323
  %62 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %61, i32 6, !dbg !5936
  %63 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %62, align 4, !dbg !5936
  %64 = call noundef i64 %63(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %59, i8* noundef nonnull %56, i64 noundef 16) #33, !dbg !5936
  %65 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %4, align 4, !dbg !5937, !tbaa !4997
  %66 = bitcast %"class.Cicada::IBufferedSerial"* %65 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !5938
  %67 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %66, align 4, !dbg !5938, !tbaa !2323
  %68 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %67, i32 8, !dbg !5938
  %69 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %68, align 4, !dbg !5938
  %70 = call noundef i64 %69(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %65, i8* noundef nonnull %57) #33, !dbg !5938
  %71 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %4, align 4, !dbg !5939, !tbaa !4997
  %72 = load i8*, i8** @_ZN6Cicada12ATCommDevice11_lineEndStrE, align 4, !dbg !5940, !tbaa !2231
  %73 = bitcast %"class.Cicada::IBufferedSerial"* %71 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !5941
  %74 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %73, align 4, !dbg !5941, !tbaa !2323
  %75 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %74, i32 8, !dbg !5941
  %76 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %75, align 4, !dbg !5941
  %77 = call noundef i64 %76(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %71, i8* noundef %72) #33, !dbg !5941
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %57) #33, !dbg !5942
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %56) #33, !dbg !5942
  br label %78

78:                                               ; preds = %1, %20, %47
  %79 = phi i1 [ true, %47 ], [ false, %20 ], [ false, %1 ], !dbg !5943
  ret i1 %79, !dbg !5944
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #28

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @sprintf(i8* noalias nocapture noundef writeonly, i8* nocapture noundef readonly, ...) local_unnamed_addr #23

; Function Attrs: mustprogress nofree noinline nounwind willreturn
define dso_local void @_ZN6Cicada13SimCommDevice20checkConnectionStateEPKc(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0, i8* nocapture noundef readonly %1) local_unnamed_addr #20 align 2 !dbg !5945 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5947, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.value(metadata i8* %1, metadata !5948, metadata !DIExpression()), !dbg !5949
  %3 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !5950
  %4 = call i32 @memcmp(i8* noundef nonnull dereferenceable(14) %3, i8* noundef nonnull dereferenceable(14) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0), i32 14), !dbg !5952
  %5 = icmp eq i32 %4, 0, !dbg !5953
  br i1 %5, label %6, label %10, !dbg !5954

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !5955
  %8 = load i8, i8* %7, align 2, !dbg !5957, !tbaa !4987
  %9 = or i8 %8, 4, !dbg !5957
  store i8 %9, i8* %7, align 2, !dbg !5957, !tbaa !4987
  br label %19, !dbg !5958

10:                                               ; preds = %2
  %11 = call i32 @strlen(i8* noundef nonnull dereferenceable(1) %1), !dbg !5959
  %12 = call i32 @strncmp(i8* noundef nonnull %3, i8* noundef %1, i32 noundef %11), !dbg !5961
  %13 = icmp eq i32 %12, 0, !dbg !5962
  br i1 %13, label %14, label %19, !dbg !5963

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 9, !dbg !5964
  store i8* null, i8** %15, align 8, !dbg !5966, !tbaa !5160
  %16 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !5967
  %17 = load i8, i8* %16, align 2, !dbg !5968, !tbaa !4987
  %18 = and i8 %17, -17, !dbg !5968
  store i8 %18, i8* %16, align 2, !dbg !5968, !tbaa !4987
  br label %19, !dbg !5969

19:                                               ; preds = %10, %14, %6
  ret void, !dbg !5970
}

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare dso_local i32 @strncmp(i8* nocapture noundef, i8* nocapture noundef, i32 noundef) local_unnamed_addr #27

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice13sendIDRequestEPKc(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %0, i8* noundef %1) local_unnamed_addr #5 align 2 !dbg !5971 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5973, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.value(metadata i8* %1, metadata !5974, metadata !DIExpression()), !dbg !5978
  %3 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 1, !dbg !5979
  %4 = load i8, i8* %3, align 1, !dbg !5979, !tbaa !2380
  %5 = icmp ne i8 %4, 0, !dbg !5980
  %6 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 0
  %7 = load i8, i8* %6, align 4
  %8 = icmp eq i8 %7, 0
  %9 = select i1 %5, i1 %8, i1 false, !dbg !5981
  br i1 %9, label %10, label %23, !dbg !5981

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !5982
  %12 = load i8, i8* %11, align 2, !dbg !5982, !tbaa !4987
  %13 = and i8 %12, 32, !dbg !5983
  %14 = icmp eq i8 %13, 0, !dbg !5982
  br i1 %14, label %23, label %15, !dbg !5984

15:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i8 %4, metadata !5975, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5985
  store i8 0, i8* %3, align 1, !dbg !5986, !tbaa !2380
  switch i8 %4, label %23 [
    i8 1, label %20
    i8 2, label %16
    i8 3, label %17
    i8 4, label %18
    i8 5, label %19
  ], !dbg !5987

16:                                               ; preds = %15
  br label %20

17:                                               ; preds = %15
  br label %20

18:                                               ; preds = %15
  br label %20

19:                                               ; preds = %15
  br label %20

20:                                               ; preds = %15, %19, %18, %17, %16
  %21 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0), %16 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i32 0, i32 0), %17 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0), %18 ], [ %1, %19 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i32 0, i32 0), %15 ]
  %22 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, !dbg !5988
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %22, i8* noundef %21) #33, !dbg !5988
  br label %23, !dbg !5990

23:                                               ; preds = %20, %2, %10, %15
  %24 = phi i1 [ false, %15 ], [ false, %10 ], [ false, %2 ], [ true, %20 ]
  ret i1 %24, !dbg !5990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local void @_ZN6Cicada13SimCommDevice11requestRSSIEv(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull writeonly align 8 dereferenceable(280) %0) local_unnamed_addr #12 align 2 !dbg !5991 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !5993, metadata !DIExpression()), !dbg !5994
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 4, !dbg !5995
  store i8 -1, i8* %2, align 4, !dbg !5996, !tbaa !5607
  ret void, !dbg !5997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef zeroext i8 @_ZN6Cicada13SimCommDevice7getRSSIEv(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull readonly align 8 dereferenceable(280) %0) local_unnamed_addr #17 align 2 !dbg !5998 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !6000, metadata !DIExpression()), !dbg !6001
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 4, !dbg !6002
  %3 = load i8, i8* %2, align 4, !dbg !6002, !tbaa !5607
  ret i8 %3, !dbg !6003
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada13SimCommDevice15requestIDStringENS0_13RequestIDTypeE(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0, i32 noundef %1) local_unnamed_addr #5 align 2 !dbg !6004 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !6006, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.value(metadata i32 %1, metadata !6007, metadata !DIExpression()), !dbg !6008
  %3 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 1, !dbg !6009
  %4 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %3, align 4, !dbg !6009, !tbaa !4997
  %5 = bitcast %"class.Cicada::IBufferedSerial"* %4 to void (%"class.Cicada::IBufferedSerial"*)***, !dbg !6010
  %6 = load void (%"class.Cicada::IBufferedSerial"*)**, void (%"class.Cicada::IBufferedSerial"*)*** %5, align 4, !dbg !6010, !tbaa !2323
  %7 = getelementptr inbounds void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %6, i32 12, !dbg !6010
  %8 = load void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %7, align 4, !dbg !6010
  call void %8(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %4) #33, !dbg !6010
  %9 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 0, !dbg !6011
  store i8 0, i8* %9, align 4, !dbg !6012, !tbaa !2380
  %10 = trunc i32 %1 to i8, !dbg !6013
  %11 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 1, !dbg !6014
  store i8 %10, i8* %11, align 1, !dbg !6015, !tbaa !2380
  ret void, !dbg !6016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef i8* @_ZN6Cicada13SimCommDevice11getIDStringEv(%"class.Cicada::SimCommDevice"* noundef nonnull readonly align 8 dereferenceable(280) %0) local_unnamed_addr #17 align 2 !dbg !6017 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !6019, metadata !DIExpression()), !dbg !6020
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 9, !dbg !6021
  %3 = load i8*, i8** %2, align 8, !dbg !6021, !tbaa !5160
  %4 = icmp ne i8* %3, null, !dbg !6023
  %5 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 0
  %6 = load i8, i8* %5, align 4
  %7 = icmp eq i8 %6, 0
  %8 = select i1 %4, i1 true, i1 %7, !dbg !6024
  %9 = select i1 %8, i8* null, i8* %5, !dbg !6024
  ret i8* %9, !dbg !6025
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada17Sim7x00CommDeviceD0Ev(%"class.Cicada::Sim7x00CommDevice"* noundef nonnull align 8 dereferenceable(284) %0) unnamed_addr #4 comdat align 2 !dbg !6026 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Sim7x00CommDevice"* %0, metadata !6029, metadata !DIExpression()), !dbg !6031
  %2 = bitcast %"class.Cicada::Sim7x00CommDevice"* %0 to %"class.Cicada::IPCommDevice"*, !dbg !6032
  %3 = call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceD2Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(284) %2) #33, !dbg !6032
  %4 = bitcast %"class.Cicada::Sim7x00CommDevice"* %0 to i8*, !dbg !6032
  call void @_ZdlPv(i8* noundef %4) #34, !dbg !6032
  ret void, !dbg !6032
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada17Sim7x00CommDevice3runEv(%"class.Cicada::Sim7x00CommDevice"* noundef nonnull align 8 dereferenceable(284) %0) unnamed_addr #5 align 2 !dbg !6033 {
  %2 = alloca [10 x i8], align 1
  %3 = alloca [23 x i8], align 1
  %4 = alloca [6 x i8], align 1
  %5 = alloca [6 x i8], align 1
  call void @llvm.dbg.value(metadata %"class.Cicada::Sim7x00CommDevice"* %0, metadata !6035, metadata !DIExpression()), !dbg !6056
  %6 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, !dbg !6057
  %7 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 1, !dbg !6057
  %8 = bitcast %"class.Cicada::IBufferedSerial"** %7 to i8**, !dbg !6057
  %9 = load i8*, i8** %8, align 4, !dbg !6057, !tbaa !4997
  %10 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !6057
  %11 = bitcast i8* %10 to %"class.Cicada::ICommDevice"*, !dbg !6057
  %12 = bitcast i8* %10 to i1 (%"class.Cicada::ICommDevice"*)***, !dbg !6059
  %13 = load i1 (%"class.Cicada::ICommDevice"*)**, i1 (%"class.Cicada::ICommDevice"*)*** %12, align 4, !dbg !6059, !tbaa !2323
  %14 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %13, i32 3, !dbg !6059
  %15 = load i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %14, align 4, !dbg !6059
  %16 = call noundef zeroext i1 %15(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %11) #33, !dbg !6059
  br i1 %16, label %28, label %17, !dbg !6060

17:                                               ; preds = %1
  %18 = load i8*, i8** %8, align 4, !dbg !6061, !tbaa !4997
  %19 = getelementptr inbounds i8, i8* %18, i32 4, !dbg !6061
  %20 = bitcast i8* %19 to %"class.Cicada::ICommDevice"*, !dbg !6061
  %21 = bitcast i8* %19 to i1 (%"class.Cicada::ICommDevice"*)***, !dbg !6064
  %22 = load i1 (%"class.Cicada::ICommDevice"*)**, i1 (%"class.Cicada::ICommDevice"*)*** %21, align 4, !dbg !6064, !tbaa !2323
  %23 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %22, i32 2, !dbg !6064
  %24 = load i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %23, align 4, !dbg !6064
  %25 = call noundef zeroext i1 %24(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %20) #33, !dbg !6064
  br i1 %25, label %391, label %26, !dbg !6065

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 4, !dbg !6066
  store i8 1, i8* %27, align 2, !dbg !6068, !tbaa !5095
  br label %391, !dbg !6069

28:                                               ; preds = %1
  %29 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !6070
  %30 = load i8, i8* %29, align 2, !dbg !6070, !tbaa !4987
  %31 = zext i8 %30 to i32, !dbg !6070
  %32 = and i32 %31, 64, !dbg !6072
  %33 = icmp eq i32 %32, 0, !dbg !6070
  br i1 %33, label %34, label %391, !dbg !6073

34:                                               ; preds = %28
  %35 = and i32 %31, 2, !dbg !6074
  %36 = icmp eq i32 %35, 0, !dbg !6075
  br i1 %36, label %67, label %37, !dbg !6076

37:                                               ; preds = %34
  %38 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !6077, !tbaa !4997
  %39 = bitcast %"class.Cicada::IBufferedSerial"* %38 to void (%"class.Cicada::IBufferedSerial"*)***, !dbg !6078
  %40 = load void (%"class.Cicada::IBufferedSerial"*)**, void (%"class.Cicada::IBufferedSerial"*)*** %39, align 4, !dbg !6078, !tbaa !2323
  %41 = getelementptr inbounds void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %40, i32 12, !dbg !6078
  %42 = load void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %41, align 4, !dbg !6078
  call void %42(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %38) #33, !dbg !6078
  store i8 32, i8* %29, align 2, !dbg !6079, !tbaa !4987
  %43 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 6, !dbg !6080
  %44 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 4, !dbg !6081
  %45 = bitcast i64* %43 to i8*, !dbg !6081
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %45, i8 0, i64 24, i1 false), !dbg !6083
  %46 = load i8, i8* %44, align 2, !dbg !6081, !tbaa !5095
  %47 = add i8 %46, -3, !dbg !6084
  %48 = icmp ult i8 %47, 15, !dbg !6084
  %49 = select i1 %48, i8 3, i8 0, !dbg !6084
  store i8 %49, i8* %44, align 2, !dbg !6085, !tbaa !5095
  %50 = getelementptr inbounds [10 x i8], [10 x i8]* %2, i32 0, i32 0, !dbg !6086
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %50) #33, !dbg !6086
  call void @llvm.dbg.declare(metadata [10 x i8]* %2, metadata !6036, metadata !DIExpression()), !dbg !6087
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(10) %50, i8* noundef nonnull align 1 dereferenceable(10) getelementptr inbounds ([10 x i8], [10 x i8]* @__const._ZN6Cicada17Sim7x00CommDevice3runEv.str, i32 0, i32 0), i32 10, i1 false), !dbg !6087
  %51 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !6088, !tbaa !4997
  %52 = bitcast %"class.Cicada::IBufferedSerial"* %51 to i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)***, !dbg !6089
  %53 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*** %52, align 4, !dbg !6089, !tbaa !2323
  %54 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %53, i32 6, !dbg !6089
  %55 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %54, align 4, !dbg !6089
  %56 = call noundef i64 %55(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %51, i8* noundef nonnull %50, i64 noundef 9) #33, !dbg !6089
  %57 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !6090, !tbaa !4997
  %58 = load i8*, i8** @_ZN6Cicada12ATCommDevice11_lineEndStrE, align 4, !dbg !6091, !tbaa !2231
  %59 = bitcast %"class.Cicada::IBufferedSerial"* %57 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !6092
  %60 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %59, align 4, !dbg !6092, !tbaa !2323
  %61 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %60, i32 8, !dbg !6092
  %62 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %61, align 4, !dbg !6092
  %63 = call noundef i64 %62(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %57, i8* noundef %58) #33, !dbg !6092
  %64 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 5, !dbg !6093
  store i8 0, i8* %64, align 1, !dbg !6094, !tbaa !6095
  %65 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 9, !dbg !6096
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.65, i32 0, i32 0), i8** %65, align 8, !dbg !6097, !tbaa !5160
  %66 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6098
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %66, i16 noundef zeroext 4000), !dbg !6098
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %50) #33, !dbg !6099
  br label %391

67:                                               ; preds = %34
  %68 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, !dbg !6100
  %69 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice14fillLineBufferEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68) #33, !dbg !6100
  call void @llvm.dbg.value(metadata i1 %69, metadata !6040, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6056
  br i1 %69, label %70, label %135, !dbg !6101

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 4, !dbg !6102
  %72 = load i8, i8* %71, align 2, !dbg !6102, !tbaa !5095
  %73 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 5, !dbg !6105
  %74 = load i8, i8* %73, align 1, !dbg !6105, !tbaa !6095
  call void @_ZN6Cicada12ATCommDevice9logStatesEaa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8 noundef signext %72, i8 noundef signext %74) #33, !dbg !6106
  %75 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 9, !dbg !6107
  %76 = load i8*, i8** %75, align 8, !dbg !6107, !tbaa !5160
  %77 = icmp eq i8* %76, null, !dbg !6107
  br i1 %77, label %91, label %78, !dbg !6109

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 2, i32 0, !dbg !6110
  %80 = call i32 @strlen(i8* noundef nonnull %76), !dbg !6113
  %81 = call i32 @strncmp(i8* noundef nonnull %79, i8* noundef nonnull %76, i32 noundef %80), !dbg !6114
  %82 = icmp eq i32 %81, 0, !dbg !6115
  br i1 %82, label %83, label %84, !dbg !6116

83:                                               ; preds = %78
  store i8* null, i8** %75, align 8, !dbg !6117, !tbaa !5160
  br label %91, !dbg !6119

84:                                               ; preds = %78
  %85 = call i32 @memcmp(i8* noundef nonnull dereferenceable(5) %79, i8* noundef nonnull dereferenceable(5) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.66, i32 0, i32 0), i32 5), !dbg !6120
  %86 = icmp eq i32 %85, 0, !dbg !6122
  br i1 %86, label %87, label %91, !dbg !6123

87:                                               ; preds = %84
  %88 = load i8, i8* %29, align 2, !dbg !6124, !tbaa !4987
  %89 = or i8 %88, 2, !dbg !6124
  store i8 %89, i8* %29, align 2, !dbg !6124, !tbaa !4987
  %90 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !6126
  store i32 5, i32* %90, align 4, !dbg !6127, !tbaa !5287
  store i8* null, i8** %75, align 8, !dbg !6128, !tbaa !5160
  br label %391, !dbg !6129

91:                                               ; preds = %83, %84, %70
  %92 = load i8, i8* %73, align 1, !dbg !6130, !tbaa !6095
  %93 = sext i8 %92 to i32, !dbg !6130
  switch i32 %93, label %131 [
    i32 4, label %94
    i32 5, label %104
    i32 6, label %107
    i32 7, label %119
    i32 8, label %122
    i32 1, label %125
    i32 2, label %128
  ], !dbg !6131

94:                                               ; preds = %91
  %95 = load i8*, i8** %75, align 8, !dbg !6132, !tbaa !5160
  %96 = icmp eq i8* %95, null, !dbg !6135
  br i1 %96, label %97, label %98, !dbg !6136

97:                                               ; preds = %94
  store i8 0, i8* %73, align 1, !dbg !6137, !tbaa !6095
  br label %131, !dbg !6139

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 2, i32 0, !dbg !6140
  %100 = call i32 @memcmp(i8* noundef nonnull dereferenceable(11) %99, i8* noundef nonnull dereferenceable(11) getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.67, i32 0, i32 0), i32 11), !dbg !6142
  %101 = icmp eq i32 %100, 0, !dbg !6143
  br i1 %101, label %102, label %131, !dbg !6144

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6145
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %103, i16 noundef zeroext 2000), !dbg !6145
  store i8 7, i8* %71, align 2, !dbg !6147, !tbaa !5095
  store i8* null, i8** %75, align 8, !dbg !6148, !tbaa !5160
  store i8 0, i8* %73, align 1, !dbg !6149, !tbaa !6095
  br label %391, !dbg !6150

104:                                              ; preds = %91
  %105 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice13parseDnsReplyEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68) #33, !dbg !6151
  br i1 %105, label %106, label %131, !dbg !6153

106:                                              ; preds = %104
  store i8 0, i8* %73, align 1, !dbg !6154, !tbaa !6095
  br label %131, !dbg !6156

107:                                              ; preds = %91
  %108 = load i8*, i8** %75, align 8, !dbg !6157, !tbaa !5160
  %109 = icmp eq i8* %108, null, !dbg !6159
  br i1 %109, label %110, label %111, !dbg !6160

110:                                              ; preds = %107
  store i8 0, i8* %73, align 1, !dbg !6161, !tbaa !6095
  br label %131, !dbg !6163

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 2, i32 0, !dbg !6164
  %113 = call i32 @memcmp(i8* noundef nonnull dereferenceable(12) %112, i8* noundef nonnull dereferenceable(12) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4.68, i32 0, i32 0), i32 12), !dbg !6167
  %114 = icmp eq i32 %113, 0, !dbg !6168
  br i1 %114, label %115, label %131, !dbg !6169

115:                                              ; preds = %111
  %116 = load i8, i8* %29, align 2, !dbg !6170, !tbaa !4987
  %117 = or i8 %116, 2, !dbg !6170
  store i8 %117, i8* %29, align 2, !dbg !6170, !tbaa !4987
  %118 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !6172
  store i32 5, i32* %118, align 4, !dbg !6173, !tbaa !5287
  br label %131, !dbg !6174

119:                                              ; preds = %91
  %120 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice14parseCiprxget4Ev(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68) #33, !dbg !6175
  br i1 %120, label %121, label %131, !dbg !6177

121:                                              ; preds = %119
  store i8 0, i8* %73, align 1, !dbg !6178, !tbaa !6095
  br label %131, !dbg !6180

122:                                              ; preds = %91
  %123 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice14parseCiprxget2Ev(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68) #33, !dbg !6181
  br i1 %123, label %124, label %131, !dbg !6183

124:                                              ; preds = %122
  store i8 0, i8* %73, align 1, !dbg !6184, !tbaa !6095
  store i8 17, i8* %71, align 2, !dbg !6186, !tbaa !5095
  br label %131, !dbg !6187

125:                                              ; preds = %91
  %126 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice8parseCsqEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68) #33, !dbg !6188
  br i1 %126, label %127, label %131, !dbg !6190

127:                                              ; preds = %125
  store i8 0, i8* %73, align 1, !dbg !6191, !tbaa !6095
  br label %131, !dbg !6193

128:                                              ; preds = %91
  %129 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice12parseIDReplyEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68) #33, !dbg !6194
  br i1 %129, label %130, label %131, !dbg !6196

130:                                              ; preds = %128
  store i8 0, i8* %73, align 1, !dbg !6197, !tbaa !6095
  br label %131, !dbg !6199

131:                                              ; preds = %91, %128, %130, %125, %127, %122, %124, %119, %121, %110, %115, %111, %104, %106, %97, %98
  %132 = load i8, i8* %71, align 2, !dbg !6200, !tbaa !5095
  %133 = icmp sgt i8 %132, 11, !dbg !6202
  br i1 %133, label %134, label %144, !dbg !6203

134:                                              ; preds = %131
  call void @_ZN6Cicada13SimCommDevice20checkConnectionStateEPKc(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.69, i32 0, i32 0)) #33, !dbg !6204
  br label %144, !dbg !6206

135:                                              ; preds = %67
  %136 = load i8, i8* %29, align 2, !dbg !6207, !tbaa !4987
  %137 = and i8 %136, 8, !dbg !6209
  %138 = icmp ne i8 %137, 0, !dbg !6210
  %139 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 4
  %140 = load i8, i8* %139, align 2
  %141 = icmp eq i8 %140, 17
  %142 = select i1 %138, i1 %141, i1 false, !dbg !6211
  br i1 %142, label %143, label %144, !dbg !6211

143:                                              ; preds = %135
  call void @_ZN6Cicada12ATCommDevice15flushReadBufferEv(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6) #33, !dbg !6212
  br label %144, !dbg !6214

144:                                              ; preds = %135, %143, %131, %134
  %145 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 9, !dbg !6215
  %146 = load i8*, i8** %145, align 8, !dbg !6215, !tbaa !5160
  %147 = icmp eq i8* %146, null, !dbg !6215
  br i1 %147, label %148, label %391, !dbg !6217

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 5, !dbg !6218
  %150 = load i8, i8* %149, align 1, !dbg !6218, !tbaa !6095
  %151 = icmp eq i8 %150, 0, !dbg !6219
  br i1 %151, label %152, label %391, !dbg !6220

152:                                              ; preds = %148
  %153 = bitcast %"class.Cicada::IBufferedSerial"** %7 to %"class.Cicada::ICommDevice"**, !dbg !6221
  %154 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %153, align 4, !dbg !6221, !tbaa !4997
  %155 = bitcast %"class.Cicada::ICommDevice"* %154 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !6223
  %156 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %155, align 4, !dbg !6223, !tbaa !2323
  %157 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %156, i32 3, !dbg !6223
  %158 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %157, align 4, !dbg !6223
  %159 = call noundef i64 %158(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %154) #33, !dbg !6223
  %160 = icmp ult i64 %159, 20, !dbg !6224
  br i1 %160, label %391, label %161, !dbg !6225

161:                                              ; preds = %152
  %162 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 4, !dbg !6226
  %163 = load i8, i8* %162, align 4, !dbg !6226, !tbaa !5607
  %164 = icmp eq i8 %163, -1, !dbg !6228
  br i1 %164, label %165, label %171, !dbg !6229

165:                                              ; preds = %161
  %166 = load i8, i8* %29, align 2, !dbg !6230, !tbaa !4987
  %167 = and i8 %166, 32, !dbg !6231
  %168 = icmp eq i8 %167, 0, !dbg !6230
  br i1 %168, label %171, label %169, !dbg !6232

169:                                              ; preds = %165
  store i8 1, i8* %149, align 1, !dbg !6233, !tbaa !6095
  %170 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !6235, !tbaa !2231
  store i8* %170, i8** %145, align 8, !dbg !6236, !tbaa !5160
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.70, i32 0, i32 0)) #33, !dbg !6237
  br label %391, !dbg !6238

171:                                              ; preds = %165, %161
  %172 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 1, !dbg !6239
  %173 = load i8*, i8** %172, align 8, !dbg !6239, !tbaa !6241
  %174 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice13sendIDRequestEPKc(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68, i8* noundef %173) #33, !dbg !6243
  br i1 %174, label %175, label %177, !dbg !6244

175:                                              ; preds = %171
  store i8 2, i8* %149, align 1, !dbg !6245, !tbaa !6095
  %176 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !6247, !tbaa !2231
  store i8* %176, i8** %145, align 8, !dbg !6248, !tbaa !5160
  br label %391, !dbg !6249

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 4, !dbg !6250
  %179 = load i8, i8* %178, align 2, !dbg !6250, !tbaa !5095
  %180 = sext i8 %179 to i32, !dbg !6250
  switch i32 %180, label %391 [
    i32 0, label %181
    i32 3, label %185
    i32 4, label %191
    i32 5, label %217
    i32 6, label %219
    i32 7, label %221
    i32 8, label %225
    i32 9, label %227
    i32 10, label %231
    i32 11, label %282
    i32 12, label %287
    i32 13, label %347
    i32 14, label %349
    i32 15, label %351
    i32 20, label %387
    i32 17, label %366
    i32 18, label %380
    i32 19, label %385
  ], !dbg !6251

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6252
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %182, i16 noundef zeroext 10), !dbg !6252
  %183 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !6253
  store i32 0, i32* %183, align 4, !dbg !6254, !tbaa !5287
  %184 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice13handleConnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8 noundef signext 3) #33, !dbg !6255
  br label %391, !dbg !6256

185:                                              ; preds = %177
  %186 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6257
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %186, i16 noundef zeroext 10), !dbg !6257
  %187 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !6258
  store i32 1, i32* %187, align 4, !dbg !6259, !tbaa !5287
  %188 = load i8, i8* %29, align 2, !dbg !6260, !tbaa !4987
  %189 = or i8 %188, 32, !dbg !6260
  store i8 %189, i8* %29, align 2, !dbg !6260, !tbaa !4987
  %190 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !6261, !tbaa !2231
  store i8* %190, i8** %145, align 8, !dbg !6262, !tbaa !5160
  store i8 4, i8* %178, align 2, !dbg !6263, !tbaa !5095
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.71, i32 0, i32 0)) #33, !dbg !6264
  br label %391, !dbg !6265

191:                                              ; preds = %177
  %192 = getelementptr inbounds [23 x i8], [23 x i8]* %3, i32 0, i32 0, !dbg !6266
  call void @llvm.lifetime.start.p0i8(i64 23, i8* nonnull %192) #33, !dbg !6266
  call void @llvm.dbg.declare(metadata [23 x i8]* %3, metadata !6041, metadata !DIExpression()), !dbg !6267
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(23) %192, i8* noundef nonnull align 1 dereferenceable(23) getelementptr inbounds ([23 x i8], [23 x i8]* @__const._ZN6Cicada17Sim7x00CommDevice3runEv.str.8, i32 0, i32 0), i32 23, i1 false), !dbg !6267
  %193 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !6268, !tbaa !4997
  %194 = bitcast %"class.Cicada::IBufferedSerial"* %193 to i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)***, !dbg !6269
  %195 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*** %194, align 4, !dbg !6269, !tbaa !2323
  %196 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %195, i32 6, !dbg !6269
  %197 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %196, align 4, !dbg !6269
  %198 = call noundef i64 %197(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %193, i8* noundef nonnull %192, i64 noundef 22) #33, !dbg !6269
  %199 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !6270, !tbaa !4997
  %200 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 1, !dbg !6271
  %201 = load i8*, i8** %200, align 8, !dbg !6271, !tbaa !5580
  %202 = call i32 @strlen(i8* noundef nonnull dereferenceable(1) %201), !dbg !6272
  %203 = zext i32 %202 to i64, !dbg !6272
  %204 = bitcast %"class.Cicada::IBufferedSerial"* %199 to i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)***, !dbg !6273
  %205 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*** %204, align 4, !dbg !6273, !tbaa !2323
  %206 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %205, i32 6, !dbg !6273
  %207 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %206, align 4, !dbg !6273
  %208 = call noundef i64 %207(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %199, i8* noundef %201, i64 noundef %203) #33, !dbg !6273
  %209 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !6274, !tbaa !4997
  %210 = load i8*, i8** @_ZN6Cicada12ATCommDevice12_quoteEndStrE, align 4, !dbg !6275, !tbaa !2231
  %211 = bitcast %"class.Cicada::IBufferedSerial"* %209 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !6276
  %212 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %211, align 4, !dbg !6276, !tbaa !2323
  %213 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %212, i32 8, !dbg !6276
  %214 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %213, align 4, !dbg !6276
  %215 = call noundef i64 %214(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %209, i8* noundef %210) #33, !dbg !6276
  %216 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !6277, !tbaa !2231
  store i8* %216, i8** %145, align 8, !dbg !6278, !tbaa !5160
  store i8 5, i8* %178, align 2, !dbg !6279, !tbaa !5095
  call void @llvm.lifetime.end.p0i8(i64 23, i8* nonnull %192) #33, !dbg !6280
  br label %391

217:                                              ; preds = %177
  %218 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !6281, !tbaa !2231
  store i8* %218, i8** %145, align 8, !dbg !6282, !tbaa !5160
  store i8 6, i8* %178, align 2, !dbg !6283, !tbaa !5095
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9.72, i32 0, i32 0)) #33, !dbg !6284
  br label %391, !dbg !6285

219:                                              ; preds = %177
  %220 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !6286, !tbaa !2231
  store i8* %220, i8** %145, align 8, !dbg !6287, !tbaa !5160
  store i8 7, i8* %178, align 2, !dbg !6288, !tbaa !5095
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10.73, i32 0, i32 0)) #33, !dbg !6289
  br label %391, !dbg !6290

221:                                              ; preds = %177
  %222 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice16handleDisconnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8 noundef signext 20) #33, !dbg !6291
  br i1 %222, label %391, label %223, !dbg !6293

223:                                              ; preds = %221
  %224 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6294
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %224, i16 noundef zeroext 10), !dbg !6294
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11.74, i32 0, i32 0), i8** %145, align 8, !dbg !6295, !tbaa !5160
  store i8 8, i8* %178, align 2, !dbg !6296, !tbaa !5095
  store i8 4, i8* %149, align 1, !dbg !6297, !tbaa !6095
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12.75, i32 0, i32 0)) #33, !dbg !6298
  br label %391, !dbg !6299

225:                                              ; preds = %177
  %226 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !6300, !tbaa !2231
  store i8* %226, i8** %145, align 8, !dbg !6301, !tbaa !5160
  store i8 9, i8* %178, align 2, !dbg !6302, !tbaa !5095
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13.76, i32 0, i32 0)) #33, !dbg !6303
  br label %391, !dbg !6304

227:                                              ; preds = %177
  %228 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice12sendDnsQueryEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68) #33, !dbg !6305
  br i1 %228, label %229, label %391, !dbg !6307

229:                                              ; preds = %227
  store i8 5, i8* %149, align 1, !dbg !6308, !tbaa !6095
  %230 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !6310, !tbaa !2231
  store i8* %230, i8** %145, align 8, !dbg !6311, !tbaa !5160
  store i8 10, i8* %178, align 2, !dbg !6312, !tbaa !5095
  br label %391, !dbg !6313

231:                                              ; preds = %177
  %232 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0, !dbg !6314
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %232) #33, !dbg !6314
  call void @llvm.dbg.declare(metadata [6 x i8]* %4, metadata !6047, metadata !DIExpression()), !dbg !6315
  %233 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !6316
  %234 = load i16, i16* %233, align 8, !dbg !6316, !tbaa !5374
  %235 = zext i16 %234 to i32, !dbg !6316
  %236 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* noundef nonnull %232, i32 noundef 6, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14.77, i32 0, i32 0), i32 noundef %235), !dbg !6317
  %237 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !6318, !tbaa !4997
  %238 = bitcast %"class.Cicada::IBufferedSerial"* %237 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !6319
  %239 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %238, align 4, !dbg !6319, !tbaa !2323
  %240 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %239, i32 8, !dbg !6319
  %241 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %240, align 4, !dbg !6319
  %242 = call noundef i64 %241(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %237, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i32 0, i32 0)) #33, !dbg !6319
  %243 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6320
  %244 = load i32, i32* %243, align 8, !dbg !6320, !tbaa !5377
  %245 = icmp eq i32 %244, 0, !dbg !6322
  %246 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !6323, !tbaa !4997
  %247 = bitcast %"class.Cicada::IBufferedSerial"* %246 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !6323
  %248 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %247, align 4, !dbg !6323, !tbaa !2323
  %249 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %248, i32 8, !dbg !6323
  %250 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %249, align 4, !dbg !6323
  br i1 %245, label %251, label %253, !dbg !6324

251:                                              ; preds = %231
  %252 = call noundef i64 %250(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %246, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i32 0, i32 0)) #33, !dbg !6325
  br label %268, !dbg !6327

253:                                              ; preds = %231
  %254 = call noundef i64 %250(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %246, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i32 0, i32 0)) #33, !dbg !6328
  %255 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !6330, !tbaa !4997
  %256 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6331
  %257 = bitcast %"class.Cicada::IBufferedSerial"* %255 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !6332
  %258 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %257, align 4, !dbg !6332, !tbaa !2323
  %259 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %258, i32 8, !dbg !6332
  %260 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %259, align 4, !dbg !6332
  %261 = call noundef i64 %260(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %255, i8* noundef nonnull %256) #33, !dbg !6332
  %262 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !6333, !tbaa !4997
  %263 = bitcast %"class.Cicada::IBufferedSerial"* %262 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !6334
  %264 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %263, align 4, !dbg !6334, !tbaa !2323
  %265 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %264, i32 8, !dbg !6334
  %266 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %265, align 4, !dbg !6334
  %267 = call noundef i64 %266(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %262, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i32 0, i32 0)) #33, !dbg !6334
  br label %268

268:                                              ; preds = %253, %251
  %269 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !6335, !tbaa !4997
  %270 = bitcast %"class.Cicada::IBufferedSerial"* %269 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !6336
  %271 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %270, align 4, !dbg !6336, !tbaa !2323
  %272 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %271, i32 8, !dbg !6336
  %273 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %272, align 4, !dbg !6336
  %274 = call noundef i64 %273(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %269, i8* noundef nonnull %232) #33, !dbg !6336
  %275 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !6337, !tbaa !4997
  %276 = load i8*, i8** @_ZN6Cicada12ATCommDevice11_lineEndStrE, align 4, !dbg !6338, !tbaa !2231
  %277 = bitcast %"class.Cicada::IBufferedSerial"* %275 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !6339
  %278 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %277, align 4, !dbg !6339, !tbaa !2323
  %279 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %278, i32 8, !dbg !6339
  %280 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %279, align 4, !dbg !6339
  %281 = call noundef i64 %280(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %275, i8* noundef %276) #33, !dbg !6339
  store i8 6, i8* %149, align 1, !dbg !6340, !tbaa !6095
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i32 0, i32 0), i8** %145, align 8, !dbg !6341, !tbaa !5160
  store i8 11, i8* %178, align 2, !dbg !6342, !tbaa !5095
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %232) #33, !dbg !6343
  br label %391

282:                                              ; preds = %177
  %283 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6344
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %283, i16 noundef zeroext 0), !dbg !6344
  %284 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !6345
  store i32 2, i32* %284, align 4, !dbg !6346, !tbaa !5287
  store i8 0, i8* %149, align 1, !dbg !6347, !tbaa !6095
  store i8 12, i8* %178, align 2, !dbg !6348, !tbaa !5095
  %285 = load i8, i8* %29, align 2, !dbg !6349, !tbaa !4987
  %286 = or i8 %285, 16, !dbg !6349
  store i8 %286, i8* %29, align 2, !dbg !6349, !tbaa !4987
  br label %391, !dbg !6350

287:                                              ; preds = %177
  %288 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6351
  %289 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %288), !dbg !6352
  %290 = icmp eq i64 %289, 0, !dbg !6351
  br i1 %290, label %337, label %291, !dbg !6353

291:                                              ; preds = %287
  %292 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice14prepareSendingEb(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i1 noundef zeroext true) #33, !dbg !6354
  br i1 %292, label %293, label %391, !dbg !6355

293:                                              ; preds = %291
  %294 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6356
  %295 = load i32, i32* %294, align 8, !dbg !6356, !tbaa !5377
  %296 = icmp eq i32 %295, 0, !dbg !6357
  br i1 %296, label %297, label %328, !dbg !6358

297:                                              ; preds = %293
  %298 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !6359, !tbaa !4997
  %299 = bitcast %"class.Cicada::IBufferedSerial"* %298 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !6360
  %300 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %299, align 4, !dbg !6360, !tbaa !2323
  %301 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %300, i32 8, !dbg !6360
  %302 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %301, align 4, !dbg !6360
  %303 = call noundef i64 %302(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %298, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i32 0, i32 0)) #33, !dbg !6360
  %304 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !6361, !tbaa !4997
  %305 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6362
  %306 = bitcast %"class.Cicada::IBufferedSerial"* %304 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !6363
  %307 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %306, align 4, !dbg !6363, !tbaa !2323
  %308 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %307, i32 8, !dbg !6363
  %309 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %308, align 4, !dbg !6363
  %310 = call noundef i64 %309(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %304, i8* noundef nonnull %305) #33, !dbg !6363
  %311 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !6364, !tbaa !4997
  %312 = bitcast %"class.Cicada::IBufferedSerial"* %311 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !6365
  %313 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %312, align 4, !dbg !6365, !tbaa !2323
  %314 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %313, i32 8, !dbg !6365
  %315 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %314, align 4, !dbg !6365
  %316 = call noundef i64 %315(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %311, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i32 0, i32 0)) #33, !dbg !6365
  %317 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i32 0, i32 0, !dbg !6366
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %317) #33, !dbg !6366
  call void @llvm.dbg.declare(metadata [6 x i8]* %5, metadata !6049, metadata !DIExpression()), !dbg !6367
  %318 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !6368
  %319 = load i16, i16* %318, align 8, !dbg !6368, !tbaa !5374
  %320 = zext i16 %319 to i32, !dbg !6368
  %321 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* noundef nonnull %317, i32 noundef 6, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14.77, i32 0, i32 0), i32 noundef %320), !dbg !6369
  %322 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !6370, !tbaa !4997
  %323 = bitcast %"class.Cicada::IBufferedSerial"* %322 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !6371
  %324 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %323, align 4, !dbg !6371, !tbaa !2323
  %325 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %324, i32 8, !dbg !6371
  %326 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %325, align 4, !dbg !6371
  %327 = call noundef i64 %326(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %322, i8* noundef nonnull %317) #33, !dbg !6371
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %317) #33, !dbg !6372
  br label %328, !dbg !6373

328:                                              ; preds = %297, %293
  %329 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !6374, !tbaa !4997
  %330 = load i8*, i8** @_ZN6Cicada12ATCommDevice11_lineEndStrE, align 4, !dbg !6375, !tbaa !2231
  %331 = bitcast %"class.Cicada::IBufferedSerial"* %329 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !6376
  %332 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %331, align 4, !dbg !6376, !tbaa !2323
  %333 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %332, i32 8, !dbg !6376
  %334 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %333, align 4, !dbg !6376
  %335 = call noundef i64 %334(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %329, i8* noundef %330) #33, !dbg !6376
  %336 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !6377
  store i32 3, i32* %336, align 4, !dbg !6378, !tbaa !5287
  store i8 13, i8* %178, align 2, !dbg !6379, !tbaa !5095
  br label %391, !dbg !6380

337:                                              ; preds = %287
  %338 = load i8, i8* %29, align 2, !dbg !6381, !tbaa !4987
  %339 = and i8 %338, 4, !dbg !6383
  %340 = icmp eq i8 %339, 0, !dbg !6381
  br i1 %340, label %344, label %341, !dbg !6384

341:                                              ; preds = %337
  %342 = and i8 %338, -5, !dbg !6385
  store i8 %342, i8* %29, align 2, !dbg !6385, !tbaa !4987
  %343 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !6387
  store i32 4, i32* %343, align 4, !dbg !6388, !tbaa !5287
  store i8 14, i8* %178, align 2, !dbg !6389, !tbaa !5095
  br label %391, !dbg !6390

344:                                              ; preds = %337
  %345 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !6391
  store i32 2, i32* %345, align 4, !dbg !6393, !tbaa !5287
  %346 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice16handleDisconnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8 noundef signext 19) #33, !dbg !6394
  br label %391

347:                                              ; preds = %177
  call void @_ZN6Cicada12ATCommDevice8sendDataEv(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6) #33, !dbg !6395
  %348 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !6396, !tbaa !2231
  store i8* %348, i8** %145, align 8, !dbg !6397, !tbaa !5160
  store i8 12, i8* %178, align 2, !dbg !6398, !tbaa !5095
  br label %391, !dbg !6399

349:                                              ; preds = %177
  %350 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !6400, !tbaa !2231
  store i8* %350, i8** %145, align 8, !dbg !6401, !tbaa !5160
  store i8 15, i8* %178, align 2, !dbg !6402, !tbaa !5095
  store i8 7, i8* %149, align 1, !dbg !6403, !tbaa !6095
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i32 0, i32 0)) #33, !dbg !6404
  br label %391, !dbg !6405

351:                                              ; preds = %177
  %352 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice16handleDisconnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8 noundef signext 19) #33, !dbg !6406
  br i1 %352, label %391, label %353, !dbg !6408

353:                                              ; preds = %351
  %354 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !6409
  %355 = load i64, i64* %354, align 8, !dbg !6409, !tbaa !5072
  %356 = icmp eq i64 %355, 0, !dbg !6411
  br i1 %356, label %360, label %357, !dbg !6412

357:                                              ; preds = %353
  %358 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice13sendCiprxget2Ev(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68) #33, !dbg !6413
  br i1 %358, label %359, label %391, !dbg !6416

359:                                              ; preds = %357
  store i8 16, i8* %178, align 2, !dbg !6417, !tbaa !5095
  store i8 8, i8* %149, align 1, !dbg !6419, !tbaa !6095
  br label %391, !dbg !6420

360:                                              ; preds = %353
  %361 = load i8, i8* %29, align 2, !dbg !6421, !tbaa !4987
  %362 = and i8 %361, 16, !dbg !6423
  %363 = icmp eq i8 %362, 0, !dbg !6421
  br i1 %363, label %365, label %364, !dbg !6424

364:                                              ; preds = %360
  store i8 12, i8* %178, align 2, !dbg !6425, !tbaa !5095
  br label %391, !dbg !6427

365:                                              ; preds = %360
  store i8 18, i8* %178, align 2, !dbg !6428, !tbaa !5095
  br label %391

366:                                              ; preds = %177
  %367 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 8, !dbg !6430
  %368 = load i64, i64* %367, align 8, !dbg !6430, !tbaa !5060
  %369 = icmp eq i64 %368, 0, !dbg !6432
  br i1 %369, label %374, label %370, !dbg !6433

370:                                              ; preds = %366
  %371 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice7receiveEv(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6) #33, !dbg !6434
  br i1 %371, label %372, label %391, !dbg !6437

372:                                              ; preds = %370
  store i8 0, i8* %149, align 1, !dbg !6438, !tbaa !6095
  %373 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !6440, !tbaa !2231
  store i8* %373, i8** %145, align 8, !dbg !6441, !tbaa !5160
  br label %391, !dbg !6442

374:                                              ; preds = %366
  %375 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !6443
  %376 = load i64, i64* %375, align 8, !dbg !6443, !tbaa !5072
  %377 = icmp eq i64 %376, 0, !dbg !6445
  br i1 %377, label %379, label %378, !dbg !6446

378:                                              ; preds = %374
  store i8 15, i8* %178, align 2, !dbg !6447, !tbaa !5095
  br label %391, !dbg !6449

379:                                              ; preds = %374
  store i8 14, i8* %178, align 2, !dbg !6450, !tbaa !5095
  br label %391

380:                                              ; preds = %177
  %381 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !6452
  store i32 1, i32* %381, align 4, !dbg !6453, !tbaa !5287
  %382 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice16handleDisconnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8 noundef signext 19) #33, !dbg !6454
  br i1 %382, label %391, label %383, !dbg !6456

383:                                              ; preds = %380
  %384 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice13handleConnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8 noundef signext 10) #33, !dbg !6457
  br label %391, !dbg !6458

385:                                              ; preds = %177
  %386 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !6459
  store i32 1, i32* %386, align 4, !dbg !6460, !tbaa !5287
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i32 0, i32 0), i8** %145, align 8, !dbg !6461, !tbaa !5160
  store i8 20, i8* %178, align 2, !dbg !6462, !tbaa !5095
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i32 0, i32 0)) #33, !dbg !6463
  br label %391, !dbg !6464

387:                                              ; preds = %177
  %388 = load i8, i8* %29, align 2, !dbg !6465, !tbaa !4987
  %389 = and i8 %388, -17, !dbg !6465
  store i8 %389, i8* %29, align 2, !dbg !6465, !tbaa !4987
  %390 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !6466
  store i32 0, i32* %390, align 4, !dbg !6467, !tbaa !5287
  store i8 0, i8* %178, align 2, !dbg !6468, !tbaa !5095
  br label %391, !dbg !6469

391:                                              ; preds = %87, %102, %169, %175, %148, %144, %152, %177, %380, %372, %370, %379, %378, %359, %357, %365, %364, %351, %328, %291, %344, %341, %227, %229, %221, %387, %385, %383, %349, %347, %282, %268, %225, %223, %219, %217, %191, %185, %181, %28, %17, %26, %37
  ret void, !dbg !6470
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::Sim7x00CommDevice"* @_ZThn4_N6Cicada17Sim7x00CommDeviceD1Ev(%"class.Cicada::Sim7x00CommDevice"* noundef %0) unnamed_addr #4 comdat align 2 !dbg !6471 {
  %2 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 -1, i32 2, i32 0, !dbg !6472
  %3 = bitcast i8* %2 to %"class.Cicada::IPCommDevice"*, !dbg !6472
  %4 = tail call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceD2Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(284) %3) #33, !dbg !6472
  ret %"class.Cicada::Sim7x00CommDevice"* undef, !dbg !6472
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada17Sim7x00CommDeviceD0Ev(%"class.Cicada::Sim7x00CommDevice"* noundef %0) unnamed_addr #4 comdat align 2 !dbg !6473 {
  %2 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 -1, i32 2, i32 0, !dbg !6474
  %3 = bitcast i8* %2 to %"class.Cicada::Sim7x00CommDevice"*, !dbg !6474
  tail call void @_ZN6Cicada17Sim7x00CommDeviceD0Ev(%"class.Cicada::Sim7x00CommDevice"* noundef nonnull align 8 dereferenceable(284) %3) #33, !dbg !6474
  ret void, !dbg !6474
}

; Function Attrs: noinline nounwind
define dso_local void @_ZThn4_N6Cicada17Sim7x00CommDevice3runEv(%"class.Cicada::Sim7x00CommDevice"* noundef %0) unnamed_addr #4 align 2 !dbg !6475 {
  %2 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 -1, i32 2, i32 0, !dbg !6476
  %3 = bitcast i8* %2 to %"class.Cicada::Sim7x00CommDevice"*, !dbg !6476
  tail call void @_ZN6Cicada17Sim7x00CommDevice3runEv(%"class.Cicada::Sim7x00CommDevice"* noundef nonnull align 8 dereferenceable(284) %3), !dbg !6476
  ret void, !dbg !6476
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::Sim7x00CommDevice"* @_ZN6Cicada17Sim7x00CommDeviceC2ERNS_15IBufferedSerialEPhS3_y(%"class.Cicada::Sim7x00CommDevice"* noundef nonnull returned align 8 dereferenceable(284) %0, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4) unnamed_addr #4 align 2 !dbg !6477 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Sim7x00CommDevice"* %0, metadata !6479, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %1, metadata !6480, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.value(metadata i8* %2, metadata !6481, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.value(metadata i8* %3, metadata !6482, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.value(metadata i64 %4, metadata !6483, metadata !DIExpression()), !dbg !6484
  %6 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, !dbg !6485
  %7 = call noundef %"class.Cicada::SimCommDevice"* @_ZN6Cicada13SimCommDeviceC2ERNS_15IBufferedSerialEPhS3_y(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %6, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4) #33, !dbg !6486
  %8 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6485
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTVN6Cicada17Sim7x00CommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %8, align 8, !dbg !6485, !tbaa !2323
  %9 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !6485
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTVN6Cicada17Sim7x00CommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %9, align 4, !dbg !6485, !tbaa !2323
  %10 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 1, !dbg !6487
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.78, i32 0, i32 0), i8** %10, align 8, !dbg !6487, !tbaa !6241
  %11 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 5, !dbg !6489
  store i16 1500, i16* %11, align 2, !dbg !6492, !tbaa !5927
  ret %"class.Cicada::Sim7x00CommDevice"* %0, !dbg !6493
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::Sim7x00CommDevice"* @_ZN6Cicada17Sim7x00CommDeviceC2ERNS_15IBufferedSerialEPhS3_yy(%"class.Cicada::Sim7x00CommDevice"* noundef nonnull returned align 8 dereferenceable(284) %0, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4, i64 noundef %5) unnamed_addr #4 align 2 !dbg !6494 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Sim7x00CommDevice"* %0, metadata !6496, metadata !DIExpression()), !dbg !6502
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %1, metadata !6497, metadata !DIExpression()), !dbg !6502
  call void @llvm.dbg.value(metadata i8* %2, metadata !6498, metadata !DIExpression()), !dbg !6502
  call void @llvm.dbg.value(metadata i8* %3, metadata !6499, metadata !DIExpression()), !dbg !6502
  call void @llvm.dbg.value(metadata i64 %4, metadata !6500, metadata !DIExpression()), !dbg !6502
  call void @llvm.dbg.value(metadata i64 %5, metadata !6501, metadata !DIExpression()), !dbg !6502
  %7 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, !dbg !6503
  %8 = call noundef %"class.Cicada::SimCommDevice"* @_ZN6Cicada13SimCommDeviceC2ERNS_15IBufferedSerialEPhS3_yy(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %7, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4, i64 noundef %5) #33, !dbg !6504
  %9 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6503
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTVN6Cicada17Sim7x00CommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8, !dbg !6503, !tbaa !2323
  %10 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !6503
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTVN6Cicada17Sim7x00CommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %10, align 4, !dbg !6503, !tbaa !2323
  %11 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 1, !dbg !6505
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.78, i32 0, i32 0), i8** %11, align 8, !dbg !6505, !tbaa !6241
  %12 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 5, !dbg !6507
  store i16 1500, i16* %12, align 2, !dbg !6510, !tbaa !5927
  ret %"class.Cicada::Sim7x00CommDevice"* %0, !dbg !6511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local noundef nonnull %"class.Cicada::Scheduler"* @_ZN6Cicada9SchedulerC2EPFjvEPPNS_4TaskE(%"class.Cicada::Scheduler"* noundef nonnull returned writeonly align 4 dereferenceable(12) %0, i32 ()* noundef %1, %"class.Cicada::Task"** noundef %2) unnamed_addr #12 align 2 !dbg !6512 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Scheduler"* %0, metadata !6514, metadata !DIExpression()), !dbg !6518
  call void @llvm.dbg.value(metadata i32 ()* %1, metadata !6516, metadata !DIExpression()), !dbg !6518
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"** %2, metadata !6517, metadata !DIExpression()), !dbg !6518
  %4 = getelementptr inbounds %"class.Cicada::Scheduler", %"class.Cicada::Scheduler"* %0, i32 0, i32 0, !dbg !6519
  store i32 ()* %1, i32 ()** %4, align 4, !dbg !6519, !tbaa !6520
  %5 = getelementptr inbounds %"class.Cicada::Scheduler", %"class.Cicada::Scheduler"* %0, i32 0, i32 1, !dbg !6522
  store %"class.Cicada::Task"** %2, %"class.Cicada::Task"*** %5, align 4, !dbg !6522, !tbaa !6523
  %6 = getelementptr inbounds %"class.Cicada::Scheduler", %"class.Cicada::Scheduler"* %0, i32 0, i32 2, !dbg !6524
  store %"class.Cicada::Task"** %2, %"class.Cicada::Task"*** %6, align 4, !dbg !6524, !tbaa !6525
  ret %"class.Cicada::Scheduler"* %0, !dbg !6526
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada9Scheduler7runTaskEv(%"class.Cicada::Scheduler"* nocapture noundef nonnull align 4 dereferenceable(12) %0) local_unnamed_addr #5 align 2 !dbg !6527 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Scheduler"* %0, metadata !6529, metadata !DIExpression()), !dbg !6531
  %2 = getelementptr inbounds %"class.Cicada::Scheduler", %"class.Cicada::Scheduler"* %0, i32 0, i32 0, !dbg !6532
  %3 = load i32 ()*, i32 ()** %2, align 4, !dbg !6532, !tbaa !6520
  %4 = call noundef i32 %3() #33, !dbg !6532
  call void @llvm.dbg.value(metadata i32 %4, metadata !6530, metadata !DIExpression()), !dbg !6531
  %5 = getelementptr inbounds %"class.Cicada::Scheduler", %"class.Cicada::Scheduler"* %0, i32 0, i32 2, !dbg !6533
  %6 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %5, align 4, !dbg !6533, !tbaa !6525
  %7 = load %"class.Cicada::Task"*, %"class.Cicada::Task"** %6, align 4, !dbg !6535, !tbaa !2231
  %8 = call noundef zeroext i16 @_ZNK6Cicada4Task5delayEv(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %7), !dbg !6536
  %9 = icmp eq i16 %8, 0, !dbg !6537
  br i1 %9, label %20, label %10, !dbg !6538

10:                                               ; preds = %1
  %11 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %5, align 4, !dbg !6539, !tbaa !6525
  %12 = load %"class.Cicada::Task"*, %"class.Cicada::Task"** %11, align 4, !dbg !6540, !tbaa !2231
  %13 = call noundef i32 @_ZN6Cicada4Task7lastRunEv(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %12), !dbg !6541
  %14 = sub i32 %4, %13, !dbg !6542
  %15 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %5, align 4, !dbg !6543, !tbaa !6525
  %16 = load %"class.Cicada::Task"*, %"class.Cicada::Task"** %15, align 4, !dbg !6544, !tbaa !2231
  %17 = call noundef zeroext i16 @_ZNK6Cicada4Task5delayEv(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %16), !dbg !6545
  %18 = zext i16 %17 to i32, !dbg !6546
  %19 = icmp ult i32 %14, %18, !dbg !6547
  br i1 %19, label %29, label %20, !dbg !6548

20:                                               ; preds = %10, %1
  %21 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %5, align 4, !dbg !6549, !tbaa !6525
  %22 = load %"class.Cicada::Task"*, %"class.Cicada::Task"** %21, align 4, !dbg !6551, !tbaa !2231
  call void @_ZN6Cicada4Task10setLastRunEj(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %22, i32 noundef %4), !dbg !6552
  %23 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %5, align 4, !dbg !6553, !tbaa !6525
  %24 = load %"class.Cicada::Task"*, %"class.Cicada::Task"** %23, align 4, !dbg !6554, !tbaa !2231
  %25 = bitcast %"class.Cicada::Task"* %24 to void (%"class.Cicada::Task"*)***, !dbg !6555
  %26 = load void (%"class.Cicada::Task"*)**, void (%"class.Cicada::Task"*)*** %25, align 4, !dbg !6555, !tbaa !2323
  %27 = getelementptr inbounds void (%"class.Cicada::Task"*)*, void (%"class.Cicada::Task"*)** %26, i32 2, !dbg !6555
  %28 = load void (%"class.Cicada::Task"*)*, void (%"class.Cicada::Task"*)** %27, align 4, !dbg !6555
  call void %28(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %24) #33, !dbg !6555
  br label %29, !dbg !6556

29:                                               ; preds = %20, %10
  %30 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %5, align 4, !dbg !6557, !tbaa !6525
  %31 = getelementptr inbounds %"class.Cicada::Task"*, %"class.Cicada::Task"** %30, i32 1, !dbg !6557
  store %"class.Cicada::Task"** %31, %"class.Cicada::Task"*** %5, align 4, !dbg !6557, !tbaa !6525
  %32 = load %"class.Cicada::Task"*, %"class.Cicada::Task"** %31, align 4, !dbg !6559, !tbaa !2231
  %33 = icmp eq %"class.Cicada::Task"* %32, null, !dbg !6560
  br i1 %33, label %34, label %37, !dbg !6561

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.Cicada::Scheduler", %"class.Cicada::Scheduler"* %0, i32 0, i32 1, !dbg !6562
  %36 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %35, align 4, !dbg !6562, !tbaa !6523
  store %"class.Cicada::Task"** %36, %"class.Cicada::Task"*** %5, align 4, !dbg !6564, !tbaa !6525
  br label %37, !dbg !6565

37:                                               ; preds = %34, %29
  ret void, !dbg !6566
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i16 @_ZNK6Cicada4Task5delayEv(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %0) local_unnamed_addr #5 comdat align 2 !dbg !6567 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !6569, metadata !DIExpression()), !dbg !6571
  %2 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 1, !dbg !6572
  %3 = load i16, i16* %2, align 4, !dbg !6572, !tbaa !2363
  ret i16 %3, !dbg !6573
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i32 @_ZN6Cicada4Task7lastRunEv(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %0) local_unnamed_addr #5 comdat align 2 !dbg !6574 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !6576, metadata !DIExpression()), !dbg !6577
  %2 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 4, !dbg !6578
  %3 = load i32, i32* %2, align 4, !dbg !6578, !tbaa !2370
  ret i32 %3, !dbg !6579
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada4Task10setLastRunEj(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %0, i32 noundef %1) local_unnamed_addr #5 comdat align 2 !dbg !6580 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !6582, metadata !DIExpression()), !dbg !6584
  call void @llvm.dbg.value(metadata i32 %1, metadata !6583, metadata !DIExpression()), !dbg !6584
  %3 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 4, !dbg !6585
  store i32 %1, i32* %3, align 4, !dbg !6586, !tbaa !2370
  ret void, !dbg !6587
}

; Function Attrs: mustprogress noinline noreturn nounwind
define dso_local void @_ZN6Cicada9Scheduler5startEv(%"class.Cicada::Scheduler"* nocapture noundef nonnull align 4 dereferenceable(12) %0) local_unnamed_addr #29 align 2 !dbg !6588 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Scheduler"* %0, metadata !6590, metadata !DIExpression()), !dbg !6591
  br label %2, !dbg !6592

2:                                                ; preds = %2, %1
  call void @_ZN6Cicada9Scheduler7runTaskEv(%"class.Cicada::Scheduler"* noundef nonnull align 4 dereferenceable(12) %0), !dbg !6593
  br label %2, !dbg !6596, !llvm.loop !6597
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i32 @_Z13eTickFunctionv() #5 !dbg !6600 {
  %1 = call i32 @HAL_GetTick() #33, !dbg !6601
  ret i32 %1, !dbg !6602
}

; Function Attrs: noinline nounwind
define dso_local noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD2Ev(%"class.Cicada::Stm32Uart"* noundef nonnull returned align 8 dereferenceable(192) %0) unnamed_addr #4 align 2 !dbg !6603 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6605, metadata !DIExpression()), !dbg !6606
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6607
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %2, align 8, !dbg !6607, !tbaa !2323
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !6607
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %3, align 4, !dbg !6607, !tbaa !2323
  %4 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !6608
  %5 = load i8, i8* %4, align 8, !dbg !6608, !tbaa !6611
  %6 = and i8 %5, 1, !dbg !6618
  %7 = icmp eq i8 %6, 0, !dbg !6608
  br i1 %7, label %13, label %8, !dbg !6619

8:                                                ; preds = %1
  %9 = bitcast %"class.Cicada::Stm32Uart"* %0 to void (%"class.Cicada::Stm32Uart"*)***, !dbg !6620
  %10 = load void (%"class.Cicada::Stm32Uart"*)**, void (%"class.Cicada::Stm32Uart"*)*** %9, align 8, !dbg !6620, !tbaa !2323
  %11 = getelementptr inbounds void (%"class.Cicada::Stm32Uart"*)*, void (%"class.Cicada::Stm32Uart"*)** %10, i32 19, !dbg !6620
  %12 = load void (%"class.Cicada::Stm32Uart"*)*, void (%"class.Cicada::Stm32Uart"*)** %11, align 4, !dbg !6620
  call void %12(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) #33, !dbg !6620
  br label %13, !dbg !6620

13:                                               ; preds = %8, %1
  %14 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, !dbg !6621
  %15 = call noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialD2Ev(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %14) #33, !dbg !6621
  ret %"class.Cicada::Stm32Uart"* %0, !dbg !6622
}

; Function Attrs: noinline nounwind
define dso_local void @_ZN6Cicada9Stm32UartD0Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #4 align 2 !dbg !6623 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6625, metadata !DIExpression()), !dbg !6626
  %2 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD2Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) #33, !dbg !6627
  %3 = bitcast %"class.Cicada::Stm32Uart"* %0 to i8*, !dbg !6627
  call void @_ZdlPv(i8* noundef %3) #34, !dbg !6627
  ret void, !dbg !6628
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZNK6Cicada9Stm32Uart20writeBufferProcessedEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #5 align 2 !dbg !6629 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6631, metadata !DIExpression()), !dbg !6633
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 2, !dbg !6634
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer.0"*, !dbg !6634
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !6635
  %5 = icmp eq i64 %4, 0, !dbg !6636
  br i1 %5, label %6, label %13, !dbg !6637

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !6638
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !6638, !tbaa !6639
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 0, !dbg !6638
  %10 = load volatile i32, i32* %9, align 4, !dbg !6638, !tbaa !6640
  %11 = and i32 %10, 64, !dbg !6638
  %12 = icmp ne i32 %11, 0, !dbg !6638
  br label %13

13:                                               ; preds = %6, %1
  %14 = phi i1 [ false, %1 ], [ %12, %6 ], !dbg !6633
  ret i1 %14, !dbg !6642
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #5 align 2 !dbg !6643 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6645, metadata !DIExpression()), !dbg !6646
  %2 = bitcast %"class.Cicada::Stm32Uart"* %0 to i1 (%"class.Cicada::Stm32Uart"*, i8)***, !dbg !6647
  %3 = load i1 (%"class.Cicada::Stm32Uart"*, i8)**, i1 (%"class.Cicada::Stm32Uart"*, i8)*** %2, align 8, !dbg !6647, !tbaa !2323
  %4 = getelementptr inbounds i1 (%"class.Cicada::Stm32Uart"*, i8)*, i1 (%"class.Cicada::Stm32Uart"*, i8)** %3, i32 16, !dbg !6647
  %5 = load i1 (%"class.Cicada::Stm32Uart"*, i8)*, i1 (%"class.Cicada::Stm32Uart"*, i8)** %4, align 4, !dbg !6647
  %6 = call noundef zeroext i1 %5(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, i8 noundef zeroext 15) #33, !dbg !6647
  ret i1 %6, !dbg !6648
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEh(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, i8 noundef zeroext %1) unnamed_addr #5 align 2 !dbg !6649 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.DMA_Channel_TypeDef, align 4
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6651, metadata !DIExpression()), !dbg !6695
  call void @llvm.dbg.value(metadata i8 %1, metadata !6652, metadata !DIExpression()), !dbg !6695
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, !dbg !6696
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %12, i32 0, i32 0, !dbg !6697
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %13, align 4, !dbg !6697, !tbaa !6639
  %15 = ptrtoint %struct.USART_TypeDef* %14 to i32, !dbg !6698
  switch i32 %15, label %123 [
    i32 1073821696, label %16
    i32 1073759232, label %26
    i32 1073760256, label %34
  ], !dbg !6698

16:                                               ; preds = %2
  %17 = load volatile i32, i32* inttoptr (i32 1073807364 to i32*), align 4, !dbg !6699, !tbaa !6700
  call void @llvm.dbg.value(metadata i32 %17, metadata !6653, metadata !DIExpression()), !dbg !6702
  call void @llvm.dbg.value(metadata i32 %17, metadata !6653, metadata !DIExpression(DW_OP_constu, 117440512, DW_OP_or, DW_OP_stack_value)), !dbg !6702
  %18 = or i32 %17, 117440516, !dbg !6699
  call void @llvm.dbg.value(metadata i32 %18, metadata !6653, metadata !DIExpression()), !dbg !6702
  store volatile i32 %18, i32* inttoptr (i32 1073807364 to i32*), align 4, !dbg !6699, !tbaa !6700
  %19 = bitcast i32* %3 to i8*, !dbg !6703
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19), !dbg !6703
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6657, metadata !DIExpression()), !dbg !6703
  %20 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6703, !tbaa !6704
  %21 = or i32 %20, 16384, !dbg !6703
  store volatile i32 %21, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6703, !tbaa !6704
  %22 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6703, !tbaa !6704
  %23 = and i32 %22, 16384, !dbg !6703
  store volatile i32 %23, i32* %3, align 4, !dbg !6703, !tbaa !2397
  %24 = load volatile i32, i32* %3, align 4, !dbg !6703, !tbaa !2397
  %25 = bitcast i32* %3 to i8*, !dbg !6706
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25), !dbg !6706
  br label %42, !dbg !6707

26:                                               ; preds = %2
  %27 = bitcast i32* %4 to i8*, !dbg !6708
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27), !dbg !6708
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6659, metadata !DIExpression()), !dbg !6708
  %28 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !6708, !tbaa !6709
  %29 = or i32 %28, 131072, !dbg !6708
  store volatile i32 %29, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !6708, !tbaa !6709
  %30 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !6708, !tbaa !6709
  %31 = and i32 %30, 131072, !dbg !6708
  store volatile i32 %31, i32* %4, align 4, !dbg !6708, !tbaa !2397
  %32 = load volatile i32, i32* %4, align 4, !dbg !6708, !tbaa !2397
  %33 = bitcast i32* %4 to i8*, !dbg !6710
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33), !dbg !6710
  br label %42, !dbg !6711

34:                                               ; preds = %2
  %35 = bitcast i32* %5 to i8*, !dbg !6712
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35), !dbg !6712
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6663, metadata !DIExpression()), !dbg !6712
  %36 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !6712, !tbaa !6709
  %37 = or i32 %36, 262144, !dbg !6712
  store volatile i32 %37, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !6712, !tbaa !6709
  %38 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !6712, !tbaa !6709
  %39 = and i32 %38, 262144, !dbg !6712
  store volatile i32 %39, i32* %5, align 4, !dbg !6712, !tbaa !2397
  %40 = load volatile i32, i32* %5, align 4, !dbg !6712, !tbaa !2397
  %41 = bitcast i32* %5 to i8*, !dbg !6713
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41), !dbg !6713
  br label %42

42:                                               ; preds = %26, %34, %16
  %43 = phi i32 [ 38, %26 ], [ 39, %34 ], [ 37, %16 ]
  %44 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !6714
  store i32 %43, i32* %44, align 4, !dbg !6714, !tbaa !6715
  %45 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 3, !dbg !6716
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %45, align 4, !dbg !6716, !tbaa !6717
  %47 = ptrtoint %struct.USART_TypeDef* %46 to i32, !dbg !6718
  %48 = add i32 %47, -1073809408, !dbg !6718
  %49 = call i32 @llvm.fshl.i32(i32 %48, i32 %48, i32 22), !dbg !6718
  switch i32 %49, label %90 [
    i32 0, label %50
    i32 1, label %58
    i32 2, label %66
    i32 3, label %74
    i32 4, label %82
  ], !dbg !6718

50:                                               ; preds = %42
  %51 = bitcast i32* %6 to i8*, !dbg !6719
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51), !dbg !6719
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6667, metadata !DIExpression()), !dbg !6719
  %52 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6719, !tbaa !6704
  %53 = or i32 %52, 4, !dbg !6719
  store volatile i32 %53, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6719, !tbaa !6704
  %54 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6719, !tbaa !6704
  %55 = and i32 %54, 4, !dbg !6719
  store volatile i32 %55, i32* %6, align 4, !dbg !6719, !tbaa !2397
  %56 = load volatile i32, i32* %6, align 4, !dbg !6719, !tbaa !2397
  %57 = bitcast i32* %6 to i8*, !dbg !6720
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57), !dbg !6720
  br label %90, !dbg !6721

58:                                               ; preds = %42
  %59 = bitcast i32* %7 to i8*, !dbg !6722
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59), !dbg !6722
  call void @llvm.dbg.declare(metadata i32* %7, metadata !6671, metadata !DIExpression()), !dbg !6722
  %60 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6722, !tbaa !6704
  %61 = or i32 %60, 8, !dbg !6722
  store volatile i32 %61, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6722, !tbaa !6704
  %62 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6722, !tbaa !6704
  %63 = and i32 %62, 8, !dbg !6722
  store volatile i32 %63, i32* %7, align 4, !dbg !6722, !tbaa !2397
  %64 = load volatile i32, i32* %7, align 4, !dbg !6722, !tbaa !2397
  %65 = bitcast i32* %7 to i8*, !dbg !6723
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65), !dbg !6723
  br label %90, !dbg !6724

66:                                               ; preds = %42
  %67 = bitcast i32* %8 to i8*, !dbg !6725
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67), !dbg !6725
  call void @llvm.dbg.declare(metadata i32* %8, metadata !6675, metadata !DIExpression()), !dbg !6725
  %68 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6725, !tbaa !6704
  %69 = or i32 %68, 16, !dbg !6725
  store volatile i32 %69, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6725, !tbaa !6704
  %70 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6725, !tbaa !6704
  %71 = and i32 %70, 16, !dbg !6725
  store volatile i32 %71, i32* %8, align 4, !dbg !6725, !tbaa !2397
  %72 = load volatile i32, i32* %8, align 4, !dbg !6725, !tbaa !2397
  %73 = bitcast i32* %8 to i8*, !dbg !6726
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73), !dbg !6726
  br label %90, !dbg !6727

74:                                               ; preds = %42
  %75 = bitcast i32* %9 to i8*, !dbg !6728
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75), !dbg !6728
  call void @llvm.dbg.declare(metadata i32* %9, metadata !6679, metadata !DIExpression()), !dbg !6728
  %76 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6728, !tbaa !6704
  %77 = or i32 %76, 32, !dbg !6728
  store volatile i32 %77, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6728, !tbaa !6704
  %78 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6728, !tbaa !6704
  %79 = and i32 %78, 32, !dbg !6728
  store volatile i32 %79, i32* %9, align 4, !dbg !6728, !tbaa !2397
  %80 = load volatile i32, i32* %9, align 4, !dbg !6728, !tbaa !2397
  %81 = bitcast i32* %9 to i8*, !dbg !6729
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %81), !dbg !6729
  br label %90, !dbg !6730

82:                                               ; preds = %42
  %83 = bitcast i32* %10 to i8*, !dbg !6731
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83), !dbg !6731
  call void @llvm.dbg.declare(metadata i32* %10, metadata !6683, metadata !DIExpression()), !dbg !6731
  %84 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6731, !tbaa !6704
  %85 = or i32 %84, 64, !dbg !6731
  store volatile i32 %85, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6731, !tbaa !6704
  %86 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6731, !tbaa !6704
  %87 = and i32 %86, 64, !dbg !6731
  store volatile i32 %87, i32* %10, align 4, !dbg !6731, !tbaa !2397
  %88 = load volatile i32, i32* %10, align 4, !dbg !6731, !tbaa !2397
  %89 = bitcast i32* %10 to i8*, !dbg !6732
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89), !dbg !6732
  br label %90, !dbg !6733

90:                                               ; preds = %42, %58, %74, %82, %66, %50
  %91 = bitcast %struct.DMA_Channel_TypeDef* %11 to i8*, !dbg !6734
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #33, !dbg !6734
  call void @llvm.dbg.declare(metadata %struct.DMA_Channel_TypeDef* %11, metadata !6687, metadata !DIExpression()), !dbg !6735
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(16) %91, i8 0, i32 16, i1 false), !dbg !6735
  %92 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 4, !dbg !6736
  %93 = load i16, i16* %92, align 8, !dbg !6736, !tbaa !6737
  %94 = zext i16 %93 to i32, !dbg !6736
  %95 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %11, i32 0, i32 0, !dbg !6738
  store i32 %94, i32* %95, align 4, !dbg !6739, !tbaa !6740
  %96 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %11, i32 0, i32 1, !dbg !6742
  store i32 2, i32* %96, align 4, !dbg !6743, !tbaa !6744
  %97 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %11, i32 0, i32 2, !dbg !6745
  store i32 0, i32* %97, align 4, !dbg !6746, !tbaa !6747
  %98 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %11, i32 0, i32 3, !dbg !6748
  store i32 3, i32* %98, align 4, !dbg !6749, !tbaa !6750
  call void @HAL_GPIO_Init(%struct.USART_TypeDef* noundef %46, %struct.DMA_Channel_TypeDef* noundef nonnull %11) #33, !dbg !6751
  %99 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 5, !dbg !6752
  %100 = load i16, i16* %99, align 2, !dbg !6752, !tbaa !6753
  %101 = zext i16 %100 to i32, !dbg !6752
  store i32 %101, i32* %95, align 4, !dbg !6754, !tbaa !6740
  store i32 0, i32* %96, align 4, !dbg !6755, !tbaa !6744
  %102 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %45, align 4, !dbg !6756, !tbaa !6717
  call void @HAL_GPIO_Init(%struct.USART_TypeDef* noundef %102, %struct.DMA_Channel_TypeDef* noundef nonnull %11) #33, !dbg !6757
  %103 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 2, !dbg !6758
  store i32 0, i32* %103, align 8, !dbg !6759, !tbaa !6760
  %104 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 3, !dbg !6761
  store i32 0, i32* %104, align 4, !dbg !6762, !tbaa !6763
  %105 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 4, !dbg !6764
  store i32 12, i32* %105, align 8, !dbg !6765, !tbaa !6766
  %106 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 5, !dbg !6767
  store i32 0, i32* %106, align 4, !dbg !6768, !tbaa !6769
  %107 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 6, !dbg !6770
  store i32 0, i32* %107, align 8, !dbg !6771, !tbaa !6772
  %108 = call i32 @HAL_UART_Init(%struct.__UART_HandleTypeDef* noundef nonnull %12) #33, !dbg !6773
  %109 = icmp eq i32 %108, 0, !dbg !6775
  br i1 %109, label %110, label %122, !dbg !6776

110:                                              ; preds = %90
  %111 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !6777
  %112 = load i32, i32* %111, align 4, !dbg !6777, !tbaa !6715
  %113 = zext i8 %1 to i32, !dbg !6778
  call fastcc void @_ZL18__NVIC_SetPriority9IRQn_Typej(i32 noundef %112, i32 noundef %113), !dbg !6779
  %114 = load i32, i32* %111, align 4, !dbg !6780, !tbaa !6715
  call fastcc void @_ZL16__NVIC_EnableIRQ9IRQn_Type(i32 noundef %114), !dbg !6781
  %115 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %13, align 4, !dbg !6782, !tbaa !6639
  %116 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %115, i32 0, i32 3, !dbg !6782
  %117 = load volatile i32, i32* %116, align 4, !dbg !6782, !tbaa !6783
  %118 = or i32 %117, 32, !dbg !6782
  store volatile i32 %118, i32* %116, align 4, !dbg !6782, !tbaa !6783
  %119 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !6784
  %120 = load i8, i8* %119, align 8, !dbg !6785, !tbaa !6611
  %121 = or i8 %120, 1, !dbg !6785
  store i8 %121, i8* %119, align 8, !dbg !6785, !tbaa !6611
  br label %122, !dbg !6786

122:                                              ; preds = %90, %110
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #33, !dbg !6787
  br label %123

123:                                              ; preds = %2, %122
  %124 = phi i1 [ %109, %122 ], [ false, %2 ], !dbg !6695
  ret i1 %124, !dbg !6787
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart6isOpenEv(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull readonly align 8 dereferenceable(192) %0) unnamed_addr #17 align 2 !dbg !6788 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6790, metadata !DIExpression()), !dbg !6791
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !6792
  %3 = load i8, i8* %2, align 8, !dbg !6792, !tbaa !6611
  %4 = and i8 %3, 1, !dbg !6793
  %5 = icmp ne i8 %4, 0, !dbg !6792
  ret i1 %5, !dbg !6794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart15setSerialConfigEjh(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull writeonly align 8 dereferenceable(192) %0, i32 noundef %1, i8 noundef zeroext %2) unnamed_addr #12 align 2 !dbg !6795 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6797, metadata !DIExpression()), !dbg !6800
  call void @llvm.dbg.value(metadata i32 %1, metadata !6798, metadata !DIExpression()), !dbg !6800
  call void @llvm.dbg.value(metadata i8 %2, metadata !6799, metadata !DIExpression()), !dbg !6800
  %4 = add i32 %1, -4500001, !dbg !6801
  %5 = icmp ult i32 %4, -4499951, !dbg !6801
  br i1 %5, label %12, label %6, !dbg !6801

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 0, !dbg !6803
  store i32 %1, i32* %7, align 8, !dbg !6804, !tbaa !6805
  switch i8 %2, label %12 [
    i8 8, label %9
    i8 9, label %8
  ], !dbg !6806

8:                                                ; preds = %6
  br label %9, !dbg !6807

9:                                                ; preds = %6, %8
  %10 = phi i32 [ 4096, %8 ], [ 0, %6 ]
  %11 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 1, !dbg !6809
  store i32 %10, i32* %11, align 4, !dbg !6809, !tbaa !6810
  br label %12, !dbg !6811

12:                                               ; preds = %9, %6, %3
  %13 = phi i1 [ false, %3 ], [ false, %6 ], [ true, %9 ], !dbg !6800
  ret i1 %13, !dbg !6811
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada9Stm32Uart5closeEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #5 align 2 !dbg !6812 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6814, metadata !DIExpression()), !dbg !6815
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !6816
  %3 = load i32, i32* %2, align 4, !dbg !6816, !tbaa !6715
  call fastcc void @_ZL17__NVIC_DisableIRQ9IRQn_Type(i32 noundef %3), !dbg !6817
  %4 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, !dbg !6818
  %5 = call i32 @HAL_UART_DeInit(%struct.__UART_HandleTypeDef* noundef nonnull %4) #33, !dbg !6819
  %6 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 3, !dbg !6820
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !6820, !tbaa !6717
  %8 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 4, !dbg !6821
  %9 = load i16, i16* %8, align 8, !dbg !6821, !tbaa !6737
  %10 = zext i16 %9 to i32, !dbg !6821
  call void @HAL_GPIO_DeInit(%struct.USART_TypeDef* noundef %7, i32 noundef %10) #33, !dbg !6822
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !6823, !tbaa !6717
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 5, !dbg !6824
  %13 = load i16, i16* %12, align 2, !dbg !6824, !tbaa !6753
  %14 = zext i16 %13 to i32, !dbg !6824
  call void @HAL_GPIO_DeInit(%struct.USART_TypeDef* noundef %11, i32 noundef %14) #33, !dbg !6825
  %15 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !6826
  %16 = load i8, i8* %15, align 8, !dbg !6827, !tbaa !6611
  %17 = and i8 %16, -2, !dbg !6827
  store i8 %17, i8* %15, align 8, !dbg !6827, !tbaa !6611
  ret void, !dbg !6828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define dso_local noalias noundef i8* @_ZNK6Cicada9Stm32Uart8portNameEv(%"class.Cicada::Stm32Uart"* nocapture nonnull readnone align 8 %0) unnamed_addr #11 align 2 !dbg !6829 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* undef, metadata !6831, metadata !DIExpression()), !dbg !6832
  ret i8* null, !dbg !6833
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart7rawReadERh(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull readonly align 8 dereferenceable(192) %0, i8* nocapture noundef nonnull writeonly align 1 dereferenceable(1) %1) unnamed_addr #16 align 2 !dbg !6834 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6836, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.value(metadata i8* %1, metadata !6837, metadata !DIExpression()), !dbg !6838
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !6839
  %4 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %3, align 4, !dbg !6839, !tbaa !6639
  %5 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %4, i32 0, i32 0, !dbg !6839
  %6 = load volatile i32, i32* %5, align 4, !dbg !6839, !tbaa !6640
  %7 = and i32 %6, 32, !dbg !6839
  %8 = icmp eq i32 %7, 0, !dbg !6839
  br i1 %8, label %9, label %13, !dbg !6841

9:                                                ; preds = %2
  %10 = load volatile i32, i32* %5, align 4, !dbg !6842, !tbaa !6640
  %11 = and i32 %10, 8, !dbg !6842
  %12 = icmp eq i32 %11, 0, !dbg !6842
  br i1 %12, label %17, label %13, !dbg !6843

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %4, i32 0, i32 1, !dbg !6844
  %15 = load volatile i32, i32* %14, align 4, !dbg !6844, !tbaa !6846
  %16 = trunc i32 %15 to i8, !dbg !6844
  store i8 %16, i8* %1, align 1, !dbg !6847, !tbaa !2380
  br label %17, !dbg !6848

17:                                               ; preds = %9, %13
  %18 = phi i1 [ true, %13 ], [ false, %9 ], !dbg !6838
  ret i1 %18, !dbg !6849
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart8rawWriteEh(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull readonly align 8 dereferenceable(192) %0, i8 noundef zeroext %1) unnamed_addr #30 align 2 !dbg !6850 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6852, metadata !DIExpression()), !dbg !6854
  call void @llvm.dbg.value(metadata i8 %1, metadata !6853, metadata !DIExpression()), !dbg !6854
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !6855
  %4 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %3, align 4, !dbg !6855, !tbaa !6639
  %5 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %4, i32 0, i32 0, !dbg !6855
  %6 = load volatile i32, i32* %5, align 4, !dbg !6855, !tbaa !6640
  %7 = and i32 %6, 128, !dbg !6855
  %8 = icmp eq i32 %7, 0, !dbg !6855
  br i1 %8, label %12, label %9, !dbg !6857

9:                                                ; preds = %2
  %10 = zext i8 %1 to i32, !dbg !6858
  %11 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %4, i32 0, i32 1, !dbg !6858
  store volatile i32 %10, i32* %11, align 4, !dbg !6858, !tbaa !6846
  br label %12, !dbg !6860

12:                                               ; preds = %2, %9
  %13 = xor i1 %8, true, !dbg !6861
  ret i1 %13, !dbg !6861
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind
define dso_local void @_ZN6Cicada9Stm32Uart13startTransmitEv(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull readonly align 8 dereferenceable(192) %0) unnamed_addr #30 align 2 !dbg !6862 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6864, metadata !DIExpression()), !dbg !6865
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !6866
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6866, !tbaa !6639
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !6866
  %5 = load volatile i32, i32* %4, align 4, !dbg !6866, !tbaa !6783
  %6 = or i32 %5, 128, !dbg !6866
  store volatile i32 %6, i32* %4, align 4, !dbg !6866, !tbaa !6783
  ret void, !dbg !6867
}

; Function Attrs: noinline nounwind
define dso_local noalias noundef %"class.Cicada::Stm32Uart"* @_ZThn4_N6Cicada9Stm32UartD1Ev(%"class.Cicada::Stm32Uart"* noundef %0) unnamed_addr #4 align 2 !dbg !6868 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6869
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !6869
  %4 = tail call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD2Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3) #33, !dbg !6869
  ret %"class.Cicada::Stm32Uart"* undef, !dbg !6869
}

; Function Attrs: noinline nounwind
define dso_local void @_ZThn4_N6Cicada9Stm32UartD0Ev(%"class.Cicada::Stm32Uart"* noundef %0) unnamed_addr #4 align 2 !dbg !6870 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6871
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !6871
  tail call void @_ZN6Cicada9Stm32UartD0Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3) #33, !dbg !6871
  ret void, !dbg !6871
}

; Function Attrs: noinline nounwind
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef %0) unnamed_addr #4 align 2 !dbg !6872 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6873
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !6873
  %4 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3), !dbg !6873
  ret i1 %4, !dbg !6873
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart6isOpenEv(%"class.Cicada::Stm32Uart"* nocapture noundef readonly %0) unnamed_addr #17 align 2 !dbg !6874 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6875
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !6875
  %4 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart6isOpenEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3), !dbg !6875
  ret i1 %4, !dbg !6875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart15setSerialConfigEjh(%"class.Cicada::Stm32Uart"* nocapture noundef writeonly %0, i32 noundef %1, i8 noundef zeroext %2) unnamed_addr #12 align 2 !dbg !6876 {
  %4 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6877
  %5 = bitcast i32* %4 to %"class.Cicada::Stm32Uart"*, !dbg !6877
  %6 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart15setSerialConfigEjh(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %5, i32 noundef %1, i8 noundef zeroext %2), !dbg !6877
  ret i1 %6, !dbg !6877
}

; Function Attrs: noinline nounwind
define dso_local void @_ZThn4_N6Cicada9Stm32Uart5closeEv(%"class.Cicada::Stm32Uart"* noundef %0) unnamed_addr #4 align 2 !dbg !6878 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6879
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !6879
  tail call void @_ZN6Cicada9Stm32Uart5closeEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3), !dbg !6879
  ret void, !dbg !6879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define dso_local noalias noundef i8* @_ZThn4_NK6Cicada9Stm32Uart8portNameEv(%"class.Cicada::Stm32Uart"* nocapture noundef readnone %0) unnamed_addr #11 align 2 !dbg !6880 {
  ret i8* null, !dbg !6881
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart7rawReadERh(%"class.Cicada::Stm32Uart"* nocapture noundef readonly %0, i8* nocapture noundef nonnull writeonly align 1 dereferenceable(1) %1) unnamed_addr #16 align 2 !dbg !6882 {
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6883
  %4 = bitcast i32* %3 to %"class.Cicada::Stm32Uart"*, !dbg !6883
  %5 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart7rawReadERh(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %4, i8* noundef nonnull align 1 dereferenceable(1) %1), !dbg !6883
  ret i1 %5, !dbg !6883
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart8rawWriteEh(%"class.Cicada::Stm32Uart"* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 align 2 !dbg !6884 {
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6885
  %4 = bitcast i32* %3 to %"class.Cicada::Stm32Uart"*, !dbg !6885
  %5 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart8rawWriteEh(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %4, i8 noundef zeroext %1), !dbg !6885
  ret i1 %5, !dbg !6885
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @_ZThn4_N6Cicada9Stm32Uart13startTransmitEv(%"class.Cicada::Stm32Uart"* nocapture noundef readonly %0) unnamed_addr #15 align 2 !dbg !6886 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6887
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !6887
  tail call void @_ZN6Cicada9Stm32Uart13startTransmitEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3), !dbg !6887
  ret void, !dbg !6887
}

; Function Attrs: mustprogress noinline nounwind
define internal fastcc void @_ZL17__NVIC_DisableIRQ9IRQn_Type(i32 noundef %0) unnamed_addr #5 !dbg !6888 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6892, metadata !DIExpression()), !dbg !6893
  %2 = icmp sgt i32 %0, -1, !dbg !6894
  br i1 %2, label %3, label %8, !dbg !6896

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6897
  %5 = shl i32 1, %4, !dbg !6899
  %6 = lshr i32 %0, 5, !dbg !6900
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6901
  store volatile i32 %5, i32* %7, align 4, !dbg !6902, !tbaa !2397
  call void asm sideeffect "dsb 0xF", "~{memory}"() #33, !dbg !6903, !srcloc !6906
  call void asm sideeffect "isb 0xF", "~{memory}"() #33, !dbg !6907, !srcloc !6910
  br label %8, !dbg !6911

8:                                                ; preds = %3, %1
  ret void, !dbg !6912
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind
define internal fastcc void @_ZL18__NVIC_SetPriority9IRQn_Typej(i32 noundef %0, i32 noundef %1) unnamed_addr #30 !dbg !6913 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6917, metadata !DIExpression()), !dbg !6919
  call void @llvm.dbg.value(metadata i32 %1, metadata !6918, metadata !DIExpression()), !dbg !6919
  %3 = trunc i32 %1 to i8, !dbg !6920
  %4 = shl i8 %3, 4, !dbg !6920
  %5 = and i32 %0, 15, !dbg !6922
  %6 = add nsw i32 %5, -4, !dbg !6922
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6922
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6922
  %9 = icmp slt i32 %0, 0, !dbg !6922
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6922
  store volatile i8 %4, i8* %10, align 1, !dbg !6920, !tbaa !2380
  ret void, !dbg !6923
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind
define internal fastcc void @_ZL16__NVIC_EnableIRQ9IRQn_Type(i32 noundef %0) unnamed_addr #30 !dbg !6924 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6926, metadata !DIExpression()), !dbg !6927
  %2 = icmp sgt i32 %0, -1, !dbg !6928
  br i1 %2, label %3, label %8, !dbg !6930

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6931
  %5 = shl i32 1, %4, !dbg !6933
  %6 = lshr i32 %0, 5, !dbg !6934
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6935
  store volatile i32 %5, i32* %7, align 4, !dbg !6936, !tbaa !2397
  br label %8, !dbg !6937

8:                                                ; preds = %3, %1
  ret void, !dbg !6938
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #5 comdat align 2 !dbg !6939 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !6941, metadata !DIExpression()), !dbg !6943
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !6944
  %3 = load i64, i64* %2, align 8, !dbg !6944, !tbaa !6945
  ret i64 %3, !dbg !6947
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialD2Ev(%"class.Cicada::BufferedSerial"* noundef nonnull returned align 8 dereferenceable(104) %0) unnamed_addr #4 comdat align 2 !dbg !6948 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !6954, metadata !DIExpression()), !dbg !6956
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !6957
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer.0"*, !dbg !6957
  %4 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(46) %3) #33, !dbg !6957
  %5 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !6957
  %6 = bitcast %"class.Cicada::LineCircularBuffer"* %5 to %"class.Cicada::CircularBuffer.0"*, !dbg !6957
  %7 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(46) %6) #33, !dbg !6957
  %8 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, !dbg !6957
  %9 = call noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialD2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %8) #33, !dbg !6957
  ret %"class.Cicada::BufferedSerial"* %0, !dbg !6959
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull returned align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !6960 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !6962, metadata !DIExpression()), !dbg !6964
  ret %"class.Cicada::CircularBuffer.0"* %0, !dbg !6965
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialD2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull returned align 4 dereferenceable(8) %0) unnamed_addr #4 comdat align 2 !dbg !6966 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %0, metadata !6968, metadata !DIExpression()), !dbg !6970
  %2 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 1, !dbg !6971
  %3 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada7ISerialD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %2) #33, !dbg !6971
  %4 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 0, !dbg !6971
  %5 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %4) #33, !dbg !6971
  ret %"class.Cicada::IBufferedSerial"* %0, !dbg !6973
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada7ISerialD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #4 comdat align 2 !dbg !6974 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !6976, metadata !DIExpression()), !dbg !6978
  ret %"class.Cicada::ICommDevice"* %0, !dbg !6979
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartC2EPcS1_yyP13USART_TypeDefP12GPIO_TypeDeftt(%"class.Cicada::Stm32Uart"* noundef nonnull returned align 8 dereferenceable(192) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4, %struct.USART_TypeDef* noundef %5, %struct.USART_TypeDef* noundef %6, i16 noundef zeroext %7, i16 noundef zeroext %8) unnamed_addr #4 align 2 !dbg !6980 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6982, metadata !DIExpression()), !dbg !6991
  call void @llvm.dbg.value(metadata i8* %1, metadata !6983, metadata !DIExpression()), !dbg !6991
  call void @llvm.dbg.value(metadata i8* %2, metadata !6984, metadata !DIExpression()), !dbg !6991
  call void @llvm.dbg.value(metadata i64 %3, metadata !6985, metadata !DIExpression()), !dbg !6991
  call void @llvm.dbg.value(metadata i64 %4, metadata !6986, metadata !DIExpression()), !dbg !6991
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %5, metadata !6987, metadata !DIExpression()), !dbg !6991
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %6, metadata !6988, metadata !DIExpression()), !dbg !6991
  call void @llvm.dbg.value(metadata i16 %7, metadata !6989, metadata !DIExpression()), !dbg !6991
  call void @llvm.dbg.value(metadata i16 %8, metadata !6990, metadata !DIExpression()), !dbg !6991
  %10 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, !dbg !6992
  %11 = call noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialC2EPcS1_yy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %10, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4) #33, !dbg !6993
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6992
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %12, align 8, !dbg !6992, !tbaa !2323
  %13 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !6992
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %13, align 4, !dbg !6992, !tbaa !2323
  %14 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !6994
  store i8 0, i8* %14, align 8, !dbg !6994, !tbaa !6611
  %15 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, !dbg !6995
  %16 = bitcast %struct.__UART_HandleTypeDef* %15 to i8*, !dbg !6995
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(72) %16, i8 0, i32 72, i1 false), !dbg !6995
  %17 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 3, !dbg !6996
  store %struct.USART_TypeDef* %6, %struct.USART_TypeDef** %17, align 4, !dbg !6996, !tbaa !6717
  %18 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 4, !dbg !6997
  store i16 %7, i16* %18, align 8, !dbg !6997, !tbaa !6737
  %19 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 5, !dbg !6998
  store i16 %8, i16* %19, align 2, !dbg !6998, !tbaa !6753
  %20 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !6999
  store i32 0, i32* %20, align 4, !dbg !6999, !tbaa !6715
  call void @_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, %struct.USART_TypeDef* noundef %5), !dbg !7000
  ret %"class.Cicada::Stm32Uart"* %0, !dbg !7002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind
define dso_local void @_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, %struct.USART_TypeDef* noundef %1) local_unnamed_addr #31 align 2 !dbg !7003 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !7005, metadata !DIExpression()), !dbg !7009
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %1, metadata !7006, metadata !DIExpression()), !dbg !7009
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !7010
  store %struct.USART_TypeDef* %1, %struct.USART_TypeDef** %3, align 4, !dbg !7011, !tbaa !6639
  %4 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 0, !dbg !7012
  store i32 115200, i32* %4, align 8, !dbg !7013, !tbaa !6805
  %5 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 1, !dbg !7014
  store i32 0, i32* %5, align 4, !dbg !7015, !tbaa !6810
  call void @llvm.dbg.value(metadata i32 0, metadata !7007, metadata !DIExpression()), !dbg !7016
  br label %9, !dbg !7017

6:                                                ; preds = %9
  %7 = add nuw nsw i32 %10, 1, !dbg !7018
  call void @llvm.dbg.value(metadata i32 %7, metadata !7007, metadata !DIExpression()), !dbg !7016
  call void @llvm.dbg.value(metadata i32 %10, metadata !7007, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7016
  %8 = icmp eq i32 %7, 4, !dbg !7020
  br i1 %8, label %15, label %9, !dbg !7017, !llvm.loop !7021

9:                                                ; preds = %2, %6
  %10 = phi i32 [ 0, %2 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !7007, metadata !DIExpression()), !dbg !7016
  %11 = getelementptr inbounds [4 x %"class.Cicada::Stm32Uart"*], [4 x %"class.Cicada::Stm32Uart"*]* @_ZN6Cicada9Stm32Uart8instanceE, i32 0, i32 %10, !dbg !7023
  %12 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** %11, align 4, !dbg !7023, !tbaa !2231
  %13 = icmp eq %"class.Cicada::Stm32Uart"* %12, null, !dbg !7026
  call void @llvm.dbg.value(metadata i32 %10, metadata !7007, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7016
  br i1 %13, label %14, label %6, !dbg !7027

14:                                               ; preds = %9
  store %"class.Cicada::Stm32Uart"* %0, %"class.Cicada::Stm32Uart"** %11, align 4, !dbg !7028, !tbaa !2231
  br label %15, !dbg !7030

15:                                               ; preds = %6, %14
  ret void, !dbg !7031
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartC2EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt(%"class.Cicada::Stm32Uart"* noundef nonnull returned align 8 dereferenceable(192) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, %struct.USART_TypeDef* noundef %4, %struct.USART_TypeDef* noundef %5, i16 noundef zeroext %6, i16 noundef zeroext %7) unnamed_addr #4 align 2 !dbg !7032 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !7034, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.value(metadata i8* %1, metadata !7035, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.value(metadata i8* %2, metadata !7036, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.value(metadata i64 %3, metadata !7037, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %4, metadata !7038, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %5, metadata !7039, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.value(metadata i16 %6, metadata !7040, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.value(metadata i16 %7, metadata !7041, metadata !DIExpression()), !dbg !7042
  %9 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, !dbg !7043
  %10 = call noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialC2EPcS1_y(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %9, i8* noundef %1, i8* noundef %2, i64 noundef %3) #33, !dbg !7044
  %11 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7043
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %11, align 8, !dbg !7043, !tbaa !2323
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !7043
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %12, align 4, !dbg !7043, !tbaa !2323
  %13 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !7045
  store i8 0, i8* %13, align 8, !dbg !7045, !tbaa !6611
  %14 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, !dbg !7046
  %15 = bitcast %struct.__UART_HandleTypeDef* %14 to i8*, !dbg !7046
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(72) %15, i8 0, i32 72, i1 false), !dbg !7046
  %16 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 3, !dbg !7047
  store %struct.USART_TypeDef* %5, %struct.USART_TypeDef** %16, align 4, !dbg !7047, !tbaa !6717
  %17 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 4, !dbg !7048
  store i16 %6, i16* %17, align 8, !dbg !7048, !tbaa !6737
  %18 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 5, !dbg !7049
  store i16 %7, i16* %18, align 2, !dbg !7049, !tbaa !6753
  %19 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !7050
  store i32 0, i32* %19, align 4, !dbg !7050, !tbaa !6715
  call void @_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, %struct.USART_TypeDef* noundef %4), !dbg !7051
  ret %"class.Cicada::Stm32Uart"* %0, !dbg !7053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef(%struct.USART_TypeDef* noundef readnone %0) local_unnamed_addr #17 align 2 !dbg !7054 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !7056, metadata !DIExpression()), !dbg !7062
  call void @llvm.dbg.value(metadata i32 0, metadata !7057, metadata !DIExpression()), !dbg !7063
  br label %5, !dbg !7064

2:                                                ; preds = %16
  %3 = add nuw nsw i32 %7, 1, !dbg !7065
  call void @llvm.dbg.value(metadata i32 %3, metadata !7057, metadata !DIExpression()), !dbg !7063
  call void @llvm.dbg.value(metadata i32 %7, metadata !7057, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7063
  %4 = icmp eq i32 %3, 4, !dbg !7066
  br i1 %4, label %19, label %5, !dbg !7064, !llvm.loop !7067

5:                                                ; preds = %1, %2
  %6 = phi %"class.Cicada::Stm32Uart"* [ undef, %1 ], [ %18, %2 ]
  %7 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7057, metadata !DIExpression()), !dbg !7063
  %8 = getelementptr inbounds [4 x %"class.Cicada::Stm32Uart"*], [4 x %"class.Cicada::Stm32Uart"*]* @_ZN6Cicada9Stm32Uart8instanceE, i32 0, i32 %7, !dbg !7069
  %9 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** %8, align 4, !dbg !7069, !tbaa !2231
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %9, metadata !7059, metadata !DIExpression()), !dbg !7070
  %10 = icmp eq %"class.Cicada::Stm32Uart"* %9, null, !dbg !7071
  br i1 %10, label %15, label %11, !dbg !7073

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %9, i32 0, i32 2, i32 0, !dbg !7074
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %12, align 4, !dbg !7074, !tbaa !6639
  %14 = icmp eq %struct.USART_TypeDef* %13, %0, !dbg !7075
  br i1 %14, label %16, label %15, !dbg !7076

15:                                               ; preds = %11, %5
  br label %16, !dbg !7077

16:                                               ; preds = %11, %15
  %17 = phi i1 [ true, %15 ], [ false, %11 ]
  %18 = phi %"class.Cicada::Stm32Uart"* [ %6, %15 ], [ %9, %11 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7057, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7063
  br i1 %17, label %2, label %19

19:                                               ; preds = %2, %16
  %20 = phi %"class.Cicada::Stm32Uart"* [ null, %2 ], [ %18, %16 ]
  ret %"class.Cicada::Stm32Uart"* %20, !dbg !7078
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada9Stm32Uart15handleInterruptEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) local_unnamed_addr #5 align 2 !dbg !7079 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !7081, metadata !DIExpression()), !dbg !7082
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, !dbg !7083
  call void @_ZN6Cicada14BufferedSerial23transferToAndFromBufferEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %2) #33, !dbg !7083
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 2, !dbg !7084
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %3 to %"class.Cicada::CircularBuffer.0"*, !dbg !7084
  %5 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !7086
  %6 = icmp eq i64 %5, 0, !dbg !7084
  br i1 %6, label %7, label %13, !dbg !7087

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !7088
  %9 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %8, align 4, !dbg !7088, !tbaa !6639
  %10 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %9, i32 0, i32 3, !dbg !7088
  %11 = load volatile i32, i32* %10, align 4, !dbg !7088, !tbaa !6783
  %12 = and i32 %11, -129, !dbg !7088
  store volatile i32 %12, i32* %10, align 4, !dbg !7088, !tbaa !6783
  br label %13, !dbg !7088

13:                                               ; preds = %7, %1
  ret void, !dbg !7089
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14BufferedSerialD0Ev(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #4 comdat align 2 !dbg !7090 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !7093, metadata !DIExpression()), !dbg !7095
  call void @llvm.trap() #35, !dbg !7096
  unreachable, !dbg !7096
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZNK6Cicada14BufferedSerial14bytesAvailableEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #5 align 2 !dbg !7097 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !7099, metadata !DIExpression()), !dbg !7102
  call void @_Z18eDisableInterruptsv() #33, !dbg !7103
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !7104
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer.0"*, !dbg !7104
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !7105
  call void @llvm.dbg.value(metadata i64 %4, metadata !7101, metadata !DIExpression()), !dbg !7102
  call void @_Z17eEnableInterruptsv() #33, !dbg !7106
  ret i64 %4, !dbg !7107
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZNK6Cicada14BufferedSerial14spaceAvailableEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #5 align 2 !dbg !7108 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !7110, metadata !DIExpression()), !dbg !7112
  call void @_Z18eDisableInterruptsv() #33, !dbg !7113
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !7114
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer.0"*, !dbg !7114
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !7115
  call void @llvm.dbg.value(metadata i64 %4, metadata !7111, metadata !DIExpression()), !dbg !7112
  call void @_Z17eEnableInterruptsv() #33, !dbg !7116
  ret i64 %4, !dbg !7117
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial4readEPhy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8* nocapture noundef writeonly %1, i64 noundef %2) unnamed_addr #5 align 2 !dbg !7118 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !7120, metadata !DIExpression()), !dbg !7125
  call void @llvm.dbg.value(metadata i8* %1, metadata !7121, metadata !DIExpression()), !dbg !7125
  call void @llvm.dbg.value(metadata i64 %2, metadata !7122, metadata !DIExpression()), !dbg !7125
  %4 = bitcast %"class.Cicada::BufferedSerial"* %0 to i64 (%"class.Cicada::BufferedSerial"*)***, !dbg !7126
  %5 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %4, align 8, !dbg !7126, !tbaa !2323
  %6 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %5, i32 2, !dbg !7126
  %7 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %6, align 4, !dbg !7126
  %8 = call noundef i64 %7(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #33, !dbg !7126
  call void @llvm.dbg.value(metadata i64 %8, metadata !7123, metadata !DIExpression()), !dbg !7125
  %9 = icmp ult i64 %8, %2, !dbg !7127
  %10 = select i1 %9, i64 %8, i64 %2, !dbg !7129
  call void @llvm.dbg.value(metadata i64 %10, metadata !7122, metadata !DIExpression()), !dbg !7125
  call void @llvm.dbg.value(metadata i64 0, metadata !7124, metadata !DIExpression()), !dbg !7125
  %11 = icmp eq i64 %10, 0, !dbg !7130
  br i1 %11, label %24, label %12, !dbg !7131

12:                                               ; preds = %3
  %13 = bitcast %"class.Cicada::BufferedSerial"* %0 to i8 (%"class.Cicada::BufferedSerial"*)***
  br label %14, !dbg !7131

14:                                               ; preds = %12, %14
  %15 = phi i64 [ 0, %12 ], [ %20, %14 ]
  call void @llvm.dbg.value(metadata i64 %15, metadata !7124, metadata !DIExpression()), !dbg !7125
  %16 = load i8 (%"class.Cicada::BufferedSerial"*)**, i8 (%"class.Cicada::BufferedSerial"*)*** %13, align 8, !dbg !7132, !tbaa !2323
  %17 = getelementptr inbounds i8 (%"class.Cicada::BufferedSerial"*)*, i8 (%"class.Cicada::BufferedSerial"*)** %16, i32 7, !dbg !7132
  %18 = load i8 (%"class.Cicada::BufferedSerial"*)*, i8 (%"class.Cicada::BufferedSerial"*)** %17, align 4, !dbg !7132
  %19 = call noundef zeroext i8 %18(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #33, !dbg !7132
  %20 = add nuw i64 %15, 1, !dbg !7134
  call void @llvm.dbg.value(metadata i64 %20, metadata !7124, metadata !DIExpression()), !dbg !7125
  %21 = trunc i64 %15 to i32, !dbg !7135
  %22 = getelementptr inbounds i8, i8* %1, i32 %21, !dbg !7135
  store i8 %19, i8* %22, align 1, !dbg !7136, !tbaa !2380
  %23 = icmp ult i64 %20, %10, !dbg !7130
  br i1 %23, label %14, label %24, !dbg !7131, !llvm.loop !7137

24:                                               ; preds = %14, %3
  %25 = phi i64 [ 0, %3 ], [ %20, %14 ], !dbg !7125
  ret i64 %25, !dbg !7139
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial5writeEPKhy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8* nocapture noundef readonly %1, i64 noundef %2) unnamed_addr #5 align 2 !dbg !7140 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !7142, metadata !DIExpression()), !dbg !7147
  call void @llvm.dbg.value(metadata i8* %1, metadata !7143, metadata !DIExpression()), !dbg !7147
  call void @llvm.dbg.value(metadata i64 %2, metadata !7144, metadata !DIExpression()), !dbg !7147
  %4 = bitcast %"class.Cicada::BufferedSerial"* %0 to i64 (%"class.Cicada::BufferedSerial"*)***, !dbg !7148
  %5 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %4, align 8, !dbg !7148, !tbaa !2323
  %6 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %5, i32 3, !dbg !7148
  %7 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %6, align 4, !dbg !7148
  %8 = call noundef i64 %7(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #33, !dbg !7148
  call void @llvm.dbg.value(metadata i64 %8, metadata !7145, metadata !DIExpression()), !dbg !7147
  %9 = icmp ult i64 %8, %2, !dbg !7149
  %10 = select i1 %9, i64 %8, i64 %2, !dbg !7151
  call void @llvm.dbg.value(metadata i64 %10, metadata !7144, metadata !DIExpression()), !dbg !7147
  call void @llvm.dbg.value(metadata i64 0, metadata !7146, metadata !DIExpression()), !dbg !7147
  %11 = icmp eq i64 %10, 0, !dbg !7152
  br i1 %11, label %19, label %12, !dbg !7153

12:                                               ; preds = %3, %12
  %13 = phi i64 [ %14, %12 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i64 %13, metadata !7146, metadata !DIExpression()), !dbg !7147
  %14 = add nuw i64 %13, 1, !dbg !7154
  call void @llvm.dbg.value(metadata i64 %14, metadata !7146, metadata !DIExpression()), !dbg !7147
  %15 = trunc i64 %13 to i32, !dbg !7156
  %16 = getelementptr inbounds i8, i8* %1, i32 %15, !dbg !7156
  %17 = load i8, i8* %16, align 1, !dbg !7156, !tbaa !2380
  call void @_ZN6Cicada14BufferedSerial12copyToBufferEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %17), !dbg !7157
  %18 = icmp ult i64 %14, %10, !dbg !7152
  br i1 %18, label %12, label %19, !dbg !7153, !llvm.loop !7158

19:                                               ; preds = %12, %3
  %20 = phi i64 [ 0, %3 ], [ %14, %12 ], !dbg !7147
  %21 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, !dbg !7160
  %22 = bitcast %"class.Cicada::ICommDevice"* %21 to void (%"class.Cicada::ICommDevice"*)***, !dbg !7160
  %23 = load void (%"class.Cicada::ICommDevice"*)**, void (%"class.Cicada::ICommDevice"*)*** %22, align 4, !dbg !7160, !tbaa !2323
  %24 = getelementptr inbounds void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %23, i32 9, !dbg !7160
  %25 = load void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %24, align 4, !dbg !7160
  call void %25(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %21) #33, !dbg !7160
  ret i64 %20, !dbg !7161
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i8 @_ZN6Cicada14BufferedSerial4readEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #5 align 2 !dbg !7162 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !7164, metadata !DIExpression()), !dbg !7166
  call void @_Z18eDisableInterruptsv() #33, !dbg !7167
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !7168
  %3 = call noundef zeroext i8 @_ZN6Cicada18LineCircularBuffer4pullEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %2), !dbg !7169
  call void @llvm.dbg.value(metadata i8 %3, metadata !7165, metadata !DIExpression()), !dbg !7166
  call void @_Z17eEnableInterruptsv() #33, !dbg !7170
  ret i8 %3, !dbg !7171
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial5writeEPKh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8* nocapture noundef readonly %1) unnamed_addr #5 align 2 !dbg !7172 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !7174, metadata !DIExpression()), !dbg !7178
  call void @llvm.dbg.value(metadata i8* %1, metadata !7175, metadata !DIExpression()), !dbg !7178
  %3 = bitcast %"class.Cicada::BufferedSerial"* %0 to i64 (%"class.Cicada::BufferedSerial"*)***, !dbg !7179
  %4 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %3, align 8, !dbg !7179, !tbaa !2323
  %5 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %4, i32 3, !dbg !7179
  %6 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %5, align 4, !dbg !7179
  %7 = call noundef i64 %6(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #33, !dbg !7179
  call void @llvm.dbg.value(metadata i64 %7, metadata !7176, metadata !DIExpression()), !dbg !7178
  call void @llvm.dbg.value(metadata i64 0, metadata !7177, metadata !DIExpression()), !dbg !7178
  %8 = load i8, i8* %1, align 1, !dbg !7180, !tbaa !2380
  %9 = icmp ne i8 %8, 0, !dbg !7181
  %10 = icmp ne i64 %7, 0, !dbg !7182
  %11 = and i1 %9, %10, !dbg !7182
  br i1 %11, label %12, label %22, !dbg !7183

12:                                               ; preds = %2, %12
  %13 = phi i8 [ %18, %12 ], [ %8, %2 ]
  %14 = phi i64 [ %15, %12 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i64 %14, metadata !7177, metadata !DIExpression()), !dbg !7178
  %15 = add nuw i64 %14, 1, !dbg !7184
  call void @llvm.dbg.value(metadata i64 %15, metadata !7177, metadata !DIExpression()), !dbg !7178
  call void @_ZN6Cicada14BufferedSerial12copyToBufferEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %13), !dbg !7186
  %16 = trunc i64 %15 to i32, !dbg !7180
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !7180
  %18 = load i8, i8* %17, align 1, !dbg !7180, !tbaa !2380
  %19 = icmp ne i8 %18, 0, !dbg !7181
  %20 = icmp ult i64 %15, %7, !dbg !7182
  %21 = select i1 %19, i1 %20, i1 false, !dbg !7182
  br i1 %21, label %12, label %22, !dbg !7183, !llvm.loop !7187

22:                                               ; preds = %12, %2
  %23 = phi i64 [ 0, %2 ], [ %15, %12 ], !dbg !7178
  %24 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, !dbg !7189
  %25 = bitcast %"class.Cicada::ICommDevice"* %24 to void (%"class.Cicada::ICommDevice"*)***, !dbg !7189
  %26 = load void (%"class.Cicada::ICommDevice"*)**, void (%"class.Cicada::ICommDevice"*)*** %25, align 4, !dbg !7189, !tbaa !2323
  %27 = getelementptr inbounds void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %26, i32 9, !dbg !7189
  %28 = load void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %27, align 4, !dbg !7189
  call void %28(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %24) #33, !dbg !7189
  ret i64 %23, !dbg !7190
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada14BufferedSerial5writeEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %1) unnamed_addr #5 align 2 !dbg !7191 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !7193, metadata !DIExpression()), !dbg !7195
  call void @llvm.dbg.value(metadata i8 %1, metadata !7194, metadata !DIExpression()), !dbg !7195
  call void @_ZN6Cicada14BufferedSerial12copyToBufferEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %1), !dbg !7196
  %3 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, !dbg !7197
  %4 = bitcast %"class.Cicada::ICommDevice"* %3 to void (%"class.Cicada::ICommDevice"*)***, !dbg !7197
  %5 = load void (%"class.Cicada::ICommDevice"*)**, void (%"class.Cicada::ICommDevice"*)*** %4, align 4, !dbg !7197, !tbaa !2323
  %6 = getelementptr inbounds void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %5, i32 9, !dbg !7197
  %7 = load void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %6, align 4, !dbg !7197
  call void %7(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %3) #33, !dbg !7197
  ret void, !dbg !7198
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZNK6Cicada14BufferedSerial11canReadLineEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #5 align 2 !dbg !7199 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !7201, metadata !DIExpression()), !dbg !7203
  call void @_Z18eDisableInterruptsv() #33, !dbg !7204
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !7205
  %3 = call noundef zeroext i16 @_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %2), !dbg !7206
  call void @llvm.dbg.value(metadata i16 %3, metadata !7202, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7203
  call void @_Z17eEnableInterruptsv() #33, !dbg !7207
  %4 = icmp ne i16 %3, 0, !dbg !7208
  ret i1 %4, !dbg !7209
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial8readLineEPhy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8* nocapture noundef writeonly %1, i64 noundef %2) unnamed_addr #5 align 2 !dbg !7210 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !7212, metadata !DIExpression()), !dbg !7217
  call void @llvm.dbg.value(metadata i8* %1, metadata !7213, metadata !DIExpression()), !dbg !7217
  call void @llvm.dbg.value(metadata i64 %2, metadata !7214, metadata !DIExpression()), !dbg !7217
  call void @llvm.dbg.value(metadata i64 0, metadata !7215, metadata !DIExpression()), !dbg !7217
  call void @llvm.dbg.value(metadata i8 0, metadata !7216, metadata !DIExpression()), !dbg !7217
  %4 = icmp eq i64 %2, 0, !dbg !7218
  br i1 %4, label %39, label %5, !dbg !7220

5:                                                ; preds = %3
  %6 = bitcast %"class.Cicada::BufferedSerial"* %0 to i64 (%"class.Cicada::BufferedSerial"*)***
  call void @llvm.dbg.value(metadata i8 0, metadata !7216, metadata !DIExpression()), !dbg !7217
  call void @llvm.dbg.value(metadata i64 0, metadata !7215, metadata !DIExpression()), !dbg !7217
  %7 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %6, align 8, !dbg !7221, !tbaa !2323
  %8 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %7, i32 2, !dbg !7221
  %9 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %8, align 4, !dbg !7221
  %10 = call noundef i64 %9(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #33, !dbg !7221
  %11 = icmp eq i64 %10, 0, !dbg !7221
  br i1 %11, label %35, label %12, !dbg !7222

12:                                               ; preds = %5
  %13 = bitcast %"class.Cicada::BufferedSerial"* %0 to i8 (%"class.Cicada::BufferedSerial"*)***
  %14 = add i64 %2, -1
  br label %15, !dbg !7222

15:                                               ; preds = %12, %26
  %16 = phi i64 [ 0, %12 ], [ %27, %26 ]
  call void @llvm.dbg.value(metadata i64 %16, metadata !7215, metadata !DIExpression()), !dbg !7217
  %17 = load i8 (%"class.Cicada::BufferedSerial"*)**, i8 (%"class.Cicada::BufferedSerial"*)*** %13, align 8, !dbg !7223, !tbaa !2323
  %18 = getelementptr inbounds i8 (%"class.Cicada::BufferedSerial"*)*, i8 (%"class.Cicada::BufferedSerial"*)** %17, i32 7, !dbg !7223
  %19 = load i8 (%"class.Cicada::BufferedSerial"*)*, i8 (%"class.Cicada::BufferedSerial"*)** %18, align 4, !dbg !7223
  %20 = call noundef zeroext i8 %19(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #33, !dbg !7223
  call void @llvm.dbg.value(metadata i8 %20, metadata !7216, metadata !DIExpression()), !dbg !7217
  %21 = icmp ult i64 %16, %14, !dbg !7225
  br i1 %21, label %22, label %26, !dbg !7227

22:                                               ; preds = %15
  %23 = add i64 %16, 1, !dbg !7228
  call void @llvm.dbg.value(metadata i64 %23, metadata !7215, metadata !DIExpression()), !dbg !7217
  %24 = trunc i64 %16 to i32, !dbg !7230
  %25 = getelementptr inbounds i8, i8* %1, i32 %24, !dbg !7230
  store i8 %20, i8* %25, align 1, !dbg !7231, !tbaa !2380
  br label %26, !dbg !7232

26:                                               ; preds = %22, %15
  %27 = phi i64 [ %23, %22 ], [ %16, %15 ], !dbg !7217
  call void @llvm.dbg.value(metadata i8 %20, metadata !7216, metadata !DIExpression()), !dbg !7217
  call void @llvm.dbg.value(metadata i64 %27, metadata !7215, metadata !DIExpression()), !dbg !7217
  %28 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %6, align 8, !dbg !7221, !tbaa !2323
  %29 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %28, i32 2, !dbg !7221
  %30 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %29, align 4, !dbg !7221
  %31 = call noundef i64 %30(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #33, !dbg !7221
  %32 = icmp ne i64 %31, 0, !dbg !7221
  %33 = icmp ne i8 %20, 10, !dbg !7233
  %34 = and i1 %33, %32, !dbg !7233
  br i1 %34, label %15, label %35, !dbg !7222, !llvm.loop !7234

35:                                               ; preds = %26, %5
  %36 = phi i64 [ 0, %5 ], [ %27, %26 ], !dbg !7217
  %37 = trunc i64 %36 to i32, !dbg !7236
  %38 = getelementptr inbounds i8, i8* %1, i32 %37, !dbg !7236
  store i8 0, i8* %38, align 1, !dbg !7237, !tbaa !2380
  br label %39, !dbg !7238

39:                                               ; preds = %3, %35
  %40 = phi i64 [ %36, %35 ], [ 0, %3 ], !dbg !7217
  ret i64 %40, !dbg !7239
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #5 align 2 !dbg !7240 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !7242, metadata !DIExpression()), !dbg !7243
  call void @_Z18eDisableInterruptsv() #33, !dbg !7244
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !7245
  call void @_ZN6Cicada18LineCircularBuffer5flushEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %2), !dbg !7246
  call void @_Z17eEnableInterruptsv() #33, !dbg !7247
  ret void, !dbg !7248
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial14readBufferSizeEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #5 align 2 !dbg !7249 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !7251, metadata !DIExpression()), !dbg !7252
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !7253
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer.0"*, !dbg !7253
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE4sizeEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !7254
  ret i64 %4, !dbg !7255
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial15writeBufferSizeEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #5 align 2 !dbg !7256 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !7258, metadata !DIExpression()), !dbg !7259
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !7260
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer.0"*, !dbg !7260
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE4sizeEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !7261
  ret i64 %4, !dbg !7262
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::BufferedSerial"* @_ZThn4_N6Cicada14BufferedSerialD1Ev(%"class.Cicada::BufferedSerial"* noundef %0) unnamed_addr #4 comdat align 2 !dbg !7263 {
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 -1, i32 2, i32 1, !dbg !7264
  %3 = bitcast i16* %2 to %"class.Cicada::BufferedSerial"*, !dbg !7264
  %4 = tail call noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialD2Ev(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %3) #33, !dbg !7264
  ret %"class.Cicada::BufferedSerial"* undef, !dbg !7264
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada14BufferedSerialD0Ev(%"class.Cicada::BufferedSerial"* noundef %0) unnamed_addr #4 comdat align 2 !dbg !7265 {
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 -1, i32 2, i32 1, !dbg !7266
  %3 = bitcast i16* %2 to %"class.Cicada::BufferedSerial"*, !dbg !7266
  tail call void @_ZN6Cicada14BufferedSerialD0Ev(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %3) #33, !dbg !7266
  ret void, !dbg !7266
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIcE4sizeEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #5 comdat align 2 !dbg !7267 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !7269, metadata !DIExpression()), !dbg !7270
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !7271
  %3 = load i64, i64* %2, align 8, !dbg !7271, !tbaa !7272
  ret i64 %3, !dbg !7273
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada18LineCircularBuffer5flushEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) unnamed_addr #5 comdat align 2 !dbg !7274 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !7276, metadata !DIExpression()), !dbg !7278
  %2 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !7279
  store i16 0, i16* %2, align 4, !dbg !7280, !tbaa !7281
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer.0"*, !dbg !7283
  call void @_ZN6Cicada14CircularBufferIcE5flushEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !7283
  ret void, !dbg !7284
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIcE5flushEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #5 comdat align 2 !dbg !7285 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !7287, metadata !DIExpression()), !dbg !7288
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 2, !dbg !7289
  %3 = bitcast i64* %2 to i8*, !dbg !7290
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %3, i8 0, i64 24, i1 false), !dbg !7291
  ret void, !dbg !7290
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i16 @_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) local_unnamed_addr #5 comdat align 2 !dbg !7292 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !7294, metadata !DIExpression()), !dbg !7296
  %2 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !7297
  %3 = load i16, i16* %2, align 4, !dbg !7297, !tbaa !7281
  ret i16 %3, !dbg !7298
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada14BufferedSerial12copyToBufferEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %1) local_unnamed_addr #5 align 2 !dbg !7299 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !7301, metadata !DIExpression()), !dbg !7303
  call void @llvm.dbg.value(metadata i8 %1, metadata !7302, metadata !DIExpression()), !dbg !7303
  call void @_Z18eDisableInterruptsv() #33, !dbg !7304
  %3 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !7305
  call void @_ZN6Cicada18LineCircularBuffer4pushEc(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %3, i8 noundef zeroext %1), !dbg !7306
  call void @_Z17eEnableInterruptsv() #33, !dbg !7307
  ret void, !dbg !7308
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada18LineCircularBuffer4pushEc(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0, i8 noundef zeroext %1) unnamed_addr #5 comdat align 2 !dbg !7309 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !7311, metadata !DIExpression()), !dbg !7313
  call void @llvm.dbg.value(metadata i8 %1, metadata !7312, metadata !DIExpression()), !dbg !7313
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer.0"*, !dbg !7314
  call void @_ZN6Cicada14CircularBufferIcE4pushEc(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %3, i8 noundef zeroext %1), !dbg !7314
  %4 = icmp eq i8 %1, 10, !dbg !7315
  br i1 %4, label %5, label %9, !dbg !7317

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !7318
  %7 = load i16, i16* %6, align 4, !dbg !7320, !tbaa !7281
  %8 = add i16 %7, 1, !dbg !7320
  store i16 %8, i16* %6, align 4, !dbg !7320, !tbaa !7281
  br label %9, !dbg !7321

9:                                                ; preds = %5, %2
  ret void, !dbg !7322
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIcE4pushEc(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i8 noundef zeroext %1) unnamed_addr #5 comdat align 2 !dbg !7323 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !7325, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata i8 %1, metadata !7326, metadata !DIExpression()), !dbg !7327
  %3 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6, !dbg !7328
  %4 = load i8*, i8** %3, align 8, !dbg !7328, !tbaa !7329
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 2, !dbg !7330
  %6 = load i64, i64* %5, align 8, !dbg !7330, !tbaa !7331
  %7 = trunc i64 %6 to i32, !dbg !7328
  %8 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !7328
  store i8 %1, i8* %8, align 1, !dbg !7332, !tbaa !2380
  call void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %5), !dbg !7333
  %9 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !7334
  %10 = load i64, i64* %9, align 8, !dbg !7334, !tbaa !6945
  %11 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !7336
  %12 = load i64, i64* %11, align 8, !dbg !7336, !tbaa !7272
  %13 = icmp ult i64 %10, %12, !dbg !7337
  br i1 %13, label %14, label %16, !dbg !7338

14:                                               ; preds = %2
  %15 = add i64 %10, 1, !dbg !7339
  store i64 %15, i64* %9, align 8, !dbg !7339, !tbaa !6945
  br label %16, !dbg !7340

16:                                               ; preds = %14, %2
  ret void, !dbg !7341
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #5 comdat align 2 !dbg !7342 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !7344, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.value(metadata i64* %1, metadata !7345, metadata !DIExpression()), !dbg !7346
  %3 = load i64, i64* %1, align 8, !dbg !7347, !tbaa !5207
  %4 = add i64 %3, 1, !dbg !7347
  store i64 %4, i64* %1, align 8, !dbg !7347, !tbaa !5207
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !7348
  %6 = load i64, i64* %5, align 8, !dbg !7348, !tbaa !7272
  %7 = icmp ult i64 %4, %6, !dbg !7350
  %8 = select i1 %7, i64 %4, i64 0, !dbg !7351
  store i64 %8, i64* %1, align 8, !dbg !7346
  ret void, !dbg !7352
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i8 @_ZN6Cicada18LineCircularBuffer4pullEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) unnamed_addr #5 comdat align 2 !dbg !7353 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !7355, metadata !DIExpression()), !dbg !7357
  %2 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer.0"*, !dbg !7358
  %3 = call noundef zeroext i8 @_ZN6Cicada14CircularBufferIcE4pullEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %2), !dbg !7358
  call void @llvm.dbg.value(metadata i8 %3, metadata !7356, metadata !DIExpression()), !dbg !7357
  %4 = icmp eq i8 %3, 10, !dbg !7359
  br i1 %4, label %5, label %9, !dbg !7361

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !7362
  %7 = load i16, i16* %6, align 4, !dbg !7364, !tbaa !7281
  %8 = add i16 %7, -1, !dbg !7364
  store i16 %8, i16* %6, align 4, !dbg !7364, !tbaa !7281
  br label %9, !dbg !7365

9:                                                ; preds = %5, %1
  ret i8 %3, !dbg !7366
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i8 @_ZN6Cicada14CircularBufferIcE4pullEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #5 comdat align 2 !dbg !7367 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !7369, metadata !DIExpression()), !dbg !7371
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6, !dbg !7372
  %3 = load i8*, i8** %2, align 8, !dbg !7372, !tbaa !7329
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 3, !dbg !7373
  %5 = load i64, i64* %4, align 8, !dbg !7373, !tbaa !7374
  %6 = trunc i64 %5 to i32, !dbg !7372
  %7 = getelementptr inbounds i8, i8* %3, i32 %6, !dbg !7372
  %8 = load i8, i8* %7, align 1, !dbg !7372, !tbaa !2380
  call void @llvm.dbg.value(metadata i8 %8, metadata !7370, metadata !DIExpression()), !dbg !7371
  call void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %4), !dbg !7375
  %9 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !7376
  %10 = load i64, i64* %9, align 8, !dbg !7376, !tbaa !6945
  %11 = icmp eq i64 %10, 0, !dbg !7378
  br i1 %11, label %14, label %12, !dbg !7379

12:                                               ; preds = %1
  %13 = add i64 %10, -1, !dbg !7380
  store i64 %13, i64* %9, align 8, !dbg !7380, !tbaa !6945
  br label %14, !dbg !7381

14:                                               ; preds = %12, %1
  ret i8 %8, !dbg !7382
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #5 comdat align 2 !dbg !7383 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !7385, metadata !DIExpression()), !dbg !7386
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !7387
  %3 = load i64, i64* %2, align 8, !dbg !7387, !tbaa !7272
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !7388
  %5 = load i64, i64* %4, align 8, !dbg !7388, !tbaa !6945
  %6 = sub i64 %3, %5, !dbg !7389
  ret i64 %6, !dbg !7390
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialC2EPcS1_yy(%"class.Cicada::BufferedSerial"* noundef nonnull returned align 8 dereferenceable(104) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4) unnamed_addr #4 align 2 !dbg !7391 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !7393, metadata !DIExpression()), !dbg !7398
  call void @llvm.dbg.value(metadata i8* %1, metadata !7394, metadata !DIExpression()), !dbg !7398
  call void @llvm.dbg.value(metadata i8* %2, metadata !7395, metadata !DIExpression()), !dbg !7398
  call void @llvm.dbg.value(metadata i64 %3, metadata !7396, metadata !DIExpression()), !dbg !7398
  call void @llvm.dbg.value(metadata i64 %4, metadata !7397, metadata !DIExpression()), !dbg !7398
  %6 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, !dbg !7399
  %7 = call noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialC2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %6) #33, !dbg !7400
  %8 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7399
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada14BufferedSerialE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %8, align 8, !dbg !7399, !tbaa !2323
  %9 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7399
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada14BufferedSerialE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %9, align 4, !dbg !7399, !tbaa !2323
  %10 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !7401
  %11 = call noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %10, i8* noundef %1, i64 noundef %3), !dbg !7401
  %12 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !7402
  %13 = call noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %12, i8* noundef %2, i64 noundef %4), !dbg !7402
  ret %"class.Cicada::BufferedSerial"* %0, !dbg !7403
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialC2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull returned align 4 dereferenceable(8) %0) unnamed_addr #4 comdat align 2 !dbg !7404 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %0, metadata !7407, metadata !DIExpression()), !dbg !7408
  %2 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 0, !dbg !7409
  %3 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %2) #33, !dbg !7409
  %4 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 1, !dbg !7409
  %5 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada7ISerialC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %4) #33, !dbg !7409
  %6 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 0, i32 0, !dbg !7409
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada15IBufferedSerialE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 4, !dbg !7409, !tbaa !2323
  %7 = getelementptr %"class.Cicada::ICommDevice", %"class.Cicada::ICommDevice"* %4, i32 0, i32 0, !dbg !7409
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada15IBufferedSerialE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %7, align 4, !dbg !7409, !tbaa !2323
  ret %"class.Cicada::IBufferedSerial"* %0, !dbg !7409
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull returned align 8 dereferenceable(46) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #4 comdat align 2 !dbg !7410 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !7412, metadata !DIExpression()), !dbg !7415
  call void @llvm.dbg.value(metadata i8* %1, metadata !7413, metadata !DIExpression()), !dbg !7415
  call void @llvm.dbg.value(metadata i64 %2, metadata !7414, metadata !DIExpression()), !dbg !7415
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer.0"*, !dbg !7416
  %5 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIcEC2EPcy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %4, i8* noundef %1, i64 noundef %2), !dbg !7417
  %6 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 0, i32 0, !dbg !7416
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6Cicada18LineCircularBufferE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 8, !dbg !7416, !tbaa !2323
  %7 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !7418
  store i16 0, i16* %7, align 4, !dbg !7418, !tbaa !7281
  ret %"class.Cicada::LineCircularBuffer"* %0, !dbg !7419
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIcEC2EPcy(%"class.Cicada::CircularBuffer.0"* noundef nonnull returned align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #4 comdat align 2 !dbg !7420 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !7422, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i8* %1, metadata !7423, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i64 %2, metadata !7424, metadata !DIExpression()), !dbg !7425
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 0, !dbg !7426
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6Cicada14CircularBufferIcEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8, !dbg !7426, !tbaa !2323
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 2, !dbg !7427
  %6 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !7428
  %7 = bitcast i64* %5 to i8*, !dbg !7428
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false), !dbg !7429
  store i64 %2, i64* %6, align 8, !dbg !7428, !tbaa !7272
  %8 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6, !dbg !7430
  store i8* %1, i8** %8, align 8, !dbg !7430, !tbaa !7329
  ret %"class.Cicada::CircularBuffer.0"* %0, !dbg !7431
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada18LineCircularBufferD0Ev(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) unnamed_addr #4 comdat align 2 !dbg !7432 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !7435, metadata !DIExpression()), !dbg !7436
  %2 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer.0"*, !dbg !7437
  %3 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(46) %2) #33, !dbg !7437
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to i8*, !dbg !7437
  call void @_ZdlPv(i8* noundef %4) #34, !dbg !7437
  ret void, !dbg !7437
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada18LineCircularBuffer4pushEPKcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #5 comdat align 2 !dbg !7438 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !7440, metadata !DIExpression()), !dbg !7444
  call void @llvm.dbg.value(metadata i8* %1, metadata !7441, metadata !DIExpression()), !dbg !7444
  call void @llvm.dbg.value(metadata i64 %2, metadata !7442, metadata !DIExpression()), !dbg !7444
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer.0"*, !dbg !7445
  %5 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !7445
  %6 = icmp ult i64 %5, %2, !dbg !7447
  br i1 %6, label %7, label %9, !dbg !7448

7:                                                ; preds = %3
  %8 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !7449
  call void @llvm.dbg.value(metadata i64 %8, metadata !7442, metadata !DIExpression()), !dbg !7444
  br label %9, !dbg !7450

9:                                                ; preds = %7, %3
  %10 = phi i64 [ %8, %7 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %10, metadata !7442, metadata !DIExpression()), !dbg !7444
  call void @llvm.dbg.value(metadata i64 0, metadata !7443, metadata !DIExpression()), !dbg !7444
  %11 = icmp eq i64 %10, 0, !dbg !7451
  br i1 %11, label %24, label %12, !dbg !7452

12:                                               ; preds = %9
  %13 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to void (%"class.Cicada::LineCircularBuffer"*, i8)***
  br label %14, !dbg !7452

14:                                               ; preds = %12, %14
  %15 = phi i64 [ 0, %12 ], [ %16, %14 ]
  call void @llvm.dbg.value(metadata i64 %15, metadata !7443, metadata !DIExpression()), !dbg !7444
  %16 = add nuw i64 %15, 1, !dbg !7453
  call void @llvm.dbg.value(metadata i64 %16, metadata !7443, metadata !DIExpression()), !dbg !7444
  %17 = trunc i64 %15 to i32, !dbg !7455
  %18 = getelementptr inbounds i8, i8* %1, i32 %17, !dbg !7455
  %19 = load i8, i8* %18, align 1, !dbg !7455, !tbaa !2380
  %20 = load void (%"class.Cicada::LineCircularBuffer"*, i8)**, void (%"class.Cicada::LineCircularBuffer"*, i8)*** %13, align 8, !dbg !7456, !tbaa !2323
  %21 = getelementptr inbounds void (%"class.Cicada::LineCircularBuffer"*, i8)*, void (%"class.Cicada::LineCircularBuffer"*, i8)** %20, i32 3, !dbg !7456
  %22 = load void (%"class.Cicada::LineCircularBuffer"*, i8)*, void (%"class.Cicada::LineCircularBuffer"*, i8)** %21, align 4, !dbg !7456
  call void %22(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0, i8 noundef zeroext %19) #33, !dbg !7456
  %23 = icmp ult i64 %16, %10, !dbg !7451
  br i1 %23, label %14, label %24, !dbg !7452, !llvm.loop !7457

24:                                               ; preds = %14, %9
  %25 = phi i64 [ 0, %9 ], [ %10, %14 ], !dbg !7444
  ret i64 %25, !dbg !7459
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada18LineCircularBuffer4pullEPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #5 comdat align 2 !dbg !7460 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !7462, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.value(metadata i8* %1, metadata !7463, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.value(metadata i64 %2, metadata !7464, metadata !DIExpression()), !dbg !7466
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer.0"*, !dbg !7467
  %5 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !7467
  %6 = icmp ult i64 %5, %2, !dbg !7469
  br i1 %6, label %7, label %9, !dbg !7470

7:                                                ; preds = %3
  %8 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !7471
  call void @llvm.dbg.value(metadata i64 %8, metadata !7464, metadata !DIExpression()), !dbg !7466
  br label %9, !dbg !7472

9:                                                ; preds = %7, %3
  %10 = phi i64 [ %8, %7 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %10, metadata !7464, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.value(metadata i64 0, metadata !7465, metadata !DIExpression()), !dbg !7466
  %11 = icmp eq i64 %10, 0, !dbg !7473
  br i1 %11, label %24, label %12, !dbg !7474

12:                                               ; preds = %9
  %13 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to i8 (%"class.Cicada::LineCircularBuffer"*)***
  br label %14, !dbg !7474

14:                                               ; preds = %12, %14
  %15 = phi i64 [ 0, %12 ], [ %20, %14 ]
  call void @llvm.dbg.value(metadata i64 %15, metadata !7465, metadata !DIExpression()), !dbg !7466
  %16 = load i8 (%"class.Cicada::LineCircularBuffer"*)**, i8 (%"class.Cicada::LineCircularBuffer"*)*** %13, align 8, !dbg !7475, !tbaa !2323
  %17 = getelementptr inbounds i8 (%"class.Cicada::LineCircularBuffer"*)*, i8 (%"class.Cicada::LineCircularBuffer"*)** %16, i32 5, !dbg !7475
  %18 = load i8 (%"class.Cicada::LineCircularBuffer"*)*, i8 (%"class.Cicada::LineCircularBuffer"*)** %17, align 4, !dbg !7475
  %19 = call noundef zeroext i8 %18(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) #33, !dbg !7475
  %20 = add nuw i64 %15, 1, !dbg !7477
  call void @llvm.dbg.value(metadata i64 %20, metadata !7465, metadata !DIExpression()), !dbg !7466
  %21 = trunc i64 %15 to i32, !dbg !7478
  %22 = getelementptr inbounds i8, i8* %1, i32 %21, !dbg !7478
  store i8 %19, i8* %22, align 1, !dbg !7479, !tbaa !2380
  %23 = icmp ult i64 %20, %10, !dbg !7473
  br i1 %23, label %14, label %24, !dbg !7474, !llvm.loop !7480

24:                                               ; preds = %14, %9
  %25 = phi i64 [ 0, %9 ], [ %10, %14 ], !dbg !7466
  ret i64 %25, !dbg !7482
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i8 @_ZN6Cicada14CircularBufferIcE4readEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #5 comdat align 2 !dbg !7483 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !7485, metadata !DIExpression()), !dbg !7486
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6, !dbg !7487
  %3 = load i8*, i8** %2, align 8, !dbg !7487, !tbaa !7329
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 3, !dbg !7488
  %5 = load i64, i64* %4, align 8, !dbg !7488, !tbaa !7374
  %6 = trunc i64 %5 to i32, !dbg !7487
  %7 = getelementptr inbounds i8, i8* %3, i32 %6, !dbg !7487
  %8 = load i8, i8* %7, align 1, !dbg !7487, !tbaa !2380
  ret i8 %8, !dbg !7489
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i1 @_ZNK6Cicada14CircularBufferIcE7isEmptyEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #5 comdat align 2 !dbg !7490 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !7492, metadata !DIExpression()), !dbg !7493
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !7494
  %3 = load i64, i64* %2, align 8, !dbg !7494, !tbaa !6945
  %4 = icmp eq i64 %3, 0, !dbg !7495
  ret i1 %4, !dbg !7496
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i1 @_ZNK6Cicada14CircularBufferIcE6isFullEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #5 comdat align 2 !dbg !7497 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !7499, metadata !DIExpression()), !dbg !7500
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !7501
  %3 = load i64, i64* %2, align 8, !dbg !7501, !tbaa !6945
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !7502
  %5 = load i64, i64* %4, align 8, !dbg !7502, !tbaa !7272
  %6 = icmp eq i64 %3, %5, !dbg !7503
  ret i1 %6, !dbg !7504
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIcED0Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !7505 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !7507, metadata !DIExpression()), !dbg !7508
  %2 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #33, !dbg !7509
  %3 = bitcast %"class.Cicada::CircularBuffer.0"* %0 to i8*, !dbg !7509
  call void @_ZdlPv(i8* noundef %3) #34, !dbg !7509
  ret void, !dbg !7510
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada14CircularBufferIcE4pushEPKcy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #5 comdat align 2 !dbg !7511 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !7513, metadata !DIExpression()), !dbg !7517
  call void @llvm.dbg.value(metadata i8* %1, metadata !7514, metadata !DIExpression()), !dbg !7517
  call void @llvm.dbg.value(metadata i64 %2, metadata !7515, metadata !DIExpression()), !dbg !7517
  %4 = bitcast %"class.Cicada::CircularBuffer.0"* %0 to i64 (%"class.Cicada::CircularBuffer.0"*)***, !dbg !7518
  %5 = load i64 (%"class.Cicada::CircularBuffer.0"*)**, i64 (%"class.Cicada::CircularBuffer.0"*)*** %4, align 8, !dbg !7518, !tbaa !2323
  %6 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %5, i32 11, !dbg !7518
  %7 = load i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %6, align 4, !dbg !7518
  %8 = call noundef i64 %7(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #33, !dbg !7518
  %9 = icmp ult i64 %8, %2, !dbg !7520
  br i1 %9, label %10, label %15, !dbg !7521

10:                                               ; preds = %3
  %11 = load i64 (%"class.Cicada::CircularBuffer.0"*)**, i64 (%"class.Cicada::CircularBuffer.0"*)*** %4, align 8, !dbg !7522, !tbaa !2323
  %12 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %11, i32 11, !dbg !7522
  %13 = load i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %12, align 4, !dbg !7522
  %14 = call noundef i64 %13(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #33, !dbg !7522
  call void @llvm.dbg.value(metadata i64 %14, metadata !7515, metadata !DIExpression()), !dbg !7517
  br label %15, !dbg !7523

15:                                               ; preds = %10, %3
  %16 = phi i64 [ %14, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %16, metadata !7515, metadata !DIExpression()), !dbg !7517
  call void @llvm.dbg.value(metadata i64 0, metadata !7516, metadata !DIExpression()), !dbg !7517
  %17 = icmp eq i64 %16, 0, !dbg !7524
  br i1 %17, label %32, label %18, !dbg !7525

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6
  %20 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 2
  br label %21, !dbg !7525

21:                                               ; preds = %18, %21
  %22 = phi i64 [ 0, %18 ], [ %23, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !7516, metadata !DIExpression()), !dbg !7517
  %23 = add nuw i64 %22, 1, !dbg !7526
  call void @llvm.dbg.value(metadata i64 %23, metadata !7516, metadata !DIExpression()), !dbg !7517
  %24 = trunc i64 %22 to i32, !dbg !7528
  %25 = getelementptr inbounds i8, i8* %1, i32 %24, !dbg !7528
  %26 = load i8, i8* %25, align 1, !dbg !7528, !tbaa !2380
  %27 = load i8*, i8** %19, align 8, !dbg !7529, !tbaa !7329
  %28 = load i64, i64* %20, align 8, !dbg !7530, !tbaa !7331
  %29 = trunc i64 %28 to i32, !dbg !7529
  %30 = getelementptr inbounds i8, i8* %27, i32 %29, !dbg !7529
  store i8 %26, i8* %30, align 1, !dbg !7531, !tbaa !2380
  call void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %20), !dbg !7532
  %31 = icmp ult i64 %23, %16, !dbg !7524
  br i1 %31, label %21, label %32, !dbg !7525, !llvm.loop !7533

32:                                               ; preds = %21, %15
  %33 = phi i64 [ 0, %15 ], [ %16, %21 ], !dbg !7517
  %34 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !7535
  %35 = load i64, i64* %34, align 8, !dbg !7536, !tbaa !6945
  %36 = add i64 %35, %33, !dbg !7536
  store i64 %36, i64* %34, align 8, !dbg !7536, !tbaa !6945
  ret i64 %33, !dbg !7537
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada14CircularBufferIcE4pullEPcy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #5 comdat align 2 !dbg !7538 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !7540, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata i8* %1, metadata !7541, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata i64 %2, metadata !7542, metadata !DIExpression()), !dbg !7544
  %4 = bitcast %"class.Cicada::CircularBuffer.0"* %0 to i64 (%"class.Cicada::CircularBuffer.0"*)***, !dbg !7545
  %5 = load i64 (%"class.Cicada::CircularBuffer.0"*)**, i64 (%"class.Cicada::CircularBuffer.0"*)*** %4, align 8, !dbg !7545, !tbaa !2323
  %6 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %5, i32 10, !dbg !7545
  %7 = load i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %6, align 4, !dbg !7545
  %8 = call noundef i64 %7(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #33, !dbg !7545
  %9 = icmp ult i64 %8, %2, !dbg !7547
  br i1 %9, label %10, label %15, !dbg !7548

10:                                               ; preds = %3
  %11 = load i64 (%"class.Cicada::CircularBuffer.0"*)**, i64 (%"class.Cicada::CircularBuffer.0"*)*** %4, align 8, !dbg !7549, !tbaa !2323
  %12 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %11, i32 10, !dbg !7549
  %13 = load i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %12, align 4, !dbg !7549
  %14 = call noundef i64 %13(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #33, !dbg !7549
  call void @llvm.dbg.value(metadata i64 %14, metadata !7542, metadata !DIExpression()), !dbg !7544
  br label %15, !dbg !7550

15:                                               ; preds = %10, %3
  %16 = phi i64 [ %14, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %16, metadata !7542, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata i64 0, metadata !7543, metadata !DIExpression()), !dbg !7544
  %17 = icmp eq i64 %16, 0, !dbg !7551
  br i1 %17, label %32, label %18, !dbg !7552

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6
  %20 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 3
  br label %21, !dbg !7552

21:                                               ; preds = %18, %21
  %22 = phi i64 [ 0, %18 ], [ %28, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !7543, metadata !DIExpression()), !dbg !7544
  %23 = load i8*, i8** %19, align 8, !dbg !7553, !tbaa !7329
  %24 = load i64, i64* %20, align 8, !dbg !7555, !tbaa !7374
  %25 = trunc i64 %24 to i32, !dbg !7553
  %26 = getelementptr inbounds i8, i8* %23, i32 %25, !dbg !7553
  %27 = load i8, i8* %26, align 1, !dbg !7553, !tbaa !2380
  %28 = add nuw i64 %22, 1, !dbg !7556
  call void @llvm.dbg.value(metadata i64 %28, metadata !7543, metadata !DIExpression()), !dbg !7544
  %29 = trunc i64 %22 to i32, !dbg !7557
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !7557
  store i8 %27, i8* %30, align 1, !dbg !7558, !tbaa !2380
  call void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %20), !dbg !7559
  %31 = icmp ult i64 %28, %16, !dbg !7551
  br i1 %31, label %21, label %32, !dbg !7552, !llvm.loop !7560

32:                                               ; preds = %21, %15
  %33 = phi i64 [ 0, %15 ], [ %16, %21 ], !dbg !7544
  %34 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !7562
  %35 = load i64, i64* %34, align 8, !dbg !7563, !tbaa !6945
  %36 = sub i64 %35, %33, !dbg !7563
  store i64 %36, i64* %34, align 8, !dbg !7563, !tbaa !6945
  ret i64 %33, !dbg !7564
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada7ISerialC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #4 comdat align 2 !dbg !7565 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !7568, metadata !DIExpression()), !dbg !7569
  %2 = getelementptr inbounds %"class.Cicada::ICommDevice", %"class.Cicada::ICommDevice"* %0, i32 0, i32 0, !dbg !7570
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN6Cicada7ISerialE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %2, align 4, !dbg !7570, !tbaa !2323
  ret %"class.Cicada::ICommDevice"* %0, !dbg !7570
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada15IBufferedSerialD0Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %0) unnamed_addr #4 comdat align 2 !dbg !7571 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %0, metadata !7573, metadata !DIExpression()), !dbg !7574
  call void @llvm.trap() #35, !dbg !7575
  unreachable, !dbg !7575
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IBufferedSerial"* @_ZThn4_N6Cicada15IBufferedSerialD1Ev(%"class.Cicada::IBufferedSerial"* noundef %0) unnamed_addr #4 comdat align 2 !dbg !7576 {
  %2 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 -1, i32 1, !dbg !7577
  %3 = bitcast %"class.Cicada::ICommDevice"* %2 to %"class.Cicada::IBufferedSerial"*, !dbg !7577
  %4 = tail call noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialD2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %3) #33, !dbg !7577
  ret %"class.Cicada::IBufferedSerial"* undef, !dbg !7577
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada15IBufferedSerialD0Ev(%"class.Cicada::IBufferedSerial"* noundef %0) unnamed_addr #4 comdat align 2 !dbg !7578 {
  %2 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 -1, i32 1, !dbg !7579
  %3 = bitcast %"class.Cicada::ICommDevice"* %2 to %"class.Cicada::IBufferedSerial"*, !dbg !7579
  tail call void @_ZN6Cicada15IBufferedSerialD0Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %3) #33, !dbg !7579
  ret void, !dbg !7579
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada7ISerialD0Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %0) unnamed_addr #4 comdat align 2 !dbg !7580 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !7582, metadata !DIExpression()), !dbg !7583
  call void @llvm.trap() #35, !dbg !7584
  unreachable, !dbg !7584
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialC2EPcS1_y(%"class.Cicada::BufferedSerial"* noundef nonnull returned align 8 dereferenceable(104) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3) unnamed_addr #4 align 2 !dbg !7585 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !7587, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i8* %1, metadata !7588, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i8* %2, metadata !7589, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i64 %3, metadata !7590, metadata !DIExpression()), !dbg !7591
  %5 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, !dbg !7592
  %6 = call noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialC2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %5) #33, !dbg !7593
  %7 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7592
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada14BufferedSerialE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %7, align 8, !dbg !7592, !tbaa !2323
  %8 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7592
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada14BufferedSerialE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %8, align 4, !dbg !7592, !tbaa !2323
  %9 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !7594
  %10 = call noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %9, i8* noundef %1, i64 noundef %3), !dbg !7594
  %11 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !7595
  %12 = call noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %11, i8* noundef %2, i64 noundef %3), !dbg !7595
  ret %"class.Cicada::BufferedSerial"* %0, !dbg !7596
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada14BufferedSerial23transferToAndFromBufferEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) local_unnamed_addr #5 align 2 !dbg !7597 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !7599, metadata !DIExpression()), !dbg !7601
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #33, !dbg !7602
  %3 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, !dbg !7603
  %4 = bitcast %"class.Cicada::ICommDevice"* %3 to i1 (%"class.Cicada::ICommDevice"*, i8*)***, !dbg !7603
  %5 = load i1 (%"class.Cicada::ICommDevice"*, i8*)**, i1 (%"class.Cicada::ICommDevice"*, i8*)*** %4, align 4, !dbg !7603, !tbaa !2323
  %6 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*, i8*)*, i1 (%"class.Cicada::ICommDevice"*, i8*)** %5, i32 7, !dbg !7603
  %7 = load i1 (%"class.Cicada::ICommDevice"*, i8*)*, i1 (%"class.Cicada::ICommDevice"*, i8*)** %6, align 4, !dbg !7603
  call void @llvm.dbg.value(metadata i8* %2, metadata !7600, metadata !DIExpression(DW_OP_deref)), !dbg !7601
  %8 = call noundef zeroext i1 %7(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %3, i8* noundef nonnull align 1 dereferenceable(1) %2) #33, !dbg !7603
  br i1 %8, label %9, label %15, !dbg !7605

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !7606
  %11 = bitcast %"class.Cicada::LineCircularBuffer"* %10 to %"class.Cicada::CircularBuffer.0"*, !dbg !7606
  %12 = call noundef zeroext i1 @_ZNK6Cicada14CircularBufferIcE6isFullEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %11), !dbg !7607
  br i1 %12, label %15, label %13, !dbg !7608

13:                                               ; preds = %9
  %14 = load i8, i8* %2, align 1, !dbg !7609, !tbaa !2380
  call void @llvm.dbg.value(metadata i8 %14, metadata !7600, metadata !DIExpression()), !dbg !7601
  call void @_ZN6Cicada18LineCircularBuffer4pushEc(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %10, i8 noundef zeroext %14), !dbg !7611
  br label %15, !dbg !7612

15:                                               ; preds = %13, %9, %1
  %16 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !7613
  %17 = bitcast %"class.Cicada::LineCircularBuffer"* %16 to %"class.Cicada::CircularBuffer.0"*, !dbg !7613
  %18 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %17), !dbg !7615
  %19 = icmp eq i64 %18, 0, !dbg !7613
  br i1 %19, label %29, label %20, !dbg !7616

20:                                               ; preds = %15
  %21 = call noundef zeroext i8 @_ZN6Cicada14CircularBufferIcE4readEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %17), !dbg !7617
  %22 = bitcast %"class.Cicada::ICommDevice"* %3 to i1 (%"class.Cicada::ICommDevice"*, i8)***, !dbg !7620
  %23 = load i1 (%"class.Cicada::ICommDevice"*, i8)**, i1 (%"class.Cicada::ICommDevice"*, i8)*** %22, align 4, !dbg !7620, !tbaa !2323
  %24 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*, i8)*, i1 (%"class.Cicada::ICommDevice"*, i8)** %23, i32 8, !dbg !7620
  %25 = load i1 (%"class.Cicada::ICommDevice"*, i8)*, i1 (%"class.Cicada::ICommDevice"*, i8)** %24, align 4, !dbg !7620
  %26 = call noundef zeroext i1 %25(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %3, i8 noundef zeroext %21) #33, !dbg !7620
  br i1 %26, label %27, label %29, !dbg !7621

27:                                               ; preds = %20
  %28 = call noundef zeroext i8 @_ZN6Cicada18LineCircularBuffer4pullEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %16), !dbg !7622
  br label %29, !dbg !7624

29:                                               ; preds = %20, %27, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #33, !dbg !7625
  ret void, !dbg !7625
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_Z18eDisableInterruptsv() local_unnamed_addr #5 !dbg !7626 {
  call void asm sideeffect "cpsid i", "~{memory}"() #33, !dbg !7627, !srcloc !7630
  ret void, !dbg !7631
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_Z17eEnableInterruptsv() local_unnamed_addr #5 !dbg !7632 {
  call void asm sideeffect "cpsie i", "~{memory}"() #33, !dbg !7633, !srcloc !7636
  ret void, !dbg !7637
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Init(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #4 !dbg !7638 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7642, metadata !DIExpression()), !dbg !7643
  %2 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !7644
  br i1 %2, label %27, label %3, !dbg !7646

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !7647
  %5 = load volatile i32, i32* %4, align 4, !dbg !7647, !tbaa !7649
  %6 = icmp eq i32 %5, 0, !dbg !7652
  br i1 %6, label %7, label %9, !dbg !7653

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !7654
  store i32 0, i32* %8, align 4, !dbg !7656, !tbaa !7657
  call void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !7658
  br label %9, !dbg !7659

9:                                                ; preds = %7, %3
  store volatile i32 36, i32* %4, align 4, !dbg !7660, !tbaa !7649
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !7661
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %10, align 4, !dbg !7661, !tbaa !7662
  %12 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %11, i32 0, i32 3, !dbg !7661
  %13 = load volatile i32, i32* %12, align 4, !dbg !7661, !tbaa !4878
  %14 = and i32 %13, -8193, !dbg !7661
  store volatile i32 %14, i32* %12, align 4, !dbg !7661, !tbaa !4878
  call fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !7663
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %10, align 4, !dbg !7664, !tbaa !7662
  %16 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 4, !dbg !7664
  %17 = load volatile i32, i32* %16, align 4, !dbg !7664, !tbaa !4761
  %18 = and i32 %17, -18433, !dbg !7664
  store volatile i32 %18, i32* %16, align 4, !dbg !7664, !tbaa !4761
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 5, !dbg !7665
  %20 = load volatile i32, i32* %19, align 4, !dbg !7665, !tbaa !4766
  %21 = and i32 %20, -43, !dbg !7665
  store volatile i32 %21, i32* %19, align 4, !dbg !7665, !tbaa !4766
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 3, !dbg !7666
  %23 = load volatile i32, i32* %22, align 4, !dbg !7666, !tbaa !4878
  %24 = or i32 %23, 8192, !dbg !7666
  store volatile i32 %24, i32* %22, align 4, !dbg !7666, !tbaa !4878
  %25 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !7667
  store volatile i32 0, i32* %25, align 4, !dbg !7668, !tbaa !7669
  store volatile i32 32, i32* %4, align 4, !dbg !7670, !tbaa !7649
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !7671
  store volatile i32 32, i32* %26, align 4, !dbg !7672, !tbaa !7673
  br label %27, !dbg !7674

27:                                               ; preds = %1, %9
  %28 = phi i32 [ 0, %9 ], [ 1, %1 ], !dbg !7643
  ret i32 %28, !dbg !7675
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #4 !dbg !7676 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7680, metadata !DIExpression()), !dbg !7681
  ret void, !dbg !7682
}

; Function Attrs: noinline nounwind
define internal fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7683 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7685, metadata !DIExpression()), !dbg !7688
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !7689
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !7689, !tbaa !7662
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 4, !dbg !7689
  %5 = load volatile i32, i32* %4, align 4, !dbg !7689, !tbaa !4761
  %6 = and i32 %5, -12289, !dbg !7689
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 2, !dbg !7689
  %8 = load i32, i32* %7, align 4, !dbg !7689, !tbaa !7690
  %9 = or i32 %6, %8, !dbg !7689
  store volatile i32 %9, i32* %4, align 4, !dbg !7689, !tbaa !4761
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1, !dbg !7691
  %11 = load i32, i32* %10, align 4, !dbg !7691, !tbaa !7692
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3, !dbg !7693
  %13 = load i32, i32* %12, align 4, !dbg !7693, !tbaa !7694
  %14 = or i32 %13, %11, !dbg !7695
  %15 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 4, !dbg !7696
  %16 = load i32, i32* %15, align 4, !dbg !7696, !tbaa !7697
  %17 = or i32 %14, %16, !dbg !7698
  call void @llvm.dbg.value(metadata i32 %17, metadata !7686, metadata !DIExpression()), !dbg !7688
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !7699
  %19 = load volatile i32, i32* %18, align 4, !dbg !7699, !tbaa !4878
  %20 = and i32 %19, -5645, !dbg !7699
  %21 = or i32 %17, %20, !dbg !7699
  store volatile i32 %21, i32* %18, align 4, !dbg !7699, !tbaa !4878
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !7700
  %23 = load volatile i32, i32* %22, align 4, !dbg !7700, !tbaa !4766
  %24 = and i32 %23, -769, !dbg !7700
  %25 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 5, !dbg !7700
  %26 = load i32, i32* %25, align 4, !dbg !7700, !tbaa !7701
  %27 = or i32 %24, %26, !dbg !7700
  store volatile i32 %27, i32* %22, align 4, !dbg !7700, !tbaa !4766
  %28 = icmp eq %struct.USART_TypeDef* %3, inttoptr (i32 1073821696 to %struct.USART_TypeDef*), !dbg !7702
  br i1 %28, label %29, label %31, !dbg !7704

29:                                               ; preds = %1
  %30 = call i32 @HAL_RCC_GetPCLK2Freq() #33, !dbg !7705
  call void @llvm.dbg.value(metadata i32 %30, metadata !7687, metadata !DIExpression()), !dbg !7688
  br label %33, !dbg !7707

31:                                               ; preds = %1
  %32 = call i32 @HAL_RCC_GetPCLK1Freq() #33, !dbg !7708
  call void @llvm.dbg.value(metadata i32 %32, metadata !7687, metadata !DIExpression()), !dbg !7688
  br label %33

33:                                               ; preds = %31, %29
  %34 = phi i32 [ %32, %31 ], [ %30, %29 ]
  %35 = mul i32 %34, 25, !dbg !7710
  %36 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 0, !dbg !7710
  %37 = load i32, i32* %36, align 4, !dbg !7710, !tbaa !7711
  %38 = shl i32 %37, 2, !dbg !7710
  %39 = udiv i32 %35, %38, !dbg !7710
  %40 = udiv i32 %39, 100, !dbg !7710
  %41 = shl nuw nsw i32 %40, 4, !dbg !7710
  %42 = mul i32 %40, -100, !dbg !7710
  %43 = add i32 %42, %39, !dbg !7710
  %44 = shl i32 %43, 4, !dbg !7710
  %45 = add i32 %44, 50, !dbg !7710
  %46 = udiv i32 %45, 100, !dbg !7710
  %47 = and i32 %46, 240, !dbg !7710
  %48 = add nuw nsw i32 %47, %41, !dbg !7710
  %49 = and i32 %46, 15, !dbg !7710
  %50 = or i32 %48, %49, !dbg !7710
  %51 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !7710, !tbaa !7662
  %52 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %51, i32 0, i32 2, !dbg !7710
  store volatile i32 %50, i32* %52, align 4, !dbg !7710, !tbaa !4896
  ret void, !dbg !7712
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_HalfDuplex_Init(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #4 !dbg !7713 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7715, metadata !DIExpression()), !dbg !7716
  %2 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !7717
  br i1 %2, label %29, label %3, !dbg !7719

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !7720
  %5 = load volatile i32, i32* %4, align 4, !dbg !7720, !tbaa !7649
  %6 = icmp eq i32 %5, 0, !dbg !7722
  br i1 %6, label %7, label %9, !dbg !7723

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !7724
  store i32 0, i32* %8, align 4, !dbg !7726, !tbaa !7657
  call void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !7727
  br label %9, !dbg !7728

9:                                                ; preds = %7, %3
  store volatile i32 36, i32* %4, align 4, !dbg !7729, !tbaa !7649
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !7730
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %10, align 4, !dbg !7730, !tbaa !7662
  %12 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %11, i32 0, i32 3, !dbg !7730
  %13 = load volatile i32, i32* %12, align 4, !dbg !7730, !tbaa !4878
  %14 = and i32 %13, -8193, !dbg !7730
  store volatile i32 %14, i32* %12, align 4, !dbg !7730, !tbaa !4878
  call fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !7731
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %10, align 4, !dbg !7732, !tbaa !7662
  %16 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 4, !dbg !7732
  %17 = load volatile i32, i32* %16, align 4, !dbg !7732, !tbaa !4761
  %18 = and i32 %17, -18433, !dbg !7732
  store volatile i32 %18, i32* %16, align 4, !dbg !7732, !tbaa !4761
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 5, !dbg !7733
  %20 = load volatile i32, i32* %19, align 4, !dbg !7733, !tbaa !4766
  %21 = and i32 %20, -35, !dbg !7733
  store volatile i32 %21, i32* %19, align 4, !dbg !7733, !tbaa !4766
  %22 = load volatile i32, i32* %19, align 4, !dbg !7734, !tbaa !4766
  %23 = or i32 %22, 8, !dbg !7734
  store volatile i32 %23, i32* %19, align 4, !dbg !7734, !tbaa !4766
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 3, !dbg !7735
  %25 = load volatile i32, i32* %24, align 4, !dbg !7735, !tbaa !4878
  %26 = or i32 %25, 8192, !dbg !7735
  store volatile i32 %26, i32* %24, align 4, !dbg !7735, !tbaa !4878
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !7736
  store volatile i32 0, i32* %27, align 4, !dbg !7737, !tbaa !7669
  store volatile i32 32, i32* %4, align 4, !dbg !7738, !tbaa !7649
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !7739
  store volatile i32 32, i32* %28, align 4, !dbg !7740, !tbaa !7673
  br label %29, !dbg !7741

29:                                               ; preds = %1, %9
  %30 = phi i32 [ 0, %9 ], [ 1, %1 ], !dbg !7716
  ret i32 %30, !dbg !7742
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_LIN_Init(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !7743 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7747, metadata !DIExpression()), !dbg !7749
  call void @llvm.dbg.value(metadata i32 %1, metadata !7748, metadata !DIExpression()), !dbg !7749
  %3 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !7750
  br i1 %3, label %34, label %4, !dbg !7752

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !7753
  %6 = load volatile i32, i32* %5, align 4, !dbg !7753, !tbaa !7649
  %7 = icmp eq i32 %6, 0, !dbg !7755
  br i1 %7, label %8, label %10, !dbg !7756

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !7757
  store i32 0, i32* %9, align 4, !dbg !7759, !tbaa !7657
  call void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !7760
  br label %10, !dbg !7761

10:                                               ; preds = %8, %4
  store volatile i32 36, i32* %5, align 4, !dbg !7762, !tbaa !7649
  %11 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !7763
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %11, align 4, !dbg !7763, !tbaa !7662
  %13 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %12, i32 0, i32 3, !dbg !7763
  %14 = load volatile i32, i32* %13, align 4, !dbg !7763, !tbaa !4878
  %15 = and i32 %14, -8193, !dbg !7763
  store volatile i32 %15, i32* %13, align 4, !dbg !7763, !tbaa !4878
  call fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !7764
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %11, align 4, !dbg !7765, !tbaa !7662
  %17 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %16, i32 0, i32 4, !dbg !7765
  %18 = load volatile i32, i32* %17, align 4, !dbg !7765, !tbaa !4761
  %19 = and i32 %18, -2049, !dbg !7765
  store volatile i32 %19, i32* %17, align 4, !dbg !7765, !tbaa !4761
  %20 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %16, i32 0, i32 5, !dbg !7766
  %21 = load volatile i32, i32* %20, align 4, !dbg !7766, !tbaa !4766
  %22 = and i32 %21, -43, !dbg !7766
  store volatile i32 %22, i32* %20, align 4, !dbg !7766, !tbaa !4766
  %23 = load volatile i32, i32* %17, align 4, !dbg !7767, !tbaa !4761
  %24 = or i32 %23, 16384, !dbg !7767
  store volatile i32 %24, i32* %17, align 4, !dbg !7767, !tbaa !4761
  %25 = load volatile i32, i32* %17, align 4, !dbg !7768, !tbaa !4761
  %26 = and i32 %25, -33, !dbg !7768
  store volatile i32 %26, i32* %17, align 4, !dbg !7768, !tbaa !4761
  %27 = load volatile i32, i32* %17, align 4, !dbg !7769, !tbaa !4761
  %28 = or i32 %27, %1, !dbg !7769
  store volatile i32 %28, i32* %17, align 4, !dbg !7769, !tbaa !4761
  %29 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %16, i32 0, i32 3, !dbg !7770
  %30 = load volatile i32, i32* %29, align 4, !dbg !7770, !tbaa !4878
  %31 = or i32 %30, 8192, !dbg !7770
  store volatile i32 %31, i32* %29, align 4, !dbg !7770, !tbaa !4878
  %32 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !7771
  store volatile i32 0, i32* %32, align 4, !dbg !7772, !tbaa !7669
  store volatile i32 32, i32* %5, align 4, !dbg !7773, !tbaa !7649
  %33 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !7774
  store volatile i32 32, i32* %33, align 4, !dbg !7775, !tbaa !7673
  br label %34, !dbg !7776

34:                                               ; preds = %2, %10
  %35 = phi i32 [ 0, %10 ], [ 1, %2 ], !dbg !7749
  ret i32 %35, !dbg !7777
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_MultiProcessor_Init(%struct.__UART_HandleTypeDef* noundef %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #4 !dbg !7778 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7782, metadata !DIExpression()), !dbg !7785
  call void @llvm.dbg.value(metadata i8 %1, metadata !7783, metadata !DIExpression()), !dbg !7785
  call void @llvm.dbg.value(metadata i32 %2, metadata !7784, metadata !DIExpression()), !dbg !7785
  %4 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !7786
  br i1 %4, label %38, label %5, !dbg !7788

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !7789
  %7 = load volatile i32, i32* %6, align 4, !dbg !7789, !tbaa !7649
  %8 = icmp eq i32 %7, 0, !dbg !7791
  br i1 %8, label %9, label %11, !dbg !7792

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !7793
  store i32 0, i32* %10, align 4, !dbg !7795, !tbaa !7657
  call void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !7796
  br label %11, !dbg !7797

11:                                               ; preds = %9, %5
  store volatile i32 36, i32* %6, align 4, !dbg !7798, !tbaa !7649
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !7799
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %12, align 4, !dbg !7799, !tbaa !7662
  %14 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %13, i32 0, i32 3, !dbg !7799
  %15 = load volatile i32, i32* %14, align 4, !dbg !7799, !tbaa !4878
  %16 = and i32 %15, -8193, !dbg !7799
  store volatile i32 %16, i32* %14, align 4, !dbg !7799, !tbaa !4878
  call fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !7800
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %12, align 4, !dbg !7801, !tbaa !7662
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 4, !dbg !7801
  %19 = load volatile i32, i32* %18, align 4, !dbg !7801, !tbaa !4761
  %20 = and i32 %19, -18433, !dbg !7801
  store volatile i32 %20, i32* %18, align 4, !dbg !7801, !tbaa !4761
  %21 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 5, !dbg !7802
  %22 = load volatile i32, i32* %21, align 4, !dbg !7802, !tbaa !4766
  %23 = and i32 %22, -43, !dbg !7802
  store volatile i32 %23, i32* %21, align 4, !dbg !7802, !tbaa !4766
  %24 = load volatile i32, i32* %18, align 4, !dbg !7803, !tbaa !4761
  %25 = and i32 %24, -16, !dbg !7803
  store volatile i32 %25, i32* %18, align 4, !dbg !7803, !tbaa !4761
  %26 = zext i8 %1 to i32, !dbg !7804
  %27 = load volatile i32, i32* %18, align 4, !dbg !7804, !tbaa !4761
  %28 = or i32 %27, %26, !dbg !7804
  store volatile i32 %28, i32* %18, align 4, !dbg !7804, !tbaa !4761
  %29 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 3, !dbg !7805
  %30 = load volatile i32, i32* %29, align 4, !dbg !7805, !tbaa !4878
  %31 = and i32 %30, -2049, !dbg !7805
  store volatile i32 %31, i32* %29, align 4, !dbg !7805, !tbaa !4878
  %32 = load volatile i32, i32* %29, align 4, !dbg !7806, !tbaa !4878
  %33 = or i32 %32, %2, !dbg !7806
  store volatile i32 %33, i32* %29, align 4, !dbg !7806, !tbaa !4878
  %34 = load volatile i32, i32* %29, align 4, !dbg !7807, !tbaa !4878
  %35 = or i32 %34, 8192, !dbg !7807
  store volatile i32 %35, i32* %29, align 4, !dbg !7807, !tbaa !4878
  %36 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !7808
  store volatile i32 0, i32* %36, align 4, !dbg !7809, !tbaa !7669
  store volatile i32 32, i32* %6, align 4, !dbg !7810, !tbaa !7649
  %37 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !7811
  store volatile i32 32, i32* %37, align 4, !dbg !7812, !tbaa !7673
  br label %38, !dbg !7813

38:                                               ; preds = %3, %11
  %39 = phi i32 [ 0, %11 ], [ 1, %3 ], !dbg !7785
  ret i32 %39, !dbg !7814
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_DeInit(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #4 !dbg !7815 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7817, metadata !DIExpression()), !dbg !7818
  %2 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !7819
  br i1 %2, label %13, label %3, !dbg !7821

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !7822
  store volatile i32 36, i32* %4, align 4, !dbg !7823, !tbaa !7649
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !7824
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7824, !tbaa !7662
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %6, i32 0, i32 3, !dbg !7824
  %8 = load volatile i32, i32* %7, align 4, !dbg !7824, !tbaa !4878
  %9 = and i32 %8, -8193, !dbg !7824
  store volatile i32 %9, i32* %7, align 4, !dbg !7824, !tbaa !4878
  call void @HAL_UART_MspDeInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !7825
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !7826
  store volatile i32 0, i32* %10, align 4, !dbg !7827, !tbaa !7669
  store volatile i32 0, i32* %4, align 4, !dbg !7828, !tbaa !7649
  %11 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !7829
  store volatile i32 0, i32* %11, align 4, !dbg !7830, !tbaa !7673
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !7831
  store i32 0, i32* %12, align 4, !dbg !7831, !tbaa !7657
  br label %13, !dbg !7833

13:                                               ; preds = %1, %3
  %14 = phi i32 [ 0, %3 ], [ 1, %1 ], !dbg !7818
  ret i32 %14, !dbg !7834
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_MspDeInit(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #4 !dbg !7835 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7837, metadata !DIExpression()), !dbg !7838
  ret void, !dbg !7839
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Transmit(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef readonly %1, i16 noundef zeroext %2, i32 noundef %3) local_unnamed_addr #4 !dbg !7840 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7844, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata i8* %1, metadata !7845, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata i16 %2, metadata !7846, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata i32 %3, metadata !7847, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata i32 0, metadata !7849, metadata !DIExpression()), !dbg !7850
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !7851
  %6 = load volatile i32, i32* %5, align 4, !dbg !7851, !tbaa !7649
  %7 = icmp eq i32 %6, 32, !dbg !7853
  br i1 %7, label %8, label %65, !dbg !7854

8:                                                ; preds = %4
  %9 = icmp eq i8* %1, null, !dbg !7855
  %10 = icmp eq i16 %2, 0
  %11 = or i1 %9, %10, !dbg !7858
  br i1 %11, label %65, label %12, !dbg !7858

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !7859
  %14 = load i32, i32* %13, align 4, !dbg !7859, !tbaa !7657
  %15 = icmp eq i32 %14, 1, !dbg !7859
  br i1 %15, label %65, label %16, !dbg !7862

16:                                               ; preds = %12
  store i32 1, i32* %13, align 4, !dbg !7863, !tbaa !7657
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !7865
  store volatile i32 0, i32* %17, align 4, !dbg !7866, !tbaa !7669
  store volatile i32 33, i32* %5, align 4, !dbg !7867, !tbaa !7649
  %18 = call i32 @HAL_GetTick() #33, !dbg !7868
  call void @llvm.dbg.value(metadata i32 %18, metadata !7849, metadata !DIExpression()), !dbg !7850
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 3, !dbg !7869
  store i16 %2, i16* %19, align 4, !dbg !7870, !tbaa !7871
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !7872
  store volatile i16 %2, i16* %20, align 2, !dbg !7873, !tbaa !7874
  call void @llvm.dbg.value(metadata i8* %1, metadata !7845, metadata !DIExpression()), !dbg !7850
  %21 = load volatile i16, i16* %20, align 2, !dbg !7875, !tbaa !7874
  %22 = icmp eq i16 %21, 0, !dbg !7876
  br i1 %22, label %61, label %23, !dbg !7877

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1
  %25 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3
  br label %28, !dbg !7877

28:                                               ; preds = %23, %57
  %29 = phi i8* [ %1, %23 ], [ %58, %57 ]
  call void @llvm.dbg.value(metadata i8* %29, metadata !7845, metadata !DIExpression()), !dbg !7850
  %30 = load volatile i16, i16* %20, align 2, !dbg !7878, !tbaa !7874
  %31 = add i16 %30, -1, !dbg !7878
  store volatile i16 %31, i16* %20, align 2, !dbg !7878, !tbaa !7874
  %32 = load i32, i32* %24, align 4, !dbg !7880, !tbaa !7692
  %33 = icmp eq i32 %32, 4096, !dbg !7882
  %34 = call fastcc i32 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef 128, i32 noundef %18, i32 noundef %3), !dbg !7883
  %35 = icmp eq i32 %34, 0, !dbg !7883
  br i1 %33, label %36, label %50, !dbg !7884

36:                                               ; preds = %28
  br i1 %35, label %37, label %65, !dbg !7885

37:                                               ; preds = %36
  %38 = bitcast i8* %29 to i16*, !dbg !7887
  call void @llvm.dbg.value(metadata i16* %38, metadata !7848, metadata !DIExpression()), !dbg !7850
  %39 = load i16, i16* %38, align 2, !dbg !7888, !tbaa !7889
  %40 = and i16 %39, 511, !dbg !7890
  %41 = zext i16 %40 to i32, !dbg !7890
  %42 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %26, align 4, !dbg !7891, !tbaa !7662
  %43 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %42, i32 0, i32 1, !dbg !7892
  store volatile i32 %41, i32* %43, align 4, !dbg !7893, !tbaa !7894
  %44 = load i32, i32* %27, align 4, !dbg !7895, !tbaa !7694
  %45 = icmp eq i32 %44, 0, !dbg !7897
  br i1 %45, label %46, label %48, !dbg !7898

46:                                               ; preds = %37
  %47 = getelementptr inbounds i8, i8* %29, i32 2, !dbg !7899
  call void @llvm.dbg.value(metadata i8* %47, metadata !7845, metadata !DIExpression()), !dbg !7850
  br label %57, !dbg !7901

48:                                               ; preds = %37
  %49 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !7902
  call void @llvm.dbg.value(metadata i8* %49, metadata !7845, metadata !DIExpression()), !dbg !7850
  br label %57

50:                                               ; preds = %28
  br i1 %35, label %51, label %65, !dbg !7904

51:                                               ; preds = %50
  %52 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !7906
  call void @llvm.dbg.value(metadata i8* %52, metadata !7845, metadata !DIExpression()), !dbg !7850
  %53 = load i8, i8* %29, align 1, !dbg !7907, !tbaa !2561
  %54 = zext i8 %53 to i32, !dbg !7907
  %55 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %25, align 4, !dbg !7908, !tbaa !7662
  %56 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %55, i32 0, i32 1, !dbg !7909
  store volatile i32 %54, i32* %56, align 4, !dbg !7910, !tbaa !7894
  br label %57

57:                                               ; preds = %46, %48, %51
  %58 = phi i8* [ %47, %46 ], [ %49, %48 ], [ %52, %51 ], !dbg !7883
  call void @llvm.dbg.value(metadata i8* %58, metadata !7845, metadata !DIExpression()), !dbg !7850
  %59 = load volatile i16, i16* %20, align 2, !dbg !7875, !tbaa !7874
  %60 = icmp eq i16 %59, 0, !dbg !7876
  br i1 %60, label %61, label %28, !dbg !7877, !llvm.loop !7911

61:                                               ; preds = %57, %16
  %62 = call fastcc i32 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef 64, i32 noundef %18, i32 noundef %3), !dbg !7913
  %63 = icmp eq i32 %62, 0, !dbg !7915
  br i1 %63, label %64, label %65, !dbg !7916

64:                                               ; preds = %61
  store volatile i32 32, i32* %5, align 4, !dbg !7917, !tbaa !7649
  store i32 0, i32* %13, align 4, !dbg !7918, !tbaa !7657
  br label %65, !dbg !7920

65:                                               ; preds = %50, %36, %4, %61, %12, %8, %64
  %66 = phi i32 [ 0, %64 ], [ 1, %8 ], [ 2, %12 ], [ 3, %61 ], [ 2, %4 ], [ 3, %36 ], [ 3, %50 ], !dbg !7921
  ret i32 %66, !dbg !7922
}

; Function Attrs: noinline nounwind
define internal fastcc i32 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !7923 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7927, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata i32 %1, metadata !7928, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata i32 0, metadata !7929, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata i32 %2, metadata !7930, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata i32 %3, metadata !7931, metadata !DIExpression()), !dbg !7932
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7933, !tbaa !7662
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %6, i32 0, i32 0, !dbg !7933
  %8 = load volatile i32, i32* %7, align 4, !dbg !7933, !tbaa !7934
  %9 = and i32 %8, %1, !dbg !7933
  %10 = icmp eq i32 %9, %1, !dbg !7933
  br i1 %10, label %37, label %11, !dbg !7935

11:                                               ; preds = %4
  switch i32 %3, label %17 [
    i32 0, label %21
    i32 -1, label %12
  ]

12:                                               ; preds = %17, %11
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !tbaa !7662
  %14 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %13, i32 0, i32 0
  %15 = icmp eq i32 %3, -1
  br label %33, !dbg !7935

16:                                               ; preds = %33
  br i1 %15, label %33, label %17, !dbg !7936

17:                                               ; preds = %16, %11
  %18 = call i32 @HAL_GetTick() #33, !dbg !7938
  %19 = sub i32 %18, %2, !dbg !7942
  %20 = icmp ugt i32 %19, %3, !dbg !7943
  br i1 %20, label %21, label %12, !dbg !7944

21:                                               ; preds = %17, %11
  %22 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !7933
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !7945, !tbaa !7662
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 3, !dbg !7945
  %25 = load volatile i32, i32* %24, align 4, !dbg !7945, !tbaa !4878
  %26 = and i32 %25, -417, !dbg !7945
  store volatile i32 %26, i32* %24, align 4, !dbg !7945, !tbaa !4878
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 5, !dbg !7947
  %28 = load volatile i32, i32* %27, align 4, !dbg !7947, !tbaa !4766
  %29 = and i32 %28, -2, !dbg !7947
  store volatile i32 %29, i32* %27, align 4, !dbg !7947, !tbaa !4766
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !7948
  store volatile i32 32, i32* %30, align 4, !dbg !7949, !tbaa !7649
  %31 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !7950
  store volatile i32 32, i32* %31, align 4, !dbg !7951, !tbaa !7673
  %32 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !7952
  store i32 0, i32* %32, align 4, !dbg !7952, !tbaa !7657
  br label %37, !dbg !7954

33:                                               ; preds = %12, %16
  %34 = load volatile i32, i32* %14, align 4, !dbg !7933, !tbaa !7934
  %35 = and i32 %34, %1, !dbg !7933
  %36 = icmp eq i32 %35, %1, !dbg !7933
  br i1 %36, label %37, label %16, !dbg !7935, !llvm.loop !7955

37:                                               ; preds = %33, %4, %21
  %38 = phi i32 [ 3, %21 ], [ 0, %4 ], [ 0, %33 ], !dbg !7932
  ret i32 %38, !dbg !7957
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Receive(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef writeonly %1, i16 noundef zeroext %2, i32 noundef %3) local_unnamed_addr #4 !dbg !7958 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7960, metadata !DIExpression()), !dbg !7966
  call void @llvm.dbg.value(metadata i8* %1, metadata !7961, metadata !DIExpression()), !dbg !7966
  call void @llvm.dbg.value(metadata i16 %2, metadata !7962, metadata !DIExpression()), !dbg !7966
  call void @llvm.dbg.value(metadata i32 %3, metadata !7963, metadata !DIExpression()), !dbg !7966
  call void @llvm.dbg.value(metadata i32 0, metadata !7965, metadata !DIExpression()), !dbg !7966
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !7967
  %6 = load volatile i32, i32* %5, align 4, !dbg !7967, !tbaa !7673
  %7 = icmp eq i32 %6, 32, !dbg !7969
  br i1 %7, label %8, label %80, !dbg !7970

8:                                                ; preds = %4
  %9 = icmp eq i8* %1, null, !dbg !7971
  %10 = icmp eq i16 %2, 0
  %11 = or i1 %9, %10, !dbg !7974
  br i1 %11, label %80, label %12, !dbg !7974

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !7975
  %14 = load i32, i32* %13, align 4, !dbg !7975, !tbaa !7657
  %15 = icmp eq i32 %14, 1, !dbg !7975
  br i1 %15, label %80, label %16, !dbg !7978

16:                                               ; preds = %12
  store i32 1, i32* %13, align 4, !dbg !7979, !tbaa !7657
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !7981
  store volatile i32 0, i32* %17, align 4, !dbg !7982, !tbaa !7669
  store volatile i32 34, i32* %5, align 4, !dbg !7983, !tbaa !7673
  %18 = call i32 @HAL_GetTick() #33, !dbg !7984
  call void @llvm.dbg.value(metadata i32 %18, metadata !7965, metadata !DIExpression()), !dbg !7966
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 6, !dbg !7985
  store i16 %2, i16* %19, align 4, !dbg !7986, !tbaa !7987
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !7988
  store volatile i16 %2, i16* %20, align 2, !dbg !7989, !tbaa !7990
  call void @llvm.dbg.value(metadata i8* %1, metadata !7961, metadata !DIExpression()), !dbg !7966
  %21 = load volatile i16, i16* %20, align 2, !dbg !7991, !tbaa !7990
  %22 = icmp eq i16 %21, 0, !dbg !7992
  br i1 %22, label %79, label %23, !dbg !7993

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1
  %25 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3
  %29 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  br label %31, !dbg !7993

31:                                               ; preds = %23, %75
  %32 = phi i8* [ %1, %23 ], [ %76, %75 ]
  call void @llvm.dbg.value(metadata i8* %32, metadata !7961, metadata !DIExpression()), !dbg !7966
  %33 = load volatile i16, i16* %20, align 2, !dbg !7994, !tbaa !7990
  %34 = add i16 %33, -1, !dbg !7994
  store volatile i16 %34, i16* %20, align 2, !dbg !7994, !tbaa !7990
  %35 = load i32, i32* %24, align 4, !dbg !7996, !tbaa !7692
  %36 = icmp eq i32 %35, 4096, !dbg !7998
  %37 = call fastcc i32 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef 32, i32 noundef %18, i32 noundef %3), !dbg !7999
  %38 = icmp eq i32 %37, 0, !dbg !7999
  br i1 %36, label %39, label %58, !dbg !8000

39:                                               ; preds = %31
  br i1 %38, label %40, label %80, !dbg !8001

40:                                               ; preds = %39
  %41 = bitcast i8* %32 to i16*, !dbg !8003
  call void @llvm.dbg.value(metadata i16* %41, metadata !7964, metadata !DIExpression()), !dbg !7966
  %42 = load i32, i32* %28, align 4, !dbg !8004, !tbaa !7694
  %43 = icmp eq i32 %42, 0, !dbg !8006
  br i1 %43, label %44, label %51, !dbg !8007

44:                                               ; preds = %40
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !8008, !tbaa !7662
  %46 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %45, i32 0, i32 1, !dbg !8010
  %47 = load volatile i32, i32* %46, align 4, !dbg !8010, !tbaa !7894
  %48 = trunc i32 %47 to i16, !dbg !8011
  %49 = and i16 %48, 511, !dbg !8011
  store i16 %49, i16* %41, align 2, !dbg !8012, !tbaa !7889
  %50 = getelementptr inbounds i8, i8* %32, i32 2, !dbg !8013
  call void @llvm.dbg.value(metadata i8* %50, metadata !7961, metadata !DIExpression()), !dbg !7966
  br label %75, !dbg !8014

51:                                               ; preds = %40
  %52 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %29, align 4, !dbg !8015, !tbaa !7662
  %53 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %52, i32 0, i32 1, !dbg !8017
  %54 = load volatile i32, i32* %53, align 4, !dbg !8017, !tbaa !7894
  %55 = trunc i32 %54 to i16, !dbg !8018
  %56 = and i16 %55, 255, !dbg !8018
  store i16 %56, i16* %41, align 2, !dbg !8019, !tbaa !7889
  %57 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !8020
  call void @llvm.dbg.value(metadata i8* %57, metadata !7961, metadata !DIExpression()), !dbg !7966
  br label %75

58:                                               ; preds = %31
  br i1 %38, label %59, label %80, !dbg !8021

59:                                               ; preds = %58
  %60 = load i32, i32* %25, align 4, !dbg !8023, !tbaa !7694
  %61 = icmp eq i32 %60, 0, !dbg !8025
  br i1 %61, label %62, label %68, !dbg !8026

62:                                               ; preds = %59
  %63 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %27, align 4, !dbg !8027, !tbaa !7662
  %64 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %63, i32 0, i32 1, !dbg !8029
  %65 = load volatile i32, i32* %64, align 4, !dbg !8029, !tbaa !7894
  %66 = trunc i32 %65 to i8, !dbg !8030
  %67 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !8031
  call void @llvm.dbg.value(metadata i8* %67, metadata !7961, metadata !DIExpression()), !dbg !7966
  store i8 %66, i8* %32, align 1, !dbg !8032, !tbaa !2561
  br label %75, !dbg !8033

68:                                               ; preds = %59
  %69 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %26, align 4, !dbg !8034, !tbaa !7662
  %70 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %69, i32 0, i32 1, !dbg !8036
  %71 = load volatile i32, i32* %70, align 4, !dbg !8036, !tbaa !7894
  %72 = trunc i32 %71 to i8, !dbg !8037
  %73 = and i8 %72, 127, !dbg !8037
  %74 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !8038
  call void @llvm.dbg.value(metadata i8* %74, metadata !7961, metadata !DIExpression()), !dbg !7966
  store i8 %73, i8* %32, align 1, !dbg !8039, !tbaa !2561
  br label %75

75:                                               ; preds = %62, %68, %44, %51
  %76 = phi i8* [ %50, %44 ], [ %57, %51 ], [ %67, %62 ], [ %74, %68 ], !dbg !7999
  call void @llvm.dbg.value(metadata i8* %76, metadata !7961, metadata !DIExpression()), !dbg !7966
  %77 = load volatile i16, i16* %20, align 2, !dbg !7991, !tbaa !7990
  %78 = icmp eq i16 %77, 0, !dbg !7992
  br i1 %78, label %79, label %31, !dbg !7993, !llvm.loop !8040

79:                                               ; preds = %75, %16
  store volatile i32 32, i32* %5, align 4, !dbg !8042, !tbaa !7673
  store i32 0, i32* %13, align 4, !dbg !8043, !tbaa !7657
  br label %80, !dbg !8045

80:                                               ; preds = %58, %39, %4, %12, %8, %79
  %81 = phi i32 [ 0, %79 ], [ 1, %8 ], [ 2, %12 ], [ 2, %4 ], [ 3, %39 ], [ 3, %58 ], !dbg !8046
  ret i32 %81, !dbg !8047
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_UART_Transmit_IT(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #15 !dbg !8048 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8052, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i8* %1, metadata !8053, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i16 %2, metadata !8054, metadata !DIExpression()), !dbg !8055
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !8056
  %5 = load volatile i32, i32* %4, align 4, !dbg !8056, !tbaa !7649
  %6 = icmp eq i32 %5, 32, !dbg !8058
  br i1 %6, label %7, label %25, !dbg !8059

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !8060
  %9 = icmp eq i16 %2, 0
  %10 = or i1 %8, %9, !dbg !8063
  br i1 %10, label %25, label %11, !dbg !8063

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !8064
  %13 = load i32, i32* %12, align 4, !dbg !8064, !tbaa !7657
  %14 = icmp eq i32 %13, 1, !dbg !8064
  br i1 %14, label %25, label %15, !dbg !8067

15:                                               ; preds = %11
  store i32 1, i32* %12, align 4, !dbg !8068, !tbaa !7657
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 2, !dbg !8070
  store i8* %1, i8** %16, align 4, !dbg !8071, !tbaa !8072
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 3, !dbg !8073
  store i16 %2, i16* %17, align 4, !dbg !8074, !tbaa !7871
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !8075
  store volatile i16 %2, i16* %18, align 2, !dbg !8076, !tbaa !7874
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !8077
  store volatile i32 0, i32* %19, align 4, !dbg !8078, !tbaa !7669
  store volatile i32 33, i32* %4, align 4, !dbg !8079, !tbaa !7649
  store i32 0, i32* %12, align 4, !dbg !8080, !tbaa !7657
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8082
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %20, align 4, !dbg !8082, !tbaa !7662
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %21, i32 0, i32 3, !dbg !8082
  %23 = load volatile i32, i32* %22, align 4, !dbg !8082, !tbaa !4878
  %24 = or i32 %23, 128, !dbg !8082
  store volatile i32 %24, i32* %22, align 4, !dbg !8082, !tbaa !4878
  br label %25, !dbg !8083

25:                                               ; preds = %3, %11, %7, %15
  %26 = phi i32 [ 0, %15 ], [ 1, %7 ], [ 2, %11 ], [ 2, %3 ], !dbg !8084
  ret i32 %26, !dbg !8085
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_UART_Receive_IT(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #15 !dbg !8086 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8088, metadata !DIExpression()), !dbg !8091
  call void @llvm.dbg.value(metadata i8* %1, metadata !8089, metadata !DIExpression()), !dbg !8091
  call void @llvm.dbg.value(metadata i16 %2, metadata !8090, metadata !DIExpression()), !dbg !8091
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !8092
  %5 = load volatile i32, i32* %4, align 4, !dbg !8092, !tbaa !7673
  %6 = icmp eq i32 %5, 32, !dbg !8094
  br i1 %6, label %7, label %30, !dbg !8095

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !8096
  %9 = icmp eq i16 %2, 0
  %10 = or i1 %8, %9, !dbg !8099
  br i1 %10, label %30, label %11, !dbg !8099

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !8100
  %13 = load i32, i32* %12, align 4, !dbg !8100, !tbaa !7657
  %14 = icmp eq i32 %13, 1, !dbg !8100
  br i1 %14, label %30, label %15, !dbg !8103

15:                                               ; preds = %11
  store i32 1, i32* %12, align 4, !dbg !8104, !tbaa !7657
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !8106
  store i8* %1, i8** %16, align 4, !dbg !8107, !tbaa !8108
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 6, !dbg !8109
  store i16 %2, i16* %17, align 4, !dbg !8110, !tbaa !7987
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !8111
  store volatile i16 %2, i16* %18, align 2, !dbg !8112, !tbaa !7990
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !8113
  store volatile i32 0, i32* %19, align 4, !dbg !8114, !tbaa !7669
  store volatile i32 34, i32* %4, align 4, !dbg !8115, !tbaa !7673
  store i32 0, i32* %12, align 4, !dbg !8116, !tbaa !7657
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8118
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %20, align 4, !dbg !8118, !tbaa !7662
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %21, i32 0, i32 3, !dbg !8118
  %23 = load volatile i32, i32* %22, align 4, !dbg !8118, !tbaa !4878
  %24 = or i32 %23, 256, !dbg !8118
  store volatile i32 %24, i32* %22, align 4, !dbg !8118, !tbaa !4878
  %25 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %21, i32 0, i32 5, !dbg !8119
  %26 = load volatile i32, i32* %25, align 4, !dbg !8119, !tbaa !4766
  %27 = or i32 %26, 1, !dbg !8119
  store volatile i32 %27, i32* %25, align 4, !dbg !8119, !tbaa !4766
  %28 = load volatile i32, i32* %22, align 4, !dbg !8120, !tbaa !4878
  %29 = or i32 %28, 32, !dbg !8120
  store volatile i32 %29, i32* %22, align 4, !dbg !8120, !tbaa !4878
  br label %30, !dbg !8121

30:                                               ; preds = %3, %11, %7, %15
  %31 = phi i32 [ 0, %15 ], [ 1, %7 ], [ 2, %11 ], [ 2, %3 ], !dbg !8122
  ret i32 %31, !dbg !8123
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Transmit_DMA(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #4 !dbg !8124 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8126, metadata !DIExpression()), !dbg !8130
  call void @llvm.dbg.value(metadata i8* %1, metadata !8127, metadata !DIExpression()), !dbg !8130
  call void @llvm.dbg.value(metadata i16 %2, metadata !8128, metadata !DIExpression()), !dbg !8130
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !8131
  %5 = load volatile i32, i32* %4, align 4, !dbg !8131, !tbaa !7649
  %6 = icmp eq i32 %5, 32, !dbg !8133
  br i1 %6, label %7, label %38, !dbg !8134

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !8135
  %9 = zext i16 %2 to i32
  %10 = icmp eq i16 %2, 0
  %11 = or i1 %8, %10, !dbg !8138
  br i1 %11, label %38, label %12, !dbg !8138

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !8139
  %14 = load i32, i32* %13, align 4, !dbg !8139, !tbaa !7657
  %15 = icmp eq i32 %14, 1, !dbg !8139
  br i1 %15, label %38, label %16, !dbg !8142

16:                                               ; preds = %12
  store i32 1, i32* %13, align 4, !dbg !8143, !tbaa !7657
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 2, !dbg !8145
  store i8* %1, i8** %17, align 4, !dbg !8146, !tbaa !8072
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 3, !dbg !8147
  store i16 %2, i16* %18, align 4, !dbg !8148, !tbaa !7871
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !8149
  store volatile i16 %2, i16* %19, align 2, !dbg !8150, !tbaa !7874
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !8151
  store volatile i32 0, i32* %20, align 4, !dbg !8152, !tbaa !7669
  store volatile i32 33, i32* %4, align 4, !dbg !8153, !tbaa !7649
  %21 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !8154
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %21, align 4, !dbg !8154, !tbaa !8155
  %23 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 5, !dbg !8156
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMATransmitCplt, void (%struct.__DMA_HandleTypeDef*)** %23, align 4, !dbg !8157, !tbaa !8158
  %24 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 6, !dbg !8160
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMATxHalfCplt, void (%struct.__DMA_HandleTypeDef*)** %24, align 4, !dbg !8161, !tbaa !8162
  %25 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 7, !dbg !8163
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMAError, void (%struct.__DMA_HandleTypeDef*)** %25, align 4, !dbg !8164, !tbaa !8165
  %26 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 8, !dbg !8166
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %26, align 4, !dbg !8167, !tbaa !8168
  call void @llvm.dbg.value(metadata i32* undef, metadata !8129, metadata !DIExpression()), !dbg !8130
  %27 = ptrtoint i8* %1 to i32, !dbg !8169
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8170
  %29 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %28, align 4, !dbg !8170, !tbaa !7662
  %30 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %29, i32 0, i32 1, !dbg !8171
  %31 = ptrtoint i32* %30 to i32, !dbg !8172
  %32 = call i32 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* noundef %22, i32 noundef %27, i32 noundef %31, i32 noundef %9) #33, !dbg !8173
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %28, align 4, !dbg !8174, !tbaa !7662
  %34 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %33, i32 0, i32 0, !dbg !8174
  store volatile i32 -65, i32* %34, align 4, !dbg !8174, !tbaa !7934
  store i32 0, i32* %13, align 4, !dbg !8175, !tbaa !7657
  %35 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %33, i32 0, i32 5, !dbg !8177
  %36 = load volatile i32, i32* %35, align 4, !dbg !8177, !tbaa !4766
  %37 = or i32 %36, 128, !dbg !8177
  store volatile i32 %37, i32* %35, align 4, !dbg !8177, !tbaa !4766
  br label %38, !dbg !8178

38:                                               ; preds = %3, %12, %7, %16
  %39 = phi i32 [ 0, %16 ], [ 1, %7 ], [ 2, %12 ], [ 2, %3 ], !dbg !8179
  ret i32 %39, !dbg !8180
}

; Function Attrs: noinline nounwind
define internal void @UART_DMATransmitCplt(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #4 !dbg !8181 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !8185, metadata !DIExpression()), !dbg !8187
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !8188
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !8188
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !8188, !tbaa !8189
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !8186, metadata !DIExpression()), !dbg !8187
  %5 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 0, !dbg !8190
  %6 = load %struct.DMA_Channel_TypeDef*, %struct.DMA_Channel_TypeDef** %5, align 4, !dbg !8190, !tbaa !8192
  %7 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %6, i32 0, i32 0, !dbg !8193
  %8 = load volatile i32, i32* %7, align 4, !dbg !8193, !tbaa !4107
  %9 = and i32 %8, 32, !dbg !8194
  %10 = icmp eq i32 %9, 0, !dbg !8195
  br i1 %10, label %11, label %21, !dbg !8196

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !8197
  store volatile i16 0, i16* %12, align 2, !dbg !8199, !tbaa !7874
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 0, !dbg !8200
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %13, align 4, !dbg !8200, !tbaa !7662
  %15 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %14, i32 0, i32 5, !dbg !8200
  %16 = load volatile i32, i32* %15, align 4, !dbg !8200, !tbaa !4766
  %17 = and i32 %16, -129, !dbg !8200
  store volatile i32 %17, i32* %15, align 4, !dbg !8200, !tbaa !4766
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %14, i32 0, i32 3, !dbg !8201
  %19 = load volatile i32, i32* %18, align 4, !dbg !8201, !tbaa !4878
  %20 = or i32 %19, 64, !dbg !8201
  store volatile i32 %20, i32* %18, align 4, !dbg !8201, !tbaa !4878
  br label %22, !dbg !8202

21:                                               ; preds = %1
  call void @HAL_UART_TxCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !8203
  br label %22

22:                                               ; preds = %21, %11
  ret void, !dbg !8205
}

; Function Attrs: noinline nounwind
define internal void @UART_DMATxHalfCplt(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #4 !dbg !8206 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !8208, metadata !DIExpression()), !dbg !8210
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !8211
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !8211
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !8211, !tbaa !8189
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !8209, metadata !DIExpression()), !dbg !8210
  call void @HAL_UART_TxHalfCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !8212
  ret void, !dbg !8213
}

; Function Attrs: noinline nounwind
define internal void @UART_DMAError(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #4 !dbg !8214 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !8216, metadata !DIExpression()), !dbg !8219
  call void @llvm.dbg.value(metadata i32 0, metadata !8217, metadata !DIExpression()), !dbg !8219
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !8220
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !8220
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !8220, !tbaa !8189
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !8218, metadata !DIExpression()), !dbg !8219
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 0, !dbg !8221
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8221, !tbaa !7662
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %6, i32 0, i32 5, !dbg !8221
  %8 = load volatile i32, i32* %7, align 4, !dbg !8221, !tbaa !4766
  %9 = and i32 %8, 128, !dbg !8221
  %10 = icmp ne i32 %9, 0, !dbg !8221
  call void @llvm.dbg.value(metadata i1 %10, metadata !8217, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8219
  %11 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 11, !dbg !8222
  %12 = load volatile i32, i32* %11, align 4, !dbg !8222, !tbaa !7649
  %13 = icmp eq i32 %12, 33, !dbg !8224
  %14 = select i1 %13, i1 %10, i1 false, !dbg !8225
  br i1 %14, label %15, label %17, !dbg !8225

15:                                               ; preds = %1
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !8226
  store volatile i16 0, i16* %16, align 2, !dbg !8228, !tbaa !7874
  call fastcc void @UART_EndTxTransfer(%struct.__UART_HandleTypeDef* noundef %4), !dbg !8229
  br label %17, !dbg !8230

17:                                               ; preds = %15, %1
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8231, !tbaa !7662
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %18, i32 0, i32 5, !dbg !8231
  %20 = load volatile i32, i32* %19, align 4, !dbg !8231, !tbaa !4766
  %21 = and i32 %20, 64, !dbg !8231
  %22 = icmp ne i32 %21, 0, !dbg !8231
  call void @llvm.dbg.value(metadata i1 %22, metadata !8217, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8219
  %23 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !8232
  %24 = load volatile i32, i32* %23, align 4, !dbg !8232, !tbaa !7673
  %25 = icmp eq i32 %24, 34, !dbg !8234
  %26 = select i1 %25, i1 %22, i1 false, !dbg !8235
  br i1 %26, label %27, label %29, !dbg !8235

27:                                               ; preds = %17
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !8236
  store volatile i16 0, i16* %28, align 2, !dbg !8238, !tbaa !7990
  call fastcc void @UART_EndRxTransfer(%struct.__UART_HandleTypeDef* noundef %4), !dbg !8239
  br label %29, !dbg !8240

29:                                               ; preds = %27, %17
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 13, !dbg !8241
  %31 = load volatile i32, i32* %30, align 4, !dbg !8242, !tbaa !7669
  %32 = or i32 %31, 16, !dbg !8242
  store volatile i32 %32, i32* %30, align 4, !dbg !8242, !tbaa !7669
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !8243
  ret void, !dbg !8244
}

declare !dbg !8245 dso_local i32 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #32

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @UART_EndTxTransfer(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #15 !dbg !8248 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8250, metadata !DIExpression()), !dbg !8251
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8252
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !8252, !tbaa !7662
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !8252
  %5 = load volatile i32, i32* %4, align 4, !dbg !8252, !tbaa !4878
  %6 = and i32 %5, -193, !dbg !8252
  store volatile i32 %6, i32* %4, align 4, !dbg !8252, !tbaa !4878
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !8253
  store volatile i32 32, i32* %7, align 4, !dbg !8254, !tbaa !7649
  ret void, !dbg !8255
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @UART_EndRxTransfer(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #15 !dbg !8256 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8258, metadata !DIExpression()), !dbg !8259
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8260
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !8260, !tbaa !7662
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !8260
  %5 = load volatile i32, i32* %4, align 4, !dbg !8260, !tbaa !4878
  %6 = and i32 %5, -289, !dbg !8260
  store volatile i32 %6, i32* %4, align 4, !dbg !8260, !tbaa !4878
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !8261
  %8 = load volatile i32, i32* %7, align 4, !dbg !8261, !tbaa !4766
  %9 = and i32 %8, -2, !dbg !8261
  store volatile i32 %9, i32* %7, align 4, !dbg !8261, !tbaa !4766
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !8262
  store volatile i32 32, i32* %10, align 4, !dbg !8263, !tbaa !7673
  ret void, !dbg !8264
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #4 !dbg !8265 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8267, metadata !DIExpression()), !dbg !8268
  ret void, !dbg !8269
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_TxHalfCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #4 !dbg !8270 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8272, metadata !DIExpression()), !dbg !8273
  ret void, !dbg !8274
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_TxCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #4 !dbg !8275 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8277, metadata !DIExpression()), !dbg !8278
  ret void, !dbg !8279
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Receive_DMA(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #4 !dbg !8280 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8282, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.value(metadata i8* %1, metadata !8283, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.value(metadata i16 %2, metadata !8284, metadata !DIExpression()), !dbg !8290
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !8291
  %6 = load volatile i32, i32* %5, align 4, !dbg !8291, !tbaa !7673
  %7 = icmp eq i32 %6, 32, !dbg !8292
  br i1 %7, label %8, label %49, !dbg !8293

8:                                                ; preds = %3
  %9 = icmp eq i8* %1, null, !dbg !8294
  %10 = zext i16 %2 to i32
  %11 = icmp eq i16 %2, 0
  %12 = or i1 %9, %11, !dbg !8296
  br i1 %12, label %49, label %13, !dbg !8296

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !8297
  %15 = load i32, i32* %14, align 4, !dbg !8297, !tbaa !7657
  %16 = icmp eq i32 %15, 1, !dbg !8297
  br i1 %16, label %49, label %17, !dbg !8300

17:                                               ; preds = %13
  store i32 1, i32* %14, align 4, !dbg !8301, !tbaa !7657
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !8303
  store i8* %1, i8** %18, align 4, !dbg !8304, !tbaa !8108
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 6, !dbg !8305
  store i16 %2, i16* %19, align 4, !dbg !8306, !tbaa !7987
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !8307
  store volatile i32 0, i32* %20, align 4, !dbg !8308, !tbaa !7669
  store volatile i32 34, i32* %5, align 4, !dbg !8309, !tbaa !7673
  %21 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !8310
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %21, align 4, !dbg !8310, !tbaa !8311
  %23 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 5, !dbg !8312
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMAReceiveCplt, void (%struct.__DMA_HandleTypeDef*)** %23, align 4, !dbg !8313, !tbaa !8158
  %24 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 6, !dbg !8314
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMARxHalfCplt, void (%struct.__DMA_HandleTypeDef*)** %24, align 4, !dbg !8315, !tbaa !8162
  %25 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 7, !dbg !8316
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMAError, void (%struct.__DMA_HandleTypeDef*)** %25, align 4, !dbg !8317, !tbaa !8165
  %26 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 8, !dbg !8318
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %26, align 4, !dbg !8319, !tbaa !8168
  call void @llvm.dbg.value(metadata i32* undef, metadata !8285, metadata !DIExpression()), !dbg !8290
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8320
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %27, align 4, !dbg !8320, !tbaa !7662
  %29 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %28, i32 0, i32 1, !dbg !8321
  %30 = ptrtoint i32* %29 to i32, !dbg !8322
  %31 = ptrtoint i8* %1 to i32, !dbg !8323
  %32 = call i32 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* noundef %22, i32 noundef %30, i32 noundef %31, i32 noundef %10) #33, !dbg !8324
  %33 = bitcast i32* %4 to i8*, !dbg !8325
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33), !dbg !8325
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8286, metadata !DIExpression()), !dbg !8325
  store volatile i32 0, i32* %4, align 4, !dbg !8325, !tbaa !3438
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %27, align 4, !dbg !8325, !tbaa !7662
  %35 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 0, !dbg !8325
  %36 = load volatile i32, i32* %35, align 4, !dbg !8325, !tbaa !7934
  store volatile i32 %36, i32* %4, align 4, !dbg !8325, !tbaa !3438
  %37 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 1, !dbg !8325
  %38 = load volatile i32, i32* %37, align 4, !dbg !8325, !tbaa !7894
  store volatile i32 %38, i32* %4, align 4, !dbg !8325, !tbaa !3438
  %39 = load volatile i32, i32* %4, align 4, !dbg !8325, !tbaa !3438
  %40 = bitcast i32* %4 to i8*, !dbg !8326
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40), !dbg !8326
  store i32 0, i32* %14, align 4, !dbg !8327, !tbaa !7657
  %41 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 3, !dbg !8329
  %42 = load volatile i32, i32* %41, align 4, !dbg !8329, !tbaa !4878
  %43 = or i32 %42, 256, !dbg !8329
  store volatile i32 %43, i32* %41, align 4, !dbg !8329, !tbaa !4878
  %44 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 5, !dbg !8330
  %45 = load volatile i32, i32* %44, align 4, !dbg !8330, !tbaa !4766
  %46 = or i32 %45, 1, !dbg !8330
  store volatile i32 %46, i32* %44, align 4, !dbg !8330, !tbaa !4766
  %47 = load volatile i32, i32* %44, align 4, !dbg !8331, !tbaa !4766
  %48 = or i32 %47, 64, !dbg !8331
  store volatile i32 %48, i32* %44, align 4, !dbg !8331, !tbaa !4766
  br label %49, !dbg !8332

49:                                               ; preds = %3, %13, %8, %17
  %50 = phi i32 [ 0, %17 ], [ 1, %8 ], [ 2, %13 ], [ 2, %3 ], !dbg !8333
  ret i32 %50, !dbg !8334
}

; Function Attrs: noinline nounwind
define internal void @UART_DMAReceiveCplt(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #4 !dbg !8335 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !8337, metadata !DIExpression()), !dbg !8339
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !8340
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !8340
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !8340, !tbaa !8189
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !8338, metadata !DIExpression()), !dbg !8339
  %5 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 0, !dbg !8341
  %6 = load %struct.DMA_Channel_TypeDef*, %struct.DMA_Channel_TypeDef** %5, align 4, !dbg !8341, !tbaa !8192
  %7 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %6, i32 0, i32 0, !dbg !8343
  %8 = load volatile i32, i32* %7, align 4, !dbg !8343, !tbaa !4107
  %9 = and i32 %8, 32, !dbg !8344
  %10 = icmp eq i32 %9, 0, !dbg !8345
  br i1 %10, label %11, label %24, !dbg !8346

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !8347
  store volatile i16 0, i16* %12, align 2, !dbg !8349, !tbaa !7990
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 0, !dbg !8350
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %13, align 4, !dbg !8350, !tbaa !7662
  %15 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %14, i32 0, i32 3, !dbg !8350
  %16 = load volatile i32, i32* %15, align 4, !dbg !8350, !tbaa !4878
  %17 = and i32 %16, -257, !dbg !8350
  store volatile i32 %17, i32* %15, align 4, !dbg !8350, !tbaa !4878
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %14, i32 0, i32 5, !dbg !8351
  %19 = load volatile i32, i32* %18, align 4, !dbg !8351, !tbaa !4766
  %20 = and i32 %19, -2, !dbg !8351
  store volatile i32 %20, i32* %18, align 4, !dbg !8351, !tbaa !4766
  %21 = load volatile i32, i32* %18, align 4, !dbg !8352, !tbaa !4766
  %22 = and i32 %21, -65, !dbg !8352
  store volatile i32 %22, i32* %18, align 4, !dbg !8352, !tbaa !4766
  %23 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !8353
  store volatile i32 32, i32* %23, align 4, !dbg !8354, !tbaa !7673
  br label %24, !dbg !8355

24:                                               ; preds = %11, %1
  call void @HAL_UART_RxCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !8356
  ret void, !dbg !8357
}

; Function Attrs: noinline nounwind
define internal void @UART_DMARxHalfCplt(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #4 !dbg !8358 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !8360, metadata !DIExpression()), !dbg !8362
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !8363
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !8363
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !8363, !tbaa !8189
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !8361, metadata !DIExpression()), !dbg !8362
  call void @HAL_UART_RxHalfCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !8364
  ret void, !dbg !8365
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_RxHalfCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #4 !dbg !8366 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8368, metadata !DIExpression()), !dbg !8369
  ret void, !dbg !8370
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_RxCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #4 !dbg !8371 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8373, metadata !DIExpression()), !dbg !8374
  ret void, !dbg !8375
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_UART_DMAPause(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #15 !dbg !8376 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8378, metadata !DIExpression()), !dbg !8380
  call void @llvm.dbg.value(metadata i32 0, metadata !8379, metadata !DIExpression()), !dbg !8380
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !8381
  %3 = load i32, i32* %2, align 4, !dbg !8381, !tbaa !7657
  %4 = icmp eq i32 %3, 1, !dbg !8381
  br i1 %4, label %36, label %5, !dbg !8384

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !8385, !tbaa !7657
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8387
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8387, !tbaa !7662
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %7, i32 0, i32 5, !dbg !8387
  %9 = load volatile i32, i32* %8, align 4, !dbg !8387, !tbaa !4766
  %10 = and i32 %9, 128, !dbg !8387
  %11 = icmp ne i32 %10, 0, !dbg !8387
  call void @llvm.dbg.value(metadata i1 %11, metadata !8379, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8380
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !8388
  %13 = load volatile i32, i32* %12, align 4, !dbg !8388, !tbaa !7649
  %14 = icmp eq i32 %13, 33, !dbg !8390
  %15 = select i1 %14, i1 %11, i1 false, !dbg !8391
  br i1 %15, label %16, label %19, !dbg !8391

16:                                               ; preds = %5
  %17 = load volatile i32, i32* %8, align 4, !dbg !8392, !tbaa !4766
  %18 = and i32 %17, -129, !dbg !8392
  store volatile i32 %18, i32* %8, align 4, !dbg !8392, !tbaa !4766
  br label %19, !dbg !8394

19:                                               ; preds = %16, %5
  %20 = load volatile i32, i32* %8, align 4, !dbg !8395, !tbaa !4766
  %21 = and i32 %20, 64, !dbg !8395
  %22 = icmp ne i32 %21, 0, !dbg !8395
  call void @llvm.dbg.value(metadata i1 %22, metadata !8379, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8380
  %23 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !8396
  %24 = load volatile i32, i32* %23, align 4, !dbg !8396, !tbaa !7673
  %25 = icmp eq i32 %24, 34, !dbg !8398
  %26 = select i1 %25, i1 %22, i1 false, !dbg !8399
  br i1 %26, label %27, label %35, !dbg !8399

27:                                               ; preds = %19
  %28 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %7, i32 0, i32 3, !dbg !8400
  %29 = load volatile i32, i32* %28, align 4, !dbg !8400, !tbaa !4878
  %30 = and i32 %29, -257, !dbg !8400
  store volatile i32 %30, i32* %28, align 4, !dbg !8400, !tbaa !4878
  %31 = load volatile i32, i32* %8, align 4, !dbg !8402, !tbaa !4766
  %32 = and i32 %31, -2, !dbg !8402
  store volatile i32 %32, i32* %8, align 4, !dbg !8402, !tbaa !4766
  %33 = load volatile i32, i32* %8, align 4, !dbg !8403, !tbaa !4766
  %34 = and i32 %33, -65, !dbg !8403
  store volatile i32 %34, i32* %8, align 4, !dbg !8403, !tbaa !4766
  br label %35, !dbg !8404

35:                                               ; preds = %19, %27
  store i32 0, i32* %2, align 4, !dbg !8405, !tbaa !7657
  br label %36, !dbg !8407

36:                                               ; preds = %1, %35
  %37 = phi i32 [ 0, %35 ], [ 2, %1 ], !dbg !8380
  ret i32 %37, !dbg !8408
}

; Function Attrs: nofree noinline nounwind
define dso_local i32 @HAL_UART_DMAResume(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #18 !dbg !8409 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8411, metadata !DIExpression()), !dbg !8416
  %3 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !8417
  %4 = load i32, i32* %3, align 4, !dbg !8417, !tbaa !7657
  %5 = icmp eq i32 %4, 1, !dbg !8417
  br i1 %5, label %39, label %6, !dbg !8420

6:                                                ; preds = %1
  store i32 1, i32* %3, align 4, !dbg !8421, !tbaa !7657
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !8423
  %8 = load volatile i32, i32* %7, align 4, !dbg !8423, !tbaa !7649
  %9 = icmp eq i32 %8, 33, !dbg !8425
  br i1 %9, label %10, label %16, !dbg !8426

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8427
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %11, align 4, !dbg !8427, !tbaa !7662
  %13 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %12, i32 0, i32 5, !dbg !8427
  %14 = load volatile i32, i32* %13, align 4, !dbg !8427, !tbaa !4766
  %15 = or i32 %14, 128, !dbg !8427
  store volatile i32 %15, i32* %13, align 4, !dbg !8427, !tbaa !4766
  br label %16, !dbg !8429

16:                                               ; preds = %10, %6
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !8430
  %18 = load volatile i32, i32* %17, align 4, !dbg !8430, !tbaa !7673
  %19 = icmp eq i32 %18, 34, !dbg !8431
  br i1 %19, label %20, label %38, !dbg !8432

20:                                               ; preds = %16
  %21 = bitcast i32* %2 to i8*, !dbg !8433
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !8433
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8412, metadata !DIExpression()), !dbg !8433
  store volatile i32 0, i32* %2, align 4, !dbg !8433, !tbaa !3438
  %22 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8433
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !8433, !tbaa !7662
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 0, !dbg !8433
  %25 = load volatile i32, i32* %24, align 4, !dbg !8433, !tbaa !7934
  store volatile i32 %25, i32* %2, align 4, !dbg !8433, !tbaa !3438
  %26 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 1, !dbg !8433
  %27 = load volatile i32, i32* %26, align 4, !dbg !8433, !tbaa !7894
  store volatile i32 %27, i32* %2, align 4, !dbg !8433, !tbaa !3438
  %28 = load volatile i32, i32* %2, align 4, !dbg !8433, !tbaa !3438
  %29 = bitcast i32* %2 to i8*, !dbg !8434
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29), !dbg !8434
  %30 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 3, !dbg !8435
  %31 = load volatile i32, i32* %30, align 4, !dbg !8435, !tbaa !4878
  %32 = or i32 %31, 256, !dbg !8435
  store volatile i32 %32, i32* %30, align 4, !dbg !8435, !tbaa !4878
  %33 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 5, !dbg !8436
  %34 = load volatile i32, i32* %33, align 4, !dbg !8436, !tbaa !4766
  %35 = or i32 %34, 1, !dbg !8436
  store volatile i32 %35, i32* %33, align 4, !dbg !8436, !tbaa !4766
  %36 = load volatile i32, i32* %33, align 4, !dbg !8437, !tbaa !4766
  %37 = or i32 %36, 64, !dbg !8437
  store volatile i32 %37, i32* %33, align 4, !dbg !8437, !tbaa !4766
  br label %38, !dbg !8438

38:                                               ; preds = %16, %20
  store i32 0, i32* %3, align 4, !dbg !8439, !tbaa !7657
  br label %39, !dbg !8441

39:                                               ; preds = %1, %38
  %40 = phi i32 [ 0, %38 ], [ 2, %1 ], !dbg !8416
  ret i32 %40, !dbg !8442
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_DMAStop(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #4 !dbg !8443 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8445, metadata !DIExpression()), !dbg !8447
  call void @llvm.dbg.value(metadata i32 0, metadata !8446, metadata !DIExpression()), !dbg !8447
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8448
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !8448, !tbaa !7662
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !8448
  %5 = load volatile i32, i32* %4, align 4, !dbg !8448, !tbaa !4766
  %6 = and i32 %5, 128, !dbg !8448
  %7 = icmp ne i32 %6, 0, !dbg !8448
  call void @llvm.dbg.value(metadata i1 %7, metadata !8446, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8447
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !8449
  %9 = load volatile i32, i32* %8, align 4, !dbg !8449, !tbaa !7649
  %10 = icmp eq i32 %9, 33, !dbg !8451
  %11 = select i1 %10, i1 %7, i1 false, !dbg !8452
  br i1 %11, label %12, label %21, !dbg !8452

12:                                               ; preds = %1
  %13 = load volatile i32, i32* %4, align 4, !dbg !8453, !tbaa !4766
  %14 = and i32 %13, -129, !dbg !8453
  store volatile i32 %14, i32* %4, align 4, !dbg !8453, !tbaa !4766
  %15 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !8455
  %16 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %15, align 4, !dbg !8455, !tbaa !8155
  %17 = icmp eq %struct.__DMA_HandleTypeDef* %16, null, !dbg !8457
  br i1 %17, label %20, label %18, !dbg !8458

18:                                               ; preds = %12
  %19 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %16) #33, !dbg !8459
  br label %20, !dbg !8461

20:                                               ; preds = %18, %12
  call fastcc void @UART_EndTxTransfer(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8462
  br label %21, !dbg !8463

21:                                               ; preds = %20, %1
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !8464, !tbaa !7662
  %23 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %22, i32 0, i32 5, !dbg !8464
  %24 = load volatile i32, i32* %23, align 4, !dbg !8464, !tbaa !4766
  %25 = and i32 %24, 64, !dbg !8464
  %26 = icmp ne i32 %25, 0, !dbg !8464
  call void @llvm.dbg.value(metadata i1 %26, metadata !8446, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8447
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !8465
  %28 = load volatile i32, i32* %27, align 4, !dbg !8465, !tbaa !7673
  %29 = icmp eq i32 %28, 34, !dbg !8467
  %30 = select i1 %29, i1 %26, i1 false, !dbg !8468
  br i1 %30, label %31, label %40, !dbg !8468

31:                                               ; preds = %21
  %32 = load volatile i32, i32* %23, align 4, !dbg !8469, !tbaa !4766
  %33 = and i32 %32, -65, !dbg !8469
  store volatile i32 %33, i32* %23, align 4, !dbg !8469, !tbaa !4766
  %34 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !8471
  %35 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %34, align 4, !dbg !8471, !tbaa !8311
  %36 = icmp eq %struct.__DMA_HandleTypeDef* %35, null, !dbg !8473
  br i1 %36, label %39, label %37, !dbg !8474

37:                                               ; preds = %31
  %38 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %35) #33, !dbg !8475
  br label %39, !dbg !8477

39:                                               ; preds = %37, %31
  call fastcc void @UART_EndRxTransfer(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8478
  br label %40, !dbg !8479

40:                                               ; preds = %39, %21
  ret i32 0, !dbg !8480
}

declare !dbg !8481 dso_local i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef) local_unnamed_addr #32

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Abort(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #4 !dbg !8484 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8486, metadata !DIExpression()), !dbg !8487
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8488
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !8488, !tbaa !7662
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !8488
  %5 = load volatile i32, i32* %4, align 4, !dbg !8488, !tbaa !4878
  %6 = and i32 %5, -481, !dbg !8488
  store volatile i32 %6, i32* %4, align 4, !dbg !8488, !tbaa !4878
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !8489
  %8 = load volatile i32, i32* %7, align 4, !dbg !8489, !tbaa !4766
  %9 = and i32 %8, -2, !dbg !8489
  store volatile i32 %9, i32* %7, align 4, !dbg !8489, !tbaa !4766
  %10 = load volatile i32, i32* %7, align 4, !dbg !8490, !tbaa !4766
  %11 = and i32 %10, 128, !dbg !8490
  %12 = icmp eq i32 %11, 0, !dbg !8490
  br i1 %12, label %29, label %13, !dbg !8492

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %7, align 4, !dbg !8493, !tbaa !4766
  %15 = and i32 %14, -129, !dbg !8493
  store volatile i32 %15, i32* %7, align 4, !dbg !8493, !tbaa !4766
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !8495
  %17 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !8495, !tbaa !8155
  %18 = icmp eq %struct.__DMA_HandleTypeDef* %17, null, !dbg !8497
  br i1 %18, label %29, label %19, !dbg !8498

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %17, i32 0, i32 8, !dbg !8499
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %20, align 4, !dbg !8501, !tbaa !8168
  %21 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %17) #33, !dbg !8502
  %22 = icmp eq i32 %21, 0, !dbg !8504
  br i1 %22, label %29, label %23, !dbg !8505

23:                                               ; preds = %19
  %24 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !8506, !tbaa !8155
  %25 = call i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef %24) #33, !dbg !8509
  %26 = icmp eq i32 %25, 32, !dbg !8510
  br i1 %26, label %27, label %29, !dbg !8511

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !8512
  store volatile i32 16, i32* %28, align 4, !dbg !8514, !tbaa !7669
  br label %57, !dbg !8515

29:                                               ; preds = %13, %23, %19, %1
  %30 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !8516, !tbaa !7662
  %31 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %30, i32 0, i32 5, !dbg !8516
  %32 = load volatile i32, i32* %31, align 4, !dbg !8516, !tbaa !4766
  %33 = and i32 %32, 64, !dbg !8516
  %34 = icmp eq i32 %33, 0, !dbg !8516
  br i1 %34, label %51, label %35, !dbg !8518

35:                                               ; preds = %29
  %36 = load volatile i32, i32* %31, align 4, !dbg !8519, !tbaa !4766
  %37 = and i32 %36, -65, !dbg !8519
  store volatile i32 %37, i32* %31, align 4, !dbg !8519, !tbaa !4766
  %38 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !8521
  %39 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %38, align 4, !dbg !8521, !tbaa !8311
  %40 = icmp eq %struct.__DMA_HandleTypeDef* %39, null, !dbg !8523
  br i1 %40, label %51, label %41, !dbg !8524

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %39, i32 0, i32 8, !dbg !8525
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %42, align 4, !dbg !8527, !tbaa !8168
  %43 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %39) #33, !dbg !8528
  %44 = icmp eq i32 %43, 0, !dbg !8530
  br i1 %44, label %51, label %45, !dbg !8531

45:                                               ; preds = %41
  %46 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %38, align 4, !dbg !8532, !tbaa !8311
  %47 = call i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef %46) #33, !dbg !8535
  %48 = icmp eq i32 %47, 32, !dbg !8536
  br i1 %48, label %49, label %51, !dbg !8537

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !8538
  store volatile i32 16, i32* %50, align 4, !dbg !8540, !tbaa !7669
  br label %57, !dbg !8541

51:                                               ; preds = %35, %45, %41, %29
  %52 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !8542
  store volatile i16 0, i16* %52, align 2, !dbg !8543, !tbaa !7874
  %53 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !8544
  store volatile i16 0, i16* %53, align 2, !dbg !8545, !tbaa !7990
  %54 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !8546
  store volatile i32 0, i32* %54, align 4, !dbg !8547, !tbaa !7669
  %55 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !8548
  store volatile i32 32, i32* %55, align 4, !dbg !8549, !tbaa !7673
  %56 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !8550
  store volatile i32 32, i32* %56, align 4, !dbg !8551, !tbaa !7649
  br label %57, !dbg !8552

57:                                               ; preds = %51, %49, %27
  %58 = phi i32 [ 3, %27 ], [ 3, %49 ], [ 0, %51 ], !dbg !8487
  ret i32 %58, !dbg !8553
}

declare !dbg !8554 dso_local i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef) local_unnamed_addr #32

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_AbortTransmit(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #4 !dbg !8557 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8559, metadata !DIExpression()), !dbg !8560
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8561
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !8561, !tbaa !7662
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !8561
  %5 = load volatile i32, i32* %4, align 4, !dbg !8561, !tbaa !4878
  %6 = and i32 %5, -193, !dbg !8561
  store volatile i32 %6, i32* %4, align 4, !dbg !8561, !tbaa !4878
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !8562
  %8 = load volatile i32, i32* %7, align 4, !dbg !8562, !tbaa !4766
  %9 = and i32 %8, 128, !dbg !8562
  %10 = icmp eq i32 %9, 0, !dbg !8562
  br i1 %10, label %27, label %11, !dbg !8564

11:                                               ; preds = %1
  %12 = load volatile i32, i32* %7, align 4, !dbg !8565, !tbaa !4766
  %13 = and i32 %12, -129, !dbg !8565
  store volatile i32 %13, i32* %7, align 4, !dbg !8565, !tbaa !4766
  %14 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !8567
  %15 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %14, align 4, !dbg !8567, !tbaa !8155
  %16 = icmp eq %struct.__DMA_HandleTypeDef* %15, null, !dbg !8569
  br i1 %16, label %27, label %17, !dbg !8570

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %15, i32 0, i32 8, !dbg !8571
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %18, align 4, !dbg !8573, !tbaa !8168
  %19 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %15) #33, !dbg !8574
  %20 = icmp eq i32 %19, 0, !dbg !8576
  br i1 %20, label %27, label %21, !dbg !8577

21:                                               ; preds = %17
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %14, align 4, !dbg !8578, !tbaa !8155
  %23 = call i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef %22) #33, !dbg !8581
  %24 = icmp eq i32 %23, 32, !dbg !8582
  br i1 %24, label %25, label %27, !dbg !8583

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !8584
  store volatile i32 16, i32* %26, align 4, !dbg !8586, !tbaa !7669
  br label %30, !dbg !8587

27:                                               ; preds = %11, %21, %17, %1
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !8588
  store volatile i16 0, i16* %28, align 2, !dbg !8589, !tbaa !7874
  %29 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !8590
  store volatile i32 32, i32* %29, align 4, !dbg !8591, !tbaa !7649
  br label %30, !dbg !8592

30:                                               ; preds = %27, %25
  %31 = phi i32 [ 3, %25 ], [ 0, %27 ], !dbg !8560
  ret i32 %31, !dbg !8593
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_AbortReceive(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #4 !dbg !8594 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8596, metadata !DIExpression()), !dbg !8597
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8598
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !8598, !tbaa !7662
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !8598
  %5 = load volatile i32, i32* %4, align 4, !dbg !8598, !tbaa !4878
  %6 = and i32 %5, -289, !dbg !8598
  store volatile i32 %6, i32* %4, align 4, !dbg !8598, !tbaa !4878
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !8599
  %8 = load volatile i32, i32* %7, align 4, !dbg !8599, !tbaa !4766
  %9 = and i32 %8, -2, !dbg !8599
  store volatile i32 %9, i32* %7, align 4, !dbg !8599, !tbaa !4766
  %10 = load volatile i32, i32* %7, align 4, !dbg !8600, !tbaa !4766
  %11 = and i32 %10, 64, !dbg !8600
  %12 = icmp eq i32 %11, 0, !dbg !8600
  br i1 %12, label %29, label %13, !dbg !8602

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %7, align 4, !dbg !8603, !tbaa !4766
  %15 = and i32 %14, -65, !dbg !8603
  store volatile i32 %15, i32* %7, align 4, !dbg !8603, !tbaa !4766
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !8605
  %17 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !8605, !tbaa !8311
  %18 = icmp eq %struct.__DMA_HandleTypeDef* %17, null, !dbg !8607
  br i1 %18, label %29, label %19, !dbg !8608

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %17, i32 0, i32 8, !dbg !8609
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %20, align 4, !dbg !8611, !tbaa !8168
  %21 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %17) #33, !dbg !8612
  %22 = icmp eq i32 %21, 0, !dbg !8614
  br i1 %22, label %29, label %23, !dbg !8615

23:                                               ; preds = %19
  %24 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !8616, !tbaa !8311
  %25 = call i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef %24) #33, !dbg !8619
  %26 = icmp eq i32 %25, 32, !dbg !8620
  br i1 %26, label %27, label %29, !dbg !8621

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !8622
  store volatile i32 16, i32* %28, align 4, !dbg !8624, !tbaa !7669
  br label %32, !dbg !8625

29:                                               ; preds = %13, %23, %19, %1
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !8626
  store volatile i16 0, i16* %30, align 2, !dbg !8627, !tbaa !7990
  %31 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !8628
  store volatile i32 32, i32* %31, align 4, !dbg !8629, !tbaa !7673
  br label %32, !dbg !8630

32:                                               ; preds = %29, %27
  %33 = phi i32 [ 3, %27 ], [ 0, %29 ], !dbg !8597
  ret i32 %33, !dbg !8631
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Abort_IT(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #4 !dbg !8632 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8634, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i32 1, metadata !8635, metadata !DIExpression()), !dbg !8636
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8637
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !8637, !tbaa !7662
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !8637
  %5 = load volatile i32, i32* %4, align 4, !dbg !8637, !tbaa !4878
  %6 = and i32 %5, -481, !dbg !8637
  store volatile i32 %6, i32* %4, align 4, !dbg !8637, !tbaa !4878
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !8638
  %8 = load volatile i32, i32* %7, align 4, !dbg !8638, !tbaa !4766
  %9 = and i32 %8, -2, !dbg !8638
  store volatile i32 %9, i32* %7, align 4, !dbg !8638, !tbaa !4766
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !8639
  %11 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %10, align 4, !dbg !8639, !tbaa !8155
  %12 = icmp eq %struct.__DMA_HandleTypeDef* %11, null, !dbg !8641
  br i1 %12, label %19, label %13, !dbg !8642

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %7, align 4, !dbg !8643, !tbaa !4766
  %15 = and i32 %14, 128, !dbg !8643
  %16 = icmp eq i32 %15, 0, !dbg !8643
  %17 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %11, i32 0, i32 8, !dbg !8646
  %18 = select i1 %16, void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)* @UART_DMATxAbortCallback
  store void (%struct.__DMA_HandleTypeDef*)* %18, void (%struct.__DMA_HandleTypeDef*)** %17, align 4, !dbg !8646, !tbaa !8168
  br label %19, !dbg !8647

19:                                               ; preds = %13, %1
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !8647
  %21 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %20, align 4, !dbg !8647, !tbaa !8311
  %22 = icmp eq %struct.__DMA_HandleTypeDef* %21, null, !dbg !8649
  br i1 %22, label %29, label %23, !dbg !8650

23:                                               ; preds = %19
  %24 = load volatile i32, i32* %7, align 4, !dbg !8651, !tbaa !4766
  %25 = and i32 %24, 64, !dbg !8651
  %26 = icmp eq i32 %25, 0, !dbg !8651
  %27 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %21, i32 0, i32 8, !dbg !8654
  %28 = select i1 %26, void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)* @UART_DMARxAbortCallback
  store void (%struct.__DMA_HandleTypeDef*)* %28, void (%struct.__DMA_HandleTypeDef*)** %27, align 4, !dbg !8654, !tbaa !8168
  br label %29, !dbg !8655

29:                                               ; preds = %23, %19
  %30 = load volatile i32, i32* %7, align 4, !dbg !8655, !tbaa !4766
  %31 = and i32 %30, 128, !dbg !8655
  %32 = icmp eq i32 %31, 0, !dbg !8655
  br i1 %32, label %42, label %33, !dbg !8657

33:                                               ; preds = %29
  %34 = load volatile i32, i32* %7, align 4, !dbg !8658, !tbaa !4766
  %35 = and i32 %34, -129, !dbg !8658
  store volatile i32 %35, i32* %7, align 4, !dbg !8658, !tbaa !4766
  br i1 %12, label %42, label %36, !dbg !8660

36:                                               ; preds = %33
  %37 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %11) #33, !dbg !8661
  %38 = icmp eq i32 %37, 0, !dbg !8665
  br i1 %38, label %42, label %39, !dbg !8666

39:                                               ; preds = %36
  %40 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %10, align 4, !dbg !8667, !tbaa !8155
  %41 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %40, i32 0, i32 8, !dbg !8669
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %41, align 4, !dbg !8670, !tbaa !8168
  br label %42, !dbg !8671

42:                                               ; preds = %36, %33, %39, %29
  %43 = phi i32 [ 1, %39 ], [ 1, %33 ], [ 1, %29 ], [ 0, %36 ], !dbg !8636
  call void @llvm.dbg.value(metadata i32 %43, metadata !8635, metadata !DIExpression()), !dbg !8636
  %44 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !8672, !tbaa !7662
  %45 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %44, i32 0, i32 5, !dbg !8672
  %46 = load volatile i32, i32* %45, align 4, !dbg !8672, !tbaa !4766
  %47 = and i32 %46, 64, !dbg !8672
  %48 = icmp eq i32 %47, 0, !dbg !8672
  br i1 %48, label %60, label %49, !dbg !8674

49:                                               ; preds = %42
  %50 = load volatile i32, i32* %45, align 4, !dbg !8675, !tbaa !4766
  %51 = and i32 %50, -65, !dbg !8675
  store volatile i32 %51, i32* %45, align 4, !dbg !8675, !tbaa !4766
  %52 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %20, align 4, !dbg !8677, !tbaa !8311
  %53 = icmp eq %struct.__DMA_HandleTypeDef* %52, null, !dbg !8679
  br i1 %53, label %60, label %54, !dbg !8680

54:                                               ; preds = %49
  %55 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %52) #33, !dbg !8681
  %56 = icmp eq i32 %55, 0, !dbg !8684
  br i1 %56, label %60, label %57, !dbg !8685

57:                                               ; preds = %54
  %58 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %20, align 4, !dbg !8686, !tbaa !8311
  %59 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %58, i32 0, i32 8, !dbg !8688
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %59, align 4, !dbg !8689, !tbaa !8168
  call void @llvm.dbg.value(metadata i32 1, metadata !8635, metadata !DIExpression()), !dbg !8636
  br label %60, !dbg !8690

60:                                               ; preds = %54, %49, %57, %42
  %61 = phi i32 [ 1, %57 ], [ %43, %49 ], [ %43, %42 ], [ 0, %54 ], !dbg !8636
  call void @llvm.dbg.value(metadata i32 %61, metadata !8635, metadata !DIExpression()), !dbg !8636
  %62 = icmp eq i32 %61, 1, !dbg !8691
  br i1 %62, label %63, label %69, !dbg !8693

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !8694
  store volatile i16 0, i16* %64, align 2, !dbg !8696, !tbaa !7874
  %65 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !8697
  store volatile i16 0, i16* %65, align 2, !dbg !8698, !tbaa !7990
  %66 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !8699
  store volatile i32 0, i32* %66, align 4, !dbg !8700, !tbaa !7669
  %67 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !8701
  store volatile i32 32, i32* %67, align 4, !dbg !8702, !tbaa !7649
  %68 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !8703
  store volatile i32 32, i32* %68, align 4, !dbg !8704, !tbaa !7673
  call void @HAL_UART_AbortCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8705
  br label %69, !dbg !8706

69:                                               ; preds = %63, %60
  ret i32 0, !dbg !8707
}

; Function Attrs: noinline nounwind
define internal void @UART_DMATxAbortCallback(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #4 !dbg !8708 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !8710, metadata !DIExpression()), !dbg !8712
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !8713
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !8713
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !8713, !tbaa !8189
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !8711, metadata !DIExpression()), !dbg !8712
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 8, !dbg !8714
  %6 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %5, align 4, !dbg !8714, !tbaa !8155
  %7 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %6, i32 0, i32 8, !dbg !8715
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %7, align 4, !dbg !8716, !tbaa !8168
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 9, !dbg !8717
  %9 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %8, align 4, !dbg !8717, !tbaa !8311
  %10 = icmp eq %struct.__DMA_HandleTypeDef* %9, null, !dbg !8719
  br i1 %10, label %15, label %11, !dbg !8720

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %9, i32 0, i32 8, !dbg !8721
  %13 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %12, align 4, !dbg !8721, !tbaa !8168
  %14 = icmp eq void (%struct.__DMA_HandleTypeDef*)* %13, null, !dbg !8724
  br i1 %14, label %15, label %21, !dbg !8725

15:                                               ; preds = %11, %1
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !8726
  store volatile i16 0, i16* %16, align 2, !dbg !8727, !tbaa !7874
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !8728
  store volatile i16 0, i16* %17, align 2, !dbg !8729, !tbaa !7990
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 13, !dbg !8730
  store volatile i32 0, i32* %18, align 4, !dbg !8731, !tbaa !7669
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 11, !dbg !8732
  store volatile i32 32, i32* %19, align 4, !dbg !8733, !tbaa !7649
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !8734
  store volatile i32 32, i32* %20, align 4, !dbg !8735, !tbaa !7673
  call void @HAL_UART_AbortCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !8736
  br label %21, !dbg !8737

21:                                               ; preds = %11, %15
  ret void, !dbg !8737
}

; Function Attrs: noinline nounwind
define internal void @UART_DMARxAbortCallback(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #4 !dbg !8738 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !8740, metadata !DIExpression()), !dbg !8742
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !8743
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !8743
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !8743, !tbaa !8189
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !8741, metadata !DIExpression()), !dbg !8742
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 9, !dbg !8744
  %6 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %5, align 4, !dbg !8744, !tbaa !8311
  %7 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %6, i32 0, i32 8, !dbg !8745
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %7, align 4, !dbg !8746, !tbaa !8168
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 8, !dbg !8747
  %9 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %8, align 4, !dbg !8747, !tbaa !8155
  %10 = icmp eq %struct.__DMA_HandleTypeDef* %9, null, !dbg !8749
  br i1 %10, label %15, label %11, !dbg !8750

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %9, i32 0, i32 8, !dbg !8751
  %13 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %12, align 4, !dbg !8751, !tbaa !8168
  %14 = icmp eq void (%struct.__DMA_HandleTypeDef*)* %13, null, !dbg !8754
  br i1 %14, label %15, label %21, !dbg !8755

15:                                               ; preds = %11, %1
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !8756
  store volatile i16 0, i16* %16, align 2, !dbg !8757, !tbaa !7874
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !8758
  store volatile i16 0, i16* %17, align 2, !dbg !8759, !tbaa !7990
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 13, !dbg !8760
  store volatile i32 0, i32* %18, align 4, !dbg !8761, !tbaa !7669
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 11, !dbg !8762
  store volatile i32 32, i32* %19, align 4, !dbg !8763, !tbaa !7649
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !8764
  store volatile i32 32, i32* %20, align 4, !dbg !8765, !tbaa !7673
  call void @HAL_UART_AbortCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !8766
  br label %21, !dbg !8767

21:                                               ; preds = %11, %15
  ret void, !dbg !8767
}

declare !dbg !8768 dso_local i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef) local_unnamed_addr #32

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_AbortCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #4 !dbg !8769 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8771, metadata !DIExpression()), !dbg !8772
  ret void, !dbg !8773
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_AbortTransmit_IT(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #4 !dbg !8774 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8776, metadata !DIExpression()), !dbg !8777
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8778
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !8778, !tbaa !7662
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !8778
  %5 = load volatile i32, i32* %4, align 4, !dbg !8778, !tbaa !4878
  %6 = and i32 %5, -193, !dbg !8778
  store volatile i32 %6, i32* %4, align 4, !dbg !8778, !tbaa !4878
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !8779
  %8 = load volatile i32, i32* %7, align 4, !dbg !8779, !tbaa !4766
  %9 = and i32 %8, 128, !dbg !8779
  %10 = icmp eq i32 %9, 0, !dbg !8779
  br i1 %10, label %28, label %11, !dbg !8781

11:                                               ; preds = %1
  %12 = load volatile i32, i32* %7, align 4, !dbg !8782, !tbaa !4766
  %13 = and i32 %12, -129, !dbg !8782
  store volatile i32 %13, i32* %7, align 4, !dbg !8782, !tbaa !4766
  %14 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !8784
  %15 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %14, align 4, !dbg !8784, !tbaa !8155
  %16 = icmp eq %struct.__DMA_HandleTypeDef* %15, null, !dbg !8786
  br i1 %16, label %25, label %17, !dbg !8787

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %15, i32 0, i32 8, !dbg !8788
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMATxOnlyAbortCallback, void (%struct.__DMA_HandleTypeDef*)** %18, align 4, !dbg !8790, !tbaa !8168
  %19 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %15) #33, !dbg !8791
  %20 = icmp eq i32 %19, 0, !dbg !8793
  br i1 %20, label %31, label %21, !dbg !8794

21:                                               ; preds = %17
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %14, align 4, !dbg !8795, !tbaa !8155
  %23 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 8, !dbg !8797
  %24 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %23, align 4, !dbg !8797, !tbaa !8168
  call void %24(%struct.__DMA_HandleTypeDef* noundef %22) #33, !dbg !8798
  br label %31, !dbg !8799

25:                                               ; preds = %11
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !8800
  store volatile i16 0, i16* %26, align 2, !dbg !8802, !tbaa !7874
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !8803
  store volatile i32 32, i32* %27, align 4, !dbg !8804, !tbaa !7649
  call void @HAL_UART_AbortTransmitCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8805
  br label %31

28:                                               ; preds = %1
  %29 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !8806
  store volatile i16 0, i16* %29, align 2, !dbg !8808, !tbaa !7874
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !8809
  store volatile i32 32, i32* %30, align 4, !dbg !8810, !tbaa !7649
  call void @HAL_UART_AbortTransmitCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8811
  br label %31

31:                                               ; preds = %25, %21, %17, %28
  ret i32 0, !dbg !8812
}

; Function Attrs: noinline nounwind
define internal void @UART_DMATxOnlyAbortCallback(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #4 !dbg !8813 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !8815, metadata !DIExpression()), !dbg !8817
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !8818
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !8818
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !8818, !tbaa !8189
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !8816, metadata !DIExpression()), !dbg !8817
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !8819
  store volatile i16 0, i16* %5, align 2, !dbg !8820, !tbaa !7874
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 11, !dbg !8821
  store volatile i32 32, i32* %6, align 4, !dbg !8822, !tbaa !7649
  call void @HAL_UART_AbortTransmitCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !8823
  ret void, !dbg !8824
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_AbortTransmitCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #4 !dbg !8825 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8827, metadata !DIExpression()), !dbg !8828
  ret void, !dbg !8829
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_AbortReceive_IT(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #4 !dbg !8830 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8832, metadata !DIExpression()), !dbg !8833
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8834
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !8834, !tbaa !7662
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !8834
  %5 = load volatile i32, i32* %4, align 4, !dbg !8834, !tbaa !4878
  %6 = and i32 %5, -289, !dbg !8834
  store volatile i32 %6, i32* %4, align 4, !dbg !8834, !tbaa !4878
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !8835
  %8 = load volatile i32, i32* %7, align 4, !dbg !8835, !tbaa !4766
  %9 = and i32 %8, -2, !dbg !8835
  store volatile i32 %9, i32* %7, align 4, !dbg !8835, !tbaa !4766
  %10 = load volatile i32, i32* %7, align 4, !dbg !8836, !tbaa !4766
  %11 = and i32 %10, 64, !dbg !8836
  %12 = icmp eq i32 %11, 0, !dbg !8836
  br i1 %12, label %30, label %13, !dbg !8838

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %7, align 4, !dbg !8839, !tbaa !4766
  %15 = and i32 %14, -65, !dbg !8839
  store volatile i32 %15, i32* %7, align 4, !dbg !8839, !tbaa !4766
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !8841
  %17 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !8841, !tbaa !8311
  %18 = icmp eq %struct.__DMA_HandleTypeDef* %17, null, !dbg !8843
  br i1 %18, label %27, label %19, !dbg !8844

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %17, i32 0, i32 8, !dbg !8845
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMARxOnlyAbortCallback, void (%struct.__DMA_HandleTypeDef*)** %20, align 4, !dbg !8847, !tbaa !8168
  %21 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %17) #33, !dbg !8848
  %22 = icmp eq i32 %21, 0, !dbg !8850
  br i1 %22, label %33, label %23, !dbg !8851

23:                                               ; preds = %19
  %24 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !8852, !tbaa !8311
  %25 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %24, i32 0, i32 8, !dbg !8854
  %26 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %25, align 4, !dbg !8854, !tbaa !8168
  call void %26(%struct.__DMA_HandleTypeDef* noundef %24) #33, !dbg !8855
  br label %33, !dbg !8856

27:                                               ; preds = %13
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !8857
  store volatile i16 0, i16* %28, align 2, !dbg !8859, !tbaa !7990
  %29 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !8860
  store volatile i32 32, i32* %29, align 4, !dbg !8861, !tbaa !7673
  call void @HAL_UART_AbortReceiveCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8862
  br label %33

30:                                               ; preds = %1
  %31 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !8863
  store volatile i16 0, i16* %31, align 2, !dbg !8865, !tbaa !7990
  %32 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !8866
  store volatile i32 32, i32* %32, align 4, !dbg !8867, !tbaa !7673
  call void @HAL_UART_AbortReceiveCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8868
  br label %33

33:                                               ; preds = %27, %23, %19, %30
  ret i32 0, !dbg !8869
}

; Function Attrs: noinline nounwind
define internal void @UART_DMARxOnlyAbortCallback(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #4 !dbg !8870 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !8872, metadata !DIExpression()), !dbg !8874
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !8875
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !8875
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !8875, !tbaa !8189
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !8873, metadata !DIExpression()), !dbg !8874
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !8876
  store volatile i16 0, i16* %5, align 2, !dbg !8877, !tbaa !7990
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !8878
  store volatile i32 32, i32* %6, align 4, !dbg !8879, !tbaa !7673
  call void @HAL_UART_AbortReceiveCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !8880
  ret void, !dbg !8881
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_AbortReceiveCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #4 !dbg !8882 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8884, metadata !DIExpression()), !dbg !8885
  ret void, !dbg !8886
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_UART_IRQHandler(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #4 !dbg !8887 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8889, metadata !DIExpression()), !dbg !8895
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8896
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !8896, !tbaa !7662
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 0, !dbg !8896
  %5 = load volatile i32, i32* %4, align 4, !dbg !8896, !tbaa !7934
  call void @llvm.dbg.value(metadata i32 %5, metadata !8890, metadata !DIExpression()), !dbg !8895
  %6 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !8897
  %7 = load volatile i32, i32* %6, align 4, !dbg !8897, !tbaa !4878
  call void @llvm.dbg.value(metadata i32 %7, metadata !8891, metadata !DIExpression()), !dbg !8895
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !8898
  %9 = load volatile i32, i32* %8, align 4, !dbg !8898, !tbaa !4766
  call void @llvm.dbg.value(metadata i32 %9, metadata !8892, metadata !DIExpression()), !dbg !8895
  call void @llvm.dbg.value(metadata i32 0, metadata !8893, metadata !DIExpression()), !dbg !8895
  call void @llvm.dbg.value(metadata i32 0, metadata !8894, metadata !DIExpression()), !dbg !8895
  call void @llvm.dbg.value(metadata i32 %5, metadata !8893, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !8895
  %10 = and i32 %5, 32
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %5, 47, !dbg !8899
  %13 = icmp ne i32 %12, 32, !dbg !8899
  %14 = and i32 %7, 32
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %13, i1 true, i1 %15, !dbg !8899
  br i1 %16, label %18, label %17, !dbg !8899

17:                                               ; preds = %1
  call fastcc void @UART_Receive_IT(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8900
  br label %115, !dbg !8905

18:                                               ; preds = %1
  %19 = and i32 %5, 15, !dbg !8906
  call void @llvm.dbg.value(metadata i32 %19, metadata !8893, metadata !DIExpression()), !dbg !8895
  %20 = icmp eq i32 %19, 0, !dbg !8907
  br i1 %20, label %101, label %21, !dbg !8909

21:                                               ; preds = %18
  %22 = and i32 %9, 1, !dbg !8910
  %23 = icmp eq i32 %22, 0, !dbg !8911
  %24 = and i32 %7, 288
  %25 = icmp eq i32 %24, 0
  %26 = select i1 %23, i1 %25, i1 false, !dbg !8912
  br i1 %26, label %101, label %27, !dbg !8912

27:                                               ; preds = %21
  %28 = and i32 %5, 1, !dbg !8913
  %29 = icmp eq i32 %28, 0, !dbg !8916
  %30 = and i32 %7, 256
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %29, i1 true, i1 %31, !dbg !8917
  br i1 %32, label %37, label %33, !dbg !8917

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !8918
  %35 = load volatile i32, i32* %34, align 4, !dbg !8920, !tbaa !7669
  %36 = or i32 %35, 1, !dbg !8920
  store volatile i32 %36, i32* %34, align 4, !dbg !8920, !tbaa !7669
  br label %37, !dbg !8921

37:                                               ; preds = %33, %27
  %38 = and i32 %5, 4, !dbg !8922
  %39 = icmp eq i32 %38, 0, !dbg !8924
  %40 = select i1 %39, i1 true, i1 %23, !dbg !8925
  br i1 %40, label %45, label %41, !dbg !8925

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !8926
  %43 = load volatile i32, i32* %42, align 4, !dbg !8928, !tbaa !7669
  %44 = or i32 %43, 2, !dbg !8928
  store volatile i32 %44, i32* %42, align 4, !dbg !8928, !tbaa !7669
  br label %45, !dbg !8929

45:                                               ; preds = %37, %41
  %46 = and i32 %5, 2, !dbg !8930
  %47 = icmp eq i32 %46, 0, !dbg !8932
  %48 = select i1 %47, i1 true, i1 %23, !dbg !8933
  br i1 %48, label %53, label %49, !dbg !8933

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !8934
  %51 = load volatile i32, i32* %50, align 4, !dbg !8936, !tbaa !7669
  %52 = or i32 %51, 4, !dbg !8936
  store volatile i32 %52, i32* %50, align 4, !dbg !8936, !tbaa !7669
  br label %53, !dbg !8937

53:                                               ; preds = %45, %49
  %54 = and i32 %5, 8, !dbg !8938
  %55 = icmp eq i32 %54, 0, !dbg !8940
  %56 = select i1 %55, i1 true, i1 %23, !dbg !8941
  br i1 %56, label %61, label %57, !dbg !8941

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !8942
  %59 = load volatile i32, i32* %58, align 4, !dbg !8944, !tbaa !7669
  %60 = or i32 %59, 8, !dbg !8944
  store volatile i32 %60, i32* %58, align 4, !dbg !8944, !tbaa !7669
  br label %61, !dbg !8945

61:                                               ; preds = %53, %57
  %62 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !8946
  %63 = load volatile i32, i32* %62, align 4, !dbg !8946, !tbaa !7669
  %64 = icmp eq i32 %63, 0, !dbg !8948
  br i1 %64, label %115, label %65, !dbg !8949

65:                                               ; preds = %61
  %66 = select i1 %11, i1 true, i1 %15, !dbg !8950
  br i1 %66, label %68, label %67, !dbg !8950

67:                                               ; preds = %65
  call fastcc void @UART_Receive_IT(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8953
  br label %68, !dbg !8955

68:                                               ; preds = %67, %65
  %69 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !8956, !tbaa !7662
  %70 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %69, i32 0, i32 5, !dbg !8956
  %71 = load volatile i32, i32* %70, align 4, !dbg !8956, !tbaa !4766
  %72 = and i32 %71, 64, !dbg !8956
  %73 = icmp ne i32 %72, 0, !dbg !8956
  call void @llvm.dbg.value(metadata i1 %73, metadata !8894, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8895
  %74 = load volatile i32, i32* %62, align 4, !dbg !8957, !tbaa !7669
  %75 = and i32 %74, 8, !dbg !8959
  %76 = icmp ne i32 %75, 0, !dbg !8960
  %77 = select i1 %76, i1 true, i1 %73, !dbg !8961
  br i1 %77, label %78, label %100, !dbg !8961

78:                                               ; preds = %68
  call fastcc void @UART_EndRxTransfer(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8962
  %79 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !8964, !tbaa !7662
  %80 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %79, i32 0, i32 5, !dbg !8964
  %81 = load volatile i32, i32* %80, align 4, !dbg !8964, !tbaa !4766
  %82 = and i32 %81, 64, !dbg !8964
  %83 = icmp eq i32 %82, 0, !dbg !8964
  br i1 %83, label %99, label %84, !dbg !8966

84:                                               ; preds = %78
  %85 = load volatile i32, i32* %80, align 4, !dbg !8967, !tbaa !4766
  %86 = and i32 %85, -65, !dbg !8967
  store volatile i32 %86, i32* %80, align 4, !dbg !8967, !tbaa !4766
  %87 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !8969
  %88 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %87, align 4, !dbg !8969, !tbaa !8311
  %89 = icmp eq %struct.__DMA_HandleTypeDef* %88, null, !dbg !8971
  br i1 %89, label %98, label %90, !dbg !8972

90:                                               ; preds = %84
  %91 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %88, i32 0, i32 8, !dbg !8973
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMAAbortOnError, void (%struct.__DMA_HandleTypeDef*)** %91, align 4, !dbg !8975, !tbaa !8168
  %92 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %88) #33, !dbg !8976
  %93 = icmp eq i32 %92, 0, !dbg !8978
  br i1 %93, label %115, label %94, !dbg !8979

94:                                               ; preds = %90
  %95 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %87, align 4, !dbg !8980, !tbaa !8311
  %96 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %95, i32 0, i32 8, !dbg !8982
  %97 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %96, align 4, !dbg !8982, !tbaa !8168
  call void %97(%struct.__DMA_HandleTypeDef* noundef %95) #33, !dbg !8983
  br label %115, !dbg !8984

98:                                               ; preds = %84
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8985
  br label %115

99:                                               ; preds = %78
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8987
  br label %115

100:                                              ; preds = %68
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8989
  store volatile i32 0, i32* %62, align 4, !dbg !8991, !tbaa !7669
  br label %115

101:                                              ; preds = %21, %18
  %102 = and i32 %5, 128, !dbg !8992
  %103 = icmp eq i32 %102, 0, !dbg !8994
  %104 = and i32 %7, 128
  %105 = icmp eq i32 %104, 0
  %106 = select i1 %103, i1 true, i1 %105, !dbg !8995
  br i1 %106, label %108, label %107, !dbg !8995

107:                                              ; preds = %101
  call fastcc void @UART_Transmit_IT(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8996
  br label %115, !dbg !8998

108:                                              ; preds = %101
  %109 = and i32 %5, 64, !dbg !8999
  %110 = icmp eq i32 %109, 0, !dbg !9001
  %111 = and i32 %7, 64
  %112 = icmp eq i32 %111, 0
  %113 = select i1 %110, i1 true, i1 %112, !dbg !9002
  br i1 %113, label %115, label %114, !dbg !9002

114:                                              ; preds = %108
  call fastcc void @UART_EndTransmit_IT(%struct.__UART_HandleTypeDef* noundef %0), !dbg !9003
  br label %115, !dbg !9005

115:                                              ; preds = %108, %61, %99, %90, %94, %98, %100, %114, %107, %17
  ret void, !dbg !9006
}

; Function Attrs: noinline nounwind
define internal fastcc void @UART_Receive_IT(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #4 !dbg !9007 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9009, metadata !DIExpression()), !dbg !9011
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !9012
  %3 = load volatile i32, i32* %2, align 4, !dbg !9012, !tbaa !7673
  %4 = icmp eq i32 %3, 34, !dbg !9014
  br i1 %4, label %5, label %63, !dbg !9015

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9016
  %7 = load i32, i32* %6, align 4, !dbg !9016, !tbaa !7692
  %8 = icmp eq i32 %7, 4096, !dbg !9019
  br i1 %8, label %9, label %29, !dbg !9020

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !9021
  %11 = bitcast i8** %10 to i16**, !dbg !9021
  %12 = load i16*, i16** %11, align 4, !dbg !9021, !tbaa !8108
  call void @llvm.dbg.value(metadata i16* %12, metadata !9010, metadata !DIExpression()), !dbg !9011
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3, !dbg !9023
  %14 = load i32, i32* %13, align 4, !dbg !9023, !tbaa !7694
  %15 = icmp eq i32 %14, 0, !dbg !9025
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9026
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %16, align 4, !dbg !9026, !tbaa !7662
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 1, !dbg !9026
  %19 = load volatile i32, i32* %18, align 4, !dbg !9026, !tbaa !7894
  %20 = trunc i32 %19 to i16, !dbg !9026
  br i1 %15, label %21, label %25, !dbg !9027

21:                                               ; preds = %9
  %22 = and i16 %20, 511, !dbg !9028
  store i16 %22, i16* %12, align 2, !dbg !9030, !tbaa !7889
  %23 = load i8*, i8** %10, align 4, !dbg !9031, !tbaa !8108
  %24 = getelementptr inbounds i8, i8* %23, i32 2, !dbg !9031
  store i8* %24, i8** %10, align 4, !dbg !9031, !tbaa !8108
  br label %47, !dbg !9032

25:                                               ; preds = %9
  %26 = and i16 %20, 255, !dbg !9033
  store i16 %26, i16* %12, align 2, !dbg !9035, !tbaa !7889
  %27 = load i8*, i8** %10, align 4, !dbg !9036, !tbaa !8108
  %28 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !9036
  store i8* %28, i8** %10, align 4, !dbg !9036, !tbaa !8108
  br label %47

29:                                               ; preds = %5
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3, !dbg !9037
  %31 = load i32, i32* %30, align 4, !dbg !9037, !tbaa !7694
  %32 = icmp eq i32 %31, 0, !dbg !9040
  %33 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9041
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %33, align 4, !dbg !9041, !tbaa !7662
  %35 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 1, !dbg !9041
  %36 = load volatile i32, i32* %35, align 4, !dbg !9041, !tbaa !7894
  %37 = trunc i32 %36 to i8, !dbg !9041
  br i1 %32, label %38, label %42, !dbg !9042

38:                                               ; preds = %29
  %39 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !9043
  %40 = load i8*, i8** %39, align 4, !dbg !9045, !tbaa !8108
  %41 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !9045
  store i8* %41, i8** %39, align 4, !dbg !9045, !tbaa !8108
  store i8 %37, i8* %40, align 1, !dbg !9046, !tbaa !2561
  br label %47, !dbg !9047

42:                                               ; preds = %29
  %43 = and i8 %37, 127, !dbg !9048
  %44 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !9050
  %45 = load i8*, i8** %44, align 4, !dbg !9051, !tbaa !8108
  %46 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !9051
  store i8* %46, i8** %44, align 4, !dbg !9051, !tbaa !8108
  store i8 %43, i8* %45, align 1, !dbg !9052, !tbaa !2561
  br label %47

47:                                               ; preds = %38, %42, %21, %25
  %48 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !9053
  %49 = load volatile i16, i16* %48, align 2, !dbg !9055, !tbaa !7990
  %50 = add i16 %49, -1, !dbg !9055
  store volatile i16 %50, i16* %48, align 2, !dbg !9055, !tbaa !7990
  %51 = icmp eq i16 %50, 0, !dbg !9056
  br i1 %51, label %52, label %63, !dbg !9057

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9058
  %54 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %53, align 4, !dbg !9058, !tbaa !7662
  %55 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %54, i32 0, i32 3, !dbg !9058
  %56 = load volatile i32, i32* %55, align 4, !dbg !9058, !tbaa !4878
  %57 = and i32 %56, -33, !dbg !9058
  store volatile i32 %57, i32* %55, align 4, !dbg !9058, !tbaa !4878
  %58 = load volatile i32, i32* %55, align 4, !dbg !9060, !tbaa !4878
  %59 = and i32 %58, -257, !dbg !9060
  store volatile i32 %59, i32* %55, align 4, !dbg !9060, !tbaa !4878
  %60 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %54, i32 0, i32 5, !dbg !9061
  %61 = load volatile i32, i32* %60, align 4, !dbg !9061, !tbaa !4766
  %62 = and i32 %61, -2, !dbg !9061
  store volatile i32 %62, i32* %60, align 4, !dbg !9061, !tbaa !4766
  store volatile i32 32, i32* %2, align 4, !dbg !9062, !tbaa !7673
  call void @HAL_UART_RxCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !9063
  br label %63, !dbg !9064

63:                                               ; preds = %1, %47, %52
  ret void, !dbg !9065
}

; Function Attrs: noinline nounwind
define internal void @UART_DMAAbortOnError(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #4 !dbg !9066 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !9068, metadata !DIExpression()), !dbg !9070
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !9071
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !9071
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !9071, !tbaa !8189
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !9069, metadata !DIExpression()), !dbg !9070
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !9072
  store volatile i16 0, i16* %5, align 2, !dbg !9073, !tbaa !7990
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !9074
  store volatile i16 0, i16* %6, align 2, !dbg !9075, !tbaa !7874
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !9076
  ret void, !dbg !9077
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @UART_Transmit_IT(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #15 !dbg !9078 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9080, metadata !DIExpression()), !dbg !9082
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9083
  %3 = load volatile i32, i32* %2, align 4, !dbg !9083, !tbaa !7649
  %4 = icmp eq i32 %3, 33, !dbg !9085
  br i1 %4, label %5, label %48, !dbg !9086

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9087
  %7 = load i32, i32* %6, align 4, !dbg !9087, !tbaa !7692
  %8 = icmp eq i32 %7, 4096, !dbg !9090
  %9 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 2, !dbg !9091
  br i1 %8, label %10, label %27, !dbg !9092

10:                                               ; preds = %5
  %11 = bitcast i8** %9 to i16**, !dbg !9093
  %12 = load i16*, i16** %11, align 4, !dbg !9093, !tbaa !8072
  call void @llvm.dbg.value(metadata i16* %12, metadata !9081, metadata !DIExpression()), !dbg !9082
  %13 = load i16, i16* %12, align 2, !dbg !9095, !tbaa !7889
  %14 = and i16 %13, 511, !dbg !9096
  %15 = zext i16 %14 to i32, !dbg !9097
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9098
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %16, align 4, !dbg !9098, !tbaa !7662
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 1, !dbg !9099
  store volatile i32 %15, i32* %18, align 4, !dbg !9100, !tbaa !7894
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3, !dbg !9101
  %20 = load i32, i32* %19, align 4, !dbg !9101, !tbaa !7694
  %21 = icmp eq i32 %20, 0, !dbg !9103
  %22 = load i8*, i8** %9, align 4, !dbg !9104, !tbaa !8072
  br i1 %21, label %23, label %25, !dbg !9105

23:                                               ; preds = %10
  %24 = getelementptr inbounds i8, i8* %22, i32 2, !dbg !9106
  store i8* %24, i8** %9, align 4, !dbg !9106, !tbaa !8072
  br label %35, !dbg !9108

25:                                               ; preds = %10
  %26 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !9109
  store i8* %26, i8** %9, align 4, !dbg !9109, !tbaa !8072
  br label %35

27:                                               ; preds = %5
  %28 = load i8*, i8** %9, align 4, !dbg !9111, !tbaa !8072
  %29 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !9111
  store i8* %29, i8** %9, align 4, !dbg !9111, !tbaa !8072
  %30 = load i8, i8* %28, align 1, !dbg !9113, !tbaa !2561
  %31 = zext i8 %30 to i32, !dbg !9114
  %32 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9115
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9115, !tbaa !7662
  %34 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %33, i32 0, i32 1, !dbg !9116
  store volatile i32 %31, i32* %34, align 4, !dbg !9117, !tbaa !7894
  br label %35

35:                                               ; preds = %23, %25, %27
  %36 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !9118
  %37 = load volatile i16, i16* %36, align 2, !dbg !9120, !tbaa !7874
  %38 = add i16 %37, -1, !dbg !9120
  store volatile i16 %38, i16* %36, align 2, !dbg !9120, !tbaa !7874
  %39 = icmp eq i16 %38, 0, !dbg !9121
  br i1 %39, label %40, label %48, !dbg !9122

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9123
  %42 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %41, align 4, !dbg !9123, !tbaa !7662
  %43 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %42, i32 0, i32 3, !dbg !9123
  %44 = load volatile i32, i32* %43, align 4, !dbg !9123, !tbaa !4878
  %45 = and i32 %44, -129, !dbg !9123
  store volatile i32 %45, i32* %43, align 4, !dbg !9123, !tbaa !4878
  %46 = load volatile i32, i32* %43, align 4, !dbg !9125, !tbaa !4878
  %47 = or i32 %46, 64, !dbg !9125
  store volatile i32 %47, i32* %43, align 4, !dbg !9125, !tbaa !4878
  br label %48, !dbg !9126

48:                                               ; preds = %1, %35, %40
  ret void, !dbg !9127
}

; Function Attrs: noinline nounwind
define internal fastcc void @UART_EndTransmit_IT(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #4 !dbg !9128 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9130, metadata !DIExpression()), !dbg !9131
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9132
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !9132, !tbaa !7662
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !9132
  %5 = load volatile i32, i32* %4, align 4, !dbg !9132, !tbaa !4878
  %6 = and i32 %5, -65, !dbg !9132
  store volatile i32 %6, i32* %4, align 4, !dbg !9132, !tbaa !4878
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9133
  store volatile i32 32, i32* %7, align 4, !dbg !9134, !tbaa !7649
  call void @HAL_UART_TxCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !9135
  ret void, !dbg !9136
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_LIN_SendBreak(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #15 !dbg !9137 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9139, metadata !DIExpression()), !dbg !9140
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9141
  %3 = load i32, i32* %2, align 4, !dbg !9141, !tbaa !7657
  %4 = icmp eq i32 %3, 1, !dbg !9141
  br i1 %4, label %12, label %5, !dbg !9144

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !9145, !tbaa !7657
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9147
  store volatile i32 36, i32* %6, align 4, !dbg !9148, !tbaa !7649
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9149
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9149, !tbaa !7662
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !9149
  %10 = load volatile i32, i32* %9, align 4, !dbg !9149, !tbaa !4878
  %11 = or i32 %10, 1, !dbg !9149
  store volatile i32 %11, i32* %9, align 4, !dbg !9149, !tbaa !4878
  store volatile i32 32, i32* %6, align 4, !dbg !9150, !tbaa !7649
  store i32 0, i32* %2, align 4, !dbg !9151, !tbaa !7657
  br label %12, !dbg !9153

12:                                               ; preds = %1, %5
  %13 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !9140
  ret i32 %13, !dbg !9154
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_MultiProcessor_EnterMuteMode(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #15 !dbg !9155 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9157, metadata !DIExpression()), !dbg !9158
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9159
  %3 = load i32, i32* %2, align 4, !dbg !9159, !tbaa !7657
  %4 = icmp eq i32 %3, 1, !dbg !9159
  br i1 %4, label %12, label %5, !dbg !9162

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !9163, !tbaa !7657
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9165
  store volatile i32 36, i32* %6, align 4, !dbg !9166, !tbaa !7649
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9167
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9167, !tbaa !7662
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !9167
  %10 = load volatile i32, i32* %9, align 4, !dbg !9167, !tbaa !4878
  %11 = or i32 %10, 2, !dbg !9167
  store volatile i32 %11, i32* %9, align 4, !dbg !9167, !tbaa !4878
  store volatile i32 32, i32* %6, align 4, !dbg !9168, !tbaa !7649
  store i32 0, i32* %2, align 4, !dbg !9169, !tbaa !7657
  br label %12, !dbg !9171

12:                                               ; preds = %1, %5
  %13 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !9158
  ret i32 %13, !dbg !9172
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_MultiProcessor_ExitMuteMode(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #15 !dbg !9173 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9175, metadata !DIExpression()), !dbg !9176
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9177
  %3 = load i32, i32* %2, align 4, !dbg !9177, !tbaa !7657
  %4 = icmp eq i32 %3, 1, !dbg !9177
  br i1 %4, label %12, label %5, !dbg !9180

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !9181, !tbaa !7657
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9183
  store volatile i32 36, i32* %6, align 4, !dbg !9184, !tbaa !7649
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9185
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9185, !tbaa !7662
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !9185
  %10 = load volatile i32, i32* %9, align 4, !dbg !9185, !tbaa !4878
  %11 = and i32 %10, -3, !dbg !9185
  store volatile i32 %11, i32* %9, align 4, !dbg !9185, !tbaa !4878
  store volatile i32 32, i32* %6, align 4, !dbg !9186, !tbaa !7649
  store i32 0, i32* %2, align 4, !dbg !9187, !tbaa !7657
  br label %12, !dbg !9189

12:                                               ; preds = %1, %5
  %13 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !9176
  ret i32 %13, !dbg !9190
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_HalfDuplex_EnableTransmitter(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #15 !dbg !9191 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9193, metadata !DIExpression()), !dbg !9195
  call void @llvm.dbg.value(metadata i32 0, metadata !9194, metadata !DIExpression()), !dbg !9195
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9196
  %3 = load i32, i32* %2, align 4, !dbg !9196, !tbaa !7657
  %4 = icmp eq i32 %3, 1, !dbg !9196
  br i1 %4, label %13, label %5, !dbg !9199

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !9200, !tbaa !7657
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9202
  store volatile i32 36, i32* %6, align 4, !dbg !9203, !tbaa !7649
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9204
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9204, !tbaa !7662
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !9205
  %10 = load volatile i32, i32* %9, align 4, !dbg !9205, !tbaa !4878
  call void @llvm.dbg.value(metadata i32 %10, metadata !9194, metadata !DIExpression()), !dbg !9195
  %11 = and i32 %10, -13, !dbg !9206
  call void @llvm.dbg.value(metadata i32 %11, metadata !9194, metadata !DIExpression()), !dbg !9195
  %12 = or i32 %11, 8, !dbg !9207
  call void @llvm.dbg.value(metadata i32 %12, metadata !9194, metadata !DIExpression()), !dbg !9195
  store volatile i32 %12, i32* %9, align 4, !dbg !9208, !tbaa !4878
  store volatile i32 32, i32* %6, align 4, !dbg !9209, !tbaa !7649
  store i32 0, i32* %2, align 4, !dbg !9210, !tbaa !7657
  br label %13, !dbg !9212

13:                                               ; preds = %1, %5
  %14 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !9195
  ret i32 %14, !dbg !9213
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_HalfDuplex_EnableReceiver(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #15 !dbg !9214 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9216, metadata !DIExpression()), !dbg !9218
  call void @llvm.dbg.value(metadata i32 0, metadata !9217, metadata !DIExpression()), !dbg !9218
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9219
  %3 = load i32, i32* %2, align 4, !dbg !9219, !tbaa !7657
  %4 = icmp eq i32 %3, 1, !dbg !9219
  br i1 %4, label %13, label %5, !dbg !9222

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !9223, !tbaa !7657
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9225
  store volatile i32 36, i32* %6, align 4, !dbg !9226, !tbaa !7649
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9227
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9227, !tbaa !7662
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !9228
  %10 = load volatile i32, i32* %9, align 4, !dbg !9228, !tbaa !4878
  call void @llvm.dbg.value(metadata i32 %10, metadata !9217, metadata !DIExpression()), !dbg !9218
  %11 = and i32 %10, -13, !dbg !9229
  call void @llvm.dbg.value(metadata i32 %11, metadata !9217, metadata !DIExpression()), !dbg !9218
  %12 = or i32 %11, 4, !dbg !9230
  call void @llvm.dbg.value(metadata i32 %12, metadata !9217, metadata !DIExpression()), !dbg !9218
  store volatile i32 %12, i32* %9, align 4, !dbg !9231, !tbaa !4878
  store volatile i32 32, i32* %6, align 4, !dbg !9232, !tbaa !7649
  store i32 0, i32* %2, align 4, !dbg !9233, !tbaa !7657
  br label %13, !dbg !9235

13:                                               ; preds = %1, %5
  %14 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !9218
  ret i32 %14, !dbg !9236
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_UART_GetState(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #16 !dbg !9237 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9241, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.value(metadata i32 0, metadata !9242, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.value(metadata i32 0, metadata !9243, metadata !DIExpression()), !dbg !9244
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9245
  %3 = load volatile i32, i32* %2, align 4, !dbg !9245, !tbaa !7649
  call void @llvm.dbg.value(metadata i32 %3, metadata !9242, metadata !DIExpression()), !dbg !9244
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !9246
  %5 = load volatile i32, i32* %4, align 4, !dbg !9246, !tbaa !7673
  call void @llvm.dbg.value(metadata i32 %5, metadata !9243, metadata !DIExpression()), !dbg !9244
  %6 = or i32 %5, %3, !dbg !9247
  ret i32 %6, !dbg !9248
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_UART_GetError(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #16 !dbg !9249 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9253, metadata !DIExpression()), !dbg !9254
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !9255
  %3 = load volatile i32, i32* %2, align 4, !dbg !9255, !tbaa !7669
  ret i32 %3, !dbg !9256
}

attributes #0 = { mustprogress nofree noinline nosync nounwind readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { mustprogress noinline norecurse nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { noinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress noinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nounwind willreturn writeonly }
attributes #7 = { nobuiltin nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nofree nounwind }
attributes #10 = { nofree nosync nounwind willreturn }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nosync nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nosync nounwind readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nosync nounwind readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { noinline noreturn nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nosync nounwind willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline norecurse nosync nounwind willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nofree nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { argmemonly nofree nounwind readonly willreturn }
attributes #26 = { argmemonly mustprogress nofree nounwind willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #27 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #28 = { argmemonly nofree nounwind willreturn }
attributes #29 = { mustprogress noinline noreturn nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #30 = { mustprogress nofree noinline norecurse nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #31 = { mustprogress nofree noinline norecurse nosync nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #32 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #33 = { nounwind }
attributes #34 = { builtin nounwind }
attributes #35 = { noreturn nounwind }
attributes #36 = { noreturn }

!llvm.dbg.cu = !{!6, !497, !547, !1429, !622, !1483, !1537, !743, !1590, !1701, !1799, !1888, !1912, !1228, !1915, !2040, !2042}
!llvm.ident = !{!2154, !2154, !2154, !2154, !2154, !2154, !2154, !2154, !2154, !2154, !2154, !2154, !2154, !2154, !2154, !2154, !2154}
!llvm.module.flags = !{!2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "instance", scope: !2, file: !3, line: 140, type: !174, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "USART1_IRQHandler", scope: !3, file: !3, line: 138, type: !4, scopeLine: 139, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, retainedNodes: !173)
!3 = !DIFile(filename: "../examples/stm32f1/ntp.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "b11cb9e906bb5805a2f2aef791c52861")
!4 = !DISubroutineType(types: !5)
!5 = !{null}
!6 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !7, retainedTypes: !95, globals: !169, imports: !190, splitDebugInlining: false, nameTableKind: None)
!7 = !{!8, !16}
!8 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 41, baseType: !10, size: 32, elements: !11, identifier: "_ZTS17HAL_StatusTypeDef")
!9 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "4d6e0bbb91efacee14a68a416f506def")
!10 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!11 = !{!12, !13, !14, !15}
!12 = !DIEnumerator(name: "HAL_OK", value: 0, isUnsigned: true)
!13 = !DIEnumerator(name: "HAL_ERROR", value: 1, isUnsigned: true)
!14 = !DIEnumerator(name: "HAL_BUSY", value: 2, isUnsigned: true)
!15 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3, isUnsigned: true)
!16 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "ConnectionType", scope: !18, file: !17, line: 37, baseType: !10, size: 32, elements: !92, identifier: "_ZTSN6Cicada13IIPCommDevice14ConnectionTypeE")
!17 = !DIFile(filename: "../cicada/commdevices/iipcommdevice.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "5bf8a05cddb71511a58831ad901c2c26")
!18 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "IIPCommDevice", scope: !19, file: !17, line: 32, size: 32, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !20, vtableHolder: !26, identifier: "_ZTSN6Cicada13IIPCommDeviceE")
!19 = !DINamespace(name: "Cicada", scope: null)
!20 = !{!21, !79, !83}
!21 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !18, baseType: !22, flags: DIFlagPublic, extraData: i32 0)
!22 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "IStatefulDevice", scope: !19, file: !23, line: 38, size: 32, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !24, vtableHolder: !26, identifier: "_ZTSN6Cicada15IStatefulDeviceE")
!23 = !DIFile(filename: "../cicada/istatefuldevice.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "712993ae5fefe5852fb5c94951a13de4")
!24 = !{!25, !68, !72, !75, !76, !77, !78}
!25 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !22, baseType: !26, flags: DIFlagPublic, extraData: i32 0)
!26 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "ICommDevice", scope: !19, file: !27, line: 43, size: 32, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !28, vtableHolder: !26, identifier: "_ZTSN6Cicada11ICommDeviceE")
!27 = !DIFile(filename: "../cicada/icommdevice.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e83d2959922f5020d303a6315b56c6e9")
!28 = !{!29, !35, !39, !51, !52, !56, !63}
!29 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$ICommDevice", scope: !27, file: !27, baseType: !30, size: 32, flags: DIFlagArtificial)
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 32)
!31 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "__vtbl_ptr_type", baseType: !32, size: 32)
!32 = !DISubroutineType(types: !33)
!33 = !{!34}
!34 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!35 = !DISubprogram(name: "~ICommDevice", scope: !26, file: !27, line: 46, type: !36, scopeLine: 46, containingType: !26, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!36 = !DISubroutineType(types: !37)
!37 = !{null, !38}
!38 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!39 = !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada11ICommDevice14bytesAvailableEv", scope: !26, file: !27, line: 52, type: !40, scopeLine: 52, containingType: !26, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!40 = !DISubroutineType(types: !41)
!41 = !{!42, !49}
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "Size", scope: !19, file: !43, line: 32, baseType: !44)
!43 = !DIFile(filename: "../cicada/types.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "6dfa4c2c933d4c520c13fa7638528c51")
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !45, line: 60, baseType: !46)
!45 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "ab914e287601b2385e57880e6599aa6b")
!46 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !47, line: 105, baseType: !48)
!47 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "f7024d0682a918b41f94e8be9cd90461")
!48 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!50 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !26)
!51 = !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada11ICommDevice14spaceAvailableEv", scope: !26, file: !27, line: 60, type: !40, scopeLine: 60, containingType: !26, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!52 = !DISubprogram(name: "writeBufferProcessed", linkageName: "_ZNK6Cicada11ICommDevice20writeBufferProcessedEv", scope: !26, file: !27, line: 71, type: !53, scopeLine: 71, containingType: !26, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!53 = !DISubroutineType(types: !54)
!54 = !{!55, !49}
!55 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!56 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada11ICommDevice4readEPhy", scope: !26, file: !27, line: 85, type: !57, scopeLine: 85, containingType: !26, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!57 = !DISubroutineType(types: !58)
!58 = !{!42, !38, !59, !42}
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 32)
!60 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !45, line: 24, baseType: !61)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !47, line: 43, baseType: !62)
!62 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!63 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada11ICommDevice5writeEPKhy", scope: !26, file: !27, line: 98, type: !64, scopeLine: 98, containingType: !26, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!64 = !DISubroutineType(types: !65)
!65 = !{!42, !38, !66, !42}
!66 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 32)
!67 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!68 = !DISubprogram(name: "~IStatefulDevice", scope: !22, file: !23, line: 41, type: !69, scopeLine: 41, containingType: !22, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!69 = !DISubroutineType(types: !70)
!70 = !{null, !71}
!71 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!72 = !DISubprogram(name: "connect", linkageName: "_ZN6Cicada15IStatefulDevice7connectEv", scope: !22, file: !23, line: 46, type: !73, scopeLine: 46, containingType: !22, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!73 = !DISubroutineType(types: !74)
!74 = !{!55, !71}
!75 = !DISubprogram(name: "disconnect", linkageName: "_ZN6Cicada15IStatefulDevice10disconnectEv", scope: !22, file: !23, line: 51, type: !69, scopeLine: 51, containingType: !22, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!76 = !DISubprogram(name: "isConnected", linkageName: "_ZN6Cicada15IStatefulDevice11isConnectedEv", scope: !22, file: !23, line: 58, type: !73, scopeLine: 58, containingType: !22, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!77 = !DISubprogram(name: "isIdle", linkageName: "_ZN6Cicada15IStatefulDevice6isIdleEv", scope: !22, file: !23, line: 65, type: !73, scopeLine: 65, containingType: !22, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!78 = !DISubprogram(name: "resetStates", linkageName: "_ZN6Cicada15IStatefulDevice11resetStatesEv", scope: !22, file: !23, line: 70, type: !69, scopeLine: 70, containingType: !22, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!79 = !DISubprogram(name: "~IIPCommDevice", scope: !18, file: !17, line: 35, type: !80, scopeLine: 35, containingType: !18, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!80 = !DISubroutineType(types: !81)
!81 = !{null, !82}
!82 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!83 = !DISubprogram(name: "setHostPort", linkageName: "_ZN6Cicada13IIPCommDevice11setHostPortEPKctNS0_14ConnectionTypeE", scope: !18, file: !17, line: 47, type: !84, scopeLine: 47, containingType: !18, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!84 = !DISubroutineType(types: !85)
!85 = !{null, !82, !86, !89, !16}
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !87, size: 32)
!87 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !88)
!88 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!89 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !45, line: 36, baseType: !90)
!90 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !47, line: 57, baseType: !91)
!91 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!92 = !{!93, !94}
!93 = !DIEnumerator(name: "UDP", value: 0, isUnsigned: true)
!94 = !DIEnumerator(name: "TCP", value: 1, isUnsigned: true)
!95 = !{!96, !111, !89, !59, !114, !117}
!96 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !97, size: 32)
!97 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !98, line: 516, baseType: !99)
!98 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "d2562af6d7239ab46ca8ba238a43c848")
!99 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !98, line: 507, size: 224, flags: DIFlagTypePassByValue, elements: !100, identifier: "_ZTS13USART_TypeDef")
!100 = !{!101, !105, !106, !107, !108, !109, !110}
!101 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !99, file: !98, line: 509, baseType: !102, size: 32)
!102 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !103)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !45, line: 48, baseType: !104)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !47, line: 79, baseType: !10)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !99, file: !98, line: 510, baseType: !102, size: 32, offset: 32)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !99, file: !98, line: 511, baseType: !102, size: 32, offset: 64)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !99, file: !98, line: 512, baseType: !102, size: 32, offset: 96)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !99, file: !98, line: 513, baseType: !102, size: 32, offset: 128)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !99, file: !98, line: 514, baseType: !102, size: 32, offset: 160)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !99, file: !98, line: 515, baseType: !102, size: 32, offset: 192)
!111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 32)
!112 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !98, line: 367, baseType: !113)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !98, line: 358, size: 224, flags: DIFlagFwdDecl, identifier: "_ZTS12GPIO_TypeDef")
!114 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "NTPTask", file: !3, line: 30, size: 576, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !115, vtableHolder: !117, identifier: "_ZTS7NTPTask")
!115 = !{!116, !154, !158, !162, !166}
!116 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !114, baseType: !117, flags: DIFlagPublic, extraData: i32 0)
!117 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Task", scope: !19, file: !118, line: 193, size: 160, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !119, vtableHolder: !117, identifier: "_ZTSN6Cicada4TaskE")
!118 = !DIFile(filename: "../cicada/task.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "c2aeaca9a01dbc0caa84f135ef9fda2b")
!119 = !{!120, !121, !122, !123, !124, !125, !129, !132, !137, !138, !141, !144, !145, !146, !147, !150}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$Task", scope: !118, file: !118, baseType: !30, size: 32, flags: DIFlagArtificial)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "_delay", scope: !117, file: !118, line: 283, baseType: !89, size: 16, offset: 32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "_timeout", scope: !117, file: !118, line: 284, baseType: !103, size: 32, offset: 64)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "_isTimeoutRunning", scope: !117, file: !118, line: 285, baseType: !55, size: 8, offset: 96)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "_lastRun", scope: !117, file: !118, line: 286, baseType: !103, size: 32, offset: 128)
!125 = !DISubprogram(name: "Task", scope: !117, file: !118, line: 196, type: !126, scopeLine: 196, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!126 = !DISubroutineType(types: !127)
!127 = !{null, !128, !89}
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!129 = !DISubprogram(name: "~Task", scope: !117, file: !118, line: 198, type: !130, scopeLine: 198, containingType: !117, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!130 = !DISubroutineType(types: !131)
!131 = !{null, !128}
!132 = !DISubprogram(name: "delay", linkageName: "_ZNK6Cicada4Task5delayEv", scope: !117, file: !118, line: 203, type: !133, scopeLine: 203, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!133 = !DISubroutineType(types: !134)
!134 = !{!89, !135}
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !117)
!137 = !DISubprogram(name: "setDelay", linkageName: "_ZN6Cicada4Task8setDelayEt", scope: !117, file: !118, line: 212, type: !126, scopeLine: 212, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!138 = !DISubprogram(name: "lastRun", linkageName: "_ZN6Cicada4Task7lastRunEv", scope: !117, file: !118, line: 222, type: !139, scopeLine: 222, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!139 = !DISubroutineType(types: !140)
!140 = !{!103, !128}
!141 = !DISubprogram(name: "setLastRun", linkageName: "_ZN6Cicada4Task10setLastRunEj", scope: !117, file: !118, line: 230, type: !142, scopeLine: 230, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!142 = !DISubroutineType(types: !143)
!143 = !{null, !128, !103}
!144 = !DISubprogram(name: "run", linkageName: "_ZN6Cicada4Task3runEv", scope: !117, file: !118, line: 245, type: !130, scopeLine: 245, containingType: !117, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!145 = !DISubprogram(name: "startTimeout", linkageName: "_ZN6Cicada4Task12startTimeoutEv", scope: !117, file: !118, line: 251, type: !130, scopeLine: 251, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!146 = !DISubprogram(name: "resetTimeout", linkageName: "_ZN6Cicada4Task12resetTimeoutEv", scope: !117, file: !118, line: 262, type: !130, scopeLine: 262, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!147 = !DISubprogram(name: "isTimeout", linkageName: "_ZN6Cicada4Task9isTimeoutEj", scope: !117, file: !118, line: 272, type: !148, scopeLine: 272, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!148 = !DISubroutineType(types: !149)
!149 = !{!55, !128, !103}
!150 = !DISubprogram(name: "Task", scope: !117, file: !118, line: 281, type: !151, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!151 = !DISubroutineType(types: !152)
!152 = !{null, !128, !153}
!153 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !136, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "m_commDev", scope: !114, file: !3, line: 68, baseType: !155, size: 32, offset: 160)
!155 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !156, size: 32)
!156 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "SimCommDevice", scope: !19, file: !157, line: 33, size: 2240, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada13SimCommDeviceE")
!157 = !DIFile(filename: "../cicada/commdevices/simcommdevice.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "a544398dc40a994ae47c8561fb84bc57")
!158 = !DIDerivedType(tag: DW_TAG_member, name: "m_ntpPacket", scope: !114, file: !3, line: 69, baseType: !159, size: 384, offset: 192)
!159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 384, elements: !160)
!160 = !{!161}
!161 = !DISubrange(count: 12)
!162 = !DISubprogram(name: "NTPTask", scope: !114, file: !3, line: 33, type: !163, scopeLine: 33, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!163 = !DISubroutineType(types: !164)
!164 = !{null, !165, !155}
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!166 = !DISubprogram(name: "run", linkageName: "_ZN7NTPTask3runEv", scope: !114, file: !3, line: 35, type: !167, scopeLine: 35, containingType: !114, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!167 = !DISubroutineType(types: !168)
!168 = !{null, !165}
!169 = !{!0, !170, !177, !184}
!170 = !DIGlobalVariableExpression(var: !171, expr: !DIExpression())
!171 = distinct !DIGlobalVariable(name: "instance", scope: !172, file: !3, line: 146, type: !174, isLocal: true, isDefinition: true)
!172 = distinct !DISubprogram(name: "USART2_IRQHandler", scope: !3, file: !3, line: 144, type: !4, scopeLine: 145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, retainedNodes: !173)
!173 = !{}
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 32)
!175 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Stm32Uart", scope: !19, file: !176, line: 51, size: 1536, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada9Stm32UartE")
!176 = !DIFile(filename: "../cicada/platform/stm32f1/stm32uart.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "f1205a68111afe9a0868ac35ca31b4e6")
!177 = !DIGlobalVariableExpression(var: !178, expr: !DIExpression())
!178 = distinct !DIGlobalVariable(name: "serial", scope: !179, file: !3, line: 152, type: !174, isLocal: true, isDefinition: true)
!179 = distinct !DISubprogram(name: "_putchar", scope: !3, file: !3, line: 150, type: !180, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, retainedNodes: !182)
!180 = !DISubroutineType(types: !181)
!181 = !{null, !88}
!182 = !{!183}
!183 = !DILocalVariable(name: "c", arg: 1, scope: !179, file: !3, line: 150, type: !88)
!184 = !DIGlobalVariableExpression(var: !185, expr: !DIExpression())
!185 = distinct !DIGlobalVariable(name: "entrypoint", scope: !186, file: !3, line: 37, type: !60, isLocal: false, isDefinition: true)
!186 = distinct !DISubprogram(name: "run", linkageName: "_ZN7NTPTask3runEv", scope: !114, file: !3, line: 35, type: !167, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !166, retainedNodes: !187)
!187 = !{!188}
!188 = !DILocalVariable(name: "this", arg: 1, scope: !186, type: !189, flags: DIFlagArtificial | DIFlagObjectPointer)
!189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 32)
!190 = !{!191, !197, !201, !204, !208, !211, !213, !215, !217, !220, !223, !226, !229, !232, !235, !236, !237, !238, !239, !241, !243, !245, !247, !250, !253, !256, !259, !262, !265, !271, !275, !282, !284, !289, !294, !298, !302, !315, !319, !323, !327, !331, !336, !340, !344, !348, !352, !358, !362, !366, !368, !372, !376, !381, !385, !390, !392, !398, !402, !409, !411, !415, !419, !423, !427, !431, !436, !441, !442, !443, !444, !446, !447, !448, !449, !450, !451, !452, !454, !455, !456, !457, !458, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486}
!191 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !193, file: !196, line: 47)
!192 = !DINamespace(name: "std", scope: null)
!193 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !45, line: 20, baseType: !194)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !47, line: 41, baseType: !195)
!195 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!196 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/cstdint", directory: "/home/mjshen/RTOSExploration")
!197 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !198, file: !196, line: 48)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !45, line: 32, baseType: !199)
!199 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int16_t", file: !47, line: 55, baseType: !200)
!200 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!201 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !202, file: !196, line: 49)
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !45, line: 44, baseType: !203)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !47, line: 77, baseType: !34)
!204 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !205, file: !196, line: 50)
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !45, line: 56, baseType: !206)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !47, line: 103, baseType: !207)
!207 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!208 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !209, file: !196, line: 52)
!209 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast8_t", file: !210, line: 51, baseType: !195)
!210 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdint.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "a169a1d650067906a9e00519a9405ebb")
!211 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !212, file: !196, line: 53)
!212 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast16_t", file: !210, line: 61, baseType: !200)
!213 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !214, file: !196, line: 54)
!214 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast32_t", file: !210, line: 71, baseType: !34)
!215 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !216, file: !196, line: 55)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast64_t", file: !210, line: 81, baseType: !207)
!217 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !218, file: !196, line: 57)
!218 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least8_t", file: !210, line: 21, baseType: !219)
!219 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least8_t", file: !47, line: 134, baseType: !195)
!220 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !221, file: !196, line: 58)
!221 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least16_t", file: !210, line: 27, baseType: !222)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least16_t", file: !47, line: 160, baseType: !200)
!223 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !224, file: !196, line: 59)
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least32_t", file: !210, line: 33, baseType: !225)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least32_t", file: !47, line: 182, baseType: !34)
!226 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !227, file: !196, line: 60)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least64_t", file: !210, line: 39, baseType: !228)
!228 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !47, line: 200, baseType: !207)
!229 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !230, file: !196, line: 62)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !45, line: 67, baseType: !231)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !47, line: 214, baseType: !207)
!232 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !233, file: !196, line: 63)
!233 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !45, line: 77, baseType: !234)
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intptr_t", file: !47, line: 230, baseType: !34)
!235 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !60, file: !196, line: 65)
!236 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !89, file: !196, line: 66)
!237 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !103, file: !196, line: 67)
!238 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !44, file: !196, line: 68)
!239 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !240, file: !196, line: 70)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast8_t", file: !210, line: 52, baseType: !62)
!241 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !242, file: !196, line: 71)
!242 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast16_t", file: !210, line: 62, baseType: !91)
!243 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !244, file: !196, line: 72)
!244 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast32_t", file: !210, line: 72, baseType: !10)
!245 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !246, file: !196, line: 73)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast64_t", file: !210, line: 82, baseType: !48)
!247 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !248, file: !196, line: 75)
!248 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least8_t", file: !210, line: 22, baseType: !249)
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least8_t", file: !47, line: 136, baseType: !62)
!250 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !251, file: !196, line: 76)
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least16_t", file: !210, line: 28, baseType: !252)
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least16_t", file: !47, line: 162, baseType: !91)
!253 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !254, file: !196, line: 77)
!254 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least32_t", file: !210, line: 34, baseType: !255)
!255 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least32_t", file: !47, line: 184, baseType: !10)
!256 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !257, file: !196, line: 78)
!257 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !210, line: 40, baseType: !258)
!258 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least64_t", file: !47, line: 202, baseType: !48)
!259 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !260, file: !196, line: 80)
!260 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !45, line: 72, baseType: !261)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !47, line: 222, baseType: !48)
!262 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !263, file: !196, line: 81)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !45, line: 82, baseType: !264)
!264 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintptr_t", file: !47, line: 232, baseType: !10)
!265 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !266, file: !270, line: 52)
!266 = !DISubprogram(name: "abs", scope: !267, file: !267, line: 70, type: !268, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!267 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdlib.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "ce64a6a93b8b46525165e9738bae1257")
!268 = !DISubroutineType(types: !269)
!269 = !{!34, !34}
!270 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/bits/std_abs.h", directory: "/home/mjshen/RTOSExploration")
!271 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !272, file: !274, line: 127)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "div_t", file: !267, line: 39, baseType: !273)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !267, line: 35, size: 64, flags: DIFlagFwdDecl, identifier: "_ZTS5div_t")
!274 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/cstdlib", directory: "/home/mjshen/RTOSExploration")
!275 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !276, file: !274, line: 128)
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "ldiv_t", file: !267, line: 45, baseType: !277)
!277 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !267, line: 41, size: 64, flags: DIFlagTypePassByValue, elements: !278, identifier: "_ZTS6ldiv_t")
!278 = !{!279, !281}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !277, file: !267, line: 43, baseType: !280, size: 32)
!280 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !277, file: !267, line: 44, baseType: !280, size: 32, offset: 32)
!282 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !283, file: !274, line: 130)
!283 = !DISubprogram(name: "abort", scope: !267, file: !267, line: 69, type: !4, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized)
!284 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !285, file: !274, line: 134)
!285 = !DISubprogram(name: "atexit", scope: !267, file: !267, line: 76, type: !286, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!286 = !DISubroutineType(types: !287)
!287 = !{!34, !288}
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 32)
!289 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !290, file: !274, line: 140)
!290 = !DISubprogram(name: "atof", scope: !267, file: !267, line: 77, type: !291, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!291 = !DISubroutineType(types: !292)
!292 = !{!293, !86}
!293 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!294 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !295, file: !274, line: 141)
!295 = !DISubprogram(name: "atoi", scope: !267, file: !267, line: 81, type: !296, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!296 = !DISubroutineType(types: !297)
!297 = !{!34, !86}
!298 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !299, file: !274, line: 142)
!299 = !DISubprogram(name: "atol", scope: !267, file: !267, line: 83, type: !300, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!300 = !DISubroutineType(types: !301)
!301 = !{!280, !86}
!302 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !303, file: !274, line: 143)
!303 = !DISubprogram(name: "bsearch", scope: !267, file: !267, line: 85, type: !304, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!304 = !DISubroutineType(types: !305)
!305 = !{!306, !307, !307, !309, !309, !311}
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 32)
!308 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !310, line: 46, baseType: !10)
!310 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "", checksumkind: CSK_MD5, checksum: "2499dd2361b915724b073282bea3a7bc")
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !267, line: 57, baseType: !312)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 32)
!313 = !DISubroutineType(types: !314)
!314 = !{!34, !307, !307}
!315 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !316, file: !274, line: 144)
!316 = !DISubprogram(name: "calloc", scope: !267, file: !267, line: 90, type: !317, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!317 = !DISubroutineType(types: !318)
!318 = !{!306, !309, !309}
!319 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !320, file: !274, line: 145)
!320 = !DISubprogram(name: "div", scope: !267, file: !267, line: 92, type: !321, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!321 = !DISubroutineType(types: !322)
!322 = !{!272, !34, !34}
!323 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !324, file: !274, line: 146)
!324 = !DISubprogram(name: "exit", scope: !267, file: !267, line: 93, type: !325, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized)
!325 = !DISubroutineType(types: !326)
!326 = !{null, !34}
!327 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !328, file: !274, line: 147)
!328 = !DISubprogram(name: "free", scope: !267, file: !267, line: 94, type: !329, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!329 = !DISubroutineType(types: !330)
!330 = !{null, !306}
!331 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !332, file: !274, line: 148)
!332 = !DISubprogram(name: "getenv", scope: !267, file: !267, line: 95, type: !333, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!333 = !DISubroutineType(types: !334)
!334 = !{!335, !86}
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !88, size: 32)
!336 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !337, file: !274, line: 149)
!337 = !DISubprogram(name: "labs", scope: !267, file: !267, line: 106, type: !338, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!338 = !DISubroutineType(types: !339)
!339 = !{!280, !280}
!340 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !341, file: !274, line: 150)
!341 = !DISubprogram(name: "ldiv", scope: !267, file: !267, line: 107, type: !342, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!342 = !DISubroutineType(types: !343)
!343 = !{!276, !280, !280}
!344 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !345, file: !274, line: 151)
!345 = !DISubprogram(name: "malloc", scope: !267, file: !267, line: 108, type: !346, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!346 = !DISubroutineType(types: !347)
!347 = !{!306, !309}
!348 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !349, file: !274, line: 153)
!349 = !DISubprogram(name: "mblen", scope: !267, file: !267, line: 109, type: !350, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!350 = !DISubroutineType(types: !351)
!351 = !{!34, !86, !309}
!352 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !353, file: !274, line: 154)
!353 = !DISubprogram(name: "mbstowcs", scope: !267, file: !267, line: 115, type: !354, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!354 = !DISubroutineType(types: !355)
!355 = !{!309, !356, !86, !309}
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 32)
!357 = !DIBasicType(name: "wchar_t", size: 32, encoding: DW_ATE_unsigned)
!358 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !359, file: !274, line: 155)
!359 = !DISubprogram(name: "mbtowc", scope: !267, file: !267, line: 111, type: !360, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!360 = !DISubroutineType(types: !361)
!361 = !{!34, !356, !86, !309}
!362 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !363, file: !274, line: 157)
!363 = !DISubprogram(name: "qsort", scope: !267, file: !267, line: 143, type: !364, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!364 = !DISubroutineType(types: !365)
!365 = !{null, !306, !309, !309, !311}
!366 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !367, file: !274, line: 163)
!367 = !DISubprogram(name: "rand", scope: !267, file: !267, line: 144, type: !32, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!368 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !369, file: !274, line: 164)
!369 = !DISubprogram(name: "realloc", scope: !267, file: !267, line: 145, type: !370, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!370 = !DISubroutineType(types: !371)
!371 = !{!306, !306, !309}
!372 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !373, file: !274, line: 165)
!373 = !DISubprogram(name: "srand", scope: !267, file: !267, line: 159, type: !374, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!374 = !DISubroutineType(types: !375)
!375 = !{null, !10}
!376 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !377, file: !274, line: 166)
!377 = !DISubprogram(name: "strtod", scope: !267, file: !267, line: 160, type: !378, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!378 = !DISubroutineType(types: !379)
!379 = !{!293, !86, !380}
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 32)
!381 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !382, file: !274, line: 167)
!382 = !DISubprogram(name: "strtol", scope: !267, file: !267, line: 171, type: !383, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!383 = !DISubroutineType(types: !384)
!384 = !{!280, !86, !380, !34}
!385 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !386, file: !274, line: 168)
!386 = !DISubprogram(name: "strtoul", scope: !267, file: !267, line: 173, type: !387, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!387 = !DISubroutineType(types: !388)
!388 = !{!389, !86, !380, !34}
!389 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!390 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !391, file: !274, line: 169)
!391 = !DISubprogram(name: "system", scope: !267, file: !267, line: 191, type: !296, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!392 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !393, file: !274, line: 171)
!393 = !DISubprogram(name: "wcstombs", scope: !267, file: !267, line: 117, type: !394, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!394 = !DISubroutineType(types: !395)
!395 = !{!309, !335, !396, !309}
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 32)
!397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !357)
!398 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !399, file: !274, line: 172)
!399 = !DISubprogram(name: "wctomb", scope: !267, file: !267, line: 113, type: !400, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!400 = !DISubroutineType(types: !401)
!401 = !{!34, !335, !357}
!402 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !403, entity: !404, file: !274, line: 200)
!403 = !DINamespace(name: "__gnu_cxx", scope: null)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "lldiv_t", file: !267, line: 52, baseType: !405)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !267, line: 48, size: 128, flags: DIFlagTypePassByValue, elements: !406, identifier: "_ZTS7lldiv_t")
!406 = !{!407, !408}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !405, file: !267, line: 50, baseType: !207, size: 64)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !405, file: !267, line: 51, baseType: !207, size: 64, offset: 64)
!409 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !403, entity: !410, file: !274, line: 206)
!410 = !DISubprogram(name: "_Exit", scope: !267, file: !267, line: 202, type: !325, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized)
!411 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !403, entity: !412, file: !274, line: 210)
!412 = !DISubprogram(name: "llabs", scope: !267, file: !267, line: 267, type: !413, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!413 = !DISubroutineType(types: !414)
!414 = !{!207, !207}
!415 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !403, entity: !416, file: !274, line: 216)
!416 = !DISubprogram(name: "lldiv", scope: !267, file: !267, line: 268, type: !417, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!417 = !DISubroutineType(types: !418)
!418 = !{!404, !207, !207}
!419 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !403, entity: !420, file: !274, line: 227)
!420 = !DISubprogram(name: "atoll", scope: !267, file: !267, line: 263, type: !421, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!421 = !DISubroutineType(types: !422)
!422 = !{!207, !86}
!423 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !403, entity: !424, file: !274, line: 228)
!424 = !DISubprogram(name: "strtoll", scope: !267, file: !267, line: 269, type: !425, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!425 = !DISubroutineType(types: !426)
!426 = !{!207, !86, !380, !34}
!427 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !403, entity: !428, file: !274, line: 229)
!428 = !DISubprogram(name: "strtoull", scope: !267, file: !267, line: 273, type: !429, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!429 = !DISubroutineType(types: !430)
!430 = !{!48, !86, !380, !34}
!431 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !403, entity: !432, file: !274, line: 231)
!432 = !DISubprogram(name: "strtof", scope: !267, file: !267, line: 163, type: !433, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!433 = !DISubroutineType(types: !434)
!434 = !{!435, !86, !380}
!435 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!436 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !403, entity: !437, file: !274, line: 232)
!437 = !DISubprogram(name: "strtold", scope: !267, file: !267, line: 324, type: !438, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!438 = !DISubroutineType(types: !439)
!439 = !{!440, !86, !380}
!440 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!441 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !404, file: !274, line: 240)
!442 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !410, file: !274, line: 242)
!443 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !412, file: !274, line: 244)
!444 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !445, file: !274, line: 245)
!445 = !DISubprogram(name: "div", linkageName: "_ZN9__gnu_cxx3divExx", scope: !403, file: !274, line: 213, type: !417, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!446 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !416, file: !274, line: 246)
!447 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !420, file: !274, line: 248)
!448 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !432, file: !274, line: 249)
!449 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !424, file: !274, line: 250)
!450 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !428, file: !274, line: 251)
!451 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !437, file: !274, line: 252)
!452 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !283, file: !453, line: 38)
!453 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/stdlib.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "74812296ae1ebf65f0c19983efc04bc1")
!454 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !285, file: !453, line: 39)
!455 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !324, file: !453, line: 40)
!456 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !272, file: !453, line: 51)
!457 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !276, file: !453, line: 52)
!458 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !459, file: !453, line: 54)
!459 = !DISubprogram(name: "abs", linkageName: "_ZSt3abse", scope: !192, file: !270, line: 79, type: !460, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!460 = !DISubroutineType(types: !461)
!461 = !{!440, !440}
!462 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !290, file: !453, line: 55)
!463 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !295, file: !453, line: 56)
!464 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !299, file: !453, line: 57)
!465 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !303, file: !453, line: 58)
!466 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !316, file: !453, line: 59)
!467 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !445, file: !453, line: 60)
!468 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !328, file: !453, line: 61)
!469 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !332, file: !453, line: 62)
!470 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !337, file: !453, line: 63)
!471 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !341, file: !453, line: 64)
!472 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !345, file: !453, line: 65)
!473 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !349, file: !453, line: 67)
!474 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !353, file: !453, line: 68)
!475 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !359, file: !453, line: 69)
!476 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !363, file: !453, line: 71)
!477 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !367, file: !453, line: 72)
!478 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !369, file: !453, line: 73)
!479 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !373, file: !453, line: 74)
!480 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !377, file: !453, line: 75)
!481 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !382, file: !453, line: 76)
!482 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !386, file: !453, line: 77)
!483 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !391, file: !453, line: 78)
!484 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !393, file: !453, line: 80)
!485 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !6, entity: !399, file: !453, line: 81)
!486 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !6, entity: !19, file: !3, line: 17)
!487 = !DIGlobalVariableExpression(var: !488, expr: !DIExpression())
!488 = distinct !DIGlobalVariable(name: "pow10", scope: !489, file: !490, line: 311, type: !542, isLocal: true, isDefinition: true)
!489 = distinct !DISubprogram(name: "_ftoa", scope: !490, file: !490, line: 299, type: !491, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !509)
!490 = !DIFile(filename: "../dep/printf/src/printf.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "7383fa86adf0d25d8eda174a9b330d6a")
!491 = !DISubroutineType(types: !492)
!492 = !{!309, !493, !335, !309, !309, !293, !10, !10, !10}
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "out_fct_type", file: !490, line: 97, baseType: !494)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 32)
!495 = !DISubroutineType(types: !496)
!496 = !{null, !88, !306, !309, !309}
!497 = distinct !DICompileUnit(language: DW_LANG_C99, file: !490, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !498, globals: !508, splitDebugInlining: false, nameTableKind: None)
!498 = !{!309, !335, !263, !10, !34, !48, !389, !88, !200, !62, !91, !293, !499}
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 32)
!500 = !DIDerivedType(tag: DW_TAG_typedef, name: "out_fct_wrap_type", file: !490, line: 104, baseType: !501)
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !490, line: 101, size: 64, elements: !502)
!502 = !{!503, !507}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "fct", scope: !501, file: !490, line: 102, baseType: !504, size: 32)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 32)
!505 = !DISubroutineType(types: !506)
!506 = !{null, !88, !306}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !501, file: !490, line: 103, baseType: !306, size: 32, offset: 32)
!508 = !{!487}
!509 = !{!510, !511, !512, !513, !514, !515, !516, !517, !518, !520, !524, !525, !526, !528, !530, !531, !532, !533, !536, !540}
!510 = !DILocalVariable(name: "out", arg: 1, scope: !489, file: !490, line: 299, type: !493)
!511 = !DILocalVariable(name: "buffer", arg: 2, scope: !489, file: !490, line: 299, type: !335)
!512 = !DILocalVariable(name: "idx", arg: 3, scope: !489, file: !490, line: 299, type: !309)
!513 = !DILocalVariable(name: "maxlen", arg: 4, scope: !489, file: !490, line: 299, type: !309)
!514 = !DILocalVariable(name: "value", arg: 5, scope: !489, file: !490, line: 299, type: !293)
!515 = !DILocalVariable(name: "prec", arg: 6, scope: !489, file: !490, line: 299, type: !10)
!516 = !DILocalVariable(name: "width", arg: 7, scope: !489, file: !490, line: 299, type: !10)
!517 = !DILocalVariable(name: "flags", arg: 8, scope: !489, file: !490, line: 299, type: !10)
!518 = !DILocalVariable(name: "start_idx", scope: !489, file: !490, line: 301, type: !519)
!519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !309)
!520 = !DILocalVariable(name: "buf", scope: !489, file: !490, line: 303, type: !521)
!521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 256, elements: !522)
!522 = !{!523}
!523 = !DISubrange(count: 32)
!524 = !DILocalVariable(name: "len", scope: !489, file: !490, line: 304, type: !309)
!525 = !DILocalVariable(name: "diff", scope: !489, file: !490, line: 305, type: !293)
!526 = !DILocalVariable(name: "thres_max", scope: !489, file: !490, line: 308, type: !527)
!527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !293)
!528 = !DILocalVariable(name: "negative", scope: !489, file: !490, line: 322, type: !529)
!529 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!530 = !DILocalVariable(name: "whole", scope: !489, file: !490, line: 338, type: !34)
!531 = !DILocalVariable(name: "tmp", scope: !489, file: !490, line: 339, type: !293)
!532 = !DILocalVariable(name: "frac", scope: !489, file: !490, line: 340, type: !389)
!533 = !DILocalVariable(name: "count", scope: !534, file: !490, line: 373, type: !10)
!534 = distinct !DILexicalBlock(scope: !535, file: !490, line: 372, column: 8)
!535 = distinct !DILexicalBlock(scope: !489, file: !490, line: 364, column: 7)
!536 = !DILocalVariable(name: "i", scope: !537, file: !490, line: 424, type: !309)
!537 = distinct !DILexicalBlock(scope: !538, file: !490, line: 424, column: 5)
!538 = distinct !DILexicalBlock(scope: !539, file: !490, line: 423, column: 58)
!539 = distinct !DILexicalBlock(scope: !489, file: !490, line: 423, column: 7)
!540 = !DILocalVariable(name: "i", scope: !541, file: !490, line: 430, type: !309)
!541 = distinct !DILexicalBlock(scope: !489, file: !490, line: 430, column: 3)
!542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !527, size: 640, elements: !543)
!543 = !{!544}
!544 = !DISubrange(count: 10)
!545 = !DIGlobalVariableExpression(var: !546, expr: !DIExpression())
!546 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !547, file: !548, line: 124, type: !617, isLocal: false, isDefinition: true)
!547 = distinct !DICompileUnit(language: DW_LANG_C99, file: !548, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !549, retainedTypes: !555, globals: !609, splitDebugInlining: false, nameTableKind: None)
!548 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/system_stm32f1xx.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "2e873de3002e5d783190a46ff1c7da2d")
!549 = !{!550}
!550 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !551, line: 151, baseType: !10, size: 32, elements: !552)
!551 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "dc4ed8bdf8589b30d30d93eb6ee6ca27")
!552 = !{!553, !554}
!553 = !DIEnumerator(name: "RESET", value: 0)
!554 = !DIEnumerator(name: "SET", value: 1)
!555 = !{!556, !570, !103}
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 32)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !98, line: 438, baseType: !558)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !98, line: 424, size: 320, elements: !559)
!559 = !{!560, !561, !562, !563, !564, !565, !566, !567, !568, !569}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !558, file: !98, line: 426, baseType: !102, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !558, file: !98, line: 427, baseType: !102, size: 32, offset: 32)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !558, file: !98, line: 428, baseType: !102, size: 32, offset: 64)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !558, file: !98, line: 429, baseType: !102, size: 32, offset: 96)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !558, file: !98, line: 430, baseType: !102, size: 32, offset: 128)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !558, file: !98, line: 431, baseType: !102, size: 32, offset: 160)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !558, file: !98, line: 432, baseType: !102, size: 32, offset: 192)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !558, file: !98, line: 433, baseType: !102, size: 32, offset: 224)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !558, file: !98, line: 434, baseType: !102, size: 32, offset: 256)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !558, file: !98, line: 435, baseType: !102, size: 32, offset: 288)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 32)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !572, line: 397, baseType: !573)
!572 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build")
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 374, size: 1120, elements: !574)
!574 = !{!575, !577, !578, !579, !580, !581, !582, !585, !586, !587, !588, !589, !590, !591, !592, !596, !597, !598, !602, !606, !608}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !573, file: !572, line: 376, baseType: !576, size: 32)
!576 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !102)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !573, file: !572, line: 377, baseType: !102, size: 32, offset: 32)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !573, file: !572, line: 378, baseType: !102, size: 32, offset: 64)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !573, file: !572, line: 379, baseType: !102, size: 32, offset: 96)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !573, file: !572, line: 380, baseType: !102, size: 32, offset: 128)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !573, file: !572, line: 381, baseType: !102, size: 32, offset: 160)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !573, file: !572, line: 382, baseType: !583, size: 96, offset: 192)
!583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !584, size: 96, elements: !160)
!584 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !60)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !573, file: !572, line: 383, baseType: !102, size: 32, offset: 288)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !573, file: !572, line: 384, baseType: !102, size: 32, offset: 320)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !573, file: !572, line: 385, baseType: !102, size: 32, offset: 352)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !573, file: !572, line: 386, baseType: !102, size: 32, offset: 384)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !573, file: !572, line: 387, baseType: !102, size: 32, offset: 416)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !573, file: !572, line: 388, baseType: !102, size: 32, offset: 448)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !573, file: !572, line: 389, baseType: !102, size: 32, offset: 480)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !573, file: !572, line: 390, baseType: !593, size: 64, offset: 512)
!593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 64, elements: !594)
!594 = !{!595}
!595 = !DISubrange(count: 2)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !573, file: !572, line: 391, baseType: !576, size: 32, offset: 576)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !573, file: !572, line: 392, baseType: !576, size: 32, offset: 608)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !573, file: !572, line: 393, baseType: !599, size: 128, offset: 640)
!599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 128, elements: !600)
!600 = !{!601}
!601 = !DISubrange(count: 4)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !573, file: !572, line: 394, baseType: !603, size: 160, offset: 768)
!603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 160, elements: !604)
!604 = !{!605}
!605 = !DISubrange(count: 5)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !573, file: !572, line: 395, baseType: !607, size: 160, offset: 928)
!607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 160, elements: !604)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !573, file: !572, line: 396, baseType: !102, size: 32, offset: 1088)
!609 = !{!610, !545, !612}
!610 = !DIGlobalVariableExpression(var: !611, expr: !DIExpression())
!611 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !547, file: !548, line: 123, type: !103, isLocal: false, isDefinition: true)
!612 = !DIGlobalVariableExpression(var: !613, expr: !DIExpression())
!613 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !547, file: !548, line: 125, type: !614, isLocal: false, isDefinition: true)
!614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 64, elements: !615)
!615 = !{!616}
!616 = !DISubrange(count: 8)
!617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 128, elements: !618)
!618 = !{!619}
!619 = !DISubrange(count: 16)
!620 = !DIGlobalVariableExpression(var: !621, expr: !DIExpression())
!621 = distinct !DIGlobalVariable(name: "uwTickPrio", scope: !622, file: !623, line: 80, type: !103, isLocal: false, isDefinition: true)
!622 = distinct !DICompileUnit(language: DW_LANG_C99, file: !623, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !624, retainedTypes: !692, globals: !735, splitDebugInlining: false, nameTableKind: None)
!623 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "1a5fa7b79e9e470cf817b81d791a6ccb")
!624 = !{!625, !632, !638}
!625 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !626, line: 49, baseType: !10, size: 32, elements: !627)
!626 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "5eab64b252ccd159497a11d87d26bc0b")
!627 = !{!628, !629, !630, !631}
!628 = !DIEnumerator(name: "HAL_TICK_FREQ_10HZ", value: 100)
!629 = !DIEnumerator(name: "HAL_TICK_FREQ_100HZ", value: 10)
!630 = !DIEnumerator(name: "HAL_TICK_FREQ_1KHZ", value: 1)
!631 = !DIEnumerator(name: "HAL_TICK_FREQ_DEFAULT", value: 1)
!632 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 41, baseType: !10, size: 32, elements: !633)
!633 = !{!634, !635, !636, !637}
!634 = !DIEnumerator(name: "HAL_OK", value: 0)
!635 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!636 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!637 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!638 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 69, baseType: !34, size: 32, elements: !639)
!639 = !{!640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691}
!640 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!641 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!642 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!643 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!644 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!645 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!646 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!647 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!648 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!649 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!650 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!651 = !DIEnumerator(name: "TAMPER_IRQn", value: 2)
!652 = !DIEnumerator(name: "RTC_IRQn", value: 3)
!653 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!654 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!655 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!656 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!657 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!658 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!659 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!660 = !DIEnumerator(name: "DMA1_Channel1_IRQn", value: 11)
!661 = !DIEnumerator(name: "DMA1_Channel2_IRQn", value: 12)
!662 = !DIEnumerator(name: "DMA1_Channel3_IRQn", value: 13)
!663 = !DIEnumerator(name: "DMA1_Channel4_IRQn", value: 14)
!664 = !DIEnumerator(name: "DMA1_Channel5_IRQn", value: 15)
!665 = !DIEnumerator(name: "DMA1_Channel6_IRQn", value: 16)
!666 = !DIEnumerator(name: "DMA1_Channel7_IRQn", value: 17)
!667 = !DIEnumerator(name: "ADC1_2_IRQn", value: 18)
!668 = !DIEnumerator(name: "USB_HP_CAN1_TX_IRQn", value: 19)
!669 = !DIEnumerator(name: "USB_LP_CAN1_RX0_IRQn", value: 20)
!670 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!671 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!672 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!673 = !DIEnumerator(name: "TIM1_BRK_IRQn", value: 24)
!674 = !DIEnumerator(name: "TIM1_UP_IRQn", value: 25)
!675 = !DIEnumerator(name: "TIM1_TRG_COM_IRQn", value: 26)
!676 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!677 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!678 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!679 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!680 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!681 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!682 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!683 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!684 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!685 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!686 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!687 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!688 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!689 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!690 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!691 = !DIEnumerator(name: "USBWakeUp_IRQn", value: 42)
!692 = !{!693, !103, !706, !720, !728, !734}
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 32)
!694 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !98, line: 336, baseType: !695)
!695 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !98, line: 325, size: 288, elements: !696)
!696 = !{!697, !698, !699, !700, !701, !702, !703, !704, !705}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !695, file: !98, line: 327, baseType: !102, size: 32)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !695, file: !98, line: 328, baseType: !102, size: 32, offset: 32)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !695, file: !98, line: 329, baseType: !102, size: 32, offset: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !695, file: !98, line: 330, baseType: !102, size: 32, offset: 96)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !695, file: !98, line: 331, baseType: !102, size: 32, offset: 128)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "AR", scope: !695, file: !98, line: 332, baseType: !102, size: 32, offset: 160)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !695, file: !98, line: 333, baseType: !102, size: 32, offset: 192)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !695, file: !98, line: 334, baseType: !102, size: 32, offset: 224)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR", scope: !695, file: !98, line: 335, baseType: !102, size: 32, offset: 256)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 32)
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !98, line: 438, baseType: !708)
!708 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !98, line: 424, size: 320, elements: !709)
!709 = !{!710, !711, !712, !713, !714, !715, !716, !717, !718, !719}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !708, file: !98, line: 426, baseType: !102, size: 32)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !708, file: !98, line: 427, baseType: !102, size: 32, offset: 32)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !708, file: !98, line: 428, baseType: !102, size: 32, offset: 64)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !708, file: !98, line: 429, baseType: !102, size: 32, offset: 96)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !708, file: !98, line: 430, baseType: !102, size: 32, offset: 128)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !708, file: !98, line: 431, baseType: !102, size: 32, offset: 160)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !708, file: !98, line: 432, baseType: !102, size: 32, offset: 192)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !708, file: !98, line: 433, baseType: !102, size: 32, offset: 224)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !708, file: !98, line: 434, baseType: !102, size: 32, offset: 256)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !708, file: !98, line: 435, baseType: !102, size: 32, offset: 288)
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 32)
!721 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !572, line: 700, baseType: !722)
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 694, size: 128, elements: !723)
!723 = !{!724, !725, !726, !727}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !722, file: !572, line: 696, baseType: !102, size: 32)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !722, file: !572, line: 697, baseType: !102, size: 32, offset: 32)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !722, file: !572, line: 698, baseType: !102, size: 32, offset: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !722, file: !572, line: 699, baseType: !576, size: 32, offset: 96)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 32)
!729 = !DIDerivedType(tag: DW_TAG_typedef, name: "DBGMCU_TypeDef", file: !98, line: 285, baseType: !730)
!730 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !98, line: 281, size: 64, elements: !731)
!731 = !{!732, !733}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "IDCODE", scope: !730, file: !98, line: 283, baseType: !102, size: 32)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !730, file: !98, line: 284, baseType: !102, size: 32, offset: 32)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!735 = !{!620, !736, !739}
!736 = !DIGlobalVariableExpression(var: !737, expr: !DIExpression())
!737 = distinct !DIGlobalVariable(name: "uwTickFreq", scope: !622, file: !623, line: 81, type: !738, isLocal: false, isDefinition: true)
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_TickFreqTypeDef", file: !626, line: 55, baseType: !625)
!739 = !DIGlobalVariableExpression(var: !740, expr: !DIExpression())
!740 = distinct !DIGlobalVariable(name: "uwTick", scope: !622, file: !623, line: 79, type: !102, isLocal: false, isDefinition: true)
!741 = !DIGlobalVariableExpression(var: !742, expr: !DIExpression())
!742 = distinct !DIGlobalVariable(name: "_lineEndStr", linkageName: "_ZN6Cicada12ATCommDevice11_lineEndStrE", scope: !743, file: !744, line: 35, type: !86, isLocal: false, isDefinition: true, declaration: !829)
!743 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !744, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !745, globals: !865, imports: !870, splitDebugInlining: false, nameTableKind: None)
!744 = !DIFile(filename: "../cicada/commdevices/atcommdevice.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "2c00a0b2c5bf95afd2d356500bb68c03")
!745 = !{!66, !34, !59, !746}
!746 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "ATCommDevice", scope: !19, file: !747, line: 39, size: 1856, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !748, vtableHolder: !26)
!747 = !DIFile(filename: "../cicada/commdevices/atcommdevice.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "533b96ced66a81acd2797c3eeacc1c13")
!748 = !{!749, !752, !818, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !835, !838, !841, !844, !847, !850, !853, !854, !857, !860, !861, !862}
!749 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !746, baseType: !750, flags: DIFlagPublic, extraData: i32 0)
!750 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "IPCommDevice", scope: !19, file: !751, line: 42, size: 1152, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada12IPCommDeviceE")
!751 = !DIFile(filename: "../cicada/commdevices/ipcommdevice.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "5231d389687db9c7b4a2dc5416c977bf")
!752 = !DIDerivedType(tag: DW_TAG_member, name: "_serial", scope: !746, file: !747, line: 83, baseType: !753, size: 32, offset: 1120, flags: DIFlagProtected)
!753 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !754, size: 32)
!754 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "IBufferedSerial", scope: !19, file: !755, line: 39, size: 64, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !756, vtableHolder: !26, identifier: "_ZTSN6Cicada15IBufferedSerialE")
!755 = !DIFile(filename: "../cicada/ibufferedserial.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "0e5db7c0b86651abb573e233dc791166")
!756 = !{!757, !758, !788, !792, !795, !798, !801, !804, !807, !812, !813, !814, !817}
!757 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !754, baseType: !26, flags: DIFlagPublic, extraData: i32 0)
!758 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !754, baseType: !759, offset: 32, flags: DIFlagPublic, extraData: i32 0)
!759 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "ISerial", scope: !19, file: !760, line: 37, size: 32, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !761, vtableHolder: !759, identifier: "_ZTSN6Cicada7ISerialE")
!760 = !DIFile(filename: "../cicada/iserial.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e3dc53a2acd15a8e90c357a32168f40f")
!761 = !{!762, !763, !767, !770, !771, !774, !775, !780, !784, !787}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$ISerial", scope: !760, file: !760, baseType: !30, size: 32, flags: DIFlagArtificial)
!763 = !DISubprogram(name: "~ISerial", scope: !759, file: !760, line: 40, type: !764, scopeLine: 40, containingType: !759, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!764 = !DISubroutineType(types: !765)
!765 = !{null, !766}
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!767 = !DISubprogram(name: "open", linkageName: "_ZN6Cicada7ISerial4openEv", scope: !759, file: !760, line: 46, type: !768, scopeLine: 46, containingType: !759, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!768 = !DISubroutineType(types: !769)
!769 = !{!55, !766}
!770 = !DISubprogram(name: "isOpen", linkageName: "_ZN6Cicada7ISerial6isOpenEv", scope: !759, file: !760, line: 52, type: !768, scopeLine: 52, containingType: !759, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!771 = !DISubprogram(name: "setSerialConfig", linkageName: "_ZN6Cicada7ISerial15setSerialConfigEjh", scope: !759, file: !760, line: 60, type: !772, scopeLine: 60, containingType: !759, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!772 = !DISubroutineType(types: !773)
!773 = !{!55, !766, !103, !60}
!774 = !DISubprogram(name: "close", linkageName: "_ZN6Cicada7ISerial5closeEv", scope: !759, file: !760, line: 65, type: !764, scopeLine: 65, containingType: !759, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!775 = !DISubprogram(name: "portName", linkageName: "_ZNK6Cicada7ISerial8portNameEv", scope: !759, file: !760, line: 71, type: !776, scopeLine: 71, containingType: !759, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!776 = !DISubroutineType(types: !777)
!777 = !{!86, !778}
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !759)
!780 = !DISubprogram(name: "rawRead", linkageName: "_ZN6Cicada7ISerial7rawReadERh", scope: !759, file: !760, line: 80, type: !781, scopeLine: 80, containingType: !759, virtualIndex: 7, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!781 = !DISubroutineType(types: !782)
!782 = !{!55, !766, !783}
!783 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !60, size: 32)
!784 = !DISubprogram(name: "rawWrite", linkageName: "_ZN6Cicada7ISerial8rawWriteEh", scope: !759, file: !760, line: 87, type: !785, scopeLine: 87, containingType: !759, virtualIndex: 8, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!785 = !DISubroutineType(types: !786)
!786 = !{!55, !766, !60}
!787 = !DISubprogram(name: "startTransmit", linkageName: "_ZN6Cicada7ISerial13startTransmitEv", scope: !759, file: !760, line: 93, type: !764, scopeLine: 93, containingType: !759, virtualIndex: 9, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!788 = !DISubprogram(name: "~IBufferedSerial", scope: !754, file: !755, line: 42, type: !789, scopeLine: 42, containingType: !754, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!789 = !DISubroutineType(types: !790)
!790 = !{null, !791}
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!792 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada15IBufferedSerial4readEPhy", scope: !754, file: !755, line: 44, type: !793, scopeLine: 44, containingType: !754, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!793 = !DISubroutineType(types: !794)
!794 = !{!42, !791, !59, !42}
!795 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada15IBufferedSerial5writeEPKhy", scope: !754, file: !755, line: 45, type: !796, scopeLine: 45, containingType: !754, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!796 = !DISubroutineType(types: !797)
!797 = !{!42, !791, !66, !42}
!798 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada15IBufferedSerial4readEv", scope: !754, file: !755, line: 51, type: !799, scopeLine: 51, containingType: !754, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!799 = !DISubroutineType(types: !800)
!800 = !{!60, !791}
!801 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada15IBufferedSerial5writeEPKh", scope: !754, file: !755, line: 62, type: !802, scopeLine: 62, containingType: !754, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!802 = !DISubroutineType(types: !803)
!803 = !{!42, !791, !66}
!804 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada15IBufferedSerial5writeEh", scope: !754, file: !755, line: 68, type: !805, scopeLine: 68, containingType: !754, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!805 = !DISubroutineType(types: !806)
!806 = !{null, !791, !60}
!807 = !DISubprogram(name: "canReadLine", linkageName: "_ZNK6Cicada15IBufferedSerial11canReadLineEv", scope: !754, file: !755, line: 73, type: !808, scopeLine: 73, containingType: !754, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!808 = !DISubroutineType(types: !809)
!809 = !{!55, !810}
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!811 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !754)
!812 = !DISubprogram(name: "readLine", linkageName: "_ZN6Cicada15IBufferedSerial8readLineEPhy", scope: !754, file: !755, line: 85, type: !793, scopeLine: 85, containingType: !754, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!813 = !DISubprogram(name: "flushReceiveBuffers", linkageName: "_ZN6Cicada15IBufferedSerial19flushReceiveBuffersEv", scope: !754, file: !755, line: 90, type: !789, scopeLine: 90, containingType: !754, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!814 = !DISubprogram(name: "readBufferSize", linkageName: "_ZN6Cicada15IBufferedSerial14readBufferSizeEv", scope: !754, file: !755, line: 95, type: !815, scopeLine: 95, containingType: !754, virtualIndex: 13, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!815 = !DISubroutineType(types: !816)
!816 = !{!42, !791}
!817 = !DISubprogram(name: "writeBufferSize", linkageName: "_ZN6Cicada15IBufferedSerial15writeBufferSizeEv", scope: !754, file: !755, line: 96, type: !815, scopeLine: 96, containingType: !754, virtualIndex: 14, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "_lineBuffer", scope: !746, file: !747, line: 85, baseType: !819, size: 488, offset: 1152, flags: DIFlagProtected)
!819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 488, elements: !820)
!820 = !{!821}
!821 = !DISubrange(count: 61)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "_lbFill", scope: !746, file: !747, line: 86, baseType: !60, size: 8, offset: 1640, flags: DIFlagProtected)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "_sendState", scope: !746, file: !747, line: 88, baseType: !193, size: 8, offset: 1648, flags: DIFlagProtected)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "_replyState", scope: !746, file: !747, line: 89, baseType: !193, size: 8, offset: 1656, flags: DIFlagProtected)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "_bytesToWrite", scope: !746, file: !747, line: 90, baseType: !42, size: 64, offset: 1664, flags: DIFlagProtected)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "_bytesToReceive", scope: !746, file: !747, line: 91, baseType: !42, size: 64, offset: 1728, flags: DIFlagProtected)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "_bytesToRead", scope: !746, file: !747, line: 92, baseType: !42, size: 64, offset: 1792, flags: DIFlagProtected)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "_okStr", scope: !746, file: !747, line: 94, baseType: !86, flags: DIFlagProtected | DIFlagStaticMember)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "_lineEndStr", scope: !746, file: !747, line: 95, baseType: !86, flags: DIFlagProtected | DIFlagStaticMember)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "_quoteEndStr", scope: !746, file: !747, line: 96, baseType: !86, flags: DIFlagProtected | DIFlagStaticMember)
!831 = !DISubprogram(name: "ATCommDevice", scope: !746, file: !747, line: 42, type: !832, scopeLine: 42, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!832 = !DISubroutineType(types: !833)
!833 = !{null, !834, !753, !59, !59, !42}
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!835 = !DISubprogram(name: "ATCommDevice", scope: !746, file: !747, line: 44, type: !836, scopeLine: 44, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!836 = !DISubroutineType(types: !837)
!837 = !{null, !834, !753, !59, !59, !42, !42}
!838 = !DISubprogram(name: "~ATCommDevice", scope: !746, file: !747, line: 46, type: !839, scopeLine: 46, containingType: !746, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!839 = !DISubroutineType(types: !840)
!840 = !{null, !834}
!841 = !DISubprogram(name: "serialWrite", linkageName: "_ZN6Cicada12ATCommDevice11serialWriteEPc", scope: !746, file: !747, line: 59, type: !842, scopeLine: 59, containingType: !746, virtualIndex: 13, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!842 = !DISubroutineType(types: !843)
!843 = !{!42, !834, !335}
!844 = !DISubprogram(name: "serialRead", linkageName: "_ZN6Cicada12ATCommDevice10serialReadEPcy", scope: !746, file: !747, line: 71, type: !845, scopeLine: 71, containingType: !746, virtualIndex: 14, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!845 = !DISubroutineType(types: !846)
!846 = !{!42, !834, !335, !42}
!847 = !DISubprogram(name: "logStates", linkageName: "_ZN6Cicada12ATCommDevice9logStatesEaa", scope: !746, file: !747, line: 74, type: !848, scopeLine: 74, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!848 = !DISubroutineType(types: !849)
!849 = !{null, !834, !193, !193}
!850 = !DISubprogram(name: "handleDisconnect", linkageName: "_ZN6Cicada12ATCommDevice16handleDisconnectEa", scope: !746, file: !747, line: 75, type: !851, scopeLine: 75, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!851 = !DISubroutineType(types: !852)
!852 = !{!55, !834, !193}
!853 = !DISubprogram(name: "handleConnect", linkageName: "_ZN6Cicada12ATCommDevice13handleConnectEa", scope: !746, file: !747, line: 76, type: !851, scopeLine: 76, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!854 = !DISubprogram(name: "sendCommand", linkageName: "_ZN6Cicada12ATCommDevice11sendCommandEPKc", scope: !746, file: !747, line: 77, type: !855, scopeLine: 77, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!855 = !DISubroutineType(types: !856)
!856 = !{null, !834, !86}
!857 = !DISubprogram(name: "prepareSending", linkageName: "_ZN6Cicada12ATCommDevice14prepareSendingEb", scope: !746, file: !747, line: 78, type: !858, scopeLine: 78, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!858 = !DISubroutineType(types: !859)
!859 = !{!55, !834, !55}
!860 = !DISubprogram(name: "sendData", linkageName: "_ZN6Cicada12ATCommDevice8sendDataEv", scope: !746, file: !747, line: 79, type: !839, scopeLine: 79, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!861 = !DISubprogram(name: "flushReadBuffer", linkageName: "_ZN6Cicada12ATCommDevice15flushReadBufferEv", scope: !746, file: !747, line: 80, type: !839, scopeLine: 80, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!862 = !DISubprogram(name: "receive", linkageName: "_ZN6Cicada12ATCommDevice7receiveEv", scope: !746, file: !747, line: 81, type: !863, scopeLine: 81, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!863 = !DISubroutineType(types: !864)
!864 = !{!55, !834}
!865 = !{!866, !741, !868}
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "_okStr", linkageName: "_ZN6Cicada12ATCommDevice6_okStrE", scope: !743, file: !744, line: 34, type: !86, isLocal: false, isDefinition: true, declaration: !828)
!868 = !DIGlobalVariableExpression(var: !869, expr: !DIExpression())
!869 = distinct !DIGlobalVariable(name: "_quoteEndStr", linkageName: "_ZN6Cicada12ATCommDevice12_quoteEndStrE", scope: !743, file: !744, line: 36, type: !86, isLocal: false, isDefinition: true, declaration: !830)
!870 = !{!191, !197, !201, !204, !208, !211, !213, !215, !217, !220, !223, !226, !229, !232, !235, !236, !237, !238, !239, !241, !243, !245, !247, !250, !253, !256, !259, !262, !871, !876, !880, !884, !890, !894, !901, !905, !910, !986, !988, !993, !997, !999, !1001, !1003, !1005, !1010, !1014, !1018, !1022, !1026, !1030, !1034, !1038, !1040, !1044, !1050, !1054, !1058, !1060, !1062, !1066, !1070, !1072, !1074, !1076, !1078, !1082, !1084, !1086, !1090, !1094, !1098, !1102, !1106, !1110, !1112, !1121, !1125, !1129, !1133, !1135, !1137, !1141, !1145, !1146, !1147, !1148, !1149, !1150, !1159, !1163, !1167, !1169, !1173, !1177, !1179, !1181, !1183, !1187, !1191, !1195, !1199, !1203, !1205, !1207, !1209, !1213, !1217, !1221, !1223, !1225}
!871 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !872, file: !875, line: 58)
!872 = !DIDerivedType(tag: DW_TAG_typedef, name: "imaxdiv_t", file: !873, line: 315, baseType: !874)
!873 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/inttypes.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "1342af5b7f05910ff6fa824a20b79245")
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !873, line: 312, size: 128, flags: DIFlagFwdDecl, identifier: "_ZTS9imaxdiv_t")
!875 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/cinttypes", directory: "/home/mjshen/RTOSExploration")
!876 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !877, file: !875, line: 61)
!877 = !DISubprogram(name: "imaxabs", scope: !873, file: !873, line: 323, type: !878, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!878 = !DISubroutineType(types: !879)
!879 = !{!230, !230}
!880 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !881, file: !875, line: 62)
!881 = !DISubprogram(name: "imaxdiv", scope: !873, file: !873, line: 324, type: !882, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!882 = !DISubroutineType(types: !883)
!883 = !{!872, !230, !230}
!884 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !885, file: !875, line: 68)
!885 = !DISubprogram(name: "strtoimax", scope: !873, file: !873, line: 325, type: !886, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!886 = !DISubroutineType(types: !887)
!887 = !{!230, !888, !889, !34}
!888 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !86)
!889 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !380)
!890 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !891, file: !875, line: 69)
!891 = !DISubprogram(name: "strtoumax", scope: !873, file: !873, line: 327, type: !892, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!892 = !DISubroutineType(types: !893)
!893 = !{!260, !888, !889, !34}
!894 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !895, file: !875, line: 72)
!895 = !DISubprogram(name: "wcstoimax", scope: !873, file: !873, line: 329, type: !896, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!896 = !DISubroutineType(types: !897)
!897 = !{!230, !898, !899, !34}
!898 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !396)
!899 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !900)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 32)
!901 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !902, file: !875, line: 73)
!902 = !DISubprogram(name: "wcstoumax", scope: !873, file: !873, line: 331, type: !903, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!903 = !DISubroutineType(types: !904)
!904 = !{!260, !898, !899, !34}
!905 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !906, file: !909, line: 58)
!906 = !DIDerivedType(tag: DW_TAG_typedef, name: "max_align_t", file: !907, line: 24, baseType: !908)
!907 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/__stddef_max_align_t.h", directory: "", checksumkind: CSK_MD5, checksum: "48e8e2456f77e6cda35d245130fa7259")
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !907, line: 19, size: 128, flags: DIFlagFwdDecl, identifier: "_ZTS11max_align_t")
!909 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/cstddef", directory: "/home/mjshen/RTOSExploration")
!910 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !911, file: !985, line: 98)
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !912, line: 66, baseType: !913)
!912 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "f9fec3134fbe599333115bffe9fa8133")
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !914, line: 292, baseType: !915)
!914 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "c7a2657565d7077fe3d3f464b271e0ba")
!915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !914, line: 186, size: 832, flags: DIFlagTypePassByValue, elements: !916, identifier: "_ZTS7__sFILE")
!916 = !{!917, !919, !920, !921, !922, !923, !928, !929, !930, !936, !940, !946, !950, !951, !952, !953, !957, !961, !962, !963, !965, !966, !972, !984}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !915, file: !914, line: 187, baseType: !918, size: 32)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 32)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !915, file: !914, line: 188, baseType: !34, size: 32, offset: 32)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !915, file: !914, line: 189, baseType: !34, size: 32, offset: 64)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !915, file: !914, line: 190, baseType: !200, size: 16, offset: 96)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !915, file: !914, line: 191, baseType: !200, size: 16, offset: 112)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !915, file: !914, line: 192, baseType: !924, size: 64, offset: 128)
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !914, line: 122, size: 64, flags: DIFlagTypePassByValue, elements: !925, identifier: "_ZTS6__sbuf")
!925 = !{!926, !927}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !924, file: !914, line: 123, baseType: !918, size: 32)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !924, file: !914, line: 124, baseType: !34, size: 32, offset: 32)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !915, file: !914, line: 193, baseType: !34, size: 32, offset: 192)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !915, file: !914, line: 200, baseType: !306, size: 32, offset: 224)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !915, file: !914, line: 202, baseType: !931, size: 32, offset: 256)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 32)
!932 = !DISubroutineType(types: !933)
!933 = !{!34, !934, !306, !335, !34}
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 32)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !914, line: 613, size: 8512, flags: DIFlagFwdDecl, identifier: "_ZTS6_reent")
!936 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !915, file: !914, line: 204, baseType: !937, size: 32, offset: 288)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 32)
!938 = !DISubroutineType(types: !939)
!939 = !{!34, !934, !306, !86, !34}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !915, file: !914, line: 207, baseType: !941, size: 32, offset: 320)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 32)
!942 = !DISubroutineType(types: !943)
!943 = !{!944, !934, !306, !944, !34}
!944 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !945, line: 116, baseType: !280)
!945 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "b45aad52ebaa1042158f2766af29f8e2")
!946 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !915, file: !914, line: 208, baseType: !947, size: 32, offset: 352)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 32)
!948 = !DISubroutineType(types: !949)
!949 = !{!34, !934, !306}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !915, file: !914, line: 211, baseType: !924, size: 64, offset: 384)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !915, file: !914, line: 212, baseType: !918, size: 32, offset: 448)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !915, file: !914, line: 213, baseType: !34, size: 32, offset: 480)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !915, file: !914, line: 216, baseType: !954, size: 24, offset: 512)
!954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 24, elements: !955)
!955 = !{!956}
!956 = !DISubrange(count: 3)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !915, file: !914, line: 217, baseType: !958, size: 8, offset: 536)
!958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 8, elements: !959)
!959 = !{!960}
!960 = !DISubrange(count: 1)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !915, file: !914, line: 220, baseType: !924, size: 64, offset: 544)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !915, file: !914, line: 223, baseType: !34, size: 32, offset: 608)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !915, file: !914, line: 224, baseType: !964, size: 32, offset: 640)
!964 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !945, line: 46, baseType: !280)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !915, file: !914, line: 227, baseType: !934, size: 32, offset: 672)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !915, file: !914, line: 231, baseType: !967, size: 32, offset: 704)
!967 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !914, line: 35, baseType: !968)
!968 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !969, line: 34, baseType: !970)
!969 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "9390f2fa4a45b9ec624c9a037c5d6ca9")
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 32)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !969, line: 33, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTS6__lock")
!972 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !915, file: !914, line: 233, baseType: !973, size: 64, offset: 736)
!973 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !945, line: 170, baseType: !974)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !945, line: 162, size: 64, flags: DIFlagTypePassByValue, elements: !975, identifier: "_ZTS10_mbstate_t")
!975 = !{!976, !977}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !974, file: !945, line: 164, baseType: !34, size: 32)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !974, file: !945, line: 169, baseType: !978, size: 32, offset: 32)
!978 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !974, file: !945, line: 165, size: 32, flags: DIFlagTypePassByValue, elements: !979, identifier: "_ZTSN10_mbstate_tUt_E")
!979 = !{!980, !982}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !978, file: !945, line: 167, baseType: !981, size: 32)
!981 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !310, line: 116, baseType: !34)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !978, file: !945, line: 168, baseType: !983, size: 32)
!983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 32, elements: !600)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !915, file: !914, line: 234, baseType: !34, size: 32, offset: 800)
!985 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/cstdio", directory: "/home/mjshen/RTOSExploration")
!986 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !987, file: !985, line: 99)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "fpos_t", file: !912, line: 73, baseType: !944)
!988 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !989, file: !985, line: 101)
!989 = !DISubprogram(name: "clearerr", scope: !912, file: !912, line: 238, type: !990, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!990 = !DISubroutineType(types: !991)
!991 = !{null, !992}
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 32)
!993 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !994, file: !985, line: 102)
!994 = !DISubprogram(name: "fclose", scope: !912, file: !912, line: 191, type: !995, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!995 = !DISubroutineType(types: !996)
!996 = !{!34, !992}
!997 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !998, file: !985, line: 103)
!998 = !DISubprogram(name: "feof", scope: !912, file: !912, line: 239, type: !995, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!999 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1000, file: !985, line: 104)
!1000 = !DISubprogram(name: "ferror", scope: !912, file: !912, line: 240, type: !995, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1001 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1002, file: !985, line: 105)
!1002 = !DISubprogram(name: "fflush", scope: !912, file: !912, line: 192, type: !995, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1003 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1004, file: !985, line: 106)
!1004 = !DISubprogram(name: "fgetc", scope: !912, file: !912, line: 212, type: !995, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1005 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1006, file: !985, line: 107)
!1006 = !DISubprogram(name: "fgetpos", scope: !912, file: !912, line: 228, type: !1007, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!34, !992, !1009}
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 32)
!1010 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1011, file: !985, line: 108)
!1011 = !DISubprogram(name: "fgets", scope: !912, file: !912, line: 213, type: !1012, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1012 = !DISubroutineType(types: !1013)
!1013 = !{!335, !335, !34, !992}
!1014 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1015, file: !985, line: 109)
!1015 = !DISubprogram(name: "fopen", scope: !912, file: !912, line: 243, type: !1016, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1016 = !DISubroutineType(types: !1017)
!1017 = !{!992, !86, !86}
!1018 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1019, file: !985, line: 110)
!1019 = !DISubprogram(name: "fprintf", scope: !912, file: !912, line: 196, type: !1020, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!34, !992, !86, null}
!1022 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1023, file: !985, line: 111)
!1023 = !DISubprogram(name: "fputc", scope: !912, file: !912, line: 214, type: !1024, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{!34, !34, !992}
!1026 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1027, file: !985, line: 112)
!1027 = !DISubprogram(name: "fputs", scope: !912, file: !912, line: 215, type: !1028, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1028 = !DISubroutineType(types: !1029)
!1029 = !{!34, !86, !992}
!1030 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1031, file: !985, line: 113)
!1031 = !DISubprogram(name: "fread", scope: !912, file: !912, line: 223, type: !1032, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1032 = !DISubroutineType(types: !1033)
!1033 = !{!309, !306, !309, !309, !992}
!1034 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1035, file: !985, line: 114)
!1035 = !DISubprogram(name: "freopen", scope: !912, file: !912, line: 193, type: !1036, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{!992, !86, !86, !992}
!1038 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1039, file: !985, line: 115)
!1039 = !DISubprogram(name: "fscanf", scope: !912, file: !912, line: 198, type: !1020, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1040 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1041, file: !985, line: 116)
!1041 = !DISubprogram(name: "fseek", scope: !912, file: !912, line: 230, type: !1042, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1042 = !DISubroutineType(types: !1043)
!1043 = !{!34, !992, !280, !34}
!1044 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1045, file: !985, line: 117)
!1045 = !DISubprogram(name: "fsetpos", scope: !912, file: !912, line: 234, type: !1046, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!34, !992, !1048}
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 32)
!1049 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !987)
!1050 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1051, file: !985, line: 118)
!1051 = !DISubprogram(name: "ftell", scope: !912, file: !912, line: 236, type: !1052, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!280, !992}
!1054 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1055, file: !985, line: 119)
!1055 = !DISubprogram(name: "fwrite", scope: !912, file: !912, line: 224, type: !1056, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!309, !307, !309, !309, !992}
!1058 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1059, file: !985, line: 120)
!1059 = !DISubprogram(name: "getc", scope: !912, file: !912, line: 216, type: !995, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1060 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1061, file: !985, line: 121)
!1061 = !DISubprogram(name: "getchar", scope: !912, file: !912, line: 217, type: !32, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1062 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1063, file: !985, line: 126)
!1063 = !DISubprogram(name: "perror", scope: !912, file: !912, line: 241, type: !1064, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{null, !86}
!1066 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1067, file: !985, line: 127)
!1067 = !DISubprogram(name: "printf", scope: !912, file: !912, line: 200, type: !1068, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1068 = !DISubroutineType(types: !1069)
!1069 = !{!34, !86, null}
!1070 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1071, file: !985, line: 128)
!1071 = !DISubprogram(name: "putc", scope: !912, file: !912, line: 219, type: !1024, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1072 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1073, file: !985, line: 129)
!1073 = !DISubprogram(name: "putchar", scope: !912, file: !912, line: 220, type: !268, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1074 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1075, file: !985, line: 130)
!1075 = !DISubprogram(name: "puts", scope: !912, file: !912, line: 221, type: !296, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1076 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1077, file: !985, line: 131)
!1077 = !DISubprogram(name: "remove", scope: !912, file: !912, line: 246, type: !296, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1078 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1079, file: !985, line: 132)
!1079 = !DISubprogram(name: "rename", scope: !912, file: !912, line: 247, type: !1080, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{!34, !86, !86}
!1082 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1083, file: !985, line: 133)
!1083 = !DISubprogram(name: "rewind", scope: !912, file: !912, line: 237, type: !990, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1084 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1085, file: !985, line: 134)
!1085 = !DISubprogram(name: "scanf", scope: !912, file: !912, line: 202, type: !1068, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1086 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1087, file: !985, line: 135)
!1087 = !DISubprogram(name: "setbuf", scope: !912, file: !912, line: 194, type: !1088, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1088 = !DISubroutineType(types: !1089)
!1089 = !{null, !992, !335}
!1090 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1091, file: !985, line: 136)
!1091 = !DISubprogram(name: "setvbuf", scope: !912, file: !912, line: 195, type: !1092, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!34, !992, !335, !34, !309}
!1094 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1095, file: !985, line: 137)
!1095 = !DISubprogram(name: "sprintf", scope: !912, file: !912, line: 244, type: !1096, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{!34, !335, !86, null}
!1098 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1099, file: !985, line: 138)
!1099 = !DISubprogram(name: "sscanf", scope: !912, file: !912, line: 204, type: !1100, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{!34, !86, !86, null}
!1102 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1103, file: !985, line: 139)
!1103 = !DISubprogram(name: "tmpfile", scope: !912, file: !912, line: 186, type: !1104, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{!992}
!1106 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1107, file: !985, line: 141)
!1107 = !DISubprogram(name: "tmpnam", scope: !912, file: !912, line: 187, type: !1108, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!335, !335}
!1110 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1111, file: !985, line: 143)
!1111 = !DISubprogram(name: "ungetc", scope: !912, file: !912, line: 222, type: !1024, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1112 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1113, file: !985, line: 144)
!1113 = !DISubprogram(name: "vfprintf", scope: !912, file: !912, line: 206, type: !1114, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1114 = !DISubroutineType(types: !1115)
!1115 = !{!34, !992, !86, !1116}
!1116 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1117, line: 32, baseType: !1118)
!1117 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "", checksumkind: CSK_MD5, checksum: "4de3cbd931b589d291e5c39387aecf82")
!1118 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1119, baseType: !1120)
!1119 = !DIFile(filename: "../cicada/commdevices/atcommdevice.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build")
!1120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", scope: !192, file: !1119, size: 32, flags: DIFlagFwdDecl, identifier: "_ZTSSt9__va_list")
!1121 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1122, file: !985, line: 145)
!1122 = !DISubprogram(name: "vprintf", scope: !912, file: !912, line: 208, type: !1123, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1123 = !DISubroutineType(types: !1124)
!1124 = !{!34, !86, !1116}
!1125 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1126, file: !985, line: 146)
!1126 = !DISubprogram(name: "vsprintf", scope: !912, file: !912, line: 210, type: !1127, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1127 = !DISubroutineType(types: !1128)
!1128 = !{!34, !335, !86, !1116}
!1129 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !403, entity: !1130, file: !985, line: 175)
!1130 = !DISubprogram(name: "snprintf", scope: !912, file: !912, line: 266, type: !1131, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1131 = !DISubroutineType(types: !1132)
!1132 = !{!34, !335, !309, !86, null}
!1133 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !403, entity: !1134, file: !985, line: 176)
!1134 = !DISubprogram(name: "vfscanf", scope: !912, file: !912, line: 270, type: !1114, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1135 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !403, entity: !1136, file: !985, line: 177)
!1136 = !DISubprogram(name: "vscanf", scope: !912, file: !912, line: 272, type: !1123, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1137 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !403, entity: !1138, file: !985, line: 178)
!1138 = !DISubprogram(name: "vsnprintf", scope: !912, file: !912, line: 268, type: !1139, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1139 = !DISubroutineType(types: !1140)
!1140 = !{!34, !335, !309, !86, !1116}
!1141 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !403, entity: !1142, file: !985, line: 179)
!1142 = !DISubprogram(name: "vsscanf", scope: !912, file: !912, line: 274, type: !1143, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{!34, !86, !86, !1116}
!1145 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1130, file: !985, line: 185)
!1146 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1134, file: !985, line: 186)
!1147 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1136, file: !985, line: 187)
!1148 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1138, file: !985, line: 188)
!1149 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1142, file: !985, line: 189)
!1150 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1151, file: !1158, line: 77)
!1151 = !DISubprogram(name: "memchr", scope: !1152, file: !1152, line: 29, type: !1153, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1152 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/string.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "00b3471f69c722645cab66876c511e27")
!1153 = !DISubroutineType(types: !1154)
!1154 = !{!306, !307, !34, !1155}
!1155 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1156, line: 40, baseType: !1157)
!1156 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/strings.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "dceb1b71cd72987b246237af8552faba")
!1157 = !DIDerivedType(tag: DW_TAG_typedef, name: "__size_t", file: !945, line: 131, baseType: !10)
!1158 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/cstring", directory: "/home/mjshen/RTOSExploration")
!1159 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1160, file: !1158, line: 78)
!1160 = !DISubprogram(name: "memcmp", scope: !1152, file: !1152, line: 30, type: !1161, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1161 = !DISubroutineType(types: !1162)
!1162 = !{!34, !307, !307, !1155}
!1163 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1164, file: !1158, line: 79)
!1164 = !DISubprogram(name: "memcpy", scope: !1152, file: !1152, line: 31, type: !1165, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1165 = !DISubroutineType(types: !1166)
!1166 = !{!306, !306, !307, !1155}
!1167 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1168, file: !1158, line: 80)
!1168 = !DISubprogram(name: "memmove", scope: !1152, file: !1152, line: 32, type: !1165, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1169 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1170, file: !1158, line: 81)
!1170 = !DISubprogram(name: "memset", scope: !1152, file: !1152, line: 33, type: !1171, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!306, !306, !34, !1155}
!1173 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1174, file: !1158, line: 82)
!1174 = !DISubprogram(name: "strcat", scope: !1152, file: !1152, line: 34, type: !1175, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{!335, !335, !86}
!1177 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1178, file: !1158, line: 83)
!1178 = !DISubprogram(name: "strcmp", scope: !1152, file: !1152, line: 36, type: !1080, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1179 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1180, file: !1158, line: 84)
!1180 = !DISubprogram(name: "strcoll", scope: !1152, file: !1152, line: 37, type: !1080, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1181 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1182, file: !1158, line: 85)
!1182 = !DISubprogram(name: "strcpy", scope: !1152, file: !1152, line: 38, type: !1175, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1183 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1184, file: !1158, line: 86)
!1184 = !DISubprogram(name: "strcspn", scope: !1152, file: !1152, line: 39, type: !1185, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!1155, !86, !86}
!1187 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1188, file: !1158, line: 87)
!1188 = !DISubprogram(name: "strerror", scope: !1152, file: !1152, line: 40, type: !1189, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!335, !34}
!1191 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1192, file: !1158, line: 88)
!1192 = !DISubprogram(name: "strlen", scope: !1152, file: !1152, line: 41, type: !1193, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1193 = !DISubroutineType(types: !1194)
!1194 = !{!1155, !86}
!1195 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1196, file: !1158, line: 89)
!1196 = !DISubprogram(name: "strncat", scope: !1152, file: !1152, line: 42, type: !1197, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1197 = !DISubroutineType(types: !1198)
!1198 = !{!335, !335, !86, !1155}
!1199 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1200, file: !1158, line: 90)
!1200 = !DISubprogram(name: "strncmp", scope: !1152, file: !1152, line: 43, type: !1201, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1201 = !DISubroutineType(types: !1202)
!1202 = !{!34, !86, !86, !1155}
!1203 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1204, file: !1158, line: 91)
!1204 = !DISubprogram(name: "strncpy", scope: !1152, file: !1152, line: 44, type: !1197, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1205 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1206, file: !1158, line: 92)
!1206 = !DISubprogram(name: "strspn", scope: !1152, file: !1152, line: 47, type: !1185, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1207 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1208, file: !1158, line: 93)
!1208 = !DISubprogram(name: "strtok", scope: !1152, file: !1152, line: 50, type: !1175, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1209 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1210, file: !1158, line: 94)
!1210 = !DISubprogram(name: "strxfrm", scope: !1152, file: !1152, line: 52, type: !1211, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1211 = !DISubroutineType(types: !1212)
!1212 = !{!1155, !335, !86, !1155}
!1213 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1214, file: !1158, line: 95)
!1214 = !DISubprogram(name: "strchr", scope: !1152, file: !1152, line: 35, type: !1215, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1215 = !DISubroutineType(types: !1216)
!1216 = !{!335, !86, !34}
!1217 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1218, file: !1158, line: 96)
!1218 = !DISubprogram(name: "strpbrk", scope: !1152, file: !1152, line: 45, type: !1219, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1219 = !DISubroutineType(types: !1220)
!1220 = !{!335, !86, !86}
!1221 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1222, file: !1158, line: 97)
!1222 = !DISubprogram(name: "strrchr", scope: !1152, file: !1152, line: 46, type: !1215, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1223 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1224, file: !1158, line: 98)
!1224 = !DISubprogram(name: "strstr", scope: !1152, file: !1152, line: 48, type: !1219, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1225 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !743, entity: !19, file: !744, line: 32)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "instance", linkageName: "_ZN6Cicada9Stm32Uart8instanceE", scope: !1228, file: !1229, line: 32, type: !1333, isLocal: false, isDefinition: true, declaration: !1332)
!1228 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1229, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1230, retainedTypes: !1247, globals: !1426, imports: !1427, splitDebugInlining: false, nameTableKind: None)
!1229 = !DIFile(filename: "../cicada/platform/stm32f1/stm32uart.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "3cfb26aba75e1df83974cb6e4fff6457")
!1230 = !{!1231, !8, !1232, !1236}
!1231 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 69, baseType: !34, size: 32, elements: !639, identifier: "_ZTS9IRQn_Type")
!1232 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 52, baseType: !10, size: 32, elements: !1233, identifier: "_ZTS15HAL_LockTypeDef")
!1233 = !{!1234, !1235}
!1234 = !DIEnumerator(name: "HAL_UNLOCKED", value: 0, isUnsigned: true)
!1235 = !DIEnumerator(name: "HAL_LOCKED", value: 1, isUnsigned: true)
!1236 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, file: !1237, line: 117, baseType: !10, size: 32, elements: !1238, identifier: "_ZTS21HAL_UART_StateTypeDef")
!1237 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "74469f61b271b78e5ff5784cb5eb97d1")
!1238 = !{!1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246}
!1239 = !DIEnumerator(name: "HAL_UART_STATE_RESET", value: 0, isUnsigned: true)
!1240 = !DIEnumerator(name: "HAL_UART_STATE_READY", value: 32, isUnsigned: true)
!1241 = !DIEnumerator(name: "HAL_UART_STATE_BUSY", value: 36, isUnsigned: true)
!1242 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_TX", value: 33, isUnsigned: true)
!1243 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_RX", value: 34, isUnsigned: true)
!1244 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_TX_RX", value: 35, isUnsigned: true)
!1245 = !DIEnumerator(name: "HAL_UART_STATE_TIMEOUT", value: 160, isUnsigned: true)
!1246 = !DIEnumerator(name: "HAL_UART_STATE_ERROR", value: 224, isUnsigned: true)
!1247 = !{!103, !96, !1248, !1258, !111, !60, !89, !202, !1272, !1302, !1327}
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "AFIO_TypeDef", file: !98, line: 380, baseType: !1250)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !98, line: 373, size: 256, flags: DIFlagTypePassByValue, elements: !1251, identifier: "_ZTS12AFIO_TypeDef")
!1251 = !{!1252, !1253, !1254, !1256, !1257}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "EVCR", scope: !1250, file: !98, line: 375, baseType: !102, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "MAPR", scope: !1250, file: !98, line: 376, baseType: !102, size: 32, offset: 32)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1250, file: !98, line: 377, baseType: !1255, size: 128, offset: 64)
!1255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !102, size: 128, elements: !600)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1250, file: !98, line: 378, baseType: !103, size: 32, offset: 192)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "MAPR2", scope: !1250, file: !98, line: 379, baseType: !102, size: 32, offset: 224)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 32)
!1259 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !98, line: 438, baseType: !1260)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !98, line: 424, size: 320, flags: DIFlagTypePassByValue, elements: !1261, identifier: "_ZTS11RCC_TypeDef")
!1261 = !{!1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1260, file: !98, line: 426, baseType: !102, size: 32)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1260, file: !98, line: 427, baseType: !102, size: 32, offset: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1260, file: !98, line: 428, baseType: !102, size: 32, offset: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1260, file: !98, line: 429, baseType: !102, size: 32, offset: 96)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1260, file: !98, line: 430, baseType: !102, size: 32, offset: 128)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1260, file: !98, line: 431, baseType: !102, size: 32, offset: 160)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1260, file: !98, line: 432, baseType: !102, size: 32, offset: 192)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1260, file: !98, line: 433, baseType: !102, size: 32, offset: 224)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1260, file: !98, line: 434, baseType: !102, size: 32, offset: 256)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1260, file: !98, line: 435, baseType: !102, size: 32, offset: 288)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 32)
!1273 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !572, line: 355, baseType: !1274)
!1274 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 340, size: 28704, flags: DIFlagTypePassByValue, elements: !1275, identifier: "_ZTS9NVIC_Type")
!1275 = !{!1276, !1278, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1293, !1297, !1301}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1274, file: !572, line: 342, baseType: !1277, size: 256)
!1277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !102, size: 256, elements: !615)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1274, file: !572, line: 343, baseType: !1279, size: 768, offset: 256)
!1279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 768, elements: !1280)
!1280 = !{!1281}
!1281 = !DISubrange(count: 24)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1274, file: !572, line: 344, baseType: !1277, size: 256, offset: 1024)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !1274, file: !572, line: 345, baseType: !1279, size: 768, offset: 1280)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1274, file: !572, line: 346, baseType: !1277, size: 256, offset: 2048)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1274, file: !572, line: 347, baseType: !1279, size: 768, offset: 2304)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1274, file: !572, line: 348, baseType: !1277, size: 256, offset: 3072)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1274, file: !572, line: 349, baseType: !1279, size: 768, offset: 3328)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1274, file: !572, line: 350, baseType: !1277, size: 256, offset: 4096)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1274, file: !572, line: 351, baseType: !1290, size: 1792, offset: 4352)
!1290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 1792, elements: !1291)
!1291 = !{!1292}
!1292 = !DISubrange(count: 56)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1274, file: !572, line: 352, baseType: !1294, size: 1920, offset: 6144)
!1294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !584, size: 1920, elements: !1295)
!1295 = !{!1296}
!1296 = !DISubrange(count: 240)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1274, file: !572, line: 353, baseType: !1298, size: 20608, offset: 8064)
!1298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 20608, elements: !1299)
!1299 = !{!1300}
!1300 = !DISubrange(count: 644)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1274, file: !572, line: 354, baseType: !102, size: 32, offset: 28672)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 32)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !572, line: 397, baseType: !1304)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 374, size: 1120, flags: DIFlagTypePassByValue, elements: !1305, identifier: "_ZTS8SCB_Type")
!1305 = !{!1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1304, file: !572, line: 376, baseType: !576, size: 32)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1304, file: !572, line: 377, baseType: !102, size: 32, offset: 32)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1304, file: !572, line: 378, baseType: !102, size: 32, offset: 64)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1304, file: !572, line: 379, baseType: !102, size: 32, offset: 96)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1304, file: !572, line: 380, baseType: !102, size: 32, offset: 128)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1304, file: !572, line: 381, baseType: !102, size: 32, offset: 160)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1304, file: !572, line: 382, baseType: !583, size: 96, offset: 192)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1304, file: !572, line: 383, baseType: !102, size: 32, offset: 288)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1304, file: !572, line: 384, baseType: !102, size: 32, offset: 320)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1304, file: !572, line: 385, baseType: !102, size: 32, offset: 352)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1304, file: !572, line: 386, baseType: !102, size: 32, offset: 384)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1304, file: !572, line: 387, baseType: !102, size: 32, offset: 416)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1304, file: !572, line: 388, baseType: !102, size: 32, offset: 448)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1304, file: !572, line: 389, baseType: !102, size: 32, offset: 480)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1304, file: !572, line: 390, baseType: !593, size: 64, offset: 512)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1304, file: !572, line: 391, baseType: !576, size: 32, offset: 576)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1304, file: !572, line: 392, baseType: !576, size: 32, offset: 608)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1304, file: !572, line: 393, baseType: !599, size: 128, offset: 640)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1304, file: !572, line: 394, baseType: !603, size: 160, offset: 768)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1304, file: !572, line: 395, baseType: !607, size: 160, offset: 928)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1304, file: !572, line: 396, baseType: !102, size: 32, offset: 1088)
!1327 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Stm32Uart", scope: !19, file: !176, line: 51, size: 1536, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1328, vtableHolder: !26)
!1328 = !{!1329, !1332, !1335, !1336, !1372, !1373, !1374, !1375, !1377, !1381, !1384, !1387, !1390, !1393, !1396, !1397, !1400, !1401, !1406, !1409, !1410, !1411, !1414, !1415, !1419, !1423}
!1329 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1327, baseType: !1330, flags: DIFlagPublic, extraData: i32 0)
!1330 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "BufferedSerial", scope: !19, file: !1331, line: 42, size: 832, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada14BufferedSerialE")
!1331 = !DIFile(filename: "../cicada/bufferedserial.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "b9c9871d742db1af5ee8abb5df52fc59")
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "instance", scope: !1327, file: !176, line: 120, baseType: !1333, flags: DIFlagStaticMember)
!1333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1334, size: 128, elements: !600)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1327, file: !176, line: 122, baseType: !60, size: 8, offset: 832)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "_handle", scope: !1327, file: !176, line: 123, baseType: !1337, size: 576, offset: 864)
!1337 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_HandleTypeDef", file: !1237, line: 189, baseType: !1338)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__UART_HandleTypeDef", file: !1237, line: 141, size: 576, flags: DIFlagTypePassByValue, elements: !1339, identifier: "_ZTS20__UART_HandleTypeDef")
!1339 = !{!1340, !1341, !1352, !1353, !1354, !1356, !1357, !1358, !1359, !1364, !1365, !1367, !1370, !1371}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "Instance", scope: !1338, file: !1237, line: 143, baseType: !96, size: 32)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "Init", scope: !1338, file: !1237, line: 145, baseType: !1342, size: 224, offset: 32)
!1342 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_InitTypeDef", file: !1237, line: 76, baseType: !1343)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1237, line: 47, size: 224, flags: DIFlagTypePassByValue, elements: !1344, identifier: "_ZTS16UART_InitTypeDef")
!1344 = !{!1345, !1346, !1347, !1348, !1349, !1350, !1351}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "BaudRate", scope: !1343, file: !1237, line: 49, baseType: !103, size: 32)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "WordLength", scope: !1343, file: !1237, line: 54, baseType: !103, size: 32, offset: 32)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "StopBits", scope: !1343, file: !1237, line: 57, baseType: !103, size: 32, offset: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "Parity", scope: !1343, file: !1237, line: 60, baseType: !103, size: 32, offset: 96)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !1343, file: !1237, line: 67, baseType: !103, size: 32, offset: 128)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "HwFlowCtl", scope: !1343, file: !1237, line: 70, baseType: !103, size: 32, offset: 160)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "OverSampling", scope: !1343, file: !1237, line: 73, baseType: !103, size: 32, offset: 192)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "pTxBuffPtr", scope: !1338, file: !1237, line: 147, baseType: !59, size: 32, offset: 256)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "TxXferSize", scope: !1338, file: !1237, line: 149, baseType: !89, size: 16, offset: 288)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "TxXferCount", scope: !1338, file: !1237, line: 151, baseType: !1355, size: 16, offset: 304)
!1355 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !89)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "pRxBuffPtr", scope: !1338, file: !1237, line: 153, baseType: !59, size: 32, offset: 320)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "RxXferSize", scope: !1338, file: !1237, line: 155, baseType: !89, size: 16, offset: 352)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "RxXferCount", scope: !1338, file: !1237, line: 157, baseType: !1355, size: 16, offset: 368)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "hdmatx", scope: !1338, file: !1237, line: 159, baseType: !1360, size: 32, offset: 384)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 32)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_HandleTypeDef", file: !1362, line: 137, baseType: !1363)
!1362 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "dd8e7645a79a80f8166404bb078b3d4e")
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__DMA_HandleTypeDef", file: !1362, line: 111, size: 576, flags: DIFlagFwdDecl, identifier: "_ZTS19__DMA_HandleTypeDef")
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "hdmarx", scope: !1338, file: !1237, line: 161, baseType: !1360, size: 32, offset: 416)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "Lock", scope: !1338, file: !1237, line: 163, baseType: !1366, size: 32, offset: 448)
!1366 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_LockTypeDef", file: !9, line: 56, baseType: !1232)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "gState", scope: !1338, file: !1237, line: 165, baseType: !1368, size: 32, offset: 480)
!1368 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1369)
!1369 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_UART_StateTypeDef", file: !1237, line: 136, baseType: !1236)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "RxState", scope: !1338, file: !1237, line: 169, baseType: !1368, size: 32, offset: 512)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "ErrorCode", scope: !1338, file: !1237, line: 172, baseType: !102, size: 32, offset: 544)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "_uartPort", scope: !1327, file: !176, line: 124, baseType: !111, size: 32, offset: 1440)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "_txPin", scope: !1327, file: !176, line: 125, baseType: !89, size: 16, offset: 1472)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "_rxPin", scope: !1327, file: !176, line: 126, baseType: !89, size: 16, offset: 1488)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "_uartInterruptInstance", scope: !1327, file: !176, line: 127, baseType: !1376, size: 32, offset: 1504)
!1376 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !98, line: 126, baseType: !1231)
!1377 = !DISubprogram(name: "Stm32Uart", scope: !1327, file: !176, line: 66, type: !1378, scopeLine: 66, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1378 = !DISubroutineType(types: !1379)
!1379 = !{null, !1380, !335, !335, !42, !96, !111, !89, !89}
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1381 = !DISubprogram(name: "Stm32Uart", scope: !1327, file: !176, line: 83, type: !1382, scopeLine: 83, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1382 = !DISubroutineType(types: !1383)
!1383 = !{null, !1380, !335, !335, !42, !42, !96, !111, !89, !89}
!1384 = !DISubprogram(name: "~Stm32Uart", scope: !1327, file: !176, line: 86, type: !1385, scopeLine: 86, containingType: !1327, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1385 = !DISubroutineType(types: !1386)
!1386 = !{null, !1380}
!1387 = !DISubprogram(name: "getInstance", linkageName: "_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef", scope: !1327, file: !176, line: 88, type: !1388, scopeLine: 88, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!1388 = !DISubroutineType(types: !1389)
!1389 = !{!1334, !96}
!1390 = !DISubprogram(name: "open", linkageName: "_ZN6Cicada9Stm32Uart4openEv", scope: !1327, file: !176, line: 93, type: !1391, scopeLine: 93, containingType: !1327, virtualIndex: 15, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1391 = !DISubroutineType(types: !1392)
!1392 = !{!55, !1380}
!1393 = !DISubprogram(name: "open", linkageName: "_ZN6Cicada9Stm32Uart4openEh", scope: !1327, file: !176, line: 100, type: !1394, scopeLine: 100, containingType: !1327, virtualIndex: 16, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1394 = !DISubroutineType(types: !1395)
!1395 = !{!55, !1380, !60}
!1396 = !DISubprogram(name: "isOpen", linkageName: "_ZN6Cicada9Stm32Uart6isOpenEv", scope: !1327, file: !176, line: 102, type: !1391, scopeLine: 102, containingType: !1327, virtualIndex: 17, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1397 = !DISubprogram(name: "setSerialConfig", linkageName: "_ZN6Cicada9Stm32Uart15setSerialConfigEjh", scope: !1327, file: !176, line: 103, type: !1398, scopeLine: 103, containingType: !1327, virtualIndex: 18, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1398 = !DISubroutineType(types: !1399)
!1399 = !{!55, !1380, !103, !60}
!1400 = !DISubprogram(name: "close", linkageName: "_ZN6Cicada9Stm32Uart5closeEv", scope: !1327, file: !176, line: 104, type: !1385, scopeLine: 104, containingType: !1327, virtualIndex: 19, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1401 = !DISubprogram(name: "portName", linkageName: "_ZNK6Cicada9Stm32Uart8portNameEv", scope: !1327, file: !176, line: 105, type: !1402, scopeLine: 105, containingType: !1327, virtualIndex: 20, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1402 = !DISubroutineType(types: !1403)
!1403 = !{!86, !1404}
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1405 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1327)
!1406 = !DISubprogram(name: "rawRead", linkageName: "_ZN6Cicada9Stm32Uart7rawReadERh", scope: !1327, file: !176, line: 106, type: !1407, scopeLine: 106, containingType: !1327, virtualIndex: 21, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1407 = !DISubroutineType(types: !1408)
!1408 = !{!55, !1380, !783}
!1409 = !DISubprogram(name: "rawWrite", linkageName: "_ZN6Cicada9Stm32Uart8rawWriteEh", scope: !1327, file: !176, line: 107, type: !1394, scopeLine: 107, containingType: !1327, virtualIndex: 22, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1410 = !DISubprogram(name: "startTransmit", linkageName: "_ZN6Cicada9Stm32Uart13startTransmitEv", scope: !1327, file: !176, line: 108, type: !1385, scopeLine: 108, containingType: !1327, virtualIndex: 23, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1411 = !DISubprogram(name: "writeBufferProcessed", linkageName: "_ZNK6Cicada9Stm32Uart20writeBufferProcessedEv", scope: !1327, file: !176, line: 109, type: !1412, scopeLine: 109, containingType: !1327, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1412 = !DISubroutineType(types: !1413)
!1413 = !{!55, !1404}
!1414 = !DISubprogram(name: "handleInterrupt", linkageName: "_ZN6Cicada9Stm32Uart15handleInterruptEv", scope: !1327, file: !176, line: 111, type: !1385, scopeLine: 111, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1415 = !DISubprogram(name: "Stm32Uart", scope: !1327, file: !176, line: 115, type: !1416, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1416 = !DISubroutineType(types: !1417)
!1417 = !{null, !1380, !1418}
!1418 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1405, size: 32)
!1419 = !DISubprogram(name: "operator=", linkageName: "_ZN6Cicada9Stm32UartaSERKS0_", scope: !1327, file: !176, line: 116, type: !1420, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1420 = !DISubroutineType(types: !1421)
!1421 = !{!1422, !1380, !1418}
!1422 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1327, size: 32)
!1423 = !DISubprogram(name: "init", linkageName: "_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef", scope: !1327, file: !176, line: 118, type: !1424, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1424 = !DISubroutineType(types: !1425)
!1425 = !{null, !1380, !96}
!1426 = !{!1226}
!1427 = !{!191, !197, !201, !204, !208, !211, !213, !215, !217, !220, !223, !226, !229, !232, !235, !236, !237, !238, !239, !241, !243, !245, !247, !250, !253, !256, !259, !262, !1428}
!1428 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1228, entity: !19, file: !1229, line: 28)
!1429 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1430, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1431, retainedTypes: !1436, splitDebugInlining: false, nameTableKind: None)
!1430 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "bf5d5e021854d33cea3d58ed6b9d5087")
!1431 = !{!632, !550, !1432}
!1432 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !551, line: 157, baseType: !10, size: 32, elements: !1433)
!1433 = !{!1434, !1435}
!1434 = !DIEnumerator(name: "DISABLE", value: 0)
!1435 = !DIEnumerator(name: "ENABLE", value: 1)
!1436 = !{!1437, !103, !306, !60, !1451, !1452, !1458, !89, !1471, !1482}
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 32)
!1438 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !98, line: 438, baseType: !1439)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !98, line: 424, size: 320, elements: !1440)
!1440 = !{!1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1439, file: !98, line: 426, baseType: !102, size: 32)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1439, file: !98, line: 427, baseType: !102, size: 32, offset: 32)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1439, file: !98, line: 428, baseType: !102, size: 32, offset: 64)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1439, file: !98, line: 429, baseType: !102, size: 32, offset: 96)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1439, file: !98, line: 430, baseType: !102, size: 32, offset: 128)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1439, file: !98, line: 431, baseType: !102, size: 32, offset: 160)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1439, file: !98, line: 432, baseType: !102, size: 32, offset: 192)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1439, file: !98, line: 433, baseType: !102, size: 32, offset: 224)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1439, file: !98, line: 434, baseType: !102, size: 32, offset: 256)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1439, file: !98, line: 435, baseType: !102, size: 32, offset: 288)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 32)
!1453 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !98, line: 418, baseType: !1454)
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !98, line: 414, size: 64, elements: !1455)
!1455 = !{!1456, !1457}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1454, file: !98, line: 416, baseType: !102, size: 32)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1454, file: !98, line: 417, baseType: !102, size: 32, offset: 32)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 32)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !98, line: 336, baseType: !1460)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !98, line: 325, size: 288, elements: !1461)
!1461 = !{!1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !1460, file: !98, line: 327, baseType: !102, size: 32)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !1460, file: !98, line: 328, baseType: !102, size: 32, offset: 32)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !1460, file: !98, line: 329, baseType: !102, size: 32, offset: 64)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1460, file: !98, line: 330, baseType: !102, size: 32, offset: 96)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1460, file: !98, line: 331, baseType: !102, size: 32, offset: 128)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "AR", scope: !1460, file: !98, line: 332, baseType: !102, size: 32, offset: 160)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1460, file: !98, line: 333, baseType: !102, size: 32, offset: 192)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !1460, file: !98, line: 334, baseType: !102, size: 32, offset: 224)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR", scope: !1460, file: !98, line: 335, baseType: !102, size: 32, offset: 256)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !98, line: 367, baseType: !1473)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !98, line: 358, size: 224, elements: !1474)
!1474 = !{!1475, !1476, !1477, !1478, !1479, !1480, !1481}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "CRL", scope: !1473, file: !98, line: 360, baseType: !102, size: 32)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "CRH", scope: !1473, file: !98, line: 361, baseType: !102, size: 32, offset: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1473, file: !98, line: 362, baseType: !102, size: 32, offset: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1473, file: !98, line: 363, baseType: !102, size: 32, offset: 96)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1473, file: !98, line: 364, baseType: !102, size: 32, offset: 128)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1473, file: !98, line: 365, baseType: !102, size: 32, offset: 160)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1473, file: !98, line: 366, baseType: !102, size: 32, offset: 192)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 32)
!1483 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1484, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1485, retainedTypes: !1486, splitDebugInlining: false, nameTableKind: None)
!1484 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "83cb8d6817603f64d73dca2a0b01efa1")
!1485 = !{!638}
!1486 = !{!1487, !103, !1495, !202, !60, !1520}
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 32)
!1488 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !572, line: 700, baseType: !1489)
!1489 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 694, size: 128, elements: !1490)
!1490 = !{!1491, !1492, !1493, !1494}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1489, file: !572, line: 696, baseType: !102, size: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1489, file: !572, line: 697, baseType: !102, size: 32, offset: 32)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1489, file: !572, line: 698, baseType: !102, size: 32, offset: 64)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1489, file: !572, line: 699, baseType: !576, size: 32, offset: 96)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1496 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !572, line: 397, baseType: !1497)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 374, size: 1120, elements: !1498)
!1498 = !{!1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1497, file: !572, line: 376, baseType: !576, size: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1497, file: !572, line: 377, baseType: !102, size: 32, offset: 32)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1497, file: !572, line: 378, baseType: !102, size: 32, offset: 64)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1497, file: !572, line: 379, baseType: !102, size: 32, offset: 96)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1497, file: !572, line: 380, baseType: !102, size: 32, offset: 128)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1497, file: !572, line: 381, baseType: !102, size: 32, offset: 160)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1497, file: !572, line: 382, baseType: !583, size: 96, offset: 192)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1497, file: !572, line: 383, baseType: !102, size: 32, offset: 288)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1497, file: !572, line: 384, baseType: !102, size: 32, offset: 320)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1497, file: !572, line: 385, baseType: !102, size: 32, offset: 352)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1497, file: !572, line: 386, baseType: !102, size: 32, offset: 384)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1497, file: !572, line: 387, baseType: !102, size: 32, offset: 416)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1497, file: !572, line: 388, baseType: !102, size: 32, offset: 448)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1497, file: !572, line: 389, baseType: !102, size: 32, offset: 480)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1497, file: !572, line: 390, baseType: !593, size: 64, offset: 512)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1497, file: !572, line: 391, baseType: !576, size: 32, offset: 576)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1497, file: !572, line: 392, baseType: !576, size: 32, offset: 608)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1497, file: !572, line: 393, baseType: !599, size: 128, offset: 640)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1497, file: !572, line: 394, baseType: !603, size: 160, offset: 768)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1497, file: !572, line: 395, baseType: !607, size: 160, offset: 928)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1497, file: !572, line: 396, baseType: !102, size: 32, offset: 1088)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 32)
!1521 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !572, line: 355, baseType: !1522)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 340, size: 28704, elements: !1523)
!1523 = !{!1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1522, file: !572, line: 342, baseType: !1277, size: 256)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1522, file: !572, line: 343, baseType: !1279, size: 768, offset: 256)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1522, file: !572, line: 344, baseType: !1277, size: 256, offset: 1024)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !1522, file: !572, line: 345, baseType: !1279, size: 768, offset: 1280)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1522, file: !572, line: 346, baseType: !1277, size: 256, offset: 2048)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1522, file: !572, line: 347, baseType: !1279, size: 768, offset: 2304)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1522, file: !572, line: 348, baseType: !1277, size: 256, offset: 3072)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1522, file: !572, line: 349, baseType: !1279, size: 768, offset: 3328)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1522, file: !572, line: 350, baseType: !1277, size: 256, offset: 4096)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1522, file: !572, line: 351, baseType: !1290, size: 1792, offset: 4352)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1522, file: !572, line: 352, baseType: !1294, size: 1920, offset: 6144)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1522, file: !572, line: 353, baseType: !1298, size: 20608, offset: 8064)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1522, file: !572, line: 354, baseType: !102, size: 32, offset: 28672)
!1537 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1538, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1539, retainedTypes: !1545, splitDebugInlining: false, nameTableKind: None)
!1538 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "de98d9c05272efa2ca465428751dd1b5")
!1539 = !{!1540, !632}
!1540 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1541, line: 65, baseType: !10, size: 32, elements: !1542)
!1541 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "b5ff32b0624c591654a3e02ee400cffe")
!1542 = !{!1543, !1544}
!1543 = !DIEnumerator(name: "GPIO_PIN_RESET", value: 0)
!1544 = !DIEnumerator(name: "GPIO_PIN_SET", value: 1)
!1545 = !{!103, !89, !1546, !1560, !1569, !1580}
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !98, line: 438, baseType: !1548)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !98, line: 424, size: 320, elements: !1549)
!1549 = !{!1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1548, file: !98, line: 426, baseType: !102, size: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1548, file: !98, line: 427, baseType: !102, size: 32, offset: 32)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1548, file: !98, line: 428, baseType: !102, size: 32, offset: 64)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1548, file: !98, line: 429, baseType: !102, size: 32, offset: 96)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1548, file: !98, line: 430, baseType: !102, size: 32, offset: 128)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1548, file: !98, line: 431, baseType: !102, size: 32, offset: 160)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1548, file: !98, line: 432, baseType: !102, size: 32, offset: 192)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1548, file: !98, line: 433, baseType: !102, size: 32, offset: 224)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1548, file: !98, line: 434, baseType: !102, size: 32, offset: 256)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1548, file: !98, line: 435, baseType: !102, size: 32, offset: 288)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "AFIO_TypeDef", file: !98, line: 380, baseType: !1562)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !98, line: 373, size: 256, elements: !1563)
!1563 = !{!1564, !1565, !1566, !1567, !1568}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "EVCR", scope: !1562, file: !98, line: 375, baseType: !102, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "MAPR", scope: !1562, file: !98, line: 376, baseType: !102, size: 32, offset: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1562, file: !98, line: 377, baseType: !1255, size: 128, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1562, file: !98, line: 378, baseType: !103, size: 32, offset: 192)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "MAPR2", scope: !1562, file: !98, line: 379, baseType: !102, size: 32, offset: 224)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 32)
!1570 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !98, line: 367, baseType: !1571)
!1571 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !98, line: 358, size: 224, elements: !1572)
!1572 = !{!1573, !1574, !1575, !1576, !1577, !1578, !1579}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "CRL", scope: !1571, file: !98, line: 360, baseType: !102, size: 32)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "CRH", scope: !1571, file: !98, line: 361, baseType: !102, size: 32, offset: 32)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1571, file: !98, line: 362, baseType: !102, size: 32, offset: 64)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1571, file: !98, line: 363, baseType: !102, size: 32, offset: 96)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1571, file: !98, line: 364, baseType: !102, size: 32, offset: 128)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1571, file: !98, line: 365, baseType: !102, size: 32, offset: 160)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1571, file: !98, line: 366, baseType: !102, size: 32, offset: 192)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 32)
!1581 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !98, line: 319, baseType: !1582)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !98, line: 311, size: 192, elements: !1583)
!1583 = !{!1584, !1585, !1586, !1587, !1588, !1589}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1582, file: !98, line: 313, baseType: !102, size: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !1582, file: !98, line: 314, baseType: !102, size: 32, offset: 32)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !1582, file: !98, line: 315, baseType: !102, size: 32, offset: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !1582, file: !98, line: 316, baseType: !102, size: 32, offset: 96)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !1582, file: !98, line: 317, baseType: !102, size: 32, offset: 128)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !1582, file: !98, line: 318, baseType: !102, size: 32, offset: 160)
!1590 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1591, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1592, retainedTypes: !1698, imports: !1699, splitDebugInlining: false, nameTableKind: None)
!1591 = !DIFile(filename: "../cicada/commdevices/ipcommdevice.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "c1f12208d19013c4901343b372e157b9")
!1592 = !{!1593, !16}
!1593 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "ConnectState", scope: !1594, file: !751, line: 68, baseType: !10, size: 32, elements: !1690, identifier: "_ZTSN6Cicada12IPCommDevice12ConnectStateE")
!1594 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "IPCommDevice", scope: !19, file: !751, line: 42, size: 1152, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1595, vtableHolder: !26)
!1595 = !{!1596, !1597, !1598, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1660, !1663, !1666, !1669, !1672, !1673, !1674, !1675, !1680, !1681, !1684, !1687}
!1596 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1594, baseType: !18, flags: DIFlagPublic, extraData: i32 0)
!1597 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1594, baseType: !117, offset: 32, flags: DIFlagPublic, extraData: i32 0)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "_readBuffer", scope: !1594, file: !751, line: 78, baseType: !1599, size: 384, offset: 192, flags: DIFlagProtected)
!1599 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "CircularBuffer<unsigned char>", scope: !19, file: !1600, line: 39, size: 384, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1601, vtableHolder: !1599, templateParams: !1647, identifier: "_ZTSN6Cicada14CircularBufferIhEE")
!1600 = !DIFile(filename: "../cicada/circularbuffer.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "eefa34d28a75acab61b1e5f45f9ba1dd")
!1601 = !{!1602, !1603, !1604, !1605, !1606, !1608, !1609, !1613, !1616, !1621, !1624, !1627, !1630, !1631, !1632, !1637, !1638, !1641, !1642, !1643}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$CircularBuffer", scope: !1600, file: !1600, baseType: !30, size: 32, flags: DIFlagArtificial)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "_writeHead", scope: !1599, file: !1600, line: 196, baseType: !42, size: 64, offset: 64)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "_readHead", scope: !1599, file: !1600, line: 197, baseType: !42, size: 64, offset: 128)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "_availableData", scope: !1599, file: !1600, line: 198, baseType: !42, size: 64, offset: 192)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "_bufferSize", scope: !1599, file: !1600, line: 199, baseType: !1607, size: 64, offset: 256)
!1607 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !42)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "_buffer", scope: !1599, file: !1600, line: 200, baseType: !918, size: 32, offset: 320)
!1609 = !DISubprogram(name: "CircularBuffer", scope: !1599, file: !1600, line: 48, type: !1610, scopeLine: 48, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1610 = !DISubroutineType(types: !1611)
!1611 = !{null, !1612, !918, !42}
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1613 = !DISubprogram(name: "~CircularBuffer", scope: !1599, file: !1600, line: 56, type: !1614, scopeLine: 56, containingType: !1599, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{null, !1612}
!1616 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIhE4pushEPKhy", scope: !1599, file: !1600, line: 65, type: !1617, scopeLine: 65, containingType: !1599, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{!42, !1612, !1619, !42}
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 32)
!1620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !62)
!1621 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIhE4pushEh", scope: !1599, file: !1600, line: 88, type: !1622, scopeLine: 88, containingType: !1599, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1622 = !DISubroutineType(types: !1623)
!1623 = !{null, !1612, !62}
!1624 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIhE4pullEPhy", scope: !1599, file: !1600, line: 102, type: !1625, scopeLine: 102, containingType: !1599, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1625 = !DISubroutineType(types: !1626)
!1626 = !{!42, !1612, !918, !42}
!1627 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIhE4pullEv", scope: !1599, file: !1600, line: 124, type: !1628, scopeLine: 124, containingType: !1599, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1628 = !DISubroutineType(types: !1629)
!1629 = !{!62, !1612}
!1630 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada14CircularBufferIhE4readEv", scope: !1599, file: !1600, line: 140, type: !1628, scopeLine: 140, containingType: !1599, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1631 = !DISubprogram(name: "flush", linkageName: "_ZN6Cicada14CircularBufferIhE5flushEv", scope: !1599, file: !1600, line: 148, type: !1614, scopeLine: 148, containingType: !1599, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1632 = !DISubprogram(name: "isEmpty", linkageName: "_ZNK6Cicada14CircularBufferIhE7isEmptyEv", scope: !1599, file: !1600, line: 158, type: !1633, scopeLine: 158, containingType: !1599, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1633 = !DISubroutineType(types: !1634)
!1634 = !{!55, !1635}
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1599)
!1637 = !DISubprogram(name: "isFull", linkageName: "_ZNK6Cicada14CircularBufferIhE6isFullEv", scope: !1599, file: !1600, line: 166, type: !1633, scopeLine: 166, containingType: !1599, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1638 = !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv", scope: !1599, file: !1600, line: 174, type: !1639, scopeLine: 174, containingType: !1599, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1639 = !DISubroutineType(types: !1640)
!1640 = !{!42, !1635}
!1641 = !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv", scope: !1599, file: !1600, line: 182, type: !1639, scopeLine: 182, containingType: !1599, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1642 = !DISubprogram(name: "size", linkageName: "_ZNK6Cicada14CircularBufferIhE4sizeEv", scope: !1599, file: !1600, line: 190, type: !1639, scopeLine: 190, containingType: !1599, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1643 = !DISubprogram(name: "incrementOrResetHead", linkageName: "_ZN6Cicada14CircularBufferIhE20incrementOrResetHeadERy", scope: !1599, file: !1600, line: 202, type: !1644, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1644 = !DISubroutineType(types: !1645)
!1645 = !{null, !1612, !1646}
!1646 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !42, size: 32)
!1647 = !{!1648}
!1648 = !DITemplateTypeParameter(name: "T", type: !62)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "_writeBuffer", scope: !1594, file: !751, line: 79, baseType: !1599, size: 384, offset: 576, flags: DIFlagProtected)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "_type", scope: !1594, file: !751, line: 80, baseType: !16, size: 32, offset: 960, flags: DIFlagProtected)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "_host", scope: !1594, file: !751, line: 81, baseType: !86, size: 32, offset: 992, flags: DIFlagProtected)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "_port", scope: !1594, file: !751, line: 82, baseType: !89, size: 16, offset: 1024, flags: DIFlagProtected)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "_stateBooleans", scope: !1594, file: !751, line: 83, baseType: !60, size: 8, offset: 1040, flags: DIFlagProtected)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "_connectState", scope: !1594, file: !751, line: 84, baseType: !1593, size: 32, offset: 1056, flags: DIFlagProtected)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "_waitForReply", scope: !1594, file: !751, line: 85, baseType: !86, size: 32, offset: 1088, flags: DIFlagProtected)
!1656 = !DISubprogram(name: "IPCommDevice", scope: !1594, file: !751, line: 51, type: !1657, scopeLine: 51, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1657 = !DISubroutineType(types: !1658)
!1658 = !{null, !1659, !59, !59, !42}
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1660 = !DISubprogram(name: "IPCommDevice", scope: !1594, file: !751, line: 52, type: !1661, scopeLine: 52, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1661 = !DISubroutineType(types: !1662)
!1662 = !{null, !1659, !59, !59, !42, !42}
!1663 = !DISubprogram(name: "~IPCommDevice", scope: !1594, file: !751, line: 54, type: !1664, scopeLine: 54, containingType: !1594, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1664 = !DISubroutineType(types: !1665)
!1665 = !{null, !1659}
!1666 = !DISubprogram(name: "setHostPort", linkageName: "_ZN6Cicada12IPCommDevice11setHostPortEPKctNS_13IIPCommDevice14ConnectionTypeE", scope: !1594, file: !751, line: 56, type: !1667, scopeLine: 56, containingType: !1594, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1667 = !DISubroutineType(types: !1668)
!1668 = !{null, !1659, !86, !89, !16}
!1669 = !DISubprogram(name: "connect", linkageName: "_ZN6Cicada12IPCommDevice7connectEv", scope: !1594, file: !751, line: 57, type: !1670, scopeLine: 57, containingType: !1594, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1670 = !DISubroutineType(types: !1671)
!1671 = !{!55, !1659}
!1672 = !DISubprogram(name: "disconnect", linkageName: "_ZN6Cicada12IPCommDevice10disconnectEv", scope: !1594, file: !751, line: 58, type: !1664, scopeLine: 58, containingType: !1594, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1673 = !DISubprogram(name: "isConnected", linkageName: "_ZN6Cicada12IPCommDevice11isConnectedEv", scope: !1594, file: !751, line: 59, type: !1670, scopeLine: 59, containingType: !1594, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1674 = !DISubprogram(name: "isIdle", linkageName: "_ZN6Cicada12IPCommDevice6isIdleEv", scope: !1594, file: !751, line: 60, type: !1670, scopeLine: 60, containingType: !1594, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1675 = !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada12IPCommDevice14bytesAvailableEv", scope: !1594, file: !751, line: 61, type: !1676, scopeLine: 61, containingType: !1594, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1676 = !DISubroutineType(types: !1677)
!1677 = !{!42, !1678}
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1594)
!1680 = !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada12IPCommDevice14spaceAvailableEv", scope: !1594, file: !751, line: 62, type: !1676, scopeLine: 62, containingType: !1594, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1681 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada12IPCommDevice4readEPhy", scope: !1594, file: !751, line: 63, type: !1682, scopeLine: 63, containingType: !1594, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1682 = !DISubroutineType(types: !1683)
!1683 = !{!42, !1659, !59, !42}
!1684 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada12IPCommDevice5writeEPKhy", scope: !1594, file: !751, line: 64, type: !1685, scopeLine: 64, containingType: !1594, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1685 = !DISubroutineType(types: !1686)
!1686 = !{!42, !1659, !66, !42}
!1687 = !DISubprogram(name: "writeBufferProcessed", linkageName: "_ZNK6Cicada12IPCommDevice20writeBufferProcessedEv", scope: !1594, file: !751, line: 65, type: !1688, scopeLine: 65, containingType: !1594, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1688 = !DISubroutineType(types: !1689)
!1689 = !{!55, !1678}
!1690 = !{!1691, !1692, !1693, !1694, !1695, !1696, !1697}
!1691 = !DIEnumerator(name: "notConnected", value: 0, isUnsigned: true)
!1692 = !DIEnumerator(name: "intermediate", value: 1, isUnsigned: true)
!1693 = !DIEnumerator(name: "connected", value: 2, isUnsigned: true)
!1694 = !DIEnumerator(name: "transmitting", value: 3, isUnsigned: true)
!1695 = !DIEnumerator(name: "receiving", value: 4, isUnsigned: true)
!1696 = !DIEnumerator(name: "generalError", value: 5, isUnsigned: true)
!1697 = !DIEnumerator(name: "dnsError", value: 6, isUnsigned: true)
!1698 = !{!1594, !18, !22, !26, !117, !1599}
!1699 = !{!191, !197, !201, !204, !208, !211, !213, !215, !217, !220, !223, !226, !229, !232, !235, !236, !237, !238, !239, !241, !243, !245, !247, !250, !253, !256, !259, !262, !905, !1700}
!1700 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1590, entity: !19, file: !1591, line: 27)
!1701 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1702, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1703, retainedTypes: !1765, imports: !1766, splitDebugInlining: false, nameTableKind: None)
!1702 = !DIFile(filename: "../cicada/commdevices/simcommdevice.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "604b608b821a2670d76d7b839c3273cc")
!1703 = !{!1593, !1704}
!1704 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "RequestIDType", scope: !1705, file: !157, line: 88, baseType: !10, size: 32, elements: !1758, identifier: "_ZTSN6Cicada13SimCommDevice13RequestIDTypeE")
!1705 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "SimCommDevice", scope: !19, file: !157, line: 33, size: 2240, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1706, vtableHolder: !26)
!1706 = !{!1707, !1709, !1710, !1712, !1714, !1715, !1716, !1720, !1723, !1726, !1727, !1730, !1733, !1734, !1735, !1736, !1739, !1742, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755}
!1707 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1705, baseType: !1708, flags: DIFlagPublic, extraData: i32 0)
!1708 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "ATCommDevice", scope: !19, file: !747, line: 39, size: 1856, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada12ATCommDeviceE")
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "_apn", scope: !1705, file: !157, line: 120, baseType: !86, size: 32, offset: 1856, flags: DIFlagProtected)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "_ip", scope: !1705, file: !157, line: 122, baseType: !1711, size: 128, offset: 1888, flags: DIFlagProtected)
!1711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 128, elements: !618)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "_idStringBuffer", scope: !1705, file: !157, line: 124, baseType: !1713, size: 192, offset: 2016, flags: DIFlagProtected)
!1713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 192, elements: !1280)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "_rssi", scope: !1705, file: !157, line: 126, baseType: !60, size: 8, offset: 2208, flags: DIFlagProtected)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "_modemMaxReceiveSize", scope: !1705, file: !157, line: 128, baseType: !89, size: 16, offset: 2224, flags: DIFlagProtected)
!1716 = !DISubprogram(name: "SimCommDevice", scope: !1705, file: !157, line: 36, type: !1717, scopeLine: 36, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{null, !1719, !753, !59, !59, !42}
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1720 = !DISubprogram(name: "SimCommDevice", scope: !1705, file: !157, line: 38, type: !1721, scopeLine: 38, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1721 = !DISubroutineType(types: !1722)
!1722 = !{null, !1719, !753, !59, !59, !42, !42}
!1723 = !DISubprogram(name: "~SimCommDevice", scope: !1705, file: !157, line: 40, type: !1724, scopeLine: 40, containingType: !1705, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1724 = !DISubroutineType(types: !1725)
!1725 = !{null, !1719}
!1726 = !DISubprogram(name: "resetStates", linkageName: "_ZN6Cicada13SimCommDevice11resetStatesEv", scope: !1705, file: !157, line: 48, type: !1724, scopeLine: 48, containingType: !1705, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1727 = !DISubprogram(name: "setApn", linkageName: "_ZN6Cicada13SimCommDevice6setApnEPKc", scope: !1705, file: !157, line: 54, type: !1728, scopeLine: 54, containingType: !1705, virtualIndex: 15, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1728 = !DISubroutineType(types: !1729)
!1729 = !{null, !1719, !86}
!1730 = !DISubprogram(name: "connect", linkageName: "_ZN6Cicada13SimCommDevice7connectEv", scope: !1705, file: !157, line: 56, type: !1731, scopeLine: 56, containingType: !1705, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1731 = !DISubroutineType(types: !1732)
!1732 = !{!55, !1719}
!1733 = !DISubprogram(name: "serialLock", linkageName: "_ZN6Cicada13SimCommDevice10serialLockEv", scope: !1705, file: !157, line: 64, type: !1731, scopeLine: 64, containingType: !1705, virtualIndex: 16, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1734 = !DISubprogram(name: "serialUnlock", linkageName: "_ZN6Cicada13SimCommDevice12serialUnlockEv", scope: !1705, file: !157, line: 69, type: !1724, scopeLine: 69, containingType: !1705, virtualIndex: 17, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1735 = !DISubprogram(name: "requestRSSI", linkageName: "_ZN6Cicada13SimCommDevice11requestRSSIEv", scope: !1705, file: !157, line: 75, type: !1724, scopeLine: 75, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1736 = !DISubprogram(name: "getRSSI", linkageName: "_ZN6Cicada13SimCommDevice7getRSSIEv", scope: !1705, file: !157, line: 86, type: !1737, scopeLine: 86, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1737 = !DISubroutineType(types: !1738)
!1738 = !{!60, !1719}
!1739 = !DISubprogram(name: "requestIDString", linkageName: "_ZN6Cicada13SimCommDevice15requestIDStringENS0_13RequestIDTypeE", scope: !1705, file: !157, line: 95, type: !1740, scopeLine: 95, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1740 = !DISubroutineType(types: !1741)
!1741 = !{null, !1719, !1704}
!1742 = !DISubprogram(name: "getIDString", linkageName: "_ZN6Cicada13SimCommDevice11getIDStringEv", scope: !1705, file: !157, line: 105, type: !1743, scopeLine: 105, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1743 = !DISubroutineType(types: !1744)
!1744 = !{!335, !1719}
!1745 = !DISubprogram(name: "fillLineBuffer", linkageName: "_ZN6Cicada13SimCommDevice14fillLineBufferEv", scope: !1705, file: !157, line: 108, type: !1731, scopeLine: 108, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1746 = !DISubprogram(name: "parseDnsReply", linkageName: "_ZN6Cicada13SimCommDevice13parseDnsReplyEv", scope: !1705, file: !157, line: 109, type: !1731, scopeLine: 109, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1747 = !DISubprogram(name: "parseCiprxget4", linkageName: "_ZN6Cicada13SimCommDevice14parseCiprxget4Ev", scope: !1705, file: !157, line: 110, type: !1731, scopeLine: 110, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1748 = !DISubprogram(name: "parseCiprxget2", linkageName: "_ZN6Cicada13SimCommDevice14parseCiprxget2Ev", scope: !1705, file: !157, line: 111, type: !1731, scopeLine: 111, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1749 = !DISubprogram(name: "parseCsq", linkageName: "_ZN6Cicada13SimCommDevice8parseCsqEv", scope: !1705, file: !157, line: 112, type: !1731, scopeLine: 112, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1750 = !DISubprogram(name: "parseIDReply", linkageName: "_ZN6Cicada13SimCommDevice12parseIDReplyEv", scope: !1705, file: !157, line: 113, type: !1731, scopeLine: 113, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1751 = !DISubprogram(name: "checkConnectionState", linkageName: "_ZN6Cicada13SimCommDevice20checkConnectionStateEPKc", scope: !1705, file: !157, line: 114, type: !1728, scopeLine: 114, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1752 = !DISubprogram(name: "sendDnsQuery", linkageName: "_ZN6Cicada13SimCommDevice12sendDnsQueryEv", scope: !1705, file: !157, line: 115, type: !1731, scopeLine: 115, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1753 = !DISubprogram(name: "sendCipstart", linkageName: "_ZN6Cicada13SimCommDevice12sendCipstartEPKc", scope: !1705, file: !157, line: 116, type: !1728, scopeLine: 116, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1754 = !DISubprogram(name: "sendCiprxget2", linkageName: "_ZN6Cicada13SimCommDevice13sendCiprxget2Ev", scope: !1705, file: !157, line: 117, type: !1731, scopeLine: 117, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1755 = !DISubprogram(name: "sendIDRequest", linkageName: "_ZN6Cicada13SimCommDevice13sendIDRequestEPKc", scope: !1705, file: !157, line: 118, type: !1756, scopeLine: 118, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1756 = !DISubroutineType(types: !1757)
!1757 = !{!55, !1719, !86}
!1758 = !{!1759, !1760, !1761, !1762, !1763, !1764}
!1759 = !DIEnumerator(name: "noRequest", value: 0, isUnsigned: true)
!1760 = !DIEnumerator(name: "manufacturer", value: 1, isUnsigned: true)
!1761 = !DIEnumerator(name: "model", value: 2, isUnsigned: true)
!1762 = !DIEnumerator(name: "imei", value: 3, isUnsigned: true)
!1763 = !DIEnumerator(name: "imsi", value: 4, isUnsigned: true)
!1764 = !DIEnumerator(name: "iccid", value: 5, isUnsigned: true)
!1765 = !{!66, !10, !1704, !1705}
!1766 = !{!191, !197, !201, !204, !208, !211, !213, !215, !217, !220, !223, !226, !229, !232, !235, !236, !237, !238, !239, !241, !243, !245, !247, !250, !253, !256, !259, !262, !871, !876, !880, !884, !890, !894, !901, !905, !910, !986, !988, !993, !997, !999, !1001, !1003, !1005, !1010, !1014, !1018, !1022, !1026, !1030, !1034, !1038, !1040, !1044, !1050, !1054, !1058, !1060, !1062, !1066, !1070, !1072, !1074, !1076, !1078, !1082, !1084, !1086, !1090, !1094, !1098, !1102, !1106, !1110, !1767, !1774, !1778, !1129, !1782, !1784, !1786, !1790, !1145, !1794, !1795, !1796, !1797, !1150, !1159, !1163, !1167, !1169, !1173, !1177, !1179, !1181, !1183, !1187, !1191, !1195, !1199, !1203, !1205, !1207, !1209, !1213, !1217, !1221, !1223, !1798}
!1767 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1768, file: !985, line: 144)
!1768 = !DISubprogram(name: "vfprintf", scope: !912, file: !912, line: 206, type: !1769, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1769 = !DISubroutineType(types: !1770)
!1770 = !{!34, !992, !86, !1771}
!1771 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1117, line: 32, baseType: !1772)
!1772 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1773, baseType: !1120)
!1773 = !DIFile(filename: "../cicada/commdevices/simcommdevice.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build")
!1774 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1775, file: !985, line: 145)
!1775 = !DISubprogram(name: "vprintf", scope: !912, file: !912, line: 208, type: !1776, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1776 = !DISubroutineType(types: !1777)
!1777 = !{!34, !86, !1771}
!1778 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1779, file: !985, line: 146)
!1779 = !DISubprogram(name: "vsprintf", scope: !912, file: !912, line: 210, type: !1780, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1780 = !DISubroutineType(types: !1781)
!1781 = !{!34, !335, !86, !1771}
!1782 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !403, entity: !1783, file: !985, line: 176)
!1783 = !DISubprogram(name: "vfscanf", scope: !912, file: !912, line: 270, type: !1769, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1784 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !403, entity: !1785, file: !985, line: 177)
!1785 = !DISubprogram(name: "vscanf", scope: !912, file: !912, line: 272, type: !1776, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1786 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !403, entity: !1787, file: !985, line: 178)
!1787 = !DISubprogram(name: "vsnprintf", scope: !912, file: !912, line: 268, type: !1788, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1788 = !DISubroutineType(types: !1789)
!1789 = !{!34, !335, !309, !86, !1771}
!1790 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !403, entity: !1791, file: !985, line: 179)
!1791 = !DISubprogram(name: "vsscanf", scope: !912, file: !912, line: 274, type: !1792, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1792 = !DISubroutineType(types: !1793)
!1793 = !{!34, !86, !86, !1771}
!1794 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1783, file: !985, line: 186)
!1795 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1785, file: !985, line: 187)
!1796 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1787, file: !985, line: 188)
!1797 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1791, file: !985, line: 189)
!1798 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1701, entity: !19, file: !1702, line: 30)
!1799 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1800, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1801, retainedTypes: !1850, globals: !1851, imports: !1855, splitDebugInlining: false, nameTableKind: None)
!1800 = !DIFile(filename: "../cicada/commdevices/sim7x00.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e3a1f48206d5866dbd909de4a725c52c")
!1801 = !{!1802, !1839, !1593, !16}
!1802 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "SendState", scope: !1804, file: !1803, line: 124, baseType: !10, size: 32, elements: !1818, identifier: "_ZTSN6Cicada17Sim7x00CommDevice9SendStateE")
!1803 = !DIFile(filename: "../cicada/commdevices/sim7x00.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "30d5ae4b8933cfe435d43c0ed0910d29")
!1804 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Sim7x00CommDevice", scope: !19, file: !1803, line: 37, size: 2304, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1805, vtableHolder: !26)
!1805 = !{!1806, !1807, !1808, !1812, !1815}
!1806 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1804, baseType: !156, flags: DIFlagPublic, extraData: i32 0)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "iccidCommand", scope: !1804, file: !1803, line: 148, baseType: !86, size: 32, offset: 2240)
!1808 = !DISubprogram(name: "Sim7x00CommDevice", scope: !1804, file: !1803, line: 43, type: !1809, scopeLine: 43, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{null, !1811, !753, !59, !59, !42}
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1812 = !DISubprogram(name: "Sim7x00CommDevice", scope: !1804, file: !1803, line: 46, type: !1813, scopeLine: 46, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{null, !1811, !753, !59, !59, !42, !42}
!1815 = !DISubprogram(name: "run", linkageName: "_ZN6Cicada17Sim7x00CommDevice3runEv", scope: !1804, file: !1803, line: 109, type: !1816, scopeLine: 109, containingType: !1804, virtualIndex: 18, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1816 = !DISubroutineType(types: !1817)
!1817 = !{null, !1811}
!1818 = !{!1691, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838}
!1819 = !DIEnumerator(name: "serialError", value: 1, isUnsigned: true)
!1820 = !DIEnumerator(name: "dnsError", value: 2, isUnsigned: true)
!1821 = !DIEnumerator(name: "connecting", value: 3, isUnsigned: true)
!1822 = !DIEnumerator(name: "sendCgsockcont", value: 4, isUnsigned: true)
!1823 = !DIEnumerator(name: "sendCsocksetpn", value: 5, isUnsigned: true)
!1824 = !DIEnumerator(name: "sendCipmode", value: 6, isUnsigned: true)
!1825 = !DIEnumerator(name: "sendNetopen", value: 7, isUnsigned: true)
!1826 = !DIEnumerator(name: "sendCiprxget", value: 8, isUnsigned: true)
!1827 = !DIEnumerator(name: "sendDnsQuery", value: 9, isUnsigned: true)
!1828 = !DIEnumerator(name: "sendCipopen", value: 10, isUnsigned: true)
!1829 = !DIEnumerator(name: "finalizeConnect", value: 11, isUnsigned: true)
!1830 = !DIEnumerator(name: "connected", value: 12, isUnsigned: true)
!1831 = !DIEnumerator(name: "sendData", value: 13, isUnsigned: true)
!1832 = !DIEnumerator(name: "sendCiprxget4", value: 14, isUnsigned: true)
!1833 = !DIEnumerator(name: "sendCiprxget2", value: 15, isUnsigned: true)
!1834 = !DIEnumerator(name: "waitReceive", value: 16, isUnsigned: true)
!1835 = !DIEnumerator(name: "receiving", value: 17, isUnsigned: true)
!1836 = !DIEnumerator(name: "ipUnconnected", value: 18, isUnsigned: true)
!1837 = !DIEnumerator(name: "sendNetclose", value: 19, isUnsigned: true)
!1838 = !DIEnumerator(name: "finalizeDisconnect", value: 20, isUnsigned: true)
!1839 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReplyState", scope: !1804, file: !1803, line: 112, baseType: !10, size: 32, elements: !1840, identifier: "_ZTSN6Cicada17Sim7x00CommDevice10ReplyStateE")
!1840 = !{!1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849}
!1841 = !DIEnumerator(name: "okReply", value: 0, isUnsigned: true)
!1842 = !DIEnumerator(name: "csq", value: 1, isUnsigned: true)
!1843 = !DIEnumerator(name: "requestID", value: 2, isUnsigned: true)
!1844 = !DIEnumerator(name: "expectConnect", value: 3, isUnsigned: true)
!1845 = !DIEnumerator(name: "netopen", value: 4, isUnsigned: true)
!1846 = !DIEnumerator(name: "cdnsgip", value: 5, isUnsigned: true)
!1847 = !DIEnumerator(name: "cipopen", value: 6, isUnsigned: true)
!1848 = !DIEnumerator(name: "ciprxget4", value: 7, isUnsigned: true)
!1849 = !DIEnumerator(name: "ciprxget2", value: 8, isUnsigned: true)
!1850 = !{!66, !1804}
!1851 = !{!1852}
!1852 = !DIGlobalVariableExpression(var: !1853, expr: !DIExpression(DW_OP_constu, 1500, DW_OP_stack_value))
!1853 = distinct !DIGlobalVariable(name: "SIM7x00_MAX_RX", scope: !1799, file: !1800, line: 33, type: !1854, isLocal: true, isDefinition: true)
!1854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !89)
!1855 = !{!191, !197, !201, !204, !208, !211, !213, !215, !217, !220, !223, !226, !229, !232, !235, !236, !237, !238, !239, !241, !243, !245, !247, !250, !253, !256, !259, !262, !905, !910, !986, !988, !993, !997, !999, !1001, !1003, !1005, !1010, !1014, !1018, !1022, !1026, !1030, !1034, !1038, !1040, !1044, !1050, !1054, !1058, !1060, !1062, !1066, !1070, !1072, !1074, !1076, !1078, !1082, !1084, !1086, !1090, !1094, !1098, !1102, !1106, !1110, !1856, !1863, !1867, !1129, !1871, !1873, !1875, !1879, !1145, !1883, !1884, !1885, !1886, !1150, !1159, !1163, !1167, !1169, !1173, !1177, !1179, !1181, !1183, !1187, !1191, !1195, !1199, !1203, !1205, !1207, !1209, !1213, !1217, !1221, !1223, !1887}
!1856 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1857, file: !985, line: 144)
!1857 = !DISubprogram(name: "vfprintf", scope: !912, file: !912, line: 206, type: !1858, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1858 = !DISubroutineType(types: !1859)
!1859 = !{!34, !992, !86, !1860}
!1860 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1117, line: 32, baseType: !1861)
!1861 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1862, baseType: !1120)
!1862 = !DIFile(filename: "../cicada/commdevices/sim7x00.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build")
!1863 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1864, file: !985, line: 145)
!1864 = !DISubprogram(name: "vprintf", scope: !912, file: !912, line: 208, type: !1865, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1865 = !DISubroutineType(types: !1866)
!1866 = !{!34, !86, !1860}
!1867 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1868, file: !985, line: 146)
!1868 = !DISubprogram(name: "vsprintf", scope: !912, file: !912, line: 210, type: !1869, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1869 = !DISubroutineType(types: !1870)
!1870 = !{!34, !335, !86, !1860}
!1871 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !403, entity: !1872, file: !985, line: 176)
!1872 = !DISubprogram(name: "vfscanf", scope: !912, file: !912, line: 270, type: !1858, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1873 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !403, entity: !1874, file: !985, line: 177)
!1874 = !DISubprogram(name: "vscanf", scope: !912, file: !912, line: 272, type: !1865, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1875 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !403, entity: !1876, file: !985, line: 178)
!1876 = !DISubprogram(name: "vsnprintf", scope: !912, file: !912, line: 268, type: !1877, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1877 = !DISubroutineType(types: !1878)
!1878 = !{!34, !335, !309, !86, !1860}
!1879 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !403, entity: !1880, file: !985, line: 179)
!1880 = !DISubprogram(name: "vsscanf", scope: !912, file: !912, line: 274, type: !1881, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1881 = !DISubroutineType(types: !1882)
!1882 = !{!34, !86, !86, !1860}
!1883 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1872, file: !985, line: 186)
!1884 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1874, file: !985, line: 187)
!1885 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1876, file: !985, line: 188)
!1886 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !192, entity: !1880, file: !985, line: 189)
!1887 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1799, entity: !19, file: !1800, line: 31)
!1888 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1889, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1890, imports: !1910, splitDebugInlining: false, nameTableKind: None)
!1889 = !DIFile(filename: "../cicada/scheduler.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e3803bdb34845899b60a060630b7fca8")
!1890 = !{!1891}
!1891 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Scheduler", scope: !19, file: !1892, line: 53, size: 96, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !1893, identifier: "_ZTSN6Cicada9SchedulerE")
!1892 = !DIFile(filename: "../cicada/scheduler.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "040734eea83ce445208abbcb76b1b1f5")
!1893 = !{!1894, !1898, !1901, !1902, !1906, !1909}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "_tickFunction", scope: !1891, file: !1892, line: 77, baseType: !1895, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 32)
!1896 = !DISubroutineType(types: !1897)
!1897 = !{!103}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "_taskList", scope: !1891, file: !1892, line: 78, baseType: !1899, size: 32, offset: 32)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 32)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "_currentTask", scope: !1891, file: !1892, line: 79, baseType: !1899, size: 32, offset: 64)
!1902 = !DISubprogram(name: "Scheduler", scope: !1891, file: !1892, line: 62, type: !1903, scopeLine: 62, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1903 = !DISubroutineType(types: !1904)
!1904 = !{null, !1905, !1895, !1899}
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1906 = !DISubprogram(name: "runTask", linkageName: "_ZN6Cicada9Scheduler7runTaskEv", scope: !1891, file: !1892, line: 68, type: !1907, scopeLine: 68, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1907 = !DISubroutineType(types: !1908)
!1908 = !{null, !1905}
!1909 = !DISubprogram(name: "start", linkageName: "_ZN6Cicada9Scheduler5startEv", scope: !1891, file: !1892, line: 74, type: !1907, scopeLine: 74, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1910 = !{!905, !1911}
!1911 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1888, entity: !19, file: !1889, line: 27)
!1912 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1913, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, imports: !1914, splitDebugInlining: false, nameTableKind: None)
!1913 = !DIFile(filename: "../cicada/platform/stm32f1/tick_stm32.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "2e21bec54557ce151e165eda219ada53")
!1914 = !{!191, !197, !201, !204, !208, !211, !213, !215, !217, !220, !223, !226, !229, !232, !235, !236, !237, !238, !239, !241, !243, !245, !247, !250, !253, !256, !259, !262}
!1915 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1916, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1917, imports: !2038, splitDebugInlining: false, nameTableKind: None)
!1916 = !DIFile(filename: "../cicada/bufferedserial.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "0c50e54046b616f386000f55e6143c47")
!1917 = !{!1918, !754, !26, !759, !1922, !1926}
!1918 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "BufferedSerial", scope: !19, file: !1331, line: 42, size: 832, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1919, vtableHolder: !26)
!1919 = !{!1920, !1921, !1996, !1997, !2001, !2004, !2009, !2010, !2013, !2016, !2019, !2022, !2025, !2028, !2029, !2032, !2035, !2036, !2037}
!1920 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1918, baseType: !754, flags: DIFlagPublic, extraData: i32 0)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "_readBuffer", scope: !1918, file: !1331, line: 105, baseType: !1922, size: 384, offset: 64, flags: DIFlagProtected)
!1922 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "LineCircularBuffer", scope: !19, file: !1923, line: 38, size: 384, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1924, vtableHolder: !1926, identifier: "_ZTSN6Cicada18LineCircularBufferE")
!1923 = !DIFile(filename: "../cicada/linecircularbuffer.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "7c64ede70efe975ae69caea246f4ce64")
!1924 = !{!1925, !1970, !1971, !1975, !1978, !1981, !1984, !1987, !1992, !1993}
!1925 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1922, baseType: !1926, flags: DIFlagPublic, extraData: i32 0)
!1926 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "CircularBuffer<char>", scope: !19, file: !1600, line: 39, size: 384, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1927, vtableHolder: !1926, templateParams: !1968, identifier: "_ZTSN6Cicada14CircularBufferIcEE")
!1927 = !{!1602, !1928, !1929, !1930, !1931, !1932, !1933, !1937, !1940, !1943, !1946, !1949, !1952, !1953, !1954, !1959, !1960, !1963, !1964, !1965}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "_writeHead", scope: !1926, file: !1600, line: 196, baseType: !42, size: 64, offset: 64)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "_readHead", scope: !1926, file: !1600, line: 197, baseType: !42, size: 64, offset: 128)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "_availableData", scope: !1926, file: !1600, line: 198, baseType: !42, size: 64, offset: 192)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "_bufferSize", scope: !1926, file: !1600, line: 199, baseType: !1607, size: 64, offset: 256)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "_buffer", scope: !1926, file: !1600, line: 200, baseType: !335, size: 32, offset: 320)
!1933 = !DISubprogram(name: "CircularBuffer", scope: !1926, file: !1600, line: 48, type: !1934, scopeLine: 48, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1934 = !DISubroutineType(types: !1935)
!1935 = !{null, !1936, !335, !42}
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1937 = !DISubprogram(name: "~CircularBuffer", scope: !1926, file: !1600, line: 56, type: !1938, scopeLine: 56, containingType: !1926, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1938 = !DISubroutineType(types: !1939)
!1939 = !{null, !1936}
!1940 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIcE4pushEPKcy", scope: !1926, file: !1600, line: 65, type: !1941, scopeLine: 65, containingType: !1926, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1941 = !DISubroutineType(types: !1942)
!1942 = !{!42, !1936, !86, !42}
!1943 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIcE4pushEc", scope: !1926, file: !1600, line: 88, type: !1944, scopeLine: 88, containingType: !1926, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1944 = !DISubroutineType(types: !1945)
!1945 = !{null, !1936, !88}
!1946 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIcE4pullEPcy", scope: !1926, file: !1600, line: 102, type: !1947, scopeLine: 102, containingType: !1926, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{!42, !1936, !335, !42}
!1949 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIcE4pullEv", scope: !1926, file: !1600, line: 124, type: !1950, scopeLine: 124, containingType: !1926, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1950 = !DISubroutineType(types: !1951)
!1951 = !{!88, !1936}
!1952 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada14CircularBufferIcE4readEv", scope: !1926, file: !1600, line: 140, type: !1950, scopeLine: 140, containingType: !1926, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1953 = !DISubprogram(name: "flush", linkageName: "_ZN6Cicada14CircularBufferIcE5flushEv", scope: !1926, file: !1600, line: 148, type: !1938, scopeLine: 148, containingType: !1926, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1954 = !DISubprogram(name: "isEmpty", linkageName: "_ZNK6Cicada14CircularBufferIcE7isEmptyEv", scope: !1926, file: !1600, line: 158, type: !1955, scopeLine: 158, containingType: !1926, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1955 = !DISubroutineType(types: !1956)
!1956 = !{!55, !1957}
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1926)
!1959 = !DISubprogram(name: "isFull", linkageName: "_ZNK6Cicada14CircularBufferIcE6isFullEv", scope: !1926, file: !1600, line: 166, type: !1955, scopeLine: 166, containingType: !1926, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1960 = !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv", scope: !1926, file: !1600, line: 174, type: !1961, scopeLine: 174, containingType: !1926, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1961 = !DISubroutineType(types: !1962)
!1962 = !{!42, !1957}
!1963 = !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv", scope: !1926, file: !1600, line: 182, type: !1961, scopeLine: 182, containingType: !1926, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1964 = !DISubprogram(name: "size", linkageName: "_ZNK6Cicada14CircularBufferIcE4sizeEv", scope: !1926, file: !1600, line: 190, type: !1961, scopeLine: 190, containingType: !1926, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1965 = !DISubprogram(name: "incrementOrResetHead", linkageName: "_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy", scope: !1926, file: !1600, line: 202, type: !1966, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1966 = !DISubroutineType(types: !1967)
!1967 = !{null, !1936, !1646}
!1968 = !{!1969}
!1969 = !DITemplateTypeParameter(name: "T", type: !88)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "_bufferedLines", scope: !1922, file: !1923, line: 130, baseType: !89, size: 16, offset: 352)
!1971 = !DISubprogram(name: "LineCircularBuffer", scope: !1922, file: !1923, line: 41, type: !1972, scopeLine: 41, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1972 = !DISubroutineType(types: !1973)
!1973 = !{null, !1974, !335, !42}
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1975 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada18LineCircularBuffer4pushEPKcy", scope: !1922, file: !1923, line: 46, type: !1976, scopeLine: 46, containingType: !1922, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1976 = !DISubroutineType(types: !1977)
!1977 = !{!42, !1974, !86, !42}
!1978 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada18LineCircularBuffer4pushEc", scope: !1922, file: !1923, line: 60, type: !1979, scopeLine: 60, containingType: !1922, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1979 = !DISubroutineType(types: !1980)
!1980 = !{null, !1974, !88}
!1981 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada18LineCircularBuffer4pullEPcy", scope: !1922, file: !1923, line: 69, type: !1982, scopeLine: 69, containingType: !1922, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1982 = !DISubroutineType(types: !1983)
!1983 = !{!42, !1974, !335, !42}
!1984 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada18LineCircularBuffer4pullEv", scope: !1922, file: !1923, line: 83, type: !1985, scopeLine: 83, containingType: !1922, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1985 = !DISubroutineType(types: !1986)
!1986 = !{!88, !1974}
!1987 = !DISubprogram(name: "numBufferedLines", linkageName: "_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv", scope: !1922, file: !1923, line: 97, type: !1988, scopeLine: 97, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1988 = !DISubroutineType(types: !1989)
!1989 = !{!89, !1990}
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1922)
!1992 = !DISubprogram(name: "readLine", linkageName: "_ZN6Cicada18LineCircularBuffer8readLineEPcy", scope: !1922, file: !1923, line: 108, type: !1982, scopeLine: 108, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1993 = !DISubprogram(name: "flush", linkageName: "_ZN6Cicada18LineCircularBuffer5flushEv", scope: !1922, file: !1923, line: 123, type: !1994, scopeLine: 123, containingType: !1922, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1994 = !DISubroutineType(types: !1995)
!1995 = !{null, !1974}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "_writeBuffer", scope: !1918, file: !1331, line: 106, baseType: !1922, size: 384, offset: 448, flags: DIFlagProtected)
!1997 = !DISubprogram(name: "BufferedSerial", scope: !1918, file: !1331, line: 54, type: !1998, scopeLine: 54, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1998 = !DISubroutineType(types: !1999)
!1999 = !{null, !2000, !335, !335, !42, !42}
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!2001 = !DISubprogram(name: "BufferedSerial", scope: !1918, file: !1331, line: 64, type: !2002, scopeLine: 64, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2002 = !DISubroutineType(types: !2003)
!2003 = !{null, !2000, !335, !335, !42}
!2004 = !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14BufferedSerial14bytesAvailableEv", scope: !1918, file: !1331, line: 66, type: !2005, scopeLine: 66, containingType: !1918, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2005 = !DISubroutineType(types: !2006)
!2006 = !{!42, !2007}
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!2008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1918)
!2009 = !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14BufferedSerial14spaceAvailableEv", scope: !1918, file: !1331, line: 68, type: !2005, scopeLine: 68, containingType: !1918, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2010 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada14BufferedSerial4readEPhy", scope: !1918, file: !1331, line: 70, type: !2011, scopeLine: 70, containingType: !1918, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2011 = !DISubroutineType(types: !2012)
!2012 = !{!42, !2000, !59, !42}
!2013 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada14BufferedSerial4readEv", scope: !1918, file: !1331, line: 72, type: !2014, scopeLine: 72, containingType: !1918, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{!60, !2000}
!2016 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEPKhy", scope: !1918, file: !1331, line: 74, type: !2017, scopeLine: 74, containingType: !1918, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2017 = !DISubroutineType(types: !2018)
!2018 = !{!42, !2000, !66, !42}
!2019 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEPKh", scope: !1918, file: !1331, line: 76, type: !2020, scopeLine: 76, containingType: !1918, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2020 = !DISubroutineType(types: !2021)
!2021 = !{!42, !2000, !66}
!2022 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEh", scope: !1918, file: !1331, line: 78, type: !2023, scopeLine: 78, containingType: !1918, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2023 = !DISubroutineType(types: !2024)
!2024 = !{null, !2000, !60}
!2025 = !DISubprogram(name: "canReadLine", linkageName: "_ZNK6Cicada14BufferedSerial11canReadLineEv", scope: !1918, file: !1331, line: 80, type: !2026, scopeLine: 80, containingType: !1918, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2026 = !DISubroutineType(types: !2027)
!2027 = !{!55, !2007}
!2028 = !DISubprogram(name: "readLine", linkageName: "_ZN6Cicada14BufferedSerial8readLineEPhy", scope: !1918, file: !1331, line: 91, type: !2011, scopeLine: 91, containingType: !1918, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2029 = !DISubprogram(name: "flushReceiveBuffers", linkageName: "_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv", scope: !1918, file: !1331, line: 93, type: !2030, scopeLine: 93, containingType: !1918, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2030 = !DISubroutineType(types: !2031)
!2031 = !{null, !2000}
!2032 = !DISubprogram(name: "readBufferSize", linkageName: "_ZN6Cicada14BufferedSerial14readBufferSizeEv", scope: !1918, file: !1331, line: 95, type: !2033, scopeLine: 95, containingType: !1918, virtualIndex: 13, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2033 = !DISubroutineType(types: !2034)
!2034 = !{!42, !2000}
!2035 = !DISubprogram(name: "writeBufferSize", linkageName: "_ZN6Cicada14BufferedSerial15writeBufferSizeEv", scope: !1918, file: !1331, line: 96, type: !2033, scopeLine: 96, containingType: !1918, virtualIndex: 14, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2036 = !DISubprogram(name: "transferToAndFromBuffer", linkageName: "_ZN6Cicada14BufferedSerial23transferToAndFromBufferEv", scope: !1918, file: !1331, line: 102, type: !2030, scopeLine: 102, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2037 = !DISubprogram(name: "copyToBuffer", linkageName: "_ZN6Cicada14BufferedSerial12copyToBufferEh", scope: !1918, file: !1331, line: 109, type: !2023, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2038 = !{!191, !197, !201, !204, !208, !211, !213, !215, !217, !220, !223, !226, !229, !232, !235, !236, !237, !238, !239, !241, !243, !245, !247, !250, !253, !256, !259, !262, !2039}
!2039 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1915, entity: !19, file: !1916, line: 28)
!2040 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !2041, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2041 = !DIFile(filename: "../cicada/platform/stm32f1/irq_stm32.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e34a510e3cc4f838fcfeb73936339393")
!2042 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2043, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2044, retainedTypes: !2065, splitDebugInlining: false, nameTableKind: None)
!2043 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "16c165b28ca3d4a5c8d7d66f2c899e26")
!2044 = !{!632, !2045, !2049, !2055, !550}
!2045 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 52, baseType: !10, size: 32, elements: !2046)
!2046 = !{!2047, !2048}
!2047 = !DIEnumerator(name: "HAL_UNLOCKED", value: 0)
!2048 = !DIEnumerator(name: "HAL_LOCKED", value: 1)
!2049 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1362, line: 78, baseType: !10, size: 32, elements: !2050)
!2050 = !{!2051, !2052, !2053, !2054}
!2051 = !DIEnumerator(name: "HAL_DMA_STATE_RESET", value: 0)
!2052 = !DIEnumerator(name: "HAL_DMA_STATE_READY", value: 1)
!2053 = !DIEnumerator(name: "HAL_DMA_STATE_BUSY", value: 2)
!2054 = !DIEnumerator(name: "HAL_DMA_STATE_TIMEOUT", value: 3)
!2055 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1237, line: 117, baseType: !10, size: 32, elements: !2056)
!2056 = !{!2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064}
!2057 = !DIEnumerator(name: "HAL_UART_STATE_RESET", value: 0)
!2058 = !DIEnumerator(name: "HAL_UART_STATE_READY", value: 32)
!2059 = !DIEnumerator(name: "HAL_UART_STATE_BUSY", value: 36)
!2060 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_TX", value: 33)
!2061 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_RX", value: 34)
!2062 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_TX_RX", value: 35)
!2063 = !DIEnumerator(name: "HAL_UART_STATE_TIMEOUT", value: 160)
!2064 = !DIEnumerator(name: "HAL_UART_STATE_ERROR", value: 224)
!2065 = !{!306, !103, !2066, !89, !60, !734, !2067, !2068, !2102, !2073}
!2066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !89, size: 32)
!2067 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_UART_StateTypeDef", file: !1237, line: 136, baseType: !2055)
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 32)
!2069 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_HandleTypeDef", file: !1237, line: 189, baseType: !2070)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__UART_HandleTypeDef", file: !1237, line: 141, size: 576, elements: !2071)
!2071 = !{!2072, !2084, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2148, !2149, !2150, !2152, !2153}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "Instance", scope: !2070, file: !1237, line: 143, baseType: !2073, size: 32)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 32)
!2074 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !98, line: 516, baseType: !2075)
!2075 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !98, line: 507, size: 224, elements: !2076)
!2076 = !{!2077, !2078, !2079, !2080, !2081, !2082, !2083}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2075, file: !98, line: 509, baseType: !102, size: 32)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !2075, file: !98, line: 510, baseType: !102, size: 32, offset: 32)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !2075, file: !98, line: 511, baseType: !102, size: 32, offset: 64)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !2075, file: !98, line: 512, baseType: !102, size: 32, offset: 96)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !2075, file: !98, line: 513, baseType: !102, size: 32, offset: 128)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !2075, file: !98, line: 514, baseType: !102, size: 32, offset: 160)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !2075, file: !98, line: 515, baseType: !102, size: 32, offset: 192)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "Init", scope: !2070, file: !1237, line: 145, baseType: !2085, size: 224, offset: 32)
!2085 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_InitTypeDef", file: !1237, line: 76, baseType: !2086)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1237, line: 47, size: 224, elements: !2087)
!2087 = !{!2088, !2089, !2090, !2091, !2092, !2093, !2094}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "BaudRate", scope: !2086, file: !1237, line: 49, baseType: !103, size: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "WordLength", scope: !2086, file: !1237, line: 54, baseType: !103, size: 32, offset: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "StopBits", scope: !2086, file: !1237, line: 57, baseType: !103, size: 32, offset: 64)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "Parity", scope: !2086, file: !1237, line: 60, baseType: !103, size: 32, offset: 96)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !2086, file: !1237, line: 67, baseType: !103, size: 32, offset: 128)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "HwFlowCtl", scope: !2086, file: !1237, line: 70, baseType: !103, size: 32, offset: 160)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "OverSampling", scope: !2086, file: !1237, line: 73, baseType: !103, size: 32, offset: 192)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "pTxBuffPtr", scope: !2070, file: !1237, line: 147, baseType: !59, size: 32, offset: 256)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "TxXferSize", scope: !2070, file: !1237, line: 149, baseType: !89, size: 16, offset: 288)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "TxXferCount", scope: !2070, file: !1237, line: 151, baseType: !1355, size: 16, offset: 304)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "pRxBuffPtr", scope: !2070, file: !1237, line: 153, baseType: !59, size: 32, offset: 320)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "RxXferSize", scope: !2070, file: !1237, line: 155, baseType: !89, size: 16, offset: 352)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "RxXferCount", scope: !2070, file: !1237, line: 157, baseType: !1355, size: 16, offset: 368)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "hdmatx", scope: !2070, file: !1237, line: 159, baseType: !2102, size: 32, offset: 384)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 32)
!2103 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_HandleTypeDef", file: !1362, line: 137, baseType: !2104)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__DMA_HandleTypeDef", file: !1362, line: 111, size: 576, elements: !2105)
!2105 = !{!2106, !2115, !2126, !2128, !2130, !2131, !2136, !2137, !2138, !2139, !2140, !2147}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "Instance", scope: !2104, file: !1362, line: 113, baseType: !2107, size: 32)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_Channel_TypeDef", file: !98, line: 297, baseType: !2109)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !98, line: 291, size: 128, elements: !2110)
!2110 = !{!2111, !2112, !2113, !2114}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2109, file: !98, line: 293, baseType: !102, size: 32)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "CNDTR", scope: !2109, file: !98, line: 294, baseType: !102, size: 32, offset: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "CPAR", scope: !2109, file: !98, line: 295, baseType: !102, size: 32, offset: 64)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "CMAR", scope: !2109, file: !98, line: 296, baseType: !102, size: 32, offset: 96)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "Init", scope: !2104, file: !1362, line: 115, baseType: !2116, size: 224, offset: 32)
!2116 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_InitTypeDef", file: !1362, line: 73, baseType: !2117)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1362, line: 48, size: 224, elements: !2118)
!2118 = !{!2119, !2120, !2121, !2122, !2123, !2124, !2125}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "Direction", scope: !2117, file: !1362, line: 50, baseType: !103, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphInc", scope: !2117, file: !1362, line: 54, baseType: !103, size: 32, offset: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "MemInc", scope: !2117, file: !1362, line: 57, baseType: !103, size: 32, offset: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphDataAlignment", scope: !2117, file: !1362, line: 60, baseType: !103, size: 32, offset: 96)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "MemDataAlignment", scope: !2117, file: !1362, line: 63, baseType: !103, size: 32, offset: 128)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !2117, file: !1362, line: 66, baseType: !103, size: 32, offset: 160)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "Priority", scope: !2117, file: !1362, line: 71, baseType: !103, size: 32, offset: 192)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "Lock", scope: !2104, file: !1362, line: 117, baseType: !2127, size: 32, offset: 256)
!2127 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_LockTypeDef", file: !9, line: 56, baseType: !2045)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "State", scope: !2104, file: !1362, line: 119, baseType: !2129, size: 32, offset: 288)
!2129 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_DMA_StateTypeDef", file: !1362, line: 84, baseType: !2049)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "Parent", scope: !2104, file: !1362, line: 121, baseType: !306, size: 32, offset: 320)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "XferCpltCallback", scope: !2104, file: !1362, line: 123, baseType: !2132, size: 32, offset: 352)
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 32)
!2133 = !DISubroutineType(types: !2134)
!2134 = !{null, !2135}
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 32)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "XferHalfCpltCallback", scope: !2104, file: !1362, line: 125, baseType: !2132, size: 32, offset: 384)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "XferErrorCallback", scope: !2104, file: !1362, line: 127, baseType: !2132, size: 32, offset: 416)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "XferAbortCallback", scope: !2104, file: !1362, line: 129, baseType: !2132, size: 32, offset: 448)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "ErrorCode", scope: !2104, file: !1362, line: 131, baseType: !102, size: 32, offset: 480)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "DmaBaseAddress", scope: !2104, file: !1362, line: 133, baseType: !2141, size: 32, offset: 512)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 32)
!2142 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_TypeDef", file: !98, line: 303, baseType: !2143)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !98, line: 299, size: 64, elements: !2144)
!2144 = !{!2145, !2146}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !2143, file: !98, line: 301, baseType: !102, size: 32)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "IFCR", scope: !2143, file: !98, line: 302, baseType: !102, size: 32, offset: 32)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "ChannelIndex", scope: !2104, file: !1362, line: 135, baseType: !103, size: 32, offset: 544)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "hdmarx", scope: !2070, file: !1237, line: 161, baseType: !2102, size: 32, offset: 416)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "Lock", scope: !2070, file: !1237, line: 163, baseType: !2127, size: 32, offset: 448)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "gState", scope: !2070, file: !1237, line: 165, baseType: !2151, size: 32, offset: 480)
!2151 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2067)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "RxState", scope: !2070, file: !1237, line: 169, baseType: !2151, size: 32, offset: 512)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "ErrorCode", scope: !2070, file: !1237, line: 172, baseType: !102, size: 32, offset: 544)
!2154 = !{!"Ubuntu clang version 14.0.6"}
!2155 = !{i32 7, !"Dwarf Version", i32 5}
!2156 = !{i32 2, !"Debug Info Version", i32 3}
!2157 = !{i32 1, !"wchar_size", i32 4}
!2158 = !{i32 1, !"min_enum_size", i32 4}
!2159 = !{i32 1, !"branch-target-enforcement", i32 0}
!2160 = !{i32 1, !"sign-return-address", i32 0}
!2161 = !{i32 1, !"sign-return-address-all", i32 0}
!2162 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2163 = !{i32 7, !"frame-pointer", i32 2}
!2164 = distinct !DISubprogram(name: "byteSwap", linkageName: "_Z8byteSwapj", scope: !3, file: !3, line: 21, type: !2165, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, retainedNodes: !2167)
!2165 = !DISubroutineType(types: !2166)
!2166 = !{!103, !103}
!2167 = !{!2168, !2169}
!2168 = !DILocalVariable(name: "x", arg: 1, scope: !2164, file: !3, line: 21, type: !103)
!2169 = !DILocalVariable(name: "ret", scope: !2164, file: !3, line: 23, type: !103)
!2170 = !DILocation(line: 0, scope: !2164)
!2171 = !DILocation(line: 26, column: 9, scope: !2164)
!2172 = !DILocation(line: 27, column: 5, scope: !2164)
!2173 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 72, type: !2174, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, retainedNodes: !2176)
!2174 = !DISubroutineType(types: !2175)
!2175 = !{!34, !34, !380}
!2176 = !{!2177, !2178, !2179, !2180, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2194, !2195, !2197, !2198, !2200}
!2177 = !DILocalVariable(name: "argc", arg: 1, scope: !2173, file: !3, line: 72, type: !34)
!2178 = !DILocalVariable(name: "argv", arg: 2, scope: !2173, file: !3, line: 72, type: !380)
!2179 = !DILocalVariable(name: "serialBufferSize", scope: !2173, file: !3, line: 80, type: !1854)
!2180 = !DILocalVariable(name: "readBufferDebug", scope: !2173, file: !3, line: 81, type: !2181)
!2181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 12032, elements: !2182)
!2182 = !{!2183}
!2183 = !DISubrange(count: 1504)
!2184 = !DILocalVariable(name: "writeBufferDebug", scope: !2173, file: !3, line: 82, type: !2181)
!2185 = !DILocalVariable(name: "debug", scope: !2173, file: !3, line: 83, type: !175)
!2186 = !DILocalVariable(name: "readBufferSerial", scope: !2173, file: !3, line: 84, type: !2181)
!2187 = !DILocalVariable(name: "writeBufferSerial", scope: !2173, file: !3, line: 85, type: !2181)
!2188 = !DILocalVariable(name: "serial", scope: !2173, file: !3, line: 86, type: !175)
!2189 = !DILocalVariable(name: "commBufferSize", scope: !2173, file: !3, line: 89, type: !1854)
!2190 = !DILocalVariable(name: "commReadBuffer", scope: !2173, file: !3, line: 90, type: !2191)
!2191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 9600, elements: !2192)
!2192 = !{!2193}
!2193 = !DISubrange(count: 1200)
!2194 = !DILocalVariable(name: "commWriteBuffer", scope: !2173, file: !3, line: 91, type: !2191)
!2195 = !DILocalVariable(name: "commDev", scope: !2173, file: !3, line: 93, type: !2196)
!2196 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Sim7x00CommDevice", scope: !19, file: !1803, line: 37, size: 2304, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada17Sim7x00CommDeviceE")
!2197 = !DILocalVariable(name: "task", scope: !2173, file: !3, line: 95, type: !114)
!2198 = !DILocalVariable(name: "taskList", scope: !2173, file: !3, line: 97, type: !2199)
!2199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1900, size: 96, elements: !955)
!2200 = !DILocalVariable(name: "s", scope: !2173, file: !3, line: 99, type: !1891)
!2201 = !DILocation(line: 0, scope: !2173)
!2202 = !DILocation(line: 75, column: 5, scope: !2173)
!2203 = !DILocation(line: 76, column: 5, scope: !2173)
!2204 = !DILocation(line: 78, column: 5, scope: !2173)
!2205 = !DILocation(line: 81, column: 5, scope: !2173)
!2206 = !DILocation(line: 81, column: 10, scope: !2173)
!2207 = !DILocation(line: 82, column: 5, scope: !2173)
!2208 = !DILocation(line: 82, column: 10, scope: !2173)
!2209 = !DILocation(line: 83, column: 5, scope: !2173)
!2210 = !DILocation(line: 83, column: 15, scope: !2173)
!2211 = !DILocation(line: 84, column: 5, scope: !2173)
!2212 = !DILocation(line: 84, column: 10, scope: !2173)
!2213 = !DILocation(line: 85, column: 5, scope: !2173)
!2214 = !DILocation(line: 85, column: 10, scope: !2173)
!2215 = !DILocation(line: 86, column: 5, scope: !2173)
!2216 = !DILocation(line: 86, column: 15, scope: !2173)
!2217 = !DILocation(line: 90, column: 5, scope: !2173)
!2218 = !DILocation(line: 90, column: 13, scope: !2173)
!2219 = !DILocation(line: 91, column: 5, scope: !2173)
!2220 = !DILocation(line: 91, column: 13, scope: !2173)
!2221 = !DILocation(line: 93, column: 5, scope: !2173)
!2222 = !DILocation(line: 93, column: 23, scope: !2173)
!2223 = !DILocation(line: 93, column: 31, scope: !2173)
!2224 = !DILocation(line: 95, column: 5, scope: !2173)
!2225 = !DILocation(line: 95, column: 13, scope: !2173)
!2226 = !DILocation(line: 95, column: 18, scope: !2173)
!2227 = !DILocation(line: 97, column: 5, scope: !2173)
!2228 = !DILocation(line: 97, column: 11, scope: !2173)
!2229 = !DILocation(line: 97, column: 24, scope: !2173)
!2230 = !DILocation(line: 97, column: 26, scope: !2173)
!2231 = !{!2232, !2232, i64 0}
!2232 = !{!"any pointer", !2233, i64 0}
!2233 = !{!"omnipotent char", !2234, i64 0}
!2234 = !{!"Simple C++ TBAA"}
!2235 = !DILocation(line: 97, column: 33, scope: !2173)
!2236 = !DILocation(line: 99, column: 5, scope: !2173)
!2237 = !DILocation(line: 99, column: 15, scope: !2173)
!2238 = !DILocation(line: 100, column: 11, scope: !2173)
!2239 = !DILocation(line: 101, column: 7, scope: !2173)
!2240 = !DILocation(line: 102, column: 1, scope: !2173)
!2241 = distinct !DISubprogram(name: "SystemClock_Config", linkageName: "_ZL18SystemClock_Configv", scope: !3, file: !3, line: 104, type: !4, scopeLine: 105, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !6, retainedNodes: !2242)
!2242 = !{!2243, !2263}
!2243 = !DILocalVariable(name: "RCC_OscInitStruct", scope: !2241, file: !3, line: 106, type: !2244)
!2244 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !2245, line: 261, baseType: !2246)
!2245 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "49bf7e29630a7d603739687645591a41")
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2245, line: 228, size: 320, flags: DIFlagTypePassByValue, elements: !2247, identifier: "_ZTS18RCC_OscInitTypeDef")
!2247 = !{!2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !2246, file: !2245, line: 230, baseType: !103, size: 32)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !2246, file: !2245, line: 238, baseType: !103, size: 32, offset: 32)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "HSEPredivValue", scope: !2246, file: !2245, line: 241, baseType: !103, size: 32, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !2246, file: !2245, line: 244, baseType: !103, size: 32, offset: 96)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !2246, file: !2245, line: 247, baseType: !103, size: 32, offset: 128)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !2246, file: !2245, line: 250, baseType: !103, size: 32, offset: 160)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !2246, file: !2245, line: 253, baseType: !103, size: 32, offset: 192)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !2246, file: !2245, line: 256, baseType: !2256, size: 96, offset: 224)
!2256 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !2257, line: 59, baseType: !2258)
!2257 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "3e0cb02f236e8f5a4c479e8d7b418957")
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2257, line: 49, size: 96, flags: DIFlagTypePassByValue, elements: !2259, identifier: "_ZTS18RCC_PLLInitTypeDef")
!2259 = !{!2260, !2261, !2262}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !2258, file: !2257, line: 51, baseType: !103, size: 32)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !2258, file: !2257, line: 54, baseType: !103, size: 32, offset: 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !2258, file: !2257, line: 57, baseType: !103, size: 32, offset: 64)
!2263 = !DILocalVariable(name: "RCC_ClkInitStruct", scope: !2241, file: !3, line: 107, type: !2264)
!2264 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !2257, line: 80, baseType: !2265)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2257, line: 64, size: 160, flags: DIFlagTypePassByValue, elements: !2266, identifier: "_ZTS18RCC_ClkInitTypeDef")
!2266 = !{!2267, !2268, !2269, !2270, !2271}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !2265, file: !2257, line: 66, baseType: !103, size: 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !2265, file: !2257, line: 69, baseType: !103, size: 32, offset: 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !2265, file: !2257, line: 72, baseType: !103, size: 32, offset: 64)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !2265, file: !2257, line: 75, baseType: !103, size: 32, offset: 96)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !2265, file: !2257, line: 78, baseType: !103, size: 32, offset: 128)
!2272 = !DILocation(line: 106, column: 5, scope: !2241)
!2273 = !DILocation(line: 106, column: 24, scope: !2241)
!2274 = !DILocation(line: 107, column: 5, scope: !2241)
!2275 = !DILocation(line: 107, column: 24, scope: !2241)
!2276 = !DILocation(line: 111, column: 23, scope: !2241)
!2277 = !DILocation(line: 111, column: 38, scope: !2241)
!2278 = !{!2279, !2280, i64 0}
!2279 = !{!"_ZTS18RCC_OscInitTypeDef", !2280, i64 0, !2280, i64 4, !2280, i64 8, !2280, i64 12, !2280, i64 16, !2280, i64 20, !2280, i64 24, !2281, i64 28}
!2280 = !{!"int", !2233, i64 0}
!2281 = !{!"_ZTS18RCC_PLLInitTypeDef", !2280, i64 0, !2280, i64 4, !2280, i64 8}
!2282 = !DILocation(line: 112, column: 23, scope: !2241)
!2283 = !DILocation(line: 112, column: 32, scope: !2241)
!2284 = !{!2279, !2280, i64 16}
!2285 = !DILocation(line: 113, column: 23, scope: !2241)
!2286 = !DILocation(line: 113, column: 43, scope: !2241)
!2287 = !{!2279, !2280, i64 20}
!2288 = !DILocation(line: 114, column: 27, scope: !2241)
!2289 = !DILocation(line: 114, column: 36, scope: !2241)
!2290 = !{!2279, !2280, i64 28}
!2291 = !DILocation(line: 115, column: 27, scope: !2241)
!2292 = !DILocation(line: 115, column: 37, scope: !2241)
!2293 = !{!2279, !2280, i64 32}
!2294 = !DILocation(line: 116, column: 27, scope: !2241)
!2295 = !DILocation(line: 116, column: 34, scope: !2241)
!2296 = !{!2279, !2280, i64 36}
!2297 = !DILocation(line: 117, column: 5, scope: !2241)
!2298 = !DILocation(line: 121, column: 23, scope: !2241)
!2299 = !DILocation(line: 122, column: 9, scope: !2241)
!2300 = !{!2301, !2280, i64 0}
!2301 = !{!"_ZTS18RCC_ClkInitTypeDef", !2280, i64 0, !2280, i64 4, !2280, i64 8, !2280, i64 12, !2280, i64 16}
!2302 = !DILocation(line: 123, column: 23, scope: !2241)
!2303 = !DILocation(line: 123, column: 36, scope: !2241)
!2304 = !{!2301, !2280, i64 4}
!2305 = !DILocation(line: 124, column: 23, scope: !2241)
!2306 = !DILocation(line: 124, column: 37, scope: !2241)
!2307 = !{!2301, !2280, i64 8}
!2308 = !DILocation(line: 125, column: 23, scope: !2241)
!2309 = !DILocation(line: 125, column: 38, scope: !2241)
!2310 = !{!2301, !2280, i64 12}
!2311 = !DILocation(line: 126, column: 23, scope: !2241)
!2312 = !DILocation(line: 126, column: 38, scope: !2241)
!2313 = !{!2301, !2280, i64 16}
!2314 = !DILocation(line: 128, column: 5, scope: !2241)
!2315 = !DILocation(line: 129, column: 1, scope: !2241)
!2316 = distinct !DISubprogram(name: "NTPTask", linkageName: "_ZN7NTPTaskC2ERN6Cicada13SimCommDeviceE", scope: !114, file: !3, line: 33, type: !163, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !162, retainedNodes: !2317)
!2317 = !{!2318, !2319}
!2318 = !DILocalVariable(name: "this", arg: 1, scope: !2316, type: !189, flags: DIFlagArtificial | DIFlagObjectPointer)
!2319 = !DILocalVariable(name: "commDev", arg: 2, scope: !2316, file: !3, line: 33, type: !155)
!2320 = !DILocation(line: 0, scope: !2316)
!2321 = !DILocation(line: 33, column: 58, scope: !2316)
!2322 = !DILocation(line: 33, column: 5, scope: !2316)
!2323 = !{!2324, !2324, i64 0}
!2324 = !{!"vtable pointer", !2234, i64 0}
!2325 = !DILocation(line: 33, column: 39, scope: !2316)
!2326 = !DILocation(line: 33, column: 59, scope: !2316)
!2327 = distinct !DISubprogram(name: "~Task", linkageName: "_ZN6Cicada4TaskD2Ev", scope: !117, file: !118, line: 198, type: !130, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !129, retainedNodes: !2328)
!2328 = !{!2329}
!2329 = !DILocalVariable(name: "this", arg: 1, scope: !2327, type: !1900, flags: DIFlagArtificial | DIFlagObjectPointer)
!2330 = !DILocation(line: 0, scope: !2327)
!2331 = !DILocation(line: 198, column: 22, scope: !2327)
!2332 = distinct !DISubprogram(name: "~IPCommDevice", linkageName: "_ZN6Cicada12IPCommDeviceD2Ev", scope: !750, file: !751, line: 54, type: !2333, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !2336, retainedNodes: !2337)
!2333 = !DISubroutineType(types: !2334)
!2334 = !{null, !2335}
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!2336 = !DISubprogram(name: "~IPCommDevice", scope: !750, file: !751, line: 54, type: !2333, scopeLine: 54, containingType: !750, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2337 = !{!2338}
!2338 = !DILocalVariable(name: "this", arg: 1, scope: !2332, type: !2339, flags: DIFlagArtificial | DIFlagObjectPointer)
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 32)
!2340 = !DILocation(line: 0, scope: !2332)
!2341 = !DILocation(line: 54, column: 30, scope: !2342)
!2342 = distinct !DILexicalBlock(scope: !2332, file: !751, line: 54, column: 29)
!2343 = !DILocation(line: 54, column: 30, scope: !2332)
!2344 = distinct !DISubprogram(name: "~CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIhED2Ev", scope: !1599, file: !1600, line: 56, type: !1614, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !1613, retainedNodes: !2345)
!2345 = !{!2346}
!2346 = !DILocalVariable(name: "this", arg: 1, scope: !2344, type: !2347, flags: DIFlagArtificial | DIFlagObjectPointer)
!2347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 32)
!2348 = !DILocation(line: 0, scope: !2344)
!2349 = !DILocation(line: 57, column: 7, scope: !2344)
!2350 = distinct !DISubprogram(name: "~ICommDevice", linkageName: "_ZN6Cicada11ICommDeviceD2Ev", scope: !26, file: !27, line: 46, type: !36, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !35, retainedNodes: !2351)
!2351 = !{!2352}
!2352 = !DILocalVariable(name: "this", arg: 1, scope: !2350, type: !2353, flags: DIFlagArtificial | DIFlagObjectPointer)
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 32)
!2354 = !DILocation(line: 0, scope: !2350)
!2355 = !DILocation(line: 46, column: 30, scope: !2350)
!2356 = distinct !DISubprogram(name: "Task", linkageName: "_ZN6Cicada4TaskC2Et", scope: !117, file: !118, line: 196, type: !126, scopeLine: 196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !125, retainedNodes: !2357)
!2357 = !{!2358, !2359}
!2358 = !DILocalVariable(name: "this", arg: 1, scope: !2356, type: !1900, flags: DIFlagArtificial | DIFlagObjectPointer)
!2359 = !DILocalVariable(name: "initialDelay", arg: 2, scope: !2356, file: !118, line: 196, type: !89)
!2360 = !DILocation(line: 0, scope: !2356)
!2361 = !DILocation(line: 196, column: 73, scope: !2356)
!2362 = !DILocation(line: 196, column: 39, scope: !2356)
!2363 = !{!2364, !2365, i64 4}
!2364 = !{!"_ZTSN6Cicada4TaskE", !2365, i64 4, !2280, i64 8, !2366, i64 12, !2280, i64 16}
!2365 = !{!"short", !2233, i64 0}
!2366 = !{!"bool", !2233, i64 0}
!2367 = !DILocation(line: 285, column: 10, scope: !2356)
!2368 = !{!2364, !2366, i64 12}
!2369 = !DILocation(line: 196, column: 61, scope: !2356)
!2370 = !{!2364, !2280, i64 16}
!2371 = !DILocation(line: 196, column: 74, scope: !2356)
!2372 = distinct !DISubprogram(name: "~NTPTask", linkageName: "_ZN7NTPTaskD0Ev", scope: !114, file: !3, line: 30, type: !167, scopeLine: 30, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !2373, retainedNodes: !2374)
!2373 = !DISubprogram(name: "~NTPTask", scope: !114, type: !167, containingType: !114, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2374 = !{!2375}
!2375 = !DILocalVariable(name: "this", arg: 1, scope: !2372, type: !189, flags: DIFlagArtificial | DIFlagObjectPointer)
!2376 = !DILocation(line: 0, scope: !2372)
!2377 = !DILocation(line: 30, column: 7, scope: !2372)
!2378 = !DILocation(line: 0, scope: !186)
!2379 = !DILocation(line: 37, column: 9, scope: !186)
!2380 = !{!2233, !2233, i64 0}
!2381 = !DILocation(line: 39, column: 9, scope: !2382)
!2382 = distinct !DILexicalBlock(scope: !186, file: !3, line: 37, column: 9)
!2383 = !DILocation(line: 41, column: 9, scope: !2382)
!2384 = !{!2385, !2232, i64 20}
!2385 = !{!"_ZTS7NTPTask", !2232, i64 20, !2233, i64 24}
!2386 = !DILocation(line: 41, column: 19, scope: !2382)
!2387 = !DILocation(line: 42, column: 9, scope: !2382)
!2388 = !DILocation(line: 42, column: 19, scope: !2382)
!2389 = !DILocation(line: 43, column: 9, scope: !2382)
!2390 = !DILocation(line: 43, column: 19, scope: !2382)
!2391 = !DILocation(line: 45, column: 9, scope: !2382)
!2392 = !DILocation(line: 45, column: 9, scope: !2393)
!2393 = distinct !DILexicalBlock(scope: !2382, file: !3, line: 45, column: 9)
!2394 = !DILocation(line: 47, column: 9, scope: !2382)
!2395 = !DILocation(line: 49, column: 9, scope: !2382)
!2396 = !DILocation(line: 49, column: 24, scope: !2382)
!2397 = !{!2280, !2280, i64 0}
!2398 = !DILocation(line: 50, column: 9, scope: !2382)
!2399 = !DILocation(line: 50, column: 25, scope: !2382)
!2400 = !DILocation(line: 50, column: 19, scope: !2382)
!2401 = !DILocation(line: 52, column: 9, scope: !2382)
!2402 = !DILocation(line: 52, column: 9, scope: !2403)
!2403 = distinct !DILexicalBlock(scope: !2382, file: !3, line: 52, column: 9)
!2404 = !DILocation(line: 54, column: 9, scope: !2382)
!2405 = !DILocation(line: 54, column: 34, scope: !2382)
!2406 = !DILocation(line: 54, column: 24, scope: !2382)
!2407 = !DILocation(line: 54, column: 19, scope: !2382)
!2408 = !DILocation(line: 57, column: 25, scope: !2382)
!2409 = !DILocation(line: 57, column: 16, scope: !2382)
!2410 = !DILocation(line: 57, column: 42, scope: !2382)
!2411 = !DILocation(line: 56, column: 9, scope: !2382)
!2412 = !DILocation(line: 59, column: 9, scope: !2382)
!2413 = !DILocation(line: 59, column: 19, scope: !2382)
!2414 = !DILocation(line: 60, column: 9, scope: !2382)
!2415 = !DILocation(line: 60, column: 9, scope: !2416)
!2416 = distinct !DILexicalBlock(scope: !2382, file: !3, line: 60, column: 9)
!2417 = !DILocation(line: 62, column: 9, scope: !2382)
!2418 = !DILocation(line: 64, column: 9, scope: !2382)
!2419 = !DILocation(line: 65, column: 5, scope: !186)
!2420 = distinct !DISubprogram(name: "setDelay", linkageName: "_ZN6Cicada4Task8setDelayEt", scope: !117, file: !118, line: 212, type: !126, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !137, retainedNodes: !2421)
!2421 = !{!2422, !2423}
!2422 = !DILocalVariable(name: "this", arg: 1, scope: !2420, type: !1900, flags: DIFlagArtificial | DIFlagObjectPointer)
!2423 = !DILocalVariable(name: "delay", arg: 2, scope: !2420, file: !118, line: 212, type: !89)
!2424 = !DILocation(line: 0, scope: !2420)
!2425 = !DILocation(line: 214, column: 9, scope: !2420)
!2426 = !DILocation(line: 214, column: 16, scope: !2420)
!2427 = !DILocation(line: 215, column: 5, scope: !2420)
!2428 = distinct !DISubprogram(name: "~Task", linkageName: "_ZN6Cicada4TaskD0Ev", scope: !117, file: !118, line: 198, type: !130, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !129, retainedNodes: !2429)
!2429 = !{!2430}
!2430 = !DILocalVariable(name: "this", arg: 1, scope: !2428, type: !1900, flags: DIFlagArtificial | DIFlagObjectPointer)
!2431 = !DILocation(line: 0, scope: !2428)
!2432 = !DILocation(line: 198, column: 21, scope: !2428)
!2433 = distinct !DISubprogram(name: "SysTick_Handler", scope: !3, file: !3, line: 133, type: !4, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, retainedNodes: !173)
!2434 = !DILocation(line: 135, column: 5, scope: !2433)
!2435 = !DILocation(line: 136, column: 1, scope: !2433)
!2436 = !DILocation(line: 140, column: 5, scope: !2)
!2437 = !{!"branch_weights", i32 1, i32 1048575}
!2438 = !DILocation(line: 140, column: 34, scope: !2)
!2439 = !DILocation(line: 141, column: 5, scope: !2)
!2440 = !DILocation(line: 141, column: 15, scope: !2)
!2441 = !DILocation(line: 142, column: 1, scope: !2)
!2442 = !DILocation(line: 146, column: 5, scope: !172)
!2443 = !DILocation(line: 146, column: 34, scope: !172)
!2444 = !DILocation(line: 147, column: 5, scope: !172)
!2445 = !DILocation(line: 147, column: 15, scope: !172)
!2446 = !DILocation(line: 148, column: 1, scope: !172)
!2447 = !DILocation(line: 0, scope: !179)
!2448 = !DILocation(line: 153, column: 10, scope: !2449)
!2449 = distinct !DILexicalBlock(scope: !179, file: !3, line: 153, column: 9)
!2450 = !DILocation(line: 153, column: 9, scope: !179)
!2451 = !DILocation(line: 154, column: 18, scope: !2452)
!2452 = distinct !DILexicalBlock(scope: !2449, file: !3, line: 153, column: 18)
!2453 = !DILocation(line: 154, column: 16, scope: !2452)
!2454 = !DILocation(line: 155, column: 5, scope: !2452)
!2455 = !DILocation(line: 156, column: 5, scope: !179)
!2456 = !DILocation(line: 156, column: 13, scope: !179)
!2457 = !DILocation(line: 157, column: 1, scope: !179)
!2458 = distinct !DISubprogram(name: "printf_", scope: !490, file: !490, line: 720, type: !1068, scopeLine: 721, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !2459)
!2459 = !{!2460, !2461, !2468, !2470}
!2460 = !DILocalVariable(name: "format", arg: 1, scope: !2458, file: !490, line: 720, type: !86)
!2461 = !DILocalVariable(name: "va", scope: !2458, file: !490, line: 722, type: !2462)
!2462 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1117, line: 14, baseType: !2463)
!2463 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2464, baseType: !2465)
!2464 = !DIFile(filename: "../dep/printf/src/printf.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build")
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !2466)
!2466 = !{!2467}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !2465, file: !2464, line: 722, baseType: !306, size: 32)
!2468 = !DILocalVariable(name: "buffer", scope: !2458, file: !490, line: 724, type: !2469)
!2469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 8, elements: !959)
!2470 = !DILocalVariable(name: "ret", scope: !2458, file: !490, line: 725, type: !2471)
!2471 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !34)
!2472 = !DILocation(line: 0, scope: !2458)
!2473 = !DILocation(line: 722, column: 3, scope: !2458)
!2474 = !DILocation(line: 722, column: 11, scope: !2458)
!2475 = !DILocation(line: 723, column: 3, scope: !2458)
!2476 = !DILocation(line: 724, column: 3, scope: !2458)
!2477 = !DILocation(line: 724, column: 8, scope: !2458)
!2478 = !DILocation(line: 725, column: 19, scope: !2458)
!2479 = !DILocation(line: 726, column: 3, scope: !2458)
!2480 = !DILocation(line: 728, column: 1, scope: !2458)
!2481 = !DILocation(line: 727, column: 3, scope: !2458)
!2482 = distinct !DISubprogram(name: "_out_char", scope: !490, file: !490, line: 124, type: !495, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !2483)
!2483 = !{!2484, !2485, !2486, !2487}
!2484 = !DILocalVariable(name: "character", arg: 1, scope: !2482, file: !490, line: 124, type: !88)
!2485 = !DILocalVariable(name: "buffer", arg: 2, scope: !2482, file: !490, line: 124, type: !306)
!2486 = !DILocalVariable(name: "idx", arg: 3, scope: !2482, file: !490, line: 124, type: !309)
!2487 = !DILocalVariable(name: "maxlen", arg: 4, scope: !2482, file: !490, line: 124, type: !309)
!2488 = !DILocation(line: 0, scope: !2482)
!2489 = !DILocation(line: 127, column: 7, scope: !2490)
!2490 = distinct !DILexicalBlock(scope: !2482, file: !490, line: 127, column: 7)
!2491 = !DILocation(line: 127, column: 7, scope: !2482)
!2492 = !DILocation(line: 128, column: 5, scope: !2493)
!2493 = distinct !DILexicalBlock(scope: !2490, file: !490, line: 127, column: 18)
!2494 = !DILocation(line: 129, column: 3, scope: !2493)
!2495 = !DILocation(line: 130, column: 1, scope: !2482)
!2496 = distinct !DISubprogram(name: "_vsnprintf", scope: !490, file: !490, line: 447, type: !2497, scopeLine: 448, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !2499)
!2497 = !DISubroutineType(types: !2498)
!2498 = !{!34, !493, !335, !519, !86, !2462}
!2499 = !{!2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2515, !2521, !2524, !2530, !2534, !2536, !2542, !2544, !2546, !2547}
!2500 = !DILocalVariable(name: "out", arg: 1, scope: !2496, file: !490, line: 447, type: !493)
!2501 = !DILocalVariable(name: "buffer", arg: 2, scope: !2496, file: !490, line: 447, type: !335)
!2502 = !DILocalVariable(name: "maxlen", arg: 3, scope: !2496, file: !490, line: 447, type: !519)
!2503 = !DILocalVariable(name: "format", arg: 4, scope: !2496, file: !490, line: 447, type: !86)
!2504 = !DILocalVariable(name: "va", arg: 5, scope: !2496, file: !490, line: 447, type: !2462)
!2505 = !DILocalVariable(name: "flags", scope: !2496, file: !490, line: 449, type: !10)
!2506 = !DILocalVariable(name: "width", scope: !2496, file: !490, line: 449, type: !10)
!2507 = !DILocalVariable(name: "precision", scope: !2496, file: !490, line: 449, type: !10)
!2508 = !DILocalVariable(name: "n", scope: !2496, file: !490, line: 449, type: !10)
!2509 = !DILocalVariable(name: "idx", scope: !2496, file: !490, line: 450, type: !309)
!2510 = !DILocalVariable(name: "w", scope: !2511, file: !490, line: 490, type: !2471)
!2511 = distinct !DILexicalBlock(scope: !2512, file: !490, line: 489, column: 30)
!2512 = distinct !DILexicalBlock(scope: !2513, file: !490, line: 489, column: 14)
!2513 = distinct !DILexicalBlock(scope: !2514, file: !490, line: 486, column: 9)
!2514 = distinct !DILexicalBlock(scope: !2496, file: !490, line: 458, column: 3)
!2515 = !DILocalVariable(name: "prec", scope: !2516, file: !490, line: 510, type: !2471)
!2516 = distinct !DILexicalBlock(scope: !2517, file: !490, line: 509, column: 32)
!2517 = distinct !DILexicalBlock(scope: !2518, file: !490, line: 509, column: 16)
!2518 = distinct !DILexicalBlock(scope: !2519, file: !490, line: 506, column: 11)
!2519 = distinct !DILexicalBlock(scope: !2520, file: !490, line: 503, column: 25)
!2520 = distinct !DILexicalBlock(scope: !2514, file: !490, line: 503, column: 9)
!2521 = !DILocalVariable(name: "base", scope: !2522, file: !490, line: 562, type: !10)
!2522 = distinct !DILexicalBlock(scope: !2523, file: !490, line: 560, column: 18)
!2523 = distinct !DILexicalBlock(scope: !2514, file: !490, line: 553, column: 22)
!2524 = !DILocalVariable(name: "value", scope: !2525, file: !490, line: 596, type: !2529)
!2525 = distinct !DILexicalBlock(scope: !2526, file: !490, line: 594, column: 40)
!2526 = distinct !DILexicalBlock(scope: !2527, file: !490, line: 594, column: 15)
!2527 = distinct !DILexicalBlock(scope: !2528, file: !490, line: 592, column: 51)
!2528 = distinct !DILexicalBlock(scope: !2522, file: !490, line: 592, column: 13)
!2529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !207)
!2530 = !DILocalVariable(name: "value", scope: !2531, file: !490, line: 601, type: !2533)
!2531 = distinct !DILexicalBlock(scope: !2532, file: !490, line: 600, column: 40)
!2532 = distinct !DILexicalBlock(scope: !2526, file: !490, line: 600, column: 20)
!2533 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !280)
!2534 = !DILocalVariable(name: "value", scope: !2535, file: !490, line: 605, type: !2471)
!2535 = distinct !DILexicalBlock(scope: !2532, file: !490, line: 604, column: 16)
!2536 = !DILocalVariable(name: "value", scope: !2537, file: !490, line: 620, type: !2541)
!2537 = distinct !DILexicalBlock(scope: !2538, file: !490, line: 619, column: 16)
!2538 = distinct !DILexicalBlock(scope: !2539, file: !490, line: 616, column: 20)
!2539 = distinct !DILexicalBlock(scope: !2540, file: !490, line: 611, column: 15)
!2540 = distinct !DILexicalBlock(scope: !2528, file: !490, line: 609, column: 14)
!2541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10)
!2542 = !DILocalVariable(name: "l", scope: !2543, file: !490, line: 635, type: !10)
!2543 = distinct !DILexicalBlock(scope: !2523, file: !490, line: 634, column: 18)
!2544 = !DILocalVariable(name: "p", scope: !2545, file: !490, line: 655, type: !86)
!2545 = distinct !DILexicalBlock(scope: !2523, file: !490, line: 654, column: 18)
!2546 = !DILocalVariable(name: "l", scope: !2545, file: !490, line: 656, type: !10)
!2547 = !DILocalVariable(name: "is_ll", scope: !2548, file: !490, line: 684, type: !2549)
!2548 = distinct !DILexicalBlock(scope: !2523, file: !490, line: 680, column: 18)
!2549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !529)
!2550 = !DILocation(line: 0, scope: !2496)
!2551 = !{!2552, !2552, i64 0}
!2552 = !{!"any pointer", !2553, i64 0}
!2553 = !{!"omnipotent char", !2554, i64 0}
!2554 = !{!"Simple C/C++ TBAA"}
!2555 = !DILocation(line: 452, column: 8, scope: !2556)
!2556 = distinct !DILexicalBlock(scope: !2496, file: !490, line: 452, column: 7)
!2557 = !DILocation(line: 452, column: 7, scope: !2496)
!2558 = !DILocation(line: 457, column: 3, scope: !2496)
!2559 = !DILocation(line: 457, column: 11, scope: !2496)
!2560 = !DILocation(line: 457, column: 10, scope: !2496)
!2561 = !{!2553, !2553, i64 0}
!2562 = !DILocation(line: 462, column: 31, scope: !2563)
!2563 = distinct !DILexicalBlock(scope: !2564, file: !490, line: 460, column: 25)
!2564 = distinct !DILexicalBlock(scope: !2514, file: !490, line: 460, column: 9)
!2565 = !DILocation(line: 462, column: 7, scope: !2563)
!2566 = !{void (i8, i8*, i32, i32)* @_out_buffer, void (i8, i8*, i32, i32)* @_out_char, void (i8, i8*, i32, i32)* @_out_fct, void (i8, i8*, i32, i32)* @_out_null}
!2567 = !DILocation(line: 463, column: 13, scope: !2563)
!2568 = !DILocation(line: 464, column: 7, scope: !2563)
!2569 = distinct !{!2569, !2558, !2570, !2571, !2572}
!2570 = !DILocation(line: 708, column: 3, scope: !2496)
!2571 = !{!"llvm.loop.mustprogress"}
!2572 = !{!"llvm.loop.unroll.disable"}
!2573 = !DILocation(line: 468, column: 13, scope: !2574)
!2574 = distinct !DILexicalBlock(scope: !2564, file: !490, line: 466, column: 10)
!2575 = !DILocation(line: 473, column: 5, scope: !2514)
!2576 = !DILocation(line: 472, column: 11, scope: !2514)
!2577 = !DILocation(line: 474, column: 16, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !2514, file: !490, line: 473, column: 8)
!2579 = !DILocation(line: 474, column: 15, scope: !2578)
!2580 = !DILocation(line: 474, column: 7, scope: !2578)
!2581 = !DILocation(line: 475, column: 25, scope: !2582)
!2582 = distinct !DILexicalBlock(scope: !2578, file: !490, line: 474, column: 24)
!2583 = !DILocation(line: 475, column: 49, scope: !2582)
!2584 = !DILocation(line: 475, column: 61, scope: !2582)
!2585 = !DILocation(line: 476, column: 25, scope: !2582)
!2586 = !DILocation(line: 476, column: 49, scope: !2582)
!2587 = !DILocation(line: 476, column: 61, scope: !2582)
!2588 = !DILocation(line: 477, column: 25, scope: !2582)
!2589 = !DILocation(line: 477, column: 49, scope: !2582)
!2590 = !DILocation(line: 477, column: 61, scope: !2582)
!2591 = !DILocation(line: 478, column: 25, scope: !2582)
!2592 = !DILocation(line: 478, column: 49, scope: !2582)
!2593 = !DILocation(line: 478, column: 61, scope: !2582)
!2594 = !DILocation(line: 479, column: 25, scope: !2582)
!2595 = !DILocation(line: 479, column: 49, scope: !2582)
!2596 = !DILocation(line: 479, column: 61, scope: !2582)
!2597 = !DILocation(line: 0, scope: !2582)
!2598 = !DILocation(line: 0, scope: !2514)
!2599 = !DILocation(line: 482, column: 5, scope: !2578)
!2600 = distinct !{!2600, !2575, !2601, !2571, !2572}
!2601 = !DILocation(line: 482, column: 15, scope: !2514)
!2602 = !DILocation(line: 486, column: 20, scope: !2513)
!2603 = !DILocation(line: 486, column: 19, scope: !2513)
!2604 = !DILocation(line: 486, column: 9, scope: !2513)
!2605 = !DILocation(line: 486, column: 9, scope: !2514)
!2606 = !DILocation(line: 487, column: 15, scope: !2607)
!2607 = distinct !DILexicalBlock(scope: !2513, file: !490, line: 486, column: 29)
!2608 = !DILocation(line: 488, column: 5, scope: !2607)
!2609 = !DILocation(line: 489, column: 22, scope: !2512)
!2610 = !DILocation(line: 489, column: 14, scope: !2513)
!2611 = !DILocation(line: 490, column: 21, scope: !2511)
!2612 = !DILocation(line: 0, scope: !2511)
!2613 = !DILocation(line: 491, column: 13, scope: !2614)
!2614 = distinct !DILexicalBlock(scope: !2511, file: !490, line: 491, column: 11)
!2615 = !DILocation(line: 491, column: 11, scope: !2511)
!2616 = !DILocation(line: 498, column: 13, scope: !2511)
!2617 = !DILocation(line: 499, column: 5, scope: !2511)
!2618 = !DILocation(line: 503, column: 10, scope: !2520)
!2619 = !DILocation(line: 503, column: 9, scope: !2520)
!2620 = !DILocation(line: 503, column: 17, scope: !2520)
!2621 = !DILocation(line: 503, column: 9, scope: !2514)
!2622 = !DILocation(line: 504, column: 13, scope: !2519)
!2623 = !DILocation(line: 505, column: 13, scope: !2519)
!2624 = !DILocation(line: 506, column: 21, scope: !2518)
!2625 = !DILocation(line: 506, column: 11, scope: !2518)
!2626 = !DILocation(line: 506, column: 11, scope: !2519)
!2627 = !DILocation(line: 507, column: 21, scope: !2628)
!2628 = distinct !DILexicalBlock(scope: !2518, file: !490, line: 506, column: 31)
!2629 = !DILocation(line: 508, column: 7, scope: !2628)
!2630 = !DILocation(line: 509, column: 24, scope: !2517)
!2631 = !DILocation(line: 509, column: 16, scope: !2518)
!2632 = !DILocation(line: 510, column: 31, scope: !2516)
!2633 = !DILocation(line: 0, scope: !2516)
!2634 = !DILocation(line: 511, column: 26, scope: !2516)
!2635 = !DILocation(line: 511, column: 21, scope: !2516)
!2636 = !DILocation(line: 512, column: 15, scope: !2516)
!2637 = !DILocation(line: 513, column: 7, scope: !2516)
!2638 = !DILocation(line: 517, column: 14, scope: !2514)
!2639 = !DILocation(line: 517, column: 13, scope: !2514)
!2640 = !DILocation(line: 517, column: 5, scope: !2514)
!2641 = !DILocation(line: 519, column: 15, scope: !2642)
!2642 = distinct !DILexicalBlock(scope: !2514, file: !490, line: 517, column: 22)
!2643 = !DILocation(line: 520, column: 15, scope: !2642)
!2644 = !DILocation(line: 521, column: 13, scope: !2645)
!2645 = distinct !DILexicalBlock(scope: !2642, file: !490, line: 521, column: 13)
!2646 = !DILocation(line: 521, column: 21, scope: !2645)
!2647 = !DILocation(line: 521, column: 13, scope: !2642)
!2648 = !DILocation(line: 522, column: 17, scope: !2649)
!2649 = distinct !DILexicalBlock(scope: !2645, file: !490, line: 521, column: 29)
!2650 = !DILocation(line: 523, column: 17, scope: !2649)
!2651 = !DILocation(line: 524, column: 9, scope: !2649)
!2652 = !DILocation(line: 527, column: 15, scope: !2642)
!2653 = !DILocation(line: 528, column: 15, scope: !2642)
!2654 = !DILocation(line: 529, column: 13, scope: !2655)
!2655 = distinct !DILexicalBlock(scope: !2642, file: !490, line: 529, column: 13)
!2656 = !DILocation(line: 529, column: 21, scope: !2655)
!2657 = !DILocation(line: 529, column: 13, scope: !2642)
!2658 = !DILocation(line: 530, column: 17, scope: !2659)
!2659 = distinct !DILexicalBlock(scope: !2655, file: !490, line: 529, column: 29)
!2660 = !DILocation(line: 531, column: 17, scope: !2659)
!2661 = !DILocation(line: 532, column: 9, scope: !2659)
!2662 = !DILocation(line: 536, column: 15, scope: !2642)
!2663 = !DILocation(line: 537, column: 15, scope: !2642)
!2664 = !DILocation(line: 538, column: 9, scope: !2642)
!2665 = !DILocation(line: 541, column: 15, scope: !2642)
!2666 = !DILocation(line: 542, column: 15, scope: !2642)
!2667 = !DILocation(line: 543, column: 9, scope: !2642)
!2668 = !DILocation(line: 545, column: 15, scope: !2642)
!2669 = !DILocation(line: 546, column: 15, scope: !2642)
!2670 = !DILocation(line: 547, column: 9, scope: !2642)
!2671 = !DILocation(line: 553, column: 14, scope: !2514)
!2672 = !DILocation(line: 553, column: 13, scope: !2514)
!2673 = !DILocation(line: 553, column: 5, scope: !2514)
!2674 = !DILocation(line: 0, scope: !2522)
!2675 = !DILocation(line: 568, column: 9, scope: !2676)
!2676 = distinct !DILexicalBlock(scope: !2677, file: !490, line: 566, column: 34)
!2677 = distinct !DILexicalBlock(scope: !2678, file: !490, line: 566, column: 18)
!2678 = distinct !DILexicalBlock(scope: !2522, file: !490, line: 563, column: 13)
!2679 = !DILocation(line: 571, column: 9, scope: !2680)
!2680 = distinct !DILexicalBlock(scope: !2681, file: !490, line: 569, column: 34)
!2681 = distinct !DILexicalBlock(scope: !2677, file: !490, line: 569, column: 18)
!2682 = !DILocation(line: 574, column: 17, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2681, file: !490, line: 572, column: 14)
!2684 = !DILocation(line: 0, scope: !2678)
!2685 = !DILocation(line: 577, column: 21, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2522, file: !490, line: 577, column: 13)
!2687 = !DILocation(line: 577, column: 13, scope: !2522)
!2688 = !DILocation(line: 582, column: 30, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2522, file: !490, line: 582, column: 13)
!2690 = !DILocation(line: 583, column: 17, scope: !2691)
!2691 = distinct !DILexicalBlock(scope: !2689, file: !490, line: 582, column: 51)
!2692 = !DILocation(line: 584, column: 9, scope: !2691)
!2693 = !DILocation(line: 587, column: 19, scope: !2694)
!2694 = distinct !DILexicalBlock(scope: !2522, file: !490, line: 587, column: 13)
!2695 = !DILocation(line: 587, column: 13, scope: !2522)
!2696 = !DILocation(line: 592, column: 30, scope: !2528)
!2697 = !DILocation(line: 594, column: 21, scope: !2526)
!2698 = !DILocation(line: 594, column: 15, scope: !2527)
!2699 = !DILocation(line: 596, column: 37, scope: !2525)
!2700 = !DILocation(line: 0, scope: !2525)
!2701 = !DILocation(line: 597, column: 82, scope: !2525)
!2702 = !DILocation(line: 597, column: 120, scope: !2525)
!2703 = !DILocation(line: 597, column: 125, scope: !2525)
!2704 = !DILocation(line: 597, column: 19, scope: !2525)
!2705 = !DILocation(line: 599, column: 11, scope: !2525)
!2706 = !DILocation(line: 600, column: 26, scope: !2532)
!2707 = !DILocation(line: 600, column: 20, scope: !2526)
!2708 = !DILocation(line: 601, column: 32, scope: !2531)
!2709 = !DILocation(line: 0, scope: !2531)
!2710 = !DILocation(line: 602, column: 72, scope: !2531)
!2711 = !DILocation(line: 602, column: 110, scope: !2531)
!2712 = !DILocation(line: 602, column: 19, scope: !2531)
!2713 = !DILocation(line: 603, column: 11, scope: !2531)
!2714 = !DILocation(line: 605, column: 38, scope: !2535)
!2715 = !DILocation(line: 605, column: 31, scope: !2535)
!2716 = !DILocation(line: 605, column: 60, scope: !2535)
!2717 = !DILocation(line: 605, column: 54, scope: !2535)
!2718 = !DILocation(line: 605, column: 85, scope: !2535)
!2719 = !DILocation(line: 0, scope: !2535)
!2720 = !DILocation(line: 605, column: 78, scope: !2535)
!2721 = !DILocation(line: 605, column: 102, scope: !2535)
!2722 = !DILocation(line: 606, column: 71, scope: !2535)
!2723 = !DILocation(line: 606, column: 109, scope: !2535)
!2724 = !DILocation(line: 606, column: 19, scope: !2535)
!2725 = !DILocation(line: 611, column: 21, scope: !2539)
!2726 = !DILocation(line: 611, column: 15, scope: !2540)
!2727 = !DILocation(line: 613, column: 61, scope: !2728)
!2728 = distinct !DILexicalBlock(scope: !2539, file: !490, line: 611, column: 40)
!2729 = !DILocation(line: 613, column: 100, scope: !2728)
!2730 = !DILocation(line: 613, column: 19, scope: !2728)
!2731 = !DILocation(line: 615, column: 11, scope: !2728)
!2732 = !DILocation(line: 616, column: 26, scope: !2538)
!2733 = !DILocation(line: 616, column: 20, scope: !2539)
!2734 = !DILocation(line: 617, column: 56, scope: !2735)
!2735 = distinct !DILexicalBlock(scope: !2538, file: !490, line: 616, column: 40)
!2736 = !DILocation(line: 617, column: 19, scope: !2735)
!2737 = !DILocation(line: 618, column: 11, scope: !2735)
!2738 = !DILocation(line: 620, column: 47, scope: !2537)
!2739 = !DILocation(line: 620, column: 40, scope: !2537)
!2740 = !DILocation(line: 620, column: 78, scope: !2537)
!2741 = !DILocation(line: 620, column: 63, scope: !2537)
!2742 = !DILocation(line: 620, column: 112, scope: !2537)
!2743 = !DILocation(line: 0, scope: !2537)
!2744 = !DILocation(line: 620, column: 105, scope: !2537)
!2745 = !DILocation(line: 621, column: 19, scope: !2537)
!2746 = !DILocation(line: 0, scope: !2528)
!2747 = !DILocation(line: 624, column: 15, scope: !2522)
!2748 = !DILocation(line: 630, column: 47, scope: !2523)
!2749 = !DILocation(line: 630, column: 15, scope: !2523)
!2750 = !DILocation(line: 631, column: 15, scope: !2523)
!2751 = !DILocation(line: 632, column: 9, scope: !2523)
!2752 = !DILocation(line: 0, scope: !2543)
!2753 = !DILocation(line: 637, column: 21, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2543, file: !490, line: 637, column: 13)
!2755 = !DILocation(line: 637, column: 13, scope: !2543)
!2756 = !DILocation(line: 638, column: 22, scope: !2757)
!2757 = distinct !DILexicalBlock(scope: !2754, file: !490, line: 637, column: 36)
!2758 = !DILocation(line: 638, column: 11, scope: !2757)
!2759 = !DILocation(line: 639, column: 33, scope: !2760)
!2760 = distinct !DILexicalBlock(scope: !2757, file: !490, line: 638, column: 31)
!2761 = !DILocation(line: 639, column: 13, scope: !2760)
!2762 = !DILocation(line: 638, column: 19, scope: !2757)
!2763 = distinct !{!2763, !2758, !2764, !2571, !2572}
!2764 = !DILocation(line: 640, column: 11, scope: !2757)
!2765 = !DILocation(line: 450, column: 10, scope: !2496)
!2766 = !DILocation(line: 643, column: 19, scope: !2543)
!2767 = !DILocation(line: 643, column: 13, scope: !2543)
!2768 = !DILocation(line: 643, column: 47, scope: !2543)
!2769 = !DILocation(line: 643, column: 9, scope: !2543)
!2770 = !DILocation(line: 645, column: 13, scope: !2543)
!2771 = !DILocation(line: 646, column: 19, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2773, file: !490, line: 645, column: 33)
!2773 = distinct !DILexicalBlock(scope: !2543, file: !490, line: 645, column: 13)
!2774 = !DILocation(line: 647, column: 33, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2772, file: !490, line: 646, column: 31)
!2776 = !DILocation(line: 647, column: 13, scope: !2775)
!2777 = !DILocation(line: 646, column: 22, scope: !2772)
!2778 = !DILocation(line: 646, column: 11, scope: !2772)
!2779 = distinct !{!2779, !2778, !2780, !2571, !2572}
!2780 = !DILocation(line: 648, column: 11, scope: !2772)
!2781 = !DILocation(line: 650, column: 15, scope: !2543)
!2782 = !DILocation(line: 655, column: 25, scope: !2545)
!2783 = !DILocation(line: 0, scope: !2545)
!2784 = !DILocation(line: 656, column: 40, scope: !2545)
!2785 = !DILocation(line: 656, column: 26, scope: !2545)
!2786 = !DILocation(line: 658, column: 19, scope: !2787)
!2787 = distinct !DILexicalBlock(scope: !2545, file: !490, line: 658, column: 13)
!2788 = !DILocation(line: 658, column: 13, scope: !2545)
!2789 = !DILocation(line: 661, column: 21, scope: !2790)
!2790 = distinct !DILexicalBlock(scope: !2545, file: !490, line: 661, column: 13)
!2791 = !DILocation(line: 661, column: 13, scope: !2545)
!2792 = !DILocation(line: 662, column: 19, scope: !2793)
!2793 = distinct !DILexicalBlock(scope: !2790, file: !490, line: 661, column: 36)
!2794 = !DILocation(line: 662, column: 22, scope: !2793)
!2795 = !DILocation(line: 662, column: 11, scope: !2793)
!2796 = !DILocation(line: 663, column: 33, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2793, file: !490, line: 662, column: 31)
!2798 = !DILocation(line: 663, column: 13, scope: !2797)
!2799 = distinct !{!2799, !2795, !2800, !2571, !2572}
!2800 = !DILocation(line: 664, column: 11, scope: !2793)
!2801 = !DILocation(line: 667, column: 17, scope: !2545)
!2802 = !DILocation(line: 667, column: 20, scope: !2545)
!2803 = !DILocation(line: 667, column: 26, scope: !2545)
!2804 = !DILocation(line: 667, column: 57, scope: !2545)
!2805 = !DILocation(line: 667, column: 69, scope: !2545)
!2806 = !DILocation(line: 667, column: 9, scope: !2545)
!2807 = !DILocation(line: 668, column: 18, scope: !2808)
!2808 = distinct !DILexicalBlock(scope: !2545, file: !490, line: 667, column: 74)
!2809 = !DILocation(line: 668, column: 34, scope: !2808)
!2810 = !DILocation(line: 668, column: 11, scope: !2808)
!2811 = distinct !{!2811, !2806, !2812, !2571, !2572}
!2812 = !DILocation(line: 669, column: 9, scope: !2545)
!2813 = !DILocation(line: 671, column: 13, scope: !2545)
!2814 = !DILocation(line: 672, column: 19, scope: !2815)
!2815 = distinct !DILexicalBlock(scope: !2816, file: !490, line: 671, column: 33)
!2816 = distinct !DILexicalBlock(scope: !2545, file: !490, line: 671, column: 13)
!2817 = !DILocation(line: 673, column: 33, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2815, file: !490, line: 672, column: 31)
!2819 = !DILocation(line: 673, column: 13, scope: !2818)
!2820 = !DILocation(line: 672, column: 22, scope: !2815)
!2821 = !DILocation(line: 672, column: 11, scope: !2815)
!2822 = distinct !{!2822, !2821, !2823, !2571, !2572}
!2823 = !DILocation(line: 674, column: 11, scope: !2815)
!2824 = !DILocation(line: 676, column: 15, scope: !2545)
!2825 = !DILocation(line: 682, column: 15, scope: !2548)
!2826 = !DILocation(line: 0, scope: !2548)
!2827 = !DILocation(line: 690, column: 81, scope: !2828)
!2828 = distinct !DILexicalBlock(scope: !2829, file: !490, line: 688, column: 14)
!2829 = distinct !DILexicalBlock(scope: !2548, file: !490, line: 685, column: 13)
!2830 = !DILocation(line: 690, column: 70, scope: !2828)
!2831 = !DILocation(line: 690, column: 17, scope: !2828)
!2832 = !DILocation(line: 694, column: 15, scope: !2548)
!2833 = !DILocation(line: 699, column: 29, scope: !2523)
!2834 = !DILocation(line: 699, column: 9, scope: !2523)
!2835 = !DILocation(line: 700, column: 15, scope: !2523)
!2836 = !DILocation(line: 701, column: 9, scope: !2523)
!2837 = !DILocation(line: 704, column: 33, scope: !2523)
!2838 = !DILocation(line: 704, column: 9, scope: !2523)
!2839 = !DILocation(line: 705, column: 15, scope: !2523)
!2840 = !DILocation(line: 706, column: 9, scope: !2523)
!2841 = !DILocation(line: 711, column: 28, scope: !2496)
!2842 = !DILocation(line: 711, column: 24, scope: !2496)
!2843 = !DILocation(line: 711, column: 3, scope: !2496)
!2844 = !DILocation(line: 714, column: 3, scope: !2496)
!2845 = distinct !DISubprogram(name: "_out_null", scope: !490, file: !490, line: 117, type: !495, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !2846)
!2846 = !{!2847, !2848, !2849, !2850}
!2847 = !DILocalVariable(name: "character", arg: 1, scope: !2845, file: !490, line: 117, type: !88)
!2848 = !DILocalVariable(name: "buffer", arg: 2, scope: !2845, file: !490, line: 117, type: !306)
!2849 = !DILocalVariable(name: "idx", arg: 3, scope: !2845, file: !490, line: 117, type: !309)
!2850 = !DILocalVariable(name: "maxlen", arg: 4, scope: !2845, file: !490, line: 117, type: !309)
!2851 = !DILocation(line: 0, scope: !2845)
!2852 = !DILocation(line: 120, column: 1, scope: !2845)
!2853 = distinct !DISubprogram(name: "_out_buffer", scope: !490, file: !490, line: 108, type: !495, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !2854)
!2854 = !{!2855, !2856, !2857, !2858}
!2855 = !DILocalVariable(name: "character", arg: 1, scope: !2853, file: !490, line: 108, type: !88)
!2856 = !DILocalVariable(name: "buffer", arg: 2, scope: !2853, file: !490, line: 108, type: !306)
!2857 = !DILocalVariable(name: "idx", arg: 3, scope: !2853, file: !490, line: 108, type: !309)
!2858 = !DILocalVariable(name: "maxlen", arg: 4, scope: !2853, file: !490, line: 108, type: !309)
!2859 = !DILocation(line: 0, scope: !2853)
!2860 = !DILocation(line: 110, column: 11, scope: !2861)
!2861 = distinct !DILexicalBlock(scope: !2853, file: !490, line: 110, column: 7)
!2862 = !DILocation(line: 110, column: 7, scope: !2853)
!2863 = !DILocation(line: 111, column: 5, scope: !2864)
!2864 = distinct !DILexicalBlock(scope: !2861, file: !490, line: 110, column: 21)
!2865 = !DILocation(line: 111, column: 26, scope: !2864)
!2866 = !DILocation(line: 112, column: 3, scope: !2864)
!2867 = !DILocation(line: 113, column: 1, scope: !2853)
!2868 = distinct !DISubprogram(name: "_out_fct", scope: !490, file: !490, line: 134, type: !495, scopeLine: 135, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !2869)
!2869 = !{!2870, !2871, !2872, !2873}
!2870 = !DILocalVariable(name: "character", arg: 1, scope: !2868, file: !490, line: 134, type: !88)
!2871 = !DILocalVariable(name: "buffer", arg: 2, scope: !2868, file: !490, line: 134, type: !306)
!2872 = !DILocalVariable(name: "idx", arg: 3, scope: !2868, file: !490, line: 134, type: !309)
!2873 = !DILocalVariable(name: "maxlen", arg: 4, scope: !2868, file: !490, line: 134, type: !309)
!2874 = !DILocation(line: 0, scope: !2868)
!2875 = !DILocation(line: 137, column: 7, scope: !2876)
!2876 = distinct !DILexicalBlock(scope: !2868, file: !490, line: 137, column: 7)
!2877 = !DILocation(line: 137, column: 7, scope: !2868)
!2878 = !DILocation(line: 139, column: 35, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2876, file: !490, line: 137, column: 18)
!2880 = !{!2881, !2552, i64 0}
!2881 = !{!"", !2552, i64 0, !2552, i64 4}
!2882 = !DILocation(line: 139, column: 80, scope: !2879)
!2883 = !{!2881, !2552, i64 4}
!2884 = !DILocation(line: 139, column: 5, scope: !2879)
!2885 = !DILocation(line: 140, column: 3, scope: !2879)
!2886 = !DILocation(line: 141, column: 1, scope: !2868)
!2887 = distinct !DISubprogram(name: "_is_digit", scope: !490, file: !490, line: 156, type: !2888, scopeLine: 157, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !2890)
!2888 = !DISubroutineType(types: !2889)
!2889 = !{!529, !88}
!2890 = !{!2891}
!2891 = !DILocalVariable(name: "ch", arg: 1, scope: !2887, file: !490, line: 156, type: !88)
!2892 = !DILocation(line: 0, scope: !2887)
!2893 = !DILocation(line: 158, column: 22, scope: !2887)
!2894 = !DILocation(line: 158, column: 3, scope: !2887)
!2895 = distinct !DISubprogram(name: "_atoi", scope: !490, file: !490, line: 163, type: !2896, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !2899)
!2896 = !DISubroutineType(types: !2897)
!2897 = !{!10, !2898}
!2898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 32)
!2899 = !{!2900, !2901}
!2900 = !DILocalVariable(name: "str", arg: 1, scope: !2895, file: !490, line: 163, type: !2898)
!2901 = !DILocalVariable(name: "i", scope: !2895, file: !490, line: 165, type: !10)
!2902 = !DILocation(line: 0, scope: !2895)
!2903 = !DILocation(line: 166, column: 21, scope: !2895)
!2904 = !DILocation(line: 166, column: 20, scope: !2895)
!2905 = !DILocation(line: 166, column: 10, scope: !2895)
!2906 = !DILocation(line: 166, column: 3, scope: !2895)
!2907 = !DILocation(line: 167, column: 11, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2895, file: !490, line: 166, column: 28)
!2909 = !DILocation(line: 167, column: 42, scope: !2908)
!2910 = !DILocation(line: 167, column: 34, scope: !2908)
!2911 = !DILocation(line: 167, column: 46, scope: !2908)
!2912 = !DILocation(line: 167, column: 17, scope: !2908)
!2913 = distinct !{!2913, !2906, !2914, !2571, !2572}
!2914 = !DILocation(line: 168, column: 3, scope: !2895)
!2915 = !DILocation(line: 169, column: 3, scope: !2895)
!2916 = distinct !DISubprogram(name: "_ntoa_long_long", scope: !490, file: !490, line: 274, type: !2917, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !2919)
!2917 = !DISubroutineType(types: !2918)
!2918 = !{!309, !493, !335, !309, !309, !48, !529, !48, !10, !10, !10}
!2919 = !{!2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932}
!2920 = !DILocalVariable(name: "out", arg: 1, scope: !2916, file: !490, line: 274, type: !493)
!2921 = !DILocalVariable(name: "buffer", arg: 2, scope: !2916, file: !490, line: 274, type: !335)
!2922 = !DILocalVariable(name: "idx", arg: 3, scope: !2916, file: !490, line: 274, type: !309)
!2923 = !DILocalVariable(name: "maxlen", arg: 4, scope: !2916, file: !490, line: 274, type: !309)
!2924 = !DILocalVariable(name: "value", arg: 5, scope: !2916, file: !490, line: 274, type: !48)
!2925 = !DILocalVariable(name: "negative", arg: 6, scope: !2916, file: !490, line: 274, type: !529)
!2926 = !DILocalVariable(name: "base", arg: 7, scope: !2916, file: !490, line: 274, type: !48)
!2927 = !DILocalVariable(name: "prec", arg: 8, scope: !2916, file: !490, line: 274, type: !10)
!2928 = !DILocalVariable(name: "width", arg: 9, scope: !2916, file: !490, line: 274, type: !10)
!2929 = !DILocalVariable(name: "flags", arg: 10, scope: !2916, file: !490, line: 274, type: !10)
!2930 = !DILocalVariable(name: "buf", scope: !2916, file: !490, line: 276, type: !521)
!2931 = !DILocalVariable(name: "len", scope: !2916, file: !490, line: 277, type: !309)
!2932 = !DILocalVariable(name: "digit", scope: !2933, file: !490, line: 287, type: !87)
!2933 = distinct !DILexicalBlock(scope: !2934, file: !490, line: 286, column: 8)
!2934 = distinct !DILexicalBlock(scope: !2935, file: !490, line: 285, column: 44)
!2935 = distinct !DILexicalBlock(scope: !2916, file: !490, line: 285, column: 7)
!2936 = !DILocation(line: 0, scope: !2916)
!2937 = !DILocation(line: 276, column: 3, scope: !2916)
!2938 = !DILocation(line: 276, column: 8, scope: !2916)
!2939 = !DILocation(line: 280, column: 8, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2916, file: !490, line: 280, column: 7)
!2941 = !DILocation(line: 280, column: 7, scope: !2916)
!2942 = !DILocation(line: 285, column: 15, scope: !2935)
!2943 = !DILocation(line: 285, column: 34, scope: !2935)
!2944 = !DILocation(line: 286, column: 5, scope: !2934)
!2945 = !DILocation(line: 289, column: 13, scope: !2933)
!2946 = !DILocation(line: 287, column: 26, scope: !2933)
!2947 = !DILocation(line: 288, column: 20, scope: !2933)
!2948 = !DILocation(line: 0, scope: !2933)
!2949 = !DILocation(line: 288, column: 26, scope: !2933)
!2950 = !DILocation(line: 288, column: 14, scope: !2933)
!2951 = !DILocation(line: 288, column: 7, scope: !2933)
!2952 = !DILocation(line: 288, column: 18, scope: !2933)
!2953 = !DILocation(line: 290, column: 14, scope: !2934)
!2954 = !DILocation(line: 290, column: 20, scope: !2934)
!2955 = !DILocation(line: 290, column: 5, scope: !2933)
!2956 = distinct !{!2956, !2944, !2957, !2571, !2572}
!2957 = !DILocation(line: 290, column: 54, scope: !2934)
!2958 = !DILocation(line: 293, column: 69, scope: !2916)
!2959 = !DILocation(line: 293, column: 10, scope: !2916)
!2960 = !DILocation(line: 294, column: 1, scope: !2916)
!2961 = !DILocation(line: 293, column: 3, scope: !2916)
!2962 = distinct !DISubprogram(name: "_ntoa_long", scope: !490, file: !490, line: 249, type: !2963, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !2965)
!2963 = !DISubroutineType(types: !2964)
!2964 = !{!309, !493, !335, !309, !309, !389, !529, !389, !10, !10, !10}
!2965 = !{!2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978}
!2966 = !DILocalVariable(name: "out", arg: 1, scope: !2962, file: !490, line: 249, type: !493)
!2967 = !DILocalVariable(name: "buffer", arg: 2, scope: !2962, file: !490, line: 249, type: !335)
!2968 = !DILocalVariable(name: "idx", arg: 3, scope: !2962, file: !490, line: 249, type: !309)
!2969 = !DILocalVariable(name: "maxlen", arg: 4, scope: !2962, file: !490, line: 249, type: !309)
!2970 = !DILocalVariable(name: "value", arg: 5, scope: !2962, file: !490, line: 249, type: !389)
!2971 = !DILocalVariable(name: "negative", arg: 6, scope: !2962, file: !490, line: 249, type: !529)
!2972 = !DILocalVariable(name: "base", arg: 7, scope: !2962, file: !490, line: 249, type: !389)
!2973 = !DILocalVariable(name: "prec", arg: 8, scope: !2962, file: !490, line: 249, type: !10)
!2974 = !DILocalVariable(name: "width", arg: 9, scope: !2962, file: !490, line: 249, type: !10)
!2975 = !DILocalVariable(name: "flags", arg: 10, scope: !2962, file: !490, line: 249, type: !10)
!2976 = !DILocalVariable(name: "buf", scope: !2962, file: !490, line: 251, type: !521)
!2977 = !DILocalVariable(name: "len", scope: !2962, file: !490, line: 252, type: !309)
!2978 = !DILocalVariable(name: "digit", scope: !2979, file: !490, line: 262, type: !87)
!2979 = distinct !DILexicalBlock(scope: !2980, file: !490, line: 261, column: 8)
!2980 = distinct !DILexicalBlock(scope: !2981, file: !490, line: 260, column: 44)
!2981 = distinct !DILexicalBlock(scope: !2962, file: !490, line: 260, column: 7)
!2982 = !DILocation(line: 0, scope: !2962)
!2983 = !DILocation(line: 251, column: 3, scope: !2962)
!2984 = !DILocation(line: 251, column: 8, scope: !2962)
!2985 = !DILocation(line: 255, column: 8, scope: !2986)
!2986 = distinct !DILexicalBlock(scope: !2962, file: !490, line: 255, column: 7)
!2987 = !DILocation(line: 255, column: 7, scope: !2962)
!2988 = !DILocation(line: 260, column: 15, scope: !2981)
!2989 = !DILocation(line: 260, column: 34, scope: !2981)
!2990 = !DILocation(line: 261, column: 5, scope: !2980)
!2991 = !DILocation(line: 264, column: 13, scope: !2979)
!2992 = !DILocation(line: 263, column: 20, scope: !2979)
!2993 = !DILocation(line: 0, scope: !2979)
!2994 = !DILocation(line: 263, column: 26, scope: !2979)
!2995 = !DILocation(line: 263, column: 14, scope: !2979)
!2996 = !DILocation(line: 263, column: 7, scope: !2979)
!2997 = !DILocation(line: 263, column: 18, scope: !2979)
!2998 = !DILocation(line: 265, column: 14, scope: !2980)
!2999 = !DILocation(line: 265, column: 20, scope: !2980)
!3000 = !DILocation(line: 265, column: 5, scope: !2979)
!3001 = distinct !{!3001, !2990, !3002, !2571, !2572}
!3002 = !DILocation(line: 265, column: 54, scope: !2980)
!3003 = !DILocation(line: 268, column: 10, scope: !2962)
!3004 = !DILocation(line: 269, column: 1, scope: !2962)
!3005 = !DILocation(line: 268, column: 3, scope: !2962)
!3006 = !DILocation(line: 0, scope: !489)
!3007 = !DILocation(line: 303, column: 3, scope: !489)
!3008 = !DILocation(line: 303, column: 8, scope: !489)
!3009 = !DILocation(line: 314, column: 13, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !489, file: !490, line: 314, column: 7)
!3011 = !DILocation(line: 314, column: 7, scope: !489)
!3012 = !DILocation(line: 315, column: 25, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !3010, file: !490, line: 314, column: 23)
!3014 = !DILocation(line: 315, column: 5, scope: !3013)
!3015 = !DILocation(line: 316, column: 25, scope: !3013)
!3016 = !DILocation(line: 316, column: 5, scope: !3013)
!3017 = !DILocation(line: 317, column: 25, scope: !3013)
!3018 = !DILocation(line: 317, column: 5, scope: !3013)
!3019 = !DILocation(line: 318, column: 5, scope: !3013)
!3020 = !DILocation(line: 323, column: 13, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !489, file: !490, line: 323, column: 7)
!3022 = !DILocation(line: 323, column: 7, scope: !489)
!3023 = !DILocation(line: 329, column: 15, scope: !3024)
!3024 = distinct !DILexicalBlock(scope: !489, file: !490, line: 329, column: 7)
!3025 = !DILocation(line: 329, column: 7, scope: !489)
!3026 = !DILocation(line: 333, column: 42, scope: !489)
!3027 = !DILocation(line: 333, column: 3, scope: !489)
!3028 = !DILocation(line: 334, column: 16, scope: !3029)
!3029 = distinct !DILexicalBlock(scope: !489, file: !490, line: 333, column: 58)
!3030 = !DILocation(line: 334, column: 12, scope: !3029)
!3031 = !DILocation(line: 335, column: 9, scope: !3029)
!3032 = distinct !{!3032, !3027, !3033, !2571, !2572}
!3033 = !DILocation(line: 336, column: 3, scope: !489)
!3034 = !DILocation(line: 333, column: 15, scope: !489)
!3035 = !DILocation(line: 338, column: 15, scope: !489)
!3036 = !DILocation(line: 339, column: 25, scope: !489)
!3037 = !DILocation(line: 339, column: 23, scope: !489)
!3038 = !DILocation(line: 339, column: 34, scope: !489)
!3039 = !{!3040, !3040, i64 0}
!3040 = !{!"double", !2553, i64 0}
!3041 = !DILocation(line: 339, column: 32, scope: !489)
!3042 = !DILocation(line: 340, column: 24, scope: !489)
!3043 = !DILocation(line: 341, column: 16, scope: !489)
!3044 = !DILocation(line: 341, column: 14, scope: !489)
!3045 = !DILocation(line: 343, column: 12, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !489, file: !490, line: 343, column: 7)
!3047 = !DILocation(line: 343, column: 7, scope: !489)
!3048 = !DILocation(line: 344, column: 5, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3046, file: !490, line: 343, column: 19)
!3050 = !DILocation(line: 346, column: 9, scope: !3051)
!3051 = distinct !DILexicalBlock(scope: !3049, file: !490, line: 346, column: 9)
!3052 = !DILocation(line: 346, column: 14, scope: !3051)
!3053 = !DILocation(line: 346, column: 9, scope: !3049)
!3054 = !DILocation(line: 348, column: 7, scope: !3055)
!3055 = distinct !DILexicalBlock(scope: !3051, file: !490, line: 346, column: 30)
!3056 = !DILocation(line: 349, column: 5, scope: !3055)
!3057 = !DILocation(line: 351, column: 17, scope: !3058)
!3058 = distinct !DILexicalBlock(scope: !3046, file: !490, line: 351, column: 12)
!3059 = !DILocation(line: 351, column: 12, scope: !3046)
!3060 = !DILocation(line: 353, column: 18, scope: !3061)
!3061 = distinct !DILexicalBlock(scope: !3058, file: !490, line: 353, column: 12)
!3062 = !DILocation(line: 353, column: 25, scope: !3061)
!3063 = !DILocation(line: 360, column: 13, scope: !3064)
!3064 = distinct !DILexicalBlock(scope: !489, file: !490, line: 360, column: 7)
!3065 = !DILocation(line: 360, column: 7, scope: !489)
!3066 = !DILocation(line: 364, column: 12, scope: !535)
!3067 = !DILocation(line: 364, column: 7, scope: !489)
!3068 = !DILocation(line: 365, column: 20, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !535, file: !490, line: 364, column: 19)
!3070 = !DILocation(line: 365, column: 18, scope: !3069)
!3071 = !DILocation(line: 366, column: 24, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !3069, file: !490, line: 366, column: 9)
!3073 = !DILocation(line: 0, scope: !534)
!3074 = !DILocation(line: 375, column: 5, scope: !534)
!3075 = !DILocation(line: 376, column: 7, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !534, file: !490, line: 375, column: 43)
!3077 = !DILocation(line: 378, column: 18, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3076, file: !490, line: 378, column: 11)
!3079 = !DILocation(line: 377, column: 20, scope: !3076)
!3080 = !DILocation(line: 377, column: 14, scope: !3076)
!3081 = !DILocation(line: 377, column: 7, scope: !3076)
!3082 = !DILocation(line: 377, column: 18, scope: !3076)
!3083 = !DILocation(line: 378, column: 11, scope: !3076)
!3084 = distinct !{!3084, !3074, !3085, !2571, !2572}
!3085 = !DILocation(line: 381, column: 5, scope: !534)
!3086 = !DILocation(line: 383, column: 17, scope: !534)
!3087 = !DILocation(line: 383, column: 44, scope: !534)
!3088 = !DILocation(line: 383, column: 53, scope: !534)
!3089 = !DILocation(line: 384, column: 14, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !534, file: !490, line: 383, column: 63)
!3091 = !DILocation(line: 384, column: 7, scope: !3090)
!3092 = !DILocation(line: 384, column: 18, scope: !3090)
!3093 = distinct !{!3093, !3094, !3095, !2571, !2572}
!3094 = !DILocation(line: 383, column: 5, scope: !534)
!3095 = !DILocation(line: 385, column: 5, scope: !534)
!3096 = !DILocation(line: 386, column: 9, scope: !534)
!3097 = !DILocation(line: 388, column: 14, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !3099, file: !490, line: 386, column: 40)
!3099 = distinct !DILexicalBlock(scope: !534, file: !490, line: 386, column: 9)
!3100 = !DILocation(line: 388, column: 7, scope: !3098)
!3101 = !DILocation(line: 388, column: 18, scope: !3098)
!3102 = !DILocation(line: 389, column: 5, scope: !3098)
!3103 = !DILocation(line: 393, column: 14, scope: !489)
!3104 = !DILocation(line: 393, column: 3, scope: !489)
!3105 = !DILocation(line: 395, column: 17, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3107, file: !490, line: 395, column: 9)
!3107 = distinct !DILexicalBlock(scope: !489, file: !490, line: 393, column: 41)
!3108 = !DILocation(line: 394, column: 18, scope: !3107)
!3109 = !DILocation(line: 394, column: 12, scope: !3107)
!3110 = !DILocation(line: 394, column: 5, scope: !3107)
!3111 = !DILocation(line: 394, column: 16, scope: !3107)
!3112 = !DILocation(line: 395, column: 9, scope: !3107)
!3113 = distinct !{!3113, !3104, !3114, !2571, !2572}
!3114 = !DILocation(line: 398, column: 3, scope: !489)
!3115 = !DILocation(line: 401, column: 15, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !489, file: !490, line: 401, column: 7)
!3117 = !DILocation(line: 401, column: 29, scope: !3116)
!3118 = !DILocation(line: 402, column: 9, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3120, file: !490, line: 402, column: 9)
!3120 = distinct !DILexicalBlock(scope: !3116, file: !490, line: 401, column: 57)
!3121 = !DILocation(line: 402, column: 15, scope: !3119)
!3122 = !DILocation(line: 402, column: 28, scope: !3119)
!3123 = !DILocation(line: 405, column: 17, scope: !3120)
!3124 = !DILocation(line: 405, column: 26, scope: !3120)
!3125 = !DILocation(line: 405, column: 5, scope: !3120)
!3126 = !DILocation(line: 406, column: 18, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3120, file: !490, line: 405, column: 62)
!3128 = !DILocation(line: 410, column: 11, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !489, file: !490, line: 410, column: 7)
!3130 = !DILocation(line: 410, column: 7, scope: !489)
!3131 = !DILocation(line: 411, column: 9, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3129, file: !490, line: 410, column: 38)
!3133 = !DILocation(line: 414, column: 20, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !3135, file: !490, line: 414, column: 14)
!3135 = distinct !DILexicalBlock(scope: !3132, file: !490, line: 411, column: 9)
!3136 = !DILocation(line: 414, column: 14, scope: !3135)
!3137 = !DILocation(line: 417, column: 20, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !3134, file: !490, line: 417, column: 14)
!3139 = !DILocation(line: 417, column: 14, scope: !3134)
!3140 = !DILocation(line: 0, scope: !3135)
!3141 = !DILocation(line: 423, column: 29, scope: !539)
!3142 = !DILocation(line: 0, scope: !537)
!3143 = !DILocation(line: 425, column: 27, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3145, file: !490, line: 424, column: 42)
!3145 = distinct !DILexicalBlock(scope: !537, file: !490, line: 424, column: 5)
!3146 = !DILocation(line: 425, column: 7, scope: !3144)
!3147 = !DILocation(line: 424, column: 38, scope: !3145)
!3148 = !DILocation(line: 424, column: 28, scope: !3145)
!3149 = !DILocation(line: 424, column: 5, scope: !537)
!3150 = distinct !{!3150, !3149, !3151, !2571, !2572}
!3151 = !DILocation(line: 426, column: 5, scope: !537)
!3152 = !DILocation(line: 0, scope: !541)
!3153 = !DILocation(line: 430, column: 25, scope: !3154)
!3154 = distinct !DILexicalBlock(scope: !541, file: !490, line: 430, column: 3)
!3155 = !DILocation(line: 430, column: 3, scope: !541)
!3156 = !DILocation(line: 435, column: 7, scope: !489)
!3157 = !DILocation(line: 431, column: 21, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3154, file: !490, line: 430, column: 37)
!3159 = !DILocation(line: 431, column: 9, scope: !3158)
!3160 = !DILocation(line: 431, column: 39, scope: !3158)
!3161 = !DILocation(line: 431, column: 5, scope: !3158)
!3162 = !DILocation(line: 430, column: 33, scope: !3154)
!3163 = distinct !{!3163, !3155, !3164, !2571, !2572}
!3164 = !DILocation(line: 432, column: 3, scope: !541)
!3165 = !DILocation(line: 437, column: 27, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3167, file: !490, line: 436, column: 37)
!3167 = distinct !DILexicalBlock(scope: !3168, file: !490, line: 435, column: 27)
!3168 = distinct !DILexicalBlock(scope: !489, file: !490, line: 435, column: 7)
!3169 = !DILocation(line: 437, column: 7, scope: !3166)
!3170 = !DILocation(line: 436, column: 16, scope: !3167)
!3171 = !DILocation(line: 436, column: 28, scope: !3167)
!3172 = !DILocation(line: 436, column: 5, scope: !3167)
!3173 = distinct !{!3173, !3172, !3174, !2571, !2572}
!3174 = !DILocation(line: 438, column: 5, scope: !3167)
!3175 = !DILocation(line: 442, column: 1, scope: !489)
!3176 = distinct !DISubprogram(name: "_strnlen_s", scope: !490, file: !490, line: 146, type: !3177, scopeLine: 147, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !3179)
!3177 = !DISubroutineType(types: !3178)
!3178 = !{!10, !86, !309}
!3179 = !{!3180, !3181, !3182}
!3180 = !DILocalVariable(name: "str", arg: 1, scope: !3176, file: !490, line: 146, type: !86)
!3181 = !DILocalVariable(name: "maxsize", arg: 2, scope: !3176, file: !490, line: 146, type: !309)
!3182 = !DILocalVariable(name: "s", scope: !3176, file: !490, line: 148, type: !86)
!3183 = !DILocation(line: 0, scope: !3176)
!3184 = !DILocation(line: 149, column: 17, scope: !3185)
!3185 = distinct !DILexicalBlock(scope: !3186, file: !490, line: 149, column: 3)
!3186 = distinct !DILexicalBlock(scope: !3176, file: !490, line: 149, column: 3)
!3187 = !DILocation(line: 149, column: 20, scope: !3185)
!3188 = !DILocation(line: 149, column: 30, scope: !3185)
!3189 = !DILocation(line: 149, column: 34, scope: !3185)
!3190 = distinct !{!3190, !3191, !3192, !2571, !2572}
!3191 = !DILocation(line: 149, column: 3, scope: !3186)
!3192 = !DILocation(line: 149, column: 38, scope: !3186)
!3193 = !DILocation(line: 0, scope: !3186)
!3194 = !DILocation(line: 150, column: 27, scope: !3176)
!3195 = !DILocation(line: 150, column: 3, scope: !3176)
!3196 = distinct !DISubprogram(name: "_ntoa_format", scope: !490, file: !490, line: 174, type: !3197, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !3199)
!3197 = !DISubroutineType(types: !3198)
!3198 = !{!309, !493, !335, !309, !309, !335, !309, !529, !10, !10, !10, !10}
!3199 = !{!3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3216}
!3200 = !DILocalVariable(name: "out", arg: 1, scope: !3196, file: !490, line: 174, type: !493)
!3201 = !DILocalVariable(name: "buffer", arg: 2, scope: !3196, file: !490, line: 174, type: !335)
!3202 = !DILocalVariable(name: "idx", arg: 3, scope: !3196, file: !490, line: 174, type: !309)
!3203 = !DILocalVariable(name: "maxlen", arg: 4, scope: !3196, file: !490, line: 174, type: !309)
!3204 = !DILocalVariable(name: "buf", arg: 5, scope: !3196, file: !490, line: 174, type: !335)
!3205 = !DILocalVariable(name: "len", arg: 6, scope: !3196, file: !490, line: 174, type: !309)
!3206 = !DILocalVariable(name: "negative", arg: 7, scope: !3196, file: !490, line: 174, type: !529)
!3207 = !DILocalVariable(name: "base", arg: 8, scope: !3196, file: !490, line: 174, type: !10)
!3208 = !DILocalVariable(name: "prec", arg: 9, scope: !3196, file: !490, line: 174, type: !10)
!3209 = !DILocalVariable(name: "width", arg: 10, scope: !3196, file: !490, line: 174, type: !10)
!3210 = !DILocalVariable(name: "flags", arg: 11, scope: !3196, file: !490, line: 174, type: !10)
!3211 = !DILocalVariable(name: "start_idx", scope: !3196, file: !490, line: 176, type: !519)
!3212 = !DILocalVariable(name: "i", scope: !3213, file: !490, line: 227, type: !309)
!3213 = distinct !DILexicalBlock(scope: !3214, file: !490, line: 227, column: 5)
!3214 = distinct !DILexicalBlock(scope: !3215, file: !490, line: 226, column: 58)
!3215 = distinct !DILexicalBlock(scope: !3196, file: !490, line: 226, column: 7)
!3216 = !DILocalVariable(name: "i", scope: !3217, file: !490, line: 233, type: !309)
!3217 = distinct !DILexicalBlock(scope: !3196, file: !490, line: 233, column: 3)
!3218 = !DILocation(line: 0, scope: !3196)
!3219 = !DILocation(line: 179, column: 15, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !3196, file: !490, line: 179, column: 7)
!3221 = !DILocation(line: 179, column: 7, scope: !3196)
!3222 = !DILocation(line: 180, column: 9, scope: !3223)
!3223 = distinct !DILexicalBlock(scope: !3224, file: !490, line: 180, column: 9)
!3224 = distinct !DILexicalBlock(scope: !3220, file: !490, line: 179, column: 30)
!3225 = !DILocation(line: 180, column: 15, scope: !3223)
!3226 = !DILocation(line: 180, column: 25, scope: !3223)
!3227 = !DILocation(line: 180, column: 42, scope: !3223)
!3228 = !DILocation(line: 180, column: 55, scope: !3223)
!3229 = !DILocation(line: 183, column: 17, scope: !3224)
!3230 = !DILocation(line: 183, column: 25, scope: !3224)
!3231 = !DILocation(line: 183, column: 5, scope: !3224)
!3232 = !DILocation(line: 184, column: 18, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !3224, file: !490, line: 183, column: 61)
!3234 = !DILocation(line: 186, column: 36, scope: !3224)
!3235 = !DILocation(line: 186, column: 44, scope: !3224)
!3236 = !DILocation(line: 186, column: 53, scope: !3224)
!3237 = !DILocation(line: 187, column: 14, scope: !3238)
!3238 = distinct !DILexicalBlock(scope: !3224, file: !490, line: 186, column: 89)
!3239 = !DILocation(line: 187, column: 7, scope: !3238)
!3240 = !DILocation(line: 187, column: 18, scope: !3238)
!3241 = distinct !{!3241, !3242, !3243, !2571, !2572}
!3242 = !DILocation(line: 186, column: 5, scope: !3224)
!3243 = !DILocation(line: 188, column: 5, scope: !3224)
!3244 = !DILocation(line: 192, column: 13, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3196, file: !490, line: 192, column: 7)
!3246 = !DILocation(line: 192, column: 7, scope: !3196)
!3247 = !DILocation(line: 193, column: 17, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3249, file: !490, line: 193, column: 9)
!3249 = distinct !DILexicalBlock(scope: !3245, file: !490, line: 192, column: 27)
!3250 = !DILocation(line: 193, column: 36, scope: !3248)
!3251 = !DILocation(line: 193, column: 52, scope: !3248)
!3252 = !DILocation(line: 193, column: 61, scope: !3248)
!3253 = !DILocation(line: 194, column: 10, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3248, file: !490, line: 193, column: 81)
!3255 = !DILocation(line: 195, column: 11, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3254, file: !490, line: 195, column: 11)
!3257 = !DILocation(line: 195, column: 15, scope: !3256)
!3258 = !DILocation(line: 199, column: 15, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3249, file: !490, line: 199, column: 9)
!3260 = !DILocation(line: 199, column: 23, scope: !3259)
!3261 = !DILocation(line: 199, column: 34, scope: !3259)
!3262 = !DILocation(line: 199, column: 53, scope: !3259)
!3263 = !DILocation(line: 202, column: 38, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3259, file: !490, line: 202, column: 14)
!3265 = !DILocation(line: 202, column: 57, scope: !3264)
!3266 = !DILocation(line: 205, column: 20, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3264, file: !490, line: 205, column: 14)
!3268 = !DILocation(line: 205, column: 27, scope: !3267)
!3269 = !DILocation(line: 0, scope: !3259)
!3270 = !DILocation(line: 208, column: 13, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !3249, file: !490, line: 208, column: 9)
!3272 = !DILocation(line: 0, scope: !3249)
!3273 = !DILocation(line: 208, column: 9, scope: !3249)
!3274 = !DILocation(line: 209, column: 14, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3271, file: !490, line: 208, column: 40)
!3276 = !DILocation(line: 209, column: 7, scope: !3275)
!3277 = !DILocation(line: 209, column: 18, scope: !3275)
!3278 = !DILocation(line: 210, column: 5, scope: !3275)
!3279 = !DILocation(line: 213, column: 11, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3196, file: !490, line: 213, column: 7)
!3281 = !DILocation(line: 213, column: 7, scope: !3196)
!3282 = !DILocation(line: 214, column: 9, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !3280, file: !490, line: 213, column: 38)
!3284 = !DILocation(line: 217, column: 20, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3286, file: !490, line: 217, column: 14)
!3286 = distinct !DILexicalBlock(scope: !3283, file: !490, line: 214, column: 9)
!3287 = !DILocation(line: 217, column: 14, scope: !3286)
!3288 = !DILocation(line: 220, column: 20, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3285, file: !490, line: 220, column: 14)
!3290 = !DILocation(line: 220, column: 14, scope: !3285)
!3291 = !DILocation(line: 0, scope: !3286)
!3292 = !DILocation(line: 226, column: 29, scope: !3215)
!3293 = !DILocation(line: 0, scope: !3213)
!3294 = !DILocation(line: 228, column: 27, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3296, file: !490, line: 227, column: 42)
!3296 = distinct !DILexicalBlock(scope: !3213, file: !490, line: 227, column: 5)
!3297 = !DILocation(line: 228, column: 7, scope: !3295)
!3298 = !DILocation(line: 227, column: 38, scope: !3296)
!3299 = !DILocation(line: 227, column: 28, scope: !3296)
!3300 = !DILocation(line: 227, column: 5, scope: !3213)
!3301 = distinct !{!3301, !3300, !3302, !2571, !2572}
!3302 = !DILocation(line: 229, column: 5, scope: !3213)
!3303 = !DILocation(line: 0, scope: !3217)
!3304 = !DILocation(line: 233, column: 25, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3217, file: !490, line: 233, column: 3)
!3306 = !DILocation(line: 233, column: 3, scope: !3217)
!3307 = !DILocation(line: 238, column: 7, scope: !3196)
!3308 = !DILocation(line: 234, column: 21, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3305, file: !490, line: 233, column: 37)
!3310 = !DILocation(line: 234, column: 9, scope: !3309)
!3311 = !DILocation(line: 234, column: 39, scope: !3309)
!3312 = !DILocation(line: 234, column: 5, scope: !3309)
!3313 = !DILocation(line: 233, column: 33, scope: !3305)
!3314 = distinct !{!3314, !3306, !3315, !2571, !2572}
!3315 = !DILocation(line: 235, column: 3, scope: !3217)
!3316 = !DILocation(line: 240, column: 27, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3318, file: !490, line: 239, column: 37)
!3318 = distinct !DILexicalBlock(scope: !3319, file: !490, line: 238, column: 27)
!3319 = distinct !DILexicalBlock(scope: !3196, file: !490, line: 238, column: 7)
!3320 = !DILocation(line: 240, column: 7, scope: !3317)
!3321 = !DILocation(line: 239, column: 16, scope: !3318)
!3322 = !DILocation(line: 239, column: 28, scope: !3318)
!3323 = !DILocation(line: 239, column: 5, scope: !3318)
!3324 = distinct !{!3324, !3323, !3325, !2571, !2572}
!3325 = !DILocation(line: 241, column: 5, scope: !3318)
!3326 = !DILocation(line: 244, column: 3, scope: !3196)
!3327 = distinct !DISubprogram(name: "sprintf_", scope: !490, file: !490, line: 731, type: !1096, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !3328)
!3328 = !{!3329, !3330, !3331, !3332}
!3329 = !DILocalVariable(name: "buffer", arg: 1, scope: !3327, file: !490, line: 731, type: !335)
!3330 = !DILocalVariable(name: "format", arg: 2, scope: !3327, file: !490, line: 731, type: !86)
!3331 = !DILocalVariable(name: "va", scope: !3327, file: !490, line: 733, type: !2462)
!3332 = !DILocalVariable(name: "ret", scope: !3327, file: !490, line: 735, type: !2471)
!3333 = !DILocation(line: 0, scope: !3327)
!3334 = !DILocation(line: 733, column: 3, scope: !3327)
!3335 = !DILocation(line: 733, column: 11, scope: !3327)
!3336 = !DILocation(line: 734, column: 3, scope: !3327)
!3337 = !DILocation(line: 735, column: 19, scope: !3327)
!3338 = !DILocation(line: 736, column: 3, scope: !3327)
!3339 = !DILocation(line: 738, column: 1, scope: !3327)
!3340 = !DILocation(line: 737, column: 3, scope: !3327)
!3341 = distinct !DISubprogram(name: "snprintf_", scope: !490, file: !490, line: 741, type: !1131, scopeLine: 742, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !3342)
!3342 = !{!3343, !3344, !3345, !3346, !3347}
!3343 = !DILocalVariable(name: "buffer", arg: 1, scope: !3341, file: !490, line: 741, type: !335)
!3344 = !DILocalVariable(name: "count", arg: 2, scope: !3341, file: !490, line: 741, type: !309)
!3345 = !DILocalVariable(name: "format", arg: 3, scope: !3341, file: !490, line: 741, type: !86)
!3346 = !DILocalVariable(name: "va", scope: !3341, file: !490, line: 743, type: !2462)
!3347 = !DILocalVariable(name: "ret", scope: !3341, file: !490, line: 745, type: !2471)
!3348 = !DILocation(line: 0, scope: !3341)
!3349 = !DILocation(line: 743, column: 3, scope: !3341)
!3350 = !DILocation(line: 743, column: 11, scope: !3341)
!3351 = !DILocation(line: 744, column: 3, scope: !3341)
!3352 = !DILocation(line: 745, column: 19, scope: !3341)
!3353 = !DILocation(line: 746, column: 3, scope: !3341)
!3354 = !DILocation(line: 748, column: 1, scope: !3341)
!3355 = !DILocation(line: 747, column: 3, scope: !3341)
!3356 = distinct !DISubprogram(name: "vsnprintf_", scope: !490, file: !490, line: 751, type: !3357, scopeLine: 752, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !3359)
!3357 = !DISubroutineType(types: !3358)
!3358 = !{!34, !335, !309, !86, !2462}
!3359 = !{!3360, !3361, !3362, !3363}
!3360 = !DILocalVariable(name: "buffer", arg: 1, scope: !3356, file: !490, line: 751, type: !335)
!3361 = !DILocalVariable(name: "count", arg: 2, scope: !3356, file: !490, line: 751, type: !309)
!3362 = !DILocalVariable(name: "format", arg: 3, scope: !3356, file: !490, line: 751, type: !86)
!3363 = !DILocalVariable(name: "va", arg: 4, scope: !3356, file: !490, line: 751, type: !2462)
!3364 = !DILocation(line: 0, scope: !3356)
!3365 = !DILocation(line: 753, column: 10, scope: !3356)
!3366 = !DILocation(line: 753, column: 3, scope: !3356)
!3367 = distinct !DISubprogram(name: "fctprintf", scope: !490, file: !490, line: 757, type: !3368, scopeLine: 758, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !3370)
!3368 = !DISubroutineType(types: !3369)
!3369 = !{!34, !504, !306, !86, null}
!3370 = !{!3371, !3372, !3373, !3374, !3375, !3377}
!3371 = !DILocalVariable(name: "out", arg: 1, scope: !3367, file: !490, line: 757, type: !504)
!3372 = !DILocalVariable(name: "arg", arg: 2, scope: !3367, file: !490, line: 757, type: !306)
!3373 = !DILocalVariable(name: "format", arg: 3, scope: !3367, file: !490, line: 757, type: !86)
!3374 = !DILocalVariable(name: "va", scope: !3367, file: !490, line: 759, type: !2462)
!3375 = !DILocalVariable(name: "out_fct_wrap", scope: !3367, file: !490, line: 761, type: !3376)
!3376 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !500)
!3377 = !DILocalVariable(name: "ret", scope: !3367, file: !490, line: 762, type: !2471)
!3378 = !DILocation(line: 0, scope: !3367)
!3379 = !DILocation(line: 759, column: 3, scope: !3367)
!3380 = !DILocation(line: 759, column: 11, scope: !3367)
!3381 = !DILocation(line: 760, column: 3, scope: !3367)
!3382 = !DILocation(line: 761, column: 3, scope: !3367)
!3383 = !DILocation(line: 761, column: 27, scope: !3367)
!3384 = !DILocation(line: 761, column: 42, scope: !3367)
!3385 = !DILocation(line: 762, column: 19, scope: !3367)
!3386 = !DILocation(line: 763, column: 3, scope: !3367)
!3387 = !DILocation(line: 765, column: 1, scope: !3367)
!3388 = !DILocation(line: 764, column: 3, scope: !3367)
!3389 = distinct !DISubprogram(name: "SystemInit", scope: !548, file: !548, line: 157, type: !4, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !173)
!3390 = !DILocation(line: 161, column: 11, scope: !3389)
!3391 = !{!3392, !3393, i64 0}
!3392 = !{!"", !3393, i64 0, !3393, i64 4, !3393, i64 8, !3393, i64 12, !3393, i64 16, !3393, i64 20, !3393, i64 24, !3393, i64 28, !3393, i64 32, !3393, i64 36}
!3393 = !{!"int", !2553, i64 0}
!3394 = !DILocation(line: 165, column: 13, scope: !3389)
!3395 = !{!3392, !3393, i64 4}
!3396 = !DILocation(line: 171, column: 11, scope: !3389)
!3397 = !DILocation(line: 174, column: 11, scope: !3389)
!3398 = !DILocation(line: 177, column: 13, scope: !3389)
!3399 = !DILocation(line: 196, column: 12, scope: !3389)
!3400 = !{!3392, !3393, i64 8}
!3401 = !DILocation(line: 208, column: 13, scope: !3389)
!3402 = !{!3403, !3393, i64 8}
!3403 = !{!"", !3393, i64 0, !3393, i64 4, !3393, i64 8, !3393, i64 12, !3393, i64 16, !3393, i64 20, !2553, i64 24, !3393, i64 36, !3393, i64 40, !3393, i64 44, !3393, i64 48, !3393, i64 52, !3393, i64 56, !3393, i64 60, !2553, i64 64, !3393, i64 72, !3393, i64 76, !2553, i64 80, !2553, i64 96, !2553, i64 116, !3393, i64 136}
!3404 = !DILocation(line: 210, column: 1, scope: !3389)
!3405 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !548, file: !548, line: 247, type: !4, scopeLine: 248, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !3406)
!3406 = !{!3407, !3408, !3409}
!3407 = !DILocalVariable(name: "tmp", scope: !3405, file: !548, line: 249, type: !103)
!3408 = !DILocalVariable(name: "pllmull", scope: !3405, file: !548, line: 249, type: !103)
!3409 = !DILocalVariable(name: "pllsource", scope: !3405, file: !548, line: 249, type: !103)
!3410 = !DILocation(line: 0, scope: !3405)
!3411 = !DILocation(line: 260, column: 14, scope: !3405)
!3412 = !DILocation(line: 260, column: 19, scope: !3405)
!3413 = !DILocation(line: 262, column: 3, scope: !3405)
!3414 = !DILocation(line: 273, column: 22, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3405, file: !548, line: 263, column: 3)
!3416 = !DILocation(line: 274, column: 24, scope: !3415)
!3417 = !DILocation(line: 274, column: 29, scope: !3415)
!3418 = !DILocation(line: 277, column: 27, scope: !3415)
!3419 = !DILocation(line: 277, column: 35, scope: !3415)
!3420 = !DILocation(line: 279, column: 21, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3415, file: !548, line: 279, column: 11)
!3422 = !DILocation(line: 279, column: 11, scope: !3415)
!3423 = !DILocation(line: 282, column: 45, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3421, file: !548, line: 280, column: 7)
!3425 = !DILocation(line: 283, column: 7, scope: !3424)
!3426 = !DILocation(line: 292, column: 19, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3428, file: !548, line: 292, column: 13)
!3428 = distinct !DILexicalBlock(scope: !3421, file: !548, line: 285, column: 7)
!3429 = !DILocation(line: 292, column: 24, scope: !3427)
!3430 = !DILocation(line: 292, column: 45, scope: !3427)
!3431 = !DILocation(line: 292, column: 13, scope: !3428)
!3432 = !DILocation(line: 294, column: 47, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3427, file: !548, line: 293, column: 9)
!3434 = !DILocation(line: 295, column: 9, scope: !3433)
!3435 = !DILocation(line: 298, column: 39, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3427, file: !548, line: 297, column: 9)
!3437 = !DILocation(line: 0, scope: !3415)
!3438 = !{!3393, !3393, i64 0}
!3439 = !DILocation(line: 350, column: 30, scope: !3405)
!3440 = !DILocation(line: 350, column: 52, scope: !3405)
!3441 = !DILocation(line: 350, column: 9, scope: !3405)
!3442 = !DILocation(line: 352, column: 19, scope: !3405)
!3443 = !DILocation(line: 353, column: 1, scope: !3405)
!3444 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !1430, file: !1430, line: 202, type: !3445, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1429, retainedNodes: !3448)
!3445 = !DISubroutineType(types: !3446)
!3446 = !{!3447}
!3447 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !9, line: 47, baseType: !632)
!3448 = !{!3449}
!3449 = !DILocalVariable(name: "tickstart", scope: !3444, file: !1430, line: 204, type: !103)
!3450 = !DILocation(line: 207, column: 15, scope: !3444)
!3451 = !DILocation(line: 0, scope: !3444)
!3452 = !DILocation(line: 210, column: 3, scope: !3444)
!3453 = !DILocation(line: 213, column: 3, scope: !3444)
!3454 = !DILocation(line: 213, column: 10, scope: !3444)
!3455 = !DILocation(line: 213, column: 43, scope: !3444)
!3456 = !DILocation(line: 215, column: 10, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3458, file: !1430, line: 215, column: 9)
!3458 = distinct !DILexicalBlock(scope: !3444, file: !1430, line: 214, column: 3)
!3459 = !DILocation(line: 215, column: 24, scope: !3457)
!3460 = !DILocation(line: 215, column: 37, scope: !3457)
!3461 = !DILocation(line: 215, column: 9, scope: !3458)
!3462 = distinct !{!3462, !3453, !3463, !2571, !2572}
!3463 = !DILocation(line: 219, column: 3, scope: !3444)
!3464 = !DILocation(line: 222, column: 3, scope: !3444)
!3465 = !DILocation(line: 225, column: 15, scope: !3444)
!3466 = !DILocation(line: 228, column: 3, scope: !3444)
!3467 = !DILocation(line: 231, column: 3, scope: !3444)
!3468 = !DILocation(line: 231, column: 10, scope: !3444)
!3469 = !DILocation(line: 231, column: 44, scope: !3444)
!3470 = !DILocation(line: 233, column: 10, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3472, file: !1430, line: 233, column: 9)
!3472 = distinct !DILexicalBlock(scope: !3444, file: !1430, line: 232, column: 3)
!3473 = !DILocation(line: 233, column: 24, scope: !3471)
!3474 = !DILocation(line: 233, column: 37, scope: !3471)
!3475 = !DILocation(line: 233, column: 9, scope: !3472)
!3476 = distinct !{!3476, !3467, !3477, !2571, !2572}
!3477 = !DILocation(line: 237, column: 3, scope: !3444)
!3478 = !DILocation(line: 240, column: 19, scope: !3444)
!3479 = !DILocation(line: 243, column: 20, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3444, file: !1430, line: 243, column: 7)
!3481 = !DILocation(line: 243, column: 7, scope: !3480)
!3482 = !DILocation(line: 243, column: 32, scope: !3480)
!3483 = !DILocation(line: 243, column: 7, scope: !3444)
!3484 = !DILocation(line: 249, column: 15, scope: !3444)
!3485 = !DILocation(line: 252, column: 3, scope: !3444)
!3486 = !DILocation(line: 255, column: 3, scope: !3444)
!3487 = !DILocation(line: 255, column: 10, scope: !3444)
!3488 = !DILocation(line: 255, column: 43, scope: !3444)
!3489 = !DILocation(line: 257, column: 10, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !3491, file: !1430, line: 257, column: 9)
!3491 = distinct !DILexicalBlock(scope: !3444, file: !1430, line: 256, column: 3)
!3492 = !DILocation(line: 257, column: 24, scope: !3490)
!3493 = !DILocation(line: 257, column: 37, scope: !3490)
!3494 = !DILocation(line: 257, column: 9, scope: !3491)
!3495 = distinct !{!3495, !3486, !3496, !2571, !2572}
!3496 = !DILocation(line: 261, column: 3, scope: !3444)
!3497 = !DILocation(line: 264, column: 3, scope: !3444)
!3498 = !DILocation(line: 267, column: 15, scope: !3444)
!3499 = !DILocation(line: 270, column: 3, scope: !3444)
!3500 = !DILocation(line: 273, column: 3, scope: !3444)
!3501 = !DILocation(line: 273, column: 10, scope: !3444)
!3502 = !DILocation(line: 273, column: 43, scope: !3444)
!3503 = !DILocation(line: 275, column: 10, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !3505, file: !1430, line: 275, column: 9)
!3505 = distinct !DILexicalBlock(scope: !3444, file: !1430, line: 274, column: 3)
!3506 = !DILocation(line: 275, column: 24, scope: !3504)
!3507 = !DILocation(line: 275, column: 37, scope: !3504)
!3508 = !DILocation(line: 275, column: 9, scope: !3505)
!3509 = distinct !{!3509, !3500, !3510, !2571, !2572}
!3510 = !DILocation(line: 279, column: 3, scope: !3444)
!3511 = !DILocation(line: 282, column: 3, scope: !3444)
!3512 = !DILocation(line: 324, column: 3, scope: !3444)
!3513 = !{!3392, !3393, i64 36}
!3514 = !DILocation(line: 327, column: 3, scope: !3444)
!3515 = !DILocation(line: 329, column: 3, scope: !3444)
!3516 = !DILocation(line: 330, column: 1, scope: !3444)
!3517 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !1430, file: !1430, line: 347, type: !3518, scopeLine: 348, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1429, retainedNodes: !3538)
!3518 = !DISubroutineType(types: !3519)
!3519 = !{!3447, !3520}
!3520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3521, size: 32)
!3521 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !2245, line: 261, baseType: !3522)
!3522 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2245, line: 228, size: 320, elements: !3523)
!3523 = !{!3524, !3525, !3526, !3527, !3528, !3529, !3530, !3531}
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !3522, file: !2245, line: 230, baseType: !103, size: 32)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !3522, file: !2245, line: 238, baseType: !103, size: 32, offset: 32)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "HSEPredivValue", scope: !3522, file: !2245, line: 241, baseType: !103, size: 32, offset: 64)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !3522, file: !2245, line: 244, baseType: !103, size: 32, offset: 96)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !3522, file: !2245, line: 247, baseType: !103, size: 32, offset: 128)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !3522, file: !2245, line: 250, baseType: !103, size: 32, offset: 160)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !3522, file: !2245, line: 253, baseType: !103, size: 32, offset: 192)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !3522, file: !2245, line: 256, baseType: !3532, size: 96, offset: 224)
!3532 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !2257, line: 59, baseType: !3533)
!3533 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2257, line: 49, size: 96, elements: !3534)
!3534 = !{!3535, !3536, !3537}
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !3533, file: !2257, line: 51, baseType: !103, size: 32)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !3533, file: !2257, line: 54, baseType: !103, size: 32, offset: 32)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !3533, file: !2257, line: 57, baseType: !103, size: 32, offset: 64)
!3538 = !{!3539, !3540, !3541, !3542, !3546}
!3539 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !3517, file: !1430, line: 347, type: !3520)
!3540 = !DILocalVariable(name: "tickstart", scope: !3517, file: !1430, line: 349, type: !103)
!3541 = !DILocalVariable(name: "pll_config", scope: !3517, file: !1430, line: 350, type: !103)
!3542 = !DILocalVariable(name: "pwrclkchanged", scope: !3543, file: !1430, line: 526, type: !3545)
!3543 = distinct !DILexicalBlock(scope: !3544, file: !1430, line: 525, column: 3)
!3544 = distinct !DILexicalBlock(scope: !3517, file: !1430, line: 524, column: 7)
!3545 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !551, line: 155, baseType: !550)
!3546 = !DILocalVariable(name: "tmpreg", scope: !3547, file: !1430, line: 535, type: !102)
!3547 = distinct !DILexicalBlock(scope: !3548, file: !1430, line: 535, column: 7)
!3548 = distinct !DILexicalBlock(scope: !3549, file: !1430, line: 534, column: 5)
!3549 = distinct !DILexicalBlock(scope: !3543, file: !1430, line: 533, column: 9)
!3550 = !DILocation(line: 0, scope: !3517)
!3551 = !DILocation(line: 353, column: 25, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3517, file: !1430, line: 353, column: 7)
!3553 = !DILocation(line: 353, column: 7, scope: !3517)
!3554 = !DILocation(line: 362, column: 28, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3517, file: !1430, line: 362, column: 7)
!3556 = !{!3557, !3393, i64 0}
!3557 = !{!"", !3393, i64 0, !3393, i64 4, !3393, i64 8, !3393, i64 12, !3393, i64 16, !3393, i64 20, !3393, i64 24, !3558, i64 28}
!3558 = !{!"", !3393, i64 0, !3393, i64 4, !3393, i64 8}
!3559 = !DILocation(line: 362, column: 44, scope: !3555)
!3560 = !DILocation(line: 362, column: 70, scope: !3555)
!3561 = !DILocation(line: 362, column: 7, scope: !3517)
!3562 = !DILocation(line: 368, column: 10, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3564, file: !1430, line: 368, column: 9)
!3564 = distinct !DILexicalBlock(scope: !3555, file: !1430, line: 363, column: 3)
!3565 = !DILocation(line: 368, column: 40, scope: !3563)
!3566 = !DILocation(line: 369, column: 9, scope: !3563)
!3567 = !DILocation(line: 369, column: 14, scope: !3563)
!3568 = !DILocation(line: 369, column: 44, scope: !3563)
!3569 = !DILocation(line: 369, column: 79, scope: !3563)
!3570 = !DILocation(line: 369, column: 83, scope: !3563)
!3571 = !DILocation(line: 369, column: 113, scope: !3563)
!3572 = !DILocation(line: 368, column: 9, scope: !3564)
!3573 = !DILocation(line: 371, column: 12, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3575, file: !1430, line: 371, column: 11)
!3575 = distinct !DILexicalBlock(scope: !3563, file: !1430, line: 370, column: 5)
!3576 = !DILocation(line: 371, column: 48, scope: !3574)
!3577 = !DILocation(line: 371, column: 58, scope: !3574)
!3578 = !DILocation(line: 371, column: 81, scope: !3574)
!3579 = !{!3557, !3393, i64 4}
!3580 = !DILocation(line: 371, column: 90, scope: !3574)
!3581 = !DILocation(line: 371, column: 11, scope: !3575)
!3582 = !DILocation(line: 379, column: 7, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3584, file: !1430, line: 379, column: 7)
!3584 = distinct !DILexicalBlock(scope: !3585, file: !1430, line: 379, column: 7)
!3585 = distinct !DILexicalBlock(scope: !3563, file: !1430, line: 377, column: 5)
!3586 = !DILocation(line: 379, column: 7, scope: !3584)
!3587 = !DILocation(line: 379, column: 7, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3583, file: !1430, line: 379, column: 7)
!3589 = !DILocation(line: 379, column: 7, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3591, file: !1430, line: 379, column: 7)
!3591 = distinct !DILexicalBlock(scope: !3583, file: !1430, line: 379, column: 7)
!3592 = !DILocation(line: 379, column: 7, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3594, file: !1430, line: 379, column: 7)
!3594 = distinct !DILexicalBlock(scope: !3591, file: !1430, line: 379, column: 7)
!3595 = !DILocation(line: 379, column: 7, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3594, file: !1430, line: 379, column: 7)
!3597 = !DILocation(line: 0, scope: !3583)
!3598 = !DILocation(line: 383, column: 39, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3585, file: !1430, line: 383, column: 11)
!3600 = !DILocation(line: 0, scope: !3599)
!3601 = !DILocation(line: 383, column: 11, scope: !3585)
!3602 = !DILocation(line: 389, column: 16, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3599, file: !1430, line: 384, column: 7)
!3604 = !DILocation(line: 389, column: 52, scope: !3603)
!3605 = !DILocation(line: 389, column: 9, scope: !3603)
!3606 = !DILocation(line: 391, column: 16, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3608, file: !1430, line: 391, column: 15)
!3608 = distinct !DILexicalBlock(scope: !3603, file: !1430, line: 390, column: 9)
!3609 = !DILocation(line: 391, column: 30, scope: !3607)
!3610 = !DILocation(line: 391, column: 43, scope: !3607)
!3611 = !DILocation(line: 391, column: 15, scope: !3608)
!3612 = distinct !{!3612, !3605, !3613, !2571, !2572}
!3613 = !DILocation(line: 395, column: 9, scope: !3603)
!3614 = !DILocation(line: 403, column: 16, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3599, file: !1430, line: 398, column: 7)
!3616 = !DILocation(line: 403, column: 52, scope: !3615)
!3617 = !DILocation(line: 403, column: 9, scope: !3615)
!3618 = !DILocation(line: 405, column: 16, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3620, file: !1430, line: 405, column: 15)
!3620 = distinct !DILexicalBlock(scope: !3615, file: !1430, line: 404, column: 9)
!3621 = !DILocation(line: 405, column: 30, scope: !3619)
!3622 = !DILocation(line: 405, column: 43, scope: !3619)
!3623 = !DILocation(line: 405, column: 15, scope: !3620)
!3624 = distinct !{!3624, !3617, !3625, !2571, !2572}
!3625 = !DILocation(line: 409, column: 9, scope: !3615)
!3626 = !DILocation(line: 414, column: 28, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3517, file: !1430, line: 414, column: 7)
!3628 = !DILocation(line: 414, column: 44, scope: !3627)
!3629 = !DILocation(line: 414, column: 70, scope: !3627)
!3630 = !DILocation(line: 414, column: 7, scope: !3517)
!3631 = !DILocation(line: 421, column: 10, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3633, file: !1430, line: 421, column: 9)
!3633 = distinct !DILexicalBlock(scope: !3627, file: !1430, line: 415, column: 3)
!3634 = !DILocation(line: 421, column: 40, scope: !3632)
!3635 = !DILocation(line: 422, column: 9, scope: !3632)
!3636 = !DILocation(line: 422, column: 14, scope: !3632)
!3637 = !DILocation(line: 422, column: 44, scope: !3632)
!3638 = !DILocation(line: 422, column: 79, scope: !3632)
!3639 = !DILocation(line: 422, column: 83, scope: !3632)
!3640 = !DILocation(line: 422, column: 113, scope: !3632)
!3641 = !DILocation(line: 421, column: 9, scope: !3633)
!3642 = !DILocation(line: 425, column: 12, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3644, file: !1430, line: 425, column: 11)
!3644 = distinct !DILexicalBlock(scope: !3632, file: !1430, line: 423, column: 5)
!3645 = !DILocation(line: 425, column: 48, scope: !3643)
!3646 = !DILocation(line: 425, column: 58, scope: !3643)
!3647 = !DILocation(line: 425, column: 81, scope: !3643)
!3648 = !{!3557, !3393, i64 16}
!3649 = !DILocation(line: 425, column: 90, scope: !3643)
!3650 = !DILocation(line: 425, column: 11, scope: !3644)
!3651 = !DILocation(line: 439, column: 30, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3653, file: !1430, line: 439, column: 11)
!3653 = distinct !DILexicalBlock(scope: !3632, file: !1430, line: 437, column: 5)
!3654 = !DILocation(line: 439, column: 39, scope: !3652)
!3655 = !DILocation(line: 439, column: 11, scope: !3653)
!3656 = !DILocation(line: 442, column: 9, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3652, file: !1430, line: 440, column: 7)
!3658 = !DILocation(line: 445, column: 21, scope: !3657)
!3659 = !DILocation(line: 448, column: 9, scope: !3657)
!3660 = !DILocation(line: 448, column: 16, scope: !3657)
!3661 = !DILocation(line: 448, column: 52, scope: !3657)
!3662 = !DILocation(line: 450, column: 16, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3664, file: !1430, line: 450, column: 15)
!3664 = distinct !DILexicalBlock(scope: !3657, file: !1430, line: 449, column: 9)
!3665 = !DILocation(line: 450, column: 30, scope: !3663)
!3666 = !DILocation(line: 450, column: 43, scope: !3663)
!3667 = !DILocation(line: 450, column: 15, scope: !3664)
!3668 = distinct !{!3668, !3659, !3669, !2571, !2572}
!3669 = !DILocation(line: 454, column: 9, scope: !3657)
!3670 = !DILocation(line: 462, column: 9, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3652, file: !1430, line: 460, column: 7)
!3672 = !DILocation(line: 465, column: 21, scope: !3671)
!3673 = !DILocation(line: 468, column: 9, scope: !3671)
!3674 = !DILocation(line: 468, column: 16, scope: !3671)
!3675 = !DILocation(line: 468, column: 52, scope: !3671)
!3676 = !DILocation(line: 470, column: 16, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3678, file: !1430, line: 470, column: 15)
!3678 = distinct !DILexicalBlock(scope: !3671, file: !1430, line: 469, column: 9)
!3679 = !DILocation(line: 470, column: 30, scope: !3677)
!3680 = !DILocation(line: 470, column: 43, scope: !3677)
!3681 = !DILocation(line: 470, column: 15, scope: !3678)
!3682 = distinct !{!3682, !3673, !3683, !2571, !2572}
!3683 = !DILocation(line: 474, column: 9, scope: !3671)
!3684 = !DILocation(line: 0, scope: !3632)
!3685 = !{!3557, !3393, i64 20}
!3686 = !DILocation(line: 479, column: 28, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3517, file: !1430, line: 479, column: 7)
!3688 = !DILocation(line: 479, column: 44, scope: !3687)
!3689 = !DILocation(line: 479, column: 70, scope: !3687)
!3690 = !DILocation(line: 479, column: 7, scope: !3517)
!3691 = !DILocation(line: 485, column: 28, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3693, file: !1430, line: 485, column: 9)
!3693 = distinct !DILexicalBlock(scope: !3687, file: !1430, line: 480, column: 3)
!3694 = !{!3557, !3393, i64 24}
!3695 = !DILocation(line: 485, column: 37, scope: !3692)
!3696 = !DILocation(line: 485, column: 9, scope: !3693)
!3697 = !DILocation(line: 488, column: 7, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3692, file: !1430, line: 486, column: 5)
!3699 = !DILocation(line: 491, column: 19, scope: !3698)
!3700 = !DILocation(line: 494, column: 7, scope: !3698)
!3701 = !DILocation(line: 494, column: 14, scope: !3698)
!3702 = !DILocation(line: 494, column: 50, scope: !3698)
!3703 = !DILocation(line: 496, column: 14, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3705, file: !1430, line: 496, column: 13)
!3705 = distinct !DILexicalBlock(scope: !3698, file: !1430, line: 495, column: 7)
!3706 = !DILocation(line: 496, column: 28, scope: !3704)
!3707 = !DILocation(line: 496, column: 41, scope: !3704)
!3708 = !DILocation(line: 496, column: 13, scope: !3705)
!3709 = distinct !{!3709, !3700, !3710, !2571, !2572}
!3710 = !DILocation(line: 500, column: 7, scope: !3698)
!3711 = !DILocation(line: 503, column: 7, scope: !3698)
!3712 = !DILocation(line: 504, column: 5, scope: !3698)
!3713 = !DILocation(line: 508, column: 7, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3692, file: !1430, line: 506, column: 5)
!3715 = !DILocation(line: 511, column: 19, scope: !3714)
!3716 = !DILocation(line: 514, column: 7, scope: !3714)
!3717 = !DILocation(line: 514, column: 14, scope: !3714)
!3718 = !DILocation(line: 514, column: 50, scope: !3714)
!3719 = !DILocation(line: 516, column: 14, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !3721, file: !1430, line: 516, column: 13)
!3721 = distinct !DILexicalBlock(scope: !3714, file: !1430, line: 515, column: 7)
!3722 = !DILocation(line: 516, column: 28, scope: !3720)
!3723 = !DILocation(line: 516, column: 41, scope: !3720)
!3724 = !DILocation(line: 516, column: 13, scope: !3721)
!3725 = distinct !{!3725, !3716, !3726, !2571, !2572}
!3726 = !DILocation(line: 520, column: 7, scope: !3714)
!3727 = !DILocation(line: 524, column: 28, scope: !3544)
!3728 = !DILocation(line: 524, column: 44, scope: !3544)
!3729 = !DILocation(line: 524, column: 70, scope: !3544)
!3730 = !DILocation(line: 524, column: 7, scope: !3517)
!3731 = !DILocation(line: 0, scope: !3543)
!3732 = !DILocation(line: 533, column: 9, scope: !3549)
!3733 = !{!3392, !3393, i64 28}
!3734 = !DILocation(line: 533, column: 9, scope: !3543)
!3735 = !DILocation(line: 535, column: 7, scope: !3547)
!3736 = !DILocation(line: 535, column: 7, scope: !3548)
!3737 = !DILocation(line: 537, column: 5, scope: !3548)
!3738 = !DILocation(line: 539, column: 9, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3543, file: !1430, line: 539, column: 9)
!3740 = !{!3741, !3393, i64 0}
!3741 = !{!"", !3393, i64 0, !3393, i64 4}
!3742 = !DILocation(line: 539, column: 9, scope: !3543)
!3743 = !DILocation(line: 542, column: 7, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3739, file: !1430, line: 540, column: 5)
!3745 = !DILocation(line: 545, column: 19, scope: !3744)
!3746 = !DILocation(line: 547, column: 7, scope: !3744)
!3747 = !DILocation(line: 547, column: 14, scope: !3744)
!3748 = !DILocation(line: 549, column: 14, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3750, file: !1430, line: 549, column: 13)
!3750 = distinct !DILexicalBlock(scope: !3744, file: !1430, line: 548, column: 7)
!3751 = !DILocation(line: 549, column: 28, scope: !3749)
!3752 = !DILocation(line: 549, column: 41, scope: !3749)
!3753 = !DILocation(line: 549, column: 13, scope: !3750)
!3754 = distinct !{!3754, !3746, !3755, !2571, !2572}
!3755 = !DILocation(line: 553, column: 7, scope: !3744)
!3756 = !DILocation(line: 557, column: 5, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3758, file: !1430, line: 557, column: 5)
!3758 = distinct !DILexicalBlock(scope: !3543, file: !1430, line: 557, column: 5)
!3759 = !{!3557, !3393, i64 12}
!3760 = !DILocation(line: 557, column: 5, scope: !3758)
!3761 = !DILocation(line: 557, column: 5, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3757, file: !1430, line: 557, column: 5)
!3763 = !{!3392, !3393, i64 32}
!3764 = !DILocation(line: 557, column: 5, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3766, file: !1430, line: 557, column: 5)
!3766 = distinct !DILexicalBlock(scope: !3757, file: !1430, line: 557, column: 5)
!3767 = !DILocation(line: 557, column: 5, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3769, file: !1430, line: 557, column: 5)
!3769 = distinct !DILexicalBlock(scope: !3766, file: !1430, line: 557, column: 5)
!3770 = !DILocation(line: 557, column: 5, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3769, file: !1430, line: 557, column: 5)
!3772 = !DILocation(line: 0, scope: !3757)
!3773 = !DILocation(line: 559, column: 37, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3543, file: !1430, line: 559, column: 9)
!3775 = !DILocation(line: 0, scope: !3774)
!3776 = !DILocation(line: 559, column: 9, scope: !3543)
!3777 = !DILocation(line: 565, column: 14, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3774, file: !1430, line: 560, column: 5)
!3779 = !DILocation(line: 565, column: 50, scope: !3778)
!3780 = !DILocation(line: 565, column: 7, scope: !3778)
!3781 = !DILocation(line: 567, column: 14, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3783, file: !1430, line: 567, column: 13)
!3783 = distinct !DILexicalBlock(scope: !3778, file: !1430, line: 566, column: 7)
!3784 = !DILocation(line: 567, column: 28, scope: !3782)
!3785 = !DILocation(line: 567, column: 41, scope: !3782)
!3786 = !DILocation(line: 567, column: 13, scope: !3783)
!3787 = distinct !{!3787, !3780, !3788, !2571, !2572}
!3788 = !DILocation(line: 571, column: 7, scope: !3778)
!3789 = !DILocation(line: 579, column: 14, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3774, file: !1430, line: 574, column: 5)
!3791 = !DILocation(line: 579, column: 50, scope: !3790)
!3792 = !DILocation(line: 579, column: 7, scope: !3790)
!3793 = !DILocation(line: 581, column: 14, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3795, file: !1430, line: 581, column: 13)
!3795 = distinct !DILexicalBlock(scope: !3790, file: !1430, line: 580, column: 7)
!3796 = !DILocation(line: 581, column: 28, scope: !3794)
!3797 = !DILocation(line: 581, column: 41, scope: !3794)
!3798 = !DILocation(line: 581, column: 13, scope: !3795)
!3799 = distinct !{!3799, !3792, !3800, !2571, !2572}
!3800 = !DILocation(line: 585, column: 7, scope: !3790)
!3801 = !DILocation(line: 589, column: 9, scope: !3543)
!3802 = !DILocation(line: 591, column: 7, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3804, file: !1430, line: 590, column: 5)
!3804 = distinct !DILexicalBlock(scope: !3543, file: !1430, line: 589, column: 9)
!3805 = !DILocation(line: 592, column: 5, scope: !3803)
!3806 = !DILocation(line: 688, column: 31, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3517, file: !1430, line: 688, column: 7)
!3808 = !{!3557, !3393, i64 28}
!3809 = !DILocation(line: 688, column: 41, scope: !3807)
!3810 = !DILocation(line: 688, column: 7, scope: !3517)
!3811 = !DILocation(line: 691, column: 9, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3813, file: !1430, line: 691, column: 9)
!3813 = distinct !DILexicalBlock(scope: !3807, file: !1430, line: 689, column: 3)
!3814 = !DILocation(line: 691, column: 39, scope: !3812)
!3815 = !DILocation(line: 691, column: 9, scope: !3813)
!3816 = !DILocation(line: 693, column: 45, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3818, file: !1430, line: 693, column: 11)
!3818 = distinct !DILexicalBlock(scope: !3812, file: !1430, line: 692, column: 5)
!3819 = !DILocation(line: 0, scope: !3817)
!3820 = !DILocation(line: 693, column: 11, scope: !3818)
!3821 = !DILocation(line: 706, column: 16, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3817, file: !1430, line: 694, column: 7)
!3823 = !DILocation(line: 706, column: 53, scope: !3822)
!3824 = !DILocation(line: 706, column: 9, scope: !3822)
!3825 = !DILocation(line: 708, column: 16, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3827, file: !1430, line: 708, column: 15)
!3827 = distinct !DILexicalBlock(scope: !3822, file: !1430, line: 707, column: 9)
!3828 = !DILocation(line: 708, column: 30, scope: !3826)
!3829 = !DILocation(line: 708, column: 43, scope: !3826)
!3830 = !DILocation(line: 708, column: 15, scope: !3827)
!3831 = distinct !{!3831, !3824, !3832, !2571, !2572}
!3832 = !DILocation(line: 712, column: 9, scope: !3822)
!3833 = !DILocation(line: 716, column: 36, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3822, file: !1430, line: 716, column: 13)
!3835 = !{!3557, !3393, i64 32}
!3836 = !DILocation(line: 716, column: 46, scope: !3834)
!3837 = !DILocation(line: 716, column: 13, scope: !3822)
!3838 = !DILocation(line: 728, column: 11, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3834, file: !1430, line: 717, column: 9)
!3840 = !{!3557, !3393, i64 8}
!3841 = !DILocation(line: 729, column: 9, scope: !3839)
!3842 = !DILocation(line: 732, column: 9, scope: !3822)
!3843 = !{!3557, !3393, i64 36}
!3844 = !DILocation(line: 735, column: 9, scope: !3822)
!3845 = !DILocation(line: 738, column: 21, scope: !3822)
!3846 = !DILocation(line: 741, column: 9, scope: !3822)
!3847 = !DILocation(line: 741, column: 16, scope: !3822)
!3848 = !DILocation(line: 741, column: 53, scope: !3822)
!3849 = !DILocation(line: 743, column: 16, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3851, file: !1430, line: 743, column: 15)
!3851 = distinct !DILexicalBlock(scope: !3822, file: !1430, line: 742, column: 9)
!3852 = !DILocation(line: 743, column: 30, scope: !3850)
!3853 = !DILocation(line: 743, column: 43, scope: !3850)
!3854 = !DILocation(line: 743, column: 15, scope: !3851)
!3855 = distinct !{!3855, !3846, !3856, !2571, !2572}
!3856 = !DILocation(line: 747, column: 9, scope: !3822)
!3857 = !DILocation(line: 758, column: 16, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3817, file: !1430, line: 750, column: 7)
!3859 = !DILocation(line: 758, column: 53, scope: !3858)
!3860 = !DILocation(line: 758, column: 9, scope: !3858)
!3861 = !DILocation(line: 760, column: 16, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3863, file: !1430, line: 760, column: 15)
!3863 = distinct !DILexicalBlock(scope: !3858, file: !1430, line: 759, column: 9)
!3864 = !DILocation(line: 760, column: 30, scope: !3862)
!3865 = !DILocation(line: 760, column: 43, scope: !3862)
!3866 = !DILocation(line: 760, column: 15, scope: !3863)
!3867 = distinct !{!3867, !3860, !3868, !2571, !2572}
!3868 = !DILocation(line: 764, column: 9, scope: !3858)
!3869 = !DILocation(line: 770, column: 45, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3871, file: !1430, line: 770, column: 11)
!3871 = distinct !DILexicalBlock(scope: !3812, file: !1430, line: 768, column: 5)
!3872 = !DILocation(line: 770, column: 11, scope: !3871)
!3873 = !DILocation(line: 777, column: 27, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3870, file: !1430, line: 775, column: 7)
!3875 = !DILocation(line: 778, column: 14, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3874, file: !1430, line: 778, column: 13)
!3877 = !DILocation(line: 778, column: 78, scope: !3876)
!3878 = !DILocation(line: 778, column: 52, scope: !3876)
!3879 = !DILocation(line: 778, column: 89, scope: !3876)
!3880 = !DILocation(line: 779, column: 14, scope: !3876)
!3881 = !DILocation(line: 779, column: 79, scope: !3876)
!3882 = !DILocation(line: 779, column: 53, scope: !3876)
!3883 = !DILocation(line: 778, column: 13, scope: !3874)
!3884 = !DILocation(line: 787, column: 3, scope: !3517)
!3885 = !DILocation(line: 788, column: 1, scope: !3517)
!3886 = distinct !DISubprogram(name: "RCC_Delay", scope: !1430, file: !1430, line: 1365, type: !3887, scopeLine: 1366, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1429, retainedNodes: !3889)
!3887 = !DISubroutineType(types: !3888)
!3888 = !{null, !103}
!3889 = !{!3890, !3891}
!3890 = !DILocalVariable(name: "mdelay", arg: 1, scope: !3886, file: !1430, line: 1365, type: !103)
!3891 = !DILocalVariable(name: "Delay", scope: !3886, file: !1430, line: 1367, type: !102)
!3892 = !DILocation(line: 0, scope: !3886)
!3893 = !DILocation(line: 1367, column: 3, scope: !3886)
!3894 = !DILocation(line: 1367, column: 17, scope: !3886)
!3895 = !DILocation(line: 1367, column: 35, scope: !3886)
!3896 = !DILocation(line: 1367, column: 56, scope: !3886)
!3897 = !DILocation(line: 1368, column: 3, scope: !3886)
!3898 = !DILocation(line: 1370, column: 5, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3886, file: !1430, line: 1369, column: 3)
!3900 = !{i64 2149488927}
!3901 = !DILocation(line: 1372, column: 16, scope: !3886)
!3902 = !DILocation(line: 1371, column: 3, scope: !3899)
!3903 = distinct !{!3903, !3897, !3904, !2571, !2572}
!3904 = !DILocation(line: 1372, column: 18, scope: !3886)
!3905 = !DILocation(line: 1373, column: 1, scope: !3886)
!3906 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !1430, file: !1430, line: 813, type: !3907, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1429, retainedNodes: !3918)
!3907 = !DISubroutineType(types: !3908)
!3908 = !{!3447, !3909, !103}
!3909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3910, size: 32)
!3910 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !2257, line: 80, baseType: !3911)
!3911 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2257, line: 64, size: 160, elements: !3912)
!3912 = !{!3913, !3914, !3915, !3916, !3917}
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !3911, file: !2257, line: 66, baseType: !103, size: 32)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !3911, file: !2257, line: 69, baseType: !103, size: 32, offset: 32)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !3911, file: !2257, line: 72, baseType: !103, size: 32, offset: 64)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !3911, file: !2257, line: 75, baseType: !103, size: 32, offset: 96)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !3911, file: !2257, line: 78, baseType: !103, size: 32, offset: 128)
!3918 = !{!3919, !3920, !3921}
!3919 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !3906, file: !1430, line: 813, type: !3909)
!3920 = !DILocalVariable(name: "FLatency", arg: 2, scope: !3906, file: !1430, line: 813, type: !103)
!3921 = !DILocalVariable(name: "tickstart", scope: !3906, file: !1430, line: 815, type: !103)
!3922 = !DILocation(line: 0, scope: !3906)
!3923 = !DILocation(line: 818, column: 25, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3906, file: !1430, line: 818, column: 7)
!3925 = !DILocation(line: 818, column: 7, scope: !3906)
!3926 = !DILocation(line: 833, column: 18, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3906, file: !1430, line: 833, column: 7)
!3928 = !{!3929, !3393, i64 0}
!3929 = !{!"", !3393, i64 0, !3393, i64 4, !3393, i64 8, !3393, i64 12, !3393, i64 16, !3393, i64 20, !3393, i64 24, !3393, i64 28, !3393, i64 32}
!3930 = !DILocation(line: 833, column: 16, scope: !3927)
!3931 = !DILocation(line: 833, column: 7, scope: !3906)
!3932 = !DILocation(line: 836, column: 5, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3927, file: !1430, line: 834, column: 3)
!3934 = !DILocation(line: 840, column: 9, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3933, file: !1430, line: 840, column: 9)
!3936 = !DILocation(line: 840, column: 35, scope: !3935)
!3937 = !DILocation(line: 840, column: 9, scope: !3933)
!3938 = !DILocation(line: 848, column: 26, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3906, file: !1430, line: 848, column: 5)
!3940 = !{!3941, !3393, i64 0}
!3941 = !{!"", !3393, i64 0, !3393, i64 4, !3393, i64 8, !3393, i64 12, !3393, i64 16}
!3942 = !DILocation(line: 848, column: 37, scope: !3939)
!3943 = !DILocation(line: 848, column: 59, scope: !3939)
!3944 = !DILocation(line: 848, column: 5, scope: !3906)
!3945 = !DILocation(line: 852, column: 41, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3947, file: !1430, line: 852, column: 9)
!3947 = distinct !DILexicalBlock(scope: !3939, file: !1430, line: 849, column: 3)
!3948 = !DILocation(line: 852, column: 64, scope: !3946)
!3949 = !DILocation(line: 852, column: 9, scope: !3947)
!3950 = !DILocation(line: 854, column: 7, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3946, file: !1430, line: 853, column: 5)
!3952 = !DILocation(line: 855, column: 5, scope: !3951)
!3953 = !DILocation(line: 857, column: 41, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3947, file: !1430, line: 857, column: 9)
!3955 = !DILocation(line: 857, column: 64, scope: !3954)
!3956 = !DILocation(line: 857, column: 9, scope: !3947)
!3957 = !DILocation(line: 859, column: 7, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3954, file: !1430, line: 858, column: 5)
!3959 = !DILocation(line: 860, column: 5, scope: !3958)
!3960 = !DILocation(line: 864, column: 5, scope: !3947)
!3961 = !{!3941, !3393, i64 8}
!3962 = !DILocation(line: 865, column: 3, scope: !3947)
!3963 = !DILocation(line: 868, column: 39, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3906, file: !1430, line: 868, column: 7)
!3965 = !DILocation(line: 868, column: 63, scope: !3964)
!3966 = !DILocation(line: 868, column: 7, scope: !3906)
!3967 = !DILocation(line: 873, column: 28, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3969, file: !1430, line: 873, column: 9)
!3969 = distinct !DILexicalBlock(scope: !3964, file: !1430, line: 869, column: 3)
!3970 = !{!3941, !3393, i64 4}
!3971 = !DILocation(line: 873, column: 9, scope: !3969)
!3972 = !DILocation(line: 876, column: 11, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3974, file: !1430, line: 876, column: 11)
!3974 = distinct !DILexicalBlock(scope: !3968, file: !1430, line: 874, column: 5)
!3975 = !DILocation(line: 876, column: 47, scope: !3973)
!3976 = !DILocation(line: 876, column: 11, scope: !3974)
!3977 = !DILocation(line: 885, column: 11, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3979, file: !1430, line: 885, column: 11)
!3979 = distinct !DILexicalBlock(scope: !3980, file: !1430, line: 883, column: 5)
!3980 = distinct !DILexicalBlock(scope: !3968, file: !1430, line: 882, column: 14)
!3981 = !DILocation(line: 885, column: 47, scope: !3978)
!3982 = !DILocation(line: 885, column: 11, scope: !3979)
!3983 = !DILocation(line: 894, column: 11, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3985, file: !1430, line: 894, column: 11)
!3985 = distinct !DILexicalBlock(scope: !3980, file: !1430, line: 892, column: 5)
!3986 = !DILocation(line: 894, column: 47, scope: !3984)
!3987 = !DILocation(line: 894, column: 11, scope: !3985)
!3988 = !DILocation(line: 899, column: 5, scope: !3969)
!3989 = !DILocation(line: 902, column: 17, scope: !3969)
!3990 = !DILocation(line: 904, column: 5, scope: !3969)
!3991 = !DILocation(line: 904, column: 12, scope: !3969)
!3992 = !DILocation(line: 904, column: 65, scope: !3969)
!3993 = !DILocation(line: 904, column: 78, scope: !3969)
!3994 = !DILocation(line: 904, column: 42, scope: !3969)
!3995 = !DILocation(line: 906, column: 12, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3997, file: !1430, line: 906, column: 11)
!3997 = distinct !DILexicalBlock(scope: !3969, file: !1430, line: 905, column: 5)
!3998 = !DILocation(line: 906, column: 26, scope: !3996)
!3999 = !DILocation(line: 906, column: 39, scope: !3996)
!4000 = !DILocation(line: 906, column: 11, scope: !3997)
!4001 = distinct !{!4001, !3990, !4002, !2571, !2572}
!4002 = !DILocation(line: 910, column: 5, scope: !3969)
!4003 = !DILocation(line: 915, column: 18, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3906, file: !1430, line: 915, column: 7)
!4005 = !DILocation(line: 915, column: 16, scope: !4004)
!4006 = !DILocation(line: 915, column: 7, scope: !3906)
!4007 = !DILocation(line: 918, column: 5, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !4004, file: !1430, line: 916, column: 3)
!4009 = !DILocation(line: 922, column: 9, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !4008, file: !1430, line: 922, column: 9)
!4011 = !DILocation(line: 922, column: 35, scope: !4010)
!4012 = !DILocation(line: 922, column: 9, scope: !4008)
!4013 = !DILocation(line: 930, column: 26, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !3906, file: !1430, line: 930, column: 5)
!4015 = !DILocation(line: 930, column: 37, scope: !4014)
!4016 = !DILocation(line: 930, column: 60, scope: !4014)
!4017 = !DILocation(line: 930, column: 5, scope: !3906)
!4018 = !DILocation(line: 933, column: 5, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !4014, file: !1430, line: 931, column: 3)
!4020 = !{!3941, !3393, i64 12}
!4021 = !DILocation(line: 934, column: 3, scope: !4019)
!4022 = !DILocation(line: 937, column: 39, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !3906, file: !1430, line: 937, column: 7)
!4024 = !DILocation(line: 937, column: 62, scope: !4023)
!4025 = !DILocation(line: 937, column: 7, scope: !3906)
!4026 = !DILocation(line: 940, column: 5, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4023, file: !1430, line: 938, column: 3)
!4028 = !{!3941, !3393, i64 16}
!4029 = !DILocation(line: 941, column: 3, scope: !4027)
!4030 = !DILocation(line: 944, column: 21, scope: !3906)
!4031 = !DILocation(line: 944, column: 70, scope: !3906)
!4032 = !DILocation(line: 944, column: 92, scope: !3906)
!4033 = !DILocation(line: 944, column: 50, scope: !3906)
!4034 = !DILocation(line: 944, column: 47, scope: !3906)
!4035 = !DILocation(line: 944, column: 19, scope: !3906)
!4036 = !DILocation(line: 947, column: 16, scope: !3906)
!4037 = !DILocation(line: 947, column: 3, scope: !3906)
!4038 = !DILocation(line: 949, column: 3, scope: !3906)
!4039 = !DILocation(line: 950, column: 1, scope: !3906)
!4040 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !1430, file: !1430, line: 1082, type: !1896, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1429, retainedNodes: !4041)
!4041 = !{!4042, !4043, !4045, !4046, !4047, !4048, !4049}
!4042 = !DILocalVariable(name: "aPLLMULFactorTable", scope: !4040, file: !1430, line: 1088, type: !617)
!4043 = !DILocalVariable(name: "aPredivFactorTable", scope: !4040, file: !1430, line: 1092, type: !4044)
!4044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 16, elements: !594)
!4045 = !DILocalVariable(name: "tmpreg", scope: !4040, file: !1430, line: 1096, type: !103)
!4046 = !DILocalVariable(name: "prediv", scope: !4040, file: !1430, line: 1096, type: !103)
!4047 = !DILocalVariable(name: "pllclk", scope: !4040, file: !1430, line: 1096, type: !103)
!4048 = !DILocalVariable(name: "pllmul", scope: !4040, file: !1430, line: 1096, type: !103)
!4049 = !DILocalVariable(name: "sysclockfreq", scope: !4040, file: !1430, line: 1097, type: !103)
!4050 = !DILocation(line: 1088, column: 17, scope: !4040)
!4051 = !DILocation(line: 1092, column: 17, scope: !4040)
!4052 = !DILocation(line: 0, scope: !4040)
!4053 = !DILocation(line: 1102, column: 17, scope: !4040)
!4054 = !DILocation(line: 1105, column: 18, scope: !4040)
!4055 = !DILocation(line: 1105, column: 3, scope: !4040)
!4056 = !DILocation(line: 1114, column: 73, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4058, file: !1430, line: 1113, column: 5)
!4058 = distinct !DILexicalBlock(scope: !4040, file: !1430, line: 1106, column: 3)
!4059 = !DILocation(line: 1114, column: 16, scope: !4057)
!4060 = !DILocation(line: 1115, column: 19, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4057, file: !1430, line: 1115, column: 11)
!4062 = !DILocation(line: 1115, column: 38, scope: !4061)
!4063 = !DILocation(line: 1115, column: 11, scope: !4057)
!4064 = !DILocation(line: 1120, column: 53, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4061, file: !1430, line: 1116, column: 7)
!4066 = !DILocation(line: 1120, column: 79, scope: !4065)
!4067 = !DILocation(line: 1120, column: 18, scope: !4065)
!4068 = !DILocation(line: 1146, column: 41, scope: !4065)
!4069 = !DILocation(line: 1146, column: 51, scope: !4065)
!4070 = !DILocation(line: 1148, column: 7, scope: !4065)
!4071 = !DILocation(line: 1152, column: 46, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4061, file: !1430, line: 1150, column: 7)
!4073 = !DILocation(line: 0, scope: !4058)
!4074 = !DILocation(line: 1164, column: 3, scope: !4040)
!4075 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !1430, file: !1430, line: 1002, type: !4076, scopeLine: 1003, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1429, retainedNodes: !4078)
!4076 = !DISubroutineType(types: !4077)
!4077 = !{null, !103, !103, !103}
!4078 = !{!4079, !4080, !4081, !4082, !4090}
!4079 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !4075, file: !1430, line: 1002, type: !103)
!4080 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !4075, file: !1430, line: 1002, type: !103)
!4081 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !4075, file: !1430, line: 1002, type: !103)
!4082 = !DILocalVariable(name: "gpio", scope: !4075, file: !1430, line: 1004, type: !4083)
!4083 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !1541, line: 60, baseType: !4084)
!4084 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1541, line: 47, size: 128, elements: !4085)
!4085 = !{!4086, !4087, !4088, !4089}
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !4084, file: !1541, line: 49, baseType: !103, size: 32)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !4084, file: !1541, line: 52, baseType: !103, size: 32, offset: 32)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !4084, file: !1541, line: 55, baseType: !103, size: 32, offset: 64)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !4084, file: !1541, line: 58, baseType: !103, size: 32, offset: 96)
!4090 = !DILocalVariable(name: "tmpreg", scope: !4091, file: !1430, line: 1022, type: !102)
!4091 = distinct !DILexicalBlock(scope: !4075, file: !1430, line: 1022, column: 3)
!4092 = !DILocation(line: 0, scope: !4075)
!4093 = !DILocation(line: 1004, column: 3, scope: !4075)
!4094 = !DILocation(line: 1004, column: 20, scope: !4075)
!4095 = !DILocation(line: 1016, column: 8, scope: !4075)
!4096 = !DILocation(line: 1016, column: 18, scope: !4075)
!4097 = !{!4098, !3393, i64 4}
!4098 = !{!"", !3393, i64 0, !3393, i64 4, !3393, i64 8, !3393, i64 12}
!4099 = !DILocation(line: 1017, column: 8, scope: !4075)
!4100 = !DILocation(line: 1017, column: 18, scope: !4075)
!4101 = !{!4098, !3393, i64 12}
!4102 = !DILocation(line: 1018, column: 8, scope: !4075)
!4103 = !DILocation(line: 1018, column: 18, scope: !4075)
!4104 = !{!4098, !3393, i64 8}
!4105 = !DILocation(line: 1019, column: 8, scope: !4075)
!4106 = !DILocation(line: 1019, column: 18, scope: !4075)
!4107 = !{!4098, !3393, i64 0}
!4108 = !DILocation(line: 1022, column: 3, scope: !4091)
!4109 = !{!3392, !3393, i64 24}
!4110 = !DILocation(line: 1022, column: 3, scope: !4075)
!4111 = !DILocation(line: 1024, column: 3, scope: !4075)
!4112 = !DILocation(line: 1027, column: 3, scope: !4075)
!4113 = !DILocation(line: 1028, column: 1, scope: !4075)
!4114 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !1430, file: !1430, line: 1039, type: !4, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1429, retainedNodes: !173)
!4115 = !DILocation(line: 1041, column: 38, scope: !4114)
!4116 = !DILocation(line: 1042, column: 1, scope: !4114)
!4117 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !1430, file: !1430, line: 1048, type: !4, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1429, retainedNodes: !173)
!4118 = !DILocation(line: 1050, column: 38, scope: !4117)
!4119 = !DILocation(line: 1051, column: 1, scope: !4117)
!4120 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !1430, file: !1430, line: 1176, type: !1896, scopeLine: 1177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1429, retainedNodes: !173)
!4121 = !DILocation(line: 1178, column: 10, scope: !4120)
!4122 = !DILocation(line: 1178, column: 3, scope: !4120)
!4123 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !1430, file: !1430, line: 1187, type: !1896, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1429, retainedNodes: !173)
!4124 = !DILocation(line: 1190, column: 11, scope: !4123)
!4125 = !DILocation(line: 1190, column: 56, scope: !4123)
!4126 = !DILocation(line: 1190, column: 79, scope: !4123)
!4127 = !DILocation(line: 1190, column: 36, scope: !4123)
!4128 = !DILocation(line: 1190, column: 33, scope: !4123)
!4129 = !DILocation(line: 1190, column: 3, scope: !4123)
!4130 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !1430, file: !1430, line: 1199, type: !1896, scopeLine: 1200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1429, retainedNodes: !173)
!4131 = !DILocation(line: 1202, column: 11, scope: !4130)
!4132 = !DILocation(line: 1202, column: 56, scope: !4130)
!4133 = !DILocation(line: 1202, column: 79, scope: !4130)
!4134 = !DILocation(line: 1202, column: 36, scope: !4130)
!4135 = !DILocation(line: 1202, column: 33, scope: !4130)
!4136 = !DILocation(line: 1202, column: 3, scope: !4130)
!4137 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !1430, file: !1430, line: 1212, type: !4138, scopeLine: 1213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1429, retainedNodes: !4140)
!4138 = !DISubroutineType(types: !4139)
!4139 = !{null, !3520}
!4140 = !{!4141}
!4141 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !4137, file: !1430, line: 1212, type: !3520)
!4142 = !DILocation(line: 0, scope: !4137)
!4143 = !DILocation(line: 1218, column: 22, scope: !4137)
!4144 = !DILocation(line: 1218, column: 37, scope: !4137)
!4145 = !DILocation(line: 1227, column: 13, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4137, file: !1430, line: 1227, column: 7)
!4147 = !DILocation(line: 1227, column: 16, scope: !4146)
!4148 = !DILocation(line: 1227, column: 33, scope: !4146)
!4149 = !DILocation(line: 1227, column: 7, scope: !4137)
!4150 = !DILocation(line: 1229, column: 24, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4146, file: !1430, line: 1228, column: 3)
!4152 = !DILocation(line: 1229, column: 33, scope: !4151)
!4153 = !DILocation(line: 1230, column: 3, scope: !4151)
!4154 = !DILocation(line: 1231, column: 18, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4146, file: !1430, line: 1231, column: 12)
!4156 = !DILocation(line: 1231, column: 21, scope: !4155)
!4157 = !DILocation(line: 1231, column: 37, scope: !4155)
!4158 = !DILocation(line: 0, scope: !4155)
!4159 = !DILocation(line: 1231, column: 12, scope: !4146)
!4160 = !DILocation(line: 1233, column: 33, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4155, file: !1430, line: 1232, column: 3)
!4162 = !DILocation(line: 1234, column: 3, scope: !4161)
!4163 = !DILocation(line: 1237, column: 33, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4155, file: !1430, line: 1236, column: 3)
!4165 = !DILocation(line: 1239, column: 39, scope: !4137)
!4166 = !DILocation(line: 1239, column: 22, scope: !4137)
!4167 = !DILocation(line: 1239, column: 37, scope: !4137)
!4168 = !DILocation(line: 1242, column: 13, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4137, file: !1430, line: 1242, column: 7)
!4170 = !DILocation(line: 1242, column: 16, scope: !4169)
!4171 = !DILocation(line: 0, scope: !4169)
!4172 = !DILocation(line: 1251, column: 61, scope: !4137)
!4173 = !DILocation(line: 1251, column: 82, scope: !4137)
!4174 = !DILocation(line: 1251, column: 22, scope: !4137)
!4175 = !DILocation(line: 1251, column: 42, scope: !4137)
!4176 = !DILocation(line: 1254, column: 13, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4137, file: !1430, line: 1254, column: 7)
!4178 = !DILocation(line: 1254, column: 18, scope: !4177)
!4179 = !DILocation(line: 1254, column: 37, scope: !4177)
!4180 = !DILocation(line: 1254, column: 7, scope: !4137)
!4181 = !DILocation(line: 1256, column: 24, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4177, file: !1430, line: 1255, column: 3)
!4183 = !DILocation(line: 1256, column: 33, scope: !4182)
!4184 = !DILocation(line: 1257, column: 3, scope: !4182)
!4185 = !DILocation(line: 1258, column: 18, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4177, file: !1430, line: 1258, column: 12)
!4187 = !DILocation(line: 1258, column: 23, scope: !4186)
!4188 = !DILocation(line: 1258, column: 41, scope: !4186)
!4189 = !DILocation(line: 0, scope: !4186)
!4190 = !DILocation(line: 1258, column: 12, scope: !4177)
!4191 = !DILocation(line: 1260, column: 33, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4186, file: !1430, line: 1259, column: 3)
!4193 = !DILocation(line: 1261, column: 3, scope: !4192)
!4194 = !DILocation(line: 1264, column: 33, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4186, file: !1430, line: 1263, column: 3)
!4196 = !DILocation(line: 1268, column: 13, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4137, file: !1430, line: 1268, column: 7)
!4198 = !DILocation(line: 1268, column: 17, scope: !4197)
!4199 = !DILocation(line: 0, scope: !4197)
!4200 = !DILocation(line: 1279, column: 13, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4137, file: !1430, line: 1279, column: 7)
!4202 = !DILocation(line: 1279, column: 16, scope: !4201)
!4203 = !DILocation(line: 1279, column: 32, scope: !4201)
!4204 = !DILocation(line: 1279, column: 7, scope: !4137)
!4205 = !DILocation(line: 0, scope: !4201)
!4206 = !DILocation(line: 1287, column: 54, scope: !4137)
!4207 = !DILocation(line: 1287, column: 59, scope: !4137)
!4208 = !DILocation(line: 1287, column: 26, scope: !4137)
!4209 = !DILocation(line: 1287, column: 36, scope: !4137)
!4210 = !DILocation(line: 1288, column: 51, scope: !4137)
!4211 = !DILocation(line: 1288, column: 56, scope: !4137)
!4212 = !DILocation(line: 1288, column: 26, scope: !4137)
!4213 = !DILocation(line: 1288, column: 33, scope: !4137)
!4214 = !DILocation(line: 1302, column: 1, scope: !4137)
!4215 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !1430, file: !1430, line: 1312, type: !4216, scopeLine: 1313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1429, retainedNodes: !4218)
!4216 = !DISubroutineType(types: !4217)
!4217 = !{null, !3909, !734}
!4218 = !{!4219, !4220}
!4219 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !4215, file: !1430, line: 1312, type: !3909)
!4220 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !4215, file: !1430, line: 1312, type: !734)
!4221 = !DILocation(line: 0, scope: !4215)
!4222 = !DILocation(line: 1319, column: 22, scope: !4215)
!4223 = !DILocation(line: 1319, column: 32, scope: !4215)
!4224 = !DILocation(line: 1322, column: 53, scope: !4215)
!4225 = !DILocation(line: 1322, column: 58, scope: !4215)
!4226 = !DILocation(line: 1322, column: 22, scope: !4215)
!4227 = !DILocation(line: 1322, column: 35, scope: !4215)
!4228 = !DILocation(line: 1325, column: 54, scope: !4215)
!4229 = !DILocation(line: 1325, column: 59, scope: !4215)
!4230 = !DILocation(line: 1325, column: 22, scope: !4215)
!4231 = !DILocation(line: 1325, column: 36, scope: !4215)
!4232 = !DILocation(line: 1328, column: 55, scope: !4215)
!4233 = !DILocation(line: 1328, column: 60, scope: !4215)
!4234 = !DILocation(line: 1328, column: 22, scope: !4215)
!4235 = !DILocation(line: 1328, column: 37, scope: !4215)
!4236 = !DILocation(line: 1331, column: 56, scope: !4215)
!4237 = !DILocation(line: 1331, column: 79, scope: !4215)
!4238 = !DILocation(line: 1331, column: 22, scope: !4215)
!4239 = !DILocation(line: 1331, column: 37, scope: !4215)
!4240 = !DILocation(line: 1335, column: 34, scope: !4215)
!4241 = !DILocation(line: 1335, column: 38, scope: !4215)
!4242 = !DILocation(line: 1335, column: 14, scope: !4215)
!4243 = !DILocation(line: 1340, column: 1, scope: !4215)
!4244 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !1430, file: !1430, line: 1347, type: !4, scopeLine: 1348, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1429, retainedNodes: !173)
!4245 = !DILocation(line: 1350, column: 7, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4244, file: !1430, line: 1350, column: 7)
!4247 = !DILocation(line: 1350, column: 7, scope: !4244)
!4248 = !DILocation(line: 1353, column: 5, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4246, file: !1430, line: 1351, column: 3)
!4250 = !DILocation(line: 1356, column: 5, scope: !4249)
!4251 = !DILocation(line: 1357, column: 3, scope: !4249)
!4252 = !DILocation(line: 1358, column: 1, scope: !4244)
!4253 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !1430, file: !1430, line: 1379, type: !4, scopeLine: 1380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1429, retainedNodes: !173)
!4254 = !DILocation(line: 1384, column: 1, scope: !4253)
!4255 = distinct !DISubprogram(name: "HAL_Init", scope: !623, file: !623, line: 142, type: !3445, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !173)
!4256 = !DILocation(line: 152, column: 3, scope: !4255)
!4257 = !DILocation(line: 157, column: 3, scope: !4255)
!4258 = !DILocation(line: 160, column: 3, scope: !4255)
!4259 = !DILocation(line: 163, column: 3, scope: !4255)
!4260 = !DILocation(line: 166, column: 3, scope: !4255)
!4261 = distinct !DISubprogram(name: "HAL_InitTick", scope: !623, file: !623, line: 234, type: !4262, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !4264)
!4262 = !DISubroutineType(types: !4263)
!4263 = !{!3447, !103}
!4264 = !{!4265}
!4265 = !DILocalVariable(name: "TickPriority", arg: 1, scope: !4261, file: !623, line: 234, type: !103)
!4266 = !DILocation(line: 0, scope: !4261)
!4267 = !DILocation(line: 237, column: 26, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4261, file: !623, line: 237, column: 7)
!4269 = !DILocation(line: 237, column: 53, scope: !4268)
!4270 = !DILocation(line: 237, column: 51, scope: !4268)
!4271 = !DILocation(line: 237, column: 42, scope: !4268)
!4272 = !DILocation(line: 237, column: 7, scope: !4268)
!4273 = !DILocation(line: 237, column: 66, scope: !4268)
!4274 = !DILocation(line: 237, column: 7, scope: !4261)
!4275 = !DILocation(line: 245, column: 5, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4277, file: !623, line: 244, column: 3)
!4277 = distinct !DILexicalBlock(scope: !4261, file: !623, line: 243, column: 7)
!4278 = !DILocation(line: 246, column: 16, scope: !4276)
!4279 = !DILocation(line: 254, column: 3, scope: !4261)
!4280 = !DILocation(line: 255, column: 1, scope: !4261)
!4281 = distinct !DISubprogram(name: "HAL_MspInit", scope: !623, file: !623, line: 200, type: !4, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !173)
!4282 = !DILocation(line: 205, column: 1, scope: !4281)
!4283 = distinct !DISubprogram(name: "HAL_DeInit", scope: !623, file: !623, line: 175, type: !3445, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !173)
!4284 = !DILocation(line: 178, column: 3, scope: !4283)
!4285 = !{!3392, !3393, i64 12}
!4286 = !DILocation(line: 179, column: 3, scope: !4283)
!4287 = !{!3392, !3393, i64 16}
!4288 = !DILocation(line: 181, column: 3, scope: !4283)
!4289 = !DILocation(line: 182, column: 3, scope: !4283)
!4290 = !DILocation(line: 190, column: 3, scope: !4283)
!4291 = !DILocation(line: 193, column: 3, scope: !4283)
!4292 = distinct !DISubprogram(name: "HAL_MspDeInit", scope: !623, file: !623, line: 211, type: !4, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !173)
!4293 = !DILocation(line: 216, column: 1, scope: !4292)
!4294 = distinct !DISubprogram(name: "HAL_IncTick", scope: !623, file: !623, line: 293, type: !4, scopeLine: 294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !173)
!4295 = !DILocation(line: 295, column: 13, scope: !4294)
!4296 = !DILocation(line: 295, column: 10, scope: !4294)
!4297 = !DILocation(line: 296, column: 1, scope: !4294)
!4298 = distinct !DISubprogram(name: "HAL_GetTick", scope: !623, file: !623, line: 304, type: !1896, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !173)
!4299 = !DILocation(line: 306, column: 10, scope: !4298)
!4300 = !DILocation(line: 306, column: 3, scope: !4298)
!4301 = distinct !DISubprogram(name: "HAL_GetTickPrio", scope: !623, file: !623, line: 313, type: !1896, scopeLine: 314, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !173)
!4302 = !DILocation(line: 315, column: 10, scope: !4301)
!4303 = !DILocation(line: 315, column: 3, scope: !4301)
!4304 = distinct !DISubprogram(name: "HAL_SetTickFreq", scope: !623, file: !623, line: 322, type: !4305, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !4307)
!4305 = !DISubroutineType(types: !4306)
!4306 = !{!3447, !738}
!4307 = !{!4308, !4309}
!4308 = !DILocalVariable(name: "Freq", arg: 1, scope: !4304, file: !623, line: 322, type: !738)
!4309 = !DILocalVariable(name: "status", scope: !4304, file: !623, line: 324, type: !3447)
!4310 = !DILocation(line: 0, scope: !4304)
!4311 = !DILocation(line: 327, column: 7, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4304, file: !623, line: 327, column: 7)
!4313 = !DILocation(line: 327, column: 18, scope: !4312)
!4314 = !DILocation(line: 327, column: 7, scope: !4304)
!4315 = !DILocation(line: 330, column: 27, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4312, file: !623, line: 328, column: 3)
!4317 = !DILocation(line: 330, column: 14, scope: !4316)
!4318 = !DILocation(line: 331, column: 16, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4316, file: !623, line: 331, column: 9)
!4320 = !DILocation(line: 331, column: 9, scope: !4316)
!4321 = !DILocation(line: 333, column: 18, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4319, file: !623, line: 332, column: 5)
!4323 = !DILocation(line: 334, column: 5, scope: !4322)
!4324 = !DILocation(line: 337, column: 3, scope: !4304)
!4325 = distinct !DISubprogram(name: "HAL_GetTickFreq", scope: !623, file: !623, line: 344, type: !4326, scopeLine: 345, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !173)
!4326 = !DISubroutineType(types: !4327)
!4327 = !{!738}
!4328 = !DILocation(line: 346, column: 10, scope: !4325)
!4329 = !DILocation(line: 346, column: 3, scope: !4325)
!4330 = distinct !DISubprogram(name: "HAL_Delay", scope: !623, file: !623, line: 360, type: !3887, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !4331)
!4331 = !{!4332, !4333, !4334}
!4332 = !DILocalVariable(name: "Delay", arg: 1, scope: !4330, file: !623, line: 360, type: !103)
!4333 = !DILocalVariable(name: "tickstart", scope: !4330, file: !623, line: 362, type: !103)
!4334 = !DILocalVariable(name: "wait", scope: !4330, file: !623, line: 363, type: !103)
!4335 = !DILocation(line: 0, scope: !4330)
!4336 = !DILocation(line: 362, column: 24, scope: !4330)
!4337 = !DILocation(line: 366, column: 12, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4330, file: !623, line: 366, column: 7)
!4339 = !DILocation(line: 366, column: 7, scope: !4330)
!4340 = !DILocation(line: 371, column: 3, scope: !4330)
!4341 = !DILocation(line: 371, column: 11, scope: !4330)
!4342 = !DILocation(line: 371, column: 25, scope: !4330)
!4343 = !DILocation(line: 371, column: 38, scope: !4330)
!4344 = distinct !{!4344, !4340, !4345, !2571, !2572}
!4345 = !DILocation(line: 373, column: 3, scope: !4330)
!4346 = !DILocation(line: 374, column: 1, scope: !4330)
!4347 = distinct !DISubprogram(name: "HAL_SuspendTick", scope: !623, file: !623, line: 386, type: !4, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !173)
!4348 = !DILocation(line: 389, column: 3, scope: !4347)
!4349 = !DILocation(line: 390, column: 1, scope: !4347)
!4350 = distinct !DISubprogram(name: "HAL_ResumeTick", scope: !623, file: !623, line: 402, type: !4, scopeLine: 403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !173)
!4351 = !DILocation(line: 405, column: 3, scope: !4350)
!4352 = !DILocation(line: 406, column: 1, scope: !4350)
!4353 = distinct !DISubprogram(name: "HAL_GetHalVersion", scope: !623, file: !623, line: 412, type: !1896, scopeLine: 413, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !173)
!4354 = !DILocation(line: 414, column: 3, scope: !4353)
!4355 = distinct !DISubprogram(name: "HAL_GetREVID", scope: !623, file: !623, line: 428, type: !1896, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !173)
!4356 = !DILocation(line: 430, column: 20, scope: !4355)
!4357 = !DILocation(line: 430, column: 28, scope: !4355)
!4358 = !DILocation(line: 430, column: 3, scope: !4355)
!4359 = distinct !DISubprogram(name: "HAL_GetDEVID", scope: !623, file: !623, line: 444, type: !1896, scopeLine: 445, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !173)
!4360 = !DILocation(line: 446, column: 20, scope: !4359)
!4361 = !DILocation(line: 446, column: 28, scope: !4359)
!4362 = !DILocation(line: 446, column: 3, scope: !4359)
!4363 = distinct !DISubprogram(name: "HAL_GetUIDw0", scope: !623, file: !623, line: 453, type: !1896, scopeLine: 454, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !173)
!4364 = !DILocation(line: 455, column: 11, scope: !4363)
!4365 = !DILocation(line: 455, column: 4, scope: !4363)
!4366 = distinct !DISubprogram(name: "HAL_GetUIDw1", scope: !623, file: !623, line: 462, type: !1896, scopeLine: 463, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !173)
!4367 = !DILocation(line: 464, column: 11, scope: !4366)
!4368 = !DILocation(line: 464, column: 4, scope: !4366)
!4369 = distinct !DISubprogram(name: "HAL_GetUIDw2", scope: !623, file: !623, line: 471, type: !1896, scopeLine: 472, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !173)
!4370 = !DILocation(line: 473, column: 11, scope: !4369)
!4371 = !DILocation(line: 473, column: 4, scope: !4369)
!4372 = distinct !DISubprogram(name: "HAL_DBGMCU_EnableDBGSleepMode", scope: !623, file: !623, line: 480, type: !4, scopeLine: 481, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !173)
!4373 = !DILocation(line: 482, column: 3, scope: !4372)
!4374 = !{!3741, !3393, i64 4}
!4375 = !DILocation(line: 483, column: 1, scope: !4372)
!4376 = distinct !DISubprogram(name: "HAL_DBGMCU_DisableDBGSleepMode", scope: !623, file: !623, line: 496, type: !4, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !173)
!4377 = !DILocation(line: 498, column: 3, scope: !4376)
!4378 = !DILocation(line: 499, column: 1, scope: !4376)
!4379 = distinct !DISubprogram(name: "HAL_DBGMCU_EnableDBGStopMode", scope: !623, file: !623, line: 526, type: !4, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !173)
!4380 = !DILocation(line: 528, column: 3, scope: !4379)
!4381 = !DILocation(line: 529, column: 1, scope: !4379)
!4382 = distinct !DISubprogram(name: "HAL_DBGMCU_DisableDBGStopMode", scope: !623, file: !623, line: 542, type: !4, scopeLine: 543, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !173)
!4383 = !DILocation(line: 544, column: 3, scope: !4382)
!4384 = !DILocation(line: 545, column: 1, scope: !4382)
!4385 = distinct !DISubprogram(name: "HAL_DBGMCU_EnableDBGStandbyMode", scope: !623, file: !623, line: 558, type: !4, scopeLine: 559, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !173)
!4386 = !DILocation(line: 560, column: 3, scope: !4385)
!4387 = !DILocation(line: 561, column: 1, scope: !4385)
!4388 = distinct !DISubprogram(name: "HAL_DBGMCU_DisableDBGStandbyMode", scope: !623, file: !623, line: 574, type: !4, scopeLine: 575, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !173)
!4389 = !DILocation(line: 576, column: 3, scope: !4388)
!4390 = !DILocation(line: 577, column: 1, scope: !4388)
!4391 = distinct !DISubprogram(name: "HAL_NVIC_SetPriorityGrouping", scope: !1484, file: !1484, line: 143, type: !3887, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !4392)
!4392 = !{!4393}
!4393 = !DILocalVariable(name: "PriorityGroup", arg: 1, scope: !4391, file: !1484, line: 143, type: !103)
!4394 = !DILocation(line: 0, scope: !4391)
!4395 = !DILocation(line: 149, column: 3, scope: !4391)
!4396 = !DILocation(line: 150, column: 1, scope: !4391)
!4397 = distinct !DISubprogram(name: "__NVIC_SetPriorityGrouping", scope: !572, file: !572, line: 1480, type: !3887, scopeLine: 1481, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !4398)
!4398 = !{!4399, !4400, !4401}
!4399 = !DILocalVariable(name: "PriorityGroup", arg: 1, scope: !4397, file: !572, line: 1480, type: !103)
!4400 = !DILocalVariable(name: "reg_value", scope: !4397, file: !572, line: 1482, type: !103)
!4401 = !DILocalVariable(name: "PriorityGroupTmp", scope: !4397, file: !572, line: 1483, type: !103)
!4402 = !DILocation(line: 0, scope: !4397)
!4403 = !DILocation(line: 1485, column: 22, scope: !4397)
!4404 = !{!3403, !3393, i64 12}
!4405 = !DILocation(line: 1486, column: 13, scope: !4397)
!4406 = !DILocation(line: 1489, column: 35, scope: !4397)
!4407 = !DILocation(line: 1488, column: 62, scope: !4397)
!4408 = !DILocation(line: 1490, column: 14, scope: !4397)
!4409 = !DILocation(line: 1491, column: 1, scope: !4397)
!4410 = distinct !DISubprogram(name: "HAL_NVIC_SetPriority", scope: !1484, file: !1484, line: 165, type: !4411, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !4414)
!4411 = !DISubroutineType(types: !4412)
!4412 = !{null, !4413, !103, !103}
!4413 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !98, line: 126, baseType: !638)
!4414 = !{!4415, !4416, !4417, !4418}
!4415 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4410, file: !1484, line: 165, type: !4413)
!4416 = !DILocalVariable(name: "PreemptPriority", arg: 2, scope: !4410, file: !1484, line: 165, type: !103)
!4417 = !DILocalVariable(name: "SubPriority", arg: 3, scope: !4410, file: !1484, line: 165, type: !103)
!4418 = !DILocalVariable(name: "prioritygroup", scope: !4410, file: !1484, line: 167, type: !103)
!4419 = !DILocation(line: 0, scope: !4410)
!4420 = !DILocation(line: 173, column: 19, scope: !4410)
!4421 = !{i32 0, i32 8}
!4422 = !DILocation(line: 175, column: 26, scope: !4410)
!4423 = !DILocation(line: 175, column: 3, scope: !4410)
!4424 = !DILocation(line: 176, column: 1, scope: !4410)
!4425 = distinct !DISubprogram(name: "__NVIC_GetPriorityGrouping", scope: !572, file: !572, line: 1499, type: !1896, scopeLine: 1500, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !173)
!4426 = !DILocation(line: 1501, column: 28, scope: !4425)
!4427 = !DILocation(line: 1501, column: 60, scope: !4425)
!4428 = !DILocation(line: 1501, column: 3, scope: !4425)
!4429 = distinct !DISubprogram(name: "NVIC_EncodePriority", scope: !572, file: !572, line: 1686, type: !4430, scopeLine: 1687, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !4432)
!4430 = !DISubroutineType(types: !4431)
!4431 = !{!103, !103, !103, !103}
!4432 = !{!4433, !4434, !4435, !4436, !4437, !4438}
!4433 = !DILocalVariable(name: "PriorityGroup", arg: 1, scope: !4429, file: !572, line: 1686, type: !103)
!4434 = !DILocalVariable(name: "PreemptPriority", arg: 2, scope: !4429, file: !572, line: 1686, type: !103)
!4435 = !DILocalVariable(name: "SubPriority", arg: 3, scope: !4429, file: !572, line: 1686, type: !103)
!4436 = !DILocalVariable(name: "PriorityGroupTmp", scope: !4429, file: !572, line: 1688, type: !103)
!4437 = !DILocalVariable(name: "PreemptPriorityBits", scope: !4429, file: !572, line: 1689, type: !103)
!4438 = !DILocalVariable(name: "SubPriorityBits", scope: !4429, file: !572, line: 1690, type: !103)
!4439 = !DILocation(line: 0, scope: !4429)
!4440 = !DILocation(line: 1688, column: 46, scope: !4429)
!4441 = !DILocation(line: 1692, column: 31, scope: !4429)
!4442 = !DILocation(line: 1692, column: 25, scope: !4429)
!4443 = !DILocation(line: 1693, column: 25, scope: !4429)
!4444 = !DILocation(line: 1696, column: 74, scope: !4429)
!4445 = !DILocation(line: 1696, column: 30, scope: !4429)
!4446 = !DILocation(line: 1696, column: 82, scope: !4429)
!4447 = !DILocation(line: 1697, column: 74, scope: !4429)
!4448 = !DILocation(line: 1697, column: 30, scope: !4429)
!4449 = !DILocation(line: 1696, column: 102, scope: !4429)
!4450 = !DILocation(line: 1695, column: 3, scope: !4429)
!4451 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !572, file: !572, line: 1639, type: !4452, scopeLine: 1640, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !4454)
!4452 = !DISubroutineType(types: !4453)
!4453 = !{null, !4413, !103}
!4454 = !{!4455, !4456}
!4455 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4451, file: !572, line: 1639, type: !4413)
!4456 = !DILocalVariable(name: "priority", arg: 2, scope: !4451, file: !572, line: 1639, type: !103)
!4457 = !DILocation(line: 0, scope: !4451)
!4458 = !DILocation(line: 0, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4451, file: !572, line: 1641, column: 7)
!4460 = !DILocation(line: 1641, column: 7, scope: !4451)
!4461 = !DILocation(line: 1649, column: 1, scope: !4451)
!4462 = distinct !DISubprogram(name: "HAL_NVIC_EnableIRQ", scope: !1484, file: !1484, line: 187, type: !4463, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !4465)
!4463 = !DISubroutineType(types: !4464)
!4464 = !{null, !4413}
!4465 = !{!4466}
!4466 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4462, file: !1484, line: 187, type: !4413)
!4467 = !DILocation(line: 0, scope: !4462)
!4468 = !DILocation(line: 193, column: 3, scope: !4462)
!4469 = !DILocation(line: 194, column: 1, scope: !4462)
!4470 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !572, file: !572, line: 1511, type: !4463, scopeLine: 1512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !4471)
!4471 = !{!4472}
!4472 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4470, file: !572, line: 1511, type: !4413)
!4473 = !DILocation(line: 0, scope: !4470)
!4474 = !DILocation(line: 1513, column: 23, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4470, file: !572, line: 1513, column: 7)
!4476 = !DILocation(line: 1513, column: 7, scope: !4470)
!4477 = !DILocation(line: 1515, column: 81, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4475, file: !572, line: 1514, column: 3)
!4479 = !DILocation(line: 1515, column: 60, scope: !4478)
!4480 = !DILocation(line: 1515, column: 34, scope: !4478)
!4481 = !DILocation(line: 1515, column: 5, scope: !4478)
!4482 = !DILocation(line: 1515, column: 43, scope: !4478)
!4483 = !DILocation(line: 1516, column: 3, scope: !4478)
!4484 = !DILocation(line: 1517, column: 1, scope: !4470)
!4485 = distinct !DISubprogram(name: "HAL_NVIC_DisableIRQ", scope: !1484, file: !1484, line: 203, type: !4463, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !4486)
!4486 = !{!4487}
!4487 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4485, file: !1484, line: 203, type: !4413)
!4488 = !DILocation(line: 0, scope: !4485)
!4489 = !DILocation(line: 209, column: 3, scope: !4485)
!4490 = !DILocation(line: 210, column: 1, scope: !4485)
!4491 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !572, file: !572, line: 1547, type: !4463, scopeLine: 1548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !4492)
!4492 = !{!4493}
!4493 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4491, file: !572, line: 1547, type: !4413)
!4494 = !DILocation(line: 0, scope: !4491)
!4495 = !DILocation(line: 1549, column: 23, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4491, file: !572, line: 1549, column: 7)
!4497 = !DILocation(line: 1549, column: 7, scope: !4491)
!4498 = !DILocation(line: 1551, column: 81, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4496, file: !572, line: 1550, column: 3)
!4500 = !DILocation(line: 1551, column: 60, scope: !4499)
!4501 = !DILocation(line: 1551, column: 34, scope: !4499)
!4502 = !DILocation(line: 1551, column: 5, scope: !4499)
!4503 = !DILocation(line: 1551, column: 43, scope: !4499)
!4504 = !DILocation(line: 879, column: 3, scope: !4505, inlinedAt: !4507)
!4505 = distinct !DISubprogram(name: "__DSB", scope: !4506, file: !4506, line: 877, type: !4, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !173)
!4506 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "ba7e4770884341336138fcec9d34fc09")
!4507 = distinct !DILocation(line: 1552, column: 5, scope: !4499)
!4508 = !{i64 1222529}
!4509 = !DILocation(line: 868, column: 3, scope: !4510, inlinedAt: !4511)
!4510 = distinct !DISubprogram(name: "__ISB", scope: !4506, file: !4506, line: 866, type: !4, scopeLine: 867, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !173)
!4511 = distinct !DILocation(line: 1553, column: 5, scope: !4499)
!4512 = !{i64 1222235}
!4513 = !DILocation(line: 1554, column: 3, scope: !4499)
!4514 = !DILocation(line: 1555, column: 1, scope: !4491)
!4515 = distinct !DISubprogram(name: "HAL_NVIC_SystemReset", scope: !1484, file: !1484, line: 216, type: !4, scopeLine: 217, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !173)
!4516 = !DILocation(line: 219, column: 3, scope: !4515)
!4517 = distinct !DISubprogram(name: "__NVIC_SystemReset", scope: !572, file: !572, line: 1762, type: !4, scopeLine: 1763, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !173)
!4518 = !DILocation(line: 879, column: 3, scope: !4505, inlinedAt: !4519)
!4519 = distinct !DILocation(line: 1764, column: 3, scope: !4517)
!4520 = !DILocation(line: 1767, column: 34, scope: !4517)
!4521 = !DILocation(line: 1767, column: 40, scope: !4517)
!4522 = !DILocation(line: 1767, column: 66, scope: !4517)
!4523 = !DILocation(line: 1766, column: 15, scope: !4517)
!4524 = !DILocation(line: 879, column: 3, scope: !4505, inlinedAt: !4525)
!4525 = distinct !DILocation(line: 1769, column: 3, scope: !4517)
!4526 = !DILocation(line: 1771, column: 3, scope: !4517)
!4527 = !DILocation(line: 1773, column: 5, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4529, file: !572, line: 1772, column: 3)
!4529 = distinct !DILexicalBlock(scope: !4530, file: !572, line: 1771, column: 3)
!4530 = distinct !DILexicalBlock(scope: !4517, file: !572, line: 1771, column: 3)
!4531 = !{i64 2148746398}
!4532 = !DILocation(line: 1771, column: 3, scope: !4529)
!4533 = distinct !{!4533, !4534, !4535, !2572}
!4534 = !DILocation(line: 1771, column: 3, scope: !4530)
!4535 = !DILocation(line: 1774, column: 3, scope: !4530)
!4536 = distinct !DISubprogram(name: "HAL_SYSTICK_Config", scope: !1484, file: !1484, line: 229, type: !2165, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !4537)
!4537 = !{!4538}
!4538 = !DILocalVariable(name: "TicksNumb", arg: 1, scope: !4536, file: !1484, line: 229, type: !103)
!4539 = !DILocation(line: 0, scope: !4536)
!4540 = !DILocation(line: 231, column: 11, scope: !4536)
!4541 = !DILocation(line: 231, column: 4, scope: !4536)
!4542 = distinct !DISubprogram(name: "SysTick_Config", scope: !572, file: !572, line: 1834, type: !2165, scopeLine: 1835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !4543)
!4543 = !{!4544}
!4544 = !DILocalVariable(name: "ticks", arg: 1, scope: !4542, file: !572, line: 1834, type: !103)
!4545 = !DILocation(line: 0, scope: !4542)
!4546 = !DILocation(line: 1836, column: 14, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4542, file: !572, line: 1836, column: 7)
!4548 = !DILocation(line: 1836, column: 21, scope: !4547)
!4549 = !DILocation(line: 1836, column: 7, scope: !4542)
!4550 = !DILocation(line: 1841, column: 18, scope: !4542)
!4551 = !DILocation(line: 1842, column: 3, scope: !4542)
!4552 = !DILocation(line: 1843, column: 18, scope: !4542)
!4553 = !DILocation(line: 1844, column: 18, scope: !4542)
!4554 = !DILocation(line: 1847, column: 3, scope: !4542)
!4555 = !DILocation(line: 1848, column: 1, scope: !4542)
!4556 = distinct !DISubprogram(name: "HAL_NVIC_GetPriorityGrouping", scope: !1484, file: !1484, line: 344, type: !1896, scopeLine: 345, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !173)
!4557 = !DILocation(line: 347, column: 10, scope: !4556)
!4558 = !DILocation(line: 347, column: 3, scope: !4556)
!4559 = distinct !DISubprogram(name: "HAL_NVIC_GetPriority", scope: !1484, file: !1484, line: 371, type: !4560, scopeLine: 372, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !4562)
!4560 = !DISubroutineType(types: !4561)
!4561 = !{null, !4413, !103, !734, !734}
!4562 = !{!4563, !4564, !4565, !4566}
!4563 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4559, file: !1484, line: 371, type: !4413)
!4564 = !DILocalVariable(name: "PriorityGroup", arg: 2, scope: !4559, file: !1484, line: 371, type: !103)
!4565 = !DILocalVariable(name: "pPreemptPriority", arg: 3, scope: !4559, file: !1484, line: 371, type: !734)
!4566 = !DILocalVariable(name: "pSubPriority", arg: 4, scope: !4559, file: !1484, line: 371, type: !734)
!4567 = !DILocation(line: 0, scope: !4559)
!4568 = !DILocation(line: 376, column: 23, scope: !4559)
!4569 = !{i32 0, i32 16}
!4570 = !DILocation(line: 376, column: 3, scope: !4559)
!4571 = !DILocation(line: 377, column: 1, scope: !4559)
!4572 = distinct !DISubprogram(name: "__NVIC_GetPriority", scope: !572, file: !572, line: 1661, type: !4573, scopeLine: 1662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !4575)
!4573 = !DISubroutineType(types: !4574)
!4574 = !{!103, !4413}
!4575 = !{!4576}
!4576 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4572, file: !572, line: 1661, type: !4413)
!4577 = !DILocation(line: 0, scope: !4572)
!4578 = !DILocation(line: 1664, column: 7, scope: !4572)
!4579 = !DILocation(line: 0, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4572, file: !572, line: 1664, column: 7)
!4581 = !DILocation(line: 1672, column: 1, scope: !4572)
!4582 = distinct !DISubprogram(name: "NVIC_DecodePriority", scope: !572, file: !572, line: 1713, type: !4583, scopeLine: 1714, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !4586)
!4583 = !DISubroutineType(types: !4584)
!4584 = !{null, !103, !103, !4585, !4585}
!4585 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !734)
!4586 = !{!4587, !4588, !4589, !4590, !4591, !4592, !4593}
!4587 = !DILocalVariable(name: "Priority", arg: 1, scope: !4582, file: !572, line: 1713, type: !103)
!4588 = !DILocalVariable(name: "PriorityGroup", arg: 2, scope: !4582, file: !572, line: 1713, type: !103)
!4589 = !DILocalVariable(name: "pPreemptPriority", arg: 3, scope: !4582, file: !572, line: 1713, type: !4585)
!4590 = !DILocalVariable(name: "pSubPriority", arg: 4, scope: !4582, file: !572, line: 1713, type: !4585)
!4591 = !DILocalVariable(name: "PriorityGroupTmp", scope: !4582, file: !572, line: 1715, type: !103)
!4592 = !DILocalVariable(name: "PreemptPriorityBits", scope: !4582, file: !572, line: 1716, type: !103)
!4593 = !DILocalVariable(name: "SubPriorityBits", scope: !4582, file: !572, line: 1717, type: !103)
!4594 = !DILocation(line: 0, scope: !4582)
!4595 = !DILocation(line: 1715, column: 46, scope: !4582)
!4596 = !DILocation(line: 1719, column: 31, scope: !4582)
!4597 = !DILocation(line: 1719, column: 25, scope: !4582)
!4598 = !DILocation(line: 1720, column: 25, scope: !4582)
!4599 = !DILocation(line: 1722, column: 33, scope: !4582)
!4600 = !DILocation(line: 1722, column: 97, scope: !4582)
!4601 = !DILocation(line: 1722, column: 53, scope: !4582)
!4602 = !DILocation(line: 1722, column: 21, scope: !4582)
!4603 = !DILocation(line: 1723, column: 97, scope: !4582)
!4604 = !DILocation(line: 1723, column: 53, scope: !4582)
!4605 = !DILocation(line: 1723, column: 21, scope: !4582)
!4606 = !DILocation(line: 1724, column: 1, scope: !4582)
!4607 = distinct !DISubprogram(name: "HAL_NVIC_SetPendingIRQ", scope: !1484, file: !1484, line: 386, type: !4463, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !4608)
!4608 = !{!4609}
!4609 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4607, file: !1484, line: 386, type: !4413)
!4610 = !DILocation(line: 0, scope: !4607)
!4611 = !DILocation(line: 392, column: 3, scope: !4607)
!4612 = !DILocation(line: 393, column: 1, scope: !4607)
!4613 = distinct !DISubprogram(name: "__NVIC_SetPendingIRQ", scope: !572, file: !572, line: 1585, type: !4463, scopeLine: 1586, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !4614)
!4614 = !{!4615}
!4615 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4613, file: !572, line: 1585, type: !4413)
!4616 = !DILocation(line: 0, scope: !4613)
!4617 = !DILocation(line: 1587, column: 23, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4613, file: !572, line: 1587, column: 7)
!4619 = !DILocation(line: 1587, column: 7, scope: !4613)
!4620 = !DILocation(line: 1589, column: 81, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4618, file: !572, line: 1588, column: 3)
!4622 = !DILocation(line: 1589, column: 60, scope: !4621)
!4623 = !DILocation(line: 1589, column: 34, scope: !4621)
!4624 = !DILocation(line: 1589, column: 5, scope: !4621)
!4625 = !DILocation(line: 1589, column: 43, scope: !4621)
!4626 = !DILocation(line: 1590, column: 3, scope: !4621)
!4627 = !DILocation(line: 1591, column: 1, scope: !4613)
!4628 = distinct !DISubprogram(name: "HAL_NVIC_GetPendingIRQ", scope: !1484, file: !1484, line: 404, type: !4573, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !4629)
!4629 = !{!4630}
!4630 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4628, file: !1484, line: 404, type: !4413)
!4631 = !DILocation(line: 0, scope: !4628)
!4632 = !DILocation(line: 410, column: 10, scope: !4628)
!4633 = !DILocation(line: 410, column: 3, scope: !4628)
!4634 = distinct !DISubprogram(name: "__NVIC_GetPendingIRQ", scope: !572, file: !572, line: 1566, type: !4573, scopeLine: 1567, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !4635)
!4635 = !{!4636}
!4636 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4634, file: !572, line: 1566, type: !4413)
!4637 = !DILocation(line: 0, scope: !4634)
!4638 = !DILocation(line: 1568, column: 23, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4634, file: !572, line: 1568, column: 7)
!4640 = !DILocation(line: 1568, column: 7, scope: !4634)
!4641 = !DILocation(line: 1570, column: 54, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4639, file: !572, line: 1569, column: 3)
!4643 = !DILocation(line: 1570, column: 25, scope: !4642)
!4644 = !DILocation(line: 1570, column: 91, scope: !4642)
!4645 = !DILocation(line: 1570, column: 23, scope: !4642)
!4646 = !DILocation(line: 1570, column: 5, scope: !4642)
!4647 = !DILocation(line: 0, scope: !4639)
!4648 = !DILocation(line: 1576, column: 1, scope: !4634)
!4649 = distinct !DISubprogram(name: "HAL_NVIC_ClearPendingIRQ", scope: !1484, file: !1484, line: 420, type: !4463, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !4650)
!4650 = !{!4651}
!4651 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4649, file: !1484, line: 420, type: !4413)
!4652 = !DILocation(line: 0, scope: !4649)
!4653 = !DILocation(line: 426, column: 3, scope: !4649)
!4654 = !DILocation(line: 427, column: 1, scope: !4649)
!4655 = distinct !DISubprogram(name: "__NVIC_ClearPendingIRQ", scope: !572, file: !572, line: 1600, type: !4463, scopeLine: 1601, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !4656)
!4656 = !{!4657}
!4657 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4655, file: !572, line: 1600, type: !4413)
!4658 = !DILocation(line: 0, scope: !4655)
!4659 = !DILocation(line: 1602, column: 23, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4655, file: !572, line: 1602, column: 7)
!4661 = !DILocation(line: 1602, column: 7, scope: !4655)
!4662 = !DILocation(line: 1604, column: 81, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4660, file: !572, line: 1603, column: 3)
!4664 = !DILocation(line: 1604, column: 60, scope: !4663)
!4665 = !DILocation(line: 1604, column: 34, scope: !4663)
!4666 = !DILocation(line: 1604, column: 5, scope: !4663)
!4667 = !DILocation(line: 1604, column: 43, scope: !4663)
!4668 = !DILocation(line: 1605, column: 3, scope: !4663)
!4669 = !DILocation(line: 1606, column: 1, scope: !4655)
!4670 = distinct !DISubprogram(name: "HAL_NVIC_GetActive", scope: !1484, file: !1484, line: 437, type: !4573, scopeLine: 438, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !4671)
!4671 = !{!4672}
!4672 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4670, file: !1484, line: 437, type: !4413)
!4673 = !DILocation(line: 0, scope: !4670)
!4674 = !DILocation(line: 443, column: 10, scope: !4670)
!4675 = !DILocation(line: 443, column: 3, scope: !4670)
!4676 = distinct !DISubprogram(name: "__NVIC_GetActive", scope: !572, file: !572, line: 1617, type: !4573, scopeLine: 1618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !4677)
!4677 = !{!4678}
!4678 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4676, file: !572, line: 1617, type: !4413)
!4679 = !DILocation(line: 0, scope: !4676)
!4680 = !DILocation(line: 1619, column: 23, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4676, file: !572, line: 1619, column: 7)
!4682 = !DILocation(line: 1619, column: 7, scope: !4676)
!4683 = !DILocation(line: 1621, column: 54, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4681, file: !572, line: 1620, column: 3)
!4685 = !DILocation(line: 1621, column: 25, scope: !4684)
!4686 = !DILocation(line: 1621, column: 91, scope: !4684)
!4687 = !DILocation(line: 1621, column: 23, scope: !4684)
!4688 = !DILocation(line: 1621, column: 5, scope: !4684)
!4689 = !DILocation(line: 0, scope: !4681)
!4690 = !DILocation(line: 1627, column: 1, scope: !4676)
!4691 = distinct !DISubprogram(name: "HAL_SYSTICK_CLKSourceConfig", scope: !1484, file: !1484, line: 454, type: !3887, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !4692)
!4692 = !{!4693}
!4693 = !DILocalVariable(name: "CLKSource", arg: 1, scope: !4691, file: !1484, line: 454, type: !103)
!4694 = !DILocation(line: 0, scope: !4691)
!4695 = !DILocation(line: 458, column: 17, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4691, file: !1484, line: 458, column: 7)
!4697 = !DILocation(line: 0, scope: !4696)
!4698 = !DILocation(line: 458, column: 7, scope: !4691)
!4699 = !DILocation(line: 466, column: 1, scope: !4691)
!4700 = distinct !DISubprogram(name: "HAL_SYSTICK_IRQHandler", scope: !1484, file: !1484, line: 472, type: !4, scopeLine: 473, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !173)
!4701 = !DILocation(line: 474, column: 3, scope: !4700)
!4702 = !DILocation(line: 475, column: 1, scope: !4700)
!4703 = distinct !DISubprogram(name: "HAL_SYSTICK_Callback", scope: !1484, file: !1484, line: 481, type: !4, scopeLine: 482, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1483, retainedNodes: !173)
!4704 = !DILocation(line: 486, column: 1, scope: !4703)
!4705 = distinct !DISubprogram(name: "HAL_GPIO_Init", scope: !1538, file: !1538, line: 178, type: !4706, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1537, retainedNodes: !4716)
!4706 = !DISubroutineType(types: !4707)
!4707 = !{null, !1569, !4708}
!4708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4709, size: 32)
!4709 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !1541, line: 60, baseType: !4710)
!4710 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1541, line: 47, size: 128, elements: !4711)
!4711 = !{!4712, !4713, !4714, !4715}
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !4710, file: !1541, line: 49, baseType: !103, size: 32)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !4710, file: !1541, line: 52, baseType: !103, size: 32, offset: 32)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !4710, file: !1541, line: 55, baseType: !103, size: 32, offset: 64)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !4710, file: !1541, line: 58, baseType: !103, size: 32, offset: 96)
!4716 = !{!4717, !4718, !4719, !4720, !4721, !4722, !4723, !4724, !4725, !4726}
!4717 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !4705, file: !1538, line: 178, type: !1569)
!4718 = !DILocalVariable(name: "GPIO_Init", arg: 2, scope: !4705, file: !1538, line: 178, type: !4708)
!4719 = !DILocalVariable(name: "position", scope: !4705, file: !1538, line: 180, type: !103)
!4720 = !DILocalVariable(name: "ioposition", scope: !4705, file: !1538, line: 181, type: !103)
!4721 = !DILocalVariable(name: "iocurrent", scope: !4705, file: !1538, line: 182, type: !103)
!4722 = !DILocalVariable(name: "temp", scope: !4705, file: !1538, line: 183, type: !103)
!4723 = !DILocalVariable(name: "config", scope: !4705, file: !1538, line: 184, type: !103)
!4724 = !DILocalVariable(name: "configregister", scope: !4705, file: !1538, line: 185, type: !1451)
!4725 = !DILocalVariable(name: "registeroffset", scope: !4705, file: !1538, line: 186, type: !103)
!4726 = !DILocalVariable(name: "tmpreg", scope: !4727, file: !1538, line: 291, type: !102)
!4727 = distinct !DILexicalBlock(scope: !4728, file: !1538, line: 291, column: 9)
!4728 = distinct !DILexicalBlock(scope: !4729, file: !1538, line: 289, column: 7)
!4729 = distinct !DILexicalBlock(scope: !4730, file: !1538, line: 288, column: 11)
!4730 = distinct !DILexicalBlock(scope: !4731, file: !1538, line: 203, column: 5)
!4731 = distinct !DILexicalBlock(scope: !4732, file: !1538, line: 202, column: 9)
!4732 = distinct !DILexicalBlock(scope: !4705, file: !1538, line: 195, column: 3)
!4733 = !DILocation(line: 0, scope: !4705)
!4734 = !DILocation(line: 194, column: 23, scope: !4705)
!4735 = !DILocation(line: 194, column: 41, scope: !4705)
!4736 = !DILocation(line: 194, column: 3, scope: !4705)
!4737 = !DILocation(line: 197, column: 26, scope: !4732)
!4738 = !DILocation(line: 200, column: 44, scope: !4732)
!4739 = !DILocation(line: 202, column: 19, scope: !4731)
!4740 = !DILocation(line: 202, column: 9, scope: !4732)
!4741 = !DILocation(line: 208, column: 26, scope: !4730)
!4742 = !DILocation(line: 208, column: 7, scope: !4730)
!4743 = !DILocation(line: 214, column: 31, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4730, file: !1538, line: 209, column: 7)
!4745 = !DILocation(line: 215, column: 11, scope: !4744)
!4746 = !DILocation(line: 221, column: 31, scope: !4744)
!4747 = !DILocation(line: 221, column: 37, scope: !4744)
!4748 = !DILocation(line: 222, column: 11, scope: !4744)
!4749 = !DILocation(line: 228, column: 31, scope: !4744)
!4750 = !DILocation(line: 228, column: 37, scope: !4744)
!4751 = !DILocation(line: 229, column: 11, scope: !4744)
!4752 = !DILocation(line: 235, column: 31, scope: !4744)
!4753 = !DILocation(line: 235, column: 37, scope: !4744)
!4754 = !DILocation(line: 236, column: 11, scope: !4744)
!4755 = !DILocation(line: 248, column: 26, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4744, file: !1538, line: 248, column: 15)
!4757 = !DILocation(line: 248, column: 15, scope: !4744)
!4758 = !DILocation(line: 257, column: 25, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4760, file: !1538, line: 253, column: 11)
!4760 = distinct !DILexicalBlock(scope: !4756, file: !1538, line: 252, column: 20)
!4761 = !{!4762, !3393, i64 16}
!4762 = !{!"", !3393, i64 0, !3393, i64 4, !3393, i64 8, !3393, i64 12, !3393, i64 16, !3393, i64 20, !3393, i64 24}
!4763 = !DILocation(line: 258, column: 11, scope: !4759)
!4764 = !DILocation(line: 264, column: 24, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4760, file: !1538, line: 260, column: 11)
!4766 = !{!4762, !3393, i64 20}
!4767 = !DILocation(line: 271, column: 11, scope: !4744)
!4768 = !DILocation(line: 280, column: 35, scope: !4730)
!4769 = !DILocation(line: 280, column: 24, scope: !4730)
!4770 = !DILocation(line: 281, column: 24, scope: !4730)
!4771 = !DILocation(line: 284, column: 7, scope: !4730)
!4772 = !DILocation(line: 288, column: 23, scope: !4729)
!4773 = !DILocation(line: 288, column: 28, scope: !4729)
!4774 = !DILocation(line: 288, column: 41, scope: !4729)
!4775 = !DILocation(line: 288, column: 11, scope: !4730)
!4776 = !DILocation(line: 291, column: 9, scope: !4727)
!4777 = !DILocation(line: 291, column: 9, scope: !4728)
!4778 = !DILocation(line: 292, column: 38, scope: !4728)
!4779 = !DILocation(line: 292, column: 16, scope: !4728)
!4780 = !DILocation(line: 293, column: 9, scope: !4728)
!4781 = !DILocation(line: 294, column: 9, scope: !4728)
!4782 = !DILocation(line: 295, column: 38, scope: !4728)
!4783 = !DILocation(line: 299, column: 25, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4728, file: !1538, line: 299, column: 13)
!4785 = !DILocation(line: 299, column: 30, scope: !4784)
!4786 = !DILocation(line: 299, column: 46, scope: !4784)
!4787 = !DILocation(line: 299, column: 13, scope: !4728)
!4788 = !DILocation(line: 301, column: 11, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4784, file: !1538, line: 300, column: 9)
!4790 = !{!4791, !3393, i64 0}
!4791 = !{!"", !3393, i64 0, !3393, i64 4, !3393, i64 8, !3393, i64 12, !3393, i64 16, !3393, i64 20}
!4792 = !DILocation(line: 302, column: 9, scope: !4789)
!4793 = !DILocation(line: 305, column: 11, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4784, file: !1538, line: 304, column: 9)
!4795 = !DILocation(line: 0, scope: !4784)
!4796 = !DILocation(line: 309, column: 30, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4728, file: !1538, line: 309, column: 13)
!4798 = !DILocation(line: 309, column: 47, scope: !4797)
!4799 = !DILocation(line: 309, column: 13, scope: !4728)
!4800 = !DILocation(line: 311, column: 11, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4797, file: !1538, line: 310, column: 9)
!4802 = !{!4791, !3393, i64 4}
!4803 = !DILocation(line: 312, column: 9, scope: !4801)
!4804 = !DILocation(line: 315, column: 11, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4797, file: !1538, line: 314, column: 9)
!4806 = !DILocation(line: 0, scope: !4797)
!4807 = !DILocation(line: 319, column: 30, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4728, file: !1538, line: 319, column: 13)
!4809 = !DILocation(line: 319, column: 45, scope: !4808)
!4810 = !DILocation(line: 319, column: 13, scope: !4728)
!4811 = !DILocation(line: 321, column: 11, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4808, file: !1538, line: 320, column: 9)
!4813 = !{!4791, !3393, i64 8}
!4814 = !DILocation(line: 322, column: 9, scope: !4812)
!4815 = !DILocation(line: 325, column: 11, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4808, file: !1538, line: 324, column: 9)
!4817 = !DILocation(line: 0, scope: !4808)
!4818 = !DILocation(line: 329, column: 30, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4728, file: !1538, line: 329, column: 13)
!4820 = !DILocation(line: 329, column: 46, scope: !4819)
!4821 = !DILocation(line: 329, column: 13, scope: !4728)
!4822 = !DILocation(line: 331, column: 11, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4819, file: !1538, line: 330, column: 9)
!4824 = !{!4791, !3393, i64 12}
!4825 = !DILocation(line: 332, column: 9, scope: !4823)
!4826 = !DILocation(line: 335, column: 11, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4819, file: !1538, line: 334, column: 9)
!4828 = !DILocation(line: 0, scope: !4819)
!4829 = !DILocation(line: 340, column: 10, scope: !4732)
!4830 = !DILocation(line: 184, column: 12, scope: !4705)
!4831 = !DILocation(line: 194, column: 28, scope: !4705)
!4832 = distinct !{!4832, !4736, !4833, !2571, !2572}
!4833 = !DILocation(line: 341, column: 3, scope: !4705)
!4834 = !DILocation(line: 342, column: 1, scope: !4705)
!4835 = distinct !DISubprogram(name: "HAL_GPIO_DeInit", scope: !1538, file: !1538, line: 351, type: !4836, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1537, retainedNodes: !4838)
!4836 = !DISubroutineType(types: !4837)
!4837 = !{null, !1569, !103}
!4838 = !{!4839, !4840, !4841, !4842, !4843, !4844, !4845}
!4839 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !4835, file: !1538, line: 351, type: !1569)
!4840 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !4835, file: !1538, line: 351, type: !103)
!4841 = !DILocalVariable(name: "position", scope: !4835, file: !1538, line: 353, type: !103)
!4842 = !DILocalVariable(name: "iocurrent", scope: !4835, file: !1538, line: 354, type: !103)
!4843 = !DILocalVariable(name: "tmp", scope: !4835, file: !1538, line: 355, type: !103)
!4844 = !DILocalVariable(name: "configregister", scope: !4835, file: !1538, line: 356, type: !1451)
!4845 = !DILocalVariable(name: "registeroffset", scope: !4835, file: !1538, line: 357, type: !103)
!4846 = !DILocation(line: 0, scope: !4835)
!4847 = !DILocation(line: 364, column: 33, scope: !4835)
!4848 = !DILocation(line: 364, column: 3, scope: !4835)
!4849 = !DILocation(line: 367, column: 35, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4835, file: !1538, line: 365, column: 3)
!4851 = !DILocation(line: 367, column: 28, scope: !4850)
!4852 = !DILocation(line: 369, column: 9, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4850, file: !1538, line: 369, column: 9)
!4854 = !DILocation(line: 369, column: 9, scope: !4850)
!4855 = !DILocation(line: 374, column: 35, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4853, file: !1538, line: 370, column: 5)
!4857 = !DILocation(line: 374, column: 13, scope: !4856)
!4858 = !DILocation(line: 375, column: 28, scope: !4856)
!4859 = !DILocation(line: 375, column: 21, scope: !4856)
!4860 = !DILocation(line: 375, column: 11, scope: !4856)
!4861 = !DILocation(line: 376, column: 19, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4856, file: !1538, line: 376, column: 11)
!4863 = !DILocation(line: 376, column: 41, scope: !4862)
!4864 = !DILocation(line: 376, column: 15, scope: !4862)
!4865 = !DILocation(line: 376, column: 11, scope: !4856)
!4866 = !DILocation(line: 379, column: 9, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4862, file: !1538, line: 377, column: 7)
!4868 = !DILocation(line: 382, column: 9, scope: !4867)
!4869 = !DILocation(line: 383, column: 9, scope: !4867)
!4870 = !DILocation(line: 386, column: 9, scope: !4867)
!4871 = !DILocation(line: 387, column: 9, scope: !4867)
!4872 = !DILocation(line: 388, column: 7, scope: !4867)
!4873 = !DILocation(line: 392, column: 35, scope: !4856)
!4874 = !DILocation(line: 392, column: 24, scope: !4856)
!4875 = !DILocation(line: 393, column: 24, scope: !4856)
!4876 = !DILocation(line: 396, column: 7, scope: !4856)
!4877 = !DILocation(line: 399, column: 7, scope: !4856)
!4878 = !{!4762, !3393, i64 12}
!4879 = !DILocation(line: 400, column: 5, scope: !4856)
!4880 = !DILocation(line: 402, column: 13, scope: !4850)
!4881 = !DILocation(line: 364, column: 20, scope: !4835)
!4882 = distinct !{!4882, !4848, !4883, !2571, !2572}
!4883 = !DILocation(line: 403, column: 3, scope: !4835)
!4884 = !DILocation(line: 404, column: 1, scope: !4835)
!4885 = distinct !DISubprogram(name: "HAL_GPIO_ReadPin", scope: !1538, file: !1538, line: 431, type: !4886, scopeLine: 432, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1537, retainedNodes: !4889)
!4886 = !DISubroutineType(types: !4887)
!4887 = !{!4888, !1569, !89}
!4888 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PinState", file: !1541, line: 69, baseType: !1540)
!4889 = !{!4890, !4891, !4892}
!4890 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !4885, file: !1538, line: 431, type: !1569)
!4891 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !4885, file: !1538, line: 431, type: !89)
!4892 = !DILocalVariable(name: "bitstatus", scope: !4885, file: !1538, line: 433, type: !4888)
!4893 = !DILocation(line: 0, scope: !4885)
!4894 = !DILocation(line: 438, column: 15, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4885, file: !1538, line: 438, column: 7)
!4896 = !{!4762, !3393, i64 8}
!4897 = !DILocation(line: 438, column: 21, scope: !4895)
!4898 = !DILocation(line: 438, column: 19, scope: !4895)
!4899 = !DILocation(line: 438, column: 31, scope: !4895)
!4900 = !DILocation(line: 446, column: 3, scope: !4885)
!4901 = distinct !DISubprogram(name: "HAL_GPIO_WritePin", scope: !1538, file: !1538, line: 465, type: !4902, scopeLine: 466, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1537, retainedNodes: !4904)
!4902 = !DISubroutineType(types: !4903)
!4903 = !{null, !1569, !89, !4888}
!4904 = !{!4905, !4906, !4907}
!4905 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !4901, file: !1538, line: 465, type: !1569)
!4906 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !4901, file: !1538, line: 465, type: !89)
!4907 = !DILocalVariable(name: "PinState", arg: 3, scope: !4901, file: !1538, line: 465, type: !4888)
!4908 = !DILocation(line: 0, scope: !4901)
!4909 = !DILocation(line: 471, column: 16, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4901, file: !1538, line: 471, column: 7)
!4911 = !DILocation(line: 0, scope: !4910)
!4912 = !DILocation(line: 471, column: 7, scope: !4901)
!4913 = !DILocation(line: 479, column: 1, scope: !4901)
!4914 = distinct !DISubprogram(name: "HAL_GPIO_TogglePin", scope: !1538, file: !1538, line: 487, type: !4915, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1537, retainedNodes: !4917)
!4915 = !DISubroutineType(types: !4916)
!4916 = !{null, !1569, !89}
!4917 = !{!4918, !4919}
!4918 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !4914, file: !1538, line: 487, type: !1569)
!4919 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !4914, file: !1538, line: 487, type: !89)
!4920 = !DILocation(line: 0, scope: !4914)
!4921 = !DILocation(line: 492, column: 15, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4914, file: !1538, line: 492, column: 7)
!4923 = !DILocation(line: 492, column: 21, scope: !4922)
!4924 = !DILocation(line: 492, column: 19, scope: !4922)
!4925 = !DILocation(line: 492, column: 31, scope: !4922)
!4926 = !DILocation(line: 492, column: 7, scope: !4914)
!4927 = !DILocation(line: 0, scope: !4922)
!4928 = !DILocation(line: 500, column: 1, scope: !4914)
!4929 = distinct !DISubprogram(name: "HAL_GPIO_LockPin", scope: !1538, file: !1538, line: 512, type: !4930, scopeLine: 513, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1537, retainedNodes: !4932)
!4930 = !DISubroutineType(types: !4931)
!4931 = !{!3447, !1569, !89}
!4932 = !{!4933, !4934, !4935}
!4933 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !4929, file: !1538, line: 512, type: !1569)
!4934 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !4929, file: !1538, line: 512, type: !89)
!4935 = !DILocalVariable(name: "tmp", scope: !4929, file: !1538, line: 514, type: !102)
!4936 = !DILocation(line: 0, scope: !4929)
!4937 = !DILocation(line: 514, column: 3, scope: !4929)
!4938 = !DILocation(line: 514, column: 17, scope: !4929)
!4939 = !DILocation(line: 521, column: 3, scope: !4929)
!4940 = !DILocation(line: 523, column: 17, scope: !4929)
!4941 = !DILocation(line: 523, column: 10, scope: !4929)
!4942 = !DILocation(line: 523, column: 15, scope: !4929)
!4943 = !{!4762, !3393, i64 24}
!4944 = !DILocation(line: 525, column: 15, scope: !4929)
!4945 = !DILocation(line: 527, column: 17, scope: !4929)
!4946 = !DILocation(line: 527, column: 15, scope: !4929)
!4947 = !DILocation(line: 529, column: 16, scope: !4929)
!4948 = !DILocation(line: 529, column: 7, scope: !4929)
!4949 = !DILocation(line: 532, column: 25, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4929, file: !1538, line: 532, column: 7)
!4951 = !DILocation(line: 0, scope: !4950)
!4952 = !DILocation(line: 540, column: 1, scope: !4929)
!4953 = distinct !DISubprogram(name: "HAL_GPIO_EXTI_IRQHandler", scope: !1538, file: !1538, line: 547, type: !4954, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1537, retainedNodes: !4956)
!4954 = !DISubroutineType(types: !4955)
!4955 = !{null, !89}
!4956 = !{!4957}
!4957 = !DILocalVariable(name: "GPIO_Pin", arg: 1, scope: !4953, file: !1538, line: 547, type: !89)
!4958 = !DILocation(line: 0, scope: !4953)
!4959 = !DILocation(line: 550, column: 7, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4953, file: !1538, line: 550, column: 7)
!4961 = !{!4791, !3393, i64 20}
!4962 = !DILocation(line: 550, column: 40, scope: !4960)
!4963 = !DILocation(line: 550, column: 7, scope: !4953)
!4964 = !DILocation(line: 552, column: 5, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4960, file: !1538, line: 551, column: 3)
!4966 = !DILocation(line: 553, column: 5, scope: !4965)
!4967 = !DILocation(line: 554, column: 3, scope: !4965)
!4968 = !DILocation(line: 555, column: 1, scope: !4953)
!4969 = distinct !DISubprogram(name: "HAL_GPIO_EXTI_Callback", scope: !1538, file: !1538, line: 562, type: !4954, scopeLine: 563, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1537, retainedNodes: !4970)
!4970 = !{!4971}
!4971 = !DILocalVariable(name: "GPIO_Pin", arg: 1, scope: !4969, file: !1538, line: 562, type: !89)
!4972 = !DILocation(line: 0, scope: !4969)
!4973 = !DILocation(line: 569, column: 1, scope: !4969)
!4974 = distinct !DISubprogram(name: "~ATCommDevice", linkageName: "_ZN6Cicada12ATCommDeviceD0Ev", scope: !746, file: !747, line: 46, type: !839, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !743, declaration: !838, retainedNodes: !4975)
!4975 = !{!4976}
!4976 = !DILocalVariable(name: "this", arg: 1, scope: !4974, type: !4977, flags: DIFlagArtificial | DIFlagObjectPointer)
!4977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 32)
!4978 = !DILocation(line: 0, scope: !4974)
!4979 = !DILocation(line: 46, column: 29, scope: !4974)
!4980 = distinct !DISubprogram(name: "serialWrite", linkageName: "_ZN6Cicada12ATCommDevice11serialWriteEPc", scope: !746, file: !744, line: 155, type: !842, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !743, declaration: !841, retainedNodes: !4981)
!4981 = !{!4982, !4983}
!4982 = !DILocalVariable(name: "this", arg: 1, scope: !4980, type: !4977, flags: DIFlagArtificial | DIFlagObjectPointer)
!4983 = !DILocalVariable(name: "data", arg: 2, scope: !4980, file: !744, line: 155, type: !335)
!4984 = !DILocation(line: 0, scope: !4980)
!4985 = !DILocation(line: 157, column: 9, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4980, file: !744, line: 157, column: 9)
!4987 = !{!4988, !2233, i64 130}
!4988 = !{!"_ZTSN6Cicada12IPCommDeviceE", !4989, i64 24, !4989, i64 72, !4991, i64 120, !2232, i64 124, !2365, i64 128, !2233, i64 130, !4992, i64 132, !2232, i64 136}
!4989 = !{!"_ZTSN6Cicada14CircularBufferIhEE", !4990, i64 8, !4990, i64 16, !4990, i64 24, !4990, i64 32, !2232, i64 40}
!4990 = !{!"long long", !2233, i64 0}
!4991 = !{!"_ZTSN6Cicada13IIPCommDevice14ConnectionTypeE", !2233, i64 0}
!4992 = !{!"_ZTSN6Cicada12IPCommDevice12ConnectStateE", !2233, i64 0}
!4993 = !DILocation(line: 157, column: 24, scope: !4986)
!4994 = !DILocation(line: 157, column: 9, scope: !4980)
!4995 = !DILocation(line: 158, column: 16, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4986, file: !744, line: 157, column: 41)
!4997 = !{!4998, !2232, i64 140}
!4998 = !{!"_ZTSN6Cicada12ATCommDeviceE", !2232, i64 140, !2233, i64 144, !2233, i64 205, !2233, i64 206, !2233, i64 207, !4990, i64 208, !4990, i64 216, !4990, i64 224}
!4999 = !DILocation(line: 158, column: 24, scope: !4996)
!5000 = !DILocation(line: 158, column: 9, scope: !4996)
!5001 = !DILocation(line: 162, column: 1, scope: !4980)
!5002 = distinct !DISubprogram(name: "serialRead", linkageName: "_ZN6Cicada12ATCommDevice10serialReadEPcy", scope: !746, file: !744, line: 164, type: !845, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !743, declaration: !844, retainedNodes: !5003)
!5003 = !{!5004, !5005, !5006}
!5004 = !DILocalVariable(name: "this", arg: 1, scope: !5002, type: !4977, flags: DIFlagArtificial | DIFlagObjectPointer)
!5005 = !DILocalVariable(name: "data", arg: 2, scope: !5002, file: !744, line: 164, type: !335)
!5006 = !DILocalVariable(name: "maxSize", arg: 3, scope: !5002, file: !744, line: 164, type: !42)
!5007 = !DILocation(line: 0, scope: !5002)
!5008 = !DILocation(line: 166, column: 9, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5002, file: !744, line: 166, column: 9)
!5010 = !DILocation(line: 166, column: 24, scope: !5009)
!5011 = !DILocation(line: 166, column: 9, scope: !5002)
!5012 = !DILocation(line: 167, column: 16, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5009, file: !744, line: 166, column: 41)
!5014 = !DILocation(line: 167, column: 24, scope: !5013)
!5015 = !DILocation(line: 167, column: 9, scope: !5013)
!5016 = !DILocation(line: 171, column: 1, scope: !5002)
!5017 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada12ATCommDeviceD1Ev", scope: !747, file: !747, line: 46, type: !5018, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !743, retainedNodes: !173)
!5018 = !DISubroutineType(types: !173)
!5019 = !DILocation(line: 0, scope: !5017)
!5020 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada12ATCommDeviceD0Ev", scope: !747, file: !747, line: 46, type: !5018, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !743, retainedNodes: !173)
!5021 = !DILocation(line: 0, scope: !5020)
!5022 = distinct !DISubprogram(name: "ATCommDevice", linkageName: "_ZN6Cicada12ATCommDeviceC2ERNS_15IBufferedSerialEPhS3_y", scope: !746, file: !744, line: 38, type: !832, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !743, declaration: !831, retainedNodes: !5023)
!5023 = !{!5024, !5025, !5026, !5027, !5028}
!5024 = !DILocalVariable(name: "this", arg: 1, scope: !5022, type: !4977, flags: DIFlagArtificial | DIFlagObjectPointer)
!5025 = !DILocalVariable(name: "serial", arg: 2, scope: !5022, file: !744, line: 39, type: !753)
!5026 = !DILocalVariable(name: "readBuffer", arg: 3, scope: !5022, file: !744, line: 39, type: !59)
!5027 = !DILocalVariable(name: "writeBuffer", arg: 4, scope: !5022, file: !744, line: 39, type: !59)
!5028 = !DILocalVariable(name: "bufferSize", arg: 5, scope: !5022, file: !744, line: 39, type: !42)
!5029 = !DILocation(line: 0, scope: !5022)
!5030 = !DILocation(line: 41, column: 1, scope: !5022)
!5031 = !DILocation(line: 40, column: 5, scope: !5022)
!5032 = !DILocation(line: 40, column: 56, scope: !5022)
!5033 = !DILocation(line: 41, column: 2, scope: !5022)
!5034 = distinct !DISubprogram(name: "ATCommDevice", linkageName: "_ZN6Cicada12ATCommDeviceC2ERNS_15IBufferedSerialEPhS3_yy", scope: !746, file: !744, line: 43, type: !836, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !743, declaration: !835, retainedNodes: !5035)
!5035 = !{!5036, !5037, !5038, !5039, !5040, !5041}
!5036 = !DILocalVariable(name: "this", arg: 1, scope: !5034, type: !4977, flags: DIFlagArtificial | DIFlagObjectPointer)
!5037 = !DILocalVariable(name: "serial", arg: 2, scope: !5034, file: !744, line: 43, type: !753)
!5038 = !DILocalVariable(name: "readBuffer", arg: 3, scope: !5034, file: !744, line: 43, type: !59)
!5039 = !DILocalVariable(name: "writeBuffer", arg: 4, scope: !5034, file: !744, line: 43, type: !59)
!5040 = !DILocalVariable(name: "readBufferSize", arg: 5, scope: !5034, file: !744, line: 44, type: !42)
!5041 = !DILocalVariable(name: "writeBufferSize", arg: 6, scope: !5034, file: !744, line: 44, type: !42)
!5042 = !DILocation(line: 0, scope: !5034)
!5043 = !DILocation(line: 46, column: 1, scope: !5034)
!5044 = !DILocation(line: 45, column: 5, scope: !5034)
!5045 = !DILocation(line: 45, column: 77, scope: !5034)
!5046 = !DILocation(line: 46, column: 2, scope: !5034)
!5047 = distinct !DISubprogram(name: "logStates", linkageName: "_ZN6Cicada12ATCommDevice9logStatesEaa", scope: !746, file: !744, line: 48, type: !848, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !743, declaration: !847, retainedNodes: !5048)
!5048 = !{!5049, !5050, !5051}
!5049 = !DILocalVariable(name: "this", arg: 1, scope: !5047, type: !4977, flags: DIFlagArtificial | DIFlagObjectPointer)
!5050 = !DILocalVariable(name: "sendState", arg: 2, scope: !5047, file: !744, line: 48, type: !193)
!5051 = !DILocalVariable(name: "replyState", arg: 3, scope: !5047, file: !744, line: 48, type: !193)
!5052 = !DILocation(line: 0, scope: !5047)
!5053 = !DILocation(line: 62, column: 1, scope: !5047)
!5054 = distinct !DISubprogram(name: "flushReadBuffer", linkageName: "_ZN6Cicada12ATCommDevice15flushReadBufferEv", scope: !746, file: !744, line: 64, type: !839, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !743, declaration: !861, retainedNodes: !5055)
!5055 = !{!5056}
!5056 = !DILocalVariable(name: "this", arg: 1, scope: !5054, type: !4977, flags: DIFlagArtificial | DIFlagObjectPointer)
!5057 = !DILocation(line: 0, scope: !5054)
!5058 = !DILocation(line: 66, column: 28, scope: !5054)
!5059 = !DILocation(line: 66, column: 12, scope: !5054)
!5060 = !{!4998, !4990, i64 224}
!5061 = !DILocation(line: 66, column: 25, scope: !5054)
!5062 = !DILocation(line: 66, column: 36, scope: !5054)
!5063 = !DILocation(line: 66, column: 5, scope: !5054)
!5064 = !DILocation(line: 67, column: 9, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !5054, file: !744, line: 66, column: 54)
!5066 = !DILocation(line: 67, column: 17, scope: !5065)
!5067 = !DILocation(line: 68, column: 21, scope: !5065)
!5068 = distinct !{!5068, !5063, !5069, !2571, !2572}
!5069 = !DILocation(line: 69, column: 5, scope: !5054)
!5070 = !DILocation(line: 70, column: 5, scope: !5054)
!5071 = !DILocation(line: 70, column: 21, scope: !5054)
!5072 = !{!4998, !4990, i64 216}
!5073 = !DILocation(line: 72, column: 9, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5054, file: !744, line: 72, column: 9)
!5075 = !DILocation(line: 72, column: 22, scope: !5074)
!5076 = !DILocation(line: 72, column: 9, scope: !5054)
!5077 = !DILocation(line: 73, column: 9, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5074, file: !744, line: 72, column: 28)
!5079 = !DILocation(line: 73, column: 24, scope: !5078)
!5080 = !DILocation(line: 74, column: 5, scope: !5078)
!5081 = !DILocation(line: 75, column: 1, scope: !5054)
!5082 = distinct !DISubprogram(name: "handleDisconnect", linkageName: "_ZN6Cicada12ATCommDevice16handleDisconnectEa", scope: !746, file: !744, line: 77, type: !851, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !743, declaration: !850, retainedNodes: !5083)
!5083 = !{!5084, !5085}
!5084 = !DILocalVariable(name: "this", arg: 1, scope: !5082, type: !4977, flags: DIFlagArtificial | DIFlagObjectPointer)
!5085 = !DILocalVariable(name: "nextState", arg: 2, scope: !5082, file: !744, line: 77, type: !193)
!5086 = !DILocation(line: 0, scope: !5082)
!5087 = !DILocation(line: 79, column: 9, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5082, file: !744, line: 79, column: 9)
!5089 = !DILocation(line: 79, column: 24, scope: !5088)
!5090 = !DILocation(line: 79, column: 9, scope: !5082)
!5091 = !DILocation(line: 80, column: 24, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5088, file: !744, line: 79, column: 46)
!5093 = !DILocation(line: 81, column: 9, scope: !5092)
!5094 = !DILocation(line: 81, column: 20, scope: !5092)
!5095 = !{!4998, !2233, i64 206}
!5096 = !DILocation(line: 83, column: 9, scope: !5092)
!5097 = !DILocation(line: 87, column: 1, scope: !5082)
!5098 = distinct !DISubprogram(name: "handleConnect", linkageName: "_ZN6Cicada12ATCommDevice13handleConnectEa", scope: !746, file: !744, line: 89, type: !851, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !743, declaration: !853, retainedNodes: !5099)
!5099 = !{!5100, !5101}
!5100 = !DILocalVariable(name: "this", arg: 1, scope: !5098, type: !4977, flags: DIFlagArtificial | DIFlagObjectPointer)
!5101 = !DILocalVariable(name: "nextState", arg: 2, scope: !5098, file: !744, line: 89, type: !193)
!5102 = !DILocation(line: 0, scope: !5098)
!5103 = !DILocation(line: 91, column: 9, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5098, file: !744, line: 91, column: 9)
!5105 = !DILocation(line: 91, column: 24, scope: !5104)
!5106 = !DILocation(line: 91, column: 9, scope: !5098)
!5107 = !DILocation(line: 92, column: 24, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5104, file: !744, line: 91, column: 43)
!5109 = !DILocation(line: 93, column: 9, scope: !5108)
!5110 = !DILocation(line: 93, column: 20, scope: !5108)
!5111 = !DILocation(line: 95, column: 9, scope: !5108)
!5112 = !DILocation(line: 99, column: 1, scope: !5098)
!5113 = distinct !DISubprogram(name: "prepareSending", linkageName: "_ZN6Cicada12ATCommDevice14prepareSendingEb", scope: !746, file: !744, line: 101, type: !858, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !743, declaration: !857, retainedNodes: !5114)
!5114 = !{!5115, !5116, !5117}
!5115 = !DILocalVariable(name: "this", arg: 1, scope: !5113, type: !4977, flags: DIFlagArtificial | DIFlagObjectPointer)
!5116 = !DILocalVariable(name: "sendChannel", arg: 2, scope: !5113, file: !744, line: 101, type: !55)
!5117 = !DILocalVariable(name: "sizeStr", scope: !5113, file: !744, line: 118, type: !5118)
!5118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 48, elements: !5119)
!5119 = !{!5120}
!5120 = !DISubrange(count: 6)
!5121 = !DILocation(line: 0, scope: !5113)
!5122 = !DILocation(line: 103, column: 9, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5113, file: !744, line: 103, column: 9)
!5124 = !DILocation(line: 103, column: 17, scope: !5123)
!5125 = !DILocation(line: 103, column: 34, scope: !5123)
!5126 = !DILocation(line: 103, column: 9, scope: !5113)
!5127 = !DILocation(line: 106, column: 21, scope: !5113)
!5128 = !DILocation(line: 106, column: 34, scope: !5113)
!5129 = !DILocation(line: 106, column: 5, scope: !5113)
!5130 = !DILocation(line: 106, column: 19, scope: !5113)
!5131 = !{!4998, !4990, i64 208}
!5132 = !DILocation(line: 107, column: 25, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5113, file: !744, line: 107, column: 9)
!5134 = !DILocation(line: 107, column: 33, scope: !5133)
!5135 = !DILocation(line: 107, column: 50, scope: !5133)
!5136 = !DILocation(line: 107, column: 23, scope: !5133)
!5137 = !DILocation(line: 107, column: 9, scope: !5113)
!5138 = !DILocation(line: 108, column: 25, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5133, file: !744, line: 107, column: 73)
!5140 = !DILocation(line: 108, column: 33, scope: !5139)
!5141 = !DILocation(line: 108, column: 50, scope: !5139)
!5142 = !DILocation(line: 108, column: 23, scope: !5139)
!5143 = !DILocation(line: 109, column: 5, scope: !5139)
!5144 = !DILocation(line: 112, column: 5, scope: !5113)
!5145 = !DILocation(line: 112, column: 13, scope: !5113)
!5146 = !DILocation(line: 113, column: 9, scope: !5113)
!5147 = !DILocation(line: 114, column: 9, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5149, file: !744, line: 113, column: 22)
!5149 = distinct !DILexicalBlock(scope: !5113, file: !744, line: 113, column: 9)
!5150 = !DILocation(line: 114, column: 17, scope: !5148)
!5151 = !DILocation(line: 115, column: 5, scope: !5148)
!5152 = !DILocation(line: 118, column: 5, scope: !5113)
!5153 = !DILocation(line: 118, column: 10, scope: !5113)
!5154 = !DILocation(line: 119, column: 51, scope: !5113)
!5155 = !DILocation(line: 119, column: 5, scope: !5113)
!5156 = !DILocation(line: 120, column: 5, scope: !5113)
!5157 = !DILocation(line: 120, column: 13, scope: !5113)
!5158 = !DILocation(line: 122, column: 5, scope: !5113)
!5159 = !DILocation(line: 122, column: 19, scope: !5113)
!5160 = !{!4988, !2232, i64 136}
!5161 = !DILocation(line: 125, column: 1, scope: !5113)
!5162 = distinct !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv", scope: !1599, file: !1600, line: 174, type: !1639, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !743, declaration: !1638, retainedNodes: !5163)
!5163 = !{!5164}
!5164 = !DILocalVariable(name: "this", arg: 1, scope: !5162, type: !5165, flags: DIFlagArtificial | DIFlagObjectPointer)
!5165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32)
!5166 = !DILocation(line: 0, scope: !5162)
!5167 = !DILocation(line: 176, column: 16, scope: !5162)
!5168 = !{!4989, !4990, i64 24}
!5169 = !DILocation(line: 176, column: 9, scope: !5162)
!5170 = distinct !DISubprogram(name: "sendData", linkageName: "_ZN6Cicada12ATCommDevice8sendDataEv", scope: !746, file: !744, line: 127, type: !839, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !743, declaration: !860, retainedNodes: !5171)
!5171 = !{!5172}
!5172 = !DILocalVariable(name: "this", arg: 1, scope: !5170, type: !4977, flags: DIFlagArtificial | DIFlagObjectPointer)
!5173 = !DILocation(line: 0, scope: !5170)
!5174 = !DILocation(line: 129, column: 25, scope: !5170)
!5175 = !DILocation(line: 129, column: 12, scope: !5170)
!5176 = !DILocation(line: 129, column: 5, scope: !5170)
!5177 = !DILocation(line: 130, column: 9, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5170, file: !744, line: 129, column: 29)
!5179 = !DILocation(line: 130, column: 36, scope: !5178)
!5180 = !DILocation(line: 130, column: 17, scope: !5178)
!5181 = distinct !{!5181, !5176, !5182, !2571, !2572}
!5182 = !DILocation(line: 131, column: 5, scope: !5170)
!5183 = !DILocation(line: 132, column: 1, scope: !5170)
!5184 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIhE4pullEv", scope: !1599, file: !1600, line: 124, type: !1628, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !743, declaration: !1627, retainedNodes: !5185)
!5185 = !{!5186, !5187}
!5186 = !DILocalVariable(name: "this", arg: 1, scope: !5184, type: !2347, flags: DIFlagArtificial | DIFlagObjectPointer)
!5187 = !DILocalVariable(name: "data", scope: !5184, file: !1600, line: 126, type: !62)
!5188 = !DILocation(line: 0, scope: !5184)
!5189 = !DILocation(line: 126, column: 18, scope: !5184)
!5190 = !{!4989, !2232, i64 40}
!5191 = !DILocation(line: 126, column: 26, scope: !5184)
!5192 = !{!4989, !4990, i64 16}
!5193 = !DILocation(line: 127, column: 9, scope: !5184)
!5194 = !DILocation(line: 128, column: 13, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5184, file: !1600, line: 128, column: 13)
!5196 = !DILocation(line: 128, column: 28, scope: !5195)
!5197 = !DILocation(line: 128, column: 13, scope: !5184)
!5198 = !DILocation(line: 129, column: 27, scope: !5195)
!5199 = !DILocation(line: 129, column: 13, scope: !5195)
!5200 = !DILocation(line: 131, column: 9, scope: !5184)
!5201 = distinct !DISubprogram(name: "incrementOrResetHead", linkageName: "_ZN6Cicada14CircularBufferIhE20incrementOrResetHeadERy", scope: !1599, file: !1600, line: 202, type: !1644, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !743, declaration: !1643, retainedNodes: !5202)
!5202 = !{!5203, !5204}
!5203 = !DILocalVariable(name: "this", arg: 1, scope: !5201, type: !2347, flags: DIFlagArtificial | DIFlagObjectPointer)
!5204 = !DILocalVariable(name: "head", arg: 2, scope: !5201, file: !1600, line: 202, type: !1646)
!5205 = !DILocation(line: 0, scope: !5201)
!5206 = !DILocation(line: 204, column: 13, scope: !5201)
!5207 = !{!4990, !4990, i64 0}
!5208 = !DILocation(line: 205, column: 21, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5201, file: !1600, line: 205, column: 13)
!5210 = !{!4989, !4990, i64 32}
!5211 = !DILocation(line: 205, column: 18, scope: !5209)
!5212 = !DILocation(line: 205, column: 13, scope: !5201)
!5213 = !DILocation(line: 207, column: 5, scope: !5201)
!5214 = distinct !DISubprogram(name: "receive", linkageName: "_ZN6Cicada12ATCommDevice7receiveEv", scope: !746, file: !744, line: 134, type: !863, scopeLine: 135, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !743, declaration: !862, retainedNodes: !5215)
!5215 = !{!5216}
!5216 = !DILocalVariable(name: "this", arg: 1, scope: !5214, type: !4977, flags: DIFlagArtificial | DIFlagObjectPointer)
!5217 = !DILocation(line: 0, scope: !5214)
!5218 = !DILocation(line: 136, column: 9, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5214, file: !744, line: 136, column: 9)
!5220 = !DILocation(line: 136, column: 17, scope: !5219)
!5221 = !DILocation(line: 136, column: 37, scope: !5219)
!5222 = !DILocation(line: 136, column: 34, scope: !5219)
!5223 = !DILocation(line: 136, column: 9, scope: !5214)
!5224 = !DILocation(line: 137, column: 16, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5219, file: !744, line: 136, column: 51)
!5226 = !DILocation(line: 137, column: 9, scope: !5225)
!5227 = !DILocation(line: 138, column: 30, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5225, file: !744, line: 137, column: 30)
!5229 = !DILocation(line: 138, column: 38, scope: !5228)
!5230 = !DILocation(line: 138, column: 25, scope: !5228)
!5231 = !DILocation(line: 139, column: 25, scope: !5228)
!5232 = distinct !{!5232, !5226, !5233, !2571, !2572}
!5233 = !DILocation(line: 140, column: 9, scope: !5225)
!5234 = !DILocation(line: 141, column: 9, scope: !5225)
!5235 = !DILocation(line: 141, column: 24, scope: !5225)
!5236 = !DILocation(line: 143, column: 9, scope: !5225)
!5237 = !DILocation(line: 147, column: 1, scope: !5214)
!5238 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIhE4pushEh", scope: !1599, file: !1600, line: 88, type: !1622, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !743, declaration: !1621, retainedNodes: !5239)
!5239 = !{!5240, !5241}
!5240 = !DILocalVariable(name: "this", arg: 1, scope: !5238, type: !2347, flags: DIFlagArtificial | DIFlagObjectPointer)
!5241 = !DILocalVariable(name: "data", arg: 2, scope: !5238, file: !1600, line: 88, type: !62)
!5242 = !DILocation(line: 0, scope: !5238)
!5243 = !DILocation(line: 90, column: 9, scope: !5238)
!5244 = !DILocation(line: 90, column: 17, scope: !5238)
!5245 = !{!4989, !4990, i64 8}
!5246 = !DILocation(line: 90, column: 29, scope: !5238)
!5247 = !DILocation(line: 91, column: 9, scope: !5238)
!5248 = !DILocation(line: 92, column: 13, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5238, file: !1600, line: 92, column: 13)
!5250 = !DILocation(line: 92, column: 30, scope: !5249)
!5251 = !DILocation(line: 92, column: 28, scope: !5249)
!5252 = !DILocation(line: 92, column: 13, scope: !5238)
!5253 = !DILocation(line: 93, column: 27, scope: !5249)
!5254 = !DILocation(line: 93, column: 13, scope: !5249)
!5255 = !DILocation(line: 94, column: 5, scope: !5238)
!5256 = distinct !DISubprogram(name: "sendCommand", linkageName: "_ZN6Cicada12ATCommDevice11sendCommandEPKc", scope: !746, file: !744, line: 149, type: !855, scopeLine: 150, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !743, declaration: !854, retainedNodes: !5257)
!5257 = !{!5258, !5259}
!5258 = !DILocalVariable(name: "this", arg: 1, scope: !5256, type: !4977, flags: DIFlagArtificial | DIFlagObjectPointer)
!5259 = !DILocalVariable(name: "cmd", arg: 2, scope: !5256, file: !744, line: 149, type: !86)
!5260 = !DILocation(line: 0, scope: !5256)
!5261 = !DILocation(line: 151, column: 5, scope: !5256)
!5262 = !DILocation(line: 151, column: 13, scope: !5256)
!5263 = !DILocation(line: 152, column: 5, scope: !5256)
!5264 = !DILocation(line: 152, column: 35, scope: !5256)
!5265 = !DILocation(line: 152, column: 13, scope: !5256)
!5266 = !DILocation(line: 153, column: 1, scope: !5256)
!5267 = distinct !DISubprogram(name: "~IPCommDevice", linkageName: "_ZN6Cicada12IPCommDeviceD0Ev", scope: !1594, file: !751, line: 54, type: !1664, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !1663, retainedNodes: !5268)
!5268 = !{!5269}
!5269 = !DILocalVariable(name: "this", arg: 1, scope: !5267, type: !5270, flags: DIFlagArtificial | DIFlagObjectPointer)
!5270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 32)
!5271 = !DILocation(line: 0, scope: !5267)
!5272 = !DILocation(line: 54, column: 29, scope: !5267)
!5273 = distinct !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada12IPCommDevice14bytesAvailableEv", scope: !1594, file: !1591, line: 86, type: !1676, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !1675, retainedNodes: !5274)
!5274 = !{!5275}
!5275 = !DILocalVariable(name: "this", arg: 1, scope: !5273, type: !5276, flags: DIFlagArtificial | DIFlagObjectPointer)
!5276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 32)
!5277 = !DILocation(line: 0, scope: !5273)
!5278 = !DILocation(line: 88, column: 12, scope: !5273)
!5279 = !DILocation(line: 88, column: 24, scope: !5273)
!5280 = !DILocation(line: 88, column: 5, scope: !5273)
!5281 = distinct !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada12IPCommDevice14spaceAvailableEv", scope: !1594, file: !1591, line: 91, type: !1676, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !1680, retainedNodes: !5282)
!5282 = !{!5283}
!5283 = !DILocalVariable(name: "this", arg: 1, scope: !5281, type: !5276, flags: DIFlagArtificial | DIFlagObjectPointer)
!5284 = !DILocation(line: 0, scope: !5281)
!5285 = !DILocation(line: 93, column: 9, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5281, file: !1591, line: 93, column: 9)
!5287 = !{!4988, !4992, i64 132}
!5288 = !DILocation(line: 93, column: 23, scope: !5286)
!5289 = !DILocation(line: 93, column: 9, scope: !5281)
!5290 = !DILocation(line: 96, column: 12, scope: !5281)
!5291 = !DILocation(line: 96, column: 25, scope: !5281)
!5292 = !DILocation(line: 96, column: 5, scope: !5281)
!5293 = !DILocation(line: 97, column: 1, scope: !5281)
!5294 = distinct !DISubprogram(name: "writeBufferProcessed", linkageName: "_ZNK6Cicada12IPCommDevice20writeBufferProcessedEv", scope: !1594, file: !1591, line: 112, type: !1688, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !1687, retainedNodes: !5295)
!5295 = !{!5296}
!5296 = !DILocalVariable(name: "this", arg: 1, scope: !5294, type: !5276, flags: DIFlagArtificial | DIFlagObjectPointer)
!5297 = !DILocation(line: 0, scope: !5294)
!5298 = !DILocation(line: 114, column: 12, scope: !5294)
!5299 = !DILocation(line: 114, column: 25, scope: !5294)
!5300 = !DILocation(line: 114, column: 42, scope: !5294)
!5301 = !DILocation(line: 114, column: 47, scope: !5294)
!5302 = !DILocation(line: 114, column: 5, scope: !5294)
!5303 = distinct !DISubprogram(name: "read", linkageName: "_ZN6Cicada12IPCommDevice4readEPhy", scope: !1594, file: !1591, line: 99, type: !1682, scopeLine: 100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !1681, retainedNodes: !5304)
!5304 = !{!5305, !5306, !5307}
!5305 = !DILocalVariable(name: "this", arg: 1, scope: !5303, type: !5270, flags: DIFlagArtificial | DIFlagObjectPointer)
!5306 = !DILocalVariable(name: "data", arg: 2, scope: !5303, file: !1591, line: 99, type: !59)
!5307 = !DILocalVariable(name: "maxSize", arg: 3, scope: !5303, file: !1591, line: 99, type: !42)
!5308 = !DILocation(line: 0, scope: !5303)
!5309 = !DILocation(line: 101, column: 12, scope: !5303)
!5310 = !DILocation(line: 101, column: 24, scope: !5303)
!5311 = !DILocation(line: 101, column: 5, scope: !5303)
!5312 = distinct !DISubprogram(name: "write", linkageName: "_ZN6Cicada12IPCommDevice5writeEPKhy", scope: !1594, file: !1591, line: 104, type: !1685, scopeLine: 105, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !1684, retainedNodes: !5313)
!5313 = !{!5314, !5315, !5316}
!5314 = !DILocalVariable(name: "this", arg: 1, scope: !5312, type: !5270, flags: DIFlagArtificial | DIFlagObjectPointer)
!5315 = !DILocalVariable(name: "data", arg: 2, scope: !5312, file: !1591, line: 104, type: !66)
!5316 = !DILocalVariable(name: "size", arg: 3, scope: !5312, file: !1591, line: 104, type: !42)
!5317 = !DILocation(line: 0, scope: !5312)
!5318 = !DILocation(line: 106, column: 9, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5312, file: !1591, line: 106, column: 9)
!5320 = !DILocation(line: 106, column: 23, scope: !5319)
!5321 = !DILocation(line: 106, column: 9, scope: !5312)
!5322 = !DILocation(line: 109, column: 12, scope: !5312)
!5323 = !DILocation(line: 109, column: 25, scope: !5312)
!5324 = !DILocation(line: 109, column: 5, scope: !5312)
!5325 = !DILocation(line: 110, column: 1, scope: !5312)
!5326 = distinct !DISubprogram(name: "connect", linkageName: "_ZN6Cicada12IPCommDevice7connectEv", scope: !1594, file: !1591, line: 57, type: !1670, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !1669, retainedNodes: !5327)
!5327 = !{!5328}
!5328 = !DILocalVariable(name: "this", arg: 1, scope: !5326, type: !5270, flags: DIFlagArtificial | DIFlagObjectPointer)
!5329 = !DILocation(line: 0, scope: !5326)
!5330 = !DILocation(line: 59, column: 9, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5326, file: !1591, line: 59, column: 9)
!5332 = !{!4988, !2232, i64 124}
!5333 = !DILocation(line: 59, column: 15, scope: !5331)
!5334 = !DILocation(line: 59, column: 23, scope: !5331)
!5335 = !DILocation(line: 62, column: 5, scope: !5326)
!5336 = !DILocation(line: 62, column: 20, scope: !5326)
!5337 = !DILocation(line: 64, column: 5, scope: !5326)
!5338 = !DILocation(line: 65, column: 1, scope: !5326)
!5339 = distinct !DISubprogram(name: "disconnect", linkageName: "_ZN6Cicada12IPCommDevice10disconnectEv", scope: !1594, file: !1591, line: 67, type: !1664, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !1672, retainedNodes: !5340)
!5340 = !{!5341}
!5341 = !DILocalVariable(name: "this", arg: 1, scope: !5339, type: !5270, flags: DIFlagArtificial | DIFlagObjectPointer)
!5342 = !DILocation(line: 0, scope: !5339)
!5343 = !DILocation(line: 69, column: 9, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5339, file: !1591, line: 69, column: 9)
!5345 = !DILocation(line: 69, column: 9, scope: !5339)
!5346 = !DILocation(line: 72, column: 5, scope: !5339)
!5347 = !DILocation(line: 72, column: 20, scope: !5339)
!5348 = !DILocation(line: 73, column: 1, scope: !5339)
!5349 = distinct !DISubprogram(name: "isConnected", linkageName: "_ZN6Cicada12IPCommDevice11isConnectedEv", scope: !1594, file: !1591, line: 75, type: !1670, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !1673, retainedNodes: !5350)
!5350 = !{!5351}
!5351 = !DILocalVariable(name: "this", arg: 1, scope: !5349, type: !5270, flags: DIFlagArtificial | DIFlagObjectPointer)
!5352 = !DILocation(line: 0, scope: !5349)
!5353 = !DILocation(line: 77, column: 12, scope: !5349)
!5354 = !DILocation(line: 77, column: 39, scope: !5349)
!5355 = !DILocation(line: 77, column: 5, scope: !5349)
!5356 = distinct !DISubprogram(name: "isIdle", linkageName: "_ZN6Cicada12IPCommDevice6isIdleEv", scope: !1594, file: !1591, line: 81, type: !1670, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !1674, retainedNodes: !5357)
!5357 = !{!5358}
!5358 = !DILocalVariable(name: "this", arg: 1, scope: !5356, type: !5270, flags: DIFlagArtificial | DIFlagObjectPointer)
!5359 = !DILocation(line: 0, scope: !5356)
!5360 = !DILocation(line: 83, column: 12, scope: !5356)
!5361 = !DILocation(line: 83, column: 26, scope: !5356)
!5362 = !DILocation(line: 83, column: 5, scope: !5356)
!5363 = distinct !DISubprogram(name: "setHostPort", linkageName: "_ZN6Cicada12IPCommDevice11setHostPortEPKctNS_13IIPCommDevice14ConnectionTypeE", scope: !1594, file: !1591, line: 50, type: !1667, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !1666, retainedNodes: !5364)
!5364 = !{!5365, !5366, !5367, !5368}
!5365 = !DILocalVariable(name: "this", arg: 1, scope: !5363, type: !5270, flags: DIFlagArtificial | DIFlagObjectPointer)
!5366 = !DILocalVariable(name: "host", arg: 2, scope: !5363, file: !1591, line: 50, type: !86)
!5367 = !DILocalVariable(name: "port", arg: 3, scope: !5363, file: !1591, line: 50, type: !89)
!5368 = !DILocalVariable(name: "type", arg: 4, scope: !5363, file: !1591, line: 50, type: !16)
!5369 = !DILocation(line: 0, scope: !5363)
!5370 = !DILocation(line: 52, column: 5, scope: !5363)
!5371 = !DILocation(line: 52, column: 11, scope: !5363)
!5372 = !DILocation(line: 53, column: 5, scope: !5363)
!5373 = !DILocation(line: 53, column: 11, scope: !5363)
!5374 = !{!4988, !2365, i64 128}
!5375 = !DILocation(line: 54, column: 5, scope: !5363)
!5376 = !DILocation(line: 54, column: 11, scope: !5363)
!5377 = !{!4988, !4991, i64 120}
!5378 = !DILocation(line: 55, column: 1, scope: !5363)
!5379 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada12IPCommDeviceD1Ev", scope: !751, file: !751, line: 54, type: !5018, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, retainedNodes: !173)
!5380 = !DILocation(line: 0, scope: !5379)
!5381 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada12IPCommDeviceD0Ev", scope: !751, file: !751, line: 54, type: !5018, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, retainedNodes: !173)
!5382 = !DILocation(line: 0, scope: !5381)
!5383 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIhE4pushEPKhy", scope: !1599, file: !1600, line: 65, type: !1617, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !1616, retainedNodes: !5384)
!5384 = !{!5385, !5386, !5387, !5388}
!5385 = !DILocalVariable(name: "this", arg: 1, scope: !5383, type: !2347, flags: DIFlagArtificial | DIFlagObjectPointer)
!5386 = !DILocalVariable(name: "data", arg: 2, scope: !5383, file: !1600, line: 65, type: !1619)
!5387 = !DILocalVariable(name: "size", arg: 3, scope: !5383, file: !1600, line: 65, type: !42)
!5388 = !DILocalVariable(name: "writeCount", scope: !5383, file: !1600, line: 70, type: !42)
!5389 = !DILocation(line: 0, scope: !5383)
!5390 = !DILocation(line: 67, column: 20, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5383, file: !1600, line: 67, column: 13)
!5392 = !DILocation(line: 67, column: 18, scope: !5391)
!5393 = !DILocation(line: 67, column: 13, scope: !5383)
!5394 = !DILocation(line: 68, column: 20, scope: !5391)
!5395 = !DILocation(line: 68, column: 13, scope: !5391)
!5396 = !DILocation(line: 72, column: 27, scope: !5383)
!5397 = !DILocation(line: 72, column: 9, scope: !5383)
!5398 = !DILocation(line: 73, column: 50, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5383, file: !1600, line: 72, column: 35)
!5400 = !DILocation(line: 73, column: 35, scope: !5399)
!5401 = !DILocation(line: 73, column: 13, scope: !5399)
!5402 = !DILocation(line: 73, column: 21, scope: !5399)
!5403 = !DILocation(line: 73, column: 33, scope: !5399)
!5404 = !DILocation(line: 74, column: 13, scope: !5399)
!5405 = distinct !{!5405, !5397, !5406, !2571, !2572}
!5406 = !DILocation(line: 75, column: 9, scope: !5383)
!5407 = !DILocation(line: 76, column: 9, scope: !5383)
!5408 = !DILocation(line: 76, column: 24, scope: !5383)
!5409 = !DILocation(line: 78, column: 9, scope: !5383)
!5410 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIhE4pullEPhy", scope: !1599, file: !1600, line: 102, type: !1625, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !1624, retainedNodes: !5411)
!5411 = !{!5412, !5413, !5414, !5415}
!5412 = !DILocalVariable(name: "this", arg: 1, scope: !5410, type: !2347, flags: DIFlagArtificial | DIFlagObjectPointer)
!5413 = !DILocalVariable(name: "data", arg: 2, scope: !5410, file: !1600, line: 102, type: !918)
!5414 = !DILocalVariable(name: "size", arg: 3, scope: !5410, file: !1600, line: 102, type: !42)
!5415 = !DILocalVariable(name: "readCount", scope: !5410, file: !1600, line: 107, type: !42)
!5416 = !DILocation(line: 0, scope: !5410)
!5417 = !DILocation(line: 104, column: 20, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5410, file: !1600, line: 104, column: 13)
!5419 = !DILocation(line: 104, column: 18, scope: !5418)
!5420 = !DILocation(line: 104, column: 13, scope: !5410)
!5421 = !DILocation(line: 105, column: 20, scope: !5418)
!5422 = !DILocation(line: 105, column: 13, scope: !5418)
!5423 = !DILocation(line: 109, column: 26, scope: !5410)
!5424 = !DILocation(line: 109, column: 9, scope: !5410)
!5425 = !DILocation(line: 110, column: 33, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5410, file: !1600, line: 109, column: 34)
!5427 = !DILocation(line: 110, column: 41, scope: !5426)
!5428 = !DILocation(line: 110, column: 27, scope: !5426)
!5429 = !DILocation(line: 110, column: 13, scope: !5426)
!5430 = !DILocation(line: 110, column: 31, scope: !5426)
!5431 = !DILocation(line: 111, column: 13, scope: !5426)
!5432 = distinct !{!5432, !5424, !5433, !2571, !2572}
!5433 = !DILocation(line: 112, column: 9, scope: !5410)
!5434 = !DILocation(line: 113, column: 9, scope: !5410)
!5435 = !DILocation(line: 113, column: 24, scope: !5410)
!5436 = !DILocation(line: 115, column: 9, scope: !5410)
!5437 = distinct !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv", scope: !1599, file: !1600, line: 182, type: !1639, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !1641, retainedNodes: !5438)
!5438 = !{!5439}
!5439 = !DILocalVariable(name: "this", arg: 1, scope: !5437, type: !5165, flags: DIFlagArtificial | DIFlagObjectPointer)
!5440 = !DILocation(line: 0, scope: !5437)
!5441 = !DILocation(line: 184, column: 16, scope: !5437)
!5442 = !DILocation(line: 184, column: 30, scope: !5437)
!5443 = !DILocation(line: 184, column: 28, scope: !5437)
!5444 = !DILocation(line: 184, column: 9, scope: !5437)
!5445 = distinct !DISubprogram(name: "IPCommDevice", linkageName: "_ZN6Cicada12IPCommDeviceC2EPhS1_y", scope: !1594, file: !1591, line: 29, type: !1657, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !1656, retainedNodes: !5446)
!5446 = !{!5447, !5448, !5449, !5450}
!5447 = !DILocalVariable(name: "this", arg: 1, scope: !5445, type: !5270, flags: DIFlagArtificial | DIFlagObjectPointer)
!5448 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !5445, file: !1591, line: 29, type: !59)
!5449 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !5445, file: !1591, line: 29, type: !59)
!5450 = !DILocalVariable(name: "bufferSize", arg: 4, scope: !5445, file: !1591, line: 29, type: !42)
!5451 = !DILocation(line: 0, scope: !5445)
!5452 = !DILocation(line: 37, column: 1, scope: !5445)
!5453 = !DILocation(line: 29, column: 15, scope: !5445)
!5454 = !DILocation(line: 30, column: 5, scope: !5445)
!5455 = !DILocation(line: 31, column: 5, scope: !5445)
!5456 = !DILocation(line: 32, column: 5, scope: !5445)
!5457 = !DILocation(line: 33, column: 5, scope: !5445)
!5458 = !DILocation(line: 34, column: 5, scope: !5445)
!5459 = !DILocation(line: 35, column: 5, scope: !5445)
!5460 = !DILocation(line: 36, column: 5, scope: !5445)
!5461 = !DILocation(line: 37, column: 2, scope: !5445)
!5462 = distinct !DISubprogram(name: "IIPCommDevice", linkageName: "_ZN6Cicada13IIPCommDeviceC2Ev", scope: !18, file: !17, line: 32, type: !80, scopeLine: 32, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !5463, retainedNodes: !5464)
!5463 = !DISubprogram(name: "IIPCommDevice", scope: !18, type: !80, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5464 = !{!5465}
!5465 = !DILocalVariable(name: "this", arg: 1, scope: !5462, type: !5466, flags: DIFlagArtificial | DIFlagObjectPointer)
!5466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18, size: 32)
!5467 = !DILocation(line: 0, scope: !5462)
!5468 = !DILocation(line: 32, column: 7, scope: !5462)
!5469 = distinct !DISubprogram(name: "CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIhEC2EPhy", scope: !1599, file: !1600, line: 48, type: !1610, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !1609, retainedNodes: !5470)
!5470 = !{!5471, !5472, !5473}
!5471 = !DILocalVariable(name: "this", arg: 1, scope: !5469, type: !2347, flags: DIFlagArtificial | DIFlagObjectPointer)
!5472 = !DILocalVariable(name: "buffer", arg: 2, scope: !5469, file: !1600, line: 48, type: !918)
!5473 = !DILocalVariable(name: "bufferSize", arg: 3, scope: !5469, file: !1600, line: 48, type: !42)
!5474 = !DILocation(line: 0, scope: !5469)
!5475 = !DILocation(line: 54, column: 5, scope: !5469)
!5476 = !DILocation(line: 49, column: 9, scope: !5469)
!5477 = !DILocation(line: 52, column: 9, scope: !5469)
!5478 = !DILocation(line: 50, column: 9, scope: !5469)
!5479 = !DILocation(line: 53, column: 9, scope: !5469)
!5480 = !DILocation(line: 54, column: 7, scope: !5469)
!5481 = distinct !DISubprogram(name: "~CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIhED0Ev", scope: !1599, file: !1600, line: 56, type: !1614, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !1613, retainedNodes: !5482)
!5482 = !{!5483}
!5483 = !DILocalVariable(name: "this", arg: 1, scope: !5481, type: !2347, flags: DIFlagArtificial | DIFlagObjectPointer)
!5484 = !DILocation(line: 0, scope: !5481)
!5485 = !DILocation(line: 57, column: 5, scope: !5481)
!5486 = !DILocation(line: 57, column: 7, scope: !5481)
!5487 = distinct !DISubprogram(name: "read", linkageName: "_ZN6Cicada14CircularBufferIhE4readEv", scope: !1599, file: !1600, line: 140, type: !1628, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !1630, retainedNodes: !5488)
!5488 = !{!5489}
!5489 = !DILocalVariable(name: "this", arg: 1, scope: !5487, type: !2347, flags: DIFlagArtificial | DIFlagObjectPointer)
!5490 = !DILocation(line: 0, scope: !5487)
!5491 = !DILocation(line: 142, column: 16, scope: !5487)
!5492 = !DILocation(line: 142, column: 24, scope: !5487)
!5493 = !DILocation(line: 142, column: 9, scope: !5487)
!5494 = distinct !DISubprogram(name: "flush", linkageName: "_ZN6Cicada14CircularBufferIhE5flushEv", scope: !1599, file: !1600, line: 148, type: !1614, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !1631, retainedNodes: !5495)
!5495 = !{!5496}
!5496 = !DILocalVariable(name: "this", arg: 1, scope: !5494, type: !2347, flags: DIFlagArtificial | DIFlagObjectPointer)
!5497 = !DILocation(line: 0, scope: !5494)
!5498 = !DILocation(line: 150, column: 9, scope: !5494)
!5499 = !DILocation(line: 153, column: 5, scope: !5494)
!5500 = !DILocation(line: 151, column: 19, scope: !5494)
!5501 = distinct !DISubprogram(name: "isEmpty", linkageName: "_ZNK6Cicada14CircularBufferIhE7isEmptyEv", scope: !1599, file: !1600, line: 158, type: !1633, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !1632, retainedNodes: !5502)
!5502 = !{!5503}
!5503 = !DILocalVariable(name: "this", arg: 1, scope: !5501, type: !5165, flags: DIFlagArtificial | DIFlagObjectPointer)
!5504 = !DILocation(line: 0, scope: !5501)
!5505 = !DILocation(line: 160, column: 16, scope: !5501)
!5506 = !DILocation(line: 160, column: 31, scope: !5501)
!5507 = !DILocation(line: 160, column: 9, scope: !5501)
!5508 = distinct !DISubprogram(name: "isFull", linkageName: "_ZNK6Cicada14CircularBufferIhE6isFullEv", scope: !1599, file: !1600, line: 166, type: !1633, scopeLine: 167, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !1637, retainedNodes: !5509)
!5509 = !{!5510}
!5510 = !DILocalVariable(name: "this", arg: 1, scope: !5508, type: !5165, flags: DIFlagArtificial | DIFlagObjectPointer)
!5511 = !DILocation(line: 0, scope: !5508)
!5512 = !DILocation(line: 168, column: 16, scope: !5508)
!5513 = !DILocation(line: 168, column: 34, scope: !5508)
!5514 = !DILocation(line: 168, column: 31, scope: !5508)
!5515 = !DILocation(line: 168, column: 9, scope: !5508)
!5516 = distinct !DISubprogram(name: "size", linkageName: "_ZNK6Cicada14CircularBufferIhE4sizeEv", scope: !1599, file: !1600, line: 190, type: !1639, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !1642, retainedNodes: !5517)
!5517 = !{!5518}
!5518 = !DILocalVariable(name: "this", arg: 1, scope: !5516, type: !5165, flags: DIFlagArtificial | DIFlagObjectPointer)
!5519 = !DILocation(line: 0, scope: !5516)
!5520 = !DILocation(line: 192, column: 16, scope: !5516)
!5521 = !DILocation(line: 192, column: 9, scope: !5516)
!5522 = distinct !DISubprogram(name: "IStatefulDevice", linkageName: "_ZN6Cicada15IStatefulDeviceC2Ev", scope: !22, file: !23, line: 38, type: !69, scopeLine: 38, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !5523, retainedNodes: !5524)
!5523 = !DISubprogram(name: "IStatefulDevice", scope: !22, type: !69, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5524 = !{!5525}
!5525 = !DILocalVariable(name: "this", arg: 1, scope: !5522, type: !5526, flags: DIFlagArtificial | DIFlagObjectPointer)
!5526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 32)
!5527 = !DILocation(line: 0, scope: !5522)
!5528 = !DILocation(line: 38, column: 7, scope: !5522)
!5529 = distinct !DISubprogram(name: "~IIPCommDevice", linkageName: "_ZN6Cicada13IIPCommDeviceD0Ev", scope: !18, file: !17, line: 35, type: !80, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !79, retainedNodes: !5530)
!5530 = !{!5531}
!5531 = !DILocalVariable(name: "this", arg: 1, scope: !5529, type: !5466, flags: DIFlagArtificial | DIFlagObjectPointer)
!5532 = !DILocation(line: 0, scope: !5529)
!5533 = !DILocation(line: 35, column: 30, scope: !5529)
!5534 = distinct !DISubprogram(name: "ICommDevice", linkageName: "_ZN6Cicada11ICommDeviceC2Ev", scope: !26, file: !27, line: 43, type: !36, scopeLine: 43, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !5535, retainedNodes: !5536)
!5535 = !DISubprogram(name: "ICommDevice", scope: !26, type: !36, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5536 = !{!5537}
!5537 = !DILocalVariable(name: "this", arg: 1, scope: !5534, type: !2353, flags: DIFlagArtificial | DIFlagObjectPointer)
!5538 = !DILocation(line: 0, scope: !5534)
!5539 = !DILocation(line: 43, column: 7, scope: !5534)
!5540 = distinct !DISubprogram(name: "~IStatefulDevice", linkageName: "_ZN6Cicada15IStatefulDeviceD0Ev", scope: !22, file: !23, line: 41, type: !69, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !68, retainedNodes: !5541)
!5541 = !{!5542}
!5542 = !DILocalVariable(name: "this", arg: 1, scope: !5540, type: !5526, flags: DIFlagArtificial | DIFlagObjectPointer)
!5543 = !DILocation(line: 0, scope: !5540)
!5544 = !DILocation(line: 41, column: 32, scope: !5540)
!5545 = distinct !DISubprogram(name: "~ICommDevice", linkageName: "_ZN6Cicada11ICommDeviceD0Ev", scope: !26, file: !27, line: 46, type: !36, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !35, retainedNodes: !5546)
!5546 = !{!5547}
!5547 = !DILocalVariable(name: "this", arg: 1, scope: !5545, type: !2353, flags: DIFlagArtificial | DIFlagObjectPointer)
!5548 = !DILocation(line: 0, scope: !5545)
!5549 = !DILocation(line: 46, column: 28, scope: !5545)
!5550 = distinct !DISubprogram(name: "IPCommDevice", linkageName: "_ZN6Cicada12IPCommDeviceC2EPhS1_yy", scope: !1594, file: !1591, line: 39, type: !1661, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, declaration: !1660, retainedNodes: !5551)
!5551 = !{!5552, !5553, !5554, !5555, !5556}
!5552 = !DILocalVariable(name: "this", arg: 1, scope: !5550, type: !5270, flags: DIFlagArtificial | DIFlagObjectPointer)
!5553 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !5550, file: !1591, line: 40, type: !59)
!5554 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !5550, file: !1591, line: 40, type: !59)
!5555 = !DILocalVariable(name: "readBufferSize", arg: 4, scope: !5550, file: !1591, line: 40, type: !42)
!5556 = !DILocalVariable(name: "writeBufferSize", arg: 5, scope: !5550, file: !1591, line: 40, type: !42)
!5557 = !DILocation(line: 0, scope: !5550)
!5558 = !DILocation(line: 48, column: 1, scope: !5550)
!5559 = !DILocation(line: 39, column: 15, scope: !5550)
!5560 = !DILocation(line: 41, column: 5, scope: !5550)
!5561 = !DILocation(line: 42, column: 5, scope: !5550)
!5562 = !DILocation(line: 43, column: 5, scope: !5550)
!5563 = !DILocation(line: 44, column: 5, scope: !5550)
!5564 = !DILocation(line: 45, column: 5, scope: !5550)
!5565 = !DILocation(line: 46, column: 5, scope: !5550)
!5566 = !DILocation(line: 47, column: 5, scope: !5550)
!5567 = !DILocation(line: 48, column: 2, scope: !5550)
!5568 = distinct !DISubprogram(name: "~SimCommDevice", linkageName: "_ZN6Cicada13SimCommDeviceD0Ev", scope: !1705, file: !157, line: 40, type: !1724, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, declaration: !1723, retainedNodes: !5569)
!5569 = !{!5570}
!5570 = !DILocalVariable(name: "this", arg: 1, scope: !5568, type: !5571, flags: DIFlagArtificial | DIFlagObjectPointer)
!5571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 32)
!5572 = !DILocation(line: 0, scope: !5568)
!5573 = !DILocation(line: 40, column: 30, scope: !5568)
!5574 = distinct !DISubprogram(name: "connect", linkageName: "_ZN6Cicada13SimCommDevice7connectEv", scope: !1705, file: !1702, line: 88, type: !1731, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, declaration: !1730, retainedNodes: !5575)
!5575 = !{!5576}
!5576 = !DILocalVariable(name: "this", arg: 1, scope: !5574, type: !5571, flags: DIFlagArtificial | DIFlagObjectPointer)
!5577 = !DILocation(line: 0, scope: !5574)
!5578 = !DILocation(line: 90, column: 9, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5574, file: !1702, line: 90, column: 9)
!5580 = !{!5581, !2232, i64 232}
!5581 = !{!"_ZTSN6Cicada13SimCommDeviceE", !2232, i64 232, !2233, i64 236, !2233, i64 252, !2233, i64 276, !2365, i64 278}
!5582 = !DILocation(line: 90, column: 14, scope: !5579)
!5583 = !DILocation(line: 90, column: 9, scope: !5574)
!5584 = !DILocation(line: 93, column: 26, scope: !5574)
!5585 = !DILocation(line: 93, column: 5, scope: !5574)
!5586 = !DILocation(line: 94, column: 1, scope: !5574)
!5587 = distinct !DISubprogram(name: "resetStates", linkageName: "_ZN6Cicada13SimCommDevice11resetStatesEv", scope: !1705, file: !1702, line: 46, type: !1724, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, declaration: !1726, retainedNodes: !5588)
!5588 = !{!5589}
!5589 = !DILocalVariable(name: "this", arg: 1, scope: !5587, type: !5571, flags: DIFlagArtificial | DIFlagObjectPointer)
!5590 = !DILocation(line: 0, scope: !5587)
!5591 = !DILocation(line: 48, column: 5, scope: !5587)
!5592 = !DILocation(line: 48, column: 13, scope: !5587)
!5593 = !DILocation(line: 49, column: 5, scope: !5587)
!5594 = !DILocation(line: 49, column: 17, scope: !5587)
!5595 = !DILocation(line: 50, column: 5, scope: !5587)
!5596 = !DILocation(line: 50, column: 18, scope: !5587)
!5597 = !DILocation(line: 51, column: 5, scope: !5587)
!5598 = !DILocation(line: 54, column: 5, scope: !5587)
!5599 = !DILocation(line: 54, column: 19, scope: !5587)
!5600 = !DILocation(line: 58, column: 5, scope: !5587)
!5601 = !DILocation(line: 58, column: 19, scope: !5587)
!5602 = !DILocation(line: 59, column: 5, scope: !5587)
!5603 = !DILocation(line: 52, column: 16, scope: !5587)
!5604 = !DILocation(line: 59, column: 20, scope: !5587)
!5605 = !DILocation(line: 60, column: 5, scope: !5587)
!5606 = !DILocation(line: 60, column: 11, scope: !5587)
!5607 = !{!5581, !2233, i64 276}
!5608 = !DILocation(line: 61, column: 5, scope: !5587)
!5609 = !DILocation(line: 61, column: 24, scope: !5587)
!5610 = !DILocation(line: 62, column: 5, scope: !5587)
!5611 = !DILocation(line: 62, column: 24, scope: !5587)
!5612 = !DILocation(line: 63, column: 1, scope: !5587)
!5613 = distinct !DISubprogram(name: "setApn", linkageName: "_ZN6Cicada13SimCommDevice6setApnEPKc", scope: !1705, file: !1702, line: 83, type: !1728, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, declaration: !1727, retainedNodes: !5614)
!5614 = !{!5615, !5616}
!5615 = !DILocalVariable(name: "this", arg: 1, scope: !5613, type: !5571, flags: DIFlagArtificial | DIFlagObjectPointer)
!5616 = !DILocalVariable(name: "apn", arg: 2, scope: !5613, file: !1702, line: 83, type: !86)
!5617 = !DILocation(line: 0, scope: !5613)
!5618 = !DILocation(line: 85, column: 5, scope: !5613)
!5619 = !DILocation(line: 85, column: 10, scope: !5613)
!5620 = !DILocation(line: 86, column: 1, scope: !5613)
!5621 = distinct !DISubprogram(name: "serialLock", linkageName: "_ZN6Cicada13SimCommDevice10serialLockEv", scope: !1705, file: !1702, line: 96, type: !1731, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, declaration: !1733, retainedNodes: !5622)
!5622 = !{!5623}
!5623 = !DILocalVariable(name: "this", arg: 1, scope: !5621, type: !5571, flags: DIFlagArtificial | DIFlagObjectPointer)
!5624 = !DILocation(line: 0, scope: !5621)
!5625 = !DILocation(line: 98, column: 9, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5621, file: !1702, line: 98, column: 9)
!5627 = !DILocation(line: 98, column: 23, scope: !5626)
!5628 = !DILocation(line: 101, column: 5, scope: !5621)
!5629 = !DILocation(line: 101, column: 20, scope: !5621)
!5630 = !DILocation(line: 102, column: 5, scope: !5621)
!5631 = !DILocation(line: 103, column: 1, scope: !5621)
!5632 = distinct !DISubprogram(name: "serialUnlock", linkageName: "_ZN6Cicada13SimCommDevice12serialUnlockEv", scope: !1705, file: !1702, line: 105, type: !1724, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, declaration: !1734, retainedNodes: !5633)
!5633 = !{!5634}
!5634 = !DILocalVariable(name: "this", arg: 1, scope: !5632, type: !5571, flags: DIFlagArtificial | DIFlagObjectPointer)
!5635 = !DILocation(line: 0, scope: !5632)
!5636 = !DILocation(line: 107, column: 5, scope: !5632)
!5637 = !DILocation(line: 107, column: 20, scope: !5632)
!5638 = !DILocation(line: 108, column: 1, scope: !5632)
!5639 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada13SimCommDeviceD1Ev", scope: !157, file: !157, line: 40, type: !5018, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, retainedNodes: !173)
!5640 = !DILocation(line: 0, scope: !5639)
!5641 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada13SimCommDeviceD0Ev", scope: !157, file: !157, line: 40, type: !5018, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, retainedNodes: !173)
!5642 = !DILocation(line: 0, scope: !5641)
!5643 = distinct !DISubprogram(name: "SimCommDevice", linkageName: "_ZN6Cicada13SimCommDeviceC2ERNS_15IBufferedSerialEPhS3_y", scope: !1705, file: !1702, line: 32, type: !1717, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, declaration: !1716, retainedNodes: !5644)
!5644 = !{!5645, !5646, !5647, !5648, !5649}
!5645 = !DILocalVariable(name: "this", arg: 1, scope: !5643, type: !5571, flags: DIFlagArtificial | DIFlagObjectPointer)
!5646 = !DILocalVariable(name: "serial", arg: 2, scope: !5643, file: !1702, line: 33, type: !753)
!5647 = !DILocalVariable(name: "readBuffer", arg: 3, scope: !5643, file: !1702, line: 33, type: !59)
!5648 = !DILocalVariable(name: "writeBuffer", arg: 4, scope: !5643, file: !1702, line: 33, type: !59)
!5649 = !DILocalVariable(name: "bufferSize", arg: 5, scope: !5643, file: !1702, line: 33, type: !42)
!5650 = !DILocation(line: 0, scope: !5643)
!5651 = !DILocation(line: 35, column: 1, scope: !5643)
!5652 = !DILocation(line: 34, column: 5, scope: !5643)
!5653 = !DILocation(line: 34, column: 64, scope: !5643)
!5654 = !DILocation(line: 36, column: 5, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5643, file: !1702, line: 35, column: 1)
!5656 = !DILocation(line: 37, column: 1, scope: !5643)
!5657 = distinct !DISubprogram(name: "SimCommDevice", linkageName: "_ZN6Cicada13SimCommDeviceC2ERNS_15IBufferedSerialEPhS3_yy", scope: !1705, file: !1702, line: 39, type: !1721, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, declaration: !1720, retainedNodes: !5658)
!5658 = !{!5659, !5660, !5661, !5662, !5663, !5664}
!5659 = !DILocalVariable(name: "this", arg: 1, scope: !5657, type: !5571, flags: DIFlagArtificial | DIFlagObjectPointer)
!5660 = !DILocalVariable(name: "serial", arg: 2, scope: !5657, file: !1702, line: 39, type: !753)
!5661 = !DILocalVariable(name: "readBuffer", arg: 3, scope: !5657, file: !1702, line: 39, type: !59)
!5662 = !DILocalVariable(name: "writeBuffer", arg: 4, scope: !5657, file: !1702, line: 39, type: !59)
!5663 = !DILocalVariable(name: "readBufferSize", arg: 5, scope: !5657, file: !1702, line: 40, type: !42)
!5664 = !DILocalVariable(name: "writeBufferSize", arg: 6, scope: !5657, file: !1702, line: 40, type: !42)
!5665 = !DILocation(line: 0, scope: !5657)
!5666 = !DILocation(line: 42, column: 1, scope: !5657)
!5667 = !DILocation(line: 41, column: 5, scope: !5657)
!5668 = !DILocation(line: 41, column: 85, scope: !5657)
!5669 = !DILocation(line: 43, column: 5, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5657, file: !1702, line: 42, column: 1)
!5671 = !DILocation(line: 44, column: 1, scope: !5657)
!5672 = distinct !DISubprogram(name: "fillLineBuffer", linkageName: "_ZN6Cicada13SimCommDevice14fillLineBufferEv", scope: !1705, file: !1702, line: 65, type: !1731, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, declaration: !1745, retainedNodes: !5673)
!5673 = !{!5674, !5675}
!5674 = !DILocalVariable(name: "this", arg: 1, scope: !5672, type: !5571, flags: DIFlagArtificial | DIFlagObjectPointer)
!5675 = !DILocalVariable(name: "c", scope: !5676, file: !1702, line: 71, type: !88)
!5676 = distinct !DILexicalBlock(scope: !5677, file: !1702, line: 70, column: 42)
!5677 = distinct !DILexicalBlock(scope: !5678, file: !1702, line: 69, column: 37)
!5678 = distinct !DILexicalBlock(scope: !5672, file: !1702, line: 69, column: 9)
!5679 = !DILocation(line: 0, scope: !5672)
!5680 = !DILocation(line: 69, column: 9, scope: !5678)
!5681 = !DILocation(line: 69, column: 24, scope: !5678)
!5682 = !DILocation(line: 69, column: 9, scope: !5672)
!5683 = !DILocation(line: 70, column: 9, scope: !5677)
!5684 = !DILocation(line: 70, column: 16, scope: !5677)
!5685 = !DILocation(line: 70, column: 24, scope: !5677)
!5686 = !DILocation(line: 71, column: 22, scope: !5676)
!5687 = !DILocation(line: 71, column: 30, scope: !5676)
!5688 = !DILocation(line: 0, scope: !5676)
!5689 = !DILocation(line: 72, column: 32, scope: !5676)
!5690 = !{!4998, !2233, i64 205}
!5691 = !DILocation(line: 72, column: 13, scope: !5676)
!5692 = !DILocation(line: 72, column: 36, scope: !5676)
!5693 = !DILocation(line: 73, column: 27, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5676, file: !1702, line: 73, column: 17)
!5695 = !DILocation(line: 73, column: 42, scope: !5694)
!5696 = !DILocation(line: 73, column: 50, scope: !5694)
!5697 = !DILocation(line: 73, column: 17, scope: !5676)
!5698 = !DILocation(line: 74, column: 29, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5694, file: !1702, line: 73, column: 70)
!5700 = !DILocation(line: 74, column: 17, scope: !5699)
!5701 = !DILocation(line: 74, column: 38, scope: !5699)
!5702 = !DILocation(line: 75, column: 25, scope: !5699)
!5703 = !DILocation(line: 81, column: 1, scope: !5672)
!5704 = distinct !DISubprogram(name: "parseDnsReply", linkageName: "_ZN6Cicada13SimCommDevice13parseDnsReplyEv", scope: !1705, file: !1702, line: 110, type: !1731, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, declaration: !1746, retainedNodes: !5705)
!5705 = !{!5706, !5707, !5710, !5711}
!5706 = !DILocalVariable(name: "this", arg: 1, scope: !5704, type: !5571, flags: DIFlagArtificial | DIFlagObjectPointer)
!5707 = !DILocalVariable(name: "tmpStr", scope: !5708, file: !1702, line: 113, type: !335)
!5708 = distinct !DILexicalBlock(scope: !5709, file: !1702, line: 112, column: 55)
!5709 = distinct !DILexicalBlock(scope: !5704, file: !1702, line: 112, column: 9)
!5710 = !DILocalVariable(name: "i", scope: !5708, file: !1702, line: 114, type: !60)
!5711 = !DILocalVariable(name: "q", scope: !5708, file: !1702, line: 114, type: !60)
!5712 = !DILocation(line: 0, scope: !5704)
!5713 = !DILocation(line: 112, column: 17, scope: !5709)
!5714 = !DILocation(line: 112, column: 9, scope: !5709)
!5715 = !DILocation(line: 112, column: 49, scope: !5709)
!5716 = !DILocation(line: 112, column: 9, scope: !5704)
!5717 = !DILocation(line: 0, scope: !5708)
!5718 = !DILocation(line: 117, column: 16, scope: !5708)
!5719 = !DILocation(line: 117, column: 9, scope: !5708)
!5720 = !DILocation(line: 118, column: 30, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5722, file: !1702, line: 118, column: 17)
!5722 = distinct !DILexicalBlock(scope: !5708, file: !1702, line: 117, column: 32)
!5723 = !DILocation(line: 118, column: 34, scope: !5721)
!5724 = !DILocation(line: 118, column: 17, scope: !5722)
!5725 = distinct !{!5725, !5719, !5726, !2571, !2572}
!5726 = !DILocation(line: 120, column: 9, scope: !5708)
!5727 = !DILocation(line: 121, column: 19, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5708, file: !1702, line: 121, column: 13)
!5729 = !DILocation(line: 123, column: 13, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5728, file: !1702, line: 121, column: 30)
!5731 = !DILocation(line: 123, column: 27, scope: !5730)
!5732 = !DILocation(line: 124, column: 13, scope: !5730)
!5733 = !DILocation(line: 130, column: 30, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5708, file: !1702, line: 130, column: 17)
!5735 = !DILocation(line: 130, column: 17, scope: !5734)
!5736 = !DILocation(line: 130, column: 34, scope: !5734)
!5737 = !DILocation(line: 130, column: 17, scope: !5708)
!5738 = !DILocation(line: 129, column: 18, scope: !5708)
!5739 = !DILocation(line: 129, column: 9, scope: !5708)
!5740 = distinct !{!5740, !5739, !5741, !2571, !2572}
!5741 = !DILocation(line: 131, column: 18, scope: !5708)
!5742 = !DILocation(line: 132, column: 32, scope: !5708)
!5743 = !DILocation(line: 133, column: 9, scope: !5708)
!5744 = !DILocation(line: 133, column: 16, scope: !5708)
!5745 = !DILocation(line: 135, column: 32, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5747, file: !1702, line: 134, column: 17)
!5747 = distinct !DILexicalBlock(scope: !5708, file: !1702, line: 133, column: 32)
!5748 = !DILocation(line: 135, column: 17, scope: !5746)
!5749 = !DILocation(line: 136, column: 14, scope: !5747)
!5750 = distinct !{!5750, !5743, !5751, !2571, !2572}
!5751 = !DILocation(line: 137, column: 9, scope: !5708)
!5752 = !DILocation(line: 132, column: 30, scope: !5708)
!5753 = !DILocation(line: 138, column: 16, scope: !5708)
!5754 = !DILocation(line: 138, column: 9, scope: !5708)
!5755 = !DILocation(line: 139, column: 9, scope: !5708)
!5756 = !DILocation(line: 140, column: 16, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5709, file: !1702, line: 140, column: 16)
!5758 = !DILocation(line: 140, column: 56, scope: !5757)
!5759 = !DILocation(line: 140, column: 16, scope: !5709)
!5760 = !DILocation(line: 141, column: 9, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5757, file: !1702, line: 140, column: 62)
!5762 = !DILocation(line: 141, column: 24, scope: !5761)
!5763 = !DILocation(line: 142, column: 5, scope: !5761)
!5764 = !DILocation(line: 145, column: 1, scope: !5704)
!5765 = distinct !DISubprogram(name: "parseCiprxget4", linkageName: "_ZN6Cicada13SimCommDevice14parseCiprxget4Ev", scope: !1705, file: !1702, line: 147, type: !1731, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, declaration: !1747, retainedNodes: !5766)
!5766 = !{!5767, !5768}
!5767 = !DILocalVariable(name: "this", arg: 1, scope: !5765, type: !5571, flags: DIFlagArtificial | DIFlagObjectPointer)
!5768 = !DILocalVariable(name: "bytesToReceive", scope: !5769, file: !1702, line: 150, type: !34)
!5769 = distinct !DILexicalBlock(scope: !5770, file: !1702, line: 149, column: 59)
!5770 = distinct !DILexicalBlock(scope: !5765, file: !1702, line: 149, column: 9)
!5771 = !DILocation(line: 0, scope: !5765)
!5772 = !DILocation(line: 149, column: 17, scope: !5770)
!5773 = !DILocation(line: 149, column: 9, scope: !5770)
!5774 = !DILocation(line: 149, column: 53, scope: !5770)
!5775 = !DILocation(line: 149, column: 9, scope: !5765)
!5776 = !DILocation(line: 150, column: 9, scope: !5769)
!5777 = !DILocation(line: 151, column: 28, scope: !5769)
!5778 = !DILocation(line: 0, scope: !5769)
!5779 = !DILocation(line: 151, column: 9, scope: !5769)
!5780 = !DILocation(line: 152, column: 28, scope: !5769)
!5781 = !DILocation(line: 152, column: 9, scope: !5769)
!5782 = !DILocation(line: 152, column: 25, scope: !5769)
!5783 = !DILocation(line: 154, column: 5, scope: !5770)
!5784 = !DILocation(line: 156, column: 1, scope: !5765)
!5785 = distinct !DISubprogram(name: "parseCiprxget2", linkageName: "_ZN6Cicada13SimCommDevice14parseCiprxget2Ev", scope: !1705, file: !1702, line: 158, type: !1731, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, declaration: !1748, retainedNodes: !5786)
!5786 = !{!5787, !5788}
!5787 = !DILocalVariable(name: "this", arg: 1, scope: !5785, type: !5571, flags: DIFlagArtificial | DIFlagObjectPointer)
!5788 = !DILocalVariable(name: "bytesToReceive", scope: !5789, file: !1702, line: 161, type: !34)
!5789 = distinct !DILexicalBlock(scope: !5790, file: !1702, line: 160, column: 59)
!5790 = distinct !DILexicalBlock(scope: !5785, file: !1702, line: 160, column: 9)
!5791 = !DILocation(line: 0, scope: !5785)
!5792 = !DILocation(line: 160, column: 17, scope: !5790)
!5793 = !DILocation(line: 160, column: 9, scope: !5790)
!5794 = !DILocation(line: 160, column: 53, scope: !5790)
!5795 = !DILocation(line: 160, column: 9, scope: !5785)
!5796 = !DILocation(line: 161, column: 9, scope: !5789)
!5797 = !DILocation(line: 162, column: 28, scope: !5789)
!5798 = !DILocation(line: 0, scope: !5789)
!5799 = !DILocation(line: 162, column: 9, scope: !5789)
!5800 = !DILocation(line: 163, column: 28, scope: !5789)
!5801 = !DILocation(line: 163, column: 9, scope: !5789)
!5802 = !DILocation(line: 163, column: 25, scope: !5789)
!5803 = !DILocation(line: 164, column: 9, scope: !5789)
!5804 = !DILocation(line: 164, column: 22, scope: !5789)
!5805 = !DILocation(line: 165, column: 9, scope: !5789)
!5806 = !DILocation(line: 165, column: 24, scope: !5789)
!5807 = !DILocation(line: 167, column: 5, scope: !5790)
!5808 = !DILocation(line: 169, column: 1, scope: !5785)
!5809 = distinct !DISubprogram(name: "parseCsq", linkageName: "_ZN6Cicada13SimCommDevice8parseCsqEv", scope: !1705, file: !1702, line: 171, type: !1731, scopeLine: 172, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, declaration: !1749, retainedNodes: !5810)
!5810 = !{!5811, !5812}
!5811 = !DILocalVariable(name: "this", arg: 1, scope: !5809, type: !5571, flags: DIFlagArtificial | DIFlagObjectPointer)
!5812 = !DILocalVariable(name: "rssi", scope: !5813, file: !1702, line: 174, type: !10)
!5813 = distinct !DILexicalBlock(scope: !5814, file: !1702, line: 173, column: 49)
!5814 = distinct !DILexicalBlock(scope: !5809, file: !1702, line: 173, column: 9)
!5815 = !DILocation(line: 0, scope: !5809)
!5816 = !DILocation(line: 173, column: 17, scope: !5814)
!5817 = !DILocation(line: 173, column: 9, scope: !5814)
!5818 = !DILocation(line: 173, column: 43, scope: !5814)
!5819 = !DILocation(line: 173, column: 9, scope: !5809)
!5820 = !DILocation(line: 174, column: 9, scope: !5813)
!5821 = !DILocation(line: 175, column: 32, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5813, file: !1702, line: 175, column: 13)
!5823 = !DILocation(line: 0, scope: !5813)
!5824 = !DILocation(line: 175, column: 13, scope: !5822)
!5825 = !DILocation(line: 175, column: 50, scope: !5822)
!5826 = !DILocation(line: 175, column: 13, scope: !5813)
!5827 = !DILocation(line: 176, column: 21, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5822, file: !1702, line: 175, column: 56)
!5829 = !DILocation(line: 176, column: 13, scope: !5828)
!5830 = !DILocation(line: 176, column: 19, scope: !5828)
!5831 = !DILocation(line: 177, column: 9, scope: !5828)
!5832 = !DILocation(line: 179, column: 5, scope: !5814)
!5833 = !DILocation(line: 181, column: 1, scope: !5809)
!5834 = distinct !DISubprogram(name: "parseIDReply", linkageName: "_ZN6Cicada13SimCommDevice12parseIDReplyEv", scope: !1705, file: !1702, line: 183, type: !1731, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, declaration: !1750, retainedNodes: !5835)
!5835 = !{!5836, !5837, !5838}
!5836 = !DILocalVariable(name: "this", arg: 1, scope: !5834, type: !5571, flags: DIFlagArtificial | DIFlagObjectPointer)
!5837 = !DILocalVariable(name: "src", scope: !5834, file: !1702, line: 190, type: !335)
!5838 = !DILocalVariable(name: "copiedChars", scope: !5834, file: !1702, line: 197, type: !34)
!5839 = !DILocation(line: 0, scope: !5834)
!5840 = !DILocation(line: 186, column: 17, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5834, file: !1702, line: 186, column: 9)
!5842 = !DILocation(line: 186, column: 9, scope: !5841)
!5843 = !DILocation(line: 186, column: 39, scope: !5841)
!5844 = !DILocation(line: 186, column: 44, scope: !5841)
!5845 = !DILocation(line: 193, column: 9, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5834, file: !1702, line: 193, column: 9)
!5847 = !DILocation(line: 193, column: 45, scope: !5846)
!5848 = !DILocation(line: 193, column: 9, scope: !5834)
!5849 = !DILocation(line: 198, column: 12, scope: !5834)
!5850 = !DILocation(line: 198, column: 17, scope: !5834)
!5851 = !DILocation(line: 198, column: 5, scope: !5834)
!5852 = !DILocation(line: 199, column: 46, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5834, file: !1702, line: 198, column: 67)
!5854 = !DILocation(line: 199, column: 36, scope: !5853)
!5855 = !DILocation(line: 199, column: 9, scope: !5853)
!5856 = !DILocation(line: 199, column: 40, scope: !5853)
!5857 = !DILocation(line: 198, column: 25, scope: !5834)
!5858 = distinct !{!5858, !5851, !5859, !2571, !2572}
!5859 = !DILocation(line: 200, column: 5, scope: !5834)
!5860 = !DILocation(line: 201, column: 5, scope: !5834)
!5861 = !DILocation(line: 201, column: 34, scope: !5834)
!5862 = !DILocation(line: 204, column: 1, scope: !5834)
!5863 = distinct !DISubprogram(name: "sendDnsQuery", linkageName: "_ZN6Cicada13SimCommDevice12sendDnsQueryEv", scope: !1705, file: !1702, line: 206, type: !1731, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, declaration: !1752, retainedNodes: !5864)
!5864 = !{!5865}
!5865 = !DILocalVariable(name: "this", arg: 1, scope: !5863, type: !5571, flags: DIFlagArtificial | DIFlagObjectPointer)
!5866 = !DILocation(line: 0, scope: !5863)
!5867 = !DILocation(line: 208, column: 9, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5863, file: !1702, line: 208, column: 9)
!5869 = !DILocation(line: 208, column: 17, scope: !5868)
!5870 = !DILocation(line: 208, column: 43, scope: !5868)
!5871 = !DILocation(line: 208, column: 36, scope: !5868)
!5872 = !DILocation(line: 208, column: 50, scope: !5868)
!5873 = !DILocation(line: 208, column: 34, scope: !5868)
!5874 = !DILocation(line: 208, column: 9, scope: !5863)
!5875 = !DILocation(line: 211, column: 5, scope: !5863)
!5876 = !DILocation(line: 211, column: 13, scope: !5863)
!5877 = !DILocation(line: 212, column: 5, scope: !5863)
!5878 = !DILocation(line: 212, column: 35, scope: !5863)
!5879 = !DILocation(line: 212, column: 13, scope: !5863)
!5880 = !DILocation(line: 213, column: 5, scope: !5863)
!5881 = !DILocation(line: 213, column: 35, scope: !5863)
!5882 = !DILocation(line: 213, column: 13, scope: !5863)
!5883 = !DILocation(line: 215, column: 5, scope: !5863)
!5884 = !DILocation(line: 216, column: 1, scope: !5863)
!5885 = distinct !DISubprogram(name: "sendCiprxget2", linkageName: "_ZN6Cicada13SimCommDevice13sendCiprxget2Ev", scope: !1705, file: !1702, line: 218, type: !1731, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, declaration: !1754, retainedNodes: !5886)
!5886 = !{!5887, !5888, !5891, !5895}
!5887 = !DILocalVariable(name: "this", arg: 1, scope: !5885, type: !5571, flags: DIFlagArtificial | DIFlagObjectPointer)
!5888 = !DILocalVariable(name: "bytesToReceive", scope: !5889, file: !1702, line: 222, type: !42)
!5889 = distinct !DILexicalBlock(scope: !5890, file: !1702, line: 221, column: 46)
!5890 = distinct !DILexicalBlock(scope: !5885, file: !1702, line: 220, column: 9)
!5891 = !DILocalVariable(name: "str", scope: !5889, file: !1702, line: 230, type: !5892)
!5892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !87, size: 136, elements: !5893)
!5893 = !{!5894}
!5894 = !DISubrange(count: 17)
!5895 = !DILocalVariable(name: "sizeStr", scope: !5889, file: !1702, line: 231, type: !5118)
!5896 = !DILocation(line: 0, scope: !5885)
!5897 = !DILocation(line: 220, column: 9, scope: !5890)
!5898 = !DILocation(line: 220, column: 17, scope: !5890)
!5899 = !DILocation(line: 220, column: 36, scope: !5890)
!5900 = !DILocation(line: 220, column: 44, scope: !5890)
!5901 = !DILocation(line: 220, column: 34, scope: !5890)
!5902 = !DILocation(line: 220, column: 61, scope: !5890)
!5903 = !DILocation(line: 221, column: 9, scope: !5890)
!5904 = !DILocation(line: 221, column: 12, scope: !5890)
!5905 = !DILocation(line: 221, column: 24, scope: !5890)
!5906 = !DILocation(line: 221, column: 41, scope: !5890)
!5907 = !DILocation(line: 220, column: 9, scope: !5885)
!5908 = !DILocation(line: 222, column: 31, scope: !5889)
!5909 = !DILocation(line: 222, column: 39, scope: !5889)
!5910 = !DILocation(line: 222, column: 58, scope: !5889)
!5911 = !DILocation(line: 222, column: 66, scope: !5889)
!5912 = !DILocation(line: 222, column: 56, scope: !5889)
!5913 = !DILocation(line: 222, column: 83, scope: !5889)
!5914 = !DILocation(line: 0, scope: !5889)
!5915 = !DILocation(line: 223, column: 30, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5889, file: !1702, line: 223, column: 13)
!5917 = !DILocation(line: 223, column: 28, scope: !5916)
!5918 = !DILocation(line: 223, column: 13, scope: !5889)
!5919 = !DILocation(line: 225, column: 42, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5889, file: !1702, line: 225, column: 13)
!5921 = !DILocation(line: 225, column: 28, scope: !5920)
!5922 = !DILocation(line: 225, column: 13, scope: !5889)
!5923 = !DILocation(line: 226, column: 42, scope: !5920)
!5924 = !DILocation(line: 226, column: 13, scope: !5920)
!5925 = !DILocation(line: 227, column: 30, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5889, file: !1702, line: 227, column: 13)
!5927 = !{!5581, !2365, i64 278}
!5928 = !DILocation(line: 227, column: 28, scope: !5926)
!5929 = !DILocation(line: 227, column: 13, scope: !5889)
!5930 = !DILocation(line: 230, column: 9, scope: !5889)
!5931 = !DILocation(line: 230, column: 20, scope: !5889)
!5932 = !DILocation(line: 231, column: 9, scope: !5889)
!5933 = !DILocation(line: 231, column: 14, scope: !5889)
!5934 = !DILocation(line: 232, column: 9, scope: !5889)
!5935 = !DILocation(line: 233, column: 9, scope: !5889)
!5936 = !DILocation(line: 233, column: 17, scope: !5889)
!5937 = !DILocation(line: 234, column: 9, scope: !5889)
!5938 = !DILocation(line: 234, column: 17, scope: !5889)
!5939 = !DILocation(line: 235, column: 9, scope: !5889)
!5940 = !DILocation(line: 235, column: 39, scope: !5889)
!5941 = !DILocation(line: 235, column: 17, scope: !5889)
!5942 = !DILocation(line: 237, column: 5, scope: !5890)
!5943 = !DILocation(line: 0, scope: !5890)
!5944 = !DILocation(line: 240, column: 1, scope: !5885)
!5945 = distinct !DISubprogram(name: "checkConnectionState", linkageName: "_ZN6Cicada13SimCommDevice20checkConnectionStateEPKc", scope: !1705, file: !1702, line: 242, type: !1728, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, declaration: !1751, retainedNodes: !5946)
!5946 = !{!5947, !5948}
!5947 = !DILocalVariable(name: "this", arg: 1, scope: !5945, type: !5571, flags: DIFlagArtificial | DIFlagObjectPointer)
!5948 = !DILocalVariable(name: "closeVariant", arg: 2, scope: !5945, file: !1702, line: 242, type: !86)
!5949 = !DILocation(line: 0, scope: !5945)
!5950 = !DILocation(line: 244, column: 17, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5945, file: !1702, line: 244, column: 9)
!5952 = !DILocation(line: 244, column: 9, scope: !5951)
!5953 = !DILocation(line: 244, column: 52, scope: !5951)
!5954 = !DILocation(line: 244, column: 9, scope: !5945)
!5955 = !DILocation(line: 245, column: 9, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5951, file: !1702, line: 244, column: 58)
!5957 = !DILocation(line: 245, column: 24, scope: !5956)
!5958 = !DILocation(line: 246, column: 5, scope: !5956)
!5959 = !DILocation(line: 246, column: 51, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5951, file: !1702, line: 246, column: 16)
!5961 = !DILocation(line: 246, column: 16, scope: !5960)
!5962 = !DILocation(line: 246, column: 73, scope: !5960)
!5963 = !DILocation(line: 246, column: 16, scope: !5951)
!5964 = !DILocation(line: 247, column: 9, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5960, file: !1702, line: 246, column: 79)
!5966 = !DILocation(line: 247, column: 23, scope: !5965)
!5967 = !DILocation(line: 248, column: 9, scope: !5965)
!5968 = !DILocation(line: 248, column: 24, scope: !5965)
!5969 = !DILocation(line: 249, column: 5, scope: !5965)
!5970 = !DILocation(line: 250, column: 1, scope: !5945)
!5971 = distinct !DISubprogram(name: "sendIDRequest", linkageName: "_ZN6Cicada13SimCommDevice13sendIDRequestEPKc", scope: !1705, file: !1702, line: 252, type: !1756, scopeLine: 253, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, declaration: !1755, retainedNodes: !5972)
!5972 = !{!5973, !5974, !5975}
!5973 = !DILocalVariable(name: "this", arg: 1, scope: !5971, type: !5571, flags: DIFlagArtificial | DIFlagObjectPointer)
!5974 = !DILocalVariable(name: "modemSpecificICCIDCommand", arg: 2, scope: !5971, file: !1702, line: 252, type: !86)
!5975 = !DILocalVariable(name: "type", scope: !5976, file: !1702, line: 255, type: !1704)
!5976 = distinct !DILexicalBlock(scope: !5977, file: !1702, line: 254, column: 99)
!5977 = distinct !DILexicalBlock(scope: !5971, file: !1702, line: 254, column: 9)
!5978 = !DILocation(line: 0, scope: !5971)
!5979 = !DILocation(line: 254, column: 9, scope: !5977)
!5980 = !DILocation(line: 254, column: 28, scope: !5977)
!5981 = !DILocation(line: 254, column: 41, scope: !5977)
!5982 = !DILocation(line: 254, column: 71, scope: !5977)
!5983 = !DILocation(line: 254, column: 86, scope: !5977)
!5984 = !DILocation(line: 254, column: 9, scope: !5971)
!5985 = !DILocation(line: 0, scope: !5976)
!5986 = !DILocation(line: 256, column: 28, scope: !5976)
!5987 = !DILocation(line: 258, column: 9, scope: !5976)
!5988 = !DILocation(line: 0, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5976, file: !1702, line: 258, column: 23)
!5990 = !DILocation(line: 282, column: 1, scope: !5971)
!5991 = distinct !DISubprogram(name: "requestRSSI", linkageName: "_ZN6Cicada13SimCommDevice11requestRSSIEv", scope: !1705, file: !1702, line: 284, type: !1724, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, declaration: !1735, retainedNodes: !5992)
!5992 = !{!5993}
!5993 = !DILocalVariable(name: "this", arg: 1, scope: !5991, type: !5571, flags: DIFlagArtificial | DIFlagObjectPointer)
!5994 = !DILocation(line: 0, scope: !5991)
!5995 = !DILocation(line: 286, column: 5, scope: !5991)
!5996 = !DILocation(line: 286, column: 11, scope: !5991)
!5997 = !DILocation(line: 287, column: 1, scope: !5991)
!5998 = distinct !DISubprogram(name: "getRSSI", linkageName: "_ZN6Cicada13SimCommDevice7getRSSIEv", scope: !1705, file: !1702, line: 289, type: !1737, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, declaration: !1736, retainedNodes: !5999)
!5999 = !{!6000}
!6000 = !DILocalVariable(name: "this", arg: 1, scope: !5998, type: !5571, flags: DIFlagArtificial | DIFlagObjectPointer)
!6001 = !DILocation(line: 0, scope: !5998)
!6002 = !DILocation(line: 291, column: 12, scope: !5998)
!6003 = !DILocation(line: 291, column: 5, scope: !5998)
!6004 = distinct !DISubprogram(name: "requestIDString", linkageName: "_ZN6Cicada13SimCommDevice15requestIDStringENS0_13RequestIDTypeE", scope: !1705, file: !1702, line: 294, type: !1740, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, declaration: !1739, retainedNodes: !6005)
!6005 = !{!6006, !6007}
!6006 = !DILocalVariable(name: "this", arg: 1, scope: !6004, type: !5571, flags: DIFlagArtificial | DIFlagObjectPointer)
!6007 = !DILocalVariable(name: "type", arg: 2, scope: !6004, file: !1702, line: 294, type: !1704)
!6008 = !DILocation(line: 0, scope: !6004)
!6009 = !DILocation(line: 296, column: 5, scope: !6004)
!6010 = !DILocation(line: 296, column: 13, scope: !6004)
!6011 = !DILocation(line: 297, column: 5, scope: !6004)
!6012 = !DILocation(line: 297, column: 24, scope: !6004)
!6013 = !DILocation(line: 298, column: 26, scope: !6004)
!6014 = !DILocation(line: 298, column: 5, scope: !6004)
!6015 = !DILocation(line: 298, column: 24, scope: !6004)
!6016 = !DILocation(line: 299, column: 1, scope: !6004)
!6017 = distinct !DISubprogram(name: "getIDString", linkageName: "_ZN6Cicada13SimCommDevice11getIDStringEv", scope: !1705, file: !1702, line: 301, type: !1743, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, declaration: !1742, retainedNodes: !6018)
!6018 = !{!6019}
!6019 = !DILocalVariable(name: "this", arg: 1, scope: !6017, type: !5571, flags: DIFlagArtificial | DIFlagObjectPointer)
!6020 = !DILocation(line: 0, scope: !6017)
!6021 = !DILocation(line: 303, column: 9, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !6017, file: !1702, line: 303, column: 9)
!6023 = !DILocation(line: 303, column: 23, scope: !6022)
!6024 = !DILocation(line: 303, column: 31, scope: !6022)
!6025 = !DILocation(line: 308, column: 1, scope: !6017)
!6026 = distinct !DISubprogram(name: "~Sim7x00CommDevice", linkageName: "_ZN6Cicada17Sim7x00CommDeviceD0Ev", scope: !1804, file: !1803, line: 37, type: !1816, scopeLine: 37, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1799, declaration: !6027, retainedNodes: !6028)
!6027 = !DISubprogram(name: "~Sim7x00CommDevice", scope: !1804, type: !1816, containingType: !1804, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!6028 = !{!6029}
!6029 = !DILocalVariable(name: "this", arg: 1, scope: !6026, type: !6030, flags: DIFlagArtificial | DIFlagObjectPointer)
!6030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 32)
!6031 = !DILocation(line: 0, scope: !6026)
!6032 = !DILocation(line: 37, column: 7, scope: !6026)
!6033 = distinct !DISubprogram(name: "run", linkageName: "_ZN6Cicada17Sim7x00CommDevice3runEv", scope: !1804, file: !1800, line: 49, type: !1816, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1799, declaration: !1815, retainedNodes: !6034)
!6034 = !{!6035, !6036, !6040, !6041, !6047, !6049}
!6035 = !DILocalVariable(name: "this", arg: 1, scope: !6033, type: !6030, flags: DIFlagArtificial | DIFlagObjectPointer)
!6036 = !DILocalVariable(name: "str", scope: !6037, file: !1800, line: 74, type: !6039)
!6037 = distinct !DILexicalBlock(scope: !6038, file: !1800, line: 64, column: 41)
!6038 = distinct !DILexicalBlock(scope: !6033, file: !1800, line: 64, column: 9)
!6039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !87, size: 80, elements: !543)
!6040 = !DILocalVariable(name: "parseLine", scope: !6033, file: !1800, line: 86, type: !55)
!6041 = !DILocalVariable(name: "str", scope: !6042, file: !1800, line: 218, type: !6044)
!6042 = distinct !DILexicalBlock(scope: !6043, file: !1800, line: 217, column: 26)
!6043 = distinct !DILexicalBlock(scope: !6033, file: !1800, line: 201, column: 25)
!6044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !87, size: 184, elements: !6045)
!6045 = !{!6046}
!6046 = !DISubrange(count: 23)
!6047 = !DILocalVariable(name: "portStr", scope: !6048, file: !1800, line: 266, type: !5118)
!6048 = distinct !DILexicalBlock(scope: !6043, file: !1800, line: 265, column: 23)
!6049 = !DILocalVariable(name: "portStr", scope: !6050, file: !1800, line: 304, type: !5118)
!6050 = distinct !DILexicalBlock(scope: !6051, file: !1800, line: 297, column: 35)
!6051 = distinct !DILexicalBlock(scope: !6052, file: !1800, line: 297, column: 21)
!6052 = distinct !DILexicalBlock(scope: !6053, file: !1800, line: 296, column: 39)
!6053 = distinct !DILexicalBlock(scope: !6054, file: !1800, line: 296, column: 17)
!6054 = distinct !DILexicalBlock(scope: !6055, file: !1800, line: 295, column: 44)
!6055 = distinct !DILexicalBlock(scope: !6043, file: !1800, line: 295, column: 13)
!6056 = !DILocation(line: 0, scope: !6033)
!6057 = !DILocation(line: 52, column: 10, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6033, file: !1800, line: 52, column: 9)
!6059 = !DILocation(line: 52, column: 18, scope: !6058)
!6060 = !DILocation(line: 52, column: 9, scope: !6033)
!6061 = !DILocation(line: 53, column: 14, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6063, file: !1800, line: 53, column: 13)
!6063 = distinct !DILexicalBlock(scope: !6058, file: !1800, line: 52, column: 28)
!6064 = !DILocation(line: 53, column: 22, scope: !6062)
!6065 = !DILocation(line: 53, column: 13, scope: !6063)
!6066 = !DILocation(line: 54, column: 13, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6062, file: !1800, line: 53, column: 30)
!6068 = !DILocation(line: 54, column: 24, scope: !6067)
!6069 = !DILocation(line: 55, column: 9, scope: !6067)
!6070 = !DILocation(line: 60, column: 9, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !6033, file: !1800, line: 60, column: 9)
!6072 = !DILocation(line: 60, column: 24, scope: !6071)
!6073 = !DILocation(line: 60, column: 9, scope: !6033)
!6074 = !DILocation(line: 64, column: 24, scope: !6038)
!6075 = !DILocation(line: 64, column: 9, scope: !6038)
!6076 = !DILocation(line: 64, column: 9, scope: !6033)
!6077 = !DILocation(line: 65, column: 9, scope: !6037)
!6078 = !DILocation(line: 65, column: 17, scope: !6037)
!6079 = !DILocation(line: 66, column: 24, scope: !6037)
!6080 = !DILocation(line: 69, column: 9, scope: !6037)
!6081 = !DILocation(line: 70, column: 13, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6037, file: !1800, line: 70, column: 13)
!6083 = !DILocation(line: 68, column: 25, scope: !6037)
!6084 = !DILocation(line: 70, column: 38, scope: !6082)
!6085 = !DILocation(line: 0, scope: !6082)
!6086 = !DILocation(line: 74, column: 9, scope: !6037)
!6087 = !DILocation(line: 74, column: 20, scope: !6037)
!6088 = !DILocation(line: 75, column: 9, scope: !6037)
!6089 = !DILocation(line: 75, column: 17, scope: !6037)
!6090 = !DILocation(line: 76, column: 9, scope: !6037)
!6091 = !DILocation(line: 76, column: 39, scope: !6037)
!6092 = !DILocation(line: 76, column: 17, scope: !6037)
!6093 = !DILocation(line: 77, column: 9, scope: !6037)
!6094 = !DILocation(line: 77, column: 21, scope: !6037)
!6095 = !{!4998, !2233, i64 207}
!6096 = !DILocation(line: 78, column: 9, scope: !6037)
!6097 = !DILocation(line: 78, column: 23, scope: !6037)
!6098 = !DILocation(line: 80, column: 9, scope: !6037)
!6099 = !DILocation(line: 83, column: 5, scope: !6038)
!6100 = !DILocation(line: 86, column: 22, scope: !6033)
!6101 = !DILocation(line: 89, column: 9, scope: !6033)
!6102 = !DILocation(line: 92, column: 19, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6104, file: !1800, line: 89, column: 20)
!6104 = distinct !DILexicalBlock(scope: !6033, file: !1800, line: 89, column: 9)
!6105 = !DILocation(line: 92, column: 31, scope: !6103)
!6106 = !DILocation(line: 92, column: 9, scope: !6103)
!6107 = !DILocation(line: 95, column: 13, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6103, file: !1800, line: 95, column: 13)
!6109 = !DILocation(line: 95, column: 13, scope: !6103)
!6110 = !DILocation(line: 96, column: 25, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6112, file: !1800, line: 96, column: 17)
!6112 = distinct !DILexicalBlock(scope: !6108, file: !1800, line: 95, column: 28)
!6113 = !DILocation(line: 96, column: 53, scope: !6111)
!6114 = !DILocation(line: 96, column: 17, scope: !6111)
!6115 = !DILocation(line: 96, column: 76, scope: !6111)
!6116 = !DILocation(line: 96, column: 17, scope: !6112)
!6117 = !DILocation(line: 97, column: 31, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6111, file: !1800, line: 96, column: 82)
!6119 = !DILocation(line: 98, column: 13, scope: !6118)
!6120 = !DILocation(line: 98, column: 24, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6111, file: !1800, line: 98, column: 24)
!6122 = !DILocation(line: 98, column: 57, scope: !6121)
!6123 = !DILocation(line: 98, column: 24, scope: !6111)
!6124 = !DILocation(line: 99, column: 32, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6121, file: !1800, line: 98, column: 63)
!6126 = !DILocation(line: 100, column: 17, scope: !6125)
!6127 = !DILocation(line: 100, column: 31, scope: !6125)
!6128 = !DILocation(line: 101, column: 31, scope: !6125)
!6129 = !DILocation(line: 102, column: 17, scope: !6125)
!6130 = !DILocation(line: 107, column: 17, scope: !6103)
!6131 = !DILocation(line: 107, column: 9, scope: !6103)
!6132 = !DILocation(line: 109, column: 17, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !6134, file: !1800, line: 109, column: 17)
!6134 = distinct !DILexicalBlock(scope: !6103, file: !1800, line: 107, column: 30)
!6135 = !DILocation(line: 109, column: 31, scope: !6133)
!6136 = !DILocation(line: 109, column: 17, scope: !6134)
!6137 = !DILocation(line: 110, column: 29, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6133, file: !1800, line: 109, column: 40)
!6139 = !DILocation(line: 111, column: 13, scope: !6138)
!6140 = !DILocation(line: 111, column: 32, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6133, file: !1800, line: 111, column: 24)
!6142 = !DILocation(line: 111, column: 24, scope: !6141)
!6143 = !DILocation(line: 111, column: 64, scope: !6141)
!6144 = !DILocation(line: 111, column: 24, scope: !6133)
!6145 = !DILocation(line: 112, column: 17, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6141, file: !1800, line: 111, column: 70)
!6147 = !DILocation(line: 113, column: 28, scope: !6146)
!6148 = !DILocation(line: 114, column: 31, scope: !6146)
!6149 = !DILocation(line: 115, column: 29, scope: !6146)
!6150 = !DILocation(line: 116, column: 17, scope: !6146)
!6151 = !DILocation(line: 121, column: 17, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6134, file: !1800, line: 121, column: 17)
!6153 = !DILocation(line: 121, column: 17, scope: !6134)
!6154 = !DILocation(line: 122, column: 29, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6152, file: !1800, line: 121, column: 34)
!6156 = !DILocation(line: 123, column: 13, scope: !6155)
!6157 = !DILocation(line: 127, column: 17, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6134, file: !1800, line: 127, column: 17)
!6159 = !DILocation(line: 127, column: 31, scope: !6158)
!6160 = !DILocation(line: 127, column: 17, scope: !6134)
!6161 = !DILocation(line: 128, column: 29, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6158, file: !1800, line: 127, column: 40)
!6163 = !DILocation(line: 129, column: 13, scope: !6162)
!6164 = !DILocation(line: 130, column: 29, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6166, file: !1800, line: 130, column: 21)
!6166 = distinct !DILexicalBlock(scope: !6158, file: !1800, line: 129, column: 20)
!6167 = !DILocation(line: 130, column: 21, scope: !6165)
!6168 = !DILocation(line: 130, column: 62, scope: !6165)
!6169 = !DILocation(line: 130, column: 21, scope: !6166)
!6170 = !DILocation(line: 131, column: 36, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6165, file: !1800, line: 130, column: 68)
!6172 = !DILocation(line: 132, column: 21, scope: !6171)
!6173 = !DILocation(line: 132, column: 35, scope: !6171)
!6174 = !DILocation(line: 133, column: 17, scope: !6171)
!6175 = !DILocation(line: 138, column: 17, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6134, file: !1800, line: 138, column: 17)
!6177 = !DILocation(line: 138, column: 17, scope: !6134)
!6178 = !DILocation(line: 139, column: 29, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6176, file: !1800, line: 138, column: 35)
!6180 = !DILocation(line: 140, column: 13, scope: !6179)
!6181 = !DILocation(line: 144, column: 17, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6134, file: !1800, line: 144, column: 17)
!6183 = !DILocation(line: 144, column: 17, scope: !6134)
!6184 = !DILocation(line: 145, column: 29, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6182, file: !1800, line: 144, column: 35)
!6186 = !DILocation(line: 146, column: 28, scope: !6185)
!6187 = !DILocation(line: 147, column: 13, scope: !6185)
!6188 = !DILocation(line: 151, column: 17, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6134, file: !1800, line: 151, column: 17)
!6190 = !DILocation(line: 151, column: 17, scope: !6134)
!6191 = !DILocation(line: 152, column: 29, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6189, file: !1800, line: 151, column: 29)
!6193 = !DILocation(line: 153, column: 13, scope: !6192)
!6194 = !DILocation(line: 157, column: 17, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6134, file: !1800, line: 157, column: 17)
!6196 = !DILocation(line: 157, column: 17, scope: !6134)
!6197 = !DILocation(line: 158, column: 29, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6195, file: !1800, line: 157, column: 33)
!6199 = !DILocation(line: 159, column: 13, scope: !6198)
!6200 = !DILocation(line: 167, column: 13, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6103, file: !1800, line: 167, column: 13)
!6202 = !DILocation(line: 167, column: 24, scope: !6201)
!6203 = !DILocation(line: 167, column: 13, scope: !6103)
!6204 = !DILocation(line: 168, column: 13, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6201, file: !1800, line: 167, column: 38)
!6206 = !DILocation(line: 169, column: 9, scope: !6205)
!6207 = !DILocation(line: 173, column: 15, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6104, file: !1800, line: 173, column: 14)
!6209 = !DILocation(line: 173, column: 30, scope: !6208)
!6210 = !DILocation(line: 173, column: 14, scope: !6208)
!6211 = !DILocation(line: 173, column: 52, scope: !6208)
!6212 = !DILocation(line: 174, column: 9, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6208, file: !1800, line: 173, column: 80)
!6214 = !DILocation(line: 175, column: 5, scope: !6213)
!6215 = !DILocation(line: 178, column: 9, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6033, file: !1800, line: 178, column: 9)
!6217 = !DILocation(line: 178, column: 23, scope: !6216)
!6218 = !DILocation(line: 178, column: 26, scope: !6216)
!6219 = !DILocation(line: 178, column: 38, scope: !6216)
!6220 = !DILocation(line: 178, column: 9, scope: !6033)
!6221 = !DILocation(line: 182, column: 9, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6033, file: !1800, line: 182, column: 9)
!6223 = !DILocation(line: 182, column: 17, scope: !6222)
!6224 = !DILocation(line: 182, column: 34, scope: !6222)
!6225 = !DILocation(line: 182, column: 9, scope: !6033)
!6226 = !DILocation(line: 186, column: 9, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6033, file: !1800, line: 186, column: 9)
!6228 = !DILocation(line: 186, column: 15, scope: !6227)
!6229 = !DILocation(line: 186, column: 28, scope: !6227)
!6230 = !DILocation(line: 186, column: 31, scope: !6227)
!6231 = !DILocation(line: 186, column: 46, scope: !6227)
!6232 = !DILocation(line: 186, column: 9, scope: !6033)
!6233 = !DILocation(line: 187, column: 21, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6227, file: !1800, line: 186, column: 59)
!6235 = !DILocation(line: 188, column: 25, scope: !6234)
!6236 = !DILocation(line: 188, column: 23, scope: !6234)
!6237 = !DILocation(line: 189, column: 9, scope: !6234)
!6238 = !DILocation(line: 190, column: 9, scope: !6234)
!6239 = !DILocation(line: 194, column: 23, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6033, file: !1800, line: 194, column: 9)
!6241 = !{!6242, !2232, i64 280}
!6242 = !{!"_ZTSN6Cicada17Sim7x00CommDeviceE", !2232, i64 280}
!6243 = !DILocation(line: 194, column: 9, scope: !6240)
!6244 = !DILocation(line: 194, column: 9, scope: !6033)
!6245 = !DILocation(line: 195, column: 21, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6240, file: !1800, line: 194, column: 38)
!6247 = !DILocation(line: 196, column: 25, scope: !6246)
!6248 = !DILocation(line: 196, column: 23, scope: !6246)
!6249 = !DILocation(line: 197, column: 9, scope: !6246)
!6250 = !DILocation(line: 201, column: 13, scope: !6033)
!6251 = !DILocation(line: 201, column: 5, scope: !6033)
!6252 = !DILocation(line: 203, column: 9, scope: !6043)
!6253 = !DILocation(line: 204, column: 9, scope: !6043)
!6254 = !DILocation(line: 204, column: 23, scope: !6043)
!6255 = !DILocation(line: 205, column: 9, scope: !6043)
!6256 = !DILocation(line: 206, column: 9, scope: !6043)
!6257 = !DILocation(line: 209, column: 9, scope: !6043)
!6258 = !DILocation(line: 210, column: 9, scope: !6043)
!6259 = !DILocation(line: 210, column: 23, scope: !6043)
!6260 = !DILocation(line: 211, column: 24, scope: !6043)
!6261 = !DILocation(line: 212, column: 25, scope: !6043)
!6262 = !DILocation(line: 212, column: 23, scope: !6043)
!6263 = !DILocation(line: 213, column: 20, scope: !6043)
!6264 = !DILocation(line: 214, column: 9, scope: !6043)
!6265 = !DILocation(line: 215, column: 9, scope: !6043)
!6266 = !DILocation(line: 218, column: 9, scope: !6042)
!6267 = !DILocation(line: 218, column: 20, scope: !6042)
!6268 = !DILocation(line: 219, column: 9, scope: !6042)
!6269 = !DILocation(line: 219, column: 17, scope: !6042)
!6270 = !DILocation(line: 220, column: 9, scope: !6042)
!6271 = !DILocation(line: 220, column: 39, scope: !6042)
!6272 = !DILocation(line: 220, column: 45, scope: !6042)
!6273 = !DILocation(line: 220, column: 17, scope: !6042)
!6274 = !DILocation(line: 221, column: 9, scope: !6042)
!6275 = !DILocation(line: 221, column: 39, scope: !6042)
!6276 = !DILocation(line: 221, column: 17, scope: !6042)
!6277 = !DILocation(line: 223, column: 25, scope: !6042)
!6278 = !DILocation(line: 223, column: 23, scope: !6042)
!6279 = !DILocation(line: 224, column: 20, scope: !6042)
!6280 = !DILocation(line: 226, column: 5, scope: !6043)
!6281 = !DILocation(line: 229, column: 25, scope: !6043)
!6282 = !DILocation(line: 229, column: 23, scope: !6043)
!6283 = !DILocation(line: 230, column: 20, scope: !6043)
!6284 = !DILocation(line: 231, column: 9, scope: !6043)
!6285 = !DILocation(line: 232, column: 9, scope: !6043)
!6286 = !DILocation(line: 235, column: 25, scope: !6043)
!6287 = !DILocation(line: 235, column: 23, scope: !6043)
!6288 = !DILocation(line: 236, column: 20, scope: !6043)
!6289 = !DILocation(line: 237, column: 9, scope: !6043)
!6290 = !DILocation(line: 238, column: 9, scope: !6043)
!6291 = !DILocation(line: 241, column: 13, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6043, file: !1800, line: 241, column: 13)
!6293 = !DILocation(line: 241, column: 13, scope: !6043)
!6294 = !DILocation(line: 244, column: 9, scope: !6043)
!6295 = !DILocation(line: 245, column: 23, scope: !6043)
!6296 = !DILocation(line: 246, column: 20, scope: !6043)
!6297 = !DILocation(line: 247, column: 21, scope: !6043)
!6298 = !DILocation(line: 248, column: 9, scope: !6043)
!6299 = !DILocation(line: 249, column: 9, scope: !6043)
!6300 = !DILocation(line: 252, column: 25, scope: !6043)
!6301 = !DILocation(line: 252, column: 23, scope: !6043)
!6302 = !DILocation(line: 253, column: 20, scope: !6043)
!6303 = !DILocation(line: 254, column: 9, scope: !6043)
!6304 = !DILocation(line: 255, column: 9, scope: !6043)
!6305 = !DILocation(line: 258, column: 28, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6043, file: !1800, line: 258, column: 13)
!6307 = !DILocation(line: 258, column: 13, scope: !6043)
!6308 = !DILocation(line: 259, column: 25, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6306, file: !1800, line: 258, column: 44)
!6310 = !DILocation(line: 260, column: 29, scope: !6309)
!6311 = !DILocation(line: 260, column: 27, scope: !6309)
!6312 = !DILocation(line: 261, column: 24, scope: !6309)
!6313 = !DILocation(line: 262, column: 9, scope: !6309)
!6314 = !DILocation(line: 266, column: 9, scope: !6048)
!6315 = !DILocation(line: 266, column: 14, scope: !6048)
!6316 = !DILocation(line: 267, column: 50, scope: !6048)
!6317 = !DILocation(line: 267, column: 9, scope: !6048)
!6318 = !DILocation(line: 269, column: 9, scope: !6048)
!6319 = !DILocation(line: 269, column: 17, scope: !6048)
!6320 = !DILocation(line: 270, column: 13, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6048, file: !1800, line: 270, column: 13)
!6322 = !DILocation(line: 270, column: 19, scope: !6321)
!6323 = !DILocation(line: 0, scope: !6321)
!6324 = !DILocation(line: 270, column: 13, scope: !6048)
!6325 = !DILocation(line: 271, column: 21, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6321, file: !1800, line: 270, column: 27)
!6327 = !DILocation(line: 272, column: 9, scope: !6326)
!6328 = !DILocation(line: 273, column: 21, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6321, file: !1800, line: 272, column: 16)
!6330 = !DILocation(line: 274, column: 13, scope: !6329)
!6331 = !DILocation(line: 274, column: 43, scope: !6329)
!6332 = !DILocation(line: 274, column: 21, scope: !6329)
!6333 = !DILocation(line: 275, column: 13, scope: !6329)
!6334 = !DILocation(line: 275, column: 21, scope: !6329)
!6335 = !DILocation(line: 277, column: 9, scope: !6048)
!6336 = !DILocation(line: 277, column: 17, scope: !6048)
!6337 = !DILocation(line: 278, column: 9, scope: !6048)
!6338 = !DILocation(line: 278, column: 39, scope: !6048)
!6339 = !DILocation(line: 278, column: 17, scope: !6048)
!6340 = !DILocation(line: 280, column: 21, scope: !6048)
!6341 = !DILocation(line: 281, column: 23, scope: !6048)
!6342 = !DILocation(line: 282, column: 20, scope: !6048)
!6343 = !DILocation(line: 284, column: 5, scope: !6043)
!6344 = !DILocation(line: 287, column: 9, scope: !6043)
!6345 = !DILocation(line: 288, column: 9, scope: !6043)
!6346 = !DILocation(line: 288, column: 23, scope: !6043)
!6347 = !DILocation(line: 289, column: 21, scope: !6043)
!6348 = !DILocation(line: 290, column: 20, scope: !6043)
!6349 = !DILocation(line: 291, column: 24, scope: !6043)
!6350 = !DILocation(line: 292, column: 9, scope: !6043)
!6351 = !DILocation(line: 295, column: 13, scope: !6055)
!6352 = !DILocation(line: 295, column: 26, scope: !6055)
!6353 = !DILocation(line: 295, column: 13, scope: !6043)
!6354 = !DILocation(line: 296, column: 17, scope: !6053)
!6355 = !DILocation(line: 296, column: 17, scope: !6054)
!6356 = !DILocation(line: 297, column: 21, scope: !6051)
!6357 = !DILocation(line: 297, column: 27, scope: !6051)
!6358 = !DILocation(line: 297, column: 21, scope: !6052)
!6359 = !DILocation(line: 299, column: 21, scope: !6050)
!6360 = !DILocation(line: 299, column: 29, scope: !6050)
!6361 = !DILocation(line: 300, column: 21, scope: !6050)
!6362 = !DILocation(line: 300, column: 51, scope: !6050)
!6363 = !DILocation(line: 300, column: 29, scope: !6050)
!6364 = !DILocation(line: 301, column: 21, scope: !6050)
!6365 = !DILocation(line: 301, column: 29, scope: !6050)
!6366 = !DILocation(line: 304, column: 21, scope: !6050)
!6367 = !DILocation(line: 304, column: 26, scope: !6050)
!6368 = !DILocation(line: 305, column: 62, scope: !6050)
!6369 = !DILocation(line: 305, column: 21, scope: !6050)
!6370 = !DILocation(line: 306, column: 21, scope: !6050)
!6371 = !DILocation(line: 306, column: 29, scope: !6050)
!6372 = !DILocation(line: 307, column: 17, scope: !6051)
!6373 = !DILocation(line: 307, column: 17, scope: !6050)
!6374 = !DILocation(line: 308, column: 17, scope: !6052)
!6375 = !DILocation(line: 308, column: 47, scope: !6052)
!6376 = !DILocation(line: 308, column: 25, scope: !6052)
!6377 = !DILocation(line: 310, column: 17, scope: !6052)
!6378 = !DILocation(line: 310, column: 31, scope: !6052)
!6379 = !DILocation(line: 311, column: 28, scope: !6052)
!6380 = !DILocation(line: 312, column: 13, scope: !6052)
!6381 = !DILocation(line: 313, column: 20, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6055, file: !1800, line: 313, column: 20)
!6383 = !DILocation(line: 313, column: 35, scope: !6382)
!6384 = !DILocation(line: 313, column: 20, scope: !6055)
!6385 = !DILocation(line: 314, column: 28, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6382, file: !1800, line: 313, column: 51)
!6387 = !DILocation(line: 315, column: 13, scope: !6386)
!6388 = !DILocation(line: 315, column: 27, scope: !6386)
!6389 = !DILocation(line: 316, column: 24, scope: !6386)
!6390 = !DILocation(line: 317, column: 9, scope: !6386)
!6391 = !DILocation(line: 318, column: 13, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6382, file: !1800, line: 317, column: 16)
!6393 = !DILocation(line: 318, column: 27, scope: !6392)
!6394 = !DILocation(line: 319, column: 13, scope: !6392)
!6395 = !DILocation(line: 326, column: 24, scope: !6043)
!6396 = !DILocation(line: 327, column: 25, scope: !6043)
!6397 = !DILocation(line: 327, column: 23, scope: !6043)
!6398 = !DILocation(line: 328, column: 20, scope: !6043)
!6399 = !DILocation(line: 329, column: 9, scope: !6043)
!6400 = !DILocation(line: 332, column: 25, scope: !6043)
!6401 = !DILocation(line: 332, column: 23, scope: !6043)
!6402 = !DILocation(line: 333, column: 20, scope: !6043)
!6403 = !DILocation(line: 334, column: 21, scope: !6043)
!6404 = !DILocation(line: 335, column: 9, scope: !6043)
!6405 = !DILocation(line: 336, column: 9, scope: !6043)
!6406 = !DILocation(line: 339, column: 13, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6043, file: !1800, line: 339, column: 13)
!6408 = !DILocation(line: 339, column: 13, scope: !6043)
!6409 = !DILocation(line: 342, column: 13, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6043, file: !1800, line: 342, column: 13)
!6411 = !DILocation(line: 342, column: 29, scope: !6410)
!6412 = !DILocation(line: 342, column: 13, scope: !6043)
!6413 = !DILocation(line: 343, column: 32, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6415, file: !1800, line: 343, column: 17)
!6415 = distinct !DILexicalBlock(scope: !6410, file: !1800, line: 342, column: 34)
!6416 = !DILocation(line: 343, column: 17, scope: !6415)
!6417 = !DILocation(line: 344, column: 28, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6414, file: !1800, line: 343, column: 49)
!6419 = !DILocation(line: 345, column: 29, scope: !6418)
!6420 = !DILocation(line: 346, column: 13, scope: !6418)
!6421 = !DILocation(line: 347, column: 20, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6410, file: !1800, line: 347, column: 20)
!6423 = !DILocation(line: 347, column: 35, scope: !6422)
!6424 = !DILocation(line: 347, column: 20, scope: !6410)
!6425 = !DILocation(line: 348, column: 24, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6422, file: !1800, line: 347, column: 51)
!6427 = !DILocation(line: 349, column: 9, scope: !6426)
!6428 = !DILocation(line: 350, column: 24, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6422, file: !1800, line: 349, column: 16)
!6430 = !DILocation(line: 359, column: 13, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6043, file: !1800, line: 359, column: 13)
!6432 = !DILocation(line: 359, column: 26, scope: !6431)
!6433 = !DILocation(line: 359, column: 13, scope: !6043)
!6434 = !DILocation(line: 360, column: 17, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6436, file: !1800, line: 360, column: 17)
!6436 = distinct !DILexicalBlock(scope: !6431, file: !1800, line: 359, column: 31)
!6437 = !DILocation(line: 360, column: 17, scope: !6436)
!6438 = !DILocation(line: 361, column: 29, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6435, file: !1800, line: 360, column: 28)
!6440 = !DILocation(line: 362, column: 33, scope: !6439)
!6441 = !DILocation(line: 362, column: 31, scope: !6439)
!6442 = !DILocation(line: 363, column: 13, scope: !6439)
!6443 = !DILocation(line: 364, column: 20, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6431, file: !1800, line: 364, column: 20)
!6445 = !DILocation(line: 364, column: 36, scope: !6444)
!6446 = !DILocation(line: 364, column: 20, scope: !6431)
!6447 = !DILocation(line: 365, column: 24, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6444, file: !1800, line: 364, column: 41)
!6449 = !DILocation(line: 366, column: 9, scope: !6448)
!6450 = !DILocation(line: 367, column: 24, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6444, file: !1800, line: 366, column: 16)
!6452 = !DILocation(line: 372, column: 9, scope: !6043)
!6453 = !DILocation(line: 372, column: 23, scope: !6043)
!6454 = !DILocation(line: 373, column: 13, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6043, file: !1800, line: 373, column: 13)
!6456 = !DILocation(line: 373, column: 13, scope: !6043)
!6457 = !DILocation(line: 376, column: 9, scope: !6043)
!6458 = !DILocation(line: 377, column: 9, scope: !6043)
!6459 = !DILocation(line: 380, column: 9, scope: !6043)
!6460 = !DILocation(line: 380, column: 23, scope: !6043)
!6461 = !DILocation(line: 381, column: 23, scope: !6043)
!6462 = !DILocation(line: 382, column: 20, scope: !6043)
!6463 = !DILocation(line: 383, column: 9, scope: !6043)
!6464 = !DILocation(line: 384, column: 9, scope: !6043)
!6465 = !DILocation(line: 387, column: 24, scope: !6043)
!6466 = !DILocation(line: 388, column: 9, scope: !6043)
!6467 = !DILocation(line: 388, column: 23, scope: !6043)
!6468 = !DILocation(line: 389, column: 20, scope: !6043)
!6469 = !DILocation(line: 390, column: 9, scope: !6043)
!6470 = !DILocation(line: 395, column: 1, scope: !6033)
!6471 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada17Sim7x00CommDeviceD1Ev", scope: !1803, file: !1803, line: 37, type: !5018, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1799, retainedNodes: !173)
!6472 = !DILocation(line: 0, scope: !6471)
!6473 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada17Sim7x00CommDeviceD0Ev", scope: !1803, file: !1803, line: 37, type: !5018, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1799, retainedNodes: !173)
!6474 = !DILocation(line: 0, scope: !6473)
!6475 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada17Sim7x00CommDevice3runEv", scope: !1800, file: !1800, line: 49, type: !5018, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1799, retainedNodes: !173)
!6476 = !DILocation(line: 0, scope: !6475)
!6477 = distinct !DISubprogram(name: "Sim7x00CommDevice", linkageName: "_ZN6Cicada17Sim7x00CommDeviceC2ERNS_15IBufferedSerialEPhS3_y", scope: !1804, file: !1800, line: 35, type: !1809, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1799, declaration: !1808, retainedNodes: !6478)
!6478 = !{!6479, !6480, !6481, !6482, !6483}
!6479 = !DILocalVariable(name: "this", arg: 1, scope: !6477, type: !6030, flags: DIFlagArtificial | DIFlagObjectPointer)
!6480 = !DILocalVariable(name: "serial", arg: 2, scope: !6477, file: !1800, line: 36, type: !753)
!6481 = !DILocalVariable(name: "readBuffer", arg: 3, scope: !6477, file: !1800, line: 36, type: !59)
!6482 = !DILocalVariable(name: "writeBuffer", arg: 4, scope: !6477, file: !1800, line: 36, type: !59)
!6483 = !DILocalVariable(name: "bufferSize", arg: 5, scope: !6477, file: !1800, line: 36, type: !42)
!6484 = !DILocation(line: 0, scope: !6477)
!6485 = !DILocation(line: 38, column: 1, scope: !6477)
!6486 = !DILocation(line: 37, column: 5, scope: !6477)
!6487 = !DILocation(line: 148, column: 17, scope: !6488)
!6488 = !DILexicalBlockFile(scope: !6477, file: !1803, discriminator: 0)
!6489 = !DILocation(line: 39, column: 5, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6491, file: !1800, line: 38, column: 1)
!6491 = !DILexicalBlockFile(scope: !6477, file: !1800, discriminator: 0)
!6492 = !DILocation(line: 39, column: 26, scope: !6490)
!6493 = !DILocation(line: 40, column: 1, scope: !6491)
!6494 = distinct !DISubprogram(name: "Sim7x00CommDevice", linkageName: "_ZN6Cicada17Sim7x00CommDeviceC2ERNS_15IBufferedSerialEPhS3_yy", scope: !1804, file: !1800, line: 42, type: !1813, scopeLine: 45, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1799, declaration: !1812, retainedNodes: !6495)
!6495 = !{!6496, !6497, !6498, !6499, !6500, !6501}
!6496 = !DILocalVariable(name: "this", arg: 1, scope: !6494, type: !6030, flags: DIFlagArtificial | DIFlagObjectPointer)
!6497 = !DILocalVariable(name: "serial", arg: 2, scope: !6494, file: !1800, line: 42, type: !753)
!6498 = !DILocalVariable(name: "readBuffer", arg: 3, scope: !6494, file: !1800, line: 42, type: !59)
!6499 = !DILocalVariable(name: "writeBuffer", arg: 4, scope: !6494, file: !1800, line: 43, type: !59)
!6500 = !DILocalVariable(name: "readBufferSize", arg: 5, scope: !6494, file: !1800, line: 43, type: !42)
!6501 = !DILocalVariable(name: "writeBufferSize", arg: 6, scope: !6494, file: !1800, line: 43, type: !42)
!6502 = !DILocation(line: 0, scope: !6494)
!6503 = !DILocation(line: 45, column: 1, scope: !6494)
!6504 = !DILocation(line: 44, column: 5, scope: !6494)
!6505 = !DILocation(line: 148, column: 17, scope: !6506)
!6506 = !DILexicalBlockFile(scope: !6494, file: !1803, discriminator: 0)
!6507 = !DILocation(line: 46, column: 5, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6509, file: !1800, line: 45, column: 1)
!6509 = !DILexicalBlockFile(scope: !6494, file: !1800, discriminator: 0)
!6510 = !DILocation(line: 46, column: 26, scope: !6508)
!6511 = !DILocation(line: 47, column: 1, scope: !6509)
!6512 = distinct !DISubprogram(name: "Scheduler", linkageName: "_ZN6Cicada9SchedulerC2EPFjvEPPNS_4TaskE", scope: !1891, file: !1889, line: 29, type: !1903, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1888, declaration: !1902, retainedNodes: !6513)
!6513 = !{!6514, !6516, !6517}
!6514 = !DILocalVariable(name: "this", arg: 1, scope: !6512, type: !6515, flags: DIFlagArtificial | DIFlagObjectPointer)
!6515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 32)
!6516 = !DILocalVariable(name: "tickFunction", arg: 2, scope: !6512, file: !1889, line: 29, type: !1895)
!6517 = !DILocalVariable(name: "taskList", arg: 3, scope: !6512, file: !1889, line: 29, type: !1899)
!6518 = !DILocation(line: 0, scope: !6512)
!6519 = !DILocation(line: 30, column: 5, scope: !6512)
!6520 = !{!6521, !2232, i64 0}
!6521 = !{!"_ZTSN6Cicada9SchedulerE", !2232, i64 0, !2232, i64 4, !2232, i64 8}
!6522 = !DILocation(line: 30, column: 34, scope: !6512)
!6523 = !{!6521, !2232, i64 4}
!6524 = !DILocation(line: 30, column: 55, scope: !6512)
!6525 = !{!6521, !2232, i64 8}
!6526 = !DILocation(line: 31, column: 2, scope: !6512)
!6527 = distinct !DISubprogram(name: "runTask", linkageName: "_ZN6Cicada9Scheduler7runTaskEv", scope: !1891, file: !1889, line: 33, type: !1907, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1888, declaration: !1906, retainedNodes: !6528)
!6528 = !{!6529, !6530}
!6529 = !DILocalVariable(name: "this", arg: 1, scope: !6527, type: !6515, flags: DIFlagArtificial | DIFlagObjectPointer)
!6530 = !DILocalVariable(name: "tick", scope: !6527, file: !1889, line: 35, type: !103)
!6531 = !DILocation(line: 0, scope: !6527)
!6532 = !DILocation(line: 35, column: 24, scope: !6527)
!6533 = !DILocation(line: 36, column: 11, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6527, file: !1889, line: 36, column: 9)
!6535 = !DILocation(line: 36, column: 10, scope: !6534)
!6536 = !DILocation(line: 36, column: 26, scope: !6534)
!6537 = !DILocation(line: 36, column: 34, scope: !6534)
!6538 = !DILocation(line: 37, column: 9, scope: !6534)
!6539 = !DILocation(line: 37, column: 21, scope: !6534)
!6540 = !DILocation(line: 37, column: 20, scope: !6534)
!6541 = !DILocation(line: 37, column: 36, scope: !6534)
!6542 = !DILocation(line: 37, column: 17, scope: !6534)
!6543 = !DILocation(line: 37, column: 51, scope: !6534)
!6544 = !DILocation(line: 37, column: 50, scope: !6534)
!6545 = !DILocation(line: 37, column: 66, scope: !6534)
!6546 = !DILocation(line: 37, column: 49, scope: !6534)
!6547 = !DILocation(line: 37, column: 46, scope: !6534)
!6548 = !DILocation(line: 36, column: 9, scope: !6527)
!6549 = !DILocation(line: 38, column: 11, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6534, file: !1889, line: 37, column: 75)
!6551 = !DILocation(line: 38, column: 10, scope: !6550)
!6552 = !DILocation(line: 38, column: 26, scope: !6550)
!6553 = !DILocation(line: 39, column: 11, scope: !6550)
!6554 = !DILocation(line: 39, column: 10, scope: !6550)
!6555 = !DILocation(line: 39, column: 26, scope: !6550)
!6556 = !DILocation(line: 40, column: 5, scope: !6550)
!6557 = !DILocation(line: 42, column: 10, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6527, file: !1889, line: 42, column: 9)
!6559 = !DILocation(line: 42, column: 9, scope: !6558)
!6560 = !DILocation(line: 42, column: 25, scope: !6558)
!6561 = !DILocation(line: 42, column: 9, scope: !6527)
!6562 = !DILocation(line: 43, column: 24, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6558, file: !1889, line: 42, column: 34)
!6564 = !DILocation(line: 43, column: 22, scope: !6563)
!6565 = !DILocation(line: 44, column: 5, scope: !6563)
!6566 = !DILocation(line: 45, column: 1, scope: !6527)
!6567 = distinct !DISubprogram(name: "delay", linkageName: "_ZNK6Cicada4Task5delayEv", scope: !117, file: !118, line: 203, type: !133, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1888, declaration: !132, retainedNodes: !6568)
!6568 = !{!6569}
!6569 = !DILocalVariable(name: "this", arg: 1, scope: !6567, type: !6570, flags: DIFlagArtificial | DIFlagObjectPointer)
!6570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!6571 = !DILocation(line: 0, scope: !6567)
!6572 = !DILocation(line: 205, column: 16, scope: !6567)
!6573 = !DILocation(line: 205, column: 9, scope: !6567)
!6574 = distinct !DISubprogram(name: "lastRun", linkageName: "_ZN6Cicada4Task7lastRunEv", scope: !117, file: !118, line: 222, type: !139, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1888, declaration: !138, retainedNodes: !6575)
!6575 = !{!6576}
!6576 = !DILocalVariable(name: "this", arg: 1, scope: !6574, type: !1900, flags: DIFlagArtificial | DIFlagObjectPointer)
!6577 = !DILocation(line: 0, scope: !6574)
!6578 = !DILocation(line: 224, column: 16, scope: !6574)
!6579 = !DILocation(line: 224, column: 9, scope: !6574)
!6580 = distinct !DISubprogram(name: "setLastRun", linkageName: "_ZN6Cicada4Task10setLastRunEj", scope: !117, file: !118, line: 230, type: !142, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1888, declaration: !141, retainedNodes: !6581)
!6581 = !{!6582, !6583}
!6582 = !DILocalVariable(name: "this", arg: 1, scope: !6580, type: !1900, flags: DIFlagArtificial | DIFlagObjectPointer)
!6583 = !DILocalVariable(name: "time", arg: 2, scope: !6580, file: !118, line: 230, type: !103)
!6584 = !DILocation(line: 0, scope: !6580)
!6585 = !DILocation(line: 232, column: 9, scope: !6580)
!6586 = !DILocation(line: 232, column: 18, scope: !6580)
!6587 = !DILocation(line: 233, column: 5, scope: !6580)
!6588 = distinct !DISubprogram(name: "start", linkageName: "_ZN6Cicada9Scheduler5startEv", scope: !1891, file: !1889, line: 47, type: !1907, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1888, declaration: !1909, retainedNodes: !6589)
!6589 = !{!6590}
!6590 = !DILocalVariable(name: "this", arg: 1, scope: !6588, type: !6515, flags: DIFlagArtificial | DIFlagObjectPointer)
!6591 = !DILocation(line: 0, scope: !6588)
!6592 = !DILocation(line: 49, column: 5, scope: !6588)
!6593 = !DILocation(line: 50, column: 9, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6595, file: !1889, line: 49, column: 5)
!6595 = distinct !DILexicalBlock(scope: !6588, file: !1889, line: 49, column: 5)
!6596 = !DILocation(line: 49, column: 5, scope: !6594)
!6597 = distinct !{!6597, !6598, !6599, !2571, !2572}
!6598 = !DILocation(line: 49, column: 5, scope: !6595)
!6599 = !DILocation(line: 50, column: 17, scope: !6595)
!6600 = distinct !DISubprogram(name: "eTickFunction", linkageName: "_Z13eTickFunctionv", scope: !1913, file: !1913, line: 27, type: !1896, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1912, retainedNodes: !173)
!6601 = !DILocation(line: 29, column: 12, scope: !6600)
!6602 = !DILocation(line: 29, column: 5, scope: !6600)
!6603 = distinct !DISubprogram(name: "~Stm32Uart", linkageName: "_ZN6Cicada9Stm32UartD2Ev", scope: !1327, file: !1229, line: 73, type: !1385, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, declaration: !1384, retainedNodes: !6604)
!6604 = !{!6605}
!6605 = !DILocalVariable(name: "this", arg: 1, scope: !6603, type: !1334, flags: DIFlagArtificial | DIFlagObjectPointer)
!6606 = !DILocation(line: 0, scope: !6603)
!6607 = !DILocation(line: 74, column: 1, scope: !6603)
!6608 = !DILocation(line: 75, column: 9, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6610, file: !1229, line: 75, column: 9)
!6610 = distinct !DILexicalBlock(scope: !6603, file: !1229, line: 74, column: 1)
!6611 = !{!6612, !2233, i64 104}
!6612 = !{!"_ZTSN6Cicada9Stm32UartE", !2233, i64 104, !6613, i64 108, !2232, i64 180, !2365, i64 184, !2365, i64 186, !6617, i64 188}
!6613 = !{!"_ZTS20__UART_HandleTypeDef", !2232, i64 0, !6614, i64 4, !2232, i64 32, !2365, i64 36, !2365, i64 38, !2232, i64 40, !2365, i64 44, !2365, i64 46, !2232, i64 48, !2232, i64 52, !6615, i64 56, !6616, i64 60, !6616, i64 64, !2280, i64 68}
!6614 = !{!"_ZTS16UART_InitTypeDef", !2280, i64 0, !2280, i64 4, !2280, i64 8, !2280, i64 12, !2280, i64 16, !2280, i64 20, !2280, i64 24}
!6615 = !{!"_ZTS15HAL_LockTypeDef", !2233, i64 0}
!6616 = !{!"_ZTS21HAL_UART_StateTypeDef", !2233, i64 0}
!6617 = !{!"_ZTS9IRQn_Type", !2233, i64 0}
!6618 = !DILocation(line: 75, column: 16, scope: !6609)
!6619 = !DILocation(line: 75, column: 9, scope: !6610)
!6620 = !DILocation(line: 76, column: 9, scope: !6609)
!6621 = !DILocation(line: 77, column: 1, scope: !6610)
!6622 = !DILocation(line: 77, column: 1, scope: !6603)
!6623 = distinct !DISubprogram(name: "~Stm32Uart", linkageName: "_ZN6Cicada9Stm32UartD0Ev", scope: !1327, file: !1229, line: 73, type: !1385, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, declaration: !1384, retainedNodes: !6624)
!6624 = !{!6625}
!6625 = !DILocalVariable(name: "this", arg: 1, scope: !6623, type: !1334, flags: DIFlagArtificial | DIFlagObjectPointer)
!6626 = !DILocation(line: 0, scope: !6623)
!6627 = !DILocation(line: 74, column: 1, scope: !6623)
!6628 = !DILocation(line: 77, column: 1, scope: !6623)
!6629 = distinct !DISubprogram(name: "writeBufferProcessed", linkageName: "_ZNK6Cicada9Stm32Uart20writeBufferProcessedEv", scope: !1327, file: !1229, line: 251, type: !1412, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, declaration: !1411, retainedNodes: !6630)
!6630 = !{!6631}
!6631 = !DILocalVariable(name: "this", arg: 1, scope: !6629, type: !6632, flags: DIFlagArtificial | DIFlagObjectPointer)
!6632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 32)
!6633 = !DILocation(line: 0, scope: !6629)
!6634 = !DILocation(line: 253, column: 12, scope: !6629)
!6635 = !DILocation(line: 253, column: 25, scope: !6629)
!6636 = !DILocation(line: 253, column: 42, scope: !6629)
!6637 = !DILocation(line: 253, column: 47, scope: !6629)
!6638 = !DILocation(line: 253, column: 50, scope: !6629)
!6639 = !{!6612, !2232, i64 108}
!6640 = !{!6641, !2280, i64 0}
!6641 = !{!"_ZTS13USART_TypeDef", !2280, i64 0, !2280, i64 4, !2280, i64 8, !2280, i64 12, !2280, i64 16, !2280, i64 20, !2280, i64 24}
!6642 = !DILocation(line: 253, column: 5, scope: !6629)
!6643 = distinct !DISubprogram(name: "open", linkageName: "_ZN6Cicada9Stm32Uart4openEv", scope: !1327, file: !1229, line: 112, type: !1391, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, declaration: !1390, retainedNodes: !6644)
!6644 = !{!6645}
!6645 = !DILocalVariable(name: "this", arg: 1, scope: !6643, type: !1334, flags: DIFlagArtificial | DIFlagObjectPointer)
!6646 = !DILocation(line: 0, scope: !6643)
!6647 = !DILocation(line: 114, column: 12, scope: !6643)
!6648 = !DILocation(line: 114, column: 5, scope: !6643)
!6649 = distinct !DISubprogram(name: "open", linkageName: "_ZN6Cicada9Stm32Uart4openEh", scope: !1327, file: !1229, line: 117, type: !1394, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, declaration: !1393, retainedNodes: !6650)
!6650 = !{!6651, !6652, !6653, !6657, !6659, !6663, !6667, !6671, !6675, !6679, !6683, !6687}
!6651 = !DILocalVariable(name: "this", arg: 1, scope: !6649, type: !1334, flags: DIFlagArtificial | DIFlagObjectPointer)
!6652 = !DILocalVariable(name: "priority", arg: 2, scope: !6649, file: !1229, line: 117, type: !60)
!6653 = !DILocalVariable(name: "tmpreg", scope: !6654, file: !1229, line: 121, type: !103)
!6654 = distinct !DILexicalBlock(scope: !6655, file: !1229, line: 121, column: 9)
!6655 = distinct !DILexicalBlock(scope: !6656, file: !1229, line: 120, column: 37)
!6656 = distinct !DILexicalBlock(scope: !6649, file: !1229, line: 120, column: 9)
!6657 = !DILocalVariable(name: "tmpreg", scope: !6658, file: !1229, line: 122, type: !102)
!6658 = distinct !DILexicalBlock(scope: !6655, file: !1229, line: 122, column: 9)
!6659 = !DILocalVariable(name: "tmpreg", scope: !6660, file: !1229, line: 125, type: !102)
!6660 = distinct !DILexicalBlock(scope: !6661, file: !1229, line: 125, column: 9)
!6661 = distinct !DILexicalBlock(scope: !6662, file: !1229, line: 124, column: 44)
!6662 = distinct !DILexicalBlock(scope: !6656, file: !1229, line: 124, column: 16)
!6663 = !DILocalVariable(name: "tmpreg", scope: !6664, file: !1229, line: 128, type: !102)
!6664 = distinct !DILexicalBlock(scope: !6665, file: !1229, line: 128, column: 9)
!6665 = distinct !DILexicalBlock(scope: !6666, file: !1229, line: 127, column: 44)
!6666 = distinct !DILexicalBlock(scope: !6662, file: !1229, line: 127, column: 16)
!6667 = !DILocalVariable(name: "tmpreg", scope: !6668, file: !1229, line: 146, type: !102)
!6668 = distinct !DILexicalBlock(scope: !6669, file: !1229, line: 146, column: 9)
!6669 = distinct !DILexicalBlock(scope: !6670, file: !1229, line: 145, column: 29)
!6670 = distinct !DILexicalBlock(scope: !6649, file: !1229, line: 145, column: 9)
!6671 = !DILocalVariable(name: "tmpreg", scope: !6672, file: !1229, line: 148, type: !102)
!6672 = distinct !DILexicalBlock(scope: !6673, file: !1229, line: 148, column: 9)
!6673 = distinct !DILexicalBlock(scope: !6674, file: !1229, line: 147, column: 36)
!6674 = distinct !DILexicalBlock(scope: !6670, file: !1229, line: 147, column: 16)
!6675 = !DILocalVariable(name: "tmpreg", scope: !6676, file: !1229, line: 150, type: !102)
!6676 = distinct !DILexicalBlock(scope: !6677, file: !1229, line: 150, column: 9)
!6677 = distinct !DILexicalBlock(scope: !6678, file: !1229, line: 149, column: 36)
!6678 = distinct !DILexicalBlock(scope: !6674, file: !1229, line: 149, column: 16)
!6679 = !DILocalVariable(name: "tmpreg", scope: !6680, file: !1229, line: 152, type: !102)
!6680 = distinct !DILexicalBlock(scope: !6681, file: !1229, line: 152, column: 9)
!6681 = distinct !DILexicalBlock(scope: !6682, file: !1229, line: 151, column: 36)
!6682 = distinct !DILexicalBlock(scope: !6678, file: !1229, line: 151, column: 16)
!6683 = !DILocalVariable(name: "tmpreg", scope: !6684, file: !1229, line: 154, type: !102)
!6684 = distinct !DILexicalBlock(scope: !6685, file: !1229, line: 154, column: 9)
!6685 = distinct !DILexicalBlock(scope: !6686, file: !1229, line: 153, column: 36)
!6686 = distinct !DILexicalBlock(scope: !6682, file: !1229, line: 153, column: 16)
!6687 = !DILocalVariable(name: "gpio", scope: !6649, file: !1229, line: 166, type: !6688)
!6688 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !1541, line: 60, baseType: !6689)
!6689 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1541, line: 47, size: 128, flags: DIFlagTypePassByValue, elements: !6690, identifier: "_ZTS16GPIO_InitTypeDef")
!6690 = !{!6691, !6692, !6693, !6694}
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !6689, file: !1541, line: 49, baseType: !103, size: 32)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !6689, file: !1541, line: 52, baseType: !103, size: 32, offset: 32)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !6689, file: !1541, line: 55, baseType: !103, size: 32, offset: 64)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !6689, file: !1541, line: 58, baseType: !103, size: 32, offset: 96)
!6695 = !DILocation(line: 0, scope: !6649)
!6696 = !DILocation(line: 120, column: 9, scope: !6656)
!6697 = !DILocation(line: 120, column: 17, scope: !6656)
!6698 = !DILocation(line: 120, column: 9, scope: !6649)
!6699 = !DILocation(line: 121, column: 9, scope: !6654)
!6700 = !{!6701, !2280, i64 4}
!6701 = !{!"_ZTS12AFIO_TypeDef", !2280, i64 0, !2280, i64 4, !2233, i64 8, !2280, i64 24, !2280, i64 28}
!6702 = !DILocation(line: 0, scope: !6654)
!6703 = !DILocation(line: 122, column: 9, scope: !6658)
!6704 = !{!6705, !2280, i64 24}
!6705 = !{!"_ZTS11RCC_TypeDef", !2280, i64 0, !2280, i64 4, !2280, i64 8, !2280, i64 12, !2280, i64 16, !2280, i64 20, !2280, i64 24, !2280, i64 28, !2280, i64 32, !2280, i64 36}
!6706 = !DILocation(line: 122, column: 9, scope: !6655)
!6707 = !DILocation(line: 124, column: 5, scope: !6655)
!6708 = !DILocation(line: 125, column: 9, scope: !6660)
!6709 = !{!6705, !2280, i64 28}
!6710 = !DILocation(line: 125, column: 9, scope: !6661)
!6711 = !DILocation(line: 127, column: 5, scope: !6661)
!6712 = !DILocation(line: 128, column: 9, scope: !6664)
!6713 = !DILocation(line: 128, column: 9, scope: !6665)
!6714 = !DILocation(line: 0, scope: !6656)
!6715 = !{!6612, !6617, i64 188}
!6716 = !DILocation(line: 145, column: 9, scope: !6670)
!6717 = !{!6612, !2232, i64 180}
!6718 = !DILocation(line: 145, column: 9, scope: !6649)
!6719 = !DILocation(line: 146, column: 9, scope: !6668)
!6720 = !DILocation(line: 146, column: 9, scope: !6669)
!6721 = !DILocation(line: 147, column: 5, scope: !6669)
!6722 = !DILocation(line: 148, column: 9, scope: !6672)
!6723 = !DILocation(line: 148, column: 9, scope: !6673)
!6724 = !DILocation(line: 149, column: 5, scope: !6673)
!6725 = !DILocation(line: 150, column: 9, scope: !6676)
!6726 = !DILocation(line: 150, column: 9, scope: !6677)
!6727 = !DILocation(line: 151, column: 5, scope: !6677)
!6728 = !DILocation(line: 152, column: 9, scope: !6680)
!6729 = !DILocation(line: 152, column: 9, scope: !6681)
!6730 = !DILocation(line: 153, column: 5, scope: !6681)
!6731 = !DILocation(line: 154, column: 9, scope: !6684)
!6732 = !DILocation(line: 154, column: 9, scope: !6685)
!6733 = !DILocation(line: 163, column: 5, scope: !6685)
!6734 = !DILocation(line: 166, column: 5, scope: !6649)
!6735 = !DILocation(line: 166, column: 22, scope: !6649)
!6736 = !DILocation(line: 167, column: 16, scope: !6649)
!6737 = !{!6612, !2365, i64 184}
!6738 = !DILocation(line: 167, column: 10, scope: !6649)
!6739 = !DILocation(line: 167, column: 14, scope: !6649)
!6740 = !{!6741, !2280, i64 0}
!6741 = !{!"_ZTS16GPIO_InitTypeDef", !2280, i64 0, !2280, i64 4, !2280, i64 8, !2280, i64 12}
!6742 = !DILocation(line: 168, column: 10, scope: !6649)
!6743 = !DILocation(line: 168, column: 15, scope: !6649)
!6744 = !{!6741, !2280, i64 4}
!6745 = !DILocation(line: 169, column: 10, scope: !6649)
!6746 = !DILocation(line: 169, column: 15, scope: !6649)
!6747 = !{!6741, !2280, i64 8}
!6748 = !DILocation(line: 170, column: 10, scope: !6649)
!6749 = !DILocation(line: 170, column: 16, scope: !6649)
!6750 = !{!6741, !2280, i64 12}
!6751 = !DILocation(line: 171, column: 5, scope: !6649)
!6752 = !DILocation(line: 173, column: 16, scope: !6649)
!6753 = !{!6612, !2365, i64 186}
!6754 = !DILocation(line: 173, column: 14, scope: !6649)
!6755 = !DILocation(line: 174, column: 15, scope: !6649)
!6756 = !DILocation(line: 175, column: 19, scope: !6649)
!6757 = !DILocation(line: 175, column: 5, scope: !6649)
!6758 = !DILocation(line: 178, column: 18, scope: !6649)
!6759 = !DILocation(line: 178, column: 27, scope: !6649)
!6760 = !{!6612, !2280, i64 120}
!6761 = !DILocation(line: 179, column: 18, scope: !6649)
!6762 = !DILocation(line: 179, column: 25, scope: !6649)
!6763 = !{!6612, !2280, i64 124}
!6764 = !DILocation(line: 180, column: 18, scope: !6649)
!6765 = !DILocation(line: 180, column: 23, scope: !6649)
!6766 = !{!6612, !2280, i64 128}
!6767 = !DILocation(line: 181, column: 18, scope: !6649)
!6768 = !DILocation(line: 181, column: 28, scope: !6649)
!6769 = !{!6612, !2280, i64 132}
!6770 = !DILocation(line: 182, column: 18, scope: !6649)
!6771 = !DILocation(line: 182, column: 31, scope: !6649)
!6772 = !{!6612, !2280, i64 136}
!6773 = !DILocation(line: 184, column: 9, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6649, file: !1229, line: 184, column: 9)
!6775 = !DILocation(line: 184, column: 33, scope: !6774)
!6776 = !DILocation(line: 184, column: 9, scope: !6649)
!6777 = !DILocation(line: 188, column: 22, scope: !6649)
!6778 = !DILocation(line: 188, column: 46, scope: !6649)
!6779 = !DILocation(line: 188, column: 5, scope: !6649)
!6780 = !DILocation(line: 189, column: 20, scope: !6649)
!6781 = !DILocation(line: 189, column: 5, scope: !6649)
!6782 = !DILocation(line: 190, column: 5, scope: !6649)
!6783 = !{!6641, !2280, i64 12}
!6784 = !DILocation(line: 192, column: 5, scope: !6649)
!6785 = !DILocation(line: 192, column: 12, scope: !6649)
!6786 = !DILocation(line: 194, column: 5, scope: !6649)
!6787 = !DILocation(line: 195, column: 1, scope: !6649)
!6788 = distinct !DISubprogram(name: "isOpen", linkageName: "_ZN6Cicada9Stm32Uart6isOpenEv", scope: !1327, file: !1229, line: 207, type: !1391, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, declaration: !1396, retainedNodes: !6789)
!6789 = !{!6790}
!6790 = !DILocalVariable(name: "this", arg: 1, scope: !6788, type: !1334, flags: DIFlagArtificial | DIFlagObjectPointer)
!6791 = !DILocation(line: 0, scope: !6788)
!6792 = !DILocation(line: 209, column: 12, scope: !6788)
!6793 = !DILocation(line: 209, column: 19, scope: !6788)
!6794 = !DILocation(line: 209, column: 5, scope: !6788)
!6795 = distinct !DISubprogram(name: "setSerialConfig", linkageName: "_ZN6Cicada9Stm32Uart15setSerialConfigEjh", scope: !1327, file: !1229, line: 91, type: !1398, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, declaration: !1397, retainedNodes: !6796)
!6796 = !{!6797, !6798, !6799}
!6797 = !DILocalVariable(name: "this", arg: 1, scope: !6795, type: !1334, flags: DIFlagArtificial | DIFlagObjectPointer)
!6798 = !DILocalVariable(name: "baudRate", arg: 2, scope: !6795, file: !1229, line: 91, type: !103)
!6799 = !DILocalVariable(name: "dataBits", arg: 3, scope: !6795, file: !1229, line: 91, type: !60)
!6800 = !DILocation(line: 0, scope: !6795)
!6801 = !DILocation(line: 93, column: 23, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6795, file: !1229, line: 93, column: 9)
!6803 = !DILocation(line: 96, column: 18, scope: !6795)
!6804 = !DILocation(line: 96, column: 27, scope: !6795)
!6805 = !{!6612, !2280, i64 112}
!6806 = !DILocation(line: 98, column: 5, scope: !6795)
!6807 = !DILocation(line: 104, column: 9, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6795, file: !1229, line: 98, column: 23)
!6809 = !DILocation(line: 0, scope: !6808)
!6810 = !{!6612, !2280, i64 116}
!6811 = !DILocation(line: 110, column: 1, scope: !6795)
!6812 = distinct !DISubprogram(name: "close", linkageName: "_ZN6Cicada9Stm32Uart5closeEv", scope: !1327, file: !1229, line: 197, type: !1385, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, declaration: !1400, retainedNodes: !6813)
!6813 = !{!6814}
!6814 = !DILocalVariable(name: "this", arg: 1, scope: !6812, type: !1334, flags: DIFlagArtificial | DIFlagObjectPointer)
!6815 = !DILocation(line: 0, scope: !6812)
!6816 = !DILocation(line: 199, column: 21, scope: !6812)
!6817 = !DILocation(line: 199, column: 5, scope: !6812)
!6818 = !DILocation(line: 200, column: 22, scope: !6812)
!6819 = !DILocation(line: 200, column: 5, scope: !6812)
!6820 = !DILocation(line: 201, column: 21, scope: !6812)
!6821 = !DILocation(line: 201, column: 32, scope: !6812)
!6822 = !DILocation(line: 201, column: 5, scope: !6812)
!6823 = !DILocation(line: 202, column: 21, scope: !6812)
!6824 = !DILocation(line: 202, column: 32, scope: !6812)
!6825 = !DILocation(line: 202, column: 5, scope: !6812)
!6826 = !DILocation(line: 204, column: 5, scope: !6812)
!6827 = !DILocation(line: 204, column: 12, scope: !6812)
!6828 = !DILocation(line: 205, column: 1, scope: !6812)
!6829 = distinct !DISubprogram(name: "portName", linkageName: "_ZNK6Cicada9Stm32Uart8portNameEv", scope: !1327, file: !1229, line: 212, type: !1402, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, declaration: !1401, retainedNodes: !6830)
!6830 = !{!6831}
!6831 = !DILocalVariable(name: "this", arg: 1, scope: !6829, type: !6632, flags: DIFlagArtificial | DIFlagObjectPointer)
!6832 = !DILocation(line: 0, scope: !6829)
!6833 = !DILocation(line: 214, column: 5, scope: !6829)
!6834 = distinct !DISubprogram(name: "rawRead", linkageName: "_ZN6Cicada9Stm32Uart7rawReadERh", scope: !1327, file: !1229, line: 217, type: !1407, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, declaration: !1406, retainedNodes: !6835)
!6835 = !{!6836, !6837}
!6836 = !DILocalVariable(name: "this", arg: 1, scope: !6834, type: !1334, flags: DIFlagArtificial | DIFlagObjectPointer)
!6837 = !DILocalVariable(name: "data", arg: 2, scope: !6834, file: !1229, line: 217, type: !783)
!6838 = !DILocation(line: 0, scope: !6834)
!6839 = !DILocation(line: 219, column: 9, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6834, file: !1229, line: 219, column: 9)
!6841 = !DILocation(line: 219, column: 55, scope: !6840)
!6842 = !DILocation(line: 220, column: 9, scope: !6840)
!6843 = !DILocation(line: 219, column: 9, scope: !6834)
!6844 = !DILocation(line: 221, column: 25, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6840, file: !1229, line: 220, column: 55)
!6846 = !{!6641, !2280, i64 4}
!6847 = !DILocation(line: 221, column: 14, scope: !6845)
!6848 = !DILocation(line: 222, column: 9, scope: !6845)
!6849 = !DILocation(line: 226, column: 1, scope: !6834)
!6850 = distinct !DISubprogram(name: "rawWrite", linkageName: "_ZN6Cicada9Stm32Uart8rawWriteEh", scope: !1327, file: !1229, line: 228, type: !1394, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, declaration: !1409, retainedNodes: !6851)
!6851 = !{!6852, !6853}
!6852 = !DILocalVariable(name: "this", arg: 1, scope: !6850, type: !1334, flags: DIFlagArtificial | DIFlagObjectPointer)
!6853 = !DILocalVariable(name: "data", arg: 2, scope: !6850, file: !1229, line: 228, type: !60)
!6854 = !DILocation(line: 0, scope: !6850)
!6855 = !DILocation(line: 230, column: 9, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6850, file: !1229, line: 230, column: 9)
!6857 = !DILocation(line: 230, column: 9, scope: !6850)
!6858 = !DILocation(line: 231, column: 9, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6856, file: !1229, line: 230, column: 55)
!6860 = !DILocation(line: 232, column: 9, scope: !6859)
!6861 = !DILocation(line: 236, column: 1, scope: !6850)
!6862 = distinct !DISubprogram(name: "startTransmit", linkageName: "_ZN6Cicada9Stm32Uart13startTransmitEv", scope: !1327, file: !1229, line: 238, type: !1385, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, declaration: !1410, retainedNodes: !6863)
!6863 = !{!6864}
!6864 = !DILocalVariable(name: "this", arg: 1, scope: !6862, type: !1334, flags: DIFlagArtificial | DIFlagObjectPointer)
!6865 = !DILocation(line: 0, scope: !6862)
!6866 = !DILocation(line: 240, column: 5, scope: !6862)
!6867 = !DILocation(line: 241, column: 1, scope: !6862)
!6868 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32UartD1Ev", scope: !1229, file: !1229, line: 73, type: !5018, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !173)
!6869 = !DILocation(line: 0, scope: !6868)
!6870 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32UartD0Ev", scope: !1229, file: !1229, line: 73, type: !5018, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !173)
!6871 = !DILocation(line: 0, scope: !6870)
!6872 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart4openEv", scope: !1229, file: !1229, line: 112, type: !5018, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !173)
!6873 = !DILocation(line: 0, scope: !6872)
!6874 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart6isOpenEv", scope: !1229, file: !1229, line: 207, type: !5018, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !173)
!6875 = !DILocation(line: 0, scope: !6874)
!6876 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart15setSerialConfigEjh", scope: !1229, file: !1229, line: 91, type: !5018, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !173)
!6877 = !DILocation(line: 0, scope: !6876)
!6878 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart5closeEv", scope: !1229, file: !1229, line: 197, type: !5018, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !173)
!6879 = !DILocation(line: 0, scope: !6878)
!6880 = distinct !DISubprogram(linkageName: "_ZThn4_NK6Cicada9Stm32Uart8portNameEv", scope: !1229, file: !1229, line: 212, type: !5018, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !173)
!6881 = !DILocation(line: 0, scope: !6880)
!6882 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart7rawReadERh", scope: !1229, file: !1229, line: 217, type: !5018, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !173)
!6883 = !DILocation(line: 0, scope: !6882)
!6884 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart8rawWriteEh", scope: !1229, file: !1229, line: 228, type: !5018, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !173)
!6885 = !DILocation(line: 0, scope: !6884)
!6886 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart13startTransmitEv", scope: !1229, file: !1229, line: 238, type: !5018, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !173)
!6887 = !DILocation(line: 0, scope: !6886)
!6888 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", linkageName: "_ZL17__NVIC_DisableIRQ9IRQn_Type", scope: !572, file: !572, line: 1547, type: !6889, scopeLine: 1548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !6891)
!6889 = !DISubroutineType(types: !6890)
!6890 = !{null, !1376}
!6891 = !{!6892}
!6892 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6888, file: !572, line: 1547, type: !1376)
!6893 = !DILocation(line: 0, scope: !6888)
!6894 = !DILocation(line: 1549, column: 23, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6888, file: !572, line: 1549, column: 7)
!6896 = !DILocation(line: 1549, column: 7, scope: !6888)
!6897 = !DILocation(line: 1551, column: 81, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6895, file: !572, line: 1550, column: 3)
!6899 = !DILocation(line: 1551, column: 60, scope: !6898)
!6900 = !DILocation(line: 1551, column: 34, scope: !6898)
!6901 = !DILocation(line: 1551, column: 5, scope: !6898)
!6902 = !DILocation(line: 1551, column: 43, scope: !6898)
!6903 = !DILocation(line: 879, column: 3, scope: !6904, inlinedAt: !6905)
!6904 = distinct !DISubprogram(name: "__DSB", linkageName: "_ZL5__DSBv", scope: !4506, file: !4506, line: 877, type: !4, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !173)
!6905 = distinct !DILocation(line: 1552, column: 5, scope: !6898)
!6906 = !{i64 1321711}
!6907 = !DILocation(line: 868, column: 3, scope: !6908, inlinedAt: !6909)
!6908 = distinct !DISubprogram(name: "__ISB", linkageName: "_ZL5__ISBv", scope: !4506, file: !4506, line: 866, type: !4, scopeLine: 867, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !173)
!6909 = distinct !DILocation(line: 1553, column: 5, scope: !6898)
!6910 = !{i64 1321417}
!6911 = !DILocation(line: 1554, column: 3, scope: !6898)
!6912 = !DILocation(line: 1555, column: 1, scope: !6888)
!6913 = distinct !DISubprogram(name: "__NVIC_SetPriority", linkageName: "_ZL18__NVIC_SetPriority9IRQn_Typej", scope: !572, file: !572, line: 1639, type: !6914, scopeLine: 1640, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !6916)
!6914 = !DISubroutineType(types: !6915)
!6915 = !{null, !1376, !103}
!6916 = !{!6917, !6918}
!6917 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6913, file: !572, line: 1639, type: !1376)
!6918 = !DILocalVariable(name: "priority", arg: 2, scope: !6913, file: !572, line: 1639, type: !103)
!6919 = !DILocation(line: 0, scope: !6913)
!6920 = !DILocation(line: 0, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6913, file: !572, line: 1641, column: 7)
!6922 = !DILocation(line: 1641, column: 7, scope: !6913)
!6923 = !DILocation(line: 1649, column: 1, scope: !6913)
!6924 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", linkageName: "_ZL16__NVIC_EnableIRQ9IRQn_Type", scope: !572, file: !572, line: 1511, type: !6889, scopeLine: 1512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !6925)
!6925 = !{!6926}
!6926 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6924, file: !572, line: 1511, type: !1376)
!6927 = !DILocation(line: 0, scope: !6924)
!6928 = !DILocation(line: 1513, column: 23, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6924, file: !572, line: 1513, column: 7)
!6930 = !DILocation(line: 1513, column: 7, scope: !6924)
!6931 = !DILocation(line: 1515, column: 81, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6929, file: !572, line: 1514, column: 3)
!6933 = !DILocation(line: 1515, column: 60, scope: !6932)
!6934 = !DILocation(line: 1515, column: 34, scope: !6932)
!6935 = !DILocation(line: 1515, column: 5, scope: !6932)
!6936 = !DILocation(line: 1515, column: 43, scope: !6932)
!6937 = !DILocation(line: 1516, column: 3, scope: !6932)
!6938 = !DILocation(line: 1517, column: 1, scope: !6924)
!6939 = distinct !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv", scope: !1926, file: !1600, line: 174, type: !1961, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, declaration: !1960, retainedNodes: !6940)
!6940 = !{!6941}
!6941 = !DILocalVariable(name: "this", arg: 1, scope: !6939, type: !6942, flags: DIFlagArtificial | DIFlagObjectPointer)
!6942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 32)
!6943 = !DILocation(line: 0, scope: !6939)
!6944 = !DILocation(line: 176, column: 16, scope: !6939)
!6945 = !{!6946, !4990, i64 24}
!6946 = !{!"_ZTSN6Cicada14CircularBufferIcEE", !4990, i64 8, !4990, i64 16, !4990, i64 24, !4990, i64 32, !2232, i64 40}
!6947 = !DILocation(line: 176, column: 9, scope: !6939)
!6948 = distinct !DISubprogram(name: "~BufferedSerial", linkageName: "_ZN6Cicada14BufferedSerialD2Ev", scope: !1330, file: !1331, line: 42, type: !6949, scopeLine: 42, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, declaration: !6952, retainedNodes: !6953)
!6949 = !DISubroutineType(types: !6950)
!6950 = !{null, !6951}
!6951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!6952 = !DISubprogram(name: "~BufferedSerial", scope: !1330, type: !6949, containingType: !1330, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!6953 = !{!6954}
!6954 = !DILocalVariable(name: "this", arg: 1, scope: !6948, type: !6955, flags: DIFlagArtificial | DIFlagObjectPointer)
!6955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 32)
!6956 = !DILocation(line: 0, scope: !6948)
!6957 = !DILocation(line: 42, column: 7, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6948, file: !1331, line: 42, column: 7)
!6959 = !DILocation(line: 42, column: 7, scope: !6948)
!6960 = distinct !DISubprogram(name: "~CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIcED2Ev", scope: !1926, file: !1600, line: 56, type: !1938, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, declaration: !1937, retainedNodes: !6961)
!6961 = !{!6962}
!6962 = !DILocalVariable(name: "this", arg: 1, scope: !6960, type: !6963, flags: DIFlagArtificial | DIFlagObjectPointer)
!6963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 32)
!6964 = !DILocation(line: 0, scope: !6960)
!6965 = !DILocation(line: 57, column: 7, scope: !6960)
!6966 = distinct !DISubprogram(name: "~IBufferedSerial", linkageName: "_ZN6Cicada15IBufferedSerialD2Ev", scope: !754, file: !755, line: 42, type: !789, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, declaration: !788, retainedNodes: !6967)
!6967 = !{!6968}
!6968 = !DILocalVariable(name: "this", arg: 1, scope: !6966, type: !6969, flags: DIFlagArtificial | DIFlagObjectPointer)
!6969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 32)
!6970 = !DILocation(line: 0, scope: !6966)
!6971 = !DILocation(line: 42, column: 34, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6966, file: !755, line: 42, column: 32)
!6973 = !DILocation(line: 42, column: 34, scope: !6966)
!6974 = distinct !DISubprogram(name: "~ISerial", linkageName: "_ZN6Cicada7ISerialD2Ev", scope: !759, file: !760, line: 40, type: !764, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, declaration: !763, retainedNodes: !6975)
!6975 = !{!6976}
!6976 = !DILocalVariable(name: "this", arg: 1, scope: !6974, type: !6977, flags: DIFlagArtificial | DIFlagObjectPointer)
!6977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 32)
!6978 = !DILocation(line: 0, scope: !6974)
!6979 = !DILocation(line: 40, column: 26, scope: !6974)
!6980 = distinct !DISubprogram(name: "Stm32Uart", linkageName: "_ZN6Cicada9Stm32UartC2EPcS1_yyP13USART_TypeDefP12GPIO_TypeDeftt", scope: !1327, file: !1229, line: 34, type: !1382, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, declaration: !1381, retainedNodes: !6981)
!6981 = !{!6982, !6983, !6984, !6985, !6986, !6987, !6988, !6989, !6990}
!6982 = !DILocalVariable(name: "this", arg: 1, scope: !6980, type: !1334, flags: DIFlagArtificial | DIFlagObjectPointer)
!6983 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !6980, file: !1229, line: 34, type: !335)
!6984 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !6980, file: !1229, line: 34, type: !335)
!6985 = !DILocalVariable(name: "readBufferSize", arg: 4, scope: !6980, file: !1229, line: 34, type: !42)
!6986 = !DILocalVariable(name: "writeBufferSize", arg: 5, scope: !6980, file: !1229, line: 34, type: !42)
!6987 = !DILocalVariable(name: "uartInstance", arg: 6, scope: !6980, file: !1229, line: 35, type: !96)
!6988 = !DILocalVariable(name: "uartPort", arg: 7, scope: !6980, file: !1229, line: 35, type: !111)
!6989 = !DILocalVariable(name: "txPin", arg: 8, scope: !6980, file: !1229, line: 35, type: !89)
!6990 = !DILocalVariable(name: "rxPin", arg: 9, scope: !6980, file: !1229, line: 35, type: !89)
!6991 = !DILocation(line: 0, scope: !6980)
!6992 = !DILocation(line: 43, column: 1, scope: !6980)
!6993 = !DILocation(line: 36, column: 5, scope: !6980)
!6994 = !DILocation(line: 37, column: 5, scope: !6980)
!6995 = !DILocation(line: 38, column: 5, scope: !6980)
!6996 = !DILocation(line: 39, column: 5, scope: !6980)
!6997 = !DILocation(line: 40, column: 5, scope: !6980)
!6998 = !DILocation(line: 41, column: 5, scope: !6980)
!6999 = !DILocation(line: 42, column: 5, scope: !6980)
!7000 = !DILocation(line: 44, column: 5, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6980, file: !1229, line: 43, column: 1)
!7002 = !DILocation(line: 45, column: 1, scope: !6980)
!7003 = distinct !DISubprogram(name: "init", linkageName: "_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef", scope: !1327, file: !1229, line: 59, type: !1424, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, declaration: !1423, retainedNodes: !7004)
!7004 = !{!7005, !7006, !7007}
!7005 = !DILocalVariable(name: "this", arg: 1, scope: !7003, type: !1334, flags: DIFlagArtificial | DIFlagObjectPointer)
!7006 = !DILocalVariable(name: "uartInstance", arg: 2, scope: !7003, file: !1229, line: 59, type: !96)
!7007 = !DILocalVariable(name: "i", scope: !7008, file: !1229, line: 65, type: !34)
!7008 = distinct !DILexicalBlock(scope: !7003, file: !1229, line: 65, column: 5)
!7009 = !DILocation(line: 0, scope: !7003)
!7010 = !DILocation(line: 61, column: 13, scope: !7003)
!7011 = !DILocation(line: 61, column: 22, scope: !7003)
!7012 = !DILocation(line: 62, column: 18, scope: !7003)
!7013 = !DILocation(line: 62, column: 27, scope: !7003)
!7014 = !DILocation(line: 63, column: 18, scope: !7003)
!7015 = !DILocation(line: 63, column: 29, scope: !7003)
!7016 = !DILocation(line: 0, scope: !7008)
!7017 = !DILocation(line: 65, column: 5, scope: !7008)
!7018 = !DILocation(line: 65, column: 52, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7008, file: !1229, line: 65, column: 5)
!7020 = !DILocation(line: 65, column: 23, scope: !7019)
!7021 = distinct !{!7021, !7017, !7022, !2571, !2572}
!7022 = !DILocation(line: 70, column: 5, scope: !7008)
!7023 = !DILocation(line: 66, column: 13, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7025, file: !1229, line: 66, column: 13)
!7025 = distinct !DILexicalBlock(scope: !7019, file: !1229, line: 65, column: 56)
!7026 = !DILocation(line: 66, column: 25, scope: !7024)
!7027 = !DILocation(line: 66, column: 13, scope: !7025)
!7028 = !DILocation(line: 67, column: 25, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7024, file: !1229, line: 66, column: 34)
!7030 = !DILocation(line: 68, column: 13, scope: !7029)
!7031 = !DILocation(line: 71, column: 1, scope: !7003)
!7032 = distinct !DISubprogram(name: "Stm32Uart", linkageName: "_ZN6Cicada9Stm32UartC2EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt", scope: !1327, file: !1229, line: 46, type: !1378, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, declaration: !1377, retainedNodes: !7033)
!7033 = !{!7034, !7035, !7036, !7037, !7038, !7039, !7040, !7041}
!7034 = !DILocalVariable(name: "this", arg: 1, scope: !7032, type: !1334, flags: DIFlagArtificial | DIFlagObjectPointer)
!7035 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !7032, file: !1229, line: 46, type: !335)
!7036 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !7032, file: !1229, line: 46, type: !335)
!7037 = !DILocalVariable(name: "bufferSize", arg: 4, scope: !7032, file: !1229, line: 46, type: !42)
!7038 = !DILocalVariable(name: "uartInstance", arg: 5, scope: !7032, file: !1229, line: 47, type: !96)
!7039 = !DILocalVariable(name: "uartPort", arg: 6, scope: !7032, file: !1229, line: 47, type: !111)
!7040 = !DILocalVariable(name: "txPin", arg: 7, scope: !7032, file: !1229, line: 47, type: !89)
!7041 = !DILocalVariable(name: "rxPin", arg: 8, scope: !7032, file: !1229, line: 47, type: !89)
!7042 = !DILocation(line: 0, scope: !7032)
!7043 = !DILocation(line: 55, column: 1, scope: !7032)
!7044 = !DILocation(line: 48, column: 5, scope: !7032)
!7045 = !DILocation(line: 49, column: 5, scope: !7032)
!7046 = !DILocation(line: 50, column: 5, scope: !7032)
!7047 = !DILocation(line: 51, column: 5, scope: !7032)
!7048 = !DILocation(line: 52, column: 5, scope: !7032)
!7049 = !DILocation(line: 53, column: 5, scope: !7032)
!7050 = !DILocation(line: 54, column: 5, scope: !7032)
!7051 = !DILocation(line: 56, column: 5, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7032, file: !1229, line: 55, column: 1)
!7053 = !DILocation(line: 57, column: 1, scope: !7032)
!7054 = distinct !DISubprogram(name: "getInstance", linkageName: "_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef", scope: !1327, file: !1229, line: 79, type: !1388, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, declaration: !1387, retainedNodes: !7055)
!7055 = !{!7056, !7057, !7059}
!7056 = !DILocalVariable(name: "uartInstance", arg: 1, scope: !7054, file: !1229, line: 79, type: !96)
!7057 = !DILocalVariable(name: "i", scope: !7058, file: !1229, line: 81, type: !34)
!7058 = distinct !DILexicalBlock(scope: !7054, file: !1229, line: 81, column: 5)
!7059 = !DILocalVariable(name: "uart", scope: !7060, file: !1229, line: 82, type: !1334)
!7060 = distinct !DILexicalBlock(scope: !7061, file: !1229, line: 81, column: 56)
!7061 = distinct !DILexicalBlock(scope: !7058, file: !1229, line: 81, column: 5)
!7062 = !DILocation(line: 0, scope: !7054)
!7063 = !DILocation(line: 0, scope: !7058)
!7064 = !DILocation(line: 81, column: 5, scope: !7058)
!7065 = !DILocation(line: 81, column: 52, scope: !7061)
!7066 = !DILocation(line: 81, column: 23, scope: !7061)
!7067 = distinct !{!7067, !7064, !7068, !2571, !2572}
!7068 = !DILocation(line: 86, column: 5, scope: !7058)
!7069 = !DILocation(line: 82, column: 27, scope: !7060)
!7070 = !DILocation(line: 0, scope: !7060)
!7071 = !DILocation(line: 83, column: 18, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7060, file: !1229, line: 83, column: 13)
!7073 = !DILocation(line: 83, column: 26, scope: !7072)
!7074 = !DILocation(line: 83, column: 43, scope: !7072)
!7075 = !DILocation(line: 83, column: 52, scope: !7072)
!7076 = !DILocation(line: 83, column: 13, scope: !7060)
!7077 = !DILocation(line: 86, column: 5, scope: !7061)
!7078 = !DILocation(line: 89, column: 1, scope: !7054)
!7079 = distinct !DISubprogram(name: "handleInterrupt", linkageName: "_ZN6Cicada9Stm32Uart15handleInterruptEv", scope: !1327, file: !1229, line: 243, type: !1385, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, declaration: !1414, retainedNodes: !7080)
!7080 = !{!7081}
!7081 = !DILocalVariable(name: "this", arg: 1, scope: !7079, type: !1334, flags: DIFlagArtificial | DIFlagObjectPointer)
!7082 = !DILocation(line: 0, scope: !7079)
!7083 = !DILocation(line: 245, column: 5, scope: !7079)
!7084 = !DILocation(line: 247, column: 10, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7079, file: !1229, line: 247, column: 9)
!7086 = !DILocation(line: 247, column: 23, scope: !7085)
!7087 = !DILocation(line: 247, column: 9, scope: !7079)
!7088 = !DILocation(line: 248, column: 9, scope: !7085)
!7089 = !DILocation(line: 249, column: 1, scope: !7079)
!7090 = distinct !DISubprogram(name: "~BufferedSerial", linkageName: "_ZN6Cicada14BufferedSerialD0Ev", scope: !1918, file: !1331, line: 42, type: !2030, scopeLine: 42, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !7091, retainedNodes: !7092)
!7091 = !DISubprogram(name: "~BufferedSerial", scope: !1918, type: !2030, containingType: !1918, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!7092 = !{!7093}
!7093 = !DILocalVariable(name: "this", arg: 1, scope: !7090, type: !7094, flags: DIFlagArtificial | DIFlagObjectPointer)
!7094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 32)
!7095 = !DILocation(line: 0, scope: !7090)
!7096 = !DILocation(line: 42, column: 7, scope: !7090)
!7097 = distinct !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14BufferedSerial14bytesAvailableEv", scope: !1918, file: !1916, line: 39, type: !2005, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !2004, retainedNodes: !7098)
!7098 = !{!7099, !7101}
!7099 = !DILocalVariable(name: "this", arg: 1, scope: !7097, type: !7100, flags: DIFlagArtificial | DIFlagObjectPointer)
!7100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 32)
!7101 = !DILocalVariable(name: "availableData", scope: !7097, file: !1916, line: 42, type: !42)
!7102 = !DILocation(line: 0, scope: !7097)
!7103 = !DILocation(line: 41, column: 5, scope: !7097)
!7104 = !DILocation(line: 42, column: 26, scope: !7097)
!7105 = !DILocation(line: 42, column: 38, scope: !7097)
!7106 = !DILocation(line: 43, column: 5, scope: !7097)
!7107 = !DILocation(line: 45, column: 5, scope: !7097)
!7108 = distinct !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14BufferedSerial14spaceAvailableEv", scope: !1918, file: !1916, line: 48, type: !2005, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !2009, retainedNodes: !7109)
!7109 = !{!7110, !7111}
!7110 = !DILocalVariable(name: "this", arg: 1, scope: !7108, type: !7100, flags: DIFlagArtificial | DIFlagObjectPointer)
!7111 = !DILocalVariable(name: "spaceAvailable", scope: !7108, file: !1916, line: 51, type: !42)
!7112 = !DILocation(line: 0, scope: !7108)
!7113 = !DILocation(line: 50, column: 5, scope: !7108)
!7114 = !DILocation(line: 51, column: 27, scope: !7108)
!7115 = !DILocation(line: 51, column: 40, scope: !7108)
!7116 = !DILocation(line: 52, column: 5, scope: !7108)
!7117 = !DILocation(line: 54, column: 5, scope: !7108)
!7118 = distinct !DISubprogram(name: "read", linkageName: "_ZN6Cicada14BufferedSerial4readEPhy", scope: !1918, file: !1916, line: 57, type: !2011, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !2010, retainedNodes: !7119)
!7119 = !{!7120, !7121, !7122, !7123, !7124}
!7120 = !DILocalVariable(name: "this", arg: 1, scope: !7118, type: !7094, flags: DIFlagArtificial | DIFlagObjectPointer)
!7121 = !DILocalVariable(name: "data", arg: 2, scope: !7118, file: !1916, line: 57, type: !59)
!7122 = !DILocalVariable(name: "size", arg: 3, scope: !7118, file: !1916, line: 57, type: !42)
!7123 = !DILocalVariable(name: "avail", scope: !7118, file: !1916, line: 59, type: !42)
!7124 = !DILocalVariable(name: "readCount", scope: !7118, file: !1916, line: 63, type: !42)
!7125 = !DILocation(line: 0, scope: !7118)
!7126 = !DILocation(line: 59, column: 18, scope: !7118)
!7127 = !DILocation(line: 60, column: 14, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7118, file: !1916, line: 60, column: 9)
!7129 = !DILocation(line: 60, column: 9, scope: !7118)
!7130 = !DILocation(line: 65, column: 22, scope: !7118)
!7131 = !DILocation(line: 65, column: 5, scope: !7118)
!7132 = !DILocation(line: 66, column: 29, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7118, file: !1916, line: 65, column: 30)
!7134 = !DILocation(line: 66, column: 23, scope: !7133)
!7135 = !DILocation(line: 66, column: 9, scope: !7133)
!7136 = !DILocation(line: 66, column: 27, scope: !7133)
!7137 = distinct !{!7137, !7131, !7138, !2571, !2572}
!7138 = !DILocation(line: 67, column: 5, scope: !7118)
!7139 = !DILocation(line: 69, column: 5, scope: !7118)
!7140 = distinct !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEPKhy", scope: !1918, file: !1916, line: 81, type: !2017, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !2016, retainedNodes: !7141)
!7141 = !{!7142, !7143, !7144, !7145, !7146}
!7142 = !DILocalVariable(name: "this", arg: 1, scope: !7140, type: !7094, flags: DIFlagArtificial | DIFlagObjectPointer)
!7143 = !DILocalVariable(name: "data", arg: 2, scope: !7140, file: !1916, line: 81, type: !66)
!7144 = !DILocalVariable(name: "size", arg: 3, scope: !7140, file: !1916, line: 81, type: !42)
!7145 = !DILocalVariable(name: "space", scope: !7140, file: !1916, line: 83, type: !42)
!7146 = !DILocalVariable(name: "writeCount", scope: !7140, file: !1916, line: 87, type: !42)
!7147 = !DILocation(line: 0, scope: !7140)
!7148 = !DILocation(line: 83, column: 18, scope: !7140)
!7149 = !DILocation(line: 84, column: 14, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7140, file: !1916, line: 84, column: 9)
!7151 = !DILocation(line: 84, column: 9, scope: !7140)
!7152 = !DILocation(line: 89, column: 23, scope: !7140)
!7153 = !DILocation(line: 89, column: 5, scope: !7140)
!7154 = !DILocation(line: 90, column: 37, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7140, file: !1916, line: 89, column: 31)
!7156 = !DILocation(line: 90, column: 22, scope: !7155)
!7157 = !DILocation(line: 90, column: 9, scope: !7155)
!7158 = distinct !{!7158, !7153, !7159, !2571, !2572}
!7159 = !DILocation(line: 91, column: 5, scope: !7140)
!7160 = !DILocation(line: 93, column: 5, scope: !7140)
!7161 = !DILocation(line: 95, column: 5, scope: !7140)
!7162 = distinct !DISubprogram(name: "read", linkageName: "_ZN6Cicada14BufferedSerial4readEv", scope: !1918, file: !1916, line: 72, type: !2014, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !2013, retainedNodes: !7163)
!7163 = !{!7164, !7165}
!7164 = !DILocalVariable(name: "this", arg: 1, scope: !7162, type: !7094, flags: DIFlagArtificial | DIFlagObjectPointer)
!7165 = !DILocalVariable(name: "c", scope: !7162, file: !1916, line: 75, type: !60)
!7166 = !DILocation(line: 0, scope: !7162)
!7167 = !DILocation(line: 74, column: 5, scope: !7162)
!7168 = !DILocation(line: 75, column: 17, scope: !7162)
!7169 = !DILocation(line: 75, column: 29, scope: !7162)
!7170 = !DILocation(line: 76, column: 5, scope: !7162)
!7171 = !DILocation(line: 78, column: 5, scope: !7162)
!7172 = distinct !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEPKh", scope: !1918, file: !1916, line: 98, type: !2020, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !2019, retainedNodes: !7173)
!7173 = !{!7174, !7175, !7176, !7177}
!7174 = !DILocalVariable(name: "this", arg: 1, scope: !7172, type: !7094, flags: DIFlagArtificial | DIFlagObjectPointer)
!7175 = !DILocalVariable(name: "data", arg: 2, scope: !7172, file: !1916, line: 98, type: !66)
!7176 = !DILocalVariable(name: "space", scope: !7172, file: !1916, line: 100, type: !42)
!7177 = !DILocalVariable(name: "writeCount", scope: !7172, file: !1916, line: 102, type: !42)
!7178 = !DILocation(line: 0, scope: !7172)
!7179 = !DILocation(line: 100, column: 18, scope: !7172)
!7180 = !DILocation(line: 104, column: 12, scope: !7172)
!7181 = !DILocation(line: 104, column: 29, scope: !7172)
!7182 = !DILocation(line: 104, column: 37, scope: !7172)
!7183 = !DILocation(line: 104, column: 5, scope: !7172)
!7184 = !DILocation(line: 105, column: 37, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7172, file: !1916, line: 104, column: 60)
!7186 = !DILocation(line: 105, column: 9, scope: !7185)
!7187 = distinct !{!7187, !7183, !7188, !2571, !2572}
!7188 = !DILocation(line: 106, column: 5, scope: !7172)
!7189 = !DILocation(line: 108, column: 5, scope: !7172)
!7190 = !DILocation(line: 110, column: 5, scope: !7172)
!7191 = distinct !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEh", scope: !1918, file: !1916, line: 113, type: !2023, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !2022, retainedNodes: !7192)
!7192 = !{!7193, !7194}
!7193 = !DILocalVariable(name: "this", arg: 1, scope: !7191, type: !7094, flags: DIFlagArtificial | DIFlagObjectPointer)
!7194 = !DILocalVariable(name: "data", arg: 2, scope: !7191, file: !1916, line: 113, type: !60)
!7195 = !DILocation(line: 0, scope: !7191)
!7196 = !DILocation(line: 115, column: 5, scope: !7191)
!7197 = !DILocation(line: 116, column: 5, scope: !7191)
!7198 = !DILocation(line: 117, column: 1, scope: !7191)
!7199 = distinct !DISubprogram(name: "canReadLine", linkageName: "_ZNK6Cicada14BufferedSerial11canReadLineEv", scope: !1918, file: !1916, line: 126, type: !2026, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !2025, retainedNodes: !7200)
!7200 = !{!7201, !7202}
!7201 = !DILocalVariable(name: "this", arg: 1, scope: !7199, type: !7100, flags: DIFlagArtificial | DIFlagObjectPointer)
!7202 = !DILocalVariable(name: "lines", scope: !7199, file: !1916, line: 129, type: !42)
!7203 = !DILocation(line: 0, scope: !7199)
!7204 = !DILocation(line: 128, column: 5, scope: !7199)
!7205 = !DILocation(line: 129, column: 18, scope: !7199)
!7206 = !DILocation(line: 129, column: 30, scope: !7199)
!7207 = !DILocation(line: 130, column: 5, scope: !7199)
!7208 = !DILocation(line: 132, column: 18, scope: !7199)
!7209 = !DILocation(line: 132, column: 5, scope: !7199)
!7210 = distinct !DISubprogram(name: "readLine", linkageName: "_ZN6Cicada14BufferedSerial8readLineEPhy", scope: !1918, file: !1916, line: 135, type: !2011, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !2028, retainedNodes: !7211)
!7211 = !{!7212, !7213, !7214, !7215, !7216}
!7212 = !DILocalVariable(name: "this", arg: 1, scope: !7210, type: !7094, flags: DIFlagArtificial | DIFlagObjectPointer)
!7213 = !DILocalVariable(name: "data", arg: 2, scope: !7210, file: !1916, line: 135, type: !59)
!7214 = !DILocalVariable(name: "size", arg: 3, scope: !7210, file: !1916, line: 135, type: !42)
!7215 = !DILocalVariable(name: "readCount", scope: !7210, file: !1916, line: 137, type: !42)
!7216 = !DILocalVariable(name: "c", scope: !7210, file: !1916, line: 138, type: !60)
!7217 = !DILocation(line: 0, scope: !7210)
!7218 = !DILocation(line: 140, column: 14, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7210, file: !1916, line: 140, column: 9)
!7220 = !DILocation(line: 140, column: 9, scope: !7210)
!7221 = !DILocation(line: 143, column: 12, scope: !7210)
!7222 = !DILocation(line: 143, column: 5, scope: !7210)
!7223 = !DILocation(line: 144, column: 13, scope: !7224)
!7224 = distinct !DILexicalBlock(scope: !7210, file: !1916, line: 143, column: 43)
!7225 = !DILocation(line: 145, column: 23, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7224, file: !1916, line: 145, column: 13)
!7227 = !DILocation(line: 145, column: 13, scope: !7224)
!7228 = !DILocation(line: 146, column: 27, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7226, file: !1916, line: 145, column: 35)
!7230 = !DILocation(line: 146, column: 13, scope: !7229)
!7231 = !DILocation(line: 146, column: 31, scope: !7229)
!7232 = !DILocation(line: 147, column: 9, scope: !7229)
!7233 = !DILocation(line: 143, column: 29, scope: !7210)
!7234 = distinct !{!7234, !7222, !7235, !2571, !2572}
!7235 = !DILocation(line: 148, column: 5, scope: !7210)
!7236 = !DILocation(line: 149, column: 5, scope: !7210)
!7237 = !DILocation(line: 149, column: 21, scope: !7210)
!7238 = !DILocation(line: 151, column: 5, scope: !7210)
!7239 = !DILocation(line: 152, column: 1, scope: !7210)
!7240 = distinct !DISubprogram(name: "flushReceiveBuffers", linkageName: "_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv", scope: !1918, file: !1916, line: 154, type: !2030, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !2029, retainedNodes: !7241)
!7241 = !{!7242}
!7242 = !DILocalVariable(name: "this", arg: 1, scope: !7240, type: !7094, flags: DIFlagArtificial | DIFlagObjectPointer)
!7243 = !DILocation(line: 0, scope: !7240)
!7244 = !DILocation(line: 156, column: 5, scope: !7240)
!7245 = !DILocation(line: 157, column: 5, scope: !7240)
!7246 = !DILocation(line: 157, column: 17, scope: !7240)
!7247 = !DILocation(line: 158, column: 5, scope: !7240)
!7248 = !DILocation(line: 159, column: 1, scope: !7240)
!7249 = distinct !DISubprogram(name: "readBufferSize", linkageName: "_ZN6Cicada14BufferedSerial14readBufferSizeEv", scope: !1918, file: !1916, line: 161, type: !2033, scopeLine: 162, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !2032, retainedNodes: !7250)
!7250 = !{!7251}
!7251 = !DILocalVariable(name: "this", arg: 1, scope: !7249, type: !7094, flags: DIFlagArtificial | DIFlagObjectPointer)
!7252 = !DILocation(line: 0, scope: !7249)
!7253 = !DILocation(line: 163, column: 12, scope: !7249)
!7254 = !DILocation(line: 163, column: 24, scope: !7249)
!7255 = !DILocation(line: 163, column: 5, scope: !7249)
!7256 = distinct !DISubprogram(name: "writeBufferSize", linkageName: "_ZN6Cicada14BufferedSerial15writeBufferSizeEv", scope: !1918, file: !1916, line: 166, type: !2033, scopeLine: 167, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !2035, retainedNodes: !7257)
!7257 = !{!7258}
!7258 = !DILocalVariable(name: "this", arg: 1, scope: !7256, type: !7094, flags: DIFlagArtificial | DIFlagObjectPointer)
!7259 = !DILocation(line: 0, scope: !7256)
!7260 = !DILocation(line: 168, column: 12, scope: !7256)
!7261 = !DILocation(line: 168, column: 25, scope: !7256)
!7262 = !DILocation(line: 168, column: 5, scope: !7256)
!7263 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada14BufferedSerialD1Ev", scope: !1331, file: !1331, line: 42, type: !5018, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, retainedNodes: !173)
!7264 = !DILocation(line: 0, scope: !7263)
!7265 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada14BufferedSerialD0Ev", scope: !1331, file: !1331, line: 42, type: !5018, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, retainedNodes: !173)
!7266 = !DILocation(line: 0, scope: !7265)
!7267 = distinct !DISubprogram(name: "size", linkageName: "_ZNK6Cicada14CircularBufferIcE4sizeEv", scope: !1926, file: !1600, line: 190, type: !1961, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !1964, retainedNodes: !7268)
!7268 = !{!7269}
!7269 = !DILocalVariable(name: "this", arg: 1, scope: !7267, type: !6942, flags: DIFlagArtificial | DIFlagObjectPointer)
!7270 = !DILocation(line: 0, scope: !7267)
!7271 = !DILocation(line: 192, column: 16, scope: !7267)
!7272 = !{!6946, !4990, i64 32}
!7273 = !DILocation(line: 192, column: 9, scope: !7267)
!7274 = distinct !DISubprogram(name: "flush", linkageName: "_ZN6Cicada18LineCircularBuffer5flushEv", scope: !1922, file: !1923, line: 123, type: !1994, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !1993, retainedNodes: !7275)
!7275 = !{!7276}
!7276 = !DILocalVariable(name: "this", arg: 1, scope: !7274, type: !7277, flags: DIFlagArtificial | DIFlagObjectPointer)
!7277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 32)
!7278 = !DILocation(line: 0, scope: !7274)
!7279 = !DILocation(line: 125, column: 9, scope: !7274)
!7280 = !DILocation(line: 125, column: 24, scope: !7274)
!7281 = !{!7282, !2365, i64 44}
!7282 = !{!"_ZTSN6Cicada18LineCircularBufferE", !2365, i64 44}
!7283 = !DILocation(line: 126, column: 25, scope: !7274)
!7284 = !DILocation(line: 127, column: 5, scope: !7274)
!7285 = distinct !DISubprogram(name: "flush", linkageName: "_ZN6Cicada14CircularBufferIcE5flushEv", scope: !1926, file: !1600, line: 148, type: !1938, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !1953, retainedNodes: !7286)
!7286 = !{!7287}
!7287 = !DILocalVariable(name: "this", arg: 1, scope: !7285, type: !6963, flags: DIFlagArtificial | DIFlagObjectPointer)
!7288 = !DILocation(line: 0, scope: !7285)
!7289 = !DILocation(line: 150, column: 9, scope: !7285)
!7290 = !DILocation(line: 153, column: 5, scope: !7285)
!7291 = !DILocation(line: 151, column: 19, scope: !7285)
!7292 = distinct !DISubprogram(name: "numBufferedLines", linkageName: "_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv", scope: !1922, file: !1923, line: 97, type: !1988, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !1987, retainedNodes: !7293)
!7293 = !{!7294}
!7294 = !DILocalVariable(name: "this", arg: 1, scope: !7292, type: !7295, flags: DIFlagArtificial | DIFlagObjectPointer)
!7295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 32)
!7296 = !DILocation(line: 0, scope: !7292)
!7297 = !DILocation(line: 99, column: 16, scope: !7292)
!7298 = !DILocation(line: 99, column: 9, scope: !7292)
!7299 = distinct !DISubprogram(name: "copyToBuffer", linkageName: "_ZN6Cicada14BufferedSerial12copyToBufferEh", scope: !1918, file: !1916, line: 119, type: !2023, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !2037, retainedNodes: !7300)
!7300 = !{!7301, !7302}
!7301 = !DILocalVariable(name: "this", arg: 1, scope: !7299, type: !7094, flags: DIFlagArtificial | DIFlagObjectPointer)
!7302 = !DILocalVariable(name: "data", arg: 2, scope: !7299, file: !1916, line: 119, type: !60)
!7303 = !DILocation(line: 0, scope: !7299)
!7304 = !DILocation(line: 121, column: 5, scope: !7299)
!7305 = !DILocation(line: 122, column: 5, scope: !7299)
!7306 = !DILocation(line: 122, column: 18, scope: !7299)
!7307 = !DILocation(line: 123, column: 5, scope: !7299)
!7308 = !DILocation(line: 124, column: 1, scope: !7299)
!7309 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada18LineCircularBuffer4pushEc", scope: !1922, file: !1923, line: 60, type: !1979, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !1978, retainedNodes: !7310)
!7310 = !{!7311, !7312}
!7311 = !DILocalVariable(name: "this", arg: 1, scope: !7309, type: !7277, flags: DIFlagArtificial | DIFlagObjectPointer)
!7312 = !DILocalVariable(name: "data", arg: 2, scope: !7309, file: !1923, line: 60, type: !88)
!7313 = !DILocation(line: 0, scope: !7309)
!7314 = !DILocation(line: 62, column: 31, scope: !7309)
!7315 = !DILocation(line: 64, column: 18, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7309, file: !1923, line: 64, column: 13)
!7317 = !DILocation(line: 64, column: 13, scope: !7309)
!7318 = !DILocation(line: 65, column: 13, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7316, file: !1923, line: 64, column: 27)
!7320 = !DILocation(line: 65, column: 27, scope: !7319)
!7321 = !DILocation(line: 66, column: 9, scope: !7319)
!7322 = !DILocation(line: 67, column: 5, scope: !7309)
!7323 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIcE4pushEc", scope: !1926, file: !1600, line: 88, type: !1944, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !1943, retainedNodes: !7324)
!7324 = !{!7325, !7326}
!7325 = !DILocalVariable(name: "this", arg: 1, scope: !7323, type: !6963, flags: DIFlagArtificial | DIFlagObjectPointer)
!7326 = !DILocalVariable(name: "data", arg: 2, scope: !7323, file: !1600, line: 88, type: !88)
!7327 = !DILocation(line: 0, scope: !7323)
!7328 = !DILocation(line: 90, column: 9, scope: !7323)
!7329 = !{!6946, !2232, i64 40}
!7330 = !DILocation(line: 90, column: 17, scope: !7323)
!7331 = !{!6946, !4990, i64 8}
!7332 = !DILocation(line: 90, column: 29, scope: !7323)
!7333 = !DILocation(line: 91, column: 9, scope: !7323)
!7334 = !DILocation(line: 92, column: 13, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7323, file: !1600, line: 92, column: 13)
!7336 = !DILocation(line: 92, column: 30, scope: !7335)
!7337 = !DILocation(line: 92, column: 28, scope: !7335)
!7338 = !DILocation(line: 92, column: 13, scope: !7323)
!7339 = !DILocation(line: 93, column: 27, scope: !7335)
!7340 = !DILocation(line: 93, column: 13, scope: !7335)
!7341 = !DILocation(line: 94, column: 5, scope: !7323)
!7342 = distinct !DISubprogram(name: "incrementOrResetHead", linkageName: "_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy", scope: !1926, file: !1600, line: 202, type: !1966, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !1965, retainedNodes: !7343)
!7343 = !{!7344, !7345}
!7344 = !DILocalVariable(name: "this", arg: 1, scope: !7342, type: !6963, flags: DIFlagArtificial | DIFlagObjectPointer)
!7345 = !DILocalVariable(name: "head", arg: 2, scope: !7342, file: !1600, line: 202, type: !1646)
!7346 = !DILocation(line: 0, scope: !7342)
!7347 = !DILocation(line: 204, column: 13, scope: !7342)
!7348 = !DILocation(line: 205, column: 21, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7342, file: !1600, line: 205, column: 13)
!7350 = !DILocation(line: 205, column: 18, scope: !7349)
!7351 = !DILocation(line: 205, column: 13, scope: !7342)
!7352 = !DILocation(line: 207, column: 5, scope: !7342)
!7353 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada18LineCircularBuffer4pullEv", scope: !1922, file: !1923, line: 83, type: !1985, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !1984, retainedNodes: !7354)
!7354 = !{!7355, !7356}
!7355 = !DILocalVariable(name: "this", arg: 1, scope: !7353, type: !7277, flags: DIFlagArtificial | DIFlagObjectPointer)
!7356 = !DILocalVariable(name: "data", scope: !7353, file: !1923, line: 85, type: !88)
!7357 = !DILocation(line: 0, scope: !7353)
!7358 = !DILocation(line: 85, column: 43, scope: !7353)
!7359 = !DILocation(line: 87, column: 18, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7353, file: !1923, line: 87, column: 13)
!7361 = !DILocation(line: 87, column: 13, scope: !7353)
!7362 = !DILocation(line: 88, column: 13, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7360, file: !1923, line: 87, column: 27)
!7364 = !DILocation(line: 88, column: 27, scope: !7363)
!7365 = !DILocation(line: 89, column: 9, scope: !7363)
!7366 = !DILocation(line: 91, column: 9, scope: !7353)
!7367 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIcE4pullEv", scope: !1926, file: !1600, line: 124, type: !1950, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !1949, retainedNodes: !7368)
!7368 = !{!7369, !7370}
!7369 = !DILocalVariable(name: "this", arg: 1, scope: !7367, type: !6963, flags: DIFlagArtificial | DIFlagObjectPointer)
!7370 = !DILocalVariable(name: "data", scope: !7367, file: !1600, line: 126, type: !88)
!7371 = !DILocation(line: 0, scope: !7367)
!7372 = !DILocation(line: 126, column: 18, scope: !7367)
!7373 = !DILocation(line: 126, column: 26, scope: !7367)
!7374 = !{!6946, !4990, i64 16}
!7375 = !DILocation(line: 127, column: 9, scope: !7367)
!7376 = !DILocation(line: 128, column: 13, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7367, file: !1600, line: 128, column: 13)
!7378 = !DILocation(line: 128, column: 28, scope: !7377)
!7379 = !DILocation(line: 128, column: 13, scope: !7367)
!7380 = !DILocation(line: 129, column: 27, scope: !7377)
!7381 = !DILocation(line: 129, column: 13, scope: !7377)
!7382 = !DILocation(line: 131, column: 9, scope: !7367)
!7383 = distinct !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv", scope: !1926, file: !1600, line: 182, type: !1961, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !1963, retainedNodes: !7384)
!7384 = !{!7385}
!7385 = !DILocalVariable(name: "this", arg: 1, scope: !7383, type: !6942, flags: DIFlagArtificial | DIFlagObjectPointer)
!7386 = !DILocation(line: 0, scope: !7383)
!7387 = !DILocation(line: 184, column: 16, scope: !7383)
!7388 = !DILocation(line: 184, column: 30, scope: !7383)
!7389 = !DILocation(line: 184, column: 28, scope: !7383)
!7390 = !DILocation(line: 184, column: 9, scope: !7383)
!7391 = distinct !DISubprogram(name: "BufferedSerial", linkageName: "_ZN6Cicada14BufferedSerialC2EPcS1_yy", scope: !1918, file: !1916, line: 30, type: !1998, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !1997, retainedNodes: !7392)
!7392 = !{!7393, !7394, !7395, !7396, !7397}
!7393 = !DILocalVariable(name: "this", arg: 1, scope: !7391, type: !7094, flags: DIFlagArtificial | DIFlagObjectPointer)
!7394 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !7391, file: !1916, line: 31, type: !335)
!7395 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !7391, file: !1916, line: 31, type: !335)
!7396 = !DILocalVariable(name: "readBufferSize", arg: 4, scope: !7391, file: !1916, line: 31, type: !42)
!7397 = !DILocalVariable(name: "writeBufferSize", arg: 5, scope: !7391, file: !1916, line: 31, type: !42)
!7398 = !DILocation(line: 0, scope: !7391)
!7399 = !DILocation(line: 33, column: 1, scope: !7391)
!7400 = !DILocation(line: 30, column: 17, scope: !7391)
!7401 = !DILocation(line: 32, column: 5, scope: !7391)
!7402 = !DILocation(line: 32, column: 46, scope: !7391)
!7403 = !DILocation(line: 33, column: 2, scope: !7391)
!7404 = distinct !DISubprogram(name: "IBufferedSerial", linkageName: "_ZN6Cicada15IBufferedSerialC2Ev", scope: !754, file: !755, line: 39, type: !789, scopeLine: 39, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !7405, retainedNodes: !7406)
!7405 = !DISubprogram(name: "IBufferedSerial", scope: !754, type: !789, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7406 = !{!7407}
!7407 = !DILocalVariable(name: "this", arg: 1, scope: !7404, type: !6969, flags: DIFlagArtificial | DIFlagObjectPointer)
!7408 = !DILocation(line: 0, scope: !7404)
!7409 = !DILocation(line: 39, column: 7, scope: !7404)
!7410 = distinct !DISubprogram(name: "LineCircularBuffer", linkageName: "_ZN6Cicada18LineCircularBufferC2EPcy", scope: !1922, file: !1923, line: 41, type: !1972, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !1971, retainedNodes: !7411)
!7411 = !{!7412, !7413, !7414}
!7412 = !DILocalVariable(name: "this", arg: 1, scope: !7410, type: !7277, flags: DIFlagArtificial | DIFlagObjectPointer)
!7413 = !DILocalVariable(name: "buffer", arg: 2, scope: !7410, file: !1923, line: 41, type: !335)
!7414 = !DILocalVariable(name: "bufferSize", arg: 3, scope: !7410, file: !1923, line: 41, type: !42)
!7415 = !DILocation(line: 0, scope: !7410)
!7416 = !DILocation(line: 44, column: 5, scope: !7410)
!7417 = !DILocation(line: 42, column: 9, scope: !7410)
!7418 = !DILocation(line: 43, column: 9, scope: !7410)
!7419 = !DILocation(line: 44, column: 7, scope: !7410)
!7420 = distinct !DISubprogram(name: "CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIcEC2EPcy", scope: !1926, file: !1600, line: 48, type: !1934, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !1933, retainedNodes: !7421)
!7421 = !{!7422, !7423, !7424}
!7422 = !DILocalVariable(name: "this", arg: 1, scope: !7420, type: !6963, flags: DIFlagArtificial | DIFlagObjectPointer)
!7423 = !DILocalVariable(name: "buffer", arg: 2, scope: !7420, file: !1600, line: 48, type: !335)
!7424 = !DILocalVariable(name: "bufferSize", arg: 3, scope: !7420, file: !1600, line: 48, type: !42)
!7425 = !DILocation(line: 0, scope: !7420)
!7426 = !DILocation(line: 54, column: 5, scope: !7420)
!7427 = !DILocation(line: 49, column: 9, scope: !7420)
!7428 = !DILocation(line: 52, column: 9, scope: !7420)
!7429 = !DILocation(line: 50, column: 9, scope: !7420)
!7430 = !DILocation(line: 53, column: 9, scope: !7420)
!7431 = !DILocation(line: 54, column: 7, scope: !7420)
!7432 = distinct !DISubprogram(name: "~LineCircularBuffer", linkageName: "_ZN6Cicada18LineCircularBufferD0Ev", scope: !1922, file: !1923, line: 38, type: !1994, scopeLine: 38, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !7433, retainedNodes: !7434)
!7433 = !DISubprogram(name: "~LineCircularBuffer", scope: !1922, type: !1994, containingType: !1922, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!7434 = !{!7435}
!7435 = !DILocalVariable(name: "this", arg: 1, scope: !7432, type: !7277, flags: DIFlagArtificial | DIFlagObjectPointer)
!7436 = !DILocation(line: 0, scope: !7432)
!7437 = !DILocation(line: 38, column: 7, scope: !7432)
!7438 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada18LineCircularBuffer4pushEPKcy", scope: !1922, file: !1923, line: 46, type: !1976, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !1975, retainedNodes: !7439)
!7439 = !{!7440, !7441, !7442, !7443}
!7440 = !DILocalVariable(name: "this", arg: 1, scope: !7438, type: !7277, flags: DIFlagArtificial | DIFlagObjectPointer)
!7441 = !DILocalVariable(name: "data", arg: 2, scope: !7438, file: !1923, line: 46, type: !86)
!7442 = !DILocalVariable(name: "size", arg: 3, scope: !7438, file: !1923, line: 46, type: !42)
!7443 = !DILocalVariable(name: "writeCount", scope: !7438, file: !1923, line: 51, type: !42)
!7444 = !DILocation(line: 0, scope: !7438)
!7445 = !DILocation(line: 48, column: 42, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7438, file: !1923, line: 48, column: 13)
!7447 = !DILocation(line: 48, column: 18, scope: !7446)
!7448 = !DILocation(line: 48, column: 13, scope: !7438)
!7449 = !DILocation(line: 49, column: 42, scope: !7446)
!7450 = !DILocation(line: 49, column: 13, scope: !7446)
!7451 = !DILocation(line: 53, column: 27, scope: !7438)
!7452 = !DILocation(line: 53, column: 9, scope: !7438)
!7453 = !DILocation(line: 54, column: 33, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !7438, file: !1923, line: 53, column: 35)
!7455 = !DILocation(line: 54, column: 18, scope: !7454)
!7456 = !DILocation(line: 54, column: 13, scope: !7454)
!7457 = distinct !{!7457, !7452, !7458, !2571, !2572}
!7458 = !DILocation(line: 55, column: 9, scope: !7438)
!7459 = !DILocation(line: 57, column: 9, scope: !7438)
!7460 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada18LineCircularBuffer4pullEPcy", scope: !1922, file: !1923, line: 69, type: !1982, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !1981, retainedNodes: !7461)
!7461 = !{!7462, !7463, !7464, !7465}
!7462 = !DILocalVariable(name: "this", arg: 1, scope: !7460, type: !7277, flags: DIFlagArtificial | DIFlagObjectPointer)
!7463 = !DILocalVariable(name: "data", arg: 2, scope: !7460, file: !1923, line: 69, type: !335)
!7464 = !DILocalVariable(name: "size", arg: 3, scope: !7460, file: !1923, line: 69, type: !42)
!7465 = !DILocalVariable(name: "readCount", scope: !7460, file: !1923, line: 74, type: !42)
!7466 = !DILocation(line: 0, scope: !7460)
!7467 = !DILocation(line: 71, column: 42, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7460, file: !1923, line: 71, column: 13)
!7469 = !DILocation(line: 71, column: 18, scope: !7468)
!7470 = !DILocation(line: 71, column: 13, scope: !7460)
!7471 = !DILocation(line: 72, column: 42, scope: !7468)
!7472 = !DILocation(line: 72, column: 13, scope: !7468)
!7473 = !DILocation(line: 76, column: 26, scope: !7460)
!7474 = !DILocation(line: 76, column: 9, scope: !7460)
!7475 = !DILocation(line: 77, column: 33, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7460, file: !1923, line: 76, column: 34)
!7477 = !DILocation(line: 77, column: 27, scope: !7476)
!7478 = !DILocation(line: 77, column: 13, scope: !7476)
!7479 = !DILocation(line: 77, column: 31, scope: !7476)
!7480 = distinct !{!7480, !7474, !7481, !2571, !2572}
!7481 = !DILocation(line: 78, column: 9, scope: !7460)
!7482 = !DILocation(line: 80, column: 9, scope: !7460)
!7483 = distinct !DISubprogram(name: "read", linkageName: "_ZN6Cicada14CircularBufferIcE4readEv", scope: !1926, file: !1600, line: 140, type: !1950, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !1952, retainedNodes: !7484)
!7484 = !{!7485}
!7485 = !DILocalVariable(name: "this", arg: 1, scope: !7483, type: !6963, flags: DIFlagArtificial | DIFlagObjectPointer)
!7486 = !DILocation(line: 0, scope: !7483)
!7487 = !DILocation(line: 142, column: 16, scope: !7483)
!7488 = !DILocation(line: 142, column: 24, scope: !7483)
!7489 = !DILocation(line: 142, column: 9, scope: !7483)
!7490 = distinct !DISubprogram(name: "isEmpty", linkageName: "_ZNK6Cicada14CircularBufferIcE7isEmptyEv", scope: !1926, file: !1600, line: 158, type: !1955, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !1954, retainedNodes: !7491)
!7491 = !{!7492}
!7492 = !DILocalVariable(name: "this", arg: 1, scope: !7490, type: !6942, flags: DIFlagArtificial | DIFlagObjectPointer)
!7493 = !DILocation(line: 0, scope: !7490)
!7494 = !DILocation(line: 160, column: 16, scope: !7490)
!7495 = !DILocation(line: 160, column: 31, scope: !7490)
!7496 = !DILocation(line: 160, column: 9, scope: !7490)
!7497 = distinct !DISubprogram(name: "isFull", linkageName: "_ZNK6Cicada14CircularBufferIcE6isFullEv", scope: !1926, file: !1600, line: 166, type: !1955, scopeLine: 167, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !1959, retainedNodes: !7498)
!7498 = !{!7499}
!7499 = !DILocalVariable(name: "this", arg: 1, scope: !7497, type: !6942, flags: DIFlagArtificial | DIFlagObjectPointer)
!7500 = !DILocation(line: 0, scope: !7497)
!7501 = !DILocation(line: 168, column: 16, scope: !7497)
!7502 = !DILocation(line: 168, column: 34, scope: !7497)
!7503 = !DILocation(line: 168, column: 31, scope: !7497)
!7504 = !DILocation(line: 168, column: 9, scope: !7497)
!7505 = distinct !DISubprogram(name: "~CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIcED0Ev", scope: !1926, file: !1600, line: 56, type: !1938, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !1937, retainedNodes: !7506)
!7506 = !{!7507}
!7507 = !DILocalVariable(name: "this", arg: 1, scope: !7505, type: !6963, flags: DIFlagArtificial | DIFlagObjectPointer)
!7508 = !DILocation(line: 0, scope: !7505)
!7509 = !DILocation(line: 57, column: 5, scope: !7505)
!7510 = !DILocation(line: 57, column: 7, scope: !7505)
!7511 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIcE4pushEPKcy", scope: !1926, file: !1600, line: 65, type: !1941, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !1940, retainedNodes: !7512)
!7512 = !{!7513, !7514, !7515, !7516}
!7513 = !DILocalVariable(name: "this", arg: 1, scope: !7511, type: !6963, flags: DIFlagArtificial | DIFlagObjectPointer)
!7514 = !DILocalVariable(name: "data", arg: 2, scope: !7511, file: !1600, line: 65, type: !86)
!7515 = !DILocalVariable(name: "size", arg: 3, scope: !7511, file: !1600, line: 65, type: !42)
!7516 = !DILocalVariable(name: "writeCount", scope: !7511, file: !1600, line: 70, type: !42)
!7517 = !DILocation(line: 0, scope: !7511)
!7518 = !DILocation(line: 67, column: 20, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7511, file: !1600, line: 67, column: 13)
!7520 = !DILocation(line: 67, column: 18, scope: !7519)
!7521 = !DILocation(line: 67, column: 13, scope: !7511)
!7522 = !DILocation(line: 68, column: 20, scope: !7519)
!7523 = !DILocation(line: 68, column: 13, scope: !7519)
!7524 = !DILocation(line: 72, column: 27, scope: !7511)
!7525 = !DILocation(line: 72, column: 9, scope: !7511)
!7526 = !DILocation(line: 73, column: 50, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7511, file: !1600, line: 72, column: 35)
!7528 = !DILocation(line: 73, column: 35, scope: !7527)
!7529 = !DILocation(line: 73, column: 13, scope: !7527)
!7530 = !DILocation(line: 73, column: 21, scope: !7527)
!7531 = !DILocation(line: 73, column: 33, scope: !7527)
!7532 = !DILocation(line: 74, column: 13, scope: !7527)
!7533 = distinct !{!7533, !7525, !7534, !2571, !2572}
!7534 = !DILocation(line: 75, column: 9, scope: !7511)
!7535 = !DILocation(line: 76, column: 9, scope: !7511)
!7536 = !DILocation(line: 76, column: 24, scope: !7511)
!7537 = !DILocation(line: 78, column: 9, scope: !7511)
!7538 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIcE4pullEPcy", scope: !1926, file: !1600, line: 102, type: !1947, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !1946, retainedNodes: !7539)
!7539 = !{!7540, !7541, !7542, !7543}
!7540 = !DILocalVariable(name: "this", arg: 1, scope: !7538, type: !6963, flags: DIFlagArtificial | DIFlagObjectPointer)
!7541 = !DILocalVariable(name: "data", arg: 2, scope: !7538, file: !1600, line: 102, type: !335)
!7542 = !DILocalVariable(name: "size", arg: 3, scope: !7538, file: !1600, line: 102, type: !42)
!7543 = !DILocalVariable(name: "readCount", scope: !7538, file: !1600, line: 107, type: !42)
!7544 = !DILocation(line: 0, scope: !7538)
!7545 = !DILocation(line: 104, column: 20, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7538, file: !1600, line: 104, column: 13)
!7547 = !DILocation(line: 104, column: 18, scope: !7546)
!7548 = !DILocation(line: 104, column: 13, scope: !7538)
!7549 = !DILocation(line: 105, column: 20, scope: !7546)
!7550 = !DILocation(line: 105, column: 13, scope: !7546)
!7551 = !DILocation(line: 109, column: 26, scope: !7538)
!7552 = !DILocation(line: 109, column: 9, scope: !7538)
!7553 = !DILocation(line: 110, column: 33, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7538, file: !1600, line: 109, column: 34)
!7555 = !DILocation(line: 110, column: 41, scope: !7554)
!7556 = !DILocation(line: 110, column: 27, scope: !7554)
!7557 = !DILocation(line: 110, column: 13, scope: !7554)
!7558 = !DILocation(line: 110, column: 31, scope: !7554)
!7559 = !DILocation(line: 111, column: 13, scope: !7554)
!7560 = distinct !{!7560, !7552, !7561, !2571, !2572}
!7561 = !DILocation(line: 112, column: 9, scope: !7538)
!7562 = !DILocation(line: 113, column: 9, scope: !7538)
!7563 = !DILocation(line: 113, column: 24, scope: !7538)
!7564 = !DILocation(line: 115, column: 9, scope: !7538)
!7565 = distinct !DISubprogram(name: "ISerial", linkageName: "_ZN6Cicada7ISerialC2Ev", scope: !759, file: !760, line: 37, type: !764, scopeLine: 37, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !7566, retainedNodes: !7567)
!7566 = !DISubprogram(name: "ISerial", scope: !759, type: !764, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7567 = !{!7568}
!7568 = !DILocalVariable(name: "this", arg: 1, scope: !7565, type: !6977, flags: DIFlagArtificial | DIFlagObjectPointer)
!7569 = !DILocation(line: 0, scope: !7565)
!7570 = !DILocation(line: 37, column: 7, scope: !7565)
!7571 = distinct !DISubprogram(name: "~IBufferedSerial", linkageName: "_ZN6Cicada15IBufferedSerialD0Ev", scope: !754, file: !755, line: 42, type: !789, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !788, retainedNodes: !7572)
!7572 = !{!7573}
!7573 = !DILocalVariable(name: "this", arg: 1, scope: !7571, type: !6969, flags: DIFlagArtificial | DIFlagObjectPointer)
!7574 = !DILocation(line: 0, scope: !7571)
!7575 = !DILocation(line: 42, column: 32, scope: !7571)
!7576 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada15IBufferedSerialD1Ev", scope: !755, file: !755, line: 42, type: !5018, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, retainedNodes: !173)
!7577 = !DILocation(line: 0, scope: !7576)
!7578 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada15IBufferedSerialD0Ev", scope: !755, file: !755, line: 42, type: !5018, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, retainedNodes: !173)
!7579 = !DILocation(line: 0, scope: !7578)
!7580 = distinct !DISubprogram(name: "~ISerial", linkageName: "_ZN6Cicada7ISerialD0Ev", scope: !759, file: !760, line: 40, type: !764, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !763, retainedNodes: !7581)
!7581 = !{!7582}
!7582 = !DILocalVariable(name: "this", arg: 1, scope: !7580, type: !6977, flags: DIFlagArtificial | DIFlagObjectPointer)
!7583 = !DILocation(line: 0, scope: !7580)
!7584 = !DILocation(line: 40, column: 24, scope: !7580)
!7585 = distinct !DISubprogram(name: "BufferedSerial", linkageName: "_ZN6Cicada14BufferedSerialC2EPcS1_y", scope: !1918, file: !1916, line: 35, type: !2002, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !2001, retainedNodes: !7586)
!7586 = !{!7587, !7588, !7589, !7590}
!7587 = !DILocalVariable(name: "this", arg: 1, scope: !7585, type: !7094, flags: DIFlagArtificial | DIFlagObjectPointer)
!7588 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !7585, file: !1916, line: 35, type: !335)
!7589 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !7585, file: !1916, line: 35, type: !335)
!7590 = !DILocalVariable(name: "bufferSize", arg: 4, scope: !7585, file: !1916, line: 35, type: !42)
!7591 = !DILocation(line: 0, scope: !7585)
!7592 = !DILocation(line: 37, column: 1, scope: !7585)
!7593 = !DILocation(line: 35, column: 17, scope: !7585)
!7594 = !DILocation(line: 36, column: 5, scope: !7585)
!7595 = !DILocation(line: 36, column: 42, scope: !7585)
!7596 = !DILocation(line: 37, column: 2, scope: !7585)
!7597 = distinct !DISubprogram(name: "transferToAndFromBuffer", linkageName: "_ZN6Cicada14BufferedSerial23transferToAndFromBufferEv", scope: !1918, file: !1916, line: 171, type: !2030, scopeLine: 172, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, declaration: !2036, retainedNodes: !7598)
!7598 = !{!7599, !7600}
!7599 = !DILocalVariable(name: "this", arg: 1, scope: !7597, type: !7094, flags: DIFlagArtificial | DIFlagObjectPointer)
!7600 = !DILocalVariable(name: "data", scope: !7597, file: !1916, line: 173, type: !60)
!7601 = !DILocation(line: 0, scope: !7597)
!7602 = !DILocation(line: 173, column: 5, scope: !7597)
!7603 = !DILocation(line: 174, column: 9, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7597, file: !1916, line: 174, column: 9)
!7605 = !DILocation(line: 174, column: 23, scope: !7604)
!7606 = !DILocation(line: 174, column: 27, scope: !7604)
!7607 = !DILocation(line: 174, column: 39, scope: !7604)
!7608 = !DILocation(line: 174, column: 9, scope: !7597)
!7609 = !DILocation(line: 175, column: 26, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7604, file: !1916, line: 174, column: 49)
!7611 = !DILocation(line: 175, column: 21, scope: !7610)
!7612 = !DILocation(line: 176, column: 5, scope: !7610)
!7613 = !DILocation(line: 178, column: 9, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7597, file: !1916, line: 178, column: 9)
!7615 = !DILocation(line: 178, column: 22, scope: !7614)
!7616 = !DILocation(line: 178, column: 9, scope: !7597)
!7617 = !DILocation(line: 179, column: 35, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7619, file: !1916, line: 179, column: 13)
!7619 = distinct !DILexicalBlock(scope: !7614, file: !1916, line: 178, column: 40)
!7620 = !DILocation(line: 179, column: 13, scope: !7618)
!7621 = !DILocation(line: 179, column: 13, scope: !7619)
!7622 = !DILocation(line: 180, column: 26, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7618, file: !1916, line: 179, column: 44)
!7624 = !DILocation(line: 181, column: 9, scope: !7623)
!7625 = !DILocation(line: 183, column: 1, scope: !7597)
!7626 = distinct !DISubprogram(name: "eDisableInterrupts", linkageName: "_Z18eDisableInterruptsv", scope: !2041, file: !2041, line: 27, type: !4, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !173)
!7627 = !DILocation(line: 142, column: 3, scope: !7628, inlinedAt: !7629)
!7628 = distinct !DISubprogram(name: "__disable_irq", linkageName: "_ZL13__disable_irqv", scope: !4506, file: !4506, line: 140, type: !4, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !173)
!7629 = distinct !DILocation(line: 29, column: 5, scope: !7626)
!7630 = !{i64 1184613}
!7631 = !DILocation(line: 30, column: 1, scope: !7626)
!7632 = distinct !DISubprogram(name: "eEnableInterrupts", linkageName: "_Z17eEnableInterruptsv", scope: !2041, file: !2041, line: 32, type: !4, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !173)
!7633 = !DILocation(line: 131, column: 3, scope: !7634, inlinedAt: !7635)
!7634 = distinct !DISubprogram(name: "__enable_irq", linkageName: "_ZL12__enable_irqv", scope: !4506, file: !4506, line: 129, type: !4, scopeLine: 130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !173)
!7635 = distinct !DILocation(line: 34, column: 5, scope: !7632)
!7636 = !{i64 1184341}
!7637 = !DILocation(line: 35, column: 1, scope: !7632)
!7638 = distinct !DISubprogram(name: "HAL_UART_Init", scope: !2043, file: !2043, line: 314, type: !7639, scopeLine: 315, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !7641)
!7639 = !DISubroutineType(types: !7640)
!7640 = !{!3447, !2068}
!7641 = !{!7642}
!7642 = !DILocalVariable(name: "huart", arg: 1, scope: !7638, file: !2043, line: 314, type: !2068)
!7643 = !DILocation(line: 0, scope: !7638)
!7644 = !DILocation(line: 317, column: 13, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7638, file: !2043, line: 317, column: 7)
!7646 = !DILocation(line: 317, column: 7, scope: !7638)
!7647 = !DILocation(line: 338, column: 14, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7638, file: !2043, line: 338, column: 7)
!7649 = !{!7650, !2553, i64 60}
!7650 = !{!"__UART_HandleTypeDef", !2552, i64 0, !4762, i64 4, !2552, i64 32, !7651, i64 36, !7651, i64 38, !2552, i64 40, !7651, i64 44, !7651, i64 46, !2552, i64 48, !2552, i64 52, !2553, i64 56, !2553, i64 60, !2553, i64 64, !3393, i64 68}
!7651 = !{!"short", !2553, i64 0}
!7652 = !DILocation(line: 338, column: 21, scope: !7648)
!7653 = !DILocation(line: 338, column: 7, scope: !7638)
!7654 = !DILocation(line: 341, column: 12, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7648, file: !2043, line: 339, column: 3)
!7656 = !DILocation(line: 341, column: 17, scope: !7655)
!7657 = !{!7650, !2553, i64 56}
!7658 = !DILocation(line: 355, column: 5, scope: !7655)
!7659 = !DILocation(line: 357, column: 3, scope: !7655)
!7660 = !DILocation(line: 359, column: 17, scope: !7638)
!7661 = !DILocation(line: 362, column: 3, scope: !7638)
!7662 = !{!7650, !2552, i64 0}
!7663 = !DILocation(line: 365, column: 3, scope: !7638)
!7664 = !DILocation(line: 370, column: 3, scope: !7638)
!7665 = !DILocation(line: 371, column: 3, scope: !7638)
!7666 = !DILocation(line: 374, column: 3, scope: !7638)
!7667 = !DILocation(line: 377, column: 10, scope: !7638)
!7668 = !DILocation(line: 377, column: 20, scope: !7638)
!7669 = !{!7650, !3393, i64 68}
!7670 = !DILocation(line: 378, column: 17, scope: !7638)
!7671 = !DILocation(line: 379, column: 10, scope: !7638)
!7672 = !DILocation(line: 379, column: 18, scope: !7638)
!7673 = !{!7650, !2553, i64 64}
!7674 = !DILocation(line: 381, column: 3, scope: !7638)
!7675 = !DILocation(line: 382, column: 1, scope: !7638)
!7676 = distinct !DISubprogram(name: "HAL_UART_MspInit", scope: !2043, file: !2043, line: 672, type: !7677, scopeLine: 673, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !7679)
!7677 = !DISubroutineType(types: !7678)
!7678 = !{null, !2068}
!7679 = !{!7680}
!7680 = !DILocalVariable(name: "huart", arg: 1, scope: !7676, file: !2043, line: 672, type: !2068)
!7681 = !DILocation(line: 0, scope: !7676)
!7682 = !DILocation(line: 679, column: 1, scope: !7676)
!7683 = distinct !DISubprogram(name: "UART_SetConfig", scope: !2043, file: !2043, line: 3063, type: !7677, scopeLine: 3064, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !7684)
!7684 = !{!7685, !7686, !7687}
!7685 = !DILocalVariable(name: "huart", arg: 1, scope: !7683, file: !2043, line: 3063, type: !2068)
!7686 = !DILocalVariable(name: "tmpreg", scope: !7683, file: !2043, line: 3065, type: !103)
!7687 = !DILocalVariable(name: "pclk", scope: !7683, file: !2043, line: 3066, type: !103)
!7688 = !DILocation(line: 0, scope: !7683)
!7689 = !DILocation(line: 3077, column: 3, scope: !7683)
!7690 = !{!7650, !3393, i64 12}
!7691 = !DILocation(line: 3092, column: 34, scope: !7683)
!7692 = !{!7650, !3393, i64 8}
!7693 = !DILocation(line: 3092, column: 59, scope: !7683)
!7694 = !{!7650, !3393, i64 16}
!7695 = !DILocation(line: 3092, column: 45, scope: !7683)
!7696 = !DILocation(line: 3092, column: 80, scope: !7683)
!7697 = !{!7650, !3393, i64 20}
!7698 = !DILocation(line: 3092, column: 66, scope: !7683)
!7699 = !DILocation(line: 3093, column: 3, scope: !7683)
!7700 = !DILocation(line: 3100, column: 3, scope: !7683)
!7701 = !{!7650, !3393, i64 24}
!7702 = !DILocation(line: 3134, column: 22, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7683, file: !2043, line: 3134, column: 6)
!7704 = !DILocation(line: 3134, column: 6, scope: !7683)
!7705 = !DILocation(line: 3136, column: 12, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7703, file: !2043, line: 3135, column: 3)
!7707 = !DILocation(line: 3138, column: 3, scope: !7706)
!7708 = !DILocation(line: 3141, column: 12, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7703, file: !2043, line: 3140, column: 3)
!7710 = !DILocation(line: 0, scope: !7703)
!7711 = !{!7650, !3393, i64 4}
!7712 = !DILocation(line: 3145, column: 1, scope: !7683)
!7713 = distinct !DISubprogram(name: "HAL_HalfDuplex_Init", scope: !2043, file: !2043, line: 391, type: !7639, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !7714)
!7714 = !{!7715}
!7715 = !DILocalVariable(name: "huart", arg: 1, scope: !7713, file: !2043, line: 391, type: !2068)
!7716 = !DILocation(line: 0, scope: !7713)
!7717 = !DILocation(line: 394, column: 13, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7713, file: !2043, line: 394, column: 7)
!7719 = !DILocation(line: 394, column: 7, scope: !7713)
!7720 = !DILocation(line: 406, column: 14, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7713, file: !2043, line: 406, column: 7)
!7722 = !DILocation(line: 406, column: 21, scope: !7721)
!7723 = !DILocation(line: 406, column: 7, scope: !7713)
!7724 = !DILocation(line: 409, column: 12, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7721, file: !2043, line: 407, column: 3)
!7726 = !DILocation(line: 409, column: 17, scope: !7725)
!7727 = !DILocation(line: 423, column: 5, scope: !7725)
!7728 = !DILocation(line: 425, column: 3, scope: !7725)
!7729 = !DILocation(line: 427, column: 17, scope: !7713)
!7730 = !DILocation(line: 430, column: 3, scope: !7713)
!7731 = !DILocation(line: 433, column: 3, scope: !7713)
!7732 = !DILocation(line: 438, column: 3, scope: !7713)
!7733 = !DILocation(line: 439, column: 3, scope: !7713)
!7734 = !DILocation(line: 442, column: 3, scope: !7713)
!7735 = !DILocation(line: 445, column: 3, scope: !7713)
!7736 = !DILocation(line: 448, column: 10, scope: !7713)
!7737 = !DILocation(line: 448, column: 20, scope: !7713)
!7738 = !DILocation(line: 449, column: 17, scope: !7713)
!7739 = !DILocation(line: 450, column: 10, scope: !7713)
!7740 = !DILocation(line: 450, column: 18, scope: !7713)
!7741 = !DILocation(line: 452, column: 3, scope: !7713)
!7742 = !DILocation(line: 453, column: 1, scope: !7713)
!7743 = distinct !DISubprogram(name: "HAL_LIN_Init", scope: !2043, file: !2043, line: 466, type: !7744, scopeLine: 467, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !7746)
!7744 = !DISubroutineType(types: !7745)
!7745 = !{!3447, !2068, !103}
!7746 = !{!7747, !7748}
!7747 = !DILocalVariable(name: "huart", arg: 1, scope: !7743, file: !2043, line: 466, type: !2068)
!7748 = !DILocalVariable(name: "BreakDetectLength", arg: 2, scope: !7743, file: !2043, line: 466, type: !103)
!7749 = !DILocation(line: 0, scope: !7743)
!7750 = !DILocation(line: 469, column: 13, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7743, file: !2043, line: 469, column: 7)
!7752 = !DILocation(line: 469, column: 7, scope: !7743)
!7753 = !DILocation(line: 484, column: 14, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7743, file: !2043, line: 484, column: 7)
!7755 = !DILocation(line: 484, column: 21, scope: !7754)
!7756 = !DILocation(line: 484, column: 7, scope: !7743)
!7757 = !DILocation(line: 487, column: 12, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7754, file: !2043, line: 485, column: 3)
!7759 = !DILocation(line: 487, column: 17, scope: !7758)
!7760 = !DILocation(line: 501, column: 5, scope: !7758)
!7761 = !DILocation(line: 503, column: 3, scope: !7758)
!7762 = !DILocation(line: 505, column: 17, scope: !7743)
!7763 = !DILocation(line: 508, column: 3, scope: !7743)
!7764 = !DILocation(line: 511, column: 3, scope: !7743)
!7765 = !DILocation(line: 516, column: 3, scope: !7743)
!7766 = !DILocation(line: 517, column: 3, scope: !7743)
!7767 = !DILocation(line: 520, column: 3, scope: !7743)
!7768 = !DILocation(line: 523, column: 3, scope: !7743)
!7769 = !DILocation(line: 524, column: 3, scope: !7743)
!7770 = !DILocation(line: 527, column: 3, scope: !7743)
!7771 = !DILocation(line: 530, column: 10, scope: !7743)
!7772 = !DILocation(line: 530, column: 20, scope: !7743)
!7773 = !DILocation(line: 531, column: 17, scope: !7743)
!7774 = !DILocation(line: 532, column: 10, scope: !7743)
!7775 = !DILocation(line: 532, column: 18, scope: !7743)
!7776 = !DILocation(line: 534, column: 3, scope: !7743)
!7777 = !DILocation(line: 535, column: 1, scope: !7743)
!7778 = distinct !DISubprogram(name: "HAL_MultiProcessor_Init", scope: !2043, file: !2043, line: 549, type: !7779, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !7781)
!7779 = !DISubroutineType(types: !7780)
!7780 = !{!3447, !2068, !60, !103}
!7781 = !{!7782, !7783, !7784}
!7782 = !DILocalVariable(name: "huart", arg: 1, scope: !7778, file: !2043, line: 549, type: !2068)
!7783 = !DILocalVariable(name: "Address", arg: 2, scope: !7778, file: !2043, line: 549, type: !60)
!7784 = !DILocalVariable(name: "WakeUpMethod", arg: 3, scope: !7778, file: !2043, line: 549, type: !103)
!7785 = !DILocation(line: 0, scope: !7778)
!7786 = !DILocation(line: 552, column: 13, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7778, file: !2043, line: 552, column: 7)
!7788 = !DILocation(line: 552, column: 7, scope: !7778)
!7789 = !DILocation(line: 568, column: 14, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7778, file: !2043, line: 568, column: 7)
!7791 = !DILocation(line: 568, column: 21, scope: !7790)
!7792 = !DILocation(line: 568, column: 7, scope: !7778)
!7793 = !DILocation(line: 571, column: 12, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7790, file: !2043, line: 569, column: 3)
!7795 = !DILocation(line: 571, column: 17, scope: !7794)
!7796 = !DILocation(line: 585, column: 5, scope: !7794)
!7797 = !DILocation(line: 587, column: 3, scope: !7794)
!7798 = !DILocation(line: 589, column: 17, scope: !7778)
!7799 = !DILocation(line: 592, column: 3, scope: !7778)
!7800 = !DILocation(line: 595, column: 3, scope: !7778)
!7801 = !DILocation(line: 600, column: 3, scope: !7778)
!7802 = !DILocation(line: 601, column: 3, scope: !7778)
!7803 = !DILocation(line: 604, column: 3, scope: !7778)
!7804 = !DILocation(line: 605, column: 3, scope: !7778)
!7805 = !DILocation(line: 608, column: 3, scope: !7778)
!7806 = !DILocation(line: 609, column: 3, scope: !7778)
!7807 = !DILocation(line: 612, column: 3, scope: !7778)
!7808 = !DILocation(line: 615, column: 10, scope: !7778)
!7809 = !DILocation(line: 615, column: 20, scope: !7778)
!7810 = !DILocation(line: 616, column: 17, scope: !7778)
!7811 = !DILocation(line: 617, column: 10, scope: !7778)
!7812 = !DILocation(line: 617, column: 18, scope: !7778)
!7813 = !DILocation(line: 619, column: 3, scope: !7778)
!7814 = !DILocation(line: 620, column: 1, scope: !7778)
!7815 = distinct !DISubprogram(name: "HAL_UART_DeInit", scope: !2043, file: !2043, line: 628, type: !7639, scopeLine: 629, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !7816)
!7816 = !{!7817}
!7817 = !DILocalVariable(name: "huart", arg: 1, scope: !7815, file: !2043, line: 628, type: !2068)
!7818 = !DILocation(line: 0, scope: !7815)
!7819 = !DILocation(line: 631, column: 13, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7815, file: !2043, line: 631, column: 7)
!7821 = !DILocation(line: 631, column: 7, scope: !7815)
!7822 = !DILocation(line: 639, column: 10, scope: !7815)
!7823 = !DILocation(line: 639, column: 17, scope: !7815)
!7824 = !DILocation(line: 642, column: 3, scope: !7815)
!7825 = !DILocation(line: 653, column: 3, scope: !7815)
!7826 = !DILocation(line: 656, column: 10, scope: !7815)
!7827 = !DILocation(line: 656, column: 20, scope: !7815)
!7828 = !DILocation(line: 657, column: 17, scope: !7815)
!7829 = !DILocation(line: 658, column: 10, scope: !7815)
!7830 = !DILocation(line: 658, column: 18, scope: !7815)
!7831 = !DILocation(line: 661, column: 3, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7815, file: !2043, line: 661, column: 3)
!7833 = !DILocation(line: 663, column: 3, scope: !7815)
!7834 = !DILocation(line: 664, column: 1, scope: !7815)
!7835 = distinct !DISubprogram(name: "HAL_UART_MspDeInit", scope: !2043, file: !2043, line: 687, type: !7677, scopeLine: 688, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !7836)
!7836 = !{!7837}
!7837 = !DILocalVariable(name: "huart", arg: 1, scope: !7835, file: !2043, line: 687, type: !2068)
!7838 = !DILocation(line: 0, scope: !7835)
!7839 = !DILocation(line: 694, column: 1, scope: !7835)
!7840 = distinct !DISubprogram(name: "HAL_UART_Transmit", scope: !2043, file: !2043, line: 1027, type: !7841, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !7843)
!7841 = !DISubroutineType(types: !7842)
!7842 = !{!3447, !2068, !59, !89, !103}
!7843 = !{!7844, !7845, !7846, !7847, !7848, !7849}
!7844 = !DILocalVariable(name: "huart", arg: 1, scope: !7840, file: !2043, line: 1027, type: !2068)
!7845 = !DILocalVariable(name: "pData", arg: 2, scope: !7840, file: !2043, line: 1027, type: !59)
!7846 = !DILocalVariable(name: "Size", arg: 3, scope: !7840, file: !2043, line: 1027, type: !89)
!7847 = !DILocalVariable(name: "Timeout", arg: 4, scope: !7840, file: !2043, line: 1027, type: !103)
!7848 = !DILocalVariable(name: "tmp", scope: !7840, file: !2043, line: 1029, type: !2066)
!7849 = !DILocalVariable(name: "tickstart", scope: !7840, file: !2043, line: 1030, type: !103)
!7850 = !DILocation(line: 0, scope: !7840)
!7851 = !DILocation(line: 1033, column: 14, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7840, file: !2043, line: 1033, column: 7)
!7853 = !DILocation(line: 1033, column: 21, scope: !7852)
!7854 = !DILocation(line: 1033, column: 7, scope: !7840)
!7855 = !DILocation(line: 1035, column: 16, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7857, file: !2043, line: 1035, column: 9)
!7857 = distinct !DILexicalBlock(scope: !7852, file: !2043, line: 1034, column: 3)
!7858 = !DILocation(line: 1035, column: 25, scope: !7856)
!7859 = !DILocation(line: 1041, column: 5, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7861, file: !2043, line: 1041, column: 5)
!7861 = distinct !DILexicalBlock(scope: !7857, file: !2043, line: 1041, column: 5)
!7862 = !DILocation(line: 1041, column: 5, scope: !7861)
!7863 = !DILocation(line: 1041, column: 5, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7860, file: !2043, line: 1041, column: 5)
!7865 = !DILocation(line: 1043, column: 12, scope: !7857)
!7866 = !DILocation(line: 1043, column: 22, scope: !7857)
!7867 = !DILocation(line: 1044, column: 19, scope: !7857)
!7868 = !DILocation(line: 1047, column: 17, scope: !7857)
!7869 = !DILocation(line: 1049, column: 12, scope: !7857)
!7870 = !DILocation(line: 1049, column: 23, scope: !7857)
!7871 = !{!7650, !7651, i64 36}
!7872 = !DILocation(line: 1050, column: 12, scope: !7857)
!7873 = !DILocation(line: 1050, column: 24, scope: !7857)
!7874 = !{!7650, !7651, i64 38}
!7875 = !DILocation(line: 1051, column: 19, scope: !7857)
!7876 = !DILocation(line: 1051, column: 31, scope: !7857)
!7877 = !DILocation(line: 1051, column: 5, scope: !7857)
!7878 = !DILocation(line: 1053, column: 25, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7857, file: !2043, line: 1052, column: 5)
!7880 = !DILocation(line: 1054, column: 23, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7879, file: !2043, line: 1054, column: 11)
!7882 = !DILocation(line: 1054, column: 34, scope: !7881)
!7883 = !DILocation(line: 0, scope: !7881)
!7884 = !DILocation(line: 1054, column: 11, scope: !7879)
!7885 = !DILocation(line: 1056, column: 13, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7881, file: !2043, line: 1055, column: 7)
!7887 = !DILocation(line: 1060, column: 15, scope: !7886)
!7888 = !DILocation(line: 1061, column: 32, scope: !7886)
!7889 = !{!7651, !7651, i64 0}
!7890 = !DILocation(line: 1061, column: 37, scope: !7886)
!7891 = !DILocation(line: 1061, column: 16, scope: !7886)
!7892 = !DILocation(line: 1061, column: 26, scope: !7886)
!7893 = !DILocation(line: 1061, column: 29, scope: !7886)
!7894 = !{!4762, !3393, i64 4}
!7895 = !DILocation(line: 1062, column: 25, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7886, file: !2043, line: 1062, column: 13)
!7897 = !DILocation(line: 1062, column: 32, scope: !7896)
!7898 = !DILocation(line: 1062, column: 13, scope: !7886)
!7899 = !DILocation(line: 1064, column: 17, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7896, file: !2043, line: 1063, column: 9)
!7901 = !DILocation(line: 1065, column: 9, scope: !7900)
!7902 = !DILocation(line: 1068, column: 17, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7896, file: !2043, line: 1067, column: 9)
!7904 = !DILocation(line: 1073, column: 13, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7881, file: !2043, line: 1072, column: 7)
!7906 = !DILocation(line: 1077, column: 38, scope: !7905)
!7907 = !DILocation(line: 1077, column: 32, scope: !7905)
!7908 = !DILocation(line: 1077, column: 16, scope: !7905)
!7909 = !DILocation(line: 1077, column: 26, scope: !7905)
!7910 = !DILocation(line: 1077, column: 29, scope: !7905)
!7911 = distinct !{!7911, !7877, !7912, !2571, !2572}
!7912 = !DILocation(line: 1079, column: 5, scope: !7857)
!7913 = !DILocation(line: 1081, column: 9, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7857, file: !2043, line: 1081, column: 9)
!7915 = !DILocation(line: 1081, column: 85, scope: !7914)
!7916 = !DILocation(line: 1081, column: 9, scope: !7857)
!7917 = !DILocation(line: 1087, column: 19, scope: !7857)
!7918 = !DILocation(line: 1090, column: 5, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !7857, file: !2043, line: 1090, column: 5)
!7920 = !DILocation(line: 1092, column: 5, scope: !7857)
!7921 = !DILocation(line: 0, scope: !7852)
!7922 = !DILocation(line: 1098, column: 1, scope: !7840)
!7923 = distinct !DISubprogram(name: "UART_WaitOnFlagUntilTimeout", scope: !2043, file: !2043, line: 2690, type: !7924, scopeLine: 2691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !7926)
!7924 = !DISubroutineType(types: !7925)
!7925 = !{!3447, !2068, !103, !3545, !103, !103}
!7926 = !{!7927, !7928, !7929, !7930, !7931}
!7927 = !DILocalVariable(name: "huart", arg: 1, scope: !7923, file: !2043, line: 2690, type: !2068)
!7928 = !DILocalVariable(name: "Flag", arg: 2, scope: !7923, file: !2043, line: 2690, type: !103)
!7929 = !DILocalVariable(name: "Status", arg: 3, scope: !7923, file: !2043, line: 2690, type: !3545)
!7930 = !DILocalVariable(name: "Tickstart", arg: 4, scope: !7923, file: !2043, line: 2690, type: !103)
!7931 = !DILocalVariable(name: "Timeout", arg: 5, scope: !7923, file: !2043, line: 2690, type: !103)
!7932 = !DILocation(line: 0, scope: !7923)
!7933 = !DILocation(line: 2693, column: 11, scope: !7923)
!7934 = !{!4762, !3393, i64 0}
!7935 = !DILocation(line: 2693, column: 3, scope: !7923)
!7936 = !DILocation(line: 2696, column: 9, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7923, file: !2043, line: 2694, column: 3)
!7938 = !DILocation(line: 2698, column: 32, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7940, file: !2043, line: 2698, column: 11)
!7940 = distinct !DILexicalBlock(scope: !7941, file: !2043, line: 2697, column: 5)
!7941 = distinct !DILexicalBlock(scope: !7937, file: !2043, line: 2696, column: 9)
!7942 = !DILocation(line: 2698, column: 46, scope: !7939)
!7943 = !DILocation(line: 2698, column: 59, scope: !7939)
!7944 = !DILocation(line: 2698, column: 11, scope: !7940)
!7945 = !DILocation(line: 2701, column: 9, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7939, file: !2043, line: 2699, column: 7)
!7947 = !DILocation(line: 2702, column: 9, scope: !7946)
!7948 = !DILocation(line: 2704, column: 16, scope: !7946)
!7949 = !DILocation(line: 2704, column: 24, scope: !7946)
!7950 = !DILocation(line: 2705, column: 16, scope: !7946)
!7951 = !DILocation(line: 2705, column: 24, scope: !7946)
!7952 = !DILocation(line: 2708, column: 9, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7946, file: !2043, line: 2708, column: 9)
!7954 = !DILocation(line: 2710, column: 9, scope: !7946)
!7955 = distinct !{!7955, !7935, !7956, !2571, !2572}
!7956 = !DILocation(line: 2713, column: 3, scope: !7923)
!7957 = !DILocation(line: 2715, column: 1, scope: !7923)
!7958 = distinct !DISubprogram(name: "HAL_UART_Receive", scope: !2043, file: !2043, line: 1112, type: !7841, scopeLine: 1113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !7959)
!7959 = !{!7960, !7961, !7962, !7963, !7964, !7965}
!7960 = !DILocalVariable(name: "huart", arg: 1, scope: !7958, file: !2043, line: 1112, type: !2068)
!7961 = !DILocalVariable(name: "pData", arg: 2, scope: !7958, file: !2043, line: 1112, type: !59)
!7962 = !DILocalVariable(name: "Size", arg: 3, scope: !7958, file: !2043, line: 1112, type: !89)
!7963 = !DILocalVariable(name: "Timeout", arg: 4, scope: !7958, file: !2043, line: 1112, type: !103)
!7964 = !DILocalVariable(name: "tmp", scope: !7958, file: !2043, line: 1114, type: !2066)
!7965 = !DILocalVariable(name: "tickstart", scope: !7958, file: !2043, line: 1115, type: !103)
!7966 = !DILocation(line: 0, scope: !7958)
!7967 = !DILocation(line: 1118, column: 14, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7958, file: !2043, line: 1118, column: 7)
!7969 = !DILocation(line: 1118, column: 22, scope: !7968)
!7970 = !DILocation(line: 1118, column: 7, scope: !7958)
!7971 = !DILocation(line: 1120, column: 16, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7973, file: !2043, line: 1120, column: 9)
!7973 = distinct !DILexicalBlock(scope: !7968, file: !2043, line: 1119, column: 3)
!7974 = !DILocation(line: 1120, column: 25, scope: !7972)
!7975 = !DILocation(line: 1126, column: 5, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7977, file: !2043, line: 1126, column: 5)
!7977 = distinct !DILexicalBlock(scope: !7973, file: !2043, line: 1126, column: 5)
!7978 = !DILocation(line: 1126, column: 5, scope: !7977)
!7979 = !DILocation(line: 1126, column: 5, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7976, file: !2043, line: 1126, column: 5)
!7981 = !DILocation(line: 1128, column: 12, scope: !7973)
!7982 = !DILocation(line: 1128, column: 22, scope: !7973)
!7983 = !DILocation(line: 1129, column: 20, scope: !7973)
!7984 = !DILocation(line: 1132, column: 17, scope: !7973)
!7985 = !DILocation(line: 1134, column: 12, scope: !7973)
!7986 = !DILocation(line: 1134, column: 23, scope: !7973)
!7987 = !{!7650, !7651, i64 44}
!7988 = !DILocation(line: 1135, column: 12, scope: !7973)
!7989 = !DILocation(line: 1135, column: 24, scope: !7973)
!7990 = !{!7650, !7651, i64 46}
!7991 = !DILocation(line: 1138, column: 19, scope: !7973)
!7992 = !DILocation(line: 1138, column: 31, scope: !7973)
!7993 = !DILocation(line: 1138, column: 5, scope: !7973)
!7994 = !DILocation(line: 1140, column: 25, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7973, file: !2043, line: 1139, column: 5)
!7996 = !DILocation(line: 1141, column: 23, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7995, file: !2043, line: 1141, column: 11)
!7998 = !DILocation(line: 1141, column: 34, scope: !7997)
!7999 = !DILocation(line: 0, scope: !7997)
!8000 = !DILocation(line: 1141, column: 11, scope: !7995)
!8001 = !DILocation(line: 1143, column: 13, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7997, file: !2043, line: 1142, column: 7)
!8003 = !DILocation(line: 1147, column: 15, scope: !8002)
!8004 = !DILocation(line: 1148, column: 25, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !8002, file: !2043, line: 1148, column: 13)
!8006 = !DILocation(line: 1148, column: 32, scope: !8005)
!8007 = !DILocation(line: 1148, column: 13, scope: !8002)
!8008 = !DILocation(line: 1150, column: 36, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !8005, file: !2043, line: 1149, column: 9)
!8010 = !DILocation(line: 1150, column: 46, scope: !8009)
!8011 = !DILocation(line: 1150, column: 18, scope: !8009)
!8012 = !DILocation(line: 1150, column: 16, scope: !8009)
!8013 = !DILocation(line: 1151, column: 17, scope: !8009)
!8014 = !DILocation(line: 1152, column: 9, scope: !8009)
!8015 = !DILocation(line: 1155, column: 36, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8005, file: !2043, line: 1154, column: 9)
!8017 = !DILocation(line: 1155, column: 46, scope: !8016)
!8018 = !DILocation(line: 1155, column: 18, scope: !8016)
!8019 = !DILocation(line: 1155, column: 16, scope: !8016)
!8020 = !DILocation(line: 1156, column: 17, scope: !8016)
!8021 = !DILocation(line: 1162, column: 13, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !7997, file: !2043, line: 1161, column: 7)
!8023 = !DILocation(line: 1166, column: 25, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8022, file: !2043, line: 1166, column: 13)
!8025 = !DILocation(line: 1166, column: 32, scope: !8024)
!8026 = !DILocation(line: 1166, column: 13, scope: !8022)
!8027 = !DILocation(line: 1168, column: 39, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8024, file: !2043, line: 1167, column: 9)
!8029 = !DILocation(line: 1168, column: 49, scope: !8028)
!8030 = !DILocation(line: 1168, column: 22, scope: !8028)
!8031 = !DILocation(line: 1168, column: 17, scope: !8028)
!8032 = !DILocation(line: 1168, column: 20, scope: !8028)
!8033 = !DILocation(line: 1169, column: 9, scope: !8028)
!8034 = !DILocation(line: 1172, column: 39, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8024, file: !2043, line: 1171, column: 9)
!8036 = !DILocation(line: 1172, column: 49, scope: !8035)
!8037 = !DILocation(line: 1172, column: 22, scope: !8035)
!8038 = !DILocation(line: 1172, column: 17, scope: !8035)
!8039 = !DILocation(line: 1172, column: 20, scope: !8035)
!8040 = distinct !{!8040, !7993, !8041, !2571, !2572}
!8041 = !DILocation(line: 1176, column: 5, scope: !7973)
!8042 = !DILocation(line: 1179, column: 20, scope: !7973)
!8043 = !DILocation(line: 1182, column: 5, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !7973, file: !2043, line: 1182, column: 5)
!8045 = !DILocation(line: 1184, column: 5, scope: !7973)
!8046 = !DILocation(line: 0, scope: !7968)
!8047 = !DILocation(line: 1190, column: 1, scope: !7958)
!8048 = distinct !DISubprogram(name: "HAL_UART_Transmit_IT", scope: !2043, file: !2043, line: 1203, type: !8049, scopeLine: 1204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8051)
!8049 = !DISubroutineType(types: !8050)
!8050 = !{!3447, !2068, !59, !89}
!8051 = !{!8052, !8053, !8054}
!8052 = !DILocalVariable(name: "huart", arg: 1, scope: !8048, file: !2043, line: 1203, type: !2068)
!8053 = !DILocalVariable(name: "pData", arg: 2, scope: !8048, file: !2043, line: 1203, type: !59)
!8054 = !DILocalVariable(name: "Size", arg: 3, scope: !8048, file: !2043, line: 1203, type: !89)
!8055 = !DILocation(line: 0, scope: !8048)
!8056 = !DILocation(line: 1206, column: 14, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8048, file: !2043, line: 1206, column: 7)
!8058 = !DILocation(line: 1206, column: 21, scope: !8057)
!8059 = !DILocation(line: 1206, column: 7, scope: !8048)
!8060 = !DILocation(line: 1208, column: 16, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8062, file: !2043, line: 1208, column: 9)
!8062 = distinct !DILexicalBlock(scope: !8057, file: !2043, line: 1207, column: 3)
!8063 = !DILocation(line: 1208, column: 25, scope: !8061)
!8064 = !DILocation(line: 1214, column: 5, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8066, file: !2043, line: 1214, column: 5)
!8066 = distinct !DILexicalBlock(scope: !8062, file: !2043, line: 1214, column: 5)
!8067 = !DILocation(line: 1214, column: 5, scope: !8066)
!8068 = !DILocation(line: 1214, column: 5, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8065, file: !2043, line: 1214, column: 5)
!8070 = !DILocation(line: 1216, column: 12, scope: !8062)
!8071 = !DILocation(line: 1216, column: 23, scope: !8062)
!8072 = !{!7650, !2552, i64 32}
!8073 = !DILocation(line: 1217, column: 12, scope: !8062)
!8074 = !DILocation(line: 1217, column: 23, scope: !8062)
!8075 = !DILocation(line: 1218, column: 12, scope: !8062)
!8076 = !DILocation(line: 1218, column: 24, scope: !8062)
!8077 = !DILocation(line: 1220, column: 12, scope: !8062)
!8078 = !DILocation(line: 1220, column: 22, scope: !8062)
!8079 = !DILocation(line: 1221, column: 19, scope: !8062)
!8080 = !DILocation(line: 1224, column: 5, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8062, file: !2043, line: 1224, column: 5)
!8082 = !DILocation(line: 1227, column: 5, scope: !8062)
!8083 = !DILocation(line: 1229, column: 5, scope: !8062)
!8084 = !DILocation(line: 0, scope: !8057)
!8085 = !DILocation(line: 1235, column: 1, scope: !8048)
!8086 = distinct !DISubprogram(name: "HAL_UART_Receive_IT", scope: !2043, file: !2043, line: 1248, type: !8049, scopeLine: 1249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8087)
!8087 = !{!8088, !8089, !8090}
!8088 = !DILocalVariable(name: "huart", arg: 1, scope: !8086, file: !2043, line: 1248, type: !2068)
!8089 = !DILocalVariable(name: "pData", arg: 2, scope: !8086, file: !2043, line: 1248, type: !59)
!8090 = !DILocalVariable(name: "Size", arg: 3, scope: !8086, file: !2043, line: 1248, type: !89)
!8091 = !DILocation(line: 0, scope: !8086)
!8092 = !DILocation(line: 1251, column: 14, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8086, file: !2043, line: 1251, column: 7)
!8094 = !DILocation(line: 1251, column: 22, scope: !8093)
!8095 = !DILocation(line: 1251, column: 7, scope: !8086)
!8096 = !DILocation(line: 1253, column: 16, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8098, file: !2043, line: 1253, column: 9)
!8098 = distinct !DILexicalBlock(scope: !8093, file: !2043, line: 1252, column: 3)
!8099 = !DILocation(line: 1253, column: 25, scope: !8097)
!8100 = !DILocation(line: 1259, column: 5, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8102, file: !2043, line: 1259, column: 5)
!8102 = distinct !DILexicalBlock(scope: !8098, file: !2043, line: 1259, column: 5)
!8103 = !DILocation(line: 1259, column: 5, scope: !8102)
!8104 = !DILocation(line: 1259, column: 5, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8101, file: !2043, line: 1259, column: 5)
!8106 = !DILocation(line: 1261, column: 12, scope: !8098)
!8107 = !DILocation(line: 1261, column: 23, scope: !8098)
!8108 = !{!7650, !2552, i64 40}
!8109 = !DILocation(line: 1262, column: 12, scope: !8098)
!8110 = !DILocation(line: 1262, column: 23, scope: !8098)
!8111 = !DILocation(line: 1263, column: 12, scope: !8098)
!8112 = !DILocation(line: 1263, column: 24, scope: !8098)
!8113 = !DILocation(line: 1265, column: 12, scope: !8098)
!8114 = !DILocation(line: 1265, column: 22, scope: !8098)
!8115 = !DILocation(line: 1266, column: 20, scope: !8098)
!8116 = !DILocation(line: 1269, column: 5, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8098, file: !2043, line: 1269, column: 5)
!8118 = !DILocation(line: 1272, column: 5, scope: !8098)
!8119 = !DILocation(line: 1275, column: 5, scope: !8098)
!8120 = !DILocation(line: 1278, column: 5, scope: !8098)
!8121 = !DILocation(line: 1280, column: 5, scope: !8098)
!8122 = !DILocation(line: 0, scope: !8093)
!8123 = !DILocation(line: 1286, column: 1, scope: !8086)
!8124 = distinct !DISubprogram(name: "HAL_UART_Transmit_DMA", scope: !2043, file: !2043, line: 1299, type: !8049, scopeLine: 1300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8125)
!8125 = !{!8126, !8127, !8128, !8129}
!8126 = !DILocalVariable(name: "huart", arg: 1, scope: !8124, file: !2043, line: 1299, type: !2068)
!8127 = !DILocalVariable(name: "pData", arg: 2, scope: !8124, file: !2043, line: 1299, type: !59)
!8128 = !DILocalVariable(name: "Size", arg: 3, scope: !8124, file: !2043, line: 1299, type: !89)
!8129 = !DILocalVariable(name: "tmp", scope: !8124, file: !2043, line: 1301, type: !734)
!8130 = !DILocation(line: 0, scope: !8124)
!8131 = !DILocation(line: 1304, column: 14, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8124, file: !2043, line: 1304, column: 7)
!8133 = !DILocation(line: 1304, column: 21, scope: !8132)
!8134 = !DILocation(line: 1304, column: 7, scope: !8124)
!8135 = !DILocation(line: 1306, column: 16, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8137, file: !2043, line: 1306, column: 9)
!8137 = distinct !DILexicalBlock(scope: !8132, file: !2043, line: 1305, column: 3)
!8138 = !DILocation(line: 1306, column: 25, scope: !8136)
!8139 = !DILocation(line: 1312, column: 5, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8141, file: !2043, line: 1312, column: 5)
!8141 = distinct !DILexicalBlock(scope: !8137, file: !2043, line: 1312, column: 5)
!8142 = !DILocation(line: 1312, column: 5, scope: !8141)
!8143 = !DILocation(line: 1312, column: 5, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8140, file: !2043, line: 1312, column: 5)
!8145 = !DILocation(line: 1314, column: 12, scope: !8137)
!8146 = !DILocation(line: 1314, column: 23, scope: !8137)
!8147 = !DILocation(line: 1315, column: 12, scope: !8137)
!8148 = !DILocation(line: 1315, column: 23, scope: !8137)
!8149 = !DILocation(line: 1316, column: 12, scope: !8137)
!8150 = !DILocation(line: 1316, column: 24, scope: !8137)
!8151 = !DILocation(line: 1318, column: 12, scope: !8137)
!8152 = !DILocation(line: 1318, column: 22, scope: !8137)
!8153 = !DILocation(line: 1319, column: 19, scope: !8137)
!8154 = !DILocation(line: 1322, column: 12, scope: !8137)
!8155 = !{!7650, !2552, i64 48}
!8156 = !DILocation(line: 1322, column: 20, scope: !8137)
!8157 = !DILocation(line: 1322, column: 37, scope: !8137)
!8158 = !{!8159, !2552, i64 44}
!8159 = !{!"__DMA_HandleTypeDef", !2552, i64 0, !4762, i64 4, !2553, i64 32, !2553, i64 36, !2552, i64 40, !2552, i64 44, !2552, i64 48, !2552, i64 52, !2552, i64 56, !3393, i64 60, !2552, i64 64, !3393, i64 68}
!8160 = !DILocation(line: 1325, column: 20, scope: !8137)
!8161 = !DILocation(line: 1325, column: 41, scope: !8137)
!8162 = !{!8159, !2552, i64 48}
!8163 = !DILocation(line: 1328, column: 20, scope: !8137)
!8164 = !DILocation(line: 1328, column: 38, scope: !8137)
!8165 = !{!8159, !2552, i64 52}
!8166 = !DILocation(line: 1331, column: 20, scope: !8137)
!8167 = !DILocation(line: 1331, column: 38, scope: !8137)
!8168 = !{!8159, !2552, i64 56}
!8169 = !DILocation(line: 1335, column: 37, scope: !8137)
!8170 = !DILocation(line: 1335, column: 73, scope: !8137)
!8171 = !DILocation(line: 1335, column: 83, scope: !8137)
!8172 = !DILocation(line: 1335, column: 55, scope: !8137)
!8173 = !DILocation(line: 1335, column: 5, scope: !8137)
!8174 = !DILocation(line: 1338, column: 5, scope: !8137)
!8175 = !DILocation(line: 1341, column: 5, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8137, file: !2043, line: 1341, column: 5)
!8177 = !DILocation(line: 1345, column: 5, scope: !8137)
!8178 = !DILocation(line: 1347, column: 5, scope: !8137)
!8179 = !DILocation(line: 0, scope: !8132)
!8180 = !DILocation(line: 1353, column: 1, scope: !8124)
!8181 = distinct !DISubprogram(name: "UART_DMATransmitCplt", scope: !2043, file: !2043, line: 2542, type: !8182, scopeLine: 2543, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8184)
!8182 = !DISubroutineType(types: !8183)
!8183 = !{null, !2102}
!8184 = !{!8185, !8186}
!8185 = !DILocalVariable(name: "hdma", arg: 1, scope: !8181, file: !2043, line: 2542, type: !2102)
!8186 = !DILocalVariable(name: "huart", scope: !8181, file: !2043, line: 2544, type: !2068)
!8187 = !DILocation(line: 0, scope: !8181)
!8188 = !DILocation(line: 2544, column: 82, scope: !8181)
!8189 = !{!8159, !2552, i64 40}
!8190 = !DILocation(line: 2546, column: 14, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8181, file: !2043, line: 2546, column: 7)
!8192 = !{!8159, !2552, i64 0}
!8193 = !DILocation(line: 2546, column: 24, scope: !8191)
!8194 = !DILocation(line: 2546, column: 28, scope: !8191)
!8195 = !DILocation(line: 2546, column: 44, scope: !8191)
!8196 = !DILocation(line: 2546, column: 7, scope: !8181)
!8197 = !DILocation(line: 2548, column: 12, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8191, file: !2043, line: 2547, column: 3)
!8199 = !DILocation(line: 2548, column: 24, scope: !8198)
!8200 = !DILocation(line: 2552, column: 5, scope: !8198)
!8201 = !DILocation(line: 2555, column: 5, scope: !8198)
!8202 = !DILocation(line: 2557, column: 3, scope: !8198)
!8203 = !DILocation(line: 2566, column: 5, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !8191, file: !2043, line: 2560, column: 3)
!8205 = !DILocation(line: 2569, column: 1, scope: !8181)
!8206 = distinct !DISubprogram(name: "UART_DMATxHalfCplt", scope: !2043, file: !2043, line: 2577, type: !8182, scopeLine: 2578, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8207)
!8207 = !{!8208, !8209}
!8208 = !DILocalVariable(name: "hdma", arg: 1, scope: !8206, file: !2043, line: 2577, type: !2102)
!8209 = !DILocalVariable(name: "huart", scope: !8206, file: !2043, line: 2579, type: !2068)
!8210 = !DILocation(line: 0, scope: !8206)
!8211 = !DILocation(line: 2579, column: 82, scope: !8206)
!8212 = !DILocation(line: 2586, column: 3, scope: !8206)
!8213 = !DILocation(line: 2588, column: 1, scope: !8206)
!8214 = distinct !DISubprogram(name: "UART_DMAError", scope: !2043, file: !2043, line: 2649, type: !8182, scopeLine: 2650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8215)
!8215 = !{!8216, !8217, !8218}
!8216 = !DILocalVariable(name: "hdma", arg: 1, scope: !8214, file: !2043, line: 2649, type: !2102)
!8217 = !DILocalVariable(name: "dmarequest", scope: !8214, file: !2043, line: 2651, type: !103)
!8218 = !DILocalVariable(name: "huart", scope: !8214, file: !2043, line: 2652, type: !2068)
!8219 = !DILocation(line: 0, scope: !8214)
!8220 = !DILocation(line: 2652, column: 82, scope: !8214)
!8221 = !DILocation(line: 2655, column: 16, scope: !8214)
!8222 = !DILocation(line: 2656, column: 15, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8214, file: !2043, line: 2656, column: 7)
!8224 = !DILocation(line: 2656, column: 22, scope: !8223)
!8225 = !DILocation(line: 2656, column: 49, scope: !8223)
!8226 = !DILocation(line: 2658, column: 12, scope: !8227)
!8227 = distinct !DILexicalBlock(scope: !8223, file: !2043, line: 2657, column: 3)
!8228 = !DILocation(line: 2658, column: 24, scope: !8227)
!8229 = !DILocation(line: 2659, column: 5, scope: !8227)
!8230 = !DILocation(line: 2660, column: 3, scope: !8227)
!8231 = !DILocation(line: 2663, column: 16, scope: !8214)
!8232 = !DILocation(line: 2664, column: 15, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8214, file: !2043, line: 2664, column: 7)
!8234 = !DILocation(line: 2664, column: 23, scope: !8233)
!8235 = !DILocation(line: 2664, column: 50, scope: !8233)
!8236 = !DILocation(line: 2666, column: 12, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !8233, file: !2043, line: 2665, column: 3)
!8238 = !DILocation(line: 2666, column: 24, scope: !8237)
!8239 = !DILocation(line: 2667, column: 5, scope: !8237)
!8240 = !DILocation(line: 2668, column: 3, scope: !8237)
!8241 = !DILocation(line: 2670, column: 10, scope: !8214)
!8242 = !DILocation(line: 2670, column: 20, scope: !8214)
!8243 = !DILocation(line: 2676, column: 3, scope: !8214)
!8244 = !DILocation(line: 2678, column: 1, scope: !8214)
!8245 = !DISubprogram(name: "HAL_DMA_Start_IT", scope: !1362, file: !1362, line: 378, type: !8246, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !173)
!8246 = !DISubroutineType(types: !8247)
!8247 = !{!3447, !2102, !103, !103, !103}
!8248 = distinct !DISubprogram(name: "UART_EndTxTransfer", scope: !2043, file: !2043, line: 2722, type: !7677, scopeLine: 2723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8249)
!8249 = !{!8250}
!8250 = !DILocalVariable(name: "huart", arg: 1, scope: !8248, file: !2043, line: 2722, type: !2068)
!8251 = !DILocation(line: 0, scope: !8248)
!8252 = !DILocation(line: 2725, column: 3, scope: !8248)
!8253 = !DILocation(line: 2728, column: 10, scope: !8248)
!8254 = !DILocation(line: 2728, column: 17, scope: !8248)
!8255 = !DILocation(line: 2729, column: 1, scope: !8248)
!8256 = distinct !DISubprogram(name: "UART_EndRxTransfer", scope: !2043, file: !2043, line: 2736, type: !7677, scopeLine: 2737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8257)
!8257 = !{!8258}
!8258 = !DILocalVariable(name: "huart", arg: 1, scope: !8256, file: !2043, line: 2736, type: !2068)
!8259 = !DILocation(line: 0, scope: !8256)
!8260 = !DILocation(line: 2739, column: 3, scope: !8256)
!8261 = !DILocation(line: 2740, column: 3, scope: !8256)
!8262 = !DILocation(line: 2743, column: 10, scope: !8256)
!8263 = !DILocation(line: 2743, column: 18, scope: !8256)
!8264 = !DILocation(line: 2744, column: 1, scope: !8256)
!8265 = distinct !DISubprogram(name: "HAL_UART_ErrorCallback", scope: !2043, file: !2043, line: 2227, type: !7677, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8266)
!8266 = !{!8267}
!8267 = !DILocalVariable(name: "huart", arg: 1, scope: !8265, file: !2043, line: 2227, type: !2068)
!8268 = !DILocation(line: 0, scope: !8265)
!8269 = !DILocation(line: 2234, column: 1, scope: !8265)
!8270 = distinct !DISubprogram(name: "HAL_UART_TxHalfCpltCallback", scope: !2043, file: !2043, line: 2182, type: !7677, scopeLine: 2183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8271)
!8271 = !{!8272}
!8272 = !DILocalVariable(name: "huart", arg: 1, scope: !8270, file: !2043, line: 2182, type: !2068)
!8273 = !DILocation(line: 0, scope: !8270)
!8274 = !DILocation(line: 2189, column: 1, scope: !8270)
!8275 = distinct !DISubprogram(name: "HAL_UART_TxCpltCallback", scope: !2043, file: !2043, line: 2167, type: !7677, scopeLine: 2168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8276)
!8276 = !{!8277}
!8277 = !DILocalVariable(name: "huart", arg: 1, scope: !8275, file: !2043, line: 2167, type: !2068)
!8278 = !DILocation(line: 0, scope: !8275)
!8279 = !DILocation(line: 2174, column: 1, scope: !8275)
!8280 = distinct !DISubprogram(name: "HAL_UART_Receive_DMA", scope: !2043, file: !2043, line: 1367, type: !8049, scopeLine: 1368, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8281)
!8281 = !{!8282, !8283, !8284, !8285, !8286}
!8282 = !DILocalVariable(name: "huart", arg: 1, scope: !8280, file: !2043, line: 1367, type: !2068)
!8283 = !DILocalVariable(name: "pData", arg: 2, scope: !8280, file: !2043, line: 1367, type: !59)
!8284 = !DILocalVariable(name: "Size", arg: 3, scope: !8280, file: !2043, line: 1367, type: !89)
!8285 = !DILocalVariable(name: "tmp", scope: !8280, file: !2043, line: 1369, type: !734)
!8286 = !DILocalVariable(name: "tmpreg", scope: !8287, file: !2043, line: 1405, type: !102)
!8287 = distinct !DILexicalBlock(scope: !8288, file: !2043, line: 1405, column: 5)
!8288 = distinct !DILexicalBlock(scope: !8289, file: !2043, line: 1373, column: 3)
!8289 = distinct !DILexicalBlock(scope: !8280, file: !2043, line: 1372, column: 7)
!8290 = !DILocation(line: 0, scope: !8280)
!8291 = !DILocation(line: 1372, column: 14, scope: !8289)
!8292 = !DILocation(line: 1372, column: 22, scope: !8289)
!8293 = !DILocation(line: 1372, column: 7, scope: !8280)
!8294 = !DILocation(line: 1374, column: 16, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8288, file: !2043, line: 1374, column: 9)
!8296 = !DILocation(line: 1374, column: 25, scope: !8295)
!8297 = !DILocation(line: 1380, column: 5, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8299, file: !2043, line: 1380, column: 5)
!8299 = distinct !DILexicalBlock(scope: !8288, file: !2043, line: 1380, column: 5)
!8300 = !DILocation(line: 1380, column: 5, scope: !8299)
!8301 = !DILocation(line: 1380, column: 5, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8298, file: !2043, line: 1380, column: 5)
!8303 = !DILocation(line: 1382, column: 12, scope: !8288)
!8304 = !DILocation(line: 1382, column: 23, scope: !8288)
!8305 = !DILocation(line: 1383, column: 12, scope: !8288)
!8306 = !DILocation(line: 1383, column: 23, scope: !8288)
!8307 = !DILocation(line: 1385, column: 12, scope: !8288)
!8308 = !DILocation(line: 1385, column: 22, scope: !8288)
!8309 = !DILocation(line: 1386, column: 20, scope: !8288)
!8310 = !DILocation(line: 1389, column: 12, scope: !8288)
!8311 = !{!7650, !2552, i64 52}
!8312 = !DILocation(line: 1389, column: 20, scope: !8288)
!8313 = !DILocation(line: 1389, column: 37, scope: !8288)
!8314 = !DILocation(line: 1392, column: 20, scope: !8288)
!8315 = !DILocation(line: 1392, column: 41, scope: !8288)
!8316 = !DILocation(line: 1395, column: 20, scope: !8288)
!8317 = !DILocation(line: 1395, column: 38, scope: !8288)
!8318 = !DILocation(line: 1398, column: 20, scope: !8288)
!8319 = !DILocation(line: 1398, column: 38, scope: !8288)
!8320 = !DILocation(line: 1402, column: 55, scope: !8288)
!8321 = !DILocation(line: 1402, column: 65, scope: !8288)
!8322 = !DILocation(line: 1402, column: 37, scope: !8288)
!8323 = !DILocation(line: 1402, column: 69, scope: !8288)
!8324 = !DILocation(line: 1402, column: 5, scope: !8288)
!8325 = !DILocation(line: 1405, column: 5, scope: !8287)
!8326 = !DILocation(line: 1405, column: 5, scope: !8288)
!8327 = !DILocation(line: 1408, column: 5, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8288, file: !2043, line: 1408, column: 5)
!8329 = !DILocation(line: 1411, column: 5, scope: !8288)
!8330 = !DILocation(line: 1414, column: 5, scope: !8288)
!8331 = !DILocation(line: 1418, column: 5, scope: !8288)
!8332 = !DILocation(line: 1420, column: 5, scope: !8288)
!8333 = !DILocation(line: 0, scope: !8289)
!8334 = !DILocation(line: 1426, column: 1, scope: !8280)
!8335 = distinct !DISubprogram(name: "UART_DMAReceiveCplt", scope: !2043, file: !2043, line: 2596, type: !8182, scopeLine: 2597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8336)
!8336 = !{!8337, !8338}
!8337 = !DILocalVariable(name: "hdma", arg: 1, scope: !8335, file: !2043, line: 2596, type: !2102)
!8338 = !DILocalVariable(name: "huart", scope: !8335, file: !2043, line: 2598, type: !2068)
!8339 = !DILocation(line: 0, scope: !8335)
!8340 = !DILocation(line: 2598, column: 82, scope: !8335)
!8341 = !DILocation(line: 2600, column: 14, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8335, file: !2043, line: 2600, column: 7)
!8343 = !DILocation(line: 2600, column: 24, scope: !8342)
!8344 = !DILocation(line: 2600, column: 28, scope: !8342)
!8345 = !DILocation(line: 2600, column: 44, scope: !8342)
!8346 = !DILocation(line: 2600, column: 7, scope: !8335)
!8347 = !DILocation(line: 2602, column: 12, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8342, file: !2043, line: 2601, column: 3)
!8349 = !DILocation(line: 2602, column: 24, scope: !8348)
!8350 = !DILocation(line: 2605, column: 5, scope: !8348)
!8351 = !DILocation(line: 2606, column: 5, scope: !8348)
!8352 = !DILocation(line: 2610, column: 5, scope: !8348)
!8353 = !DILocation(line: 2613, column: 12, scope: !8348)
!8354 = !DILocation(line: 2613, column: 20, scope: !8348)
!8355 = !DILocation(line: 2614, column: 3, scope: !8348)
!8356 = !DILocation(line: 2620, column: 3, scope: !8335)
!8357 = !DILocation(line: 2622, column: 1, scope: !8335)
!8358 = distinct !DISubprogram(name: "UART_DMARxHalfCplt", scope: !2043, file: !2043, line: 2630, type: !8182, scopeLine: 2631, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8359)
!8359 = !{!8360, !8361}
!8360 = !DILocalVariable(name: "hdma", arg: 1, scope: !8358, file: !2043, line: 2630, type: !2102)
!8361 = !DILocalVariable(name: "huart", scope: !8358, file: !2043, line: 2632, type: !2068)
!8362 = !DILocation(line: 0, scope: !8358)
!8363 = !DILocation(line: 2632, column: 82, scope: !8358)
!8364 = !DILocation(line: 2639, column: 3, scope: !8358)
!8365 = !DILocation(line: 2641, column: 1, scope: !8358)
!8366 = distinct !DISubprogram(name: "HAL_UART_RxHalfCpltCallback", scope: !2043, file: !2043, line: 2212, type: !7677, scopeLine: 2213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8367)
!8367 = !{!8368}
!8368 = !DILocalVariable(name: "huart", arg: 1, scope: !8366, file: !2043, line: 2212, type: !2068)
!8369 = !DILocation(line: 0, scope: !8366)
!8370 = !DILocation(line: 2219, column: 1, scope: !8366)
!8371 = distinct !DISubprogram(name: "HAL_UART_RxCpltCallback", scope: !2043, file: !2043, line: 2197, type: !7677, scopeLine: 2198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8372)
!8372 = !{!8373}
!8373 = !DILocalVariable(name: "huart", arg: 1, scope: !8371, file: !2043, line: 2197, type: !2068)
!8374 = !DILocation(line: 0, scope: !8371)
!8375 = !DILocation(line: 2204, column: 1, scope: !8371)
!8376 = distinct !DISubprogram(name: "HAL_UART_DMAPause", scope: !2043, file: !2043, line: 1434, type: !7639, scopeLine: 1435, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8377)
!8377 = !{!8378, !8379}
!8378 = !DILocalVariable(name: "huart", arg: 1, scope: !8376, file: !2043, line: 1434, type: !2068)
!8379 = !DILocalVariable(name: "dmarequest", scope: !8376, file: !2043, line: 1436, type: !103)
!8380 = !DILocation(line: 0, scope: !8376)
!8381 = !DILocation(line: 1439, column: 3, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8383, file: !2043, line: 1439, column: 3)
!8383 = distinct !DILexicalBlock(scope: !8376, file: !2043, line: 1439, column: 3)
!8384 = !DILocation(line: 1439, column: 3, scope: !8383)
!8385 = !DILocation(line: 1439, column: 3, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8382, file: !2043, line: 1439, column: 3)
!8387 = !DILocation(line: 1441, column: 16, scope: !8376)
!8388 = !DILocation(line: 1442, column: 15, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8376, file: !2043, line: 1442, column: 7)
!8390 = !DILocation(line: 1442, column: 22, scope: !8389)
!8391 = !DILocation(line: 1442, column: 49, scope: !8389)
!8392 = !DILocation(line: 1445, column: 5, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8389, file: !2043, line: 1443, column: 3)
!8394 = !DILocation(line: 1446, column: 3, scope: !8393)
!8395 = !DILocation(line: 1448, column: 16, scope: !8376)
!8396 = !DILocation(line: 1449, column: 15, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8376, file: !2043, line: 1449, column: 7)
!8398 = !DILocation(line: 1449, column: 23, scope: !8397)
!8399 = !DILocation(line: 1449, column: 50, scope: !8397)
!8400 = !DILocation(line: 1452, column: 5, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8397, file: !2043, line: 1450, column: 3)
!8402 = !DILocation(line: 1453, column: 5, scope: !8401)
!8403 = !DILocation(line: 1456, column: 5, scope: !8401)
!8404 = !DILocation(line: 1457, column: 3, scope: !8401)
!8405 = !DILocation(line: 1460, column: 3, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8376, file: !2043, line: 1460, column: 3)
!8407 = !DILocation(line: 1462, column: 3, scope: !8376)
!8408 = !DILocation(line: 1463, column: 1, scope: !8376)
!8409 = distinct !DISubprogram(name: "HAL_UART_DMAResume", scope: !2043, file: !2043, line: 1471, type: !7639, scopeLine: 1472, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8410)
!8410 = !{!8411, !8412}
!8411 = !DILocalVariable(name: "huart", arg: 1, scope: !8409, file: !2043, line: 1471, type: !2068)
!8412 = !DILocalVariable(name: "tmpreg", scope: !8413, file: !2043, line: 1485, type: !102)
!8413 = distinct !DILexicalBlock(scope: !8414, file: !2043, line: 1485, column: 5)
!8414 = distinct !DILexicalBlock(scope: !8415, file: !2043, line: 1483, column: 3)
!8415 = distinct !DILexicalBlock(scope: !8409, file: !2043, line: 1482, column: 7)
!8416 = !DILocation(line: 0, scope: !8409)
!8417 = !DILocation(line: 1474, column: 3, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8419, file: !2043, line: 1474, column: 3)
!8419 = distinct !DILexicalBlock(scope: !8409, file: !2043, line: 1474, column: 3)
!8420 = !DILocation(line: 1474, column: 3, scope: !8419)
!8421 = !DILocation(line: 1474, column: 3, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8418, file: !2043, line: 1474, column: 3)
!8423 = !DILocation(line: 1476, column: 14, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8409, file: !2043, line: 1476, column: 7)
!8425 = !DILocation(line: 1476, column: 21, scope: !8424)
!8426 = !DILocation(line: 1476, column: 7, scope: !8409)
!8427 = !DILocation(line: 1479, column: 5, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8424, file: !2043, line: 1477, column: 3)
!8429 = !DILocation(line: 1480, column: 3, scope: !8428)
!8430 = !DILocation(line: 1482, column: 14, scope: !8415)
!8431 = !DILocation(line: 1482, column: 22, scope: !8415)
!8432 = !DILocation(line: 1482, column: 7, scope: !8409)
!8433 = !DILocation(line: 1485, column: 5, scope: !8413)
!8434 = !DILocation(line: 1485, column: 5, scope: !8414)
!8435 = !DILocation(line: 1488, column: 5, scope: !8414)
!8436 = !DILocation(line: 1489, column: 5, scope: !8414)
!8437 = !DILocation(line: 1492, column: 5, scope: !8414)
!8438 = !DILocation(line: 1493, column: 3, scope: !8414)
!8439 = !DILocation(line: 1496, column: 3, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8409, file: !2043, line: 1496, column: 3)
!8441 = !DILocation(line: 1498, column: 3, scope: !8409)
!8442 = !DILocation(line: 1499, column: 1, scope: !8409)
!8443 = distinct !DISubprogram(name: "HAL_UART_DMAStop", scope: !2043, file: !2043, line: 1507, type: !7639, scopeLine: 1508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8444)
!8444 = !{!8445, !8446}
!8445 = !DILocalVariable(name: "huart", arg: 1, scope: !8443, file: !2043, line: 1507, type: !2068)
!8446 = !DILocalVariable(name: "dmarequest", scope: !8443, file: !2043, line: 1509, type: !103)
!8447 = !DILocation(line: 0, scope: !8443)
!8448 = !DILocation(line: 1517, column: 16, scope: !8443)
!8449 = !DILocation(line: 1518, column: 15, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8443, file: !2043, line: 1518, column: 7)
!8451 = !DILocation(line: 1518, column: 22, scope: !8450)
!8452 = !DILocation(line: 1518, column: 49, scope: !8450)
!8453 = !DILocation(line: 1520, column: 5, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8450, file: !2043, line: 1519, column: 3)
!8455 = !DILocation(line: 1523, column: 16, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8454, file: !2043, line: 1523, column: 9)
!8457 = !DILocation(line: 1523, column: 23, scope: !8456)
!8458 = !DILocation(line: 1523, column: 9, scope: !8454)
!8459 = !DILocation(line: 1525, column: 7, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8456, file: !2043, line: 1524, column: 5)
!8461 = !DILocation(line: 1526, column: 5, scope: !8460)
!8462 = !DILocation(line: 1527, column: 5, scope: !8454)
!8463 = !DILocation(line: 1528, column: 3, scope: !8454)
!8464 = !DILocation(line: 1531, column: 16, scope: !8443)
!8465 = !DILocation(line: 1532, column: 15, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !8443, file: !2043, line: 1532, column: 7)
!8467 = !DILocation(line: 1532, column: 23, scope: !8466)
!8468 = !DILocation(line: 1532, column: 50, scope: !8466)
!8469 = !DILocation(line: 1534, column: 5, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8466, file: !2043, line: 1533, column: 3)
!8471 = !DILocation(line: 1537, column: 16, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8470, file: !2043, line: 1537, column: 9)
!8473 = !DILocation(line: 1537, column: 23, scope: !8472)
!8474 = !DILocation(line: 1537, column: 9, scope: !8470)
!8475 = !DILocation(line: 1539, column: 7, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8472, file: !2043, line: 1538, column: 5)
!8477 = !DILocation(line: 1540, column: 5, scope: !8476)
!8478 = !DILocation(line: 1541, column: 5, scope: !8470)
!8479 = !DILocation(line: 1542, column: 3, scope: !8470)
!8480 = !DILocation(line: 1544, column: 3, scope: !8443)
!8481 = !DISubprogram(name: "HAL_DMA_Abort", scope: !1362, file: !1362, line: 379, type: !8482, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !173)
!8482 = !DISubroutineType(types: !8483)
!8483 = !{!3447, !2102}
!8484 = distinct !DISubprogram(name: "HAL_UART_Abort", scope: !2043, file: !2043, line: 1559, type: !7639, scopeLine: 1560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8485)
!8485 = !{!8486}
!8486 = !DILocalVariable(name: "huart", arg: 1, scope: !8484, file: !2043, line: 1559, type: !2068)
!8487 = !DILocation(line: 0, scope: !8484)
!8488 = !DILocation(line: 1562, column: 3, scope: !8484)
!8489 = !DILocation(line: 1563, column: 3, scope: !8484)
!8490 = !DILocation(line: 1566, column: 7, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8484, file: !2043, line: 1566, column: 7)
!8492 = !DILocation(line: 1566, column: 7, scope: !8484)
!8493 = !DILocation(line: 1568, column: 5, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8491, file: !2043, line: 1567, column: 3)
!8495 = !DILocation(line: 1571, column: 16, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8494, file: !2043, line: 1571, column: 9)
!8497 = !DILocation(line: 1571, column: 23, scope: !8496)
!8498 = !DILocation(line: 1571, column: 9, scope: !8494)
!8499 = !DILocation(line: 1575, column: 22, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8496, file: !2043, line: 1572, column: 5)
!8501 = !DILocation(line: 1575, column: 40, scope: !8500)
!8502 = !DILocation(line: 1577, column: 11, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8500, file: !2043, line: 1577, column: 11)
!8504 = !DILocation(line: 1577, column: 40, scope: !8503)
!8505 = !DILocation(line: 1577, column: 11, scope: !8500)
!8506 = !DILocation(line: 1579, column: 37, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8508, file: !2043, line: 1579, column: 13)
!8508 = distinct !DILexicalBlock(scope: !8503, file: !2043, line: 1578, column: 7)
!8509 = !DILocation(line: 1579, column: 13, scope: !8507)
!8510 = !DILocation(line: 1579, column: 45, scope: !8507)
!8511 = !DILocation(line: 1579, column: 13, scope: !8508)
!8512 = !DILocation(line: 1582, column: 18, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8507, file: !2043, line: 1580, column: 9)
!8514 = !DILocation(line: 1582, column: 28, scope: !8513)
!8515 = !DILocation(line: 1584, column: 11, scope: !8513)
!8516 = !DILocation(line: 1591, column: 7, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8484, file: !2043, line: 1591, column: 7)
!8518 = !DILocation(line: 1591, column: 7, scope: !8484)
!8519 = !DILocation(line: 1593, column: 5, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8517, file: !2043, line: 1592, column: 3)
!8521 = !DILocation(line: 1596, column: 16, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8520, file: !2043, line: 1596, column: 9)
!8523 = !DILocation(line: 1596, column: 23, scope: !8522)
!8524 = !DILocation(line: 1596, column: 9, scope: !8520)
!8525 = !DILocation(line: 1600, column: 22, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !8522, file: !2043, line: 1597, column: 5)
!8527 = !DILocation(line: 1600, column: 40, scope: !8526)
!8528 = !DILocation(line: 1602, column: 11, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8526, file: !2043, line: 1602, column: 11)
!8530 = !DILocation(line: 1602, column: 40, scope: !8529)
!8531 = !DILocation(line: 1602, column: 11, scope: !8526)
!8532 = !DILocation(line: 1604, column: 37, scope: !8533)
!8533 = distinct !DILexicalBlock(scope: !8534, file: !2043, line: 1604, column: 13)
!8534 = distinct !DILexicalBlock(scope: !8529, file: !2043, line: 1603, column: 7)
!8535 = !DILocation(line: 1604, column: 13, scope: !8533)
!8536 = !DILocation(line: 1604, column: 45, scope: !8533)
!8537 = !DILocation(line: 1604, column: 13, scope: !8534)
!8538 = !DILocation(line: 1607, column: 18, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8533, file: !2043, line: 1605, column: 9)
!8540 = !DILocation(line: 1607, column: 28, scope: !8539)
!8541 = !DILocation(line: 1609, column: 11, scope: !8539)
!8542 = !DILocation(line: 1616, column: 10, scope: !8484)
!8543 = !DILocation(line: 1616, column: 22, scope: !8484)
!8544 = !DILocation(line: 1617, column: 10, scope: !8484)
!8545 = !DILocation(line: 1617, column: 22, scope: !8484)
!8546 = !DILocation(line: 1620, column: 10, scope: !8484)
!8547 = !DILocation(line: 1620, column: 20, scope: !8484)
!8548 = !DILocation(line: 1623, column: 10, scope: !8484)
!8549 = !DILocation(line: 1623, column: 18, scope: !8484)
!8550 = !DILocation(line: 1624, column: 10, scope: !8484)
!8551 = !DILocation(line: 1624, column: 17, scope: !8484)
!8552 = !DILocation(line: 1626, column: 3, scope: !8484)
!8553 = !DILocation(line: 1627, column: 1, scope: !8484)
!8554 = !DISubprogram(name: "HAL_DMA_GetError", scope: !1362, file: !1362, line: 395, type: !8555, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !173)
!8555 = !DISubroutineType(types: !8556)
!8556 = !{!103, !2102}
!8557 = distinct !DISubprogram(name: "HAL_UART_AbortTransmit", scope: !2043, file: !2043, line: 1641, type: !7639, scopeLine: 1642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8558)
!8558 = !{!8559}
!8559 = !DILocalVariable(name: "huart", arg: 1, scope: !8557, file: !2043, line: 1641, type: !2068)
!8560 = !DILocation(line: 0, scope: !8557)
!8561 = !DILocation(line: 1644, column: 3, scope: !8557)
!8562 = !DILocation(line: 1647, column: 7, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8557, file: !2043, line: 1647, column: 7)
!8564 = !DILocation(line: 1647, column: 7, scope: !8557)
!8565 = !DILocation(line: 1649, column: 5, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8563, file: !2043, line: 1648, column: 3)
!8567 = !DILocation(line: 1652, column: 16, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8566, file: !2043, line: 1652, column: 9)
!8569 = !DILocation(line: 1652, column: 23, scope: !8568)
!8570 = !DILocation(line: 1652, column: 9, scope: !8566)
!8571 = !DILocation(line: 1656, column: 22, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8568, file: !2043, line: 1653, column: 5)
!8573 = !DILocation(line: 1656, column: 40, scope: !8572)
!8574 = !DILocation(line: 1658, column: 11, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8572, file: !2043, line: 1658, column: 11)
!8576 = !DILocation(line: 1658, column: 40, scope: !8575)
!8577 = !DILocation(line: 1658, column: 11, scope: !8572)
!8578 = !DILocation(line: 1660, column: 37, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8580, file: !2043, line: 1660, column: 13)
!8580 = distinct !DILexicalBlock(scope: !8575, file: !2043, line: 1659, column: 7)
!8581 = !DILocation(line: 1660, column: 13, scope: !8579)
!8582 = !DILocation(line: 1660, column: 45, scope: !8579)
!8583 = !DILocation(line: 1660, column: 13, scope: !8580)
!8584 = !DILocation(line: 1663, column: 18, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8579, file: !2043, line: 1661, column: 9)
!8586 = !DILocation(line: 1663, column: 28, scope: !8585)
!8587 = !DILocation(line: 1665, column: 11, scope: !8585)
!8588 = !DILocation(line: 1672, column: 10, scope: !8557)
!8589 = !DILocation(line: 1672, column: 22, scope: !8557)
!8590 = !DILocation(line: 1675, column: 10, scope: !8557)
!8591 = !DILocation(line: 1675, column: 17, scope: !8557)
!8592 = !DILocation(line: 1677, column: 3, scope: !8557)
!8593 = !DILocation(line: 1678, column: 1, scope: !8557)
!8594 = distinct !DISubprogram(name: "HAL_UART_AbortReceive", scope: !2043, file: !2043, line: 1692, type: !7639, scopeLine: 1693, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8595)
!8595 = !{!8596}
!8596 = !DILocalVariable(name: "huart", arg: 1, scope: !8594, file: !2043, line: 1692, type: !2068)
!8597 = !DILocation(line: 0, scope: !8594)
!8598 = !DILocation(line: 1695, column: 3, scope: !8594)
!8599 = !DILocation(line: 1696, column: 3, scope: !8594)
!8600 = !DILocation(line: 1699, column: 7, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8594, file: !2043, line: 1699, column: 7)
!8602 = !DILocation(line: 1699, column: 7, scope: !8594)
!8603 = !DILocation(line: 1701, column: 5, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8601, file: !2043, line: 1700, column: 3)
!8605 = !DILocation(line: 1704, column: 16, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8604, file: !2043, line: 1704, column: 9)
!8607 = !DILocation(line: 1704, column: 23, scope: !8606)
!8608 = !DILocation(line: 1704, column: 9, scope: !8604)
!8609 = !DILocation(line: 1708, column: 22, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8606, file: !2043, line: 1705, column: 5)
!8611 = !DILocation(line: 1708, column: 40, scope: !8610)
!8612 = !DILocation(line: 1710, column: 11, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8610, file: !2043, line: 1710, column: 11)
!8614 = !DILocation(line: 1710, column: 40, scope: !8613)
!8615 = !DILocation(line: 1710, column: 11, scope: !8610)
!8616 = !DILocation(line: 1712, column: 37, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8618, file: !2043, line: 1712, column: 13)
!8618 = distinct !DILexicalBlock(scope: !8613, file: !2043, line: 1711, column: 7)
!8619 = !DILocation(line: 1712, column: 13, scope: !8617)
!8620 = !DILocation(line: 1712, column: 45, scope: !8617)
!8621 = !DILocation(line: 1712, column: 13, scope: !8618)
!8622 = !DILocation(line: 1715, column: 18, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8617, file: !2043, line: 1713, column: 9)
!8624 = !DILocation(line: 1715, column: 28, scope: !8623)
!8625 = !DILocation(line: 1717, column: 11, scope: !8623)
!8626 = !DILocation(line: 1724, column: 10, scope: !8594)
!8627 = !DILocation(line: 1724, column: 22, scope: !8594)
!8628 = !DILocation(line: 1727, column: 10, scope: !8594)
!8629 = !DILocation(line: 1727, column: 18, scope: !8594)
!8630 = !DILocation(line: 1729, column: 3, scope: !8594)
!8631 = !DILocation(line: 1730, column: 1, scope: !8594)
!8632 = distinct !DISubprogram(name: "HAL_UART_Abort_IT", scope: !2043, file: !2043, line: 1746, type: !7639, scopeLine: 1747, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8633)
!8633 = !{!8634, !8635}
!8634 = !DILocalVariable(name: "huart", arg: 1, scope: !8632, file: !2043, line: 1746, type: !2068)
!8635 = !DILocalVariable(name: "AbortCplt", scope: !8632, file: !2043, line: 1748, type: !103)
!8636 = !DILocation(line: 0, scope: !8632)
!8637 = !DILocation(line: 1751, column: 3, scope: !8632)
!8638 = !DILocation(line: 1752, column: 3, scope: !8632)
!8639 = !DILocation(line: 1757, column: 14, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !8632, file: !2043, line: 1757, column: 7)
!8641 = !DILocation(line: 1757, column: 21, scope: !8640)
!8642 = !DILocation(line: 1757, column: 7, scope: !8632)
!8643 = !DILocation(line: 1761, column: 9, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8645, file: !2043, line: 1761, column: 9)
!8645 = distinct !DILexicalBlock(scope: !8640, file: !2043, line: 1758, column: 3)
!8646 = !DILocation(line: 0, scope: !8644)
!8647 = !DILocation(line: 1771, column: 14, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8632, file: !2043, line: 1771, column: 7)
!8649 = !DILocation(line: 1771, column: 21, scope: !8648)
!8650 = !DILocation(line: 1771, column: 7, scope: !8632)
!8651 = !DILocation(line: 1775, column: 9, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8653, file: !2043, line: 1775, column: 9)
!8653 = distinct !DILexicalBlock(scope: !8648, file: !2043, line: 1772, column: 3)
!8654 = !DILocation(line: 0, scope: !8652)
!8655 = !DILocation(line: 1786, column: 7, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8632, file: !2043, line: 1786, column: 7)
!8657 = !DILocation(line: 1786, column: 7, scope: !8632)
!8658 = !DILocation(line: 1789, column: 5, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8656, file: !2043, line: 1787, column: 3)
!8660 = !DILocation(line: 1792, column: 9, scope: !8659)
!8661 = !DILocation(line: 1798, column: 11, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8663, file: !2043, line: 1798, column: 11)
!8663 = distinct !DILexicalBlock(scope: !8664, file: !2043, line: 1793, column: 5)
!8664 = distinct !DILexicalBlock(scope: !8659, file: !2043, line: 1792, column: 9)
!8665 = !DILocation(line: 1798, column: 43, scope: !8662)
!8666 = !DILocation(line: 1798, column: 11, scope: !8663)
!8667 = !DILocation(line: 1800, column: 16, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8662, file: !2043, line: 1799, column: 7)
!8669 = !DILocation(line: 1800, column: 24, scope: !8668)
!8670 = !DILocation(line: 1800, column: 42, scope: !8668)
!8671 = !DILocation(line: 1801, column: 7, scope: !8668)
!8672 = !DILocation(line: 1810, column: 7, scope: !8673)
!8673 = distinct !DILexicalBlock(scope: !8632, file: !2043, line: 1810, column: 7)
!8674 = !DILocation(line: 1810, column: 7, scope: !8632)
!8675 = !DILocation(line: 1812, column: 5, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8673, file: !2043, line: 1811, column: 3)
!8677 = !DILocation(line: 1815, column: 16, scope: !8678)
!8678 = distinct !DILexicalBlock(scope: !8676, file: !2043, line: 1815, column: 9)
!8679 = !DILocation(line: 1815, column: 23, scope: !8678)
!8680 = !DILocation(line: 1815, column: 9, scope: !8676)
!8681 = !DILocation(line: 1821, column: 11, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8683, file: !2043, line: 1821, column: 11)
!8683 = distinct !DILexicalBlock(scope: !8678, file: !2043, line: 1816, column: 5)
!8684 = !DILocation(line: 1821, column: 43, scope: !8682)
!8685 = !DILocation(line: 1821, column: 11, scope: !8683)
!8686 = !DILocation(line: 1823, column: 16, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8682, file: !2043, line: 1822, column: 7)
!8688 = !DILocation(line: 1823, column: 24, scope: !8687)
!8689 = !DILocation(line: 1823, column: 42, scope: !8687)
!8690 = !DILocation(line: 1825, column: 7, scope: !8687)
!8691 = !DILocation(line: 1834, column: 17, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8632, file: !2043, line: 1834, column: 7)
!8693 = !DILocation(line: 1834, column: 7, scope: !8632)
!8694 = !DILocation(line: 1837, column: 12, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8692, file: !2043, line: 1835, column: 3)
!8696 = !DILocation(line: 1837, column: 24, scope: !8695)
!8697 = !DILocation(line: 1838, column: 12, scope: !8695)
!8698 = !DILocation(line: 1838, column: 24, scope: !8695)
!8699 = !DILocation(line: 1841, column: 12, scope: !8695)
!8700 = !DILocation(line: 1841, column: 22, scope: !8695)
!8701 = !DILocation(line: 1844, column: 12, scope: !8695)
!8702 = !DILocation(line: 1844, column: 20, scope: !8695)
!8703 = !DILocation(line: 1845, column: 12, scope: !8695)
!8704 = !DILocation(line: 1845, column: 20, scope: !8695)
!8705 = !DILocation(line: 1853, column: 5, scope: !8695)
!8706 = !DILocation(line: 1855, column: 3, scope: !8695)
!8707 = !DILocation(line: 1857, column: 3, scope: !8632)
!8708 = distinct !DISubprogram(name: "UART_DMATxAbortCallback", scope: !2043, file: !2043, line: 2777, type: !8182, scopeLine: 2778, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8709)
!8709 = !{!8710, !8711}
!8710 = !DILocalVariable(name: "hdma", arg: 1, scope: !8708, file: !2043, line: 2777, type: !2102)
!8711 = !DILocalVariable(name: "huart", scope: !8708, file: !2043, line: 2779, type: !2068)
!8712 = !DILocation(line: 0, scope: !8708)
!8713 = !DILocation(line: 2779, column: 82, scope: !8708)
!8714 = !DILocation(line: 2781, column: 10, scope: !8708)
!8715 = !DILocation(line: 2781, column: 18, scope: !8708)
!8716 = !DILocation(line: 2781, column: 36, scope: !8708)
!8717 = !DILocation(line: 2784, column: 14, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8708, file: !2043, line: 2784, column: 7)
!8719 = !DILocation(line: 2784, column: 21, scope: !8718)
!8720 = !DILocation(line: 2784, column: 7, scope: !8708)
!8721 = !DILocation(line: 2786, column: 24, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8723, file: !2043, line: 2786, column: 9)
!8723 = distinct !DILexicalBlock(scope: !8718, file: !2043, line: 2785, column: 3)
!8724 = !DILocation(line: 2786, column: 42, scope: !8722)
!8725 = !DILocation(line: 2786, column: 9, scope: !8723)
!8726 = !DILocation(line: 2793, column: 10, scope: !8708)
!8727 = !DILocation(line: 2793, column: 22, scope: !8708)
!8728 = !DILocation(line: 2794, column: 10, scope: !8708)
!8729 = !DILocation(line: 2794, column: 22, scope: !8708)
!8730 = !DILocation(line: 2797, column: 10, scope: !8708)
!8731 = !DILocation(line: 2797, column: 20, scope: !8708)
!8732 = !DILocation(line: 2800, column: 10, scope: !8708)
!8733 = !DILocation(line: 2800, column: 18, scope: !8708)
!8734 = !DILocation(line: 2801, column: 10, scope: !8708)
!8735 = !DILocation(line: 2801, column: 18, scope: !8708)
!8736 = !DILocation(line: 2809, column: 3, scope: !8708)
!8737 = !DILocation(line: 2811, column: 1, scope: !8708)
!8738 = distinct !DISubprogram(name: "UART_DMARxAbortCallback", scope: !2043, file: !2043, line: 2822, type: !8182, scopeLine: 2823, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8739)
!8739 = !{!8740, !8741}
!8740 = !DILocalVariable(name: "hdma", arg: 1, scope: !8738, file: !2043, line: 2822, type: !2102)
!8741 = !DILocalVariable(name: "huart", scope: !8738, file: !2043, line: 2824, type: !2068)
!8742 = !DILocation(line: 0, scope: !8738)
!8743 = !DILocation(line: 2824, column: 82, scope: !8738)
!8744 = !DILocation(line: 2826, column: 10, scope: !8738)
!8745 = !DILocation(line: 2826, column: 18, scope: !8738)
!8746 = !DILocation(line: 2826, column: 36, scope: !8738)
!8747 = !DILocation(line: 2829, column: 14, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8738, file: !2043, line: 2829, column: 7)
!8749 = !DILocation(line: 2829, column: 21, scope: !8748)
!8750 = !DILocation(line: 2829, column: 7, scope: !8738)
!8751 = !DILocation(line: 2831, column: 24, scope: !8752)
!8752 = distinct !DILexicalBlock(scope: !8753, file: !2043, line: 2831, column: 9)
!8753 = distinct !DILexicalBlock(scope: !8748, file: !2043, line: 2830, column: 3)
!8754 = !DILocation(line: 2831, column: 42, scope: !8752)
!8755 = !DILocation(line: 2831, column: 9, scope: !8753)
!8756 = !DILocation(line: 2838, column: 10, scope: !8738)
!8757 = !DILocation(line: 2838, column: 22, scope: !8738)
!8758 = !DILocation(line: 2839, column: 10, scope: !8738)
!8759 = !DILocation(line: 2839, column: 22, scope: !8738)
!8760 = !DILocation(line: 2842, column: 10, scope: !8738)
!8761 = !DILocation(line: 2842, column: 20, scope: !8738)
!8762 = !DILocation(line: 2845, column: 10, scope: !8738)
!8763 = !DILocation(line: 2845, column: 18, scope: !8738)
!8764 = !DILocation(line: 2846, column: 10, scope: !8738)
!8765 = !DILocation(line: 2846, column: 18, scope: !8738)
!8766 = !DILocation(line: 2854, column: 3, scope: !8738)
!8767 = !DILocation(line: 2856, column: 1, scope: !8738)
!8768 = !DISubprogram(name: "HAL_DMA_Abort_IT", scope: !1362, file: !1362, line: 380, type: !8482, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !173)
!8769 = distinct !DISubprogram(name: "HAL_UART_AbortCpltCallback", scope: !2043, file: !2043, line: 2241, type: !7677, scopeLine: 2242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8770)
!8770 = !{!8771}
!8771 = !DILocalVariable(name: "huart", arg: 1, scope: !8769, file: !2043, line: 2241, type: !2068)
!8772 = !DILocation(line: 0, scope: !8769)
!8773 = !DILocation(line: 2249, column: 1, scope: !8769)
!8774 = distinct !DISubprogram(name: "HAL_UART_AbortTransmit_IT", scope: !2043, file: !2043, line: 1874, type: !7639, scopeLine: 1875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8775)
!8775 = !{!8776}
!8776 = !DILocalVariable(name: "huart", arg: 1, scope: !8774, file: !2043, line: 1874, type: !2068)
!8777 = !DILocation(line: 0, scope: !8774)
!8778 = !DILocation(line: 1877, column: 3, scope: !8774)
!8779 = !DILocation(line: 1880, column: 7, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8774, file: !2043, line: 1880, column: 7)
!8781 = !DILocation(line: 1880, column: 7, scope: !8774)
!8782 = !DILocation(line: 1882, column: 5, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8780, file: !2043, line: 1881, column: 3)
!8784 = !DILocation(line: 1885, column: 16, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8783, file: !2043, line: 1885, column: 9)
!8786 = !DILocation(line: 1885, column: 23, scope: !8785)
!8787 = !DILocation(line: 1885, column: 9, scope: !8783)
!8788 = !DILocation(line: 1889, column: 22, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8785, file: !2043, line: 1886, column: 5)
!8790 = !DILocation(line: 1889, column: 40, scope: !8789)
!8791 = !DILocation(line: 1892, column: 11, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8789, file: !2043, line: 1892, column: 11)
!8793 = !DILocation(line: 1892, column: 43, scope: !8792)
!8794 = !DILocation(line: 1892, column: 11, scope: !8789)
!8795 = !DILocation(line: 1895, column: 16, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8792, file: !2043, line: 1893, column: 7)
!8797 = !DILocation(line: 1895, column: 24, scope: !8796)
!8798 = !DILocation(line: 1895, column: 9, scope: !8796)
!8799 = !DILocation(line: 1896, column: 7, scope: !8796)
!8800 = !DILocation(line: 1901, column: 14, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8785, file: !2043, line: 1899, column: 5)
!8802 = !DILocation(line: 1901, column: 26, scope: !8801)
!8803 = !DILocation(line: 1904, column: 14, scope: !8801)
!8804 = !DILocation(line: 1904, column: 21, scope: !8801)
!8805 = !DILocation(line: 1912, column: 7, scope: !8801)
!8806 = !DILocation(line: 1919, column: 12, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8780, file: !2043, line: 1917, column: 3)
!8808 = !DILocation(line: 1919, column: 24, scope: !8807)
!8809 = !DILocation(line: 1922, column: 12, scope: !8807)
!8810 = !DILocation(line: 1922, column: 19, scope: !8807)
!8811 = !DILocation(line: 1930, column: 5, scope: !8807)
!8812 = !DILocation(line: 1934, column: 3, scope: !8774)
!8813 = distinct !DISubprogram(name: "UART_DMATxOnlyAbortCallback", scope: !2043, file: !2043, line: 2867, type: !8182, scopeLine: 2868, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8814)
!8814 = !{!8815, !8816}
!8815 = !DILocalVariable(name: "hdma", arg: 1, scope: !8813, file: !2043, line: 2867, type: !2102)
!8816 = !DILocalVariable(name: "huart", scope: !8813, file: !2043, line: 2869, type: !2068)
!8817 = !DILocation(line: 0, scope: !8813)
!8818 = !DILocation(line: 2869, column: 82, scope: !8813)
!8819 = !DILocation(line: 2871, column: 10, scope: !8813)
!8820 = !DILocation(line: 2871, column: 22, scope: !8813)
!8821 = !DILocation(line: 2874, column: 10, scope: !8813)
!8822 = !DILocation(line: 2874, column: 17, scope: !8813)
!8823 = !DILocation(line: 2882, column: 3, scope: !8813)
!8824 = !DILocation(line: 2884, column: 1, scope: !8813)
!8825 = distinct !DISubprogram(name: "HAL_UART_AbortTransmitCpltCallback", scope: !2043, file: !2043, line: 2256, type: !7677, scopeLine: 2257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8826)
!8826 = !{!8827}
!8827 = !DILocalVariable(name: "huart", arg: 1, scope: !8825, file: !2043, line: 2256, type: !2068)
!8828 = !DILocation(line: 0, scope: !8825)
!8829 = !DILocation(line: 2264, column: 1, scope: !8825)
!8830 = distinct !DISubprogram(name: "HAL_UART_AbortReceive_IT", scope: !2043, file: !2043, line: 1951, type: !7639, scopeLine: 1952, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8831)
!8831 = !{!8832}
!8832 = !DILocalVariable(name: "huart", arg: 1, scope: !8830, file: !2043, line: 1951, type: !2068)
!8833 = !DILocation(line: 0, scope: !8830)
!8834 = !DILocation(line: 1954, column: 3, scope: !8830)
!8835 = !DILocation(line: 1955, column: 3, scope: !8830)
!8836 = !DILocation(line: 1958, column: 7, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8830, file: !2043, line: 1958, column: 7)
!8838 = !DILocation(line: 1958, column: 7, scope: !8830)
!8839 = !DILocation(line: 1960, column: 5, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8837, file: !2043, line: 1959, column: 3)
!8841 = !DILocation(line: 1963, column: 16, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8840, file: !2043, line: 1963, column: 9)
!8843 = !DILocation(line: 1963, column: 23, scope: !8842)
!8844 = !DILocation(line: 1963, column: 9, scope: !8840)
!8845 = !DILocation(line: 1967, column: 22, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8842, file: !2043, line: 1964, column: 5)
!8847 = !DILocation(line: 1967, column: 40, scope: !8846)
!8848 = !DILocation(line: 1970, column: 11, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8846, file: !2043, line: 1970, column: 11)
!8850 = !DILocation(line: 1970, column: 43, scope: !8849)
!8851 = !DILocation(line: 1970, column: 11, scope: !8846)
!8852 = !DILocation(line: 1973, column: 16, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8849, file: !2043, line: 1971, column: 7)
!8854 = !DILocation(line: 1973, column: 24, scope: !8853)
!8855 = !DILocation(line: 1973, column: 9, scope: !8853)
!8856 = !DILocation(line: 1974, column: 7, scope: !8853)
!8857 = !DILocation(line: 1979, column: 14, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8842, file: !2043, line: 1977, column: 5)
!8859 = !DILocation(line: 1979, column: 26, scope: !8858)
!8860 = !DILocation(line: 1982, column: 14, scope: !8858)
!8861 = !DILocation(line: 1982, column: 22, scope: !8858)
!8862 = !DILocation(line: 1990, column: 7, scope: !8858)
!8863 = !DILocation(line: 1997, column: 12, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8837, file: !2043, line: 1995, column: 3)
!8865 = !DILocation(line: 1997, column: 24, scope: !8864)
!8866 = !DILocation(line: 2000, column: 12, scope: !8864)
!8867 = !DILocation(line: 2000, column: 20, scope: !8864)
!8868 = !DILocation(line: 2008, column: 5, scope: !8864)
!8869 = !DILocation(line: 2012, column: 3, scope: !8830)
!8870 = distinct !DISubprogram(name: "UART_DMARxOnlyAbortCallback", scope: !2043, file: !2043, line: 2895, type: !8182, scopeLine: 2896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8871)
!8871 = !{!8872, !8873}
!8872 = !DILocalVariable(name: "hdma", arg: 1, scope: !8870, file: !2043, line: 2895, type: !2102)
!8873 = !DILocalVariable(name: "huart", scope: !8870, file: !2043, line: 2897, type: !2068)
!8874 = !DILocation(line: 0, scope: !8870)
!8875 = !DILocation(line: 2897, column: 82, scope: !8870)
!8876 = !DILocation(line: 2899, column: 10, scope: !8870)
!8877 = !DILocation(line: 2899, column: 22, scope: !8870)
!8878 = !DILocation(line: 2902, column: 10, scope: !8870)
!8879 = !DILocation(line: 2902, column: 18, scope: !8870)
!8880 = !DILocation(line: 2910, column: 3, scope: !8870)
!8881 = !DILocation(line: 2912, column: 1, scope: !8870)
!8882 = distinct !DISubprogram(name: "HAL_UART_AbortReceiveCpltCallback", scope: !2043, file: !2043, line: 2271, type: !7677, scopeLine: 2272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8883)
!8883 = !{!8884}
!8884 = !DILocalVariable(name: "huart", arg: 1, scope: !8882, file: !2043, line: 2271, type: !2068)
!8885 = !DILocation(line: 0, scope: !8882)
!8886 = !DILocation(line: 2279, column: 1, scope: !8882)
!8887 = distinct !DISubprogram(name: "HAL_UART_IRQHandler", scope: !2043, file: !2043, line: 2021, type: !7677, scopeLine: 2022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !8888)
!8888 = !{!8889, !8890, !8891, !8892, !8893, !8894}
!8889 = !DILocalVariable(name: "huart", arg: 1, scope: !8887, file: !2043, line: 2021, type: !2068)
!8890 = !DILocalVariable(name: "isrflags", scope: !8887, file: !2043, line: 2023, type: !103)
!8891 = !DILocalVariable(name: "cr1its", scope: !8887, file: !2043, line: 2024, type: !103)
!8892 = !DILocalVariable(name: "cr3its", scope: !8887, file: !2043, line: 2025, type: !103)
!8893 = !DILocalVariable(name: "errorflags", scope: !8887, file: !2043, line: 2026, type: !103)
!8894 = !DILocalVariable(name: "dmarequest", scope: !8887, file: !2043, line: 2027, type: !103)
!8895 = !DILocation(line: 0, scope: !8887)
!8896 = !DILocation(line: 2023, column: 25, scope: !8887)
!8897 = !DILocation(line: 2024, column: 25, scope: !8887)
!8898 = !DILocation(line: 2025, column: 25, scope: !8887)
!8899 = !DILocation(line: 2031, column: 7, scope: !8887)
!8900 = !DILocation(line: 2036, column: 7, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8902, file: !2043, line: 2035, column: 5)
!8902 = distinct !DILexicalBlock(scope: !8903, file: !2043, line: 2034, column: 9)
!8903 = distinct !DILexicalBlock(scope: !8904, file: !2043, line: 2032, column: 3)
!8904 = distinct !DILexicalBlock(scope: !8887, file: !2043, line: 2031, column: 7)
!8905 = !DILocation(line: 2037, column: 7, scope: !8901)
!8906 = !DILocation(line: 2030, column: 26, scope: !8887)
!8907 = !DILocation(line: 2042, column: 19, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8887, file: !2043, line: 2042, column: 7)
!8909 = !DILocation(line: 2042, column: 29, scope: !8908)
!8910 = !DILocation(line: 2042, column: 42, scope: !8908)
!8911 = !DILocation(line: 2042, column: 59, scope: !8908)
!8912 = !DILocation(line: 2042, column: 69, scope: !8908)
!8913 = !DILocation(line: 2045, column: 20, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8915, file: !2043, line: 2045, column: 9)
!8915 = distinct !DILexicalBlock(scope: !8908, file: !2043, line: 2043, column: 3)
!8916 = !DILocation(line: 2045, column: 35, scope: !8914)
!8917 = !DILocation(line: 2045, column: 45, scope: !8914)
!8918 = !DILocation(line: 2047, column: 14, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8914, file: !2043, line: 2046, column: 5)
!8920 = !DILocation(line: 2047, column: 24, scope: !8919)
!8921 = !DILocation(line: 2048, column: 5, scope: !8919)
!8922 = !DILocation(line: 2051, column: 20, scope: !8923)
!8923 = distinct !DILexicalBlock(scope: !8915, file: !2043, line: 2051, column: 9)
!8924 = !DILocation(line: 2051, column: 35, scope: !8923)
!8925 = !DILocation(line: 2051, column: 45, scope: !8923)
!8926 = !DILocation(line: 2053, column: 14, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !8923, file: !2043, line: 2052, column: 5)
!8928 = !DILocation(line: 2053, column: 24, scope: !8927)
!8929 = !DILocation(line: 2054, column: 5, scope: !8927)
!8930 = !DILocation(line: 2057, column: 20, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8915, file: !2043, line: 2057, column: 9)
!8932 = !DILocation(line: 2057, column: 35, scope: !8931)
!8933 = !DILocation(line: 2057, column: 45, scope: !8931)
!8934 = !DILocation(line: 2059, column: 14, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8931, file: !2043, line: 2058, column: 5)
!8936 = !DILocation(line: 2059, column: 24, scope: !8935)
!8937 = !DILocation(line: 2060, column: 5, scope: !8935)
!8938 = !DILocation(line: 2063, column: 20, scope: !8939)
!8939 = distinct !DILexicalBlock(scope: !8915, file: !2043, line: 2063, column: 9)
!8940 = !DILocation(line: 2063, column: 36, scope: !8939)
!8941 = !DILocation(line: 2063, column: 46, scope: !8939)
!8942 = !DILocation(line: 2065, column: 14, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8939, file: !2043, line: 2064, column: 5)
!8944 = !DILocation(line: 2065, column: 24, scope: !8943)
!8945 = !DILocation(line: 2066, column: 5, scope: !8943)
!8946 = !DILocation(line: 2069, column: 16, scope: !8947)
!8947 = distinct !DILexicalBlock(scope: !8915, file: !2043, line: 2069, column: 9)
!8948 = !DILocation(line: 2069, column: 26, scope: !8947)
!8949 = !DILocation(line: 2069, column: 9, scope: !8915)
!8950 = !DILocation(line: 2072, column: 49, scope: !8951)
!8951 = distinct !DILexicalBlock(scope: !8952, file: !2043, line: 2072, column: 11)
!8952 = distinct !DILexicalBlock(scope: !8947, file: !2043, line: 2070, column: 5)
!8953 = !DILocation(line: 2074, column: 9, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8951, file: !2043, line: 2073, column: 7)
!8955 = !DILocation(line: 2075, column: 7, scope: !8954)
!8956 = !DILocation(line: 2079, column: 20, scope: !8952)
!8957 = !DILocation(line: 2080, column: 20, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8952, file: !2043, line: 2080, column: 11)
!8959 = !DILocation(line: 2080, column: 30, scope: !8958)
!8960 = !DILocation(line: 2080, column: 52, scope: !8958)
!8961 = !DILocation(line: 2080, column: 62, scope: !8958)
!8962 = !DILocation(line: 2085, column: 9, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8958, file: !2043, line: 2081, column: 7)
!8964 = !DILocation(line: 2088, column: 13, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8963, file: !2043, line: 2088, column: 13)
!8966 = !DILocation(line: 2088, column: 13, scope: !8963)
!8967 = !DILocation(line: 2090, column: 11, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8965, file: !2043, line: 2089, column: 9)
!8969 = !DILocation(line: 2093, column: 22, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8968, file: !2043, line: 2093, column: 15)
!8971 = !DILocation(line: 2093, column: 29, scope: !8970)
!8972 = !DILocation(line: 2093, column: 15, scope: !8968)
!8973 = !DILocation(line: 2097, column: 28, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8970, file: !2043, line: 2094, column: 11)
!8975 = !DILocation(line: 2097, column: 46, scope: !8974)
!8976 = !DILocation(line: 2098, column: 17, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8974, file: !2043, line: 2098, column: 17)
!8978 = !DILocation(line: 2098, column: 49, scope: !8977)
!8979 = !DILocation(line: 2098, column: 17, scope: !8974)
!8980 = !DILocation(line: 2101, column: 22, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8977, file: !2043, line: 2099, column: 13)
!8982 = !DILocation(line: 2101, column: 30, scope: !8981)
!8983 = !DILocation(line: 2101, column: 15, scope: !8981)
!8984 = !DILocation(line: 2102, column: 13, scope: !8981)
!8985 = !DILocation(line: 2112, column: 13, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8970, file: !2043, line: 2105, column: 11)
!8987 = !DILocation(line: 2124, column: 11, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8965, file: !2043, line: 2117, column: 9)
!8989 = !DILocation(line: 2137, column: 9, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8958, file: !2043, line: 2129, column: 7)
!8991 = !DILocation(line: 2140, column: 26, scope: !8990)
!8992 = !DILocation(line: 2147, column: 18, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8887, file: !2043, line: 2147, column: 7)
!8994 = !DILocation(line: 2147, column: 34, scope: !8993)
!8995 = !DILocation(line: 2147, column: 44, scope: !8993)
!8996 = !DILocation(line: 2149, column: 5, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8993, file: !2043, line: 2148, column: 3)
!8998 = !DILocation(line: 2150, column: 5, scope: !8997)
!8999 = !DILocation(line: 2154, column: 18, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8887, file: !2043, line: 2154, column: 7)
!9001 = !DILocation(line: 2154, column: 33, scope: !9000)
!9002 = !DILocation(line: 2154, column: 43, scope: !9000)
!9003 = !DILocation(line: 2156, column: 5, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !9000, file: !2043, line: 2155, column: 3)
!9005 = !DILocation(line: 2157, column: 5, scope: !9004)
!9006 = !DILocation(line: 2159, column: 1, scope: !8887)
!9007 = distinct !DISubprogram(name: "UART_Receive_IT", scope: !2043, file: !2043, line: 2992, type: !7639, scopeLine: 2993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !9008)
!9008 = !{!9009, !9010}
!9009 = !DILocalVariable(name: "huart", arg: 1, scope: !9007, file: !2043, line: 2992, type: !2068)
!9010 = !DILocalVariable(name: "tmp", scope: !9007, file: !2043, line: 2994, type: !2066)
!9011 = !DILocation(line: 0, scope: !9007)
!9012 = !DILocation(line: 2997, column: 14, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !9007, file: !2043, line: 2997, column: 7)
!9014 = !DILocation(line: 2997, column: 22, scope: !9013)
!9015 = !DILocation(line: 2997, column: 7, scope: !9007)
!9016 = !DILocation(line: 2999, column: 21, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9018, file: !2043, line: 2999, column: 9)
!9018 = distinct !DILexicalBlock(scope: !9013, file: !2043, line: 2998, column: 3)
!9019 = !DILocation(line: 2999, column: 32, scope: !9017)
!9020 = !DILocation(line: 2999, column: 9, scope: !9018)
!9021 = !DILocation(line: 3001, column: 33, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !9017, file: !2043, line: 3000, column: 5)
!9023 = !DILocation(line: 3002, column: 23, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9022, file: !2043, line: 3002, column: 11)
!9025 = !DILocation(line: 3002, column: 30, scope: !9024)
!9026 = !DILocation(line: 0, scope: !9024)
!9027 = !DILocation(line: 3002, column: 11, scope: !9022)
!9028 = !DILocation(line: 3004, column: 16, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9024, file: !2043, line: 3003, column: 7)
!9030 = !DILocation(line: 3004, column: 14, scope: !9029)
!9031 = !DILocation(line: 3005, column: 27, scope: !9029)
!9032 = !DILocation(line: 3006, column: 7, scope: !9029)
!9033 = !DILocation(line: 3009, column: 16, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9024, file: !2043, line: 3008, column: 7)
!9035 = !DILocation(line: 3009, column: 14, scope: !9034)
!9036 = !DILocation(line: 3010, column: 27, scope: !9034)
!9037 = !DILocation(line: 3015, column: 23, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9039, file: !2043, line: 3015, column: 11)
!9039 = distinct !DILexicalBlock(scope: !9017, file: !2043, line: 3014, column: 5)
!9040 = !DILocation(line: 3015, column: 30, scope: !9038)
!9041 = !DILocation(line: 0, scope: !9038)
!9042 = !DILocation(line: 3015, column: 11, scope: !9039)
!9043 = !DILocation(line: 3017, column: 17, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !9038, file: !2043, line: 3016, column: 7)
!9045 = !DILocation(line: 3017, column: 27, scope: !9044)
!9046 = !DILocation(line: 3017, column: 30, scope: !9044)
!9047 = !DILocation(line: 3018, column: 7, scope: !9044)
!9048 = !DILocation(line: 3021, column: 32, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9038, file: !2043, line: 3020, column: 7)
!9050 = !DILocation(line: 3021, column: 17, scope: !9049)
!9051 = !DILocation(line: 3021, column: 27, scope: !9049)
!9052 = !DILocation(line: 3021, column: 30, scope: !9049)
!9053 = !DILocation(line: 3025, column: 18, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9018, file: !2043, line: 3025, column: 9)
!9055 = !DILocation(line: 3025, column: 9, scope: !9054)
!9056 = !DILocation(line: 3025, column: 30, scope: !9054)
!9057 = !DILocation(line: 3025, column: 9, scope: !9018)
!9058 = !DILocation(line: 3028, column: 7, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9054, file: !2043, line: 3026, column: 5)
!9060 = !DILocation(line: 3031, column: 7, scope: !9059)
!9061 = !DILocation(line: 3034, column: 7, scope: !9059)
!9062 = !DILocation(line: 3037, column: 22, scope: !9059)
!9063 = !DILocation(line: 3044, column: 7, scope: !9059)
!9064 = !DILocation(line: 3047, column: 7, scope: !9059)
!9065 = !DILocation(line: 3055, column: 1, scope: !9007)
!9066 = distinct !DISubprogram(name: "UART_DMAAbortOnError", scope: !2043, file: !2043, line: 2753, type: !8182, scopeLine: 2754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !9067)
!9067 = !{!9068, !9069}
!9068 = !DILocalVariable(name: "hdma", arg: 1, scope: !9066, file: !2043, line: 2753, type: !2102)
!9069 = !DILocalVariable(name: "huart", scope: !9066, file: !2043, line: 2755, type: !2068)
!9070 = !DILocation(line: 0, scope: !9066)
!9071 = !DILocation(line: 2755, column: 82, scope: !9066)
!9072 = !DILocation(line: 2756, column: 10, scope: !9066)
!9073 = !DILocation(line: 2756, column: 22, scope: !9066)
!9074 = !DILocation(line: 2757, column: 10, scope: !9066)
!9075 = !DILocation(line: 2757, column: 22, scope: !9066)
!9076 = !DILocation(line: 2764, column: 3, scope: !9066)
!9077 = !DILocation(line: 2766, column: 1, scope: !9066)
!9078 = distinct !DISubprogram(name: "UART_Transmit_IT", scope: !2043, file: !2043, line: 2920, type: !7639, scopeLine: 2921, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !9079)
!9079 = !{!9080, !9081}
!9080 = !DILocalVariable(name: "huart", arg: 1, scope: !9078, file: !2043, line: 2920, type: !2068)
!9081 = !DILocalVariable(name: "tmp", scope: !9078, file: !2043, line: 2922, type: !2066)
!9082 = !DILocation(line: 0, scope: !9078)
!9083 = !DILocation(line: 2925, column: 14, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9078, file: !2043, line: 2925, column: 7)
!9085 = !DILocation(line: 2925, column: 21, scope: !9084)
!9086 = !DILocation(line: 2925, column: 7, scope: !9078)
!9087 = !DILocation(line: 2927, column: 21, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9089, file: !2043, line: 2927, column: 9)
!9089 = distinct !DILexicalBlock(scope: !9084, file: !2043, line: 2926, column: 3)
!9090 = !DILocation(line: 2927, column: 32, scope: !9088)
!9091 = !DILocation(line: 0, scope: !9088)
!9092 = !DILocation(line: 2927, column: 9, scope: !9089)
!9093 = !DILocation(line: 2929, column: 33, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9088, file: !2043, line: 2928, column: 5)
!9095 = !DILocation(line: 2930, column: 40, scope: !9094)
!9096 = !DILocation(line: 2930, column: 45, scope: !9094)
!9097 = !DILocation(line: 2930, column: 29, scope: !9094)
!9098 = !DILocation(line: 2930, column: 14, scope: !9094)
!9099 = !DILocation(line: 2930, column: 24, scope: !9094)
!9100 = !DILocation(line: 2930, column: 27, scope: !9094)
!9101 = !DILocation(line: 2931, column: 23, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9094, file: !2043, line: 2931, column: 11)
!9103 = !DILocation(line: 2931, column: 30, scope: !9102)
!9104 = !DILocation(line: 0, scope: !9102)
!9105 = !DILocation(line: 2931, column: 11, scope: !9094)
!9106 = !DILocation(line: 2933, column: 27, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9102, file: !2043, line: 2932, column: 7)
!9108 = !DILocation(line: 2934, column: 7, scope: !9107)
!9109 = !DILocation(line: 2937, column: 27, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9102, file: !2043, line: 2936, column: 7)
!9111 = !DILocation(line: 2942, column: 57, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9088, file: !2043, line: 2941, column: 5)
!9113 = !DILocation(line: 2942, column: 39, scope: !9112)
!9114 = !DILocation(line: 2942, column: 29, scope: !9112)
!9115 = !DILocation(line: 2942, column: 14, scope: !9112)
!9116 = !DILocation(line: 2942, column: 24, scope: !9112)
!9117 = !DILocation(line: 2942, column: 27, scope: !9112)
!9118 = !DILocation(line: 2945, column: 18, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9089, file: !2043, line: 2945, column: 9)
!9120 = !DILocation(line: 2945, column: 9, scope: !9119)
!9121 = !DILocation(line: 2945, column: 30, scope: !9119)
!9122 = !DILocation(line: 2945, column: 9, scope: !9089)
!9123 = !DILocation(line: 2948, column: 7, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9119, file: !2043, line: 2946, column: 5)
!9125 = !DILocation(line: 2951, column: 7, scope: !9124)
!9126 = !DILocation(line: 2952, column: 5, scope: !9124)
!9127 = !DILocation(line: 2959, column: 1, scope: !9078)
!9128 = distinct !DISubprogram(name: "UART_EndTransmit_IT", scope: !2043, file: !2043, line: 2967, type: !7639, scopeLine: 2968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !9129)
!9129 = !{!9130}
!9130 = !DILocalVariable(name: "huart", arg: 1, scope: !9128, file: !2043, line: 2967, type: !2068)
!9131 = !DILocation(line: 0, scope: !9128)
!9132 = !DILocation(line: 2970, column: 3, scope: !9128)
!9133 = !DILocation(line: 2973, column: 10, scope: !9128)
!9134 = !DILocation(line: 2973, column: 17, scope: !9128)
!9135 = !DILocation(line: 2980, column: 3, scope: !9128)
!9136 = !DILocation(line: 2983, column: 3, scope: !9128)
!9137 = distinct !DISubprogram(name: "HAL_LIN_SendBreak", scope: !2043, file: !2043, line: 2310, type: !7639, scopeLine: 2311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !9138)
!9138 = !{!9139}
!9139 = !DILocalVariable(name: "huart", arg: 1, scope: !9137, file: !2043, line: 2310, type: !2068)
!9140 = !DILocation(line: 0, scope: !9137)
!9141 = !DILocation(line: 2316, column: 3, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9143, file: !2043, line: 2316, column: 3)
!9143 = distinct !DILexicalBlock(scope: !9137, file: !2043, line: 2316, column: 3)
!9144 = !DILocation(line: 2316, column: 3, scope: !9143)
!9145 = !DILocation(line: 2316, column: 3, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9142, file: !2043, line: 2316, column: 3)
!9147 = !DILocation(line: 2318, column: 10, scope: !9137)
!9148 = !DILocation(line: 2318, column: 17, scope: !9137)
!9149 = !DILocation(line: 2321, column: 3, scope: !9137)
!9150 = !DILocation(line: 2323, column: 17, scope: !9137)
!9151 = !DILocation(line: 2326, column: 3, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9137, file: !2043, line: 2326, column: 3)
!9153 = !DILocation(line: 2328, column: 3, scope: !9137)
!9154 = !DILocation(line: 2329, column: 1, scope: !9137)
!9155 = distinct !DISubprogram(name: "HAL_MultiProcessor_EnterMuteMode", scope: !2043, file: !2043, line: 2337, type: !7639, scopeLine: 2338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !9156)
!9156 = !{!9157}
!9157 = !DILocalVariable(name: "huart", arg: 1, scope: !9155, file: !2043, line: 2337, type: !2068)
!9158 = !DILocation(line: 0, scope: !9155)
!9159 = !DILocation(line: 2343, column: 3, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9161, file: !2043, line: 2343, column: 3)
!9161 = distinct !DILexicalBlock(scope: !9155, file: !2043, line: 2343, column: 3)
!9162 = !DILocation(line: 2343, column: 3, scope: !9161)
!9163 = !DILocation(line: 2343, column: 3, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9160, file: !2043, line: 2343, column: 3)
!9165 = !DILocation(line: 2345, column: 10, scope: !9155)
!9166 = !DILocation(line: 2345, column: 17, scope: !9155)
!9167 = !DILocation(line: 2348, column: 3, scope: !9155)
!9168 = !DILocation(line: 2350, column: 17, scope: !9155)
!9169 = !DILocation(line: 2353, column: 3, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9155, file: !2043, line: 2353, column: 3)
!9171 = !DILocation(line: 2355, column: 3, scope: !9155)
!9172 = !DILocation(line: 2356, column: 1, scope: !9155)
!9173 = distinct !DISubprogram(name: "HAL_MultiProcessor_ExitMuteMode", scope: !2043, file: !2043, line: 2364, type: !7639, scopeLine: 2365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !9174)
!9174 = !{!9175}
!9175 = !DILocalVariable(name: "huart", arg: 1, scope: !9173, file: !2043, line: 2364, type: !2068)
!9176 = !DILocation(line: 0, scope: !9173)
!9177 = !DILocation(line: 2370, column: 3, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !9179, file: !2043, line: 2370, column: 3)
!9179 = distinct !DILexicalBlock(scope: !9173, file: !2043, line: 2370, column: 3)
!9180 = !DILocation(line: 2370, column: 3, scope: !9179)
!9181 = !DILocation(line: 2370, column: 3, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9178, file: !2043, line: 2370, column: 3)
!9183 = !DILocation(line: 2372, column: 10, scope: !9173)
!9184 = !DILocation(line: 2372, column: 17, scope: !9173)
!9185 = !DILocation(line: 2375, column: 3, scope: !9173)
!9186 = !DILocation(line: 2377, column: 17, scope: !9173)
!9187 = !DILocation(line: 2380, column: 3, scope: !9188)
!9188 = distinct !DILexicalBlock(scope: !9173, file: !2043, line: 2380, column: 3)
!9189 = !DILocation(line: 2382, column: 3, scope: !9173)
!9190 = !DILocation(line: 2383, column: 1, scope: !9173)
!9191 = distinct !DISubprogram(name: "HAL_HalfDuplex_EnableTransmitter", scope: !2043, file: !2043, line: 2391, type: !7639, scopeLine: 2392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !9192)
!9192 = !{!9193, !9194}
!9193 = !DILocalVariable(name: "huart", arg: 1, scope: !9191, file: !2043, line: 2391, type: !2068)
!9194 = !DILocalVariable(name: "tmpreg", scope: !9191, file: !2043, line: 2393, type: !103)
!9195 = !DILocation(line: 0, scope: !9191)
!9196 = !DILocation(line: 2396, column: 3, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9198, file: !2043, line: 2396, column: 3)
!9198 = distinct !DILexicalBlock(scope: !9191, file: !2043, line: 2396, column: 3)
!9199 = !DILocation(line: 2396, column: 3, scope: !9198)
!9200 = !DILocation(line: 2396, column: 3, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9197, file: !2043, line: 2396, column: 3)
!9202 = !DILocation(line: 2398, column: 10, scope: !9191)
!9203 = !DILocation(line: 2398, column: 17, scope: !9191)
!9204 = !DILocation(line: 2401, column: 19, scope: !9191)
!9205 = !DILocation(line: 2401, column: 29, scope: !9191)
!9206 = !DILocation(line: 2404, column: 10, scope: !9191)
!9207 = !DILocation(line: 2407, column: 10, scope: !9191)
!9208 = !DILocation(line: 2410, column: 3, scope: !9191)
!9209 = !DILocation(line: 2412, column: 17, scope: !9191)
!9210 = !DILocation(line: 2415, column: 3, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9191, file: !2043, line: 2415, column: 3)
!9212 = !DILocation(line: 2417, column: 3, scope: !9191)
!9213 = !DILocation(line: 2418, column: 1, scope: !9191)
!9214 = distinct !DISubprogram(name: "HAL_HalfDuplex_EnableReceiver", scope: !2043, file: !2043, line: 2426, type: !7639, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !9215)
!9215 = !{!9216, !9217}
!9216 = !DILocalVariable(name: "huart", arg: 1, scope: !9214, file: !2043, line: 2426, type: !2068)
!9217 = !DILocalVariable(name: "tmpreg", scope: !9214, file: !2043, line: 2428, type: !103)
!9218 = !DILocation(line: 0, scope: !9214)
!9219 = !DILocation(line: 2431, column: 3, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9221, file: !2043, line: 2431, column: 3)
!9221 = distinct !DILexicalBlock(scope: !9214, file: !2043, line: 2431, column: 3)
!9222 = !DILocation(line: 2431, column: 3, scope: !9221)
!9223 = !DILocation(line: 2431, column: 3, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !9220, file: !2043, line: 2431, column: 3)
!9225 = !DILocation(line: 2433, column: 10, scope: !9214)
!9226 = !DILocation(line: 2433, column: 17, scope: !9214)
!9227 = !DILocation(line: 2436, column: 19, scope: !9214)
!9228 = !DILocation(line: 2436, column: 29, scope: !9214)
!9229 = !DILocation(line: 2439, column: 10, scope: !9214)
!9230 = !DILocation(line: 2442, column: 10, scope: !9214)
!9231 = !DILocation(line: 2445, column: 3, scope: !9214)
!9232 = !DILocation(line: 2447, column: 17, scope: !9214)
!9233 = !DILocation(line: 2450, column: 3, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9214, file: !2043, line: 2450, column: 3)
!9235 = !DILocation(line: 2452, column: 3, scope: !9214)
!9236 = !DILocation(line: 2453, column: 1, scope: !9214)
!9237 = distinct !DISubprogram(name: "HAL_UART_GetState", scope: !2043, file: !2043, line: 2483, type: !9238, scopeLine: 2484, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !9240)
!9238 = !DISubroutineType(types: !9239)
!9239 = !{!2067, !2068}
!9240 = !{!9241, !9242, !9243}
!9241 = !DILocalVariable(name: "huart", arg: 1, scope: !9237, file: !2043, line: 2483, type: !2068)
!9242 = !DILocalVariable(name: "temp1", scope: !9237, file: !2043, line: 2485, type: !103)
!9243 = !DILocalVariable(name: "temp2", scope: !9237, file: !2043, line: 2485, type: !103)
!9244 = !DILocation(line: 0, scope: !9237)
!9245 = !DILocation(line: 2486, column: 18, scope: !9237)
!9246 = !DILocation(line: 2487, column: 18, scope: !9237)
!9247 = !DILocation(line: 2489, column: 40, scope: !9237)
!9248 = !DILocation(line: 2489, column: 3, scope: !9237)
!9249 = distinct !DISubprogram(name: "HAL_UART_GetError", scope: !2043, file: !2043, line: 2498, type: !9250, scopeLine: 2499, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2042, retainedNodes: !9252)
!9250 = !DISubroutineType(types: !9251)
!9251 = !{!103, !2068}
!9252 = !{!9253}
!9253 = !DILocalVariable(name: "huart", arg: 1, scope: !9249, file: !2043, line: 2498, type: !2068)
!9254 = !DILocation(line: 0, scope: !9249)
!9255 = !DILocation(line: 2500, column: 17, scope: !9249)
!9256 = !DILocation(line: 2500, column: 3, scope: !9249)
