; ModuleID = './examples/dualport_freertos.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%struct.xSTATIC_TCB = type { i8*, [2 x %struct.xSTATIC_LIST_ITEM], i32, i8*, [16 x i8], i32, i8 }
%struct.xSTATIC_LIST_ITEM = type { i32, [4 x i8*] }
%"class.Cicada::Stm32Uart" = type { %"class.Cicada::BufferedSerial", i8, %struct.__UART_HandleTypeDef, %struct.USART_TypeDef*, i16, i16, i32 }
%"class.Cicada::BufferedSerial" = type { %"class.Cicada::IBufferedSerial", %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer" }
%"class.Cicada::IBufferedSerial" = type { %"class.Cicada::ICommDevice", %"class.Cicada::ICommDevice" }
%"class.Cicada::ICommDevice" = type { i32 (...)** }
%"class.Cicada::LineCircularBuffer" = type { %"class.Cicada::CircularBuffer.base", i16, [2 x i8] }
%"class.Cicada::CircularBuffer.base" = type <{ i32 (...)**, [4 x i8], i64, i64, i64, i64, i8* }>
%struct.__UART_HandleTypeDef = type { %struct.USART_TypeDef*, %struct.USART_TypeDef, i8*, i16, i16, i8*, i16, i16, %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef*, i32, i32, i32, i32 }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.__DMA_HandleTypeDef = type { %struct.DMA_Channel_TypeDef*, %struct.USART_TypeDef, i32, i32, i8*, void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)*, i32, %struct.DMA_TypeDef*, i32 }
%struct.DMA_Channel_TypeDef = type { i32, i32, i32, i32 }
%struct.DMA_TypeDef = type { i32, i32 }
%struct.tskTaskControlBlock = type { i32*, %struct.xLIST_ITEM, %struct.xLIST_ITEM, i32, i32*, [16 x i8], i32, i8 }
%struct.xLIST_ITEM = type { i32, %struct.xLIST_ITEM*, %struct.xLIST_ITEM*, i8*, i8* }
%struct.xLIST = type { i32, %struct.xLIST_ITEM*, %struct.xMINI_LIST_ITEM }
%struct.xMINI_LIST_ITEM = type { i32, %struct.xLIST_ITEM*, %struct.xLIST_ITEM* }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.__va_list = type { i8* }
%struct.out_fct_wrap_type = type { void (i8, i8*)*, i8* }
%struct.xMEMORY_REGION = type { i8*, i32, i32 }
%"class.Cicada::CircularBuffer" = type <{ i32 (...)**, [4 x i8], i64, i64, i64, i64, i8*, [4 x i8] }>

$_ZN6Cicada14BufferedSerialD2Ev = comdat any

$_ZN6Cicada14BufferedSerialD0Ev = comdat any

$_ZThn4_N6Cicada14BufferedSerialD1Ev = comdat any

$_ZThn4_N6Cicada14BufferedSerialD0Ev = comdat any

$_ZNK6Cicada14CircularBufferIcE4sizeEv = comdat any

$_ZN6Cicada18LineCircularBuffer5flushEv = comdat any

$_ZN6Cicada14CircularBufferIcE5flushEv = comdat any

$_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv = comdat any

$_ZN6Cicada18LineCircularBuffer4pushEc = comdat any

$_ZN6Cicada14CircularBufferIcE4pushEc = comdat any

$_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy = comdat any

$_ZN6Cicada18LineCircularBuffer4pullEv = comdat any

$_ZN6Cicada14CircularBufferIcE4pullEv = comdat any

$_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv = comdat any

$_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv = comdat any

$_ZN6Cicada14CircularBufferIcED2Ev = comdat any

$_ZN6Cicada15IBufferedSerialD2Ev = comdat any

$_ZN6Cicada7ISerialD2Ev = comdat any

$_ZN6Cicada11ICommDeviceD2Ev = comdat any

$_ZN6Cicada15IBufferedSerialC2Ev = comdat any

$_ZN6Cicada18LineCircularBufferC2EPcy = comdat any

$_ZN6Cicada14CircularBufferIcEC2EPcy = comdat any

$_ZN6Cicada18LineCircularBufferD0Ev = comdat any

$_ZN6Cicada18LineCircularBuffer4pushEPKcy = comdat any

$_ZN6Cicada18LineCircularBuffer4pullEPcy = comdat any

$_ZN6Cicada14CircularBufferIcE4readEv = comdat any

$_ZNK6Cicada14CircularBufferIcE7isEmptyEv = comdat any

$_ZNK6Cicada14CircularBufferIcE6isFullEv = comdat any

$_ZN6Cicada14CircularBufferIcED0Ev = comdat any

$_ZN6Cicada14CircularBufferIcE4pushEPKcy = comdat any

$_ZN6Cicada14CircularBufferIcE4pullEPcy = comdat any

$_ZN6Cicada11ICommDeviceC2Ev = comdat any

$_ZN6Cicada7ISerialC2Ev = comdat any

$_ZN6Cicada15IBufferedSerialD0Ev = comdat any

$_ZThn4_N6Cicada15IBufferedSerialD1Ev = comdat any

$_ZThn4_N6Cicada15IBufferedSerialD0Ev = comdat any

$_ZN6Cicada7ISerialD0Ev = comdat any

$_ZN6Cicada11ICommDeviceD0Ev = comdat any

$_ZTSN6Cicada15IBufferedSerialE = comdat any

$_ZTSN6Cicada11ICommDeviceE = comdat any

$_ZTIN6Cicada11ICommDeviceE = comdat any

$_ZTSN6Cicada7ISerialE = comdat any

$_ZTIN6Cicada7ISerialE = comdat any

$_ZTIN6Cicada15IBufferedSerialE = comdat any

$_ZTVN6Cicada15IBufferedSerialE = comdat any

$_ZTVN6Cicada11ICommDeviceE = comdat any

$_ZTVN6Cicada7ISerialE = comdat any

$_ZTVN6Cicada18LineCircularBufferE = comdat any

$_ZTSN6Cicada18LineCircularBufferE = comdat any

$_ZTSN6Cicada14CircularBufferIcEE = comdat any

$_ZTIN6Cicada14CircularBufferIcEE = comdat any

$_ZTIN6Cicada18LineCircularBufferE = comdat any

$_ZTVN6Cicada14CircularBufferIcEE = comdat any

@xStack = dso_local global [2048 x i32] zeroinitializer, align 4, !dbg !0
@xTaskBuffer = dso_local global %struct.xSTATIC_TCB zeroinitializer, align 4, !dbg !47
@.str = private unnamed_addr constant [5 x i8] c"AT\0D\0A\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"Sending command: %s\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"%d bytes written\0D\0A\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"%d bytes received\0D\0A\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"Received message: %s\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"serialTask\00", align 1
@_ZZ29vApplicationGetIdleTaskMemoryE12xIdleTaskTCB = internal global %struct.xSTATIC_TCB zeroinitializer, align 4, !dbg !76
@_ZZ29vApplicationGetIdleTaskMemoryE15uxIdleTaskStack = internal global [128 x i32] zeroinitializer, align 4, !dbg !91
@_ZZ17USART1_IRQHandlerE8instance = internal unnamed_addr global %"class.Cicada::Stm32Uart"* null, align 4, !dbg !96
@_ZGVZ17USART1_IRQHandlerE8instance = internal global i32 0, align 4
@_ZZ17USART2_IRQHandlerE8instance = internal unnamed_addr global %"class.Cicada::Stm32Uart"* null, align 4, !dbg !106
@_ZGVZ17USART2_IRQHandlerE8instance = internal global i32 0, align 4
@_ZZ8_putcharE6serial = internal unnamed_addr global %"class.Cicada::Stm32Uart"* null, align 4, !dbg !109
@_ftoa.pow10 = internal unnamed_addr constant [10 x double] [double 1.000000e+00, double 1.000000e+01, double 1.000000e+02, double 1.000000e+03, double 1.000000e+04, double 1.000000e+05, double 1.000000e+06, double 1.000000e+07, double 1.000000e+08, double 1.000000e+09], align 8, !dbg !200
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !262
@__const.HAL_RCC_GetSysClockFreq.aPLLMULFactorTable = private unnamed_addr constant [16 x i8] c"\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\10", align 1
@__const.HAL_RCC_GetSysClockFreq.aPredivFactorTable = private unnamed_addr constant [2 x i8] c"\01\02", align 1
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !327
@uwTickPrio = dso_local local_unnamed_addr global i32 16, align 4, !dbg !333
@uwTickFreq = dso_local local_unnamed_addr global i32 1, align 4, !dbg !448
@uwTick = dso_local global i32 0, align 4, !dbg !451
@ucMaxSysCallPriority = internal unnamed_addr global i8 0, align 1, !dbg !453
@ulMaxPRIGROUPValue = internal unnamed_addr global i32 0, align 4, !dbg !468
@uxCriticalNesting = internal unnamed_addr global i32 -1431655766, align 4, !dbg !470
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !325
@pxCurrentTCB = dso_local global %struct.tskTaskControlBlock* null, align 4, !dbg !472
@uxSchedulerSuspended = internal global i32 0, align 4, !dbg !534
@.str.27 = private unnamed_addr constant [5 x i8] c"IDLE\00", align 1
@xIdleTaskHandle = internal unnamed_addr global i8* null, align 4, !dbg !536
@xNextTaskUnblockTime = internal global i32 0, align 4, !dbg !538
@xSchedulerRunning = internal global i32 0, align 4, !dbg !541
@xTickCount = internal global i32 0, align 4, !dbg !544
@uxCurrentNumberOfTasks = internal global i32 0, align 4, !dbg !546
@xPendingReadyList = internal global %struct.xLIST zeroinitializer, align 4, !dbg !548
@uxTopReadyPriority = internal global i32 0, align 4, !dbg !550
@pxReadyTasksLists = internal global [7 x %struct.xLIST] zeroinitializer, align 4, !dbg !552
@xYieldPending = internal global i32 0, align 4, !dbg !557
@uxPendedTicks = internal global i32 0, align 4, !dbg !559
@pxDelayedTaskList = internal global %struct.xLIST* null, align 4, !dbg !561
@pxOverflowDelayedTaskList = internal global %struct.xLIST* null, align 4, !dbg !565
@xNumOfOverflows = internal global i32 0, align 4, !dbg !567
@uxTaskNumber = internal unnamed_addr global i32 0, align 4, !dbg !532
@xDelayedTaskList1 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !514
@xDelayedTaskList2 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !530
@_ZTVN6Cicada14BufferedSerialE = dso_local unnamed_addr constant { [17 x i8*], [12 x i8*] } { [17 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada14BufferedSerialE to i8*), i8* bitcast (%"class.Cicada::BufferedSerial"* (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerialD2Ev to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerialD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial14spaceAvailableEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial5writeEPKhy to i8*), i8* bitcast (i8 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial4readEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*)* @_ZN6Cicada14BufferedSerial5writeEPKh to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*, i8)* @_ZN6Cicada14BufferedSerial5writeEh to i8*), i8* bitcast (i1 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial11canReadLineEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial8readLineEPhy to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial14readBufferSizeEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial15writeBufferSizeEv to i8*)], [12 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada14BufferedSerialE to i8*), i8* bitcast (%"class.Cicada::BufferedSerial"* (%"class.Cicada::BufferedSerial"*)* @_ZThn4_N6Cicada14BufferedSerialD1Ev to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*)* @_ZThn4_N6Cicada14BufferedSerialD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 4
@_ZTSN6Cicada14BufferedSerialE = dso_local constant [26 x i8] c"N6Cicada14BufferedSerialE\00", align 1
@_ZTVN10__cxxabiv121__vmi_class_type_infoE = external dso_local global i8*
@_ZTSN6Cicada15IBufferedSerialE = linkonce_odr dso_local constant [27 x i8] c"N6Cicada15IBufferedSerialE\00", comdat, align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external dso_local global i8*
@_ZTSN6Cicada11ICommDeviceE = linkonce_odr dso_local constant [23 x i8] c"N6Cicada11ICommDeviceE\00", comdat, align 1
@_ZTIN6Cicada11ICommDeviceE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @_ZTSN6Cicada11ICommDeviceE, i32 0, i32 0) }, comdat, align 4
@_ZTSN6Cicada7ISerialE = linkonce_odr dso_local constant [18 x i8] c"N6Cicada7ISerialE\00", comdat, align 1
@_ZTIN6Cicada7ISerialE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZTSN6Cicada7ISerialE, i32 0, i32 0) }, comdat, align 4
@_ZTIN6Cicada15IBufferedSerialE = linkonce_odr dso_local constant { i8*, i8*, i32, i32, i8*, i32, i8*, i32 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @_ZTSN6Cicada15IBufferedSerialE, i32 0, i32 0), i32 0, i32 2, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada11ICommDeviceE to i8*), i32 2, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada7ISerialE to i8*), i32 1026 }, comdat, align 4
@_ZTVN6Cicada15IBufferedSerialE = linkonce_odr dso_local unnamed_addr constant { [17 x i8*], [12 x i8*] } { [17 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada15IBufferedSerialE to i8*), i8* bitcast (%"class.Cicada::IBufferedSerial"* (%"class.Cicada::IBufferedSerial"*)* @_ZN6Cicada15IBufferedSerialD2Ev to i8*), i8* bitcast (void (%"class.Cicada::IBufferedSerial"*)* @_ZN6Cicada15IBufferedSerialD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], [12 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada15IBufferedSerialE to i8*), i8* bitcast (%"class.Cicada::IBufferedSerial"* (%"class.Cicada::IBufferedSerial"*)* @_ZThn4_N6Cicada15IBufferedSerialD1Ev to i8*), i8* bitcast (void (%"class.Cicada::IBufferedSerial"*)* @_ZThn4_N6Cicada15IBufferedSerialD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada11ICommDeviceE = linkonce_odr dso_local unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada11ICommDeviceE to i8*), i8* bitcast (%"class.Cicada::ICommDevice"* (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada11ICommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada11ICommDeviceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada7ISerialE = linkonce_odr dso_local unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada7ISerialE to i8*), i8* bitcast (%"class.Cicada::ICommDevice"* (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada7ISerialD2Ev to i8*), i8* bitcast (void (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada7ISerialD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada18LineCircularBufferE = linkonce_odr dso_local unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada18LineCircularBufferE to i8*), i8* bitcast (%"class.Cicada::CircularBuffer"* (%"class.Cicada::CircularBuffer"*)* @_ZN6Cicada14CircularBufferIcED2Ev to i8*), i8* bitcast (void (%"class.Cicada::LineCircularBuffer"*)* @_ZN6Cicada18LineCircularBufferD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::LineCircularBuffer"*, i8*, i64)* @_ZN6Cicada18LineCircularBuffer4pushEPKcy to i8*), i8* bitcast (void (%"class.Cicada::LineCircularBuffer"*, i8)* @_ZN6Cicada18LineCircularBuffer4pushEc to i8*), i8* bitcast (i64 (%"class.Cicada::LineCircularBuffer"*, i8*, i64)* @_ZN6Cicada18LineCircularBuffer4pullEPcy to i8*), i8* bitcast (i8 (%"class.Cicada::LineCircularBuffer"*)* @_ZN6Cicada18LineCircularBuffer4pullEv to i8*), i8* bitcast (i8 (%"class.Cicada::CircularBuffer"*)* @_ZN6Cicada14CircularBufferIcE4readEv to i8*), i8* bitcast (void (%"class.Cicada::LineCircularBuffer"*)* @_ZN6Cicada18LineCircularBuffer5flushEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE7isEmptyEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE6isFullEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE4sizeEv to i8*)] }, comdat, align 4
@_ZTSN6Cicada18LineCircularBufferE = linkonce_odr dso_local constant [30 x i8] c"N6Cicada18LineCircularBufferE\00", comdat, align 1
@_ZTSN6Cicada14CircularBufferIcEE = linkonce_odr dso_local constant [29 x i8] c"N6Cicada14CircularBufferIcEE\00", comdat, align 1
@_ZTIN6Cicada14CircularBufferIcEE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN6Cicada14CircularBufferIcEE, i32 0, i32 0) }, comdat, align 4
@_ZTIN6Cicada18LineCircularBufferE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @_ZTSN6Cicada18LineCircularBufferE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada14CircularBufferIcEE to i8*) }, comdat, align 4
@_ZTVN6Cicada14CircularBufferIcEE = linkonce_odr dso_local unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada14CircularBufferIcEE to i8*), i8* bitcast (%"class.Cicada::CircularBuffer"* (%"class.Cicada::CircularBuffer"*)* @_ZN6Cicada14CircularBufferIcED2Ev to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer"*)* @_ZN6Cicada14CircularBufferIcED0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer"*, i8*, i64)* @_ZN6Cicada14CircularBufferIcE4pushEPKcy to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer"*, i8)* @_ZN6Cicada14CircularBufferIcE4pushEc to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer"*, i8*, i64)* @_ZN6Cicada14CircularBufferIcE4pullEPcy to i8*), i8* bitcast (i8 (%"class.Cicada::CircularBuffer"*)* @_ZN6Cicada14CircularBufferIcE4pullEv to i8*), i8* bitcast (i8 (%"class.Cicada::CircularBuffer"*)* @_ZN6Cicada14CircularBufferIcE4readEv to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer"*)* @_ZN6Cicada14CircularBufferIcE5flushEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE7isEmptyEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE6isFullEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE4sizeEv to i8*)] }, comdat, align 4
@_ZN6Cicada9Stm32Uart8instanceE = dso_local local_unnamed_addr global [4 x %"class.Cicada::Stm32Uart"*] zeroinitializer, align 4, !dbg !570
@_ZTVN6Cicada9Stm32UartE = dso_local unnamed_addr constant { [26 x i8*], [12 x i8*] } { [26 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada9Stm32UartE to i8*), i8* bitcast (%"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32UartD2Ev to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32UartD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial14spaceAvailableEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZNK6Cicada9Stm32Uart20writeBufferProcessedEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial5writeEPKhy to i8*), i8* bitcast (i8 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial4readEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*)* @_ZN6Cicada14BufferedSerial5writeEPKh to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*, i8)* @_ZN6Cicada14BufferedSerial5writeEh to i8*), i8* bitcast (i1 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial11canReadLineEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial8readLineEPhy to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial14readBufferSizeEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial15writeBufferSizeEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32Uart4openEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8)* @_ZN6Cicada9Stm32Uart4openEh to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32Uart6isOpenEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i32, i8)* @_ZN6Cicada9Stm32Uart15setSerialConfigEjh to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32Uart5closeEv to i8*), i8* bitcast (i8* (%"class.Cicada::Stm32Uart"*)* @_ZNK6Cicada9Stm32Uart8portNameEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8*)* @_ZN6Cicada9Stm32Uart7rawReadERh to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8)* @_ZN6Cicada9Stm32Uart8rawWriteEh to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32Uart13startTransmitEv to i8*)], [12 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada9Stm32UartE to i8*), i8* bitcast (%"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32UartD1Ev to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32UartD0Ev to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32Uart4openEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32Uart6isOpenEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i32, i8)* @_ZThn4_N6Cicada9Stm32Uart15setSerialConfigEjh to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32Uart5closeEv to i8*), i8* bitcast (i8* (%"class.Cicada::Stm32Uart"*)* @_ZThn4_NK6Cicada9Stm32Uart8portNameEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8*)* @_ZThn4_N6Cicada9Stm32Uart7rawReadERh to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8)* @_ZThn4_N6Cicada9Stm32Uart8rawWriteEh to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32Uart13startTransmitEv to i8*)] }, align 4
@_ZTVN10__cxxabiv120__si_class_type_infoE = external dso_local global i8*
@_ZTSN6Cicada9Stm32UartE = dso_local constant [20 x i8] c"N6Cicada9Stm32UartE\00", align 1
@_ZTIN6Cicada14BufferedSerialE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @_ZTSN6Cicada14BufferedSerialE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada15IBufferedSerialE to i8*) }, align 4
@_ZTIN6Cicada9Stm32UartE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTSN6Cicada9Stm32UartE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada14BufferedSerialE to i8*) }, align 4

@_ZN6Cicada9Stm32UartC1EPcS1_yyP13USART_TypeDefP12GPIO_TypeDeftt = dso_local unnamed_addr alias %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*, i8*, i8*, i64, i64, %struct.USART_TypeDef*, %struct.USART_TypeDef*, i16, i16), %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*, i8*, i8*, i64, i64, %struct.USART_TypeDef*, %struct.USART_TypeDef*, i16, i16)* @_ZN6Cicada9Stm32UartC2EPcS1_yyP13USART_TypeDefP12GPIO_TypeDeftt
@_ZN6Cicada9Stm32UartC1EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt = dso_local unnamed_addr alias %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*, i8*, i8*, i64, %struct.USART_TypeDef*, %struct.USART_TypeDef*, i16, i16), %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*, i8*, i8*, i64, %struct.USART_TypeDef*, %struct.USART_TypeDef*, i16, i16)* @_ZN6Cicada9Stm32UartC2EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt
@_ZN6Cicada9Stm32UartD1Ev = dso_local unnamed_addr alias %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*), %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32UartD2Ev

; Function Attrs: mustprogress noinline noreturn nounwind
define dso_local void @_Z10serialTaskPv(i8* nocapture readnone %0) #0 !dbg !1307 {
  %2 = alloca [1504 x i8], align 1
  %3 = alloca [1504 x i8], align 1
  %4 = alloca [1504 x i8], align 1
  %5 = alloca [1504 x i8], align 1
  %6 = alloca %"class.Cicada::Stm32Uart", align 8
  %7 = alloca %"class.Cicada::Stm32Uart", align 8
  %8 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata i8* undef, metadata !1311, metadata !DIExpression()), !dbg !1330
  call void @llvm.dbg.value(metadata i16 1504, metadata !1312, metadata !DIExpression()), !dbg !1330
  %9 = getelementptr inbounds [1504 x i8], [1504 x i8]* %2, i32 0, i32 0, !dbg !1331
  call void @llvm.lifetime.start.p0i8(i64 1504, i8* nonnull %9) #27, !dbg !1331
  call void @llvm.dbg.declare(metadata [1504 x i8]* %2, metadata !1314, metadata !DIExpression()), !dbg !1332
  %10 = getelementptr inbounds [1504 x i8], [1504 x i8]* %3, i32 0, i32 0, !dbg !1333
  call void @llvm.lifetime.start.p0i8(i64 1504, i8* nonnull %10) #27, !dbg !1333
  call void @llvm.dbg.declare(metadata [1504 x i8]* %3, metadata !1318, metadata !DIExpression()), !dbg !1334
  %11 = getelementptr inbounds [1504 x i8], [1504 x i8]* %4, i32 0, i32 0, !dbg !1335
  call void @llvm.lifetime.start.p0i8(i64 1504, i8* nonnull %11) #27, !dbg !1335
  call void @llvm.dbg.declare(metadata [1504 x i8]* %4, metadata !1319, metadata !DIExpression()), !dbg !1336
  %12 = getelementptr inbounds [1504 x i8], [1504 x i8]* %5, i32 0, i32 0, !dbg !1337
  call void @llvm.lifetime.start.p0i8(i64 1504, i8* nonnull %12) #27, !dbg !1337
  call void @llvm.dbg.declare(metadata [1504 x i8]* %5, metadata !1320, metadata !DIExpression()), !dbg !1338
  %13 = bitcast %"class.Cicada::Stm32Uart"* %6 to i8*, !dbg !1339
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %13) #27, !dbg !1339
  call void @llvm.dbg.declare(metadata %"class.Cicada::Stm32Uart"* %6, metadata !1321, metadata !DIExpression()), !dbg !1340
  %14 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartC1EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %6, i8* noundef nonnull %9, i8* noundef nonnull %10, i64 noundef 1504, %struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073809408 to %struct.USART_TypeDef*), i16 noundef zeroext 4, i16 noundef zeroext 8) #27, !dbg !1340
  %15 = bitcast %"class.Cicada::Stm32Uart"* %7 to i8*, !dbg !1341
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %15) #27, !dbg !1341
  call void @llvm.dbg.declare(metadata %"class.Cicada::Stm32Uart"* %7, metadata !1322, metadata !DIExpression()), !dbg !1342
  %16 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartC1EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %7, i8* noundef nonnull %11, i8* noundef nonnull %12, i64 noundef 1504, %struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073821696 to %struct.USART_TypeDef*), %struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073809408 to %struct.USART_TypeDef*), i16 noundef zeroext 512, i16 noundef zeroext 1024) #27, !dbg !1342
  %17 = call noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %6) #27, !dbg !1343
  %18 = call noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %7) #27, !dbg !1344
  %19 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %7, i32 0, i32 0
  %20 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  br label %21, !dbg !1345

21:                                               ; preds = %31, %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), metadata !1323, metadata !DIExpression()), !dbg !1346
  %22 = call i32 (i8*, ...) @printf_(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #27, !dbg !1347
  %23 = call noundef i64 @_ZN6Cicada14BufferedSerial5writeEPKh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %19, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #27, !dbg !1348
  %24 = trunc i64 %23 to i32, !dbg !1349
  call void @llvm.dbg.value(metadata i32 %24, metadata !1327, metadata !DIExpression()), !dbg !1346
  %25 = call i32 (i8*, ...) @printf_(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0), i32 noundef %24) #27, !dbg !1350
  %26 = call noundef i64 @_ZNK6Cicada14BufferedSerial14bytesAvailableEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %19) #27, !dbg !1351
  %27 = icmp eq i64 %26, 0, !dbg !1352
  br i1 %27, label %28, label %31, !dbg !1353

28:                                               ; preds = %21, %28
  call void @vTaskDelay(i32 noundef 100) #27, !dbg !1354
  %29 = call noundef i64 @_ZNK6Cicada14BufferedSerial14bytesAvailableEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %19) #27, !dbg !1351
  %30 = icmp eq i64 %29, 0, !dbg !1352
  br i1 %30, label %28, label %31, !dbg !1353, !llvm.loop !1356

31:                                               ; preds = %28, %21
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #27, !dbg !1360
  call void @llvm.dbg.declare(metadata [32 x i8]* %8, metadata !1328, metadata !DIExpression()), !dbg !1361
  %32 = call noundef i64 @_ZN6Cicada14BufferedSerial4readEPhy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %19, i8* noundef nonnull %20, i64 noundef 31) #27, !dbg !1362
  %33 = trunc i64 %32 to i32, !dbg !1363
  call void @llvm.dbg.value(metadata i32 %33, metadata !1329, metadata !DIExpression()), !dbg !1346
  %34 = call i32 (i8*, ...) @printf_(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i32 0, i32 0), i32 noundef %33) #27, !dbg !1364
  %35 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 %33, !dbg !1365
  store i8 0, i8* %35, align 1, !dbg !1366, !tbaa !1367
  %36 = call i32 (i8*, ...) @printf_(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i32 0, i32 0), i8* noundef nonnull %20) #27, !dbg !1370
  call void @vTaskDelay(i32 noundef 500) #27, !dbg !1371
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #27, !dbg !1372
  br label %21, !dbg !1373, !llvm.loop !1374
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: mustprogress noinline norecurse nounwind
define dso_local noundef i32 @main(i32 noundef %0, i8** nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !1377 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1382, metadata !DIExpression()), !dbg !1384
  call void @llvm.dbg.value(metadata i8** %1, metadata !1383, metadata !DIExpression()), !dbg !1384
  %3 = call i32 @HAL_Init() #27, !dbg !1385
  call fastcc void @_ZL18SystemClock_Configv(), !dbg !1386
  %4 = call i8* @xTaskCreateStatic(void (i8*)* noundef nonnull @_Z10serialTaskPv, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i32 0, i32 0), i32 noundef 2048, i8* noundef null, i32 noundef 0, i32* noundef getelementptr inbounds ([2048 x i32], [2048 x i32]* @xStack, i32 0, i32 0), %struct.xSTATIC_TCB* noundef nonnull @xTaskBuffer) #27, !dbg !1387
  call void @vTaskStartScheduler() #27, !dbg !1388
  ret i32 0, !dbg !1389
}

; Function Attrs: mustprogress noinline norecurse nounwind
define internal fastcc void @_ZL18SystemClock_Configv() unnamed_addr #3 !dbg !1390 {
  %1 = alloca %struct.RCC_OscInitTypeDef, align 4
  %2 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %3 = bitcast %struct.RCC_OscInitTypeDef* %1 to i8*, !dbg !1421
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #27, !dbg !1421
  call void @llvm.dbg.declare(metadata %struct.RCC_OscInitTypeDef* %1, metadata !1392, metadata !DIExpression()), !dbg !1422
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %3, i8 0, i32 40, i1 false), !dbg !1422
  %4 = bitcast %struct.RCC_ClkInitTypeDef* %2 to i8*, !dbg !1423
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #27, !dbg !1423
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %2, metadata !1412, metadata !DIExpression()), !dbg !1424
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(20) %4, i8 0, i32 20, i1 false), !dbg !1424
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 0, !dbg !1425
  store i32 2, i32* %5, align 4, !dbg !1426, !tbaa !1427
  %6 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 4, !dbg !1431
  store i32 1, i32* %6, align 4, !dbg !1432, !tbaa !1433
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 5, !dbg !1434
  store i32 16, i32* %7, align 4, !dbg !1435, !tbaa !1436
  %8 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 7, i32 0, !dbg !1437
  store i32 2, i32* %8, align 4, !dbg !1438, !tbaa !1439
  %9 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 7, i32 1, !dbg !1440
  store i32 0, i32* %9, align 4, !dbg !1441, !tbaa !1442
  %10 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 7, i32 2, !dbg !1443
  store i32 3670016, i32* %10, align 4, !dbg !1444, !tbaa !1445
  %11 = call i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef nonnull %1) #27, !dbg !1446
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 0, !dbg !1447
  store i32 15, i32* %12, align 4, !dbg !1448, !tbaa !1449
  %13 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 1, !dbg !1451
  store i32 2, i32* %13, align 4, !dbg !1452, !tbaa !1453
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 2, !dbg !1454
  store i32 0, i32* %14, align 4, !dbg !1455, !tbaa !1456
  %15 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 3, !dbg !1457
  store i32 1024, i32* %15, align 4, !dbg !1458, !tbaa !1459
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 4, !dbg !1460
  store i32 0, i32* %16, align 4, !dbg !1461, !tbaa !1462
  %17 = call i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef nonnull %2, i32 noundef 2) #27, !dbg !1463
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #27, !dbg !1464
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #27, !dbg !1464
  ret void, !dbg !1464
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local void @vApplicationGetIdleTaskMemory(%struct.xSTATIC_TCB** nocapture noundef writeonly %0, i32** nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #5 !dbg !78 {
  call void @llvm.dbg.value(metadata %struct.xSTATIC_TCB** %0, metadata !88, metadata !DIExpression()), !dbg !1465
  call void @llvm.dbg.value(metadata i32** %1, metadata !89, metadata !DIExpression()), !dbg !1465
  call void @llvm.dbg.value(metadata i32* %2, metadata !90, metadata !DIExpression()), !dbg !1465
  store %struct.xSTATIC_TCB* @_ZZ29vApplicationGetIdleTaskMemoryE12xIdleTaskTCB, %struct.xSTATIC_TCB** %0, align 4, !dbg !1466, !tbaa !1467
  store i32* getelementptr inbounds ([128 x i32], [128 x i32]* @_ZZ29vApplicationGetIdleTaskMemoryE15uxIdleTaskStack, i32 0, i32 0), i32** %1, align 4, !dbg !1469, !tbaa !1467
  store i32 128, i32* %2, align 4, !dbg !1470, !tbaa !1471
  ret void, !dbg !1472
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @SysTick_Handler() local_unnamed_addr #6 !dbg !1473 {
  call void @HAL_IncTick() #27, !dbg !1474
  call void @xPortSysTickHandler() #27, !dbg !1475
  ret void, !dbg !1476
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @USART1_IRQHandler() local_unnamed_addr #6 !dbg !98 {
  %1 = load atomic i8, i8* bitcast (i32* @_ZGVZ17USART1_IRQHandlerE8instance to i8*) acquire, align 4, !dbg !1477
  %2 = and i8 %1, 1, !dbg !1477
  %3 = icmp eq i8 %2, 0, !dbg !1477
  br i1 %3, label %4, label %9, !dbg !1477, !prof !1478

4:                                                ; preds = %0
  %5 = call i32 @__cxa_guard_acquire(i32* nonnull @_ZGVZ17USART1_IRQHandlerE8instance) #27, !dbg !1477
  %6 = icmp eq i32 %5, 0, !dbg !1477
  br i1 %6, label %9, label %7, !dbg !1477

7:                                                ; preds = %4
  %8 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef(%struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073821696 to %struct.USART_TypeDef*)) #27, !dbg !1479
  store %"class.Cicada::Stm32Uart"* %8, %"class.Cicada::Stm32Uart"** @_ZZ17USART1_IRQHandlerE8instance, align 4, !dbg !1477, !tbaa !1467
  call void @__cxa_guard_release(i32* nonnull @_ZGVZ17USART1_IRQHandlerE8instance) #27, !dbg !1477
  br label %9, !dbg !1477

9:                                                ; preds = %7, %4, %0
  %10 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** @_ZZ17USART1_IRQHandlerE8instance, align 4, !dbg !1480, !tbaa !1467
  call void @_ZN6Cicada9Stm32Uart15handleInterruptEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %10) #27, !dbg !1481
  ret void, !dbg !1482
}

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_guard_acquire(i32*) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare dso_local void @__cxa_guard_release(i32*) local_unnamed_addr #7

; Function Attrs: mustprogress noinline nounwind
define dso_local void @USART2_IRQHandler() local_unnamed_addr #6 !dbg !108 {
  %1 = load atomic i8, i8* bitcast (i32* @_ZGVZ17USART2_IRQHandlerE8instance to i8*) acquire, align 4, !dbg !1483
  %2 = and i8 %1, 1, !dbg !1483
  %3 = icmp eq i8 %2, 0, !dbg !1483
  br i1 %3, label %4, label %9, !dbg !1483, !prof !1478

4:                                                ; preds = %0
  %5 = call i32 @__cxa_guard_acquire(i32* nonnull @_ZGVZ17USART2_IRQHandlerE8instance) #27, !dbg !1483
  %6 = icmp eq i32 %5, 0, !dbg !1483
  br i1 %6, label %9, label %7, !dbg !1483

7:                                                ; preds = %4
  %8 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef(%struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073759232 to %struct.USART_TypeDef*)) #27, !dbg !1484
  store %"class.Cicada::Stm32Uart"* %8, %"class.Cicada::Stm32Uart"** @_ZZ17USART2_IRQHandlerE8instance, align 4, !dbg !1483, !tbaa !1467
  call void @__cxa_guard_release(i32* nonnull @_ZGVZ17USART2_IRQHandlerE8instance) #27, !dbg !1483
  br label %9, !dbg !1483

9:                                                ; preds = %7, %4, %0
  %10 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** @_ZZ17USART2_IRQHandlerE8instance, align 4, !dbg !1485, !tbaa !1467
  call void @_ZN6Cicada9Stm32Uart15handleInterruptEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %10) #27, !dbg !1486
  ret void, !dbg !1487
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_putchar(i8 noundef zeroext %0) local_unnamed_addr #6 !dbg !111 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !116, metadata !DIExpression()), !dbg !1488
  %2 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** @_ZZ8_putcharE6serial, align 4, !dbg !1489, !tbaa !1467
  %3 = icmp eq %"class.Cicada::Stm32Uart"* %2, null, !dbg !1489
  br i1 %3, label %4, label %6, !dbg !1491

4:                                                ; preds = %1
  %5 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef(%struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073759232 to %struct.USART_TypeDef*)) #27, !dbg !1492
  store %"class.Cicada::Stm32Uart"* %5, %"class.Cicada::Stm32Uart"** @_ZZ8_putcharE6serial, align 4, !dbg !1494, !tbaa !1467
  br label %6, !dbg !1495

6:                                                ; preds = %4, %1
  %7 = load %"class.Cicada::BufferedSerial"*, %"class.Cicada::BufferedSerial"** bitcast (%"class.Cicada::Stm32Uart"** @_ZZ8_putcharE6serial to %"class.Cicada::BufferedSerial"**), align 4, !dbg !1496, !tbaa !1467
  %8 = bitcast %"class.Cicada::BufferedSerial"* %7 to void (%"class.Cicada::BufferedSerial"*, i8)***, !dbg !1497
  %9 = load void (%"class.Cicada::BufferedSerial"*, i8)**, void (%"class.Cicada::BufferedSerial"*, i8)*** %8, align 8, !dbg !1497, !tbaa !1498
  %10 = getelementptr inbounds void (%"class.Cicada::BufferedSerial"*, i8)*, void (%"class.Cicada::BufferedSerial"*, i8)** %9, i32 9, !dbg !1497
  %11 = load void (%"class.Cicada::BufferedSerial"*, i8)*, void (%"class.Cicada::BufferedSerial"*, i8)** %10, align 4, !dbg !1497
  call void %11(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %7, i8 noundef zeroext %0) #27, !dbg !1497
  ret void, !dbg !1500
}

; Function Attrs: noinline nounwind
define dso_local i32 @printf_(i8* noundef %0, ...) local_unnamed_addr #8 !dbg !1501 {
  %2 = alloca %struct.__va_list, align 4
  %3 = alloca [1 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !1505, metadata !DIExpression()), !dbg !1520
  %4 = bitcast %struct.__va_list* %2 to i8*, !dbg !1521
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #27, !dbg !1521
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !1506, metadata !DIExpression()), !dbg !1522
  call void @llvm.va_start(i8* nonnull %4), !dbg !1523
  %5 = getelementptr inbounds [1 x i8], [1 x i8]* %3, i32 0, i32 0, !dbg !1524
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #27, !dbg !1524
  call void @llvm.dbg.declare(metadata [1 x i8]* %3, metadata !1514, metadata !DIExpression()), !dbg !1525
  %6 = bitcast %struct.__va_list* %2 to i32*, !dbg !1526
  %7 = load i32, i32* %6, align 4, !dbg !1526
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !1526
  %9 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_char, i8* noundef nonnull %5, i32 noundef -1, i8* noundef %0, [1 x i32] %8), !dbg !1526
  call void @llvm.dbg.value(metadata i32 %9, metadata !1518, metadata !DIExpression()), !dbg !1520
  call void @llvm.va_end(i8* %4), !dbg !1527
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #27, !dbg !1528
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #27, !dbg !1528
  ret i32 %9, !dbg !1529
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #9

; Function Attrs: noinline nounwind
define internal void @_out_char(i8 noundef zeroext %0, i8* nocapture noundef readnone %1, i32 noundef %2, i32 noundef %3) #8 !dbg !1530 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !1532, metadata !DIExpression()), !dbg !1536
  call void @llvm.dbg.value(metadata i8* %1, metadata !1533, metadata !DIExpression()), !dbg !1536
  call void @llvm.dbg.value(metadata i32 %2, metadata !1534, metadata !DIExpression()), !dbg !1536
  call void @llvm.dbg.value(metadata i32 %3, metadata !1535, metadata !DIExpression()), !dbg !1536
  %5 = icmp eq i8 %0, 0, !dbg !1537
  br i1 %5, label %7, label %6, !dbg !1539

6:                                                ; preds = %4
  call void @_putchar(i8 noundef zeroext %0) #27, !dbg !1540
  br label %7, !dbg !1542

7:                                                ; preds = %6, %4
  ret void, !dbg !1543
}

; Function Attrs: noinline nounwind
define internal fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) unnamed_addr #8 !dbg !1544 {
  %6 = alloca i8*, align 4
  %7 = extractvalue [1 x i32] %4, 0
  %8 = inttoptr i32 %7 to i8*
  call void @llvm.dbg.value(metadata i8* %8, metadata !1552, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !1548, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i8* %1, metadata !1549, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i32 %2, metadata !1550, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i8* %3, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %3, i8** %6, align 4, !tbaa !1599
  call void @llvm.dbg.value(metadata i32 0, metadata !1557, metadata !DIExpression()), !dbg !1598
  %9 = icmp eq i8* %1, null, !dbg !1603
  %10 = select i1 %9, void (i8, i8*, i32, i32)* @_out_null, void (i8, i8*, i32, i32)* %0, !dbg !1605
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %10, metadata !1548, metadata !DIExpression()), !dbg !1598
  br label %11, !dbg !1606

11:                                               ; preds = %354, %5
  %12 = phi i32 [ 0, %5 ], [ %355, %354 ]
  %13 = phi i8* [ %8, %5 ], [ %356, %354 ]
  br label %14, !dbg !1606

14:                                               ; preds = %11, %18
  %15 = phi i32 [ %19, %18 ], [ %12, %11 ], !dbg !1598
  call void @llvm.dbg.value(metadata i8* %13, metadata !1552, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i32 %15, metadata !1557, metadata !DIExpression()), !dbg !1598
  %16 = load i8*, i8** %6, align 4, !dbg !1607, !tbaa !1599
  call void @llvm.dbg.value(metadata i8* %16, metadata !1551, metadata !DIExpression()), !dbg !1598
  %17 = load i8, i8* %16, align 1, !dbg !1608, !tbaa !1609
  switch i8 %17, label %18 [
    i8 0, label %357
    i8 37, label %22
  ], !dbg !1606

18:                                               ; preds = %14
  %19 = add i32 %15, 1, !dbg !1610
  call void @llvm.dbg.value(metadata i32 %19, metadata !1557, metadata !DIExpression()), !dbg !1598
  call void %10(i8 noundef zeroext %17, i8* noundef %1, i32 noundef %15, i32 noundef %2) #27, !dbg !1613, !callees !1614
  %20 = load i8*, i8** %6, align 4, !dbg !1615, !tbaa !1599
  call void @llvm.dbg.value(metadata i8* %20, metadata !1551, metadata !DIExpression()), !dbg !1598
  %21 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !1615
  call void @llvm.dbg.value(metadata i8* %21, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %21, i8** %6, align 4, !dbg !1615, !tbaa !1599
  br label %14, !dbg !1616, !llvm.loop !1617

22:                                               ; preds = %14
  %23 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !1619
  call void @llvm.dbg.value(metadata i8* %23, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %23, i8** %6, align 4, !dbg !1619, !tbaa !1599
  call void @llvm.dbg.value(metadata i32 0, metadata !1553, metadata !DIExpression()), !dbg !1598
  br label %24, !dbg !1621

24:                                               ; preds = %43, %22
  %25 = phi i32 [ 0, %22 ], [ %45, %43 ], !dbg !1622
  call void @llvm.dbg.value(metadata i32 %25, metadata !1553, metadata !DIExpression()), !dbg !1598
  %26 = load i8*, i8** %6, align 4, !dbg !1623, !tbaa !1599
  call void @llvm.dbg.value(metadata i8* %26, metadata !1551, metadata !DIExpression()), !dbg !1598
  %27 = load i8, i8* %26, align 1, !dbg !1625, !tbaa !1609
  switch i8 %27, label %43 [
    i8 48, label %28
    i8 45, label %31
    i8 43, label %34
    i8 32, label %37
    i8 35, label %40
  ], !dbg !1626

28:                                               ; preds = %24
  %29 = or i32 %25, 1, !dbg !1627
  call void @llvm.dbg.value(metadata i32 %29, metadata !1553, metadata !DIExpression()), !dbg !1598
  %30 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !1629
  call void @llvm.dbg.value(metadata i8* %30, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %30, i8** %6, align 4, !dbg !1629, !tbaa !1599
  call void @llvm.dbg.value(metadata i32 1, metadata !1556, metadata !DIExpression()), !dbg !1598
  br label %43, !dbg !1630

31:                                               ; preds = %24
  %32 = or i32 %25, 2, !dbg !1631
  call void @llvm.dbg.value(metadata i32 %32, metadata !1553, metadata !DIExpression()), !dbg !1598
  %33 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !1632
  call void @llvm.dbg.value(metadata i8* %33, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %33, i8** %6, align 4, !dbg !1632, !tbaa !1599
  call void @llvm.dbg.value(metadata i32 1, metadata !1556, metadata !DIExpression()), !dbg !1598
  br label %43, !dbg !1633

34:                                               ; preds = %24
  %35 = or i32 %25, 4, !dbg !1634
  call void @llvm.dbg.value(metadata i32 %35, metadata !1553, metadata !DIExpression()), !dbg !1598
  %36 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !1635
  call void @llvm.dbg.value(metadata i8* %36, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %36, i8** %6, align 4, !dbg !1635, !tbaa !1599
  call void @llvm.dbg.value(metadata i32 1, metadata !1556, metadata !DIExpression()), !dbg !1598
  br label %43, !dbg !1636

37:                                               ; preds = %24
  %38 = or i32 %25, 8, !dbg !1637
  call void @llvm.dbg.value(metadata i32 %38, metadata !1553, metadata !DIExpression()), !dbg !1598
  %39 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !1638
  call void @llvm.dbg.value(metadata i8* %39, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %39, i8** %6, align 4, !dbg !1638, !tbaa !1599
  call void @llvm.dbg.value(metadata i32 1, metadata !1556, metadata !DIExpression()), !dbg !1598
  br label %43, !dbg !1639

40:                                               ; preds = %24
  %41 = or i32 %25, 16, !dbg !1640
  call void @llvm.dbg.value(metadata i32 %41, metadata !1553, metadata !DIExpression()), !dbg !1598
  %42 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !1641
  call void @llvm.dbg.value(metadata i8* %42, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %42, i8** %6, align 4, !dbg !1641, !tbaa !1599
  call void @llvm.dbg.value(metadata i32 1, metadata !1556, metadata !DIExpression()), !dbg !1598
  br label %43, !dbg !1642

43:                                               ; preds = %24, %28, %31, %34, %37, %40
  %44 = phi i1 [ false, %28 ], [ false, %31 ], [ false, %34 ], [ false, %37 ], [ false, %40 ], [ true, %24 ], !dbg !1643
  %45 = phi i32 [ %29, %28 ], [ %32, %31 ], [ %35, %34 ], [ %38, %37 ], [ %41, %40 ], [ %25, %24 ], !dbg !1644
  call void @llvm.dbg.value(metadata i32 %45, metadata !1553, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i32 undef, metadata !1556, metadata !DIExpression()), !dbg !1598
  br i1 %44, label %46, label %24, !dbg !1645, !llvm.loop !1646

46:                                               ; preds = %43
  call void @llvm.dbg.value(metadata i32 0, metadata !1554, metadata !DIExpression()), !dbg !1598
  %47 = load i8*, i8** %6, align 4, !dbg !1648, !tbaa !1599
  call void @llvm.dbg.value(metadata i8* %47, metadata !1551, metadata !DIExpression()), !dbg !1598
  %48 = load i8, i8* %47, align 1, !dbg !1649, !tbaa !1609
  %49 = call fastcc zeroext i1 @_is_digit(i8 noundef zeroext %48), !dbg !1650
  br i1 %49, label %50, label %52, !dbg !1651

50:                                               ; preds = %46
  call void @llvm.dbg.value(metadata i8** %6, metadata !1551, metadata !DIExpression(DW_OP_deref)), !dbg !1598
  %51 = call fastcc i32 @_atoi(i8** noundef nonnull %6), !dbg !1652
  call void @llvm.dbg.value(metadata i32 %51, metadata !1554, metadata !DIExpression()), !dbg !1598
  br label %64, !dbg !1654

52:                                               ; preds = %46
  call void @llvm.dbg.value(metadata i8* %47, metadata !1551, metadata !DIExpression()), !dbg !1598
  %53 = icmp eq i8 %48, 42, !dbg !1655
  br i1 %53, label %54, label %64, !dbg !1656

54:                                               ; preds = %52
  %55 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !1657
  call void @llvm.dbg.value(metadata i8* %55, metadata !1552, metadata !DIExpression()), !dbg !1598
  %56 = bitcast i8* %13 to i32*, !dbg !1657
  %57 = load i32, i32* %56, align 4, !dbg !1657
  call void @llvm.dbg.value(metadata i32 %57, metadata !1558, metadata !DIExpression()), !dbg !1658
  %58 = icmp slt i32 %57, 0, !dbg !1659
  %59 = or i32 %45, 2, !dbg !1661
  %60 = sub nsw i32 0, %57, !dbg !1661
  %61 = select i1 %58, i32 %60, i32 %57, !dbg !1661
  %62 = select i1 %58, i32 %59, i32 %45, !dbg !1661
  call void @llvm.dbg.value(metadata i32 %62, metadata !1553, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i32 %61, metadata !1554, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i8* %47, metadata !1551, metadata !DIExpression()), !dbg !1598
  %63 = getelementptr inbounds i8, i8* %47, i32 1, !dbg !1662
  call void @llvm.dbg.value(metadata i8* %63, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %63, i8** %6, align 4, !dbg !1662, !tbaa !1599
  br label %64, !dbg !1663

64:                                               ; preds = %52, %54, %50
  %65 = phi i32 [ %51, %50 ], [ %61, %54 ], [ 0, %52 ], !dbg !1644
  %66 = phi i32 [ %45, %50 ], [ %62, %54 ], [ %45, %52 ], !dbg !1644
  %67 = phi i8* [ %13, %50 ], [ %55, %54 ], [ %13, %52 ]
  call void @llvm.dbg.value(metadata i8* %67, metadata !1552, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i32 %66, metadata !1553, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i32 %65, metadata !1554, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i32 0, metadata !1555, metadata !DIExpression()), !dbg !1598
  %68 = load i8*, i8** %6, align 4, !dbg !1664, !tbaa !1599
  call void @llvm.dbg.value(metadata i8* %68, metadata !1551, metadata !DIExpression()), !dbg !1598
  %69 = load i8, i8* %68, align 1, !dbg !1665, !tbaa !1609
  %70 = icmp eq i8 %69, 46, !dbg !1666
  br i1 %70, label %71, label %87, !dbg !1667

71:                                               ; preds = %64
  %72 = or i32 %66, 1024, !dbg !1668
  call void @llvm.dbg.value(metadata i32 %72, metadata !1553, metadata !DIExpression()), !dbg !1598
  %73 = getelementptr inbounds i8, i8* %68, i32 1, !dbg !1669
  call void @llvm.dbg.value(metadata i8* %73, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %73, i8** %6, align 4, !dbg !1669, !tbaa !1599
  %74 = load i8, i8* %73, align 1, !dbg !1670, !tbaa !1609
  %75 = call fastcc zeroext i1 @_is_digit(i8 noundef zeroext %74), !dbg !1671
  br i1 %75, label %76, label %78, !dbg !1672

76:                                               ; preds = %71
  call void @llvm.dbg.value(metadata i8** %6, metadata !1551, metadata !DIExpression(DW_OP_deref)), !dbg !1598
  %77 = call fastcc i32 @_atoi(i8** noundef nonnull %6), !dbg !1673
  call void @llvm.dbg.value(metadata i32 %77, metadata !1555, metadata !DIExpression()), !dbg !1598
  br label %87, !dbg !1675

78:                                               ; preds = %71
  call void @llvm.dbg.value(metadata i8* %73, metadata !1551, metadata !DIExpression()), !dbg !1598
  %79 = icmp eq i8 %74, 42, !dbg !1676
  br i1 %79, label %80, label %87, !dbg !1677

80:                                               ; preds = %78
  %81 = getelementptr inbounds i8, i8* %67, i32 4, !dbg !1678
  call void @llvm.dbg.value(metadata i8* %81, metadata !1552, metadata !DIExpression()), !dbg !1598
  %82 = bitcast i8* %67 to i32*, !dbg !1678
  %83 = load i32, i32* %82, align 4, !dbg !1678
  call void @llvm.dbg.value(metadata i32 %83, metadata !1563, metadata !DIExpression()), !dbg !1679
  %84 = icmp sgt i32 %83, 0, !dbg !1680
  %85 = select i1 %84, i32 %83, i32 0, !dbg !1681
  call void @llvm.dbg.value(metadata i32 %85, metadata !1555, metadata !DIExpression()), !dbg !1598
  %86 = getelementptr inbounds i8, i8* %68, i32 2, !dbg !1682
  call void @llvm.dbg.value(metadata i8* %86, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %86, i8** %6, align 4, !dbg !1682, !tbaa !1599
  br label %87, !dbg !1683

87:                                               ; preds = %76, %80, %78, %64
  %88 = phi i32 [ %77, %76 ], [ %85, %80 ], [ 0, %78 ], [ 0, %64 ], !dbg !1644
  %89 = phi i32 [ %72, %76 ], [ %72, %80 ], [ %72, %78 ], [ %66, %64 ], !dbg !1644
  %90 = phi i8* [ %67, %76 ], [ %81, %80 ], [ %67, %78 ], [ %67, %64 ]
  call void @llvm.dbg.value(metadata i8* %90, metadata !1552, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i32 %89, metadata !1553, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i32 %88, metadata !1555, metadata !DIExpression()), !dbg !1598
  %91 = load i8*, i8** %6, align 4, !dbg !1684, !tbaa !1599
  call void @llvm.dbg.value(metadata i8* %91, metadata !1551, metadata !DIExpression()), !dbg !1598
  %92 = load i8, i8* %91, align 1, !dbg !1685, !tbaa !1609
  %93 = zext i8 %92 to i32, !dbg !1685
  %94 = add nsw i32 %93, -104, !dbg !1686
  %95 = call i32 @llvm.fshl.i32(i32 %94, i32 %94, i32 31), !dbg !1686
  switch i32 %95, label %121 [
    i32 2, label %96
    i32 0, label %104
    i32 6, label %112
    i32 1, label %115
    i32 9, label %118
  ], !dbg !1686

96:                                               ; preds = %87
  %97 = or i32 %89, 256, !dbg !1687
  call void @llvm.dbg.value(metadata i32 %97, metadata !1553, metadata !DIExpression()), !dbg !1598
  %98 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !1689
  call void @llvm.dbg.value(metadata i8* %98, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %98, i8** %6, align 4, !dbg !1689, !tbaa !1599
  %99 = load i8, i8* %98, align 1, !dbg !1690, !tbaa !1609
  %100 = icmp eq i8 %99, 108, !dbg !1692
  br i1 %100, label %101, label %121, !dbg !1693

101:                                              ; preds = %96
  %102 = or i32 %89, 768, !dbg !1694
  call void @llvm.dbg.value(metadata i32 %102, metadata !1553, metadata !DIExpression()), !dbg !1598
  %103 = getelementptr inbounds i8, i8* %91, i32 2, !dbg !1696
  call void @llvm.dbg.value(metadata i8* %103, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %103, i8** %6, align 4, !dbg !1696, !tbaa !1599
  br label %121, !dbg !1697

104:                                              ; preds = %87
  %105 = or i32 %89, 128, !dbg !1698
  call void @llvm.dbg.value(metadata i32 %105, metadata !1553, metadata !DIExpression()), !dbg !1598
  %106 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !1699
  call void @llvm.dbg.value(metadata i8* %106, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %106, i8** %6, align 4, !dbg !1699, !tbaa !1599
  %107 = load i8, i8* %106, align 1, !dbg !1700, !tbaa !1609
  %108 = icmp eq i8 %107, 104, !dbg !1702
  br i1 %108, label %109, label %121, !dbg !1703

109:                                              ; preds = %104
  %110 = or i32 %89, 192, !dbg !1704
  call void @llvm.dbg.value(metadata i32 %110, metadata !1553, metadata !DIExpression()), !dbg !1598
  %111 = getelementptr inbounds i8, i8* %91, i32 2, !dbg !1706
  call void @llvm.dbg.value(metadata i8* %111, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %111, i8** %6, align 4, !dbg !1706, !tbaa !1599
  br label %121, !dbg !1707

112:                                              ; preds = %87
  %113 = or i32 %89, 256, !dbg !1708
  call void @llvm.dbg.value(metadata i32 %113, metadata !1553, metadata !DIExpression()), !dbg !1598
  %114 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !1709
  call void @llvm.dbg.value(metadata i8* %114, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %114, i8** %6, align 4, !dbg !1709, !tbaa !1599
  br label %121, !dbg !1710

115:                                              ; preds = %87
  %116 = or i32 %89, 512, !dbg !1711
  call void @llvm.dbg.value(metadata i32 %116, metadata !1553, metadata !DIExpression()), !dbg !1598
  %117 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !1712
  call void @llvm.dbg.value(metadata i8* %117, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %117, i8** %6, align 4, !dbg !1712, !tbaa !1599
  br label %121, !dbg !1713

118:                                              ; preds = %87
  %119 = or i32 %89, 256, !dbg !1714
  call void @llvm.dbg.value(metadata i32 %119, metadata !1553, metadata !DIExpression()), !dbg !1598
  %120 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !1715
  call void @llvm.dbg.value(metadata i8* %120, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %120, i8** %6, align 4, !dbg !1715, !tbaa !1599
  br label %121, !dbg !1716

121:                                              ; preds = %87, %104, %109, %96, %101, %118, %115, %112
  %122 = phi i32 [ %89, %87 ], [ %119, %118 ], [ %116, %115 ], [ %113, %112 ], [ %110, %109 ], [ %105, %104 ], [ %102, %101 ], [ %97, %96 ], !dbg !1644
  call void @llvm.dbg.value(metadata i32 %122, metadata !1553, metadata !DIExpression()), !dbg !1598
  %123 = load i8*, i8** %6, align 4, !dbg !1717, !tbaa !1599
  call void @llvm.dbg.value(metadata i8* %123, metadata !1551, metadata !DIExpression()), !dbg !1598
  %124 = load i8, i8* %123, align 1, !dbg !1718, !tbaa !1609
  switch i8 %124, label %350 [
    i8 37, label %346
    i8 112, label %337
    i8 115, label %278
    i8 99, label %244
    i8 70, label %233
    i8 102, label %233
    i8 120, label %129
    i8 88, label %129
    i8 111, label %125
    i8 98, label %126
    i8 100, label %127
    i8 105, label %127
    i8 117, label %127
  ], !dbg !1719

125:                                              ; preds = %121
  call void @llvm.dbg.value(metadata i32 8, metadata !1569, metadata !DIExpression()), !dbg !1720
  br label %129, !dbg !1721

126:                                              ; preds = %121
  call void @llvm.dbg.value(metadata i32 2, metadata !1569, metadata !DIExpression()), !dbg !1720
  br label %129, !dbg !1725

127:                                              ; preds = %121, %121, %121
  call void @llvm.dbg.value(metadata i32 10, metadata !1569, metadata !DIExpression()), !dbg !1720
  %128 = and i32 %122, -17, !dbg !1728
  call void @llvm.dbg.value(metadata i32 %128, metadata !1553, metadata !DIExpression()), !dbg !1598
  br label %129

129:                                              ; preds = %121, %121, %125, %127, %126
  %130 = phi i32 [ 8, %125 ], [ 2, %126 ], [ 10, %127 ], [ 16, %121 ], [ 16, %121 ], !dbg !1730
  %131 = phi i32 [ %122, %125 ], [ %122, %126 ], [ %128, %127 ], [ %122, %121 ], [ %122, %121 ], !dbg !1644
  call void @llvm.dbg.value(metadata i32 %131, metadata !1553, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i32 %130, metadata !1569, metadata !DIExpression()), !dbg !1720
  call void @llvm.dbg.value(metadata i8* %123, metadata !1551, metadata !DIExpression()), !dbg !1598
  %132 = icmp eq i8 %124, 88, !dbg !1731
  %133 = or i32 %131, 32
  %134 = select i1 %132, i32 %133, i32 %131, !dbg !1733
  call void @llvm.dbg.value(metadata i32 %134, metadata !1553, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i8* %123, metadata !1551, metadata !DIExpression()), !dbg !1598
  switch i8 %124, label %135 [
    i8 105, label %137
    i8 100, label %137
  ], !dbg !1734

135:                                              ; preds = %129
  %136 = and i32 %134, -13, !dbg !1736
  call void @llvm.dbg.value(metadata i32 %136, metadata !1553, metadata !DIExpression()), !dbg !1598
  br label %137, !dbg !1738

137:                                              ; preds = %129, %129, %135
  %138 = phi i32 [ %136, %135 ], [ %134, %129 ], [ %134, %129 ], !dbg !1720
  call void @llvm.dbg.value(metadata i32 %138, metadata !1553, metadata !DIExpression()), !dbg !1598
  %139 = and i32 %138, 1024, !dbg !1739
  %140 = icmp eq i32 %139, 0, !dbg !1739
  %141 = and i32 %138, -2
  %142 = select i1 %140, i32 %138, i32 %141, !dbg !1741
  call void @llvm.dbg.value(metadata i32 %142, metadata !1553, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i8* %123, metadata !1551, metadata !DIExpression()), !dbg !1598
  switch i8 %124, label %189 [
    i8 105, label %143
    i8 100, label %143
  ], !dbg !1742

143:                                              ; preds = %137, %137
  %144 = and i32 %142, 512, !dbg !1743
  %145 = icmp eq i32 %144, 0, !dbg !1743
  br i1 %145, label %158, label %146, !dbg !1744

146:                                              ; preds = %143
  %147 = ptrtoint i8* %90 to i32, !dbg !1745
  %148 = add i32 %147, 7, !dbg !1745
  %149 = and i32 %148, -8, !dbg !1745
  %150 = inttoptr i32 %149 to i8*, !dbg !1745
  %151 = getelementptr inbounds i8, i8* %150, i32 8, !dbg !1745
  call void @llvm.dbg.value(metadata i8* %151, metadata !1552, metadata !DIExpression()), !dbg !1598
  %152 = inttoptr i32 %149 to i64*, !dbg !1745
  %153 = load i64, i64* %152, align 8, !dbg !1745
  call void @llvm.dbg.value(metadata i64 %153, metadata !1572, metadata !DIExpression()), !dbg !1746
  %154 = call i64 @llvm.abs.i64(i64 %153, i1 true), !dbg !1747
  %155 = icmp slt i64 %153, 0, !dbg !1748
  %156 = zext i32 %130 to i64, !dbg !1749
  %157 = call fastcc i32 @_ntoa_long_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i64 noundef %154, i1 noundef zeroext %155, i64 noundef %156, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !1750
  call void @llvm.dbg.value(metadata i32 %157, metadata !1557, metadata !DIExpression()), !dbg !1598
  br label %228, !dbg !1751

158:                                              ; preds = %143
  %159 = and i32 %142, 256, !dbg !1752
  %160 = icmp eq i32 %159, 0, !dbg !1752
  br i1 %160, label %168, label %161, !dbg !1753

161:                                              ; preds = %158
  %162 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !1754
  call void @llvm.dbg.value(metadata i8* %162, metadata !1552, metadata !DIExpression()), !dbg !1598
  %163 = bitcast i8* %90 to i32*, !dbg !1754
  %164 = load i32, i32* %163, align 4, !dbg !1754
  call void @llvm.dbg.value(metadata i32 %164, metadata !1578, metadata !DIExpression()), !dbg !1755
  %165 = call i32 @llvm.abs.i32(i32 %164, i1 true), !dbg !1756
  %166 = icmp slt i32 %164, 0, !dbg !1757
  %167 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %165, i1 noundef zeroext %166, i32 noundef %130, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !1758
  call void @llvm.dbg.value(metadata i32 %167, metadata !1557, metadata !DIExpression()), !dbg !1598
  br label %228, !dbg !1759

168:                                              ; preds = %158
  %169 = and i32 %142, 64, !dbg !1760
  %170 = icmp eq i32 %169, 0, !dbg !1760
  br i1 %170, label %175, label %171, !dbg !1761

171:                                              ; preds = %168
  call void @llvm.dbg.value(metadata i8* %90, metadata !1552, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !1598
  %172 = bitcast i8* %90 to i32*, !dbg !1762
  %173 = load i32, i32* %172, align 4, !dbg !1762
  %174 = and i32 %173, 255, !dbg !1763
  br label %183, !dbg !1761

175:                                              ; preds = %168
  %176 = and i32 %142, 128, !dbg !1764
  %177 = icmp eq i32 %176, 0, !dbg !1764
  call void @llvm.dbg.value(metadata i8* %90, metadata !1552, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !1598
  call void @llvm.dbg.value(metadata i8* %90, metadata !1552, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !1598
  %178 = bitcast i8* %90 to i32*, !dbg !1765
  %179 = load i32, i32* %178, align 4, !dbg !1765
  br i1 %177, label %183, label %180, !dbg !1766

180:                                              ; preds = %175
  %181 = shl i32 %179, 16, !dbg !1767
  %182 = ashr exact i32 %181, 16, !dbg !1767
  br label %183, !dbg !1766

183:                                              ; preds = %175, %180, %171
  %184 = phi i32 [ %174, %171 ], [ %182, %180 ], [ %179, %175 ], !dbg !1761
  %185 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !1765
  call void @llvm.dbg.value(metadata i8* %185, metadata !1552, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i32 %184, metadata !1582, metadata !DIExpression()), !dbg !1765
  %186 = call i32 @llvm.abs.i32(i32 %184, i1 true), !dbg !1768
  %187 = icmp slt i32 %184, 0, !dbg !1769
  %188 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %186, i1 noundef zeroext %187, i32 noundef %130, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !1770
  call void @llvm.dbg.value(metadata i32 %188, metadata !1557, metadata !DIExpression()), !dbg !1598
  br label %228

189:                                              ; preds = %137
  %190 = and i32 %142, 512, !dbg !1771
  %191 = icmp eq i32 %190, 0, !dbg !1771
  br i1 %191, label %202, label %192, !dbg !1772

192:                                              ; preds = %189
  %193 = ptrtoint i8* %90 to i32, !dbg !1773
  %194 = add i32 %193, 7, !dbg !1773
  %195 = and i32 %194, -8, !dbg !1773
  %196 = inttoptr i32 %195 to i8*, !dbg !1773
  %197 = getelementptr inbounds i8, i8* %196, i32 8, !dbg !1773
  call void @llvm.dbg.value(metadata i8* %197, metadata !1552, metadata !DIExpression()), !dbg !1598
  %198 = inttoptr i32 %195 to i64*, !dbg !1773
  %199 = load i64, i64* %198, align 8, !dbg !1773
  %200 = zext i32 %130 to i64, !dbg !1775
  %201 = call fastcc i32 @_ntoa_long_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i64 noundef %199, i1 noundef zeroext false, i64 noundef %200, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !1776
  call void @llvm.dbg.value(metadata i32 %201, metadata !1557, metadata !DIExpression()), !dbg !1598
  br label %228, !dbg !1777

202:                                              ; preds = %189
  %203 = and i32 %142, 256, !dbg !1778
  %204 = icmp eq i32 %203, 0, !dbg !1778
  br i1 %204, label %210, label %205, !dbg !1779

205:                                              ; preds = %202
  %206 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !1780
  call void @llvm.dbg.value(metadata i8* %206, metadata !1552, metadata !DIExpression()), !dbg !1598
  %207 = bitcast i8* %90 to i32*, !dbg !1780
  %208 = load i32, i32* %207, align 4, !dbg !1780
  %209 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %208, i1 noundef zeroext false, i32 noundef %130, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !1782
  call void @llvm.dbg.value(metadata i32 %209, metadata !1557, metadata !DIExpression()), !dbg !1598
  br label %228, !dbg !1783

210:                                              ; preds = %202
  %211 = and i32 %142, 64, !dbg !1784
  %212 = icmp eq i32 %211, 0, !dbg !1784
  br i1 %212, label %217, label %213, !dbg !1785

213:                                              ; preds = %210
  call void @llvm.dbg.value(metadata i8* %90, metadata !1552, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !1598
  %214 = bitcast i8* %90 to i32*, !dbg !1786
  %215 = load i32, i32* %214, align 4, !dbg !1786
  %216 = and i32 %215, 255, !dbg !1787
  br label %224, !dbg !1785

217:                                              ; preds = %210
  %218 = and i32 %142, 128, !dbg !1788
  %219 = icmp eq i32 %218, 0, !dbg !1788
  call void @llvm.dbg.value(metadata i8* %90, metadata !1552, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !1598
  call void @llvm.dbg.value(metadata i8* %90, metadata !1552, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !1598
  %220 = bitcast i8* %90 to i32*, !dbg !1789
  %221 = load i32, i32* %220, align 4, !dbg !1789
  %222 = and i32 %221, 65535
  %223 = select i1 %219, i32 %221, i32 %222, !dbg !1790
  br label %224, !dbg !1790

224:                                              ; preds = %217, %213
  %225 = phi i32 [ %216, %213 ], [ %223, %217 ], !dbg !1785
  %226 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !1789
  call void @llvm.dbg.value(metadata i8* %226, metadata !1552, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i32 %225, metadata !1584, metadata !DIExpression()), !dbg !1789
  %227 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %225, i1 noundef zeroext false, i32 noundef %130, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !1791
  call void @llvm.dbg.value(metadata i32 %227, metadata !1557, metadata !DIExpression()), !dbg !1598
  br label %228

228:                                              ; preds = %192, %224, %205, %146, %183, %161
  %229 = phi i32 [ %157, %146 ], [ %167, %161 ], [ %188, %183 ], [ %201, %192 ], [ %209, %205 ], [ %227, %224 ], !dbg !1792
  %230 = phi i8* [ %151, %146 ], [ %162, %161 ], [ %185, %183 ], [ %197, %192 ], [ %206, %205 ], [ %226, %224 ], !dbg !1792
  call void @llvm.dbg.value(metadata i8* %230, metadata !1552, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i32 %229, metadata !1557, metadata !DIExpression()), !dbg !1598
  %231 = load i8*, i8** %6, align 4, !dbg !1793, !tbaa !1599
  call void @llvm.dbg.value(metadata i8* %231, metadata !1551, metadata !DIExpression()), !dbg !1598
  %232 = getelementptr inbounds i8, i8* %231, i32 1, !dbg !1793
  call void @llvm.dbg.value(metadata i8* %232, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %232, i8** %6, align 4, !dbg !1793, !tbaa !1599
  br label %354

233:                                              ; preds = %121, %121
  %234 = ptrtoint i8* %90 to i32, !dbg !1794
  %235 = add i32 %234, 7, !dbg !1794
  %236 = and i32 %235, -8, !dbg !1794
  %237 = inttoptr i32 %236 to i8*, !dbg !1794
  %238 = getelementptr inbounds i8, i8* %237, i32 8, !dbg !1794
  call void @llvm.dbg.value(metadata i8* %238, metadata !1552, metadata !DIExpression()), !dbg !1598
  %239 = inttoptr i32 %236 to double*, !dbg !1794
  %240 = load double, double* %239, align 8, !dbg !1794
  %241 = call fastcc i32 @_ftoa(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, double noundef %240, i32 noundef %88, i32 noundef %65, i32 noundef %122), !dbg !1795
  call void @llvm.dbg.value(metadata i32 %241, metadata !1557, metadata !DIExpression()), !dbg !1598
  %242 = load i8*, i8** %6, align 4, !dbg !1796, !tbaa !1599
  call void @llvm.dbg.value(metadata i8* %242, metadata !1551, metadata !DIExpression()), !dbg !1598
  %243 = getelementptr inbounds i8, i8* %242, i32 1, !dbg !1796
  call void @llvm.dbg.value(metadata i8* %243, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %243, i8** %6, align 4, !dbg !1796, !tbaa !1599
  br label %354, !dbg !1797

244:                                              ; preds = %121
  call void @llvm.dbg.value(metadata i32 1, metadata !1590, metadata !DIExpression()), !dbg !1798
  %245 = and i32 %122, 2, !dbg !1799
  %246 = icmp eq i32 %245, 0, !dbg !1799
  br i1 %246, label %247, label %257, !dbg !1801

247:                                              ; preds = %244
  call void @llvm.dbg.value(metadata i32 1, metadata !1590, metadata !DIExpression()), !dbg !1798
  call void @llvm.dbg.value(metadata i32 %15, metadata !1557, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i32 2, metadata !1590, metadata !DIExpression()), !dbg !1798
  %248 = icmp ugt i32 %65, 1, !dbg !1802
  br i1 %248, label %249, label %257, !dbg !1804

249:                                              ; preds = %247
  %250 = add i32 %65, 1, !dbg !1804
  br label %251, !dbg !1804

251:                                              ; preds = %249, %251
  %252 = phi i32 [ %255, %251 ], [ 2, %249 ]
  %253 = phi i32 [ %254, %251 ], [ %15, %249 ]
  call void @llvm.dbg.value(metadata i32 %253, metadata !1557, metadata !DIExpression()), !dbg !1598
  %254 = add i32 %253, 1, !dbg !1805
  call void @llvm.dbg.value(metadata i32 %254, metadata !1557, metadata !DIExpression()), !dbg !1598
  call void %10(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %253, i32 noundef %2) #27, !dbg !1807, !callees !1614
  call void @llvm.dbg.value(metadata i32 %252, metadata !1590, metadata !DIExpression()), !dbg !1798
  %255 = add i32 %252, 1, !dbg !1808
  call void @llvm.dbg.value(metadata i32 %255, metadata !1590, metadata !DIExpression()), !dbg !1798
  %256 = icmp eq i32 %252, %65, !dbg !1802
  br i1 %256, label %257, label %251, !dbg !1804, !llvm.loop !1809

257:                                              ; preds = %251, %247, %244
  %258 = phi i32 [ %15, %244 ], [ %15, %247 ], [ %254, %251 ], !dbg !1811
  %259 = phi i32 [ 1, %244 ], [ 2, %247 ], [ %250, %251 ], !dbg !1798
  call void @llvm.dbg.value(metadata i32 %259, metadata !1590, metadata !DIExpression()), !dbg !1798
  call void @llvm.dbg.value(metadata i32 %258, metadata !1557, metadata !DIExpression()), !dbg !1598
  %260 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !1812
  call void @llvm.dbg.value(metadata i8* %260, metadata !1552, metadata !DIExpression()), !dbg !1598
  %261 = bitcast i8* %90 to i32*, !dbg !1812
  %262 = load i32, i32* %261, align 4, !dbg !1812
  %263 = trunc i32 %262 to i8, !dbg !1813
  %264 = add i32 %258, 1, !dbg !1814
  call void @llvm.dbg.value(metadata i32 %264, metadata !1557, metadata !DIExpression()), !dbg !1598
  call void %10(i8 noundef zeroext %263, i8* noundef %1, i32 noundef %258, i32 noundef %2) #27, !dbg !1815, !callees !1614
  %265 = xor i1 %246, true, !dbg !1816
  %266 = icmp ult i32 %259, %65
  %267 = select i1 %265, i1 %266, i1 false, !dbg !1816
  call void @llvm.dbg.value(metadata i32 %259, metadata !1590, metadata !DIExpression()), !dbg !1798
  call void @llvm.dbg.value(metadata i32 %264, metadata !1557, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i32 %259, metadata !1590, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1798
  br i1 %267, label %268, label %274, !dbg !1816

268:                                              ; preds = %257, %268
  %269 = phi i32 [ %271, %268 ], [ %259, %257 ]
  %270 = phi i32 [ %272, %268 ], [ %264, %257 ]
  call void @llvm.dbg.value(metadata i32 %269, metadata !1590, metadata !DIExpression()), !dbg !1798
  call void @llvm.dbg.value(metadata i32 %270, metadata !1557, metadata !DIExpression()), !dbg !1598
  %271 = add nuw i32 %269, 1, !dbg !1817
  call void @llvm.dbg.value(metadata i32 %271, metadata !1590, metadata !DIExpression()), !dbg !1798
  %272 = add i32 %270, 1, !dbg !1820
  call void @llvm.dbg.value(metadata i32 %272, metadata !1557, metadata !DIExpression()), !dbg !1598
  call void %10(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %270, i32 noundef %2) #27, !dbg !1822, !callees !1614
  call void @llvm.dbg.value(metadata i32 %271, metadata !1590, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1798
  %273 = icmp eq i32 %271, %65, !dbg !1823
  br i1 %273, label %274, label %268, !dbg !1824, !llvm.loop !1825

274:                                              ; preds = %268, %257
  %275 = phi i32 [ %264, %257 ], [ %272, %268 ], !dbg !1814
  call void @llvm.dbg.value(metadata i32 %275, metadata !1557, metadata !DIExpression()), !dbg !1598
  %276 = load i8*, i8** %6, align 4, !dbg !1827, !tbaa !1599
  call void @llvm.dbg.value(metadata i8* %276, metadata !1551, metadata !DIExpression()), !dbg !1598
  %277 = getelementptr inbounds i8, i8* %276, i32 1, !dbg !1827
  call void @llvm.dbg.value(metadata i8* %277, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %277, i8** %6, align 4, !dbg !1827, !tbaa !1599
  br label %354

278:                                              ; preds = %121
  %279 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !1828
  call void @llvm.dbg.value(metadata i8* %279, metadata !1552, metadata !DIExpression()), !dbg !1598
  %280 = bitcast i8* %90 to i8**, !dbg !1828
  %281 = load i8*, i8** %280, align 4, !dbg !1828
  call void @llvm.dbg.value(metadata i8* %281, metadata !1592, metadata !DIExpression()), !dbg !1829
  %282 = icmp eq i32 %88, 0, !dbg !1830
  %283 = select i1 %282, i32 -1, i32 %88, !dbg !1830
  %284 = call fastcc i32 @_strnlen_s(i8* noundef %281, i32 noundef %283), !dbg !1831
  call void @llvm.dbg.value(metadata i32 %284, metadata !1594, metadata !DIExpression()), !dbg !1829
  %285 = and i32 %122, 1024, !dbg !1832
  %286 = icmp eq i32 %285, 0, !dbg !1832
  %287 = icmp ult i32 %284, %88, !dbg !1834
  %288 = select i1 %286, i1 true, i1 %287, !dbg !1834
  %289 = select i1 %288, i32 %284, i32 %88, !dbg !1834
  call void @llvm.dbg.value(metadata i32 %289, metadata !1594, metadata !DIExpression()), !dbg !1829
  %290 = and i32 %122, 2, !dbg !1835
  %291 = icmp eq i32 %290, 0, !dbg !1835
  br i1 %291, label %292, label %303, !dbg !1837

292:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 %289, metadata !1594, metadata !DIExpression()), !dbg !1829
  call void @llvm.dbg.value(metadata i32 %15, metadata !1557, metadata !DIExpression()), !dbg !1598
  %293 = add i32 %289, 1, !dbg !1838
  call void @llvm.dbg.value(metadata i32 %293, metadata !1594, metadata !DIExpression()), !dbg !1829
  %294 = icmp ult i32 %289, %65, !dbg !1840
  br i1 %294, label %295, label %303, !dbg !1841

295:                                              ; preds = %292
  %296 = add i32 %65, 1, !dbg !1841
  br label %297, !dbg !1841

297:                                              ; preds = %295, %297
  %298 = phi i32 [ %301, %297 ], [ %293, %295 ]
  %299 = phi i32 [ %300, %297 ], [ %15, %295 ]
  call void @llvm.dbg.value(metadata i32 %299, metadata !1557, metadata !DIExpression()), !dbg !1598
  %300 = add i32 %299, 1, !dbg !1842
  call void @llvm.dbg.value(metadata i32 %300, metadata !1557, metadata !DIExpression()), !dbg !1598
  call void %10(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %299, i32 noundef %2) #27, !dbg !1844, !callees !1614
  call void @llvm.dbg.value(metadata i32 %298, metadata !1594, metadata !DIExpression()), !dbg !1829
  %301 = add i32 %298, 1, !dbg !1838
  call void @llvm.dbg.value(metadata i32 %301, metadata !1594, metadata !DIExpression()), !dbg !1829
  %302 = icmp eq i32 %298, %65, !dbg !1840
  br i1 %302, label %303, label %297, !dbg !1841, !llvm.loop !1845

303:                                              ; preds = %297, %292, %278
  %304 = phi i32 [ %15, %278 ], [ %15, %292 ], [ %300, %297 ], !dbg !1811
  %305 = phi i32 [ %289, %278 ], [ %293, %292 ], [ %296, %297 ], !dbg !1829
  call void @llvm.dbg.value(metadata i32 %305, metadata !1594, metadata !DIExpression()), !dbg !1829
  call void @llvm.dbg.value(metadata i32 %304, metadata !1557, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i8* %281, metadata !1592, metadata !DIExpression()), !dbg !1829
  call void @llvm.dbg.value(metadata i32 %88, metadata !1555, metadata !DIExpression()), !dbg !1598
  %306 = load i8, i8* %281, align 1, !dbg !1847, !tbaa !1609
  %307 = icmp eq i8 %306, 0, !dbg !1848
  br i1 %307, label %322, label %308, !dbg !1849

308:                                              ; preds = %303, %316
  %309 = phi i8 [ %320, %316 ], [ %306, %303 ]
  %310 = phi i8* [ %318, %316 ], [ %281, %303 ]
  %311 = phi i32 [ %317, %316 ], [ %88, %303 ]
  %312 = phi i32 [ %319, %316 ], [ %304, %303 ]
  call void @llvm.dbg.value(metadata i8* %310, metadata !1592, metadata !DIExpression()), !dbg !1829
  call void @llvm.dbg.value(metadata i32 %311, metadata !1555, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i32 %312, metadata !1557, metadata !DIExpression()), !dbg !1598
  br i1 %286, label %316, label %313, !dbg !1850

313:                                              ; preds = %308
  %314 = add i32 %311, -1, !dbg !1851
  call void @llvm.dbg.value(metadata i32 %314, metadata !1555, metadata !DIExpression()), !dbg !1598
  %315 = icmp eq i32 %311, 0, !dbg !1850
  br i1 %315, label %322, label %316, !dbg !1852

316:                                              ; preds = %308, %313
  %317 = phi i32 [ %314, %313 ], [ %311, %308 ], !dbg !1644
  call void @llvm.dbg.value(metadata i32 %317, metadata !1555, metadata !DIExpression()), !dbg !1598
  %318 = getelementptr inbounds i8, i8* %310, i32 1, !dbg !1853
  call void @llvm.dbg.value(metadata i8* %318, metadata !1592, metadata !DIExpression()), !dbg !1829
  %319 = add i32 %312, 1, !dbg !1855
  call void @llvm.dbg.value(metadata i32 %319, metadata !1557, metadata !DIExpression()), !dbg !1598
  call void %10(i8 noundef zeroext %309, i8* noundef %1, i32 noundef %312, i32 noundef %2) #27, !dbg !1856, !callees !1614
  %320 = load i8, i8* %318, align 1, !dbg !1847, !tbaa !1609
  %321 = icmp eq i8 %320, 0, !dbg !1848
  br i1 %321, label %322, label %308, !dbg !1849, !llvm.loop !1857

322:                                              ; preds = %313, %316, %303
  %323 = phi i32 [ %304, %303 ], [ %312, %313 ], [ %319, %316 ], !dbg !1598
  %324 = xor i1 %291, true, !dbg !1859
  %325 = icmp ult i32 %305, %65
  %326 = select i1 %324, i1 %325, i1 false, !dbg !1859
  call void @llvm.dbg.value(metadata i32 %305, metadata !1594, metadata !DIExpression()), !dbg !1829
  call void @llvm.dbg.value(metadata i32 %323, metadata !1557, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i32 %305, metadata !1594, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1829
  br i1 %326, label %327, label %333, !dbg !1859

327:                                              ; preds = %322, %327
  %328 = phi i32 [ %330, %327 ], [ %305, %322 ]
  %329 = phi i32 [ %331, %327 ], [ %323, %322 ]
  call void @llvm.dbg.value(metadata i32 %328, metadata !1594, metadata !DIExpression()), !dbg !1829
  call void @llvm.dbg.value(metadata i32 %329, metadata !1557, metadata !DIExpression()), !dbg !1598
  %330 = add nuw i32 %328, 1, !dbg !1860
  call void @llvm.dbg.value(metadata i32 %330, metadata !1594, metadata !DIExpression()), !dbg !1829
  %331 = add i32 %329, 1, !dbg !1863
  call void @llvm.dbg.value(metadata i32 %331, metadata !1557, metadata !DIExpression()), !dbg !1598
  call void %10(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %329, i32 noundef %2) #27, !dbg !1865, !callees !1614
  call void @llvm.dbg.value(metadata i32 %330, metadata !1594, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1829
  %332 = icmp eq i32 %330, %65, !dbg !1866
  br i1 %332, label %333, label %327, !dbg !1867, !llvm.loop !1868

333:                                              ; preds = %327, %322
  %334 = phi i32 [ %323, %322 ], [ %331, %327 ], !dbg !1811
  call void @llvm.dbg.value(metadata i32 %334, metadata !1557, metadata !DIExpression()), !dbg !1598
  %335 = load i8*, i8** %6, align 4, !dbg !1870, !tbaa !1599
  call void @llvm.dbg.value(metadata i8* %335, metadata !1551, metadata !DIExpression()), !dbg !1598
  %336 = getelementptr inbounds i8, i8* %335, i32 1, !dbg !1870
  call void @llvm.dbg.value(metadata i8* %336, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %336, i8** %6, align 4, !dbg !1870, !tbaa !1599
  br label %354

337:                                              ; preds = %121
  call void @llvm.dbg.value(metadata i32 8, metadata !1554, metadata !DIExpression()), !dbg !1598
  %338 = or i32 %122, 33, !dbg !1871
  call void @llvm.dbg.value(metadata i32 %338, metadata !1553, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i8 0, metadata !1595, metadata !DIExpression()), !dbg !1872
  %339 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !1873
  call void @llvm.dbg.value(metadata i8* %339, metadata !1552, metadata !DIExpression()), !dbg !1598
  %340 = bitcast i8* %90 to i8**, !dbg !1873
  %341 = load i8*, i8** %340, align 4, !dbg !1873
  %342 = ptrtoint i8* %341 to i32, !dbg !1876
  %343 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %342, i1 noundef zeroext false, i32 noundef 16, i32 noundef %88, i32 noundef 8, i32 noundef %338), !dbg !1877
  call void @llvm.dbg.value(metadata i32 %343, metadata !1557, metadata !DIExpression()), !dbg !1598
  %344 = load i8*, i8** %6, align 4, !dbg !1878, !tbaa !1599
  call void @llvm.dbg.value(metadata i8* %344, metadata !1551, metadata !DIExpression()), !dbg !1598
  %345 = getelementptr inbounds i8, i8* %344, i32 1, !dbg !1878
  call void @llvm.dbg.value(metadata i8* %345, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %345, i8** %6, align 4, !dbg !1878, !tbaa !1599
  br label %354

346:                                              ; preds = %121
  %347 = add i32 %15, 1, !dbg !1879
  call void @llvm.dbg.value(metadata i32 %347, metadata !1557, metadata !DIExpression()), !dbg !1598
  call void %10(i8 noundef zeroext 37, i8* noundef %1, i32 noundef %15, i32 noundef %2) #27, !dbg !1880, !callees !1614
  %348 = load i8*, i8** %6, align 4, !dbg !1881, !tbaa !1599
  call void @llvm.dbg.value(metadata i8* %348, metadata !1551, metadata !DIExpression()), !dbg !1598
  %349 = getelementptr inbounds i8, i8* %348, i32 1, !dbg !1881
  call void @llvm.dbg.value(metadata i8* %349, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %349, i8** %6, align 4, !dbg !1881, !tbaa !1599
  br label %354, !dbg !1882

350:                                              ; preds = %121
  %351 = add i32 %15, 1, !dbg !1883
  call void @llvm.dbg.value(metadata i32 %351, metadata !1557, metadata !DIExpression()), !dbg !1598
  call void %10(i8 noundef zeroext %124, i8* noundef %1, i32 noundef %15, i32 noundef %2) #27, !dbg !1884, !callees !1614
  %352 = load i8*, i8** %6, align 4, !dbg !1885, !tbaa !1599
  call void @llvm.dbg.value(metadata i8* %352, metadata !1551, metadata !DIExpression()), !dbg !1598
  %353 = getelementptr inbounds i8, i8* %352, i32 1, !dbg !1885
  call void @llvm.dbg.value(metadata i8* %353, metadata !1551, metadata !DIExpression()), !dbg !1598
  store i8* %353, i8** %6, align 4, !dbg !1885, !tbaa !1599
  br label %354, !dbg !1886

354:                                              ; preds = %350, %346, %337, %333, %274, %233, %228
  %355 = phi i32 [ %351, %350 ], [ %347, %346 ], [ %343, %337 ], [ %334, %333 ], [ %275, %274 ], [ %241, %233 ], [ %229, %228 ]
  %356 = phi i8* [ %90, %350 ], [ %90, %346 ], [ %339, %337 ], [ %279, %333 ], [ %260, %274 ], [ %238, %233 ], [ %230, %228 ]
  br label %11, !dbg !1606, !llvm.loop !1617

357:                                              ; preds = %14
  %358 = icmp ult i32 %15, %2, !dbg !1887
  %359 = add i32 %2, -1, !dbg !1888
  %360 = select i1 %358, i32 %15, i32 %359, !dbg !1888
  call void %10(i8 noundef zeroext 0, i8* noundef %1, i32 noundef %360, i32 noundef %2) #27, !dbg !1889, !callees !1614
  ret i32 %15, !dbg !1890
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #9

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define internal void @_out_null(i8 noundef zeroext %0, i8* nocapture noundef %1, i32 noundef %2, i32 noundef %3) #10 !dbg !1891 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !1893, metadata !DIExpression()), !dbg !1897
  call void @llvm.dbg.value(metadata i8* %1, metadata !1894, metadata !DIExpression()), !dbg !1897
  call void @llvm.dbg.value(metadata i32 %2, metadata !1895, metadata !DIExpression()), !dbg !1897
  call void @llvm.dbg.value(metadata i32 %3, metadata !1896, metadata !DIExpression()), !dbg !1897
  ret void, !dbg !1898
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define internal void @_out_buffer(i8 noundef zeroext %0, i8* nocapture noundef writeonly %1, i32 noundef %2, i32 noundef %3) #5 !dbg !1899 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !1901, metadata !DIExpression()), !dbg !1905
  call void @llvm.dbg.value(metadata i8* %1, metadata !1902, metadata !DIExpression()), !dbg !1905
  call void @llvm.dbg.value(metadata i32 %2, metadata !1903, metadata !DIExpression()), !dbg !1905
  call void @llvm.dbg.value(metadata i32 %3, metadata !1904, metadata !DIExpression()), !dbg !1905
  %5 = icmp ult i32 %2, %3, !dbg !1906
  br i1 %5, label %6, label %8, !dbg !1908

6:                                                ; preds = %4
  %7 = getelementptr inbounds i8, i8* %1, i32 %2, !dbg !1909
  store i8 %0, i8* %7, align 1, !dbg !1911, !tbaa !1609
  br label %8, !dbg !1912

8:                                                ; preds = %6, %4
  ret void, !dbg !1913
}

; Function Attrs: noinline nounwind
define internal void @_out_fct(i8 noundef zeroext %0, i8* nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #8 !dbg !1914 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !1916, metadata !DIExpression()), !dbg !1920
  call void @llvm.dbg.value(metadata i8* %1, metadata !1917, metadata !DIExpression()), !dbg !1920
  call void @llvm.dbg.value(metadata i32 %2, metadata !1918, metadata !DIExpression()), !dbg !1920
  call void @llvm.dbg.value(metadata i32 %3, metadata !1919, metadata !DIExpression()), !dbg !1920
  %5 = icmp eq i8 %0, 0, !dbg !1921
  br i1 %5, label %12, label %6, !dbg !1923

6:                                                ; preds = %4
  %7 = bitcast i8* %1 to void (i8, i8*)**, !dbg !1924
  %8 = load void (i8, i8*)*, void (i8, i8*)** %7, align 4, !dbg !1924, !tbaa !1926
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !1928
  %10 = bitcast i8* %9 to i8**, !dbg !1928
  %11 = load i8*, i8** %10, align 4, !dbg !1928, !tbaa !1929
  call void %8(i8 noundef zeroext %0, i8* noundef %11) #27, !dbg !1930
  br label %12, !dbg !1931

12:                                               ; preds = %6, %4
  ret void, !dbg !1932
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define internal fastcc zeroext i1 @_is_digit(i8 noundef zeroext %0) unnamed_addr #10 !dbg !1933 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !1937, metadata !DIExpression()), !dbg !1938
  %2 = add i8 %0, -48, !dbg !1939
  %3 = icmp ult i8 %2, 10, !dbg !1939
  ret i1 %3, !dbg !1940
}

; Function Attrs: nofree noinline norecurse nosync nounwind
define internal fastcc i32 @_atoi(i8** nocapture noundef %0) unnamed_addr #11 !dbg !1941 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !1946, metadata !DIExpression()), !dbg !1948
  call void @llvm.dbg.value(metadata i32 0, metadata !1947, metadata !DIExpression()), !dbg !1948
  %2 = load i8*, i8** %0, align 4, !dbg !1949, !tbaa !1599
  %3 = load i8, i8* %2, align 1, !dbg !1950, !tbaa !1609
  %4 = call fastcc zeroext i1 @_is_digit(i8 noundef zeroext %3), !dbg !1951
  br i1 %4, label %5, label %16, !dbg !1952

5:                                                ; preds = %1, %5
  %6 = phi i8* [ %9, %5 ], [ %2, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !1947, metadata !DIExpression()), !dbg !1948
  %8 = mul i32 %7, 10, !dbg !1953
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !1955
  store i8* %9, i8** %0, align 4, !dbg !1955, !tbaa !1599
  %10 = load i8, i8* %6, align 1, !dbg !1956, !tbaa !1609
  %11 = zext i8 %10 to i32, !dbg !1956
  %12 = add i32 %8, -48, !dbg !1957
  %13 = add i32 %12, %11, !dbg !1958
  call void @llvm.dbg.value(metadata i32 %13, metadata !1947, metadata !DIExpression()), !dbg !1948
  %14 = load i8, i8* %9, align 1, !dbg !1950, !tbaa !1609
  %15 = call fastcc zeroext i1 @_is_digit(i8 noundef zeroext %14), !dbg !1951
  br i1 %15, label %5, label %16, !dbg !1952, !llvm.loop !1959

16:                                               ; preds = %5, %1
  %17 = phi i32 [ 0, %1 ], [ %13, %5 ], !dbg !1948
  ret i32 %17, !dbg !1961
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.abs.i64(i64, i1 immarg) #1

; Function Attrs: noinline nounwind
define internal fastcc i32 @_ntoa_long_long(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i64 noundef %4, i1 noundef zeroext %5, i64 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %9) unnamed_addr #8 !dbg !1962 {
  %11 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !1966, metadata !DIExpression()), !dbg !1982
  call void @llvm.dbg.value(metadata i8* %1, metadata !1967, metadata !DIExpression()), !dbg !1982
  call void @llvm.dbg.value(metadata i32 %2, metadata !1968, metadata !DIExpression()), !dbg !1982
  call void @llvm.dbg.value(metadata i32 %3, metadata !1969, metadata !DIExpression()), !dbg !1982
  call void @llvm.dbg.value(metadata i64 %4, metadata !1970, metadata !DIExpression()), !dbg !1982
  call void @llvm.dbg.value(metadata i1 %5, metadata !1971, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !1982
  call void @llvm.dbg.value(metadata i64 %6, metadata !1972, metadata !DIExpression()), !dbg !1982
  call void @llvm.dbg.value(metadata i32 %7, metadata !1973, metadata !DIExpression()), !dbg !1982
  call void @llvm.dbg.value(metadata i32 %8, metadata !1974, metadata !DIExpression()), !dbg !1982
  call void @llvm.dbg.value(metadata i32 %9, metadata !1975, metadata !DIExpression()), !dbg !1982
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 0, !dbg !1983
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #27, !dbg !1983
  call void @llvm.dbg.declare(metadata [32 x i8]* %11, metadata !1976, metadata !DIExpression()), !dbg !1984
  call void @llvm.dbg.value(metadata i32 0, metadata !1977, metadata !DIExpression()), !dbg !1982
  %13 = icmp ne i64 %4, 0, !dbg !1985
  %14 = and i32 %9, -17
  %15 = select i1 %13, i32 %9, i32 %14, !dbg !1987
  call void @llvm.dbg.value(metadata i32 %15, metadata !1975, metadata !DIExpression()), !dbg !1982
  %16 = and i32 %15, 1024, !dbg !1988
  %17 = icmp eq i32 %16, 0, !dbg !1988
  %18 = or i1 %13, %17, !dbg !1989
  br i1 %18, label %19, label %41, !dbg !1989

19:                                               ; preds = %10
  %20 = and i32 %15, 32
  %21 = xor i32 %20, 97
  %22 = add nuw nsw i32 %21, 246
  br label %23, !dbg !1990

23:                                               ; preds = %19, %23
  %24 = phi i32 [ %36, %23 ], [ 0, %19 ], !dbg !1982
  %25 = phi i64 [ %27, %23 ], [ %4, %19 ]
  call void @llvm.dbg.value(metadata i64 %25, metadata !1970, metadata !DIExpression()), !dbg !1982
  call void @llvm.dbg.value(metadata i32 %24, metadata !1977, metadata !DIExpression()), !dbg !1982
  %26 = freeze i64 %25
  %27 = udiv i64 %26, %6, !dbg !1991
  %28 = mul i64 %27, %6
  %29 = sub i64 %26, %28
  %30 = trunc i64 %29 to i32, !dbg !1992
  %31 = and i32 %30, 254, !dbg !1993
  call void @llvm.dbg.value(metadata i32 %30, metadata !1978, metadata !DIExpression()), !dbg !1994
  %32 = icmp ult i32 %31, 10, !dbg !1995
  %33 = select i1 %32, i32 48, i32 %22, !dbg !1993
  %34 = add i32 %33, %30, !dbg !1993
  %35 = trunc i32 %34 to i8, !dbg !1993
  %36 = add nuw nsw i32 %24, 1, !dbg !1996
  call void @llvm.dbg.value(metadata i32 %36, metadata !1977, metadata !DIExpression()), !dbg !1982
  %37 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 %24, !dbg !1997
  store i8 %35, i8* %37, align 1, !dbg !1998, !tbaa !1609
  call void @llvm.dbg.value(metadata i64 %27, metadata !1970, metadata !DIExpression()), !dbg !1982
  %38 = icmp uge i64 %25, %6, !dbg !1999
  %39 = icmp ult i32 %24, 31, !dbg !2000
  %40 = select i1 %38, i1 %39, i1 false, !dbg !2000
  br i1 %40, label %23, label %41, !dbg !2001, !llvm.loop !2002

41:                                               ; preds = %23, %10
  %42 = phi i32 [ 0, %10 ], [ %36, %23 ], !dbg !1982
  call void @llvm.dbg.value(metadata i32 %42, metadata !1977, metadata !DIExpression()), !dbg !1982
  %43 = trunc i64 %6 to i32, !dbg !2004
  %44 = call fastcc i32 @_ntoa_format(void (i8, i8*, i32, i32)* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef nonnull %12, i32 noundef %42, i1 noundef zeroext %5, i32 noundef %43, i32 noundef %7, i32 noundef %8, i32 noundef %15), !dbg !2005
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #27, !dbg !2006
  ret i32 %44, !dbg !2007
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #1

; Function Attrs: noinline nounwind
define internal fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i1 noundef zeroext %5, i32 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %9) unnamed_addr #8 !dbg !2008 {
  %11 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !2012, metadata !DIExpression()), !dbg !2028
  call void @llvm.dbg.value(metadata i8* %1, metadata !2013, metadata !DIExpression()), !dbg !2028
  call void @llvm.dbg.value(metadata i32 %2, metadata !2014, metadata !DIExpression()), !dbg !2028
  call void @llvm.dbg.value(metadata i32 %3, metadata !2015, metadata !DIExpression()), !dbg !2028
  call void @llvm.dbg.value(metadata i32 %4, metadata !2016, metadata !DIExpression()), !dbg !2028
  call void @llvm.dbg.value(metadata i1 %5, metadata !2017, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2028
  call void @llvm.dbg.value(metadata i32 %6, metadata !2018, metadata !DIExpression()), !dbg !2028
  call void @llvm.dbg.value(metadata i32 %7, metadata !2019, metadata !DIExpression()), !dbg !2028
  call void @llvm.dbg.value(metadata i32 %8, metadata !2020, metadata !DIExpression()), !dbg !2028
  call void @llvm.dbg.value(metadata i32 %9, metadata !2021, metadata !DIExpression()), !dbg !2028
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 0, !dbg !2029
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #27, !dbg !2029
  call void @llvm.dbg.declare(metadata [32 x i8]* %11, metadata !2022, metadata !DIExpression()), !dbg !2030
  call void @llvm.dbg.value(metadata i32 0, metadata !2023, metadata !DIExpression()), !dbg !2028
  %13 = icmp ne i32 %4, 0, !dbg !2031
  %14 = and i32 %9, -17
  %15 = select i1 %13, i32 %9, i32 %14, !dbg !2033
  call void @llvm.dbg.value(metadata i32 %15, metadata !2021, metadata !DIExpression()), !dbg !2028
  %16 = and i32 %15, 1024, !dbg !2034
  %17 = icmp eq i32 %16, 0, !dbg !2034
  %18 = or i1 %13, %17, !dbg !2035
  br i1 %18, label %19, label %40, !dbg !2035

19:                                               ; preds = %10
  %20 = and i32 %15, 32
  %21 = xor i32 %20, 97
  %22 = add nuw nsw i32 %21, 246
  br label %23, !dbg !2036

23:                                               ; preds = %19, %23
  %24 = phi i32 [ %35, %23 ], [ 0, %19 ], !dbg !2028
  %25 = phi i32 [ %27, %23 ], [ %4, %19 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !2016, metadata !DIExpression()), !dbg !2028
  call void @llvm.dbg.value(metadata i32 %24, metadata !2023, metadata !DIExpression()), !dbg !2028
  %26 = freeze i32 %25
  %27 = udiv i32 %26, %6, !dbg !2037
  %28 = mul i32 %27, %6
  %29 = sub i32 %26, %28
  %30 = and i32 %29, 254, !dbg !2038
  call void @llvm.dbg.value(metadata i32 %29, metadata !2024, metadata !DIExpression()), !dbg !2039
  %31 = icmp ult i32 %30, 10, !dbg !2040
  %32 = select i1 %31, i32 48, i32 %22, !dbg !2038
  %33 = add i32 %29, %32, !dbg !2038
  %34 = trunc i32 %33 to i8, !dbg !2038
  %35 = add nuw nsw i32 %24, 1, !dbg !2041
  call void @llvm.dbg.value(metadata i32 %35, metadata !2023, metadata !DIExpression()), !dbg !2028
  %36 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 %24, !dbg !2042
  store i8 %34, i8* %36, align 1, !dbg !2043, !tbaa !1609
  call void @llvm.dbg.value(metadata i32 %27, metadata !2016, metadata !DIExpression()), !dbg !2028
  %37 = icmp uge i32 %25, %6, !dbg !2044
  %38 = icmp ult i32 %24, 31, !dbg !2045
  %39 = select i1 %37, i1 %38, i1 false, !dbg !2045
  br i1 %39, label %23, label %40, !dbg !2046, !llvm.loop !2047

40:                                               ; preds = %23, %10
  %41 = phi i32 [ 0, %10 ], [ %35, %23 ], !dbg !2028
  call void @llvm.dbg.value(metadata i32 %41, metadata !2023, metadata !DIExpression()), !dbg !2028
  %42 = call fastcc i32 @_ntoa_format(void (i8, i8*, i32, i32)* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef nonnull %12, i32 noundef %41, i1 noundef zeroext %5, i32 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %15), !dbg !2049
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #27, !dbg !2050
  ret i32 %42, !dbg !2051
}

; Function Attrs: noinline nounwind
define internal fastcc i32 @_ftoa(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, double noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7) unnamed_addr #8 !dbg !202 {
  %9 = alloca [32 x i8], align 1
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 0, !dbg !2052
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !227, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata i8* %1, metadata !228, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata i32 %2, metadata !229, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata i32 %3, metadata !230, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata double %4, metadata !231, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata i32 %5, metadata !232, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata i32 %6, metadata !233, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata i32 %7, metadata !234, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata i32 %2, metadata !235, metadata !DIExpression()), !dbg !2052
  %11 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 0, !dbg !2053
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #27, !dbg !2053
  call void @llvm.dbg.declare(metadata [32 x i8]* %9, metadata !237, metadata !DIExpression()), !dbg !2054
  call void @llvm.dbg.value(metadata i32 0, metadata !241, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !242, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata double 0x41DFFFFFFFC00000, metadata !243, metadata !DIExpression()), !dbg !2052
  %12 = fcmp uno double %4, 0.000000e+00, !dbg !2055
  br i1 %12, label %13, label %17, !dbg !2057

13:                                               ; preds = %8
  %14 = add i32 %2, 1, !dbg !2058
  call void @llvm.dbg.value(metadata i32 %14, metadata !229, metadata !DIExpression()), !dbg !2052
  call void %0(i8 noundef zeroext 110, i8* noundef %1, i32 noundef %2, i32 noundef %3) #27, !dbg !2060, !callees !1614
  %15 = add i32 %2, 2, !dbg !2061
  call void @llvm.dbg.value(metadata i32 %15, metadata !229, metadata !DIExpression()), !dbg !2052
  call void %0(i8 noundef zeroext 97, i8* noundef %1, i32 noundef %14, i32 noundef %3) #27, !dbg !2062, !callees !1614
  %16 = add i32 %2, 3, !dbg !2063
  call void @llvm.dbg.value(metadata i32 %16, metadata !229, metadata !DIExpression()), !dbg !2052
  call void %0(i8 noundef zeroext 110, i8* noundef %1, i32 noundef %15, i32 noundef %3) #27, !dbg !2064, !callees !1614
  br label %221, !dbg !2065

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i8 0, metadata !245, metadata !DIExpression()), !dbg !2052
  %18 = fcmp olt double %4, 0.000000e+00, !dbg !2066
  %19 = fsub double 0.000000e+00, %4, !dbg !2068
  %20 = select i1 %18, double %19, double %4, !dbg !2068
  call void @llvm.dbg.value(metadata i8 poison, metadata !245, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata double %20, metadata !231, metadata !DIExpression()), !dbg !2052
  %21 = and i32 %7, 1024, !dbg !2069
  %22 = icmp eq i32 %21, 0, !dbg !2069
  %23 = select i1 %22, i32 6, i32 %5, !dbg !2071
  call void @llvm.dbg.value(metadata i32 %23, metadata !232, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata i32 0, metadata !241, metadata !DIExpression()), !dbg !2052
  %24 = icmp ugt i32 %23, 9, !dbg !2072
  br i1 %24, label %25, label %39, !dbg !2073

25:                                               ; preds = %17
  %26 = add i32 %23, -10, !dbg !2073
  %27 = call i32 @llvm.umin.i32(i32 %26, i32 31), !dbg !2073
  %28 = add nuw nsw i32 %27, 1, !dbg !2073
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 %10, i8 48, i32 %28, i1 false), !dbg !2074, !tbaa !1609
  %29 = call i32 @llvm.umin.i32(i32 %26, i32 31), !dbg !2073
  %30 = add nuw nsw i32 %29, 1, !dbg !2073
  br label %31, !dbg !2073

31:                                               ; preds = %25, %31
  %32 = phi i32 [ %34, %31 ], [ 0, %25 ]
  %33 = phi i32 [ %35, %31 ], [ %23, %25 ]
  call void @llvm.dbg.value(metadata i32 %32, metadata !241, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata i32 %33, metadata !232, metadata !DIExpression()), !dbg !2052
  %34 = add nuw nsw i32 %32, 1, !dbg !2076
  call void @llvm.dbg.value(metadata i32 %34, metadata !241, metadata !DIExpression()), !dbg !2052
  %35 = add i32 %33, -1, !dbg !2077
  call void @llvm.dbg.value(metadata i32 %35, metadata !232, metadata !DIExpression()), !dbg !2052
  %36 = icmp eq i32 %32, %29, !dbg !2072
  br i1 %36, label %37, label %31, !dbg !2073, !llvm.loop !2078

37:                                               ; preds = %31
  %38 = icmp ult i32 %32, 31, !dbg !2080
  br label %39, !dbg !2081

39:                                               ; preds = %37, %17
  %40 = phi i32 [ %23, %17 ], [ %35, %37 ]
  %41 = phi i32 [ 0, %17 ], [ %30, %37 ], !dbg !2052
  %42 = phi i1 [ true, %17 ], [ %38, %37 ], !dbg !2080
  %43 = fptosi double %20 to i32, !dbg !2081
  call void @llvm.dbg.value(metadata i32 %43, metadata !247, metadata !DIExpression()), !dbg !2052
  %44 = sitofp i32 %43 to double, !dbg !2082
  %45 = fsub double %20, %44, !dbg !2083
  %46 = getelementptr inbounds [10 x double], [10 x double]* @_ftoa.pow10, i32 0, i32 %40, !dbg !2084
  %47 = load double, double* %46, align 8, !dbg !2084, !tbaa !2085
  %48 = fmul double %45, %47, !dbg !2087
  call void @llvm.dbg.value(metadata double %48, metadata !248, metadata !DIExpression()), !dbg !2052
  %49 = fptoui double %48 to i32, !dbg !2088
  call void @llvm.dbg.value(metadata i32 %49, metadata !249, metadata !DIExpression()), !dbg !2052
  %50 = uitofp i32 %49 to double, !dbg !2089
  %51 = fsub double %48, %50, !dbg !2090
  call void @llvm.dbg.value(metadata double %51, metadata !242, metadata !DIExpression()), !dbg !2052
  %52 = fcmp ogt double %51, 5.000000e-01, !dbg !2091
  br i1 %52, label %53, label %59, !dbg !2093

53:                                               ; preds = %39
  %54 = add i32 %49, 1, !dbg !2094
  call void @llvm.dbg.value(metadata i32 %54, metadata !249, metadata !DIExpression()), !dbg !2052
  %55 = uitofp i32 %54 to double, !dbg !2096
  %56 = fcmp ugt double %47, %55, !dbg !2098
  br i1 %56, label %68, label %57, !dbg !2099

57:                                               ; preds = %53
  call void @llvm.dbg.value(metadata i32 0, metadata !249, metadata !DIExpression()), !dbg !2052
  %58 = add nsw i32 %43, 1, !dbg !2100
  call void @llvm.dbg.value(metadata i32 %58, metadata !247, metadata !DIExpression()), !dbg !2052
  br label %68, !dbg !2102

59:                                               ; preds = %39
  %60 = fcmp olt double %51, 5.000000e-01, !dbg !2103
  br i1 %60, label %68, label %61, !dbg !2105

61:                                               ; preds = %59
  %62 = icmp eq i32 %49, 0, !dbg !2106
  %63 = and i32 %49, 1
  %64 = icmp ne i32 %63, 0
  %65 = or i1 %62, %64, !dbg !2108
  %66 = zext i1 %65 to i32, !dbg !2108
  %67 = add i32 %66, %49, !dbg !2108
  br label %68, !dbg !2108

68:                                               ; preds = %61, %59, %53, %57
  %69 = phi i32 [ %58, %57 ], [ %43, %53 ], [ %43, %59 ], [ %43, %61 ], !dbg !2052
  %70 = phi i32 [ 0, %57 ], [ %54, %53 ], [ %49, %59 ], [ %67, %61 ], !dbg !2052
  call void @llvm.dbg.value(metadata i32 %70, metadata !249, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata i32 %69, metadata !247, metadata !DIExpression()), !dbg !2052
  %71 = fcmp ogt double %20, 0x41DFFFFFFFC00000, !dbg !2109
  br i1 %71, label %221, label %72, !dbg !2111

72:                                               ; preds = %68
  %73 = icmp eq i32 %40, 0, !dbg !2112
  br i1 %73, label %74, label %83, !dbg !2113

74:                                               ; preds = %72
  %75 = sitofp i32 %69 to double, !dbg !2114
  %76 = fsub double %20, %75, !dbg !2116
  call void @llvm.dbg.value(metadata double %76, metadata !242, metadata !DIExpression()), !dbg !2052
  %77 = fcmp uge double %76, 5.000000e-01, !dbg !2117
  %78 = and i32 %69, 1
  %79 = icmp ne i32 %78, 0
  %80 = select i1 %77, i1 %79, i1 false, !dbg !2117
  %81 = zext i1 %80 to i32, !dbg !2117
  %82 = add nsw i32 %69, %81, !dbg !2117
  br label %123, !dbg !2117

83:                                               ; preds = %72
  call void @llvm.dbg.value(metadata i32 %40, metadata !250, metadata !DIExpression()), !dbg !2119
  br i1 %42, label %84, label %100, !dbg !2120

84:                                               ; preds = %83, %84
  %85 = phi i32 [ %95, %84 ], [ %41, %83 ], !dbg !2052
  %86 = phi i32 [ %90, %84 ], [ %70, %83 ], !dbg !2052
  %87 = phi i32 [ %88, %84 ], [ %40, %83 ], !dbg !2119
  call void @llvm.dbg.value(metadata i32 %87, metadata !250, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata i32 %86, metadata !249, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata i32 %85, metadata !241, metadata !DIExpression()), !dbg !2052
  %88 = add i32 %87, -1, !dbg !2121
  call void @llvm.dbg.value(metadata i32 %88, metadata !250, metadata !DIExpression()), !dbg !2119
  %89 = freeze i32 %86
  %90 = udiv i32 %89, 10, !dbg !2123
  %91 = mul i32 %90, 10
  %92 = sub i32 %89, %91
  %93 = trunc i32 %92 to i8, !dbg !2125
  %94 = or i8 %93, 48, !dbg !2125
  %95 = add nuw nsw i32 %85, 1, !dbg !2126
  call void @llvm.dbg.value(metadata i32 %95, metadata !241, metadata !DIExpression()), !dbg !2052
  %96 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %85, !dbg !2127
  store i8 %94, i8* %96, align 1, !dbg !2128, !tbaa !1609
  call void @llvm.dbg.value(metadata i32 %90, metadata !249, metadata !DIExpression()), !dbg !2052
  %97 = icmp ugt i32 %86, 9, !dbg !2123
  %98 = icmp ult i32 %85, 31
  %99 = select i1 %97, i1 %98, i1 false, !dbg !2129
  br i1 %99, label %84, label %100, !dbg !2129, !llvm.loop !2130

100:                                              ; preds = %84, %83
  %101 = phi i32 [ %41, %83 ], [ %95, %84 ], !dbg !2052
  %102 = phi i32 [ %40, %83 ], [ %88, %84 ], !dbg !2119
  call void @llvm.dbg.value(metadata i32 %102, metadata !250, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata i32 %101, metadata !241, metadata !DIExpression()), !dbg !2052
  %103 = icmp ult i32 %101, 32, !dbg !2132
  %104 = xor i1 %103, true, !dbg !2133
  %105 = icmp eq i32 %102, 0
  %106 = select i1 %104, i1 true, i1 %105, !dbg !2133
  call void @llvm.dbg.value(metadata i32 %102, metadata !250, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2119
  br i1 %106, label %117, label %107, !dbg !2133

107:                                              ; preds = %100, %107
  %108 = phi i32 [ %110, %107 ], [ %102, %100 ]
  %109 = phi i32 [ %111, %107 ], [ %101, %100 ]
  call void @llvm.dbg.value(metadata i32 %108, metadata !250, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata i32 %109, metadata !241, metadata !DIExpression()), !dbg !2052
  %110 = add i32 %108, -1, !dbg !2134
  call void @llvm.dbg.value(metadata i32 %110, metadata !250, metadata !DIExpression()), !dbg !2119
  %111 = add i32 %109, 1, !dbg !2135
  call void @llvm.dbg.value(metadata i32 %111, metadata !241, metadata !DIExpression()), !dbg !2052
  %112 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %109, !dbg !2137
  store i8 48, i8* %112, align 1, !dbg !2138, !tbaa !1609
  %113 = icmp ult i32 %111, 32, !dbg !2132
  %114 = xor i1 %113, true, !dbg !2133
  %115 = icmp eq i32 %110, 0
  %116 = select i1 %114, i1 true, i1 %115, !dbg !2133
  call void @llvm.dbg.value(metadata i32 %110, metadata !250, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2119
  br i1 %116, label %117, label %107, !dbg !2133, !llvm.loop !2139

117:                                              ; preds = %107, %100
  %118 = phi i32 [ %101, %100 ], [ %111, %107 ], !dbg !2119
  %119 = phi i1 [ %103, %100 ], [ %113, %107 ], !dbg !2132
  br i1 %119, label %120, label %123, !dbg !2142

120:                                              ; preds = %117
  %121 = add i32 %118, 1, !dbg !2143
  call void @llvm.dbg.value(metadata i32 %121, metadata !241, metadata !DIExpression()), !dbg !2052
  %122 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %118, !dbg !2146
  store i8 46, i8* %122, align 1, !dbg !2147, !tbaa !1609
  br label %123, !dbg !2148

123:                                              ; preds = %74, %117, %120
  %124 = phi i32 [ %121, %120 ], [ %118, %117 ], [ %41, %74 ], !dbg !2052
  %125 = phi i32 [ %69, %120 ], [ %69, %117 ], [ %82, %74 ], !dbg !2052
  call void @llvm.dbg.value(metadata i32 %125, metadata !247, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata i32 %124, metadata !241, metadata !DIExpression()), !dbg !2052
  %126 = icmp ult i32 %124, 32, !dbg !2149
  br i1 %126, label %127, label %142, !dbg !2150

127:                                              ; preds = %123, %127
  %128 = phi i32 [ %136, %127 ], [ %124, %123 ], !dbg !2052
  %129 = phi i32 [ %131, %127 ], [ %125, %123 ], !dbg !2052
  call void @llvm.dbg.value(metadata i32 %129, metadata !247, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata i32 %128, metadata !241, metadata !DIExpression()), !dbg !2052
  %130 = freeze i32 %129
  %131 = sdiv i32 %130, 10, !dbg !2151
  %132 = mul i32 %131, 10
  %133 = sub i32 %130, %132
  %134 = trunc i32 %133 to i8, !dbg !2154
  %135 = add i8 %134, 48, !dbg !2154
  %136 = add nuw nsw i32 %128, 1, !dbg !2155
  call void @llvm.dbg.value(metadata i32 %136, metadata !241, metadata !DIExpression()), !dbg !2052
  %137 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %128, !dbg !2156
  store i8 %135, i8* %137, align 1, !dbg !2157, !tbaa !1609
  call void @llvm.dbg.value(metadata i32 %131, metadata !247, metadata !DIExpression()), !dbg !2052
  %138 = add i32 %129, -10, !dbg !2151
  %139 = icmp ult i32 %138, -19, !dbg !2151
  %140 = icmp ult i32 %128, 31
  %141 = select i1 %139, i1 %140, i1 false, !dbg !2158
  br i1 %141, label %127, label %142, !dbg !2158, !llvm.loop !2159

142:                                              ; preds = %127, %123
  %143 = phi i32 [ %124, %123 ], [ %136, %127 ], !dbg !2052
  call void @llvm.dbg.value(metadata i32 %143, metadata !241, metadata !DIExpression()), !dbg !2052
  %144 = and i32 %7, 2, !dbg !2161
  %145 = icmp ne i32 %144, 0, !dbg !2161
  %146 = and i32 %7, 3, !dbg !2163
  %147 = icmp eq i32 %146, 1, !dbg !2163
  br i1 %147, label %148, label %171, !dbg !2163

148:                                              ; preds = %142
  %149 = icmp eq i32 %6, 0, !dbg !2164
  br i1 %149, label %156, label %150, !dbg !2167

150:                                              ; preds = %148
  %151 = and i32 %7, 12
  %152 = icmp ne i32 %151, 0
  %153 = or i1 %18, %152, !dbg !2168
  %154 = sext i1 %153 to i32, !dbg !2168
  %155 = add i32 %154, %6, !dbg !2168
  br label %156, !dbg !2168

156:                                              ; preds = %150, %148
  %157 = phi i32 [ 0, %148 ], [ %155, %150 ]
  call void @llvm.dbg.value(metadata i32 %157, metadata !233, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata i32 %143, metadata !241, metadata !DIExpression()), !dbg !2052
  %158 = icmp ult i32 %143, %157, !dbg !2169
  %159 = icmp ult i32 %143, 32, !dbg !2170
  %160 = and i1 %158, %159, !dbg !2170
  br i1 %160, label %161, label %171, !dbg !2171

161:                                              ; preds = %156
  %162 = getelementptr [32 x i8], [32 x i8]* %9, i32 0, i32 %143, !dbg !2171
  %163 = xor i32 %143, -1, !dbg !2171
  %164 = add i32 %157, %163, !dbg !2171
  %165 = sub i32 31, %143, !dbg !2171
  %166 = call i32 @llvm.umin.i32(i32 %164, i32 %165), !dbg !2171
  %167 = add nuw i32 %166, 1, !dbg !2171
  call void @llvm.memset.p0i8.i32(i8* align 1 %162, i8 48, i32 %167, i1 false), !dbg !2172, !tbaa !1609
  %168 = call i32 @llvm.umin.i32(i32 %164, i32 %165), !dbg !2171
  %169 = add i32 %143, %168, !dbg !2171
  call void @llvm.dbg.value(metadata i32 undef, metadata !241, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata i32 undef, metadata !241, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2052
  %170 = add i32 %169, 1, !dbg !2171
  br label %171, !dbg !2174

171:                                              ; preds = %161, %156, %142
  %172 = phi i32 [ %6, %142 ], [ %157, %156 ], [ %157, %161 ]
  %173 = phi i32 [ %143, %142 ], [ %143, %156 ], [ %170, %161 ], !dbg !2155
  call void @llvm.dbg.value(metadata i32 %173, metadata !241, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata i32 %172, metadata !233, metadata !DIExpression()), !dbg !2052
  %174 = icmp ult i32 %173, 32, !dbg !2174
  br i1 %174, label %175, label %186, !dbg !2176

175:                                              ; preds = %171
  br i1 %18, label %182, label %176, !dbg !2177

176:                                              ; preds = %175
  %177 = and i32 %7, 4, !dbg !2179
  %178 = icmp eq i32 %177, 0, !dbg !2179
  br i1 %178, label %179, label %182, !dbg !2182

179:                                              ; preds = %176
  %180 = and i32 %7, 8, !dbg !2183
  %181 = icmp eq i32 %180, 0, !dbg !2183
  br i1 %181, label %186, label %182, !dbg !2185

182:                                              ; preds = %179, %176, %175
  %183 = phi i8 [ 45, %175 ], [ 43, %176 ], [ 32, %179 ]
  %184 = add i32 %173, 1, !dbg !2186
  %185 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %173, !dbg !2186
  store i8 %183, i8* %185, align 1, !dbg !2186, !tbaa !1609
  br label %186, !dbg !2187

186:                                              ; preds = %182, %179, %171
  %187 = phi i32 [ %173, %179 ], [ %173, %171 ], [ %184, %182 ], !dbg !2052
  call void @llvm.dbg.value(metadata i32 %187, metadata !241, metadata !DIExpression()), !dbg !2052
  %188 = and i32 %7, 3, !dbg !2187
  %189 = icmp eq i32 %188, 0, !dbg !2187
  %190 = icmp ult i32 %187, %172
  %191 = select i1 %189, i1 %190, i1 false, !dbg !2187
  call void @llvm.dbg.value(metadata i32 %187, metadata !253, metadata !DIExpression()), !dbg !2188
  call void @llvm.dbg.value(metadata i32 %2, metadata !229, metadata !DIExpression()), !dbg !2052
  br i1 %191, label %192, label %198, !dbg !2187

192:                                              ; preds = %186, %192
  %193 = phi i32 [ %196, %192 ], [ %187, %186 ]
  %194 = phi i32 [ %195, %192 ], [ %2, %186 ]
  call void @llvm.dbg.value(metadata i32 %193, metadata !253, metadata !DIExpression()), !dbg !2188
  call void @llvm.dbg.value(metadata i32 %194, metadata !229, metadata !DIExpression()), !dbg !2052
  %195 = add i32 %194, 1, !dbg !2189
  call void @llvm.dbg.value(metadata i32 %195, metadata !229, metadata !DIExpression()), !dbg !2052
  call void %0(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %194, i32 noundef %3) #27, !dbg !2192, !callees !1614
  %196 = add nuw i32 %193, 1, !dbg !2193
  call void @llvm.dbg.value(metadata i32 %196, metadata !253, metadata !DIExpression()), !dbg !2188
  %197 = icmp eq i32 %196, %172, !dbg !2194
  br i1 %197, label %198, label %192, !dbg !2195, !llvm.loop !2196

198:                                              ; preds = %192, %186
  %199 = phi i32 [ %2, %186 ], [ %195, %192 ]
  call void @llvm.dbg.value(metadata i32 %199, metadata !229, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata i32 0, metadata !257, metadata !DIExpression()), !dbg !2198
  %200 = icmp eq i32 %187, 0, !dbg !2199
  br i1 %200, label %201, label %206, !dbg !2201

201:                                              ; preds = %206, %198
  %202 = phi i32 [ %199, %198 ], [ %213, %206 ]
  %203 = sub i32 %202, %2
  %204 = icmp ult i32 %203, %172
  %205 = select i1 %145, i1 %204, i1 false, !dbg !2202
  call void @llvm.dbg.value(metadata i32 %202, metadata !229, metadata !DIExpression()), !dbg !2052
  br i1 %205, label %216, label %221, !dbg !2202

206:                                              ; preds = %198, %206
  %207 = phi i32 [ %214, %206 ], [ 0, %198 ]
  %208 = phi i32 [ %213, %206 ], [ %199, %198 ]
  call void @llvm.dbg.value(metadata i32 %207, metadata !257, metadata !DIExpression()), !dbg !2198
  call void @llvm.dbg.value(metadata i32 %208, metadata !229, metadata !DIExpression()), !dbg !2052
  %209 = xor i32 %207, -1, !dbg !2203
  %210 = add i32 %187, %209, !dbg !2203
  %211 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %210, !dbg !2205
  %212 = load i8, i8* %211, align 1, !dbg !2205, !tbaa !1609
  %213 = add i32 %208, 1, !dbg !2206
  call void @llvm.dbg.value(metadata i32 %213, metadata !229, metadata !DIExpression()), !dbg !2052
  call void %0(i8 noundef zeroext %212, i8* noundef %1, i32 noundef %208, i32 noundef %3) #27, !dbg !2207, !callees !1614
  %214 = add nuw i32 %207, 1, !dbg !2208
  call void @llvm.dbg.value(metadata i32 %214, metadata !257, metadata !DIExpression()), !dbg !2198
  %215 = icmp eq i32 %214, %187, !dbg !2199
  br i1 %215, label %201, label %206, !dbg !2201, !llvm.loop !2209

216:                                              ; preds = %201, %216
  %217 = phi i32 [ %218, %216 ], [ %202, %201 ]
  call void @llvm.dbg.value(metadata i32 %217, metadata !229, metadata !DIExpression()), !dbg !2052
  %218 = add i32 %217, 1, !dbg !2211
  call void @llvm.dbg.value(metadata i32 %218, metadata !229, metadata !DIExpression()), !dbg !2052
  call void %0(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %217, i32 noundef %3) #27, !dbg !2215, !callees !1614
  %219 = sub i32 %218, %2, !dbg !2216
  %220 = icmp ult i32 %219, %172, !dbg !2217
  br i1 %220, label %216, label %221, !dbg !2218, !llvm.loop !2219

221:                                              ; preds = %216, %68, %201, %13
  %222 = phi i32 [ %16, %13 ], [ 0, %68 ], [ %202, %201 ], [ %218, %216 ], !dbg !2052
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #27, !dbg !2221
  ret i32 %222, !dbg !2221
}

; Function Attrs: nofree noinline norecurse nosync nounwind readonly
define internal fastcc i32 @_strnlen_s(i8* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !2222 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2226, metadata !DIExpression()), !dbg !2229
  call void @llvm.dbg.value(metadata i32 %1, metadata !2227, metadata !DIExpression()), !dbg !2229
  call void @llvm.dbg.value(metadata i8* %0, metadata !2228, metadata !DIExpression()), !dbg !2229
  %3 = load i8, i8* %0, align 1, !dbg !2230, !tbaa !1609
  %4 = icmp eq i8 %3, 0, !dbg !2230
  %5 = icmp eq i32 %1, 0, !dbg !2233
  %6 = or i1 %4, %5, !dbg !2233
  call void @llvm.dbg.value(metadata i32 %1, metadata !2227, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2229
  br i1 %6, label %16, label %7, !dbg !2233

7:                                                ; preds = %2, %7
  %8 = phi i8* [ %11, %7 ], [ %0, %2 ]
  %9 = phi i32 [ %10, %7 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %8, metadata !2228, metadata !DIExpression()), !dbg !2229
  call void @llvm.dbg.value(metadata i32 %9, metadata !2227, metadata !DIExpression()), !dbg !2229
  %10 = add i32 %9, -1, !dbg !2234
  call void @llvm.dbg.value(metadata i32 %10, metadata !2227, metadata !DIExpression()), !dbg !2229
  %11 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !2235
  call void @llvm.dbg.value(metadata i8* %11, metadata !2228, metadata !DIExpression()), !dbg !2229
  %12 = load i8, i8* %11, align 1, !dbg !2230, !tbaa !1609
  %13 = icmp eq i8 %12, 0, !dbg !2230
  %14 = icmp eq i32 %10, 0, !dbg !2233
  %15 = select i1 %13, i1 true, i1 %14, !dbg !2233
  call void @llvm.dbg.value(metadata i32 %10, metadata !2227, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2229
  br i1 %15, label %16, label %7, !dbg !2233, !llvm.loop !2236

16:                                               ; preds = %7, %2
  %17 = phi i8* [ %0, %2 ], [ %11, %7 ], !dbg !2239
  %18 = ptrtoint i8* %17 to i32, !dbg !2240
  %19 = ptrtoint i8* %0 to i32, !dbg !2240
  %20 = sub i32 %18, %19, !dbg !2240
  ret i32 %20, !dbg !2241
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #1

; Function Attrs: noinline nounwind
define internal fastcc i32 @_ntoa_format(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* nocapture noundef %4, i32 noundef %5, i1 noundef zeroext %6, i32 noundef %7, i32 noundef %8, i32 noundef %9, i32 noundef %10) unnamed_addr #8 !dbg !2242 {
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !2246, metadata !DIExpression()), !dbg !2264
  call void @llvm.dbg.value(metadata i8* %1, metadata !2247, metadata !DIExpression()), !dbg !2264
  call void @llvm.dbg.value(metadata i32 %2, metadata !2248, metadata !DIExpression()), !dbg !2264
  call void @llvm.dbg.value(metadata i32 %3, metadata !2249, metadata !DIExpression()), !dbg !2264
  call void @llvm.dbg.value(metadata i8* %4, metadata !2250, metadata !DIExpression()), !dbg !2264
  call void @llvm.dbg.value(metadata i32 %5, metadata !2251, metadata !DIExpression()), !dbg !2264
  call void @llvm.dbg.value(metadata i1 %6, metadata !2252, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2264
  call void @llvm.dbg.value(metadata i32 %7, metadata !2253, metadata !DIExpression()), !dbg !2264
  call void @llvm.dbg.value(metadata i32 %8, metadata !2254, metadata !DIExpression()), !dbg !2264
  call void @llvm.dbg.value(metadata i32 %9, metadata !2255, metadata !DIExpression()), !dbg !2264
  call void @llvm.dbg.value(metadata i32 %10, metadata !2256, metadata !DIExpression()), !dbg !2264
  call void @llvm.dbg.value(metadata i32 %2, metadata !2257, metadata !DIExpression()), !dbg !2264
  %12 = and i32 %10, 2, !dbg !2265
  %13 = icmp eq i32 %12, 0, !dbg !2265
  br i1 %13, label %14, label %55, !dbg !2267

14:                                               ; preds = %11
  %15 = icmp eq i32 %9, 0, !dbg !2268
  br i1 %15, label %25, label %16, !dbg !2271

16:                                               ; preds = %14
  %17 = and i32 %10, 1, !dbg !2272
  %18 = icmp eq i32 %17, 0, !dbg !2272
  br i1 %18, label %25, label %19, !dbg !2273

19:                                               ; preds = %16
  %20 = and i32 %10, 12
  %21 = icmp ne i32 %20, 0
  %22 = or i1 %21, %6, !dbg !2274
  %23 = sext i1 %22 to i32, !dbg !2274
  %24 = add i32 %23, %9, !dbg !2274
  br label %25, !dbg !2274

25:                                               ; preds = %19, %16, %14
  %26 = phi i32 [ %9, %16 ], [ 0, %14 ], [ %24, %19 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !2255, metadata !DIExpression()), !dbg !2264
  call void @llvm.dbg.value(metadata i32 %5, metadata !2251, metadata !DIExpression()), !dbg !2264
  %27 = icmp ult i32 %5, %8, !dbg !2275
  %28 = icmp ult i32 %5, 32, !dbg !2276
  %29 = and i1 %27, %28, !dbg !2276
  br i1 %29, label %30, label %40, !dbg !2277

30:                                               ; preds = %25
  %31 = getelementptr i8, i8* %4, i32 %5, !dbg !2277
  %32 = xor i32 %5, -1, !dbg !2277
  %33 = add i32 %32, %8, !dbg !2277
  %34 = sub i32 31, %5, !dbg !2277
  %35 = call i32 @llvm.umin.i32(i32 %33, i32 %34), !dbg !2277
  %36 = add nuw i32 %35, 1, !dbg !2277
  call void @llvm.memset.p0i8.i32(i8* align 1 %31, i8 48, i32 %36, i1 false), !dbg !2278, !tbaa !1609
  %37 = call i32 @llvm.umin.i32(i32 %33, i32 %34), !dbg !2277
  %38 = add i32 %37, %5, !dbg !2277
  call void @llvm.dbg.value(metadata i32 undef, metadata !2251, metadata !DIExpression()), !dbg !2264
  call void @llvm.dbg.value(metadata i32 undef, metadata !2251, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2264
  %39 = add i32 %38, 1, !dbg !2277
  br label %40

40:                                               ; preds = %30, %25
  %41 = phi i32 [ %5, %25 ], [ %39, %30 ]
  %42 = and i32 %10, 1
  %43 = icmp eq i32 %42, 0
  call void @llvm.dbg.value(metadata i32 %41, metadata !2251, metadata !DIExpression()), !dbg !2264
  br i1 %43, label %55, label %44, !dbg !2280

44:                                               ; preds = %40
  call void @llvm.dbg.value(metadata i32 %41, metadata !2251, metadata !DIExpression()), !dbg !2264
  %45 = icmp ult i32 %41, %26, !dbg !2281
  %46 = icmp ult i32 %41, 32
  %47 = and i1 %45, %46, !dbg !2282
  br i1 %47, label %48, label %55, !dbg !2282

48:                                               ; preds = %44, %48
  %49 = phi i32 [ %50, %48 ], [ %41, %44 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !2251, metadata !DIExpression()), !dbg !2264
  %50 = add i32 %49, 1, !dbg !2283
  call void @llvm.dbg.value(metadata i32 %50, metadata !2251, metadata !DIExpression()), !dbg !2264
  %51 = getelementptr inbounds i8, i8* %4, i32 %49, !dbg !2285
  store i8 48, i8* %51, align 1, !dbg !2286, !tbaa !1609
  %52 = icmp ult i32 %50, %26, !dbg !2281
  %53 = icmp ult i32 %50, 32
  %54 = and i1 %52, %53, !dbg !2282
  br i1 %54, label %48, label %55, !dbg !2282, !llvm.loop !2287

55:                                               ; preds = %48, %44, %40, %11
  %56 = phi i32 [ %9, %11 ], [ %26, %40 ], [ %26, %44 ], [ %26, %48 ]
  %57 = phi i32 [ %5, %11 ], [ %41, %40 ], [ %41, %44 ], [ %50, %48 ]
  call void @llvm.dbg.value(metadata i32 %57, metadata !2251, metadata !DIExpression()), !dbg !2264
  call void @llvm.dbg.value(metadata i32 %56, metadata !2255, metadata !DIExpression()), !dbg !2264
  %58 = and i32 %10, 16, !dbg !2290
  %59 = icmp eq i32 %58, 0, !dbg !2290
  br i1 %59, label %101, label %60, !dbg !2292

60:                                               ; preds = %55
  %61 = and i32 %10, 1024, !dbg !2293
  %62 = icmp eq i32 %61, 0, !dbg !2293
  %63 = icmp ne i32 %57, 0
  %64 = select i1 %62, i1 %63, i1 false, !dbg !2296
  br i1 %64, label %65, label %76, !dbg !2296

65:                                               ; preds = %60
  %66 = icmp eq i32 %57, %8, !dbg !2297
  %67 = icmp eq i32 %57, %56
  %68 = or i1 %66, %67, !dbg !2298
  br i1 %68, label %69, label %76, !dbg !2298

69:                                               ; preds = %65
  %70 = add i32 %57, -1, !dbg !2299
  call void @llvm.dbg.value(metadata i32 %70, metadata !2251, metadata !DIExpression()), !dbg !2264
  %71 = icmp ne i32 %70, 0, !dbg !2301
  %72 = icmp eq i32 %7, 16
  %73 = and i1 %72, %71, !dbg !2303
  %74 = add i32 %57, -2
  %75 = select i1 %73, i32 %74, i32 %70, !dbg !2303
  br label %76, !dbg !2303

76:                                               ; preds = %69, %65, %60
  %77 = phi i32 [ %57, %60 ], [ %57, %65 ], [ %75, %69 ]
  call void @llvm.dbg.value(metadata i32 %77, metadata !2251, metadata !DIExpression()), !dbg !2264
  %78 = icmp eq i32 %7, 16, !dbg !2304
  br i1 %78, label %79, label %87, !dbg !2306

79:                                               ; preds = %76
  %80 = and i32 %10, 32, !dbg !2307
  %81 = icmp eq i32 %80, 0, !dbg !2307
  %82 = icmp ult i32 %77, 32
  %83 = select i1 %81, i1 %82, i1 false, !dbg !2308
  br i1 %83, label %91, label %84, !dbg !2308

84:                                               ; preds = %79
  %85 = icmp ne i32 %80, 0, !dbg !2309
  %86 = select i1 %85, i1 %82, i1 false, !dbg !2311
  br i1 %86, label %91, label %87, !dbg !2311

87:                                               ; preds = %76, %84
  %88 = icmp eq i32 %7, 2, !dbg !2312
  %89 = icmp ult i32 %77, 32
  %90 = select i1 %88, i1 %89, i1 false, !dbg !2314
  br i1 %90, label %91, label %95, !dbg !2314

91:                                               ; preds = %87, %84, %79
  %92 = phi i8 [ 120, %79 ], [ 88, %84 ], [ 98, %87 ]
  %93 = add i32 %77, 1, !dbg !2315
  %94 = getelementptr inbounds i8, i8* %4, i32 %77, !dbg !2315
  store i8 %92, i8* %94, align 1, !dbg !2315, !tbaa !1609
  br label %95, !dbg !2316

95:                                               ; preds = %91, %87
  %96 = phi i32 [ %77, %87 ], [ %93, %91 ], !dbg !2318
  call void @llvm.dbg.value(metadata i32 %96, metadata !2251, metadata !DIExpression()), !dbg !2264
  %97 = icmp ult i32 %96, 32, !dbg !2316
  br i1 %97, label %98, label %101, !dbg !2319

98:                                               ; preds = %95
  %99 = add i32 %96, 1, !dbg !2320
  call void @llvm.dbg.value(metadata i32 %99, metadata !2251, metadata !DIExpression()), !dbg !2264
  %100 = getelementptr inbounds i8, i8* %4, i32 %96, !dbg !2322
  store i8 48, i8* %100, align 1, !dbg !2323, !tbaa !1609
  br label %101, !dbg !2324

101:                                              ; preds = %95, %98, %55
  %102 = phi i32 [ %99, %98 ], [ %96, %95 ], [ %57, %55 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !2251, metadata !DIExpression()), !dbg !2264
  %103 = icmp ult i32 %102, 32, !dbg !2325
  br i1 %103, label %104, label %115, !dbg !2327

104:                                              ; preds = %101
  br i1 %6, label %111, label %105, !dbg !2328

105:                                              ; preds = %104
  %106 = and i32 %10, 4, !dbg !2330
  %107 = icmp eq i32 %106, 0, !dbg !2330
  br i1 %107, label %108, label %111, !dbg !2333

108:                                              ; preds = %105
  %109 = and i32 %10, 8, !dbg !2334
  %110 = icmp eq i32 %109, 0, !dbg !2334
  br i1 %110, label %115, label %111, !dbg !2336

111:                                              ; preds = %108, %105, %104
  %112 = phi i8 [ 45, %104 ], [ 43, %105 ], [ 32, %108 ]
  %113 = add i32 %102, 1, !dbg !2337
  %114 = getelementptr inbounds i8, i8* %4, i32 %102, !dbg !2337
  store i8 %112, i8* %114, align 1, !dbg !2337, !tbaa !1609
  br label %115, !dbg !2338

115:                                              ; preds = %111, %108, %101
  %116 = phi i32 [ %102, %108 ], [ %102, %101 ], [ %113, %111 ], !dbg !2264
  call void @llvm.dbg.value(metadata i32 %116, metadata !2251, metadata !DIExpression()), !dbg !2264
  %117 = and i32 %10, 3, !dbg !2338
  %118 = icmp eq i32 %117, 0, !dbg !2338
  %119 = icmp ult i32 %116, %56
  %120 = select i1 %118, i1 %119, i1 false, !dbg !2338
  call void @llvm.dbg.value(metadata i32 %116, metadata !2258, metadata !DIExpression()), !dbg !2339
  call void @llvm.dbg.value(metadata i32 %2, metadata !2248, metadata !DIExpression()), !dbg !2264
  br i1 %120, label %121, label %127, !dbg !2338

121:                                              ; preds = %115, %121
  %122 = phi i32 [ %125, %121 ], [ %116, %115 ]
  %123 = phi i32 [ %124, %121 ], [ %2, %115 ]
  call void @llvm.dbg.value(metadata i32 %122, metadata !2258, metadata !DIExpression()), !dbg !2339
  call void @llvm.dbg.value(metadata i32 %123, metadata !2248, metadata !DIExpression()), !dbg !2264
  %124 = add i32 %123, 1, !dbg !2340
  call void @llvm.dbg.value(metadata i32 %124, metadata !2248, metadata !DIExpression()), !dbg !2264
  call void %0(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %123, i32 noundef %3) #27, !dbg !2343, !callees !1614
  %125 = add nuw i32 %122, 1, !dbg !2344
  call void @llvm.dbg.value(metadata i32 %125, metadata !2258, metadata !DIExpression()), !dbg !2339
  %126 = icmp eq i32 %125, %56, !dbg !2345
  br i1 %126, label %127, label %121, !dbg !2346, !llvm.loop !2347

127:                                              ; preds = %121, %115
  %128 = phi i32 [ %2, %115 ], [ %124, %121 ]
  call void @llvm.dbg.value(metadata i32 %128, metadata !2248, metadata !DIExpression()), !dbg !2264
  call void @llvm.dbg.value(metadata i32 0, metadata !2262, metadata !DIExpression()), !dbg !2349
  %129 = icmp eq i32 %116, 0, !dbg !2350
  br i1 %129, label %130, label %136, !dbg !2352

130:                                              ; preds = %136, %127
  %131 = phi i32 [ %128, %127 ], [ %143, %136 ]
  %132 = xor i1 %13, true, !dbg !2353
  %133 = sub i32 %131, %2
  %134 = icmp ult i32 %133, %56
  %135 = select i1 %132, i1 %134, i1 false, !dbg !2353
  call void @llvm.dbg.value(metadata i32 %131, metadata !2248, metadata !DIExpression()), !dbg !2264
  br i1 %135, label %146, label %151, !dbg !2353

136:                                              ; preds = %127, %136
  %137 = phi i32 [ %144, %136 ], [ 0, %127 ]
  %138 = phi i32 [ %143, %136 ], [ %128, %127 ]
  call void @llvm.dbg.value(metadata i32 %137, metadata !2262, metadata !DIExpression()), !dbg !2349
  call void @llvm.dbg.value(metadata i32 %138, metadata !2248, metadata !DIExpression()), !dbg !2264
  %139 = xor i32 %137, -1, !dbg !2354
  %140 = add i32 %116, %139, !dbg !2354
  %141 = getelementptr inbounds i8, i8* %4, i32 %140, !dbg !2356
  %142 = load i8, i8* %141, align 1, !dbg !2356, !tbaa !1609
  %143 = add i32 %138, 1, !dbg !2357
  call void @llvm.dbg.value(metadata i32 %143, metadata !2248, metadata !DIExpression()), !dbg !2264
  call void %0(i8 noundef zeroext %142, i8* noundef %1, i32 noundef %138, i32 noundef %3) #27, !dbg !2358, !callees !1614
  %144 = add nuw i32 %137, 1, !dbg !2359
  call void @llvm.dbg.value(metadata i32 %144, metadata !2262, metadata !DIExpression()), !dbg !2349
  %145 = icmp eq i32 %144, %116, !dbg !2350
  br i1 %145, label %130, label %136, !dbg !2352, !llvm.loop !2360

146:                                              ; preds = %130, %146
  %147 = phi i32 [ %148, %146 ], [ %131, %130 ]
  call void @llvm.dbg.value(metadata i32 %147, metadata !2248, metadata !DIExpression()), !dbg !2264
  %148 = add i32 %147, 1, !dbg !2362
  call void @llvm.dbg.value(metadata i32 %148, metadata !2248, metadata !DIExpression()), !dbg !2264
  call void %0(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %147, i32 noundef %3) #27, !dbg !2366, !callees !1614
  %149 = sub i32 %148, %2, !dbg !2367
  %150 = icmp ult i32 %149, %56, !dbg !2368
  br i1 %150, label %146, label %151, !dbg !2369, !llvm.loop !2370

151:                                              ; preds = %146, %130
  %152 = phi i32 [ %131, %130 ], [ %148, %146 ]
  call void @llvm.dbg.value(metadata i32 %152, metadata !2248, metadata !DIExpression()), !dbg !2264
  ret i32 %152, !dbg !2372
}

; Function Attrs: noinline nounwind
define dso_local i32 @sprintf_(i8* noundef %0, i8* noundef %1, ...) local_unnamed_addr #8 !dbg !2373 {
  %3 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !2377, metadata !DIExpression()), !dbg !2381
  call void @llvm.dbg.value(metadata i8* %1, metadata !2378, metadata !DIExpression()), !dbg !2381
  %4 = bitcast %struct.__va_list* %3 to i8*, !dbg !2382
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #27, !dbg !2382
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !2379, metadata !DIExpression()), !dbg !2383
  call void @llvm.va_start(i8* nonnull %4), !dbg !2384
  %5 = bitcast %struct.__va_list* %3 to i32*, !dbg !2385
  %6 = load i32, i32* %5, align 4, !dbg !2385
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !2385
  %8 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_buffer, i8* noundef %0, i32 noundef -1, i8* noundef %1, [1 x i32] %7), !dbg !2385
  call void @llvm.dbg.value(metadata i32 %8, metadata !2380, metadata !DIExpression()), !dbg !2381
  call void @llvm.va_end(i8* %4), !dbg !2386
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #27, !dbg !2387
  ret i32 %8, !dbg !2388
}

; Function Attrs: noinline nounwind
define dso_local i32 @snprintf_(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #8 !dbg !2389 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !2393, metadata !DIExpression()), !dbg !2398
  call void @llvm.dbg.value(metadata i32 %1, metadata !2394, metadata !DIExpression()), !dbg !2398
  call void @llvm.dbg.value(metadata i8* %2, metadata !2395, metadata !DIExpression()), !dbg !2398
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !2399
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #27, !dbg !2399
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !2396, metadata !DIExpression()), !dbg !2400
  call void @llvm.va_start(i8* nonnull %5), !dbg !2401
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !2402
  %7 = load i32, i32* %6, align 4, !dbg !2402
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !2402
  %9 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_buffer, i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8), !dbg !2402
  call void @llvm.dbg.value(metadata i32 %9, metadata !2397, metadata !DIExpression()), !dbg !2398
  call void @llvm.va_end(i8* %5), !dbg !2403
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #27, !dbg !2404
  ret i32 %9, !dbg !2405
}

; Function Attrs: noinline nounwind
define dso_local i32 @vsnprintf_(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #8 !dbg !2406 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !2413, metadata !DIExpression()), !dbg !2414
  call void @llvm.dbg.value(metadata i8* %0, metadata !2410, metadata !DIExpression()), !dbg !2414
  call void @llvm.dbg.value(metadata i32 %1, metadata !2411, metadata !DIExpression()), !dbg !2414
  call void @llvm.dbg.value(metadata i8* %2, metadata !2412, metadata !DIExpression()), !dbg !2414
  %5 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_buffer, i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3), !dbg !2415
  ret i32 %5, !dbg !2416
}

; Function Attrs: noinline nounwind
define dso_local i32 @fctprintf(void (i8, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, ...) local_unnamed_addr #8 !dbg !2417 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca %struct.out_fct_wrap_type, align 4
  call void @llvm.dbg.value(metadata void (i8, i8*)* %0, metadata !2421, metadata !DIExpression()), !dbg !2428
  call void @llvm.dbg.value(metadata i8* %1, metadata !2422, metadata !DIExpression()), !dbg !2428
  call void @llvm.dbg.value(metadata i8* %2, metadata !2423, metadata !DIExpression()), !dbg !2428
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !2429
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #27, !dbg !2429
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !2424, metadata !DIExpression()), !dbg !2430
  call void @llvm.va_start(i8* nonnull %6), !dbg !2431
  %7 = bitcast %struct.out_fct_wrap_type* %5 to i8*, !dbg !2432
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #27, !dbg !2432
  call void @llvm.dbg.declare(metadata %struct.out_fct_wrap_type* %5, metadata !2425, metadata !DIExpression()), !dbg !2433
  %8 = getelementptr inbounds %struct.out_fct_wrap_type, %struct.out_fct_wrap_type* %5, i32 0, i32 0, !dbg !2434
  store void (i8, i8*)* %0, void (i8, i8*)** %8, align 4, !dbg !2434, !tbaa !1926
  %9 = getelementptr inbounds %struct.out_fct_wrap_type, %struct.out_fct_wrap_type* %5, i32 0, i32 1, !dbg !2434
  store i8* %1, i8** %9, align 4, !dbg !2434, !tbaa !1929
  %10 = bitcast %struct.__va_list* %4 to i32*, !dbg !2435
  %11 = load i32, i32* %10, align 4, !dbg !2435
  %12 = insertvalue [1 x i32] poison, i32 %11, 0, !dbg !2435
  %13 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_fct, i8* noundef nonnull %7, i32 noundef -1, i8* noundef %2, [1 x i32] %12), !dbg !2435
  call void @llvm.dbg.value(metadata i32 %13, metadata !2427, metadata !DIExpression()), !dbg !2428
  call void @llvm.va_end(i8* %6), !dbg !2436
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #27, !dbg !2437
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #27, !dbg !2437
  ret i32 %13, !dbg !2438
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @SystemInit() local_unnamed_addr #13 !dbg !2439 {
  %1 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2440, !tbaa !2441
  %2 = or i32 %1, 1, !dbg !2440
  store volatile i32 %2, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2440, !tbaa !2441
  %3 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2444, !tbaa !2445
  %4 = and i32 %3, -117506048, !dbg !2444
  store volatile i32 %4, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2444, !tbaa !2445
  %5 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2446, !tbaa !2441
  %6 = and i32 %5, -17367041, !dbg !2446
  store volatile i32 %6, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2446, !tbaa !2441
  %7 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2447, !tbaa !2441
  %8 = and i32 %7, -262145, !dbg !2447
  store volatile i32 %8, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2447, !tbaa !2441
  %9 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2448, !tbaa !2445
  %10 = and i32 %9, -8323073, !dbg !2448
  store volatile i32 %10, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2448, !tbaa !2445
  store volatile i32 10420224, i32* inttoptr (i32 1073877000 to i32*), align 8, !dbg !2449, !tbaa !2450
  store volatile i32 134217728, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !2451, !tbaa !2452
  ret void, !dbg !2454
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #14 !dbg !2455 {
  call void @llvm.dbg.value(metadata i32 0, metadata !2457, metadata !DIExpression()), !dbg !2460
  call void @llvm.dbg.value(metadata i32 0, metadata !2458, metadata !DIExpression()), !dbg !2460
  call void @llvm.dbg.value(metadata i32 0, metadata !2459, metadata !DIExpression()), !dbg !2460
  %1 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2461, !tbaa !2445
  %2 = and i32 %1, 12, !dbg !2462
  call void @llvm.dbg.value(metadata i32 %2, metadata !2457, metadata !DIExpression()), !dbg !2460
  %3 = icmp eq i32 %2, 8, !dbg !2463
  br i1 %3, label %4, label %22, !dbg !2463

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2464, !tbaa !2445
  call void @llvm.dbg.value(metadata i32 %5, metadata !2458, metadata !DIExpression(DW_OP_constu, 3932160, DW_OP_and, DW_OP_stack_value)), !dbg !2460
  %6 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2466, !tbaa !2445
  %7 = and i32 %6, 65536, !dbg !2467
  call void @llvm.dbg.value(metadata i32 %7, metadata !2459, metadata !DIExpression()), !dbg !2460
  %8 = lshr i32 %5, 18, !dbg !2468
  %9 = and i32 %8, 15, !dbg !2468
  %10 = add nuw nsw i32 %9, 2, !dbg !2469
  call void @llvm.dbg.value(metadata i32 %10, metadata !2458, metadata !DIExpression()), !dbg !2460
  %11 = icmp eq i32 %7, 0, !dbg !2470
  br i1 %11, label %12, label %14, !dbg !2472

12:                                               ; preds = %4
  %13 = mul nuw nsw i32 %10, 4000000, !dbg !2473
  br label %22, !dbg !2475

14:                                               ; preds = %4
  %15 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2476, !tbaa !2445
  %16 = and i32 %15, 131072, !dbg !2479
  %17 = icmp eq i32 %16, 0, !dbg !2480
  br i1 %17, label %20, label %18, !dbg !2481

18:                                               ; preds = %14
  %19 = mul nuw nsw i32 %10, 4000000, !dbg !2482
  br label %22, !dbg !2484

20:                                               ; preds = %14
  %21 = mul nuw nsw i32 %10, 8000000, !dbg !2485
  br label %22

22:                                               ; preds = %0, %12, %20, %18
  %23 = phi i32 [ %13, %12 ], [ %21, %20 ], [ %19, %18 ], [ 8000000, %0 ]
  store i32 %23, i32* @SystemCoreClock, align 4, !dbg !2487, !tbaa !2488
  %24 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2489, !tbaa !2445
  %25 = lshr i32 %24, 4, !dbg !2490
  %26 = and i32 %25, 15, !dbg !2490
  %27 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %26, !dbg !2491
  %28 = load i8, i8* %27, align 1, !dbg !2491, !tbaa !1609
  %29 = zext i8 %28 to i32, !dbg !2491
  call void @llvm.dbg.value(metadata i32 %29, metadata !2457, metadata !DIExpression()), !dbg !2460
  %30 = load i32, i32* @SystemCoreClock, align 4, !dbg !2492, !tbaa !2488
  %31 = lshr i32 %30, %29, !dbg !2492
  store i32 %31, i32* @SystemCoreClock, align 4, !dbg !2492, !tbaa !2488
  ret void, !dbg !2493
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #8 !dbg !2494 {
  %1 = call i32 @HAL_GetTick() #27, !dbg !2500
  call void @llvm.dbg.value(metadata i32 %1, metadata !2499, metadata !DIExpression()), !dbg !2501
  %2 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2502, !tbaa !2441
  %3 = or i32 %2, 1, !dbg !2502
  store volatile i32 %3, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2502, !tbaa !2441
  br label %4, !dbg !2503

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2504, !tbaa !2441
  %6 = and i32 %5, 2, !dbg !2504
  %7 = icmp eq i32 %6, 0, !dbg !2505
  br i1 %7, label %8, label %12, !dbg !2503

8:                                                ; preds = %4
  %9 = call i32 @HAL_GetTick() #27, !dbg !2506
  %10 = sub i32 %9, %1, !dbg !2509
  %11 = icmp ugt i32 %10, 2, !dbg !2510
  br i1 %11, label %58, label %4, !dbg !2511, !llvm.loop !2512

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2514, !tbaa !2441
  %14 = and i32 %13, -249, !dbg !2514
  %15 = or i32 %14, 128, !dbg !2514
  store volatile i32 %15, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2514, !tbaa !2441
  %16 = call i32 @HAL_GetTick() #27, !dbg !2515
  call void @llvm.dbg.value(metadata i32 %16, metadata !2499, metadata !DIExpression()), !dbg !2501
  store volatile i32 0, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2516, !tbaa !2445
  br label %17, !dbg !2517

17:                                               ; preds = %21, %12
  %18 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2518, !tbaa !2445
  %19 = and i32 %18, 12, !dbg !2518
  %20 = icmp eq i32 %19, 0, !dbg !2519
  br i1 %20, label %25, label %21, !dbg !2517

21:                                               ; preds = %17
  %22 = call i32 @HAL_GetTick() #27, !dbg !2520
  %23 = sub i32 %22, %16, !dbg !2523
  %24 = icmp ugt i32 %23, 5000, !dbg !2524
  br i1 %24, label %58, label %17, !dbg !2525, !llvm.loop !2526

25:                                               ; preds = %17
  store i32 8000000, i32* @SystemCoreClock, align 4, !dbg !2528, !tbaa !2488
  %26 = load i32, i32* @uwTickPrio, align 4, !dbg !2529, !tbaa !2488
  %27 = call i32 @HAL_InitTick(i32 noundef %26) #27, !dbg !2531
  %28 = icmp eq i32 %27, 0, !dbg !2532
  br i1 %28, label %29, label %58, !dbg !2533

29:                                               ; preds = %25
  %30 = call i32 @HAL_GetTick() #27, !dbg !2534
  call void @llvm.dbg.value(metadata i32 %30, metadata !2499, metadata !DIExpression()), !dbg !2501
  %31 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2535, !tbaa !2441
  %32 = and i32 %31, -16777217, !dbg !2535
  store volatile i32 %32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2535, !tbaa !2441
  br label %33, !dbg !2536

33:                                               ; preds = %37, %29
  %34 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2537, !tbaa !2441
  %35 = and i32 %34, 33554432, !dbg !2537
  %36 = icmp eq i32 %35, 0, !dbg !2538
  br i1 %36, label %41, label %37, !dbg !2536

37:                                               ; preds = %33
  %38 = call i32 @HAL_GetTick() #27, !dbg !2539
  %39 = sub i32 %38, %30, !dbg !2542
  %40 = icmp ugt i32 %39, 2, !dbg !2543
  br i1 %40, label %58, label %33, !dbg !2544, !llvm.loop !2545

41:                                               ; preds = %33
  store volatile i32 0, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2547, !tbaa !2445
  %42 = call i32 @HAL_GetTick() #27, !dbg !2548
  call void @llvm.dbg.value(metadata i32 %42, metadata !2499, metadata !DIExpression()), !dbg !2501
  %43 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2549, !tbaa !2441
  %44 = and i32 %43, -589825, !dbg !2549
  store volatile i32 %44, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2549, !tbaa !2441
  br label %45, !dbg !2550

45:                                               ; preds = %49, %41
  %46 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2551, !tbaa !2441
  %47 = and i32 %46, 131072, !dbg !2551
  %48 = icmp eq i32 %47, 0, !dbg !2552
  br i1 %48, label %53, label %49, !dbg !2550

49:                                               ; preds = %45
  %50 = call i32 @HAL_GetTick() #27, !dbg !2553
  %51 = sub i32 %50, %42, !dbg !2556
  %52 = icmp ugt i32 %51, 100, !dbg !2557
  br i1 %52, label %58, label %45, !dbg !2558, !llvm.loop !2559

53:                                               ; preds = %45
  %54 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2561, !tbaa !2441
  %55 = and i32 %54, -262145, !dbg !2561
  store volatile i32 %55, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2561, !tbaa !2441
  %56 = load volatile i32, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !2562, !tbaa !2563
  %57 = or i32 %56, 16777216, !dbg !2562
  store volatile i32 %57, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !2562, !tbaa !2563
  store volatile i32 0, i32* inttoptr (i32 1073877000 to i32*), align 8, !dbg !2564, !tbaa !2450
  br label %58, !dbg !2565

58:                                               ; preds = %8, %21, %37, %49, %25, %53
  %59 = phi i32 [ 0, %53 ], [ 1, %25 ], [ 3, %49 ], [ 3, %37 ], [ 3, %21 ], [ 3, %8 ], !dbg !2501
  ret i32 %59, !dbg !2566
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #8 !dbg !2567 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !2589, metadata !DIExpression()), !dbg !2600
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !2601
  br i1 %3, label %298, label %4, !dbg !2603

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !2604
  %6 = load i32, i32* %5, align 4, !dbg !2604, !tbaa !2606
  %7 = and i32 %6, 1, !dbg !2609
  %8 = icmp eq i32 %7, 0, !dbg !2610
  br i1 %8, label %70, label %9, !dbg !2611

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2612, !tbaa !2445
  %11 = and i32 %10, 12, !dbg !2612
  %12 = icmp eq i32 %11, 4, !dbg !2615
  br i1 %12, label %21, label %13, !dbg !2616

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2617, !tbaa !2445
  %15 = and i32 %14, 12, !dbg !2617
  %16 = icmp eq i32 %15, 8, !dbg !2618
  br i1 %16, label %17, label %29, !dbg !2619

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2620, !tbaa !2445
  %19 = and i32 %18, 65536, !dbg !2620
  %20 = icmp eq i32 %19, 0, !dbg !2621
  br i1 %20, label %29, label %21, !dbg !2622

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2623, !tbaa !2441
  %23 = and i32 %22, 131072, !dbg !2623
  %24 = icmp eq i32 %23, 0, !dbg !2626
  br i1 %24, label %70, label %25, !dbg !2627

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !2628
  %27 = load i32, i32* %26, align 4, !dbg !2628, !tbaa !2629
  %28 = icmp eq i32 %27, 0, !dbg !2630
  br i1 %28, label %298, label %70, !dbg !2631

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !2632
  %31 = load i32, i32* %30, align 4, !dbg !2632, !tbaa !2629
  switch i32 %31, label %45 [
    i32 65536, label %32
    i32 0, label %35
    i32 327680, label %40
  ], !dbg !2636

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2637, !tbaa !2441
  %34 = or i32 %33, 65536, !dbg !2637
  br label %50, !dbg !2637

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2639, !tbaa !2441
  %37 = and i32 %36, -65537, !dbg !2639
  store volatile i32 %37, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2639, !tbaa !2441
  %38 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2639, !tbaa !2441
  %39 = and i32 %38, -262145, !dbg !2639
  br label %50, !dbg !2639

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2642, !tbaa !2441
  %42 = or i32 %41, 262144, !dbg !2642
  store volatile i32 %42, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2642, !tbaa !2441
  %43 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2642, !tbaa !2441
  %44 = or i32 %43, 65536, !dbg !2642
  br label %50, !dbg !2642

45:                                               ; preds = %29
  %46 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2645, !tbaa !2441
  %47 = and i32 %46, -65537, !dbg !2645
  store volatile i32 %47, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2645, !tbaa !2441
  %48 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2645, !tbaa !2441
  %49 = and i32 %48, -262145, !dbg !2645
  br label %50

50:                                               ; preds = %35, %45, %40, %32
  %51 = phi i32 [ %39, %35 ], [ %49, %45 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %51, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2647, !tbaa !2441
  %52 = icmp eq i32 %31, 0, !dbg !2648
  %53 = call i32 @HAL_GetTick() #27, !dbg !2650
  call void @llvm.dbg.value(metadata i32 %53, metadata !2590, metadata !DIExpression()), !dbg !2600
  call void @llvm.dbg.value(metadata i32 %53, metadata !2590, metadata !DIExpression()), !dbg !2600
  br i1 %52, label %62, label %54, !dbg !2651

54:                                               ; preds = %50, %58
  %55 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2652, !tbaa !2441
  %56 = and i32 %55, 131072, !dbg !2652
  %57 = icmp eq i32 %56, 0, !dbg !2654
  br i1 %57, label %58, label %70, !dbg !2655

58:                                               ; preds = %54
  %59 = call i32 @HAL_GetTick() #27, !dbg !2656
  %60 = sub i32 %59, %53, !dbg !2659
  %61 = icmp ugt i32 %60, 100, !dbg !2660
  br i1 %61, label %298, label %54, !dbg !2661, !llvm.loop !2662

62:                                               ; preds = %50, %66
  %63 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2664, !tbaa !2441
  %64 = and i32 %63, 131072, !dbg !2664
  %65 = icmp eq i32 %64, 0, !dbg !2666
  br i1 %65, label %70, label %66, !dbg !2667

66:                                               ; preds = %62
  %67 = call i32 @HAL_GetTick() #27, !dbg !2668
  %68 = sub i32 %67, %53, !dbg !2671
  %69 = icmp ugt i32 %68, 100, !dbg !2672
  br i1 %69, label %298, label %62, !dbg !2673, !llvm.loop !2674

70:                                               ; preds = %54, %62, %25, %21, %4
  %71 = load i32, i32* %5, align 4, !dbg !2676, !tbaa !2606
  %72 = and i32 %71, 2, !dbg !2678
  %73 = icmp eq i32 %72, 0, !dbg !2679
  br i1 %73, label %125, label %74, !dbg !2680

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2681, !tbaa !2445
  %76 = and i32 %75, 12, !dbg !2681
  %77 = icmp eq i32 %76, 0, !dbg !2684
  br i1 %77, label %86, label %78, !dbg !2685

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2686, !tbaa !2445
  %80 = and i32 %79, 12, !dbg !2686
  %81 = icmp eq i32 %80, 8, !dbg !2687
  br i1 %81, label %82, label %94, !dbg !2688

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2689, !tbaa !2445
  %84 = and i32 %83, 65536, !dbg !2689
  %85 = icmp eq i32 %84, 0, !dbg !2690
  br i1 %85, label %86, label %94, !dbg !2691

86:                                               ; preds = %82, %74
  %87 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2692, !tbaa !2441
  %88 = and i32 %87, 2, !dbg !2692
  %89 = icmp eq i32 %88, 0, !dbg !2695
  br i1 %89, label %118, label %90, !dbg !2696

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !2697
  %92 = load i32, i32* %91, align 4, !dbg !2697, !tbaa !2698
  %93 = icmp eq i32 %92, 1, !dbg !2699
  br i1 %93, label %118, label %298, !dbg !2700

94:                                               ; preds = %82, %78
  %95 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !2701
  %96 = load i32, i32* %95, align 4, !dbg !2701, !tbaa !2698
  %97 = icmp eq i32 %96, 0, !dbg !2704
  br i1 %97, label %108, label %98, !dbg !2705

98:                                               ; preds = %94
  store volatile i32 1, i32* inttoptr (i32 1111621632 to i32*), align 131072, !dbg !2706, !tbaa !2488
  %99 = call i32 @HAL_GetTick() #27, !dbg !2708
  call void @llvm.dbg.value(metadata i32 %99, metadata !2590, metadata !DIExpression()), !dbg !2600
  br label %100, !dbg !2709

100:                                              ; preds = %104, %98
  %101 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2710, !tbaa !2441
  %102 = and i32 %101, 2, !dbg !2710
  %103 = icmp eq i32 %102, 0, !dbg !2711
  br i1 %103, label %104, label %118, !dbg !2709

104:                                              ; preds = %100
  %105 = call i32 @HAL_GetTick() #27, !dbg !2712
  %106 = sub i32 %105, %99, !dbg !2715
  %107 = icmp ugt i32 %106, 2, !dbg !2716
  br i1 %107, label %298, label %100, !dbg !2717, !llvm.loop !2718

108:                                              ; preds = %94
  store volatile i32 0, i32* inttoptr (i32 1111621632 to i32*), align 131072, !dbg !2720, !tbaa !2488
  %109 = call i32 @HAL_GetTick() #27, !dbg !2722
  call void @llvm.dbg.value(metadata i32 %109, metadata !2590, metadata !DIExpression()), !dbg !2600
  br label %110, !dbg !2723

110:                                              ; preds = %114, %108
  %111 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2724, !tbaa !2441
  %112 = and i32 %111, 2, !dbg !2724
  %113 = icmp eq i32 %112, 0, !dbg !2725
  br i1 %113, label %125, label %114, !dbg !2723

114:                                              ; preds = %110
  %115 = call i32 @HAL_GetTick() #27, !dbg !2726
  %116 = sub i32 %115, %109, !dbg !2729
  %117 = icmp ugt i32 %116, 2, !dbg !2730
  br i1 %117, label %298, label %110, !dbg !2731, !llvm.loop !2732

118:                                              ; preds = %100, %86, %90
  %119 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2734, !tbaa !2441
  %120 = and i32 %119, -249, !dbg !2734
  %121 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !2734
  %122 = load i32, i32* %121, align 4, !dbg !2734, !tbaa !2735
  %123 = shl i32 %122, 3, !dbg !2734
  %124 = or i32 %123, %120, !dbg !2734
  store volatile i32 %124, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2734, !tbaa !2441
  br label %125, !dbg !2736

125:                                              ; preds = %110, %118, %70
  %126 = load i32, i32* %5, align 4, !dbg !2736, !tbaa !2606
  %127 = and i32 %126, 8, !dbg !2738
  %128 = icmp eq i32 %127, 0, !dbg !2739
  br i1 %128, label %154, label %129, !dbg !2740

129:                                              ; preds = %125
  %130 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !2741
  %131 = load i32, i32* %130, align 4, !dbg !2741, !tbaa !2744
  %132 = icmp eq i32 %131, 0, !dbg !2745
  br i1 %132, label %144, label %133, !dbg !2746

133:                                              ; preds = %129
  store volatile i32 1, i32* inttoptr (i32 1111622784 to i32*), align 128, !dbg !2747, !tbaa !2488
  %134 = call i32 @HAL_GetTick() #27, !dbg !2749
  call void @llvm.dbg.value(metadata i32 %134, metadata !2590, metadata !DIExpression()), !dbg !2600
  br label %135, !dbg !2750

135:                                              ; preds = %139, %133
  %136 = load volatile i32, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !2751, !tbaa !2563
  %137 = and i32 %136, 2, !dbg !2751
  %138 = icmp eq i32 %137, 0, !dbg !2752
  br i1 %138, label %139, label %143, !dbg !2750

139:                                              ; preds = %135
  %140 = call i32 @HAL_GetTick() #27, !dbg !2753
  %141 = sub i32 %140, %134, !dbg !2756
  %142 = icmp ugt i32 %141, 2, !dbg !2757
  br i1 %142, label %298, label %135, !dbg !2758, !llvm.loop !2759

143:                                              ; preds = %135
  call fastcc void @RCC_Delay(), !dbg !2761
  br label %154, !dbg !2762

144:                                              ; preds = %129
  store volatile i32 0, i32* inttoptr (i32 1111622784 to i32*), align 128, !dbg !2763, !tbaa !2488
  %145 = call i32 @HAL_GetTick() #27, !dbg !2765
  call void @llvm.dbg.value(metadata i32 %145, metadata !2590, metadata !DIExpression()), !dbg !2600
  br label %146, !dbg !2766

146:                                              ; preds = %150, %144
  %147 = load volatile i32, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !2767, !tbaa !2563
  %148 = and i32 %147, 2, !dbg !2767
  %149 = icmp eq i32 %148, 0, !dbg !2768
  br i1 %149, label %154, label %150, !dbg !2766

150:                                              ; preds = %146
  %151 = call i32 @HAL_GetTick() #27, !dbg !2769
  %152 = sub i32 %151, %145, !dbg !2772
  %153 = icmp ugt i32 %152, 2, !dbg !2773
  br i1 %153, label %298, label %146, !dbg !2774, !llvm.loop !2775

154:                                              ; preds = %146, %143, %125
  %155 = load i32, i32* %5, align 4, !dbg !2777, !tbaa !2606
  %156 = and i32 %155, 4, !dbg !2778
  %157 = icmp eq i32 %156, 0, !dbg !2779
  br i1 %157, label %231, label %158, !dbg !2780

158:                                              ; preds = %154
  call void @llvm.dbg.value(metadata i32 0, metadata !2592, metadata !DIExpression()), !dbg !2781
  %159 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !2782, !tbaa !2783
  %160 = and i32 %159, 268435456, !dbg !2782
  %161 = icmp eq i32 %160, 0, !dbg !2782
  br i1 %161, label %162, label %170, !dbg !2784

162:                                              ; preds = %158
  %163 = bitcast i32* %2 to i8*, !dbg !2785
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %163), !dbg !2785
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2596, metadata !DIExpression()), !dbg !2785
  %164 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !2785, !tbaa !2783
  %165 = or i32 %164, 268435456, !dbg !2785
  store volatile i32 %165, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !2785, !tbaa !2783
  %166 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !2785, !tbaa !2783
  %167 = and i32 %166, 268435456, !dbg !2785
  store volatile i32 %167, i32* %2, align 4, !dbg !2785, !tbaa !2488
  %168 = load volatile i32, i32* %2, align 4, !dbg !2785, !tbaa !2488
  %169 = bitcast i32* %2 to i8*, !dbg !2786
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %169), !dbg !2786
  call void @llvm.dbg.value(metadata i32 1, metadata !2592, metadata !DIExpression()), !dbg !2781
  br label %170, !dbg !2787

170:                                              ; preds = %162, %158
  call void @llvm.dbg.value(metadata i32 undef, metadata !2592, metadata !DIExpression()), !dbg !2781
  %171 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !2788, !tbaa !2790
  %172 = and i32 %171, 256, !dbg !2788
  %173 = icmp eq i32 %172, 0, !dbg !2788
  br i1 %173, label %174, label %186, !dbg !2792

174:                                              ; preds = %170
  %175 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !2793, !tbaa !2790
  %176 = or i32 %175, 256, !dbg !2793
  store volatile i32 %176, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !2793, !tbaa !2790
  %177 = call i32 @HAL_GetTick() #27, !dbg !2795
  call void @llvm.dbg.value(metadata i32 %177, metadata !2590, metadata !DIExpression()), !dbg !2600
  br label %178, !dbg !2796

178:                                              ; preds = %182, %174
  %179 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !2797, !tbaa !2790
  %180 = and i32 %179, 256, !dbg !2797
  %181 = icmp eq i32 %180, 0, !dbg !2797
  br i1 %181, label %182, label %186, !dbg !2796

182:                                              ; preds = %178
  %183 = call i32 @HAL_GetTick() #27, !dbg !2798
  %184 = sub i32 %183, %177, !dbg !2801
  %185 = icmp ugt i32 %184, 100, !dbg !2802
  br i1 %185, label %298, label %178, !dbg !2803, !llvm.loop !2804

186:                                              ; preds = %178, %170
  %187 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !2806
  %188 = load i32, i32* %187, align 4, !dbg !2806, !tbaa !2809
  switch i32 %188, label %202 [
    i32 1, label %189
    i32 0, label %192
    i32 5, label %197
  ], !dbg !2810

189:                                              ; preds = %186
  %190 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2811, !tbaa !2813
  %191 = or i32 %190, 1, !dbg !2811
  br label %207, !dbg !2811

192:                                              ; preds = %186
  %193 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2814, !tbaa !2813
  %194 = and i32 %193, -2, !dbg !2814
  store volatile i32 %194, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2814, !tbaa !2813
  %195 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2814, !tbaa !2813
  %196 = and i32 %195, -5, !dbg !2814
  br label %207, !dbg !2814

197:                                              ; preds = %186
  %198 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2817, !tbaa !2813
  %199 = or i32 %198, 4, !dbg !2817
  store volatile i32 %199, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2817, !tbaa !2813
  %200 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2817, !tbaa !2813
  %201 = or i32 %200, 1, !dbg !2817
  br label %207, !dbg !2817

202:                                              ; preds = %186
  %203 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2820, !tbaa !2813
  %204 = and i32 %203, -2, !dbg !2820
  store volatile i32 %204, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2820, !tbaa !2813
  %205 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2820, !tbaa !2813
  %206 = and i32 %205, -5, !dbg !2820
  br label %207

207:                                              ; preds = %192, %202, %197, %189
  %208 = phi i32 [ %196, %192 ], [ %206, %202 ], [ %201, %197 ], [ %191, %189 ]
  store volatile i32 %208, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2822, !tbaa !2813
  %209 = icmp eq i32 %188, 0, !dbg !2823
  %210 = call i32 @HAL_GetTick() #27, !dbg !2825
  call void @llvm.dbg.value(metadata i32 %210, metadata !2590, metadata !DIExpression()), !dbg !2600
  call void @llvm.dbg.value(metadata i32 %210, metadata !2590, metadata !DIExpression()), !dbg !2600
  br i1 %209, label %219, label %211, !dbg !2826

211:                                              ; preds = %207, %215
  %212 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2827, !tbaa !2813
  %213 = and i32 %212, 2, !dbg !2827
  %214 = icmp eq i32 %213, 0, !dbg !2829
  br i1 %214, label %215, label %227, !dbg !2830

215:                                              ; preds = %211
  %216 = call i32 @HAL_GetTick() #27, !dbg !2831
  %217 = sub i32 %216, %210, !dbg !2834
  %218 = icmp ugt i32 %217, 5000, !dbg !2835
  br i1 %218, label %298, label %211, !dbg !2836, !llvm.loop !2837

219:                                              ; preds = %207, %223
  %220 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2839, !tbaa !2813
  %221 = and i32 %220, 2, !dbg !2839
  %222 = icmp eq i32 %221, 0, !dbg !2841
  br i1 %222, label %227, label %223, !dbg !2842

223:                                              ; preds = %219
  %224 = call i32 @HAL_GetTick() #27, !dbg !2843
  %225 = sub i32 %224, %210, !dbg !2846
  %226 = icmp ugt i32 %225, 5000, !dbg !2847
  br i1 %226, label %298, label %219, !dbg !2848, !llvm.loop !2849

227:                                              ; preds = %211, %219
  br i1 %161, label %228, label %231, !dbg !2851

228:                                              ; preds = %227
  %229 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !2852, !tbaa !2783
  %230 = and i32 %229, -268435457, !dbg !2852
  store volatile i32 %230, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !2852, !tbaa !2783
  br label %231, !dbg !2855

231:                                              ; preds = %228, %227, %154
  %232 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 0, !dbg !2856
  %233 = load i32, i32* %232, align 4, !dbg !2856, !tbaa !2858
  %234 = icmp eq i32 %233, 0, !dbg !2859
  br i1 %234, label %297, label %235, !dbg !2860

235:                                              ; preds = %231
  %236 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2861, !tbaa !2445
  %237 = and i32 %236, 12, !dbg !2861
  %238 = icmp eq i32 %237, 8, !dbg !2864
  br i1 %238, label %284, label %239, !dbg !2865

239:                                              ; preds = %235
  %240 = icmp eq i32 %233, 2, !dbg !2866
  store volatile i32 0, i32* inttoptr (i32 1111621728 to i32*), align 32, !dbg !2869, !tbaa !2488
  %241 = call i32 @HAL_GetTick() #27, !dbg !2869
  call void @llvm.dbg.value(metadata i32 %241, metadata !2590, metadata !DIExpression()), !dbg !2600
  call void @llvm.dbg.value(metadata i32 %241, metadata !2590, metadata !DIExpression()), !dbg !2600
  br i1 %240, label %242, label %276, !dbg !2870

242:                                              ; preds = %239, %246
  %243 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2871, !tbaa !2441
  %244 = and i32 %243, 33554432, !dbg !2871
  %245 = icmp eq i32 %244, 0, !dbg !2873
  br i1 %245, label %250, label %246, !dbg !2874

246:                                              ; preds = %242
  %247 = call i32 @HAL_GetTick() #27, !dbg !2875
  %248 = sub i32 %247, %241, !dbg !2878
  %249 = icmp ugt i32 %248, 2, !dbg !2879
  br i1 %249, label %298, label %242, !dbg !2880, !llvm.loop !2881

250:                                              ; preds = %242
  %251 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 1, !dbg !2883
  %252 = load i32, i32* %251, align 4, !dbg !2883, !tbaa !2885
  %253 = icmp eq i32 %252, 65536, !dbg !2886
  br i1 %253, label %254, label %260, !dbg !2887

254:                                              ; preds = %250
  %255 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2888, !tbaa !2445
  %256 = and i32 %255, -131073, !dbg !2888
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !2888
  %258 = load i32, i32* %257, align 4, !dbg !2888, !tbaa !2890
  %259 = or i32 %256, %258, !dbg !2888
  store volatile i32 %259, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2888, !tbaa !2445
  br label %260, !dbg !2891

260:                                              ; preds = %254, %250
  %261 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2892, !tbaa !2445
  %262 = and i32 %261, -3997697, !dbg !2892
  %263 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 2, !dbg !2892
  %264 = load i32, i32* %263, align 4, !dbg !2892, !tbaa !2893
  %265 = or i32 %264, %252, !dbg !2892
  %266 = or i32 %265, %262, !dbg !2892
  store volatile i32 %266, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2892, !tbaa !2445
  store volatile i32 1, i32* inttoptr (i32 1111621728 to i32*), align 32, !dbg !2894, !tbaa !2488
  %267 = call i32 @HAL_GetTick() #27, !dbg !2895
  call void @llvm.dbg.value(metadata i32 %267, metadata !2590, metadata !DIExpression()), !dbg !2600
  br label %268, !dbg !2896

268:                                              ; preds = %272, %260
  %269 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2897, !tbaa !2441
  %270 = and i32 %269, 33554432, !dbg !2897
  %271 = icmp eq i32 %270, 0, !dbg !2898
  br i1 %271, label %272, label %297, !dbg !2896

272:                                              ; preds = %268
  %273 = call i32 @HAL_GetTick() #27, !dbg !2899
  %274 = sub i32 %273, %267, !dbg !2902
  %275 = icmp ugt i32 %274, 2, !dbg !2903
  br i1 %275, label %298, label %268, !dbg !2904, !llvm.loop !2905

276:                                              ; preds = %239, %280
  %277 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2907, !tbaa !2441
  %278 = and i32 %277, 33554432, !dbg !2907
  %279 = icmp eq i32 %278, 0, !dbg !2909
  br i1 %279, label %297, label %280, !dbg !2910

280:                                              ; preds = %276
  %281 = call i32 @HAL_GetTick() #27, !dbg !2911
  %282 = sub i32 %281, %241, !dbg !2914
  %283 = icmp ugt i32 %282, 2, !dbg !2915
  br i1 %283, label %298, label %276, !dbg !2916, !llvm.loop !2917

284:                                              ; preds = %235
  %285 = icmp eq i32 %233, 1, !dbg !2919
  br i1 %285, label %298, label %286, !dbg !2922

286:                                              ; preds = %284
  %287 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2923, !tbaa !2445
  call void @llvm.dbg.value(metadata i32 %287, metadata !2591, metadata !DIExpression()), !dbg !2600
  %288 = and i32 %287, 65536, !dbg !2925
  %289 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 1, !dbg !2927
  %290 = load i32, i32* %289, align 4, !dbg !2927, !tbaa !2885
  %291 = icmp eq i32 %288, %290, !dbg !2928
  br i1 %291, label %292, label %298, !dbg !2929

292:                                              ; preds = %286
  %293 = and i32 %287, 3932160, !dbg !2930
  %294 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 2, !dbg !2931
  %295 = load i32, i32* %294, align 4, !dbg !2931, !tbaa !2893
  %296 = icmp eq i32 %293, %295, !dbg !2932
  br i1 %296, label %297, label %298, !dbg !2933

297:                                              ; preds = %276, %268, %292, %231
  br label %298, !dbg !2934

298:                                              ; preds = %58, %66, %104, %114, %139, %150, %182, %215, %223, %280, %246, %272, %286, %292, %284, %90, %25, %1, %297
  %299 = phi i32 [ 0, %297 ], [ 1, %1 ], [ 1, %25 ], [ 1, %90 ], [ 1, %284 ], [ 1, %292 ], [ 1, %286 ], [ 3, %272 ], [ 3, %246 ], [ 3, %280 ], [ 3, %223 ], [ 3, %215 ], [ 3, %182 ], [ 3, %150 ], [ 3, %139 ], [ 3, %114 ], [ 3, %104 ], [ 3, %66 ], [ 3, %58 ], !dbg !2600
  ret i32 %299, !dbg !2935
}

; Function Attrs: noinline nounwind
define internal fastcc void @RCC_Delay() unnamed_addr #8 !dbg !2936 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !2940, metadata !DIExpression()), !dbg !2942
  %2 = bitcast i32* %1 to i8*, !dbg !2943
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !2943
  call void @llvm.dbg.declare(metadata i32* %1, metadata !2941, metadata !DIExpression()), !dbg !2944
  %3 = load i32, i32* @SystemCoreClock, align 4, !dbg !2945, !tbaa !2488
  %4 = udiv i32 %3, 8000, !dbg !2946
  store volatile i32 %4, i32* %1, align 4, !dbg !2944, !tbaa !2488
  br label %5, !dbg !2947

5:                                                ; preds = %5, %0
  call void asm sideeffect "nop", ""() #27, !dbg !2948, !srcloc !2950
  %6 = load volatile i32, i32* %1, align 4, !dbg !2951, !tbaa !2488
  %7 = add i32 %6, -1, !dbg !2951
  store volatile i32 %7, i32* %1, align 4, !dbg !2951, !tbaa !2488
  %8 = icmp eq i32 %6, 0, !dbg !2952
  br i1 %8, label %9, label %5, !dbg !2952, !llvm.loop !2953

9:                                                ; preds = %5
  %10 = bitcast i32* %1 to i8*, !dbg !2955
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !2955
  ret void, !dbg !2955
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !2956 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !2969, metadata !DIExpression()), !dbg !2972
  call void @llvm.dbg.value(metadata i32 %1, metadata !2970, metadata !DIExpression()), !dbg !2972
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !2973
  br i1 %3, label %113, label %4, !dbg !2975

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !2976, !tbaa !2978
  %6 = and i32 %5, 7, !dbg !2976
  %7 = icmp ult i32 %6, %1, !dbg !2980
  br i1 %7, label %8, label %15, !dbg !2981

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !2982, !tbaa !2978
  %10 = and i32 %9, -8, !dbg !2982
  %11 = or i32 %10, %1, !dbg !2982
  store volatile i32 %11, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !2982, !tbaa !2978
  %12 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !2984, !tbaa !2978
  %13 = and i32 %12, 7, !dbg !2984
  %14 = icmp eq i32 %13, %1, !dbg !2986
  br i1 %14, label %15, label %113, !dbg !2987

15:                                               ; preds = %8, %4
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !2988
  %17 = load i32, i32* %16, align 4, !dbg !2988, !tbaa !2990
  %18 = and i32 %17, 2, !dbg !2992
  %19 = icmp eq i32 %18, 0, !dbg !2993
  br i1 %19, label %38, label %20, !dbg !2994

20:                                               ; preds = %15
  %21 = and i32 %17, 4, !dbg !2995
  %22 = icmp eq i32 %21, 0, !dbg !2998
  br i1 %22, label %26, label %23, !dbg !2999

23:                                               ; preds = %20
  %24 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3000, !tbaa !2445
  %25 = or i32 %24, 1792, !dbg !3000
  store volatile i32 %25, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3000, !tbaa !2445
  br label %26, !dbg !3002

26:                                               ; preds = %23, %20
  %27 = and i32 %17, 8, !dbg !3003
  %28 = icmp eq i32 %27, 0, !dbg !3005
  br i1 %28, label %32, label %29, !dbg !3006

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3007, !tbaa !2445
  %31 = or i32 %30, 14336, !dbg !3007
  store volatile i32 %31, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3007, !tbaa !2445
  br label %32, !dbg !3009

32:                                               ; preds = %29, %26
  %33 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3010, !tbaa !2445
  %34 = and i32 %33, -241, !dbg !3010
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !3010
  %36 = load i32, i32* %35, align 4, !dbg !3010, !tbaa !3011
  %37 = or i32 %34, %36, !dbg !3010
  store volatile i32 %37, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3010, !tbaa !2445
  br label %38, !dbg !3012

38:                                               ; preds = %32, %15
  %39 = and i32 %17, 1, !dbg !3013
  %40 = icmp eq i32 %39, 0, !dbg !3015
  br i1 %40, label %71, label %41, !dbg !3016

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !3017
  %43 = load i32, i32* %42, align 4, !dbg !3017, !tbaa !3020
  switch i32 %43, label %52 [
    i32 1, label %44
    i32 2, label %48
  ], !dbg !3021

44:                                               ; preds = %41
  %45 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3022, !tbaa !2441
  %46 = and i32 %45, 131072, !dbg !3022
  %47 = icmp eq i32 %46, 0, !dbg !3025
  br i1 %47, label %113, label %56, !dbg !3026

48:                                               ; preds = %41
  %49 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3027, !tbaa !2441
  %50 = and i32 %49, 33554432, !dbg !3027
  %51 = icmp eq i32 %50, 0, !dbg !3031
  br i1 %51, label %113, label %56, !dbg !3032

52:                                               ; preds = %41
  %53 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3033, !tbaa !2441
  %54 = and i32 %53, 2, !dbg !3033
  %55 = icmp eq i32 %54, 0, !dbg !3036
  br i1 %55, label %113, label %56, !dbg !3037

56:                                               ; preds = %48, %52, %44
  %57 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3038, !tbaa !2445
  %58 = and i32 %57, -4, !dbg !3038
  %59 = or i32 %58, %43, !dbg !3038
  store volatile i32 %59, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3038, !tbaa !2445
  %60 = call i32 @HAL_GetTick() #27, !dbg !3039
  call void @llvm.dbg.value(metadata i32 %60, metadata !2971, metadata !DIExpression()), !dbg !2972
  br label %61, !dbg !3040

61:                                               ; preds = %67, %56
  %62 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3041, !tbaa !2445
  %63 = and i32 %62, 12, !dbg !3041
  %64 = load i32, i32* %42, align 4, !dbg !3042, !tbaa !3020
  %65 = shl i32 %64, 2, !dbg !3043
  %66 = icmp eq i32 %63, %65, !dbg !3044
  br i1 %66, label %71, label %67, !dbg !3040

67:                                               ; preds = %61
  %68 = call i32 @HAL_GetTick() #27, !dbg !3045
  %69 = sub i32 %68, %60, !dbg !3048
  %70 = icmp ugt i32 %69, 5000, !dbg !3049
  br i1 %70, label %113, label %61, !dbg !3050, !llvm.loop !3051

71:                                               ; preds = %61, %38
  %72 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3053, !tbaa !2978
  %73 = and i32 %72, 7, !dbg !3053
  %74 = icmp ugt i32 %73, %1, !dbg !3055
  br i1 %74, label %75, label %82, !dbg !3056

75:                                               ; preds = %71
  %76 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3057, !tbaa !2978
  %77 = and i32 %76, -8, !dbg !3057
  %78 = or i32 %77, %1, !dbg !3057
  store volatile i32 %78, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3057, !tbaa !2978
  %79 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3059, !tbaa !2978
  %80 = and i32 %79, 7, !dbg !3059
  %81 = icmp eq i32 %80, %1, !dbg !3061
  br i1 %81, label %82, label %113, !dbg !3062

82:                                               ; preds = %75, %71
  %83 = load i32, i32* %16, align 4, !dbg !3063, !tbaa !2990
  %84 = and i32 %83, 4, !dbg !3065
  %85 = icmp eq i32 %84, 0, !dbg !3066
  br i1 %85, label %92, label %86, !dbg !3067

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3068, !tbaa !2445
  %88 = and i32 %87, -1793, !dbg !3068
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !3068
  %90 = load i32, i32* %89, align 4, !dbg !3068, !tbaa !3070
  %91 = or i32 %88, %90, !dbg !3068
  store volatile i32 %91, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3068, !tbaa !2445
  br label %92, !dbg !3071

92:                                               ; preds = %86, %82
  %93 = and i32 %83, 8, !dbg !3072
  %94 = icmp eq i32 %93, 0, !dbg !3074
  br i1 %94, label %102, label %95, !dbg !3075

95:                                               ; preds = %92
  %96 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3076, !tbaa !2445
  %97 = and i32 %96, -14337, !dbg !3076
  %98 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !3076
  %99 = load i32, i32* %98, align 4, !dbg !3076, !tbaa !3078
  %100 = shl i32 %99, 3, !dbg !3076
  %101 = or i32 %100, %97, !dbg !3076
  store volatile i32 %101, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3076, !tbaa !2445
  br label %102, !dbg !3079

102:                                              ; preds = %95, %92
  %103 = call i32 @HAL_RCC_GetSysClockFreq(), !dbg !3080
  %104 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3081, !tbaa !2445
  %105 = lshr i32 %104, 4, !dbg !3082
  %106 = and i32 %105, 15, !dbg !3082
  %107 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %106, !dbg !3083
  %108 = load i8, i8* %107, align 1, !dbg !3083, !tbaa !1609
  %109 = zext i8 %108 to i32, !dbg !3083
  %110 = lshr i32 %103, %109, !dbg !3084
  store i32 %110, i32* @SystemCoreClock, align 4, !dbg !3085, !tbaa !2488
  %111 = load i32, i32* @uwTickPrio, align 4, !dbg !3086, !tbaa !2488
  %112 = call i32 @HAL_InitTick(i32 noundef %111) #27, !dbg !3087
  br label %113, !dbg !3088

113:                                              ; preds = %67, %75, %52, %48, %44, %8, %2, %102
  %114 = phi i32 [ 0, %102 ], [ 1, %2 ], [ 1, %8 ], [ 1, %44 ], [ 1, %48 ], [ 1, %52 ], [ 1, %75 ], [ 3, %67 ], !dbg !2972
  ret i32 %114, !dbg !3089
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #14 !dbg !3090 {
  call void @llvm.dbg.declare(metadata [16 x i8]* @__const.HAL_RCC_GetSysClockFreq.aPLLMULFactorTable, metadata !3094, metadata !DIExpression()), !dbg !3102
  call void @llvm.dbg.declare(metadata [2 x i8]* @__const.HAL_RCC_GetSysClockFreq.aPredivFactorTable, metadata !3095, metadata !DIExpression()), !dbg !3103
  call void @llvm.dbg.value(metadata i32 0, metadata !3097, metadata !DIExpression()), !dbg !3104
  call void @llvm.dbg.value(metadata i32 0, metadata !3098, metadata !DIExpression()), !dbg !3104
  call void @llvm.dbg.value(metadata i32 0, metadata !3099, metadata !DIExpression()), !dbg !3104
  call void @llvm.dbg.value(metadata i32 0, metadata !3100, metadata !DIExpression()), !dbg !3104
  call void @llvm.dbg.value(metadata i32 0, metadata !3101, metadata !DIExpression()), !dbg !3104
  %1 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3105, !tbaa !2445
  call void @llvm.dbg.value(metadata i32 %1, metadata !3097, metadata !DIExpression()), !dbg !3104
  %2 = and i32 %1, 12, !dbg !3106
  %3 = icmp eq i32 %2, 8, !dbg !3107
  br i1 %3, label %4, label %23, !dbg !3107

4:                                                ; preds = %0
  %5 = lshr i32 %1, 18, !dbg !3108
  %6 = and i32 %5, 15, !dbg !3108
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @__const.HAL_RCC_GetSysClockFreq.aPLLMULFactorTable, i32 0, i32 %6, !dbg !3111
  %8 = load i8, i8* %7, align 1, !dbg !3111, !tbaa !1609
  %9 = zext i8 %8 to i32, !dbg !3111
  call void @llvm.dbg.value(metadata i32 %9, metadata !3100, metadata !DIExpression()), !dbg !3104
  %10 = and i32 %1, 65536, !dbg !3112
  %11 = icmp eq i32 %10, 0, !dbg !3114
  br i1 %11, label %21, label %12, !dbg !3115

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3116, !tbaa !2445
  %14 = lshr i32 %13, 17, !dbg !3118
  %15 = and i32 %14, 1, !dbg !3118
  %16 = getelementptr inbounds [2 x i8], [2 x i8]* @__const.HAL_RCC_GetSysClockFreq.aPredivFactorTable, i32 0, i32 %15, !dbg !3119
  %17 = load i8, i8* %16, align 1, !dbg !3119, !tbaa !1609
  %18 = zext i8 %17 to i32, !dbg !3119
  call void @llvm.dbg.value(metadata i32 %18, metadata !3098, metadata !DIExpression()), !dbg !3104
  %19 = mul nuw nsw i32 %9, 8000000, !dbg !3120
  %20 = udiv i32 %19, %18, !dbg !3121
  call void @llvm.dbg.value(metadata i32 %20, metadata !3099, metadata !DIExpression()), !dbg !3104
  br label %23, !dbg !3122

21:                                               ; preds = %4
  %22 = mul nuw nsw i32 %9, 4000000, !dbg !3123
  call void @llvm.dbg.value(metadata i32 %22, metadata !3099, metadata !DIExpression()), !dbg !3104
  br label %23

23:                                               ; preds = %0, %12, %21
  %24 = phi i32 [ %20, %12 ], [ %22, %21 ], [ 8000000, %0 ], !dbg !3125
  call void @llvm.dbg.value(metadata i32 %24, metadata !3101, metadata !DIExpression()), !dbg !3104
  ret i32 %24, !dbg !3126
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !3127 {
  %4 = alloca %struct.DMA_Channel_TypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3131, metadata !DIExpression()), !dbg !3144
  call void @llvm.dbg.value(metadata i32 %1, metadata !3132, metadata !DIExpression()), !dbg !3144
  call void @llvm.dbg.value(metadata i32 %2, metadata !3133, metadata !DIExpression()), !dbg !3144
  %6 = bitcast %struct.DMA_Channel_TypeDef* %4 to i8*, !dbg !3145
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #27, !dbg !3145
  call void @llvm.dbg.declare(metadata %struct.DMA_Channel_TypeDef* %4, metadata !3134, metadata !DIExpression()), !dbg !3146
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(16) %6, i8 0, i32 16, i1 false), !dbg !3146
  %7 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %4, i32 0, i32 1, !dbg !3147
  store i32 2, i32* %7, align 4, !dbg !3148, !tbaa !3149
  %8 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %4, i32 0, i32 3, !dbg !3151
  store i32 3, i32* %8, align 4, !dbg !3152, !tbaa !3153
  %9 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %4, i32 0, i32 2, !dbg !3154
  store i32 0, i32* %9, align 4, !dbg !3155, !tbaa !3156
  %10 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %4, i32 0, i32 0, !dbg !3157
  store i32 256, i32* %10, align 4, !dbg !3158, !tbaa !3159
  %11 = bitcast i32* %5 to i8*, !dbg !3160
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11), !dbg !3160
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3142, metadata !DIExpression()), !dbg !3160
  %12 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !3160, !tbaa !3161
  %13 = or i32 %12, 4, !dbg !3160
  store volatile i32 %13, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !3160, !tbaa !3161
  %14 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !3160, !tbaa !3161
  %15 = and i32 %14, 4, !dbg !3160
  store volatile i32 %15, i32* %5, align 4, !dbg !3160, !tbaa !2488
  %16 = load volatile i32, i32* %5, align 4, !dbg !3160, !tbaa !2488
  %17 = bitcast i32* %5 to i8*, !dbg !3162
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17), !dbg !3162
  call void @HAL_GPIO_Init(%struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073809408 to %struct.USART_TypeDef*), %struct.DMA_Channel_TypeDef* noundef nonnull %4) #27, !dbg !3163
  %18 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3164, !tbaa !2445
  %19 = and i32 %18, -117440513, !dbg !3164
  %20 = or i32 %19, %1, !dbg !3164
  store volatile i32 %20, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3164, !tbaa !2445
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #27, !dbg !3165
  ret void, !dbg !3165
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #13 !dbg !3166 {
  store volatile i32 1, i32* inttoptr (i32 1111621708 to i32*), align 4, !dbg !3167, !tbaa !2488
  ret void, !dbg !3168
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #13 !dbg !3169 {
  store volatile i32 0, i32* inttoptr (i32 1111621708 to i32*), align 4, !dbg !3170, !tbaa !2488
  ret void, !dbg !3171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #15 !dbg !3172 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !3173, !tbaa !2488
  ret i32 %1, !dbg !3174
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #14 !dbg !3175 {
  %1 = call i32 @HAL_RCC_GetHCLKFreq(), !dbg !3176
  %2 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3177, !tbaa !2445
  %3 = lshr i32 %2, 8, !dbg !3178
  %4 = and i32 %3, 7, !dbg !3178
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !3179
  %6 = load i8, i8* %5, align 1, !dbg !3179, !tbaa !1609
  %7 = zext i8 %6 to i32, !dbg !3179
  %8 = lshr i32 %1, %7, !dbg !3180
  ret i32 %8, !dbg !3181
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #14 !dbg !3182 {
  %1 = call i32 @HAL_RCC_GetHCLKFreq(), !dbg !3183
  %2 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3184, !tbaa !2445
  %3 = lshr i32 %2, 11, !dbg !3185
  %4 = and i32 %3, 7, !dbg !3185
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !3186
  %6 = load i8, i8* %5, align 1, !dbg !3186, !tbaa !1609
  %7 = zext i8 %6 to i32, !dbg !3186
  %8 = lshr i32 %1, %7, !dbg !3187
  ret i32 %8, !dbg !3188
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #14 !dbg !3189 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !3193, metadata !DIExpression()), !dbg !3194
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !3195
  store i32 15, i32* %2, align 4, !dbg !3196, !tbaa !2606
  %3 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3197, !tbaa !2441
  %4 = and i32 %3, 262144, !dbg !3199
  %5 = icmp eq i32 %4, 0, !dbg !3200
  br i1 %5, label %8, label %6, !dbg !3201

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !3202
  store i32 327680, i32* %7, align 4, !dbg !3204, !tbaa !2629
  br label %15, !dbg !3205

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3206, !tbaa !2441
  %10 = and i32 %9, 65536, !dbg !3208
  %11 = icmp eq i32 %10, 0, !dbg !3209
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !3210
  br i1 %11, label %14, label %13, !dbg !3211

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !3212, !tbaa !2629
  br label %15, !dbg !3214

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !3215, !tbaa !2629
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3217, !tbaa !2445
  %17 = and i32 %16, 131072, !dbg !3217
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !3218
  store i32 %17, i32* %18, align 4, !dbg !3219, !tbaa !2890
  %19 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3220, !tbaa !2441
  %20 = and i32 %19, 1, !dbg !3222
  %21 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !3223
  store i32 %20, i32* %21, align 4, !dbg !3223, !tbaa !2698
  %22 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3224, !tbaa !2441
  %23 = lshr i32 %22, 3, !dbg !3225
  %24 = and i32 %23, 31, !dbg !3225
  %25 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !3226
  store i32 %24, i32* %25, align 4, !dbg !3227, !tbaa !2735
  %26 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3228, !tbaa !2813
  %27 = and i32 %26, 4, !dbg !3230
  %28 = icmp eq i32 %27, 0, !dbg !3231
  br i1 %28, label %31, label %29, !dbg !3232

29:                                               ; preds = %15
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !3233
  store i32 5, i32* %30, align 4, !dbg !3235, !tbaa !2809
  br label %38, !dbg !3236

31:                                               ; preds = %15
  %32 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3237, !tbaa !2813
  %33 = and i32 %32, 1, !dbg !3239
  %34 = icmp eq i32 %33, 0, !dbg !3240
  %35 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !3241
  br i1 %34, label %37, label %36, !dbg !3242

36:                                               ; preds = %31
  store i32 1, i32* %35, align 4, !dbg !3243, !tbaa !2809
  br label %38, !dbg !3245

37:                                               ; preds = %31
  store i32 0, i32* %35, align 4, !dbg !3246, !tbaa !2809
  br label %38

38:                                               ; preds = %36, %37, %29
  %39 = load volatile i32, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !3248, !tbaa !2563
  %40 = and i32 %39, 1, !dbg !3250
  %41 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !3251
  store i32 %40, i32* %41, align 4, !dbg !3251, !tbaa !2744
  %42 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3252, !tbaa !2441
  %43 = and i32 %42, 16777216, !dbg !3254
  %44 = icmp eq i32 %43, 0, !dbg !3255
  %45 = select i1 %44, i32 1, i32 2, !dbg !3256
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 0, !dbg !3257
  store i32 %45, i32* %46, align 4, !dbg !3257, !tbaa !2858
  %47 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3258, !tbaa !2445
  %48 = and i32 %47, 65536, !dbg !3259
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 1, !dbg !3260
  store i32 %48, i32* %49, align 4, !dbg !3261, !tbaa !2885
  %50 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3262, !tbaa !2445
  %51 = and i32 %50, 3932160, !dbg !3263
  %52 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 2, !dbg !3264
  store i32 %51, i32* %52, align 4, !dbg !3265, !tbaa !2893
  ret void, !dbg !3266
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #14 !dbg !3267 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !3271, metadata !DIExpression()), !dbg !3273
  call void @llvm.dbg.value(metadata i32* %1, metadata !3272, metadata !DIExpression()), !dbg !3273
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !3274
  store i32 15, i32* %3, align 4, !dbg !3275, !tbaa !2990
  %4 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3276, !tbaa !2445
  %5 = and i32 %4, 3, !dbg !3277
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !3278
  store i32 %5, i32* %6, align 4, !dbg !3279, !tbaa !3020
  %7 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3280, !tbaa !2445
  %8 = and i32 %7, 240, !dbg !3281
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !3282
  store i32 %8, i32* %9, align 4, !dbg !3283, !tbaa !3011
  %10 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3284, !tbaa !2445
  %11 = and i32 %10, 1792, !dbg !3285
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !3286
  store i32 %11, i32* %12, align 4, !dbg !3287, !tbaa !3070
  %13 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3288, !tbaa !2445
  %14 = lshr i32 %13, 3, !dbg !3289
  %15 = and i32 %14, 1792, !dbg !3289
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !3290
  store i32 %15, i32* %16, align 4, !dbg !3291, !tbaa !3078
  %17 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3292, !tbaa !2978
  %18 = and i32 %17, 7, !dbg !3293
  store i32 %18, i32* %1, align 4, !dbg !3294, !tbaa !2488
  ret void, !dbg !3295
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #8 !dbg !3296 {
  %1 = load volatile i32, i32* inttoptr (i32 1073877000 to i32*), align 8, !dbg !3297, !tbaa !2450
  %2 = and i32 %1, 128, !dbg !3297
  %3 = icmp eq i32 %2, 0, !dbg !3297
  br i1 %3, label %5, label %4, !dbg !3299

4:                                                ; preds = %0
  call void @HAL_RCC_CSSCallback(), !dbg !3300
  store volatile i8 -128, i8* inttoptr (i32 1073877002 to i8*), align 2, !dbg !3302, !tbaa !1609
  br label %5, !dbg !3303

5:                                                ; preds = %4, %0
  ret void, !dbg !3304
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #8 !dbg !3305 {
  ret void, !dbg !3306
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_Init() local_unnamed_addr #8 !dbg !3307 {
  %1 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3308, !tbaa !2978
  %2 = or i32 %1, 16, !dbg !3308
  store volatile i32 %2, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3308, !tbaa !2978
  call void @HAL_NVIC_SetPriorityGrouping(i32 noundef 3) #27, !dbg !3309
  %3 = call i32 @HAL_InitTick(i32 noundef 0), !dbg !3310
  call void @HAL_MspInit(), !dbg !3311
  ret i32 0, !dbg !3312
}

; Function Attrs: noinline nounwind
define weak dso_local i32 @HAL_InitTick(i32 noundef %0) local_unnamed_addr #8 !dbg !3313 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3317, metadata !DIExpression()), !dbg !3318
  %2 = load i32, i32* @SystemCoreClock, align 4, !dbg !3319, !tbaa !2488
  %3 = load i32, i32* @uwTickFreq, align 4, !dbg !3321, !tbaa !1609
  %4 = udiv i32 1000, %3, !dbg !3322
  %5 = udiv i32 %2, %4, !dbg !3323
  %6 = call i32 @HAL_SYSTICK_Config(i32 noundef %5) #27, !dbg !3324
  %7 = icmp eq i32 %6, 0, !dbg !3325
  %8 = icmp ult i32 %0, 16
  %9 = and i1 %8, %7, !dbg !3326
  br i1 %9, label %10, label %11, !dbg !3326

10:                                               ; preds = %1
  call void @HAL_NVIC_SetPriority(i32 noundef -1, i32 noundef %0, i32 noundef 0) #27, !dbg !3327
  store i32 %0, i32* @uwTickPrio, align 4, !dbg !3330, !tbaa !2488
  br label %11, !dbg !3331

11:                                               ; preds = %1, %10
  %12 = phi i32 [ 0, %10 ], [ 1, %1 ], !dbg !3318
  ret i32 %12, !dbg !3332
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_MspInit() local_unnamed_addr #8 !dbg !3333 {
  ret void, !dbg !3334
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_DeInit() local_unnamed_addr #8 !dbg !3335 {
  store volatile i32 -1, i32* inttoptr (i32 1073877004 to i32*), align 4, !dbg !3336, !tbaa !3337
  store volatile i32 0, i32* inttoptr (i32 1073877008 to i32*), align 16, !dbg !3338, !tbaa !3339
  store volatile i32 -1, i32* inttoptr (i32 1073877004 to i32*), align 4, !dbg !3340, !tbaa !3337
  store volatile i32 0, i32* inttoptr (i32 1073877004 to i32*), align 4, !dbg !3341, !tbaa !3337
  call void @HAL_MspDeInit(), !dbg !3342
  ret i32 0, !dbg !3343
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_MspDeInit() local_unnamed_addr #8 !dbg !3344 {
  ret void, !dbg !3345
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_IncTick() local_unnamed_addr #8 !dbg !3346 {
  %1 = load i32, i32* @uwTickFreq, align 4, !dbg !3347, !tbaa !1609
  %2 = load volatile i32, i32* @uwTick, align 4, !dbg !3348, !tbaa !2488
  %3 = add i32 %2, %1, !dbg !3348
  store volatile i32 %3, i32* @uwTick, align 4, !dbg !3348, !tbaa !2488
  ret void, !dbg !3349
}

; Function Attrs: noinline nounwind
define weak dso_local i32 @HAL_GetTick() local_unnamed_addr #8 !dbg !3350 {
  %1 = load volatile i32, i32* @uwTick, align 4, !dbg !3351, !tbaa !2488
  ret i32 %1, !dbg !3352
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetTickPrio() local_unnamed_addr #15 !dbg !3353 {
  %1 = load i32, i32* @uwTickPrio, align 4, !dbg !3354, !tbaa !2488
  ret i32 %1, !dbg !3355
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_SetTickFreq(i32 noundef %0) local_unnamed_addr #8 !dbg !3356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3360, metadata !DIExpression()), !dbg !3362
  call void @llvm.dbg.value(metadata i32 0, metadata !3361, metadata !DIExpression()), !dbg !3362
  %2 = load i32, i32* @uwTickFreq, align 4, !dbg !3363, !tbaa !1609
  %3 = icmp eq i32 %2, %0, !dbg !3365
  br i1 %3, label %9, label %4, !dbg !3366

4:                                                ; preds = %1
  %5 = load i32, i32* @uwTickPrio, align 4, !dbg !3367, !tbaa !2488
  %6 = call i32 @HAL_InitTick(i32 noundef %5), !dbg !3369
  call void @llvm.dbg.value(metadata i32 %6, metadata !3361, metadata !DIExpression()), !dbg !3362
  %7 = icmp eq i32 %6, 0, !dbg !3370
  br i1 %7, label %8, label %9, !dbg !3372

8:                                                ; preds = %4
  store i32 %0, i32* @uwTickFreq, align 4, !dbg !3373, !tbaa !1609
  br label %9, !dbg !3375

9:                                                ; preds = %4, %8, %1
  %10 = phi i32 [ 0, %8 ], [ %6, %4 ], [ 0, %1 ], !dbg !3362
  call void @llvm.dbg.value(metadata i32 %10, metadata !3361, metadata !DIExpression()), !dbg !3362
  ret i32 %10, !dbg !3376
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetTickFreq() local_unnamed_addr #15 !dbg !3377 {
  %1 = load i32, i32* @uwTickFreq, align 4, !dbg !3380, !tbaa !1609
  ret i32 %1, !dbg !3381
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_Delay(i32 noundef %0) local_unnamed_addr #8 !dbg !3382 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3384, metadata !DIExpression()), !dbg !3387
  %2 = call i32 @HAL_GetTick(), !dbg !3388
  call void @llvm.dbg.value(metadata i32 %2, metadata !3385, metadata !DIExpression()), !dbg !3387
  call void @llvm.dbg.value(metadata i32 %0, metadata !3386, metadata !DIExpression()), !dbg !3387
  %3 = icmp eq i32 %0, -1, !dbg !3389
  %4 = load i32, i32* @uwTickFreq, align 4, !dbg !3391
  %5 = add i32 %4, %0, !dbg !3391
  %6 = select i1 %3, i32 -1, i32 %5, !dbg !3391
  call void @llvm.dbg.value(metadata i32 %6, metadata !3386, metadata !DIExpression()), !dbg !3387
  br label %7, !dbg !3392

7:                                                ; preds = %7, %1
  %8 = call i32 @HAL_GetTick(), !dbg !3393
  %9 = sub i32 %8, %2, !dbg !3394
  %10 = icmp ult i32 %9, %6, !dbg !3395
  br i1 %10, label %7, label %11, !dbg !3392, !llvm.loop !3396

11:                                               ; preds = %7
  ret void, !dbg !3398
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_SuspendTick() local_unnamed_addr #8 !dbg !3399 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !3400, !tbaa !3159
  %2 = and i32 %1, -3, !dbg !3400
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !3400, !tbaa !3159
  ret void, !dbg !3401
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_ResumeTick() local_unnamed_addr #8 !dbg !3402 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !3403, !tbaa !3159
  %2 = or i32 %1, 2, !dbg !3403
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !3403, !tbaa !3159
  ret void, !dbg !3404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define dso_local i32 @HAL_GetHalVersion() local_unnamed_addr #10 !dbg !3405 {
  ret i32 16843776, !dbg !3406
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_GetREVID() local_unnamed_addr #14 !dbg !3407 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600576 to i32*), align 8192, !dbg !3408, !tbaa !2790
  %2 = lshr i32 %1, 16, !dbg !3409
  ret i32 %2, !dbg !3410
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_GetDEVID() local_unnamed_addr #14 !dbg !3411 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600576 to i32*), align 8192, !dbg !3412, !tbaa !2790
  %2 = and i32 %1, 4095, !dbg !3413
  ret i32 %2, !dbg !3414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetUIDw0() local_unnamed_addr #15 !dbg !3415 {
  %1 = load i32, i32* inttoptr (i32 536868840 to i32*), align 8, !dbg !3416, !tbaa !2488
  ret i32 %1, !dbg !3417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetUIDw1() local_unnamed_addr #15 !dbg !3418 {
  %1 = load i32, i32* inttoptr (i32 536868844 to i32*), align 4, !dbg !3419, !tbaa !2488
  ret i32 %1, !dbg !3420
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetUIDw2() local_unnamed_addr #15 !dbg !3421 {
  %1 = load i32, i32* inttoptr (i32 536868848 to i32*), align 16, !dbg !3422, !tbaa !2488
  ret i32 %1, !dbg !3423
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_EnableDBGSleepMode() local_unnamed_addr #13 !dbg !3424 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3425, !tbaa !3426
  %2 = or i32 %1, 1, !dbg !3425
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3425, !tbaa !3426
  ret void, !dbg !3427
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_DisableDBGSleepMode() local_unnamed_addr #13 !dbg !3428 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3429, !tbaa !3426
  %2 = and i32 %1, -2, !dbg !3429
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3429, !tbaa !3426
  ret void, !dbg !3430
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_EnableDBGStopMode() local_unnamed_addr #13 !dbg !3431 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3432, !tbaa !3426
  %2 = or i32 %1, 2, !dbg !3432
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3432, !tbaa !3426
  ret void, !dbg !3433
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_DisableDBGStopMode() local_unnamed_addr #13 !dbg !3434 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3435, !tbaa !3426
  %2 = and i32 %1, -3, !dbg !3435
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3435, !tbaa !3426
  ret void, !dbg !3436
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_EnableDBGStandbyMode() local_unnamed_addr #13 !dbg !3437 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3438, !tbaa !3426
  %2 = or i32 %1, 4, !dbg !3438
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3438, !tbaa !3426
  ret void, !dbg !3439
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_DisableDBGStandbyMode() local_unnamed_addr #13 !dbg !3440 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3441, !tbaa !3426
  %2 = and i32 %1, -5, !dbg !3441
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3441, !tbaa !3426
  ret void, !dbg !3442
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local nonnull i32* @pxPortInitialiseStack(i32* noundef writeonly %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #5 !dbg !3443 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3450, metadata !DIExpression()), !dbg !3453
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !3451, metadata !DIExpression()), !dbg !3453
  call void @llvm.dbg.value(metadata i8* %2, metadata !3452, metadata !DIExpression()), !dbg !3453
  %4 = getelementptr inbounds i32, i32* %0, i32 -1, !dbg !3454
  call void @llvm.dbg.value(metadata i32* %4, metadata !3450, metadata !DIExpression()), !dbg !3453
  store i32 16777216, i32* %4, align 4, !dbg !3455, !tbaa !2488
  %5 = getelementptr inbounds i32, i32* %0, i32 -2, !dbg !3456
  call void @llvm.dbg.value(metadata i32* %5, metadata !3450, metadata !DIExpression()), !dbg !3453
  %6 = ptrtoint void (i8*)* %1 to i32, !dbg !3457
  %7 = and i32 %6, -2, !dbg !3458
  store i32 %7, i32* %5, align 4, !dbg !3459, !tbaa !2488
  %8 = getelementptr inbounds i32, i32* %0, i32 -3, !dbg !3460
  call void @llvm.dbg.value(metadata i32* %8, metadata !3450, metadata !DIExpression()), !dbg !3453
  store i32 ptrtoint (void ()* @prvTaskExitError to i32), i32* %8, align 4, !dbg !3461, !tbaa !2488
  %9 = getelementptr inbounds i32, i32* %0, i32 -8, !dbg !3462
  call void @llvm.dbg.value(metadata i32* %9, metadata !3450, metadata !DIExpression()), !dbg !3453
  %10 = ptrtoint i8* %2 to i32, !dbg !3463
  store i32 %10, i32* %9, align 4, !dbg !3464, !tbaa !2488
  %11 = getelementptr inbounds i32, i32* %0, i32 -16, !dbg !3465
  call void @llvm.dbg.value(metadata i32* %11, metadata !3450, metadata !DIExpression()), !dbg !3453
  ret i32* %11, !dbg !3466
}

; Function Attrs: noinline nounwind
define internal void @prvTaskExitError() #8 !dbg !3467 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !3470
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !3470
  call void @llvm.dbg.declare(metadata i32* %1, metadata !3469, metadata !DIExpression()), !dbg !3471
  store volatile i32 0, i32* %1, align 4, !dbg !3471, !tbaa !2488
  %3 = load i32, i32* @uxCriticalNesting, align 4, !dbg !3472, !tbaa !3474
  %4 = icmp eq i32 %3, -1, !dbg !3472
  %5 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !3476
  br i1 %4, label %7, label %6, !dbg !3477

6:                                                ; preds = %0, %6
  br label %6, !dbg !3478, !llvm.loop !3482

7:                                                ; preds = %0, %7
  %8 = load volatile i32, i32* %1, align 4, !dbg !3484, !tbaa !2488
  %9 = icmp eq i32 %8, 0, !dbg !3485
  br i1 %9, label %7, label %10, !dbg !3486, !llvm.loop !3487

10:                                               ; preds = %7
  %11 = bitcast i32* %1 to i8*, !dbg !3489
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11), !dbg !3489
  ret void, !dbg !3489
}

; Function Attrs: naked noinline nounwind
define dso_local void @SVC_Handler() #16 !dbg !3490 {
  call void asm sideeffect "\09ldr\09r3, pxCurrentTCBConst2\09\09\0A\09ldr r1, [r3]\09\09\09\09\09\0A\09ldr r0, [r1]\09\09\09\09\09\0A\09ldmia r0!, {r4-r11}\09\09\09\09\0A\09msr psp, r0\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\0A\09mov r0, #0 \09\09\09\09\09\09\0A\09msr\09basepri, r0\09\09\09\09\09\0A\09orr r14, #0xd\09\09\09\09\09\0A\09bx r14\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\0A\09.align 4\09\09\09\09\09\09\0ApxCurrentTCBConst2: .word pxCurrentTCB\09\09\09\09\0A", ""() #27, !dbg !3491, !srcloc !3492
  unreachable, !dbg !3493
}

; Function Attrs: noinline nounwind
define dso_local i32 @xPortStartScheduler() local_unnamed_addr #8 !dbg !3494 {
  %1 = alloca i32, align 4
  %2 = alloca i8, align 1
  %3 = bitcast i32* %1 to i8*, !dbg !3503
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3503
  call void @llvm.dbg.declare(metadata i32* %1, metadata !3498, metadata !DIExpression()), !dbg !3504
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -536812544 to i8*), metadata !3500, metadata !DIExpression()), !dbg !3505
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2), !dbg !3506
  call void @llvm.dbg.declare(metadata i8* %2, metadata !3502, metadata !DIExpression()), !dbg !3507
  %4 = load volatile i8, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !3508, !tbaa !1609
  %5 = zext i8 %4 to i32, !dbg !3508
  store volatile i32 %5, i32* %1, align 4, !dbg !3509, !tbaa !2488
  store volatile i8 -1, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !3510, !tbaa !1609
  %6 = load volatile i8, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !3511, !tbaa !1609
  store volatile i8 %6, i8* %2, align 1, !dbg !3512, !tbaa !1609
  %7 = load volatile i8, i8* %2, align 1, !dbg !3513, !tbaa !1609
  %8 = and i8 %7, 80, !dbg !3514
  store i8 %8, i8* @ucMaxSysCallPriority, align 1, !dbg !3515, !tbaa !1609
  store i32 7, i32* @ulMaxPRIGROUPValue, align 4, !dbg !3516, !tbaa !2488
  %9 = load volatile i8, i8* %2, align 1, !dbg !3517, !tbaa !1609
  %10 = icmp slt i8 %9, 0, !dbg !3518
  br i1 %10, label %11, label %18, !dbg !3519

11:                                               ; preds = %0, %11
  %12 = load i32, i32* @ulMaxPRIGROUPValue, align 4, !dbg !3520, !tbaa !2488
  %13 = add i32 %12, -1, !dbg !3520
  store i32 %13, i32* @ulMaxPRIGROUPValue, align 4, !dbg !3520, !tbaa !2488
  %14 = load volatile i8, i8* %2, align 1, !dbg !3522, !tbaa !1609
  %15 = shl i8 %14, 1, !dbg !3522
  store volatile i8 %15, i8* %2, align 1, !dbg !3522, !tbaa !1609
  %16 = load volatile i8, i8* %2, align 1, !dbg !3517, !tbaa !1609
  %17 = icmp slt i8 %16, 0, !dbg !3518
  br i1 %17, label %11, label %18, !dbg !3519, !llvm.loop !3523

18:                                               ; preds = %11, %0
  %19 = load i32, i32* @ulMaxPRIGROUPValue, align 4, !dbg !3525, !tbaa !2488
  %20 = icmp eq i32 %19, 3, !dbg !3525
  br i1 %20, label %24, label %21, !dbg !3528

21:                                               ; preds = %18
  %22 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !3529, !srcloc !3535
  call void @llvm.dbg.value(metadata i32 %22, metadata !3532, metadata !DIExpression()) #27, !dbg !3536
  br label %23, !dbg !3537

23:                                               ; preds = %23, %21
  br label %23, !dbg !3538, !llvm.loop !3541

24:                                               ; preds = %18
  %25 = shl i32 %19, 8, !dbg !3543
  %26 = and i32 %25, 1792, !dbg !3544
  store i32 %26, i32* @ulMaxPRIGROUPValue, align 4, !dbg !3544, !tbaa !2488
  %27 = load volatile i32, i32* %1, align 4, !dbg !3545, !tbaa !2488
  %28 = trunc i32 %27 to i8, !dbg !3545
  store volatile i8 %28, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !3546, !tbaa !1609
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2), !dbg !3547
  %29 = bitcast i32* %1 to i8*, !dbg !3547
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29), !dbg !3547
  %30 = load volatile i32, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !3548, !tbaa !2488
  %31 = or i32 %30, 15728640, !dbg !3548
  store volatile i32 %31, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !3548, !tbaa !2488
  %32 = load volatile i32, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !3549, !tbaa !2488
  %33 = or i32 %32, -268435456, !dbg !3549
  store volatile i32 %33, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !3549, !tbaa !2488
  call void @vPortSetupTimerInterrupt(), !dbg !3550
  store i32 0, i32* @uxCriticalNesting, align 4, !dbg !3551, !tbaa !3474
  call void @prvPortStartFirstTask(), !dbg !3552
  call void @vTaskSwitchContext() #27, !dbg !3553
  call void @prvTaskExitError(), !dbg !3554
  ret i32 0, !dbg !3555
}

; Function Attrs: noinline nounwind
define weak dso_local void @vPortSetupTimerInterrupt() local_unnamed_addr #8 !dbg !3556 {
  store volatile i32 0, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !3557, !tbaa !2488
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !3558, !tbaa !2488
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !3559, !tbaa !2488
  %2 = udiv i32 %1, 1000, !dbg !3560
  %3 = add nsw i32 %2, -1, !dbg !3561
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !3562, !tbaa !2488
  store volatile i32 7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !3563, !tbaa !2488
  ret void, !dbg !3564
}

; Function Attrs: naked noinline nounwind
define internal void @prvPortStartFirstTask() #16 !dbg !3565 {
  call void asm sideeffect " ldr r0, =0xE000ED08 \09\0A ldr r0, [r0] \09\09\09\0A ldr r0, [r0] \09\09\09\0A msr msp, r0\09\09\09\0A cpsie i\09\09\09\09\0A cpsie f\09\09\09\09\0A dsb\09\09\09\09\09\0A isb\09\09\09\09\09\0A svc 0\09\09\09\09\09\0A nop\09\09\09\09\09\0A", ""() #27, !dbg !3566, !srcloc !3567
  unreachable, !dbg !3568
}

; Function Attrs: noinline nounwind
define dso_local void @vPortEndScheduler() local_unnamed_addr #8 !dbg !3569 {
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !3570, !tbaa !3474
  %2 = icmp eq i32 %1, 1000, !dbg !3570
  br i1 %2, label %6, label %3, !dbg !3572

3:                                                ; preds = %0
  %4 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !3573, !srcloc !3535
  call void @llvm.dbg.value(metadata i32 %4, metadata !3532, metadata !DIExpression()) #27, !dbg !3576
  br label %5, !dbg !3577

5:                                                ; preds = %5, %3
  br label %5, !dbg !3578, !llvm.loop !3581

6:                                                ; preds = %0
  ret void, !dbg !3583
}

; Function Attrs: noinline nounwind
define dso_local void @vPortEnterCritical() local_unnamed_addr #8 !dbg !3584 {
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !3585, !srcloc !3535
  call void @llvm.dbg.value(metadata i32 %1, metadata !3532, metadata !DIExpression()) #27, !dbg !3587
  %2 = load i32, i32* @uxCriticalNesting, align 4, !dbg !3588, !tbaa !3474
  %3 = add i32 %2, 1, !dbg !3588
  store i32 %3, i32* @uxCriticalNesting, align 4, !dbg !3588, !tbaa !3474
  %4 = icmp eq i32 %2, 0, !dbg !3589
  br i1 %4, label %5, label %12, !dbg !3591

5:                                                ; preds = %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !3592, !tbaa !2488
  %7 = and i32 %6, 255, !dbg !3592
  %8 = icmp eq i32 %7, 0, !dbg !3592
  br i1 %8, label %12, label %9, !dbg !3595

9:                                                ; preds = %5
  %10 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !3596, !srcloc !3535
  call void @llvm.dbg.value(metadata i32 %10, metadata !3532, metadata !DIExpression()) #27, !dbg !3599
  br label %11, !dbg !3600

11:                                               ; preds = %11, %9
  br label %11, !dbg !3601, !llvm.loop !3604

12:                                               ; preds = %5, %0
  ret void, !dbg !3606
}

; Function Attrs: noinline nounwind
define dso_local void @vPortExitCritical() local_unnamed_addr #8 !dbg !3607 {
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !3608, !tbaa !3474
  %2 = icmp eq i32 %1, 0, !dbg !3608
  br i1 %2, label %3, label %6, !dbg !3610

3:                                                ; preds = %0
  %4 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !3611, !srcloc !3535
  call void @llvm.dbg.value(metadata i32 %4, metadata !3532, metadata !DIExpression()) #27, !dbg !3614
  br label %5, !dbg !3615

5:                                                ; preds = %5, %3
  br label %5, !dbg !3616, !llvm.loop !3619

6:                                                ; preds = %0
  %7 = add i32 %1, -1, !dbg !3621
  store i32 %7, i32* @uxCriticalNesting, align 4, !dbg !3621, !tbaa !3474
  %8 = icmp eq i32 %7, 0, !dbg !3622
  br i1 %8, label %9, label %10, !dbg !3624

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata i32 0, metadata !3625, metadata !DIExpression()) #27, !dbg !3628
  call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 0) #27, !dbg !3631, !srcloc !3632
  br label %10, !dbg !3633

10:                                               ; preds = %9, %6
  ret void, !dbg !3634
}

; Function Attrs: naked noinline nounwind
define dso_local void @PendSV_Handler() #16 !dbg !3635 {
  call void asm sideeffect "\09mrs r0, psp\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldr\09r3, pxCurrentTCBConst\09\09\09\0A\09ldr\09r2, [r3]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09stmdb r0!, {r4-r11}\09\09\09\09\09\0A\09str r0, [r2]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09stmdb sp!, {r3, r14}\09\09\09\09\0A\09mov r0, $0\09\09\09\09\09\09\09\0A\09msr basepri, r0\09\09\09\09\09\09\0A\09bl vTaskSwitchContext\09\09\09\09\0A\09mov r0, #0\09\09\09\09\09\09\09\0A\09msr basepri, r0\09\09\09\09\09\09\0A\09ldmia sp!, {r3, r14}\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldr r1, [r3]\09\09\09\09\09\09\0A\09ldr r0, [r1]\09\09\09\09\09\09\0A\09ldmia r0!, {r4-r11}\09\09\09\09\09\0A\09msr psp, r0\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\0A\09bx r14\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09.align 4\09\09\09\09\09\09\09\0ApxCurrentTCBConst: .word pxCurrentTCB\09\0A", "i"(i32 80) #27, !dbg !3636, !srcloc !3637
  unreachable, !dbg !3638
}

; Function Attrs: noinline nounwind
define dso_local void @xPortSysTickHandler() local_unnamed_addr #8 !dbg !3639 {
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !3640, !srcloc !3535
  call void @llvm.dbg.value(metadata i32 %1, metadata !3532, metadata !DIExpression()) #27, !dbg !3642
  %2 = call i32 @xTaskIncrementTick() #27, !dbg !3643
  %3 = icmp eq i32 %2, 0, !dbg !3646
  br i1 %3, label %5, label %4, !dbg !3647

4:                                                ; preds = %0
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !3648, !tbaa !2488
  br label %5, !dbg !3650

5:                                                ; preds = %4, %0
  call void @llvm.dbg.value(metadata i32 0, metadata !3625, metadata !DIExpression()) #27, !dbg !3651
  call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 0) #27, !dbg !3653, !srcloc !3632
  ret void, !dbg !3654
}

; Function Attrs: noinline nounwind
define dso_local void @vPortValidateInterruptPriority() local_unnamed_addr #8 !dbg !3655 {
  %1 = call i32 asm sideeffect "mrs $0, ipsr", "=r,~{memory}"() #27, !dbg !3659, !srcloc !3660
  call void @llvm.dbg.value(metadata i32 %1, metadata !3657, metadata !DIExpression()), !dbg !3661
  %2 = icmp ugt i32 %1, 15, !dbg !3662
  br i1 %2, label %3, label %11, !dbg !3664

3:                                                ; preds = %0
  %4 = getelementptr inbounds i8, i8* inttoptr (i32 -536812560 to i8*), i32 %1, !dbg !3665
  %5 = load volatile i8, i8* %4, align 1, !dbg !3665, !tbaa !1609
  call void @llvm.dbg.value(metadata i8 %5, metadata !3658, metadata !DIExpression()), !dbg !3661
  %6 = load i8, i8* @ucMaxSysCallPriority, align 1, !dbg !3667, !tbaa !1609
  %7 = icmp ult i8 %5, %6, !dbg !3667
  br i1 %7, label %8, label %11, !dbg !3669

8:                                                ; preds = %3
  %9 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !3670, !srcloc !3535
  call void @llvm.dbg.value(metadata i32 %9, metadata !3532, metadata !DIExpression()) #27, !dbg !3673
  br label %10, !dbg !3674

10:                                               ; preds = %10, %8
  br label %10, !dbg !3675, !llvm.loop !3678

11:                                               ; preds = %3, %0
  %12 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !3680, !tbaa !2488
  %13 = and i32 %12, 1792, !dbg !3680
  %14 = load i32, i32* @ulMaxPRIGROUPValue, align 4, !dbg !3680, !tbaa !2488
  %15 = icmp ugt i32 %13, %14, !dbg !3680
  br i1 %15, label %16, label %19, !dbg !3682

16:                                               ; preds = %11
  %17 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !3683, !srcloc !3535
  call void @llvm.dbg.value(metadata i32 %17, metadata !3532, metadata !DIExpression()) #27, !dbg !3686
  br label %18, !dbg !3687

18:                                               ; preds = %18, %16
  br label %18, !dbg !3688, !llvm.loop !3691

19:                                               ; preds = %11
  ret void, !dbg !3693
}

; Function Attrs: noinline nounwind
define dso_local i8* @xTaskCreateStatic(void (i8*)* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2, i8* noundef %3, i32 noundef %4, i32* noundef %5, %struct.xSTATIC_TCB* noundef %6) local_unnamed_addr #8 !dbg !3694 {
  %8 = alloca i8*, align 4
  %9 = alloca i32, align 4
  call void @llvm.dbg.value(metadata void (i8*)* %0, metadata !3720, metadata !DIExpression()), !dbg !3736
  call void @llvm.dbg.value(metadata i8* %1, metadata !3721, metadata !DIExpression()), !dbg !3736
  call void @llvm.dbg.value(metadata i32 %2, metadata !3722, metadata !DIExpression()), !dbg !3736
  call void @llvm.dbg.value(metadata i8* %3, metadata !3723, metadata !DIExpression()), !dbg !3736
  call void @llvm.dbg.value(metadata i32 %4, metadata !3724, metadata !DIExpression()), !dbg !3736
  call void @llvm.dbg.value(metadata i32* %5, metadata !3725, metadata !DIExpression()), !dbg !3736
  call void @llvm.dbg.value(metadata %struct.xSTATIC_TCB* %6, metadata !3726, metadata !DIExpression()), !dbg !3736
  %10 = bitcast i8** %8 to i8*, !dbg !3737
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #27, !dbg !3737
  %11 = icmp eq i32* %5, null, !dbg !3738
  br i1 %11, label %12, label %15, !dbg !3740

12:                                               ; preds = %7
  %13 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !3741, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %13, metadata !3744, metadata !DIExpression()) #27, !dbg !3748
  br label %14, !dbg !3749

14:                                               ; preds = %14, %12
  br label %14, !dbg !3750, !llvm.loop !3753

15:                                               ; preds = %7
  %16 = icmp eq %struct.xSTATIC_TCB* %6, null, !dbg !3755
  br i1 %16, label %17, label %20, !dbg !3757

17:                                               ; preds = %15
  %18 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !3758, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %18, metadata !3744, metadata !DIExpression()) #27, !dbg !3761
  br label %19, !dbg !3762

19:                                               ; preds = %19, %17
  br label %19, !dbg !3763, !llvm.loop !3766

20:                                               ; preds = %15
  %21 = bitcast i32* %9 to i8*, !dbg !3768
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !3768
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3729, metadata !DIExpression()), !dbg !3769
  store volatile i32 76, i32* %9, align 4, !dbg !3769, !tbaa !2488
  %22 = load volatile i32, i32* %9, align 4, !dbg !3770, !tbaa !2488
  %23 = icmp eq i32 %22, 76, !dbg !3770
  br i1 %23, label %27, label %24, !dbg !3772

24:                                               ; preds = %20
  %25 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !3773, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %25, metadata !3744, metadata !DIExpression()) #27, !dbg !3776
  br label %26, !dbg !3777

26:                                               ; preds = %26, %24
  br label %26, !dbg !3778, !llvm.loop !3781

27:                                               ; preds = %20
  %28 = bitcast i32* %9 to i8*, !dbg !3783
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28), !dbg !3783
  %29 = bitcast %struct.xSTATIC_TCB* %6 to %struct.tskTaskControlBlock*, !dbg !3784
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %29, metadata !3727, metadata !DIExpression()), !dbg !3736
  %30 = getelementptr inbounds %struct.xSTATIC_TCB, %struct.xSTATIC_TCB* %6, i32 0, i32 3, !dbg !3787
  %31 = bitcast i8** %30 to i32**, !dbg !3787
  store i32* %5, i32** %31, align 4, !dbg !3788, !tbaa !3789
  call void @llvm.dbg.value(metadata i8** %8, metadata !3728, metadata !DIExpression(DW_OP_deref)), !dbg !3736
  call fastcc void @prvInitialiseNewTask(void (i8*)* noundef %0, i8* noundef %1, i32 noundef %2, i8* noundef %3, i32 noundef %4, i8** noundef nonnull %8, %struct.tskTaskControlBlock* noundef nonnull %29), !dbg !3792
  call fastcc void @prvAddNewTaskToReadyList(%struct.tskTaskControlBlock* noundef nonnull %29), !dbg !3793
  %32 = load i8*, i8** %8, align 4, !dbg !3794, !tbaa !1599
  call void @llvm.dbg.value(metadata i8* %32, metadata !3728, metadata !DIExpression()), !dbg !3736
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #27, !dbg !3795
  ret i8* %32, !dbg !3796
}

; Function Attrs: noinline nounwind
define internal fastcc void @prvInitialiseNewTask(void (i8*)* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2, i8* noundef %3, i32 noundef %4, i8** noundef writeonly %5, %struct.tskTaskControlBlock* noundef %6) unnamed_addr #8 !dbg !3797 {
  call void @llvm.dbg.value(metadata void (i8*)* %0, metadata !3812, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata i8* %1, metadata !3813, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata i32 %2, metadata !3814, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata i8* %3, metadata !3815, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata i32 %4, metadata !3816, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata i8** %5, metadata !3817, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %6, metadata !3818, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata %struct.xMEMORY_REGION* undef, metadata !3819, metadata !DIExpression()), !dbg !3822
  %8 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 4, !dbg !3823
  %9 = load i32*, i32** %8, align 4, !dbg !3823, !tbaa !3789
  %10 = add i32 %2, -1, !dbg !3825
  %11 = getelementptr inbounds i32, i32* %9, i32 %10, !dbg !3826
  call void @llvm.dbg.value(metadata i32* %11, metadata !3820, metadata !DIExpression()), !dbg !3822
  %12 = ptrtoint i32* %11 to i32, !dbg !3827
  %13 = and i32 %12, -8, !dbg !3828
  call void @llvm.dbg.value(metadata i32* %25, metadata !3820, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata i32 0, metadata !3821, metadata !DIExpression()), !dbg !3822
  br label %14, !dbg !3829

14:                                               ; preds = %14, %7
  %15 = phi i32 [ 0, %7 ], [ %21, %14 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !3821, metadata !DIExpression()), !dbg !3822
  %16 = getelementptr inbounds i8, i8* %1, i32 %15, !dbg !3831
  %17 = load i8, i8* %16, align 1, !dbg !3831, !tbaa !1609
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 5, i32 %15, !dbg !3834
  store i8 %17, i8* %18, align 1, !dbg !3835, !tbaa !1609
  %19 = load i8, i8* %16, align 1, !dbg !3836, !tbaa !1609
  %20 = icmp ne i8 %19, 0, !dbg !3838
  %21 = add nuw nsw i32 %15, 1, !dbg !3839
  call void @llvm.dbg.value(metadata i32 %21, metadata !3821, metadata !DIExpression()), !dbg !3822
  %22 = icmp ult i32 %15, 15
  %23 = select i1 %20, i1 %22, i1 false, !dbg !3840
  call void @llvm.dbg.value(metadata i32 %21, metadata !3821, metadata !DIExpression()), !dbg !3822
  br i1 %23, label %14, label %24, !dbg !3840, !llvm.loop !3841

24:                                               ; preds = %14
  %25 = inttoptr i32 %13 to i32*, !dbg !3843
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 5, i32 15, !dbg !3844
  store i8 0, i8* %26, align 1, !dbg !3845, !tbaa !1609
  %27 = icmp ult i32 %4, 6, !dbg !3846
  %28 = select i1 %27, i32 %4, i32 6, !dbg !3846
  call void @llvm.dbg.value(metadata i32 %28, metadata !3816, metadata !DIExpression()), !dbg !3822
  %29 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !3847
  store i32 %28, i32* %29, align 4, !dbg !3848, !tbaa !3849
  %30 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 1, !dbg !3850
  call void @vListInitialiseItem(%struct.xLIST_ITEM* noundef nonnull %30) #27, !dbg !3851
  %31 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !3852
  call void @vListInitialiseItem(%struct.xLIST_ITEM* noundef nonnull %31) #27, !dbg !3853
  %32 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 1, i32 3, !dbg !3854
  %33 = bitcast i8** %32 to %struct.tskTaskControlBlock**, !dbg !3854
  store %struct.tskTaskControlBlock* %6, %struct.tskTaskControlBlock** %33, align 4, !dbg !3854, !tbaa !3855
  %34 = xor i32 %28, 7, !dbg !3856
  %35 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %31, i32 0, i32 0, !dbg !3856
  store i32 %34, i32* %35, align 4, !dbg !3856, !tbaa !3857
  %36 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, i32 3, !dbg !3858
  %37 = bitcast i8** %36 to %struct.tskTaskControlBlock**, !dbg !3858
  store %struct.tskTaskControlBlock* %6, %struct.tskTaskControlBlock** %37, align 4, !dbg !3858, !tbaa !3859
  %38 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 6, !dbg !3860
  store volatile i32 0, i32* %38, align 4, !dbg !3862, !tbaa !3863
  %39 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 7, !dbg !3864
  store volatile i8 0, i8* %39, align 4, !dbg !3865, !tbaa !3866
  %40 = call i32* @pxPortInitialiseStack(i32* noundef %25, void (i8*)* noundef %0, i8* noundef %3) #27, !dbg !3867
  %41 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 0, !dbg !3869
  store i32* %40, i32** %41, align 4, !dbg !3870, !tbaa !3871
  %42 = icmp eq i8** %5, null, !dbg !3872
  br i1 %42, label %45, label %43, !dbg !3874

43:                                               ; preds = %24
  %44 = bitcast i8** %5 to %struct.tskTaskControlBlock**, !dbg !3875
  store %struct.tskTaskControlBlock* %6, %struct.tskTaskControlBlock** %44, align 4, !dbg !3875, !tbaa !1599
  br label %45, !dbg !3877

45:                                               ; preds = %24, %43
  ret void, !dbg !3878
}

; Function Attrs: noinline nounwind
define internal fastcc void @prvAddNewTaskToReadyList(%struct.tskTaskControlBlock* noundef %0) unnamed_addr #8 !dbg !3879 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !3883, metadata !DIExpression()), !dbg !3884
  call void @vPortEnterCritical() #27, !dbg !3885
  %2 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !3886, !tbaa !3474
  %3 = add i32 %2, 1, !dbg !3886
  store volatile i32 %3, i32* @uxCurrentNumberOfTasks, align 4, !dbg !3886, !tbaa !3474
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3888, !tbaa !1599
  %5 = icmp eq %struct.tskTaskControlBlock* %4, null, !dbg !3890
  br i1 %5, label %6, label %10, !dbg !3891

6:                                                ; preds = %1
  store volatile %struct.tskTaskControlBlock* %0, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3892, !tbaa !1599
  %7 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !3894, !tbaa !3474
  %8 = icmp eq i32 %7, 1, !dbg !3896
  br i1 %8, label %9, label %21, !dbg !3897

9:                                                ; preds = %6
  call fastcc void @prvInitialiseTaskLists(), !dbg !3898
  br label %21, !dbg !3900

10:                                               ; preds = %1
  %11 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !3901, !tbaa !3474
  %12 = icmp eq i32 %11, 0, !dbg !3904
  br i1 %12, label %13, label %21, !dbg !3905

13:                                               ; preds = %10
  %14 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3906, !tbaa !1599
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 3, !dbg !3909
  %16 = load i32, i32* %15, align 4, !dbg !3909, !tbaa !3849
  %17 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 3, !dbg !3910
  %18 = load i32, i32* %17, align 4, !dbg !3910, !tbaa !3849
  %19 = icmp ugt i32 %16, %18, !dbg !3911
  br i1 %19, label %21, label %20, !dbg !3912

20:                                               ; preds = %13
  store volatile %struct.tskTaskControlBlock* %0, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3913, !tbaa !1599
  br label %21, !dbg !3915

21:                                               ; preds = %13, %20, %10, %9, %6
  %22 = load i32, i32* @uxTaskNumber, align 4, !dbg !3916, !tbaa !3474
  %23 = add i32 %22, 1, !dbg !3916
  store i32 %23, i32* @uxTaskNumber, align 4, !dbg !3916, !tbaa !3474
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 3, !dbg !3917
  %25 = load i32, i32* %24, align 4, !dbg !3917, !tbaa !3849
  %26 = shl i32 1, %25, !dbg !3917
  %27 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3917, !tbaa !3474
  %28 = or i32 %27, %26, !dbg !3917
  store volatile i32 %28, i32* @uxTopReadyPriority, align 4, !dbg !3917, !tbaa !3474
  %29 = getelementptr inbounds [7 x %struct.xLIST], [7 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %25, !dbg !3917
  %30 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, !dbg !3917
  call void @vListInsertEnd(%struct.xLIST* noundef nonnull %29, %struct.xLIST_ITEM* noundef nonnull %30) #27, !dbg !3917
  call void @vPortExitCritical() #27, !dbg !3918
  %31 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !3919, !tbaa !3474
  %32 = icmp eq i32 %31, 0, !dbg !3921
  br i1 %32, label %35, label %33, !dbg !3922

33:                                               ; preds = %21
  %34 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3923, !tbaa !1599
  br label %35, !dbg !3926

35:                                               ; preds = %21, %33
  ret void, !dbg !3927
}

; Function Attrs: noinline nounwind
define internal fastcc void @prvInitialiseTaskLists() unnamed_addr #8 !dbg !3928 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3930, metadata !DIExpression()), !dbg !3931
  br label %1, !dbg !3932

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !3930, metadata !DIExpression()), !dbg !3931
  %3 = getelementptr inbounds [7 x %struct.xLIST], [7 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %2, !dbg !3934
  call void @vListInitialise(%struct.xLIST* noundef nonnull %3) #27, !dbg !3937
  %4 = add nuw nsw i32 %2, 1, !dbg !3938
  call void @llvm.dbg.value(metadata i32 %4, metadata !3930, metadata !DIExpression()), !dbg !3931
  %5 = icmp eq i32 %4, 7, !dbg !3939
  br i1 %5, label %6, label %1, !dbg !3932, !llvm.loop !3940

6:                                                ; preds = %1
  call void @vListInitialise(%struct.xLIST* noundef nonnull @xDelayedTaskList1) #27, !dbg !3942
  call void @vListInitialise(%struct.xLIST* noundef nonnull @xDelayedTaskList2) #27, !dbg !3943
  call void @vListInitialise(%struct.xLIST* noundef nonnull @xPendingReadyList) #27, !dbg !3944
  store volatile %struct.xLIST* @xDelayedTaskList1, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !3945, !tbaa !1599
  store volatile %struct.xLIST* @xDelayedTaskList2, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !3946, !tbaa !1599
  ret void, !dbg !3947
}

; Function Attrs: noinline nounwind
define dso_local void @vTaskDelay(i32 noundef %0) local_unnamed_addr #8 !dbg !3948 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3953, metadata !DIExpression()), !dbg !3955
  call void @llvm.dbg.value(metadata i32 0, metadata !3954, metadata !DIExpression()), !dbg !3955
  %2 = icmp eq i32 %0, 0, !dbg !3956
  br i1 %2, label %11, label %3, !dbg !3958

3:                                                ; preds = %1
  %4 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !3959, !tbaa !3474
  %5 = icmp eq i32 %4, 0, !dbg !3959
  br i1 %5, label %9, label %6, !dbg !3962

6:                                                ; preds = %3
  %7 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !3963, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %7, metadata !3744, metadata !DIExpression()) #27, !dbg !3966
  br label %8, !dbg !3967

8:                                                ; preds = %8, %6
  br label %8, !dbg !3968, !llvm.loop !3971

9:                                                ; preds = %3
  call void @vTaskSuspendAll(), !dbg !3973
  call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %0), !dbg !3974
  %10 = call i32 @xTaskResumeAll(), !dbg !3976
  call void @llvm.dbg.value(metadata i32 0, metadata !3954, metadata !DIExpression()), !dbg !3955
  br label %11, !dbg !3977

11:                                               ; preds = %9, %1
  call void @llvm.dbg.value(metadata i32 0, metadata !3954, metadata !DIExpression()), !dbg !3955
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !3978, !tbaa !2488
  call void asm sideeffect "dsb", "~{memory}"() #27, !dbg !3978, !srcloc !3982
  call void asm sideeffect "isb", ""() #27, !dbg !3978, !srcloc !3983
  ret void, !dbg !3984
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @vTaskSuspendAll() local_unnamed_addr #13 !dbg !3985 {
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !3986, !tbaa !3474
  %2 = add i32 %1, 1, !dbg !3986
  store volatile i32 %2, i32* @uxSchedulerSuspended, align 4, !dbg !3986, !tbaa !3474
  ret void, !dbg !3987
}

; Function Attrs: noinline nounwind
define internal fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %0) unnamed_addr #8 !dbg !3988 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3993, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i32 undef, metadata !3994, metadata !DIExpression()), !dbg !3997
  %2 = load volatile i32, i32* @xTickCount, align 4, !dbg !3998, !tbaa !2488
  call void @llvm.dbg.value(metadata i32 %2, metadata !3996, metadata !DIExpression()), !dbg !3997
  %3 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3999, !tbaa !1599
  %4 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %3, i32 0, i32 1, !dbg !4001
  %5 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %4) #27, !dbg !4002
  %6 = icmp eq i32 %5, 0, !dbg !4003
  br i1 %6, label %7, label %15, !dbg !4004

7:                                                ; preds = %1
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4005, !tbaa !1599
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 3, !dbg !4005
  %10 = load i32, i32* %9, align 4, !dbg !4005, !tbaa !3849
  %11 = shl i32 1, %10, !dbg !4005
  %12 = xor i32 %11, -1, !dbg !4005
  %13 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !4005, !tbaa !3474
  %14 = and i32 %13, %12, !dbg !4005
  store volatile i32 %14, i32* @uxTopReadyPriority, align 4, !dbg !4005, !tbaa !3474
  br label %15, !dbg !4007

15:                                               ; preds = %1, %7
  %16 = add i32 %2, %0, !dbg !4008
  call void @llvm.dbg.value(metadata i32 %16, metadata !3995, metadata !DIExpression()), !dbg !3997
  %17 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4010, !tbaa !1599
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %17, i32 0, i32 1, i32 0, !dbg !4010
  store i32 %16, i32* %18, align 4, !dbg !4010, !tbaa !4011
  %19 = icmp ult i32 %16, %2, !dbg !4012
  br i1 %19, label %20, label %24, !dbg !4014

20:                                               ; preds = %15
  %21 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !4015, !tbaa !1599
  %22 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4017, !tbaa !1599
  %23 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %22, i32 0, i32 1, !dbg !4018
  call void @vListInsert(%struct.xLIST* noundef %21, %struct.xLIST_ITEM* noundef nonnull %23) #27, !dbg !4019
  br label %31, !dbg !4020

24:                                               ; preds = %15
  %25 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !4021, !tbaa !1599
  %26 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4023, !tbaa !1599
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %26, i32 0, i32 1, !dbg !4024
  call void @vListInsert(%struct.xLIST* noundef %25, %struct.xLIST_ITEM* noundef nonnull %27) #27, !dbg !4025
  %28 = load volatile i32, i32* @xNextTaskUnblockTime, align 4, !dbg !4026, !tbaa !2488
  %29 = icmp ult i32 %16, %28, !dbg !4028
  br i1 %29, label %30, label %31, !dbg !4029

30:                                               ; preds = %24
  store volatile i32 %16, i32* @xNextTaskUnblockTime, align 4, !dbg !4030, !tbaa !2488
  br label %31, !dbg !4032

31:                                               ; preds = %30, %24, %20
  ret void, !dbg !4033
}

; Function Attrs: noinline nounwind
define dso_local i32 @xTaskResumeAll() local_unnamed_addr #8 !dbg !4034 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* null, metadata !4036, metadata !DIExpression()), !dbg !4045
  call void @llvm.dbg.value(metadata i32 0, metadata !4037, metadata !DIExpression()), !dbg !4045
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !4046, !tbaa !3474
  %2 = icmp eq i32 %1, 0, !dbg !4046
  br i1 %2, label %3, label %6, !dbg !4048

3:                                                ; preds = %0
  %4 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !4049, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %4, metadata !3744, metadata !DIExpression()) #27, !dbg !4052
  br label %5, !dbg !4053

5:                                                ; preds = %5, %3
  br label %5, !dbg !4054, !llvm.loop !4057

6:                                                ; preds = %0
  call void @vPortEnterCritical() #27, !dbg !4059
  %7 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !4060, !tbaa !3474
  %8 = add i32 %7, -1, !dbg !4060
  store volatile i32 %8, i32* @uxSchedulerSuspended, align 4, !dbg !4060, !tbaa !3474
  %9 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !4061, !tbaa !3474
  %10 = icmp eq i32 %9, 0, !dbg !4062
  br i1 %10, label %11, label %55, !dbg !4063

11:                                               ; preds = %6
  %12 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !4064, !tbaa !3474
  %13 = icmp eq i32 %12, 0, !dbg !4065
  br i1 %13, label %55, label %14, !dbg !4066

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* null, metadata !4036, metadata !DIExpression()), !dbg !4045
  %15 = load volatile i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 0), align 4, !dbg !4067, !tbaa !4068
  %16 = icmp eq i32 %15, 0, !dbg !4067
  br i1 %16, label %44, label %17, !dbg !4071

17:                                               ; preds = %14, %38
  %18 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 2, i32 1), align 4, !dbg !4072, !tbaa !4074
  %19 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %18, i32 0, i32 3, !dbg !4072
  %20 = bitcast i8** %19 to %struct.tskTaskControlBlock**, !dbg !4072
  %21 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %20, align 4, !dbg !4072, !tbaa !4075
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %21, metadata !4036, metadata !DIExpression()), !dbg !4045
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %21, i32 0, i32 2, !dbg !4076
  %23 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %22) #27, !dbg !4077
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %21, i32 0, i32 1, !dbg !4078
  %25 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %24) #27, !dbg !4079
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %21, i32 0, i32 3, !dbg !4080
  %27 = load i32, i32* %26, align 4, !dbg !4080, !tbaa !3849
  %28 = shl i32 1, %27, !dbg !4080
  %29 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !4080, !tbaa !3474
  %30 = or i32 %29, %28, !dbg !4080
  store volatile i32 %30, i32* @uxTopReadyPriority, align 4, !dbg !4080, !tbaa !3474
  %31 = getelementptr inbounds [7 x %struct.xLIST], [7 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %27, !dbg !4080
  call void @vListInsertEnd(%struct.xLIST* noundef nonnull %31, %struct.xLIST_ITEM* noundef nonnull %24) #27, !dbg !4080
  %32 = load i32, i32* %26, align 4, !dbg !4081, !tbaa !3849
  %33 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4083, !tbaa !1599
  %34 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %33, i32 0, i32 3, !dbg !4084
  %35 = load i32, i32* %34, align 4, !dbg !4084, !tbaa !3849
  %36 = icmp ult i32 %32, %35, !dbg !4085
  br i1 %36, label %38, label %37, !dbg !4086

37:                                               ; preds = %17
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !4087, !tbaa !3474
  br label %38, !dbg !4089

38:                                               ; preds = %17, %37
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %21, metadata !4036, metadata !DIExpression()), !dbg !4045
  %39 = load volatile i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 0), align 4, !dbg !4067, !tbaa !4068
  %40 = icmp eq i32 %39, 0, !dbg !4067
  br i1 %40, label %41, label %17, !dbg !4071, !llvm.loop !4090

41:                                               ; preds = %38
  %42 = icmp eq %struct.tskTaskControlBlock* %21, null, !dbg !4092
  br i1 %42, label %44, label %43, !dbg !4094

43:                                               ; preds = %41
  call fastcc void @prvResetNextTaskUnblockTime(), !dbg !4095
  br label %44, !dbg !4097

44:                                               ; preds = %14, %43, %41
  %45 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !4098, !tbaa !3474
  call void @llvm.dbg.value(metadata i32 %45, metadata !4038, metadata !DIExpression()), !dbg !4099
  %46 = icmp eq i32 %45, 0, !dbg !4100
  br i1 %46, label %53, label %47, !dbg !4102

47:                                               ; preds = %44, %47
  %48 = phi i32 [ %50, %47 ], [ %45, %44 ], !dbg !4099
  call void @llvm.dbg.value(metadata i32 %48, metadata !4038, metadata !DIExpression()), !dbg !4099
  %49 = call i32 @xTaskIncrementTick(), !dbg !4103
  %50 = add i32 %48, -1, !dbg !4107
  call void @llvm.dbg.value(metadata i32 %50, metadata !4038, metadata !DIExpression()), !dbg !4099
  %51 = icmp eq i32 %50, 0, !dbg !4108
  br i1 %51, label %52, label %47, !dbg !4109, !llvm.loop !4110

52:                                               ; preds = %47
  store volatile i32 0, i32* @uxPendedTicks, align 4, !dbg !4113, !tbaa !3474
  br label %53, !dbg !4114

53:                                               ; preds = %44, %52
  %54 = load volatile i32, i32* @xYieldPending, align 4, !dbg !4115, !tbaa !3474
  br label %55, !dbg !4117

55:                                               ; preds = %6, %11, %53
  call void @vPortExitCritical() #27, !dbg !4118
  ret i32 0, !dbg !4119
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @prvResetNextTaskUnblockTime() unnamed_addr #13 !dbg !4120 {
  %1 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !4123, !tbaa !1599
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 0, !dbg !4123
  %3 = load volatile i32, i32* %2, align 4, !dbg !4123, !tbaa !4068
  %4 = icmp eq i32 %3, 0, !dbg !4123
  br i1 %4, label %14, label %5, !dbg !4125

5:                                                ; preds = %0
  %6 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !4126, !tbaa !1599
  %7 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %6, i32 0, i32 2, i32 1, !dbg !4126
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !4126, !tbaa !4074
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 3, !dbg !4126
  %10 = bitcast i8** %9 to %struct.tskTaskControlBlock**, !dbg !4126
  %11 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %10, align 4, !dbg !4126, !tbaa !4075
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %11, metadata !4122, metadata !DIExpression()), !dbg !4128
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 1, i32 0, !dbg !4129
  %13 = load i32, i32* %12, align 4, !dbg !4129, !tbaa !4011
  br label %14

14:                                               ; preds = %0, %5
  %15 = phi i32 [ %13, %5 ], [ -1, %0 ]
  store volatile i32 %15, i32* @xNextTaskUnblockTime, align 4, !dbg !4130, !tbaa !2488
  ret void, !dbg !4131
}

; Function Attrs: noinline nounwind
define dso_local i32 @xTaskIncrementTick() local_unnamed_addr #8 !dbg !4132 {
  call void @llvm.dbg.value(metadata i32 0, metadata !4136, metadata !DIExpression()), !dbg !4144
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !4145, !tbaa !3474
  %2 = icmp eq i32 %1, 0, !dbg !4146
  br i1 %2, label %3, label %60, !dbg !4147

3:                                                ; preds = %0
  %4 = load volatile i32, i32* @xTickCount, align 4, !dbg !4148, !tbaa !2488
  %5 = add i32 %4, 1, !dbg !4149
  call void @llvm.dbg.value(metadata i32 %5, metadata !4137, metadata !DIExpression()), !dbg !4150
  store volatile i32 %5, i32* @xTickCount, align 4, !dbg !4151, !tbaa !2488
  %6 = icmp eq i32 %5, 0, !dbg !4152
  br i1 %6, label %7, label %20, !dbg !4153

7:                                                ; preds = %3
  %8 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !4154, !tbaa !1599
  %9 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %8, i32 0, i32 0, !dbg !4154
  %10 = load volatile i32, i32* %9, align 4, !dbg !4154, !tbaa !4068
  %11 = icmp eq i32 %10, 0, !dbg !4154
  br i1 %11, label %15, label %12, !dbg !4156

12:                                               ; preds = %7
  %13 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !4157, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %13, metadata !3744, metadata !DIExpression()) #27, !dbg !4160
  br label %14, !dbg !4161

14:                                               ; preds = %14, %12
  br label %14, !dbg !4162, !llvm.loop !4165

15:                                               ; preds = %7
  %16 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !4156, !tbaa !1599
  call void @llvm.dbg.value(metadata %struct.xLIST* %16, metadata !4140, metadata !DIExpression()), !dbg !4167
  %17 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !4156, !tbaa !1599
  store volatile %struct.xLIST* %17, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !4156, !tbaa !1599
  store volatile %struct.xLIST* %16, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !4156, !tbaa !1599
  %18 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !4156, !tbaa !3474
  %19 = add nsw i32 %18, 1, !dbg !4156
  store volatile i32 %19, i32* @xNumOfOverflows, align 4, !dbg !4156, !tbaa !3474
  call fastcc void @prvResetNextTaskUnblockTime(), !dbg !4156
  br label %20, !dbg !4168

20:                                               ; preds = %3, %15
  %21 = load volatile i32, i32* @xNextTaskUnblockTime, align 4, !dbg !4169, !tbaa !2488
  %22 = icmp ult i32 %5, %21, !dbg !4171
  br i1 %22, label %63, label %23, !dbg !4172

23:                                               ; preds = %20
  %24 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !4173, !tbaa !1599
  %25 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %24, i32 0, i32 0, !dbg !4173
  %26 = load volatile i32, i32* %25, align 4, !dbg !4173, !tbaa !4068
  %27 = icmp eq i32 %26, 0, !dbg !4173
  br i1 %27, label %28, label %29, !dbg !4179

28:                                               ; preds = %49, %23
  store volatile i32 -1, i32* @xNextTaskUnblockTime, align 4, !dbg !4180, !tbaa !2488
  br label %63, !dbg !4182

29:                                               ; preds = %23, %49
  %30 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !4183, !tbaa !1599
  %31 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %30, i32 0, i32 2, i32 1, !dbg !4183
  %32 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %31, align 4, !dbg !4183, !tbaa !4074
  %33 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %32, i32 0, i32 3, !dbg !4183
  %34 = bitcast i8** %33 to %struct.tskTaskControlBlock**, !dbg !4183
  %35 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %34, align 4, !dbg !4183, !tbaa !4075
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %35, metadata !4134, metadata !DIExpression()), !dbg !4144
  %36 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %35, i32 0, i32 1, !dbg !4185
  %37 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %36, i32 0, i32 0, !dbg !4185
  %38 = load i32, i32* %37, align 4, !dbg !4185, !tbaa !4011
  call void @llvm.dbg.value(metadata i32 %38, metadata !4135, metadata !DIExpression()), !dbg !4144
  %39 = icmp ult i32 %5, %38, !dbg !4186
  br i1 %39, label %40, label %41, !dbg !4188

40:                                               ; preds = %29
  store volatile i32 %38, i32* @xNextTaskUnblockTime, align 4, !dbg !4189, !tbaa !2488
  br label %63, !dbg !4191

41:                                               ; preds = %29
  %42 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %36) #27, !dbg !4192
  %43 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %35, i32 0, i32 2, i32 4, !dbg !4193
  %44 = load i8*, i8** %43, align 4, !dbg !4193, !tbaa !4195
  %45 = icmp eq i8* %44, null, !dbg !4196
  br i1 %45, label %49, label %46, !dbg !4197

46:                                               ; preds = %41
  %47 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %35, i32 0, i32 2, !dbg !4193
  %48 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %47) #27, !dbg !4198
  br label %49, !dbg !4200

49:                                               ; preds = %41, %46
  %50 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %35, i32 0, i32 3, !dbg !4201
  %51 = load i32, i32* %50, align 4, !dbg !4201, !tbaa !3849
  %52 = shl i32 1, %51, !dbg !4201
  %53 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !4201, !tbaa !3474
  %54 = or i32 %53, %52, !dbg !4201
  store volatile i32 %54, i32* @uxTopReadyPriority, align 4, !dbg !4201, !tbaa !3474
  %55 = getelementptr inbounds [7 x %struct.xLIST], [7 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %51, !dbg !4201
  call void @vListInsertEnd(%struct.xLIST* noundef nonnull %55, %struct.xLIST_ITEM* noundef nonnull %36) #27, !dbg !4201
  %56 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !4173, !tbaa !1599
  %57 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %56, i32 0, i32 0, !dbg !4173
  %58 = load volatile i32, i32* %57, align 4, !dbg !4173, !tbaa !4068
  %59 = icmp eq i32 %58, 0, !dbg !4173
  br i1 %59, label %28, label %29, !dbg !4179, !llvm.loop !4202

60:                                               ; preds = %0
  %61 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !4205, !tbaa !3474
  %62 = add i32 %61, 1, !dbg !4205
  store volatile i32 %62, i32* @uxPendedTicks, align 4, !dbg !4205, !tbaa !3474
  br label %63

63:                                               ; preds = %20, %40, %28, %60
  ret i32 0, !dbg !4207
}

; Function Attrs: noinline nounwind
define dso_local void @vTaskStartScheduler() local_unnamed_addr #8 !dbg !4208 {
  %1 = alloca %struct.xSTATIC_TCB*, align 4
  %2 = alloca i32*, align 4
  %3 = alloca i32, align 4
  %4 = bitcast %struct.xSTATIC_TCB** %1 to i8*, !dbg !4215
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #27, !dbg !4215
  call void @llvm.dbg.value(metadata %struct.xSTATIC_TCB* null, metadata !4211, metadata !DIExpression()), !dbg !4216
  store %struct.xSTATIC_TCB* null, %struct.xSTATIC_TCB** %1, align 4, !dbg !4217, !tbaa !1599
  %5 = bitcast i32** %2 to i8*, !dbg !4218
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #27, !dbg !4218
  call void @llvm.dbg.value(metadata i32* null, metadata !4213, metadata !DIExpression()), !dbg !4216
  store i32* null, i32** %2, align 4, !dbg !4219, !tbaa !1599
  %6 = bitcast i32* %3 to i8*, !dbg !4220
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #27, !dbg !4220
  call void @llvm.dbg.value(metadata %struct.xSTATIC_TCB** %1, metadata !4211, metadata !DIExpression(DW_OP_deref)), !dbg !4216
  call void @llvm.dbg.value(metadata i32** %2, metadata !4213, metadata !DIExpression(DW_OP_deref)), !dbg !4216
  call void @llvm.dbg.value(metadata i32* %3, metadata !4214, metadata !DIExpression(DW_OP_deref)), !dbg !4216
  call void @vApplicationGetIdleTaskMemory(%struct.xSTATIC_TCB** noundef nonnull %1, i32** noundef nonnull %2, i32* noundef nonnull %3) #27, !dbg !4221
  %7 = load i32, i32* %3, align 4, !dbg !4222, !tbaa !2488
  call void @llvm.dbg.value(metadata i32 %7, metadata !4214, metadata !DIExpression()), !dbg !4216
  %8 = load i32*, i32** %2, align 4, !dbg !4223, !tbaa !1599
  call void @llvm.dbg.value(metadata i32* %8, metadata !4213, metadata !DIExpression()), !dbg !4216
  %9 = load %struct.xSTATIC_TCB*, %struct.xSTATIC_TCB** %1, align 4, !dbg !4224, !tbaa !1599
  call void @llvm.dbg.value(metadata %struct.xSTATIC_TCB* %9, metadata !4211, metadata !DIExpression()), !dbg !4216
  %10 = call i8* @xTaskCreateStatic(void (i8*)* noundef nonnull @prvIdleTask, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0), i32 noundef %7, i8* noundef null, i32 noundef 0, i32* noundef %8, %struct.xSTATIC_TCB* noundef %9), !dbg !4225
  store i8* %10, i8** @xIdleTaskHandle, align 4, !dbg !4226, !tbaa !1599
  %11 = icmp eq i8* %10, null, !dbg !4227
  call void @llvm.dbg.value(metadata i32 undef, metadata !4210, metadata !DIExpression()), !dbg !4229
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #27, !dbg !4230
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #27, !dbg !4230
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #27, !dbg !4230
  br i1 %11, label %15, label %12, !dbg !4231

12:                                               ; preds = %0
  %13 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !4232, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %13, metadata !3744, metadata !DIExpression()) #27, !dbg !4236
  store volatile i32 -1, i32* @xNextTaskUnblockTime, align 4, !dbg !4237, !tbaa !2488
  store volatile i32 1, i32* @xSchedulerRunning, align 4, !dbg !4238, !tbaa !3474
  store volatile i32 0, i32* @xTickCount, align 4, !dbg !4239, !tbaa !2488
  %14 = call i32 @xPortStartScheduler() #27, !dbg !4240
  br label %15, !dbg !4242

15:                                               ; preds = %0, %12
  ret void, !dbg !4243
}

; Function Attrs: noinline noreturn nounwind
define internal void @prvIdleTask(i8* nocapture noundef readnone %0) #17 !dbg !4244 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4246, metadata !DIExpression()), !dbg !4247
  br label %2, !dbg !4248

2:                                                ; preds = %2, %1
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4249, !tbaa !2488
  call void asm sideeffect "dsb", "~{memory}"() #27, !dbg !4249, !srcloc !4255
  call void asm sideeffect "isb", ""() #27, !dbg !4249, !srcloc !4256
  br label %2, !dbg !4257, !llvm.loop !4258
}

; Function Attrs: noinline nounwind
define dso_local void @vTaskEndScheduler() local_unnamed_addr #8 !dbg !4261 {
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !4262, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %1, metadata !3744, metadata !DIExpression()) #27, !dbg !4264
  store volatile i32 0, i32* @xSchedulerRunning, align 4, !dbg !4265, !tbaa !3474
  call void @vPortEndScheduler() #27, !dbg !4266
  ret void, !dbg !4267
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @xTaskGetTickCount() local_unnamed_addr #14 !dbg !4268 {
  %1 = load volatile i32, i32* @xTickCount, align 4, !dbg !4273, !tbaa !2488
  call void @llvm.dbg.value(metadata i32 %1, metadata !4272, metadata !DIExpression()), !dbg !4275
  ret i32 %1, !dbg !4276
}

; Function Attrs: noinline nounwind
define dso_local i32 @xTaskGetTickCountFromISR() local_unnamed_addr #8 !dbg !4277 {
  call void @vPortValidateInterruptPriority() #27, !dbg !4281
  call void @llvm.dbg.value(metadata i32 0, metadata !4280, metadata !DIExpression()), !dbg !4282
  %1 = load volatile i32, i32* @xTickCount, align 4, !dbg !4283, !tbaa !2488
  call void @llvm.dbg.value(metadata i32 %1, metadata !4279, metadata !DIExpression()), !dbg !4282
  ret i32 %1, !dbg !4285
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @uxTaskGetNumberOfTasks() local_unnamed_addr #14 !dbg !4286 {
  %1 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !4289, !tbaa !3474
  ret i32 %1, !dbg !4290
}

; Function Attrs: noinline nounwind
define dso_local i8* @pcTaskGetName(i8* noundef readnone %0) local_unnamed_addr #8 !dbg !4291 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4295, metadata !DIExpression()), !dbg !4297
  %2 = icmp eq i8* %0, null, !dbg !4298
  br i1 %2, label %3, label %5, !dbg !4298

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4298, !tbaa !1599
  br label %7, !dbg !4298

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !4298
  br label %7, !dbg !4298

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !4298
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !4296, metadata !DIExpression()), !dbg !4297
  %9 = icmp eq %struct.tskTaskControlBlock* %8, null, !dbg !4299
  br i1 %9, label %10, label %13, !dbg !4301

10:                                               ; preds = %7
  %11 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !4302, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %11, metadata !3744, metadata !DIExpression()) #27, !dbg !4305
  br label %12, !dbg !4306

12:                                               ; preds = %12, %10
  br label %12, !dbg !4307, !llvm.loop !4310

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 5, i32 0, !dbg !4312
  ret i8* %14, !dbg !4313
}

; Function Attrs: noinline nounwind
define dso_local void @vTaskSwitchContext() local_unnamed_addr #8 !dbg !4314 {
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !4323, !tbaa !3474
  %2 = icmp eq i32 %1, 0, !dbg !4324
  br i1 %2, label %4, label %3, !dbg !4325

3:                                                ; preds = %0
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !4326, !tbaa !3474
  br label %31, !dbg !4328

4:                                                ; preds = %0
  store volatile i32 0, i32* @xYieldPending, align 4, !dbg !4329, !tbaa !3474
  %5 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !4330, !tbaa !3474
  call void @llvm.dbg.value(metadata i32 %5, metadata !4331, metadata !DIExpression()) #27, !dbg !4337
  %6 = call i8 asm sideeffect "clz $0, $1", "=r,r,~{memory}"(i32 %5) #27, !dbg !4339, !srcloc !4340
  call void @llvm.dbg.value(metadata i8 %6, metadata !4336, metadata !DIExpression()) #27, !dbg !4337
  %7 = zext i8 %6 to i32, !dbg !4330
  %8 = sub nsw i32 31, %7, !dbg !4330
  call void @llvm.dbg.value(metadata i32 %8, metadata !4316, metadata !DIExpression()), !dbg !4341
  %9 = getelementptr inbounds [7 x %struct.xLIST], [7 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %8, i32 0, !dbg !4342
  %10 = load volatile i32, i32* %9, align 4, !dbg !4342, !tbaa !4068
  %11 = icmp eq i32 %10, 0, !dbg !4342
  br i1 %11, label %12, label %15, !dbg !4330

12:                                               ; preds = %4
  %13 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !4344, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %13, metadata !3744, metadata !DIExpression()) #27, !dbg !4347
  br label %14, !dbg !4348

14:                                               ; preds = %14, %12
  br label %14, !dbg !4349, !llvm.loop !4352

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata !DIArgList([7 x %struct.xLIST]* @pxReadyTasksLists, i32 %8), metadata !4320, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 20, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4354
  %16 = getelementptr inbounds [7 x %struct.xLIST], [7 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %8, i32 1, !dbg !4355
  %17 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %16, align 4, !dbg !4355, !tbaa !4356
  %18 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %17, i32 0, i32 1, !dbg !4355
  %19 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %18, align 4, !dbg !4355, !tbaa !4357
  store %struct.xLIST_ITEM* %19, %struct.xLIST_ITEM** %16, align 4, !dbg !4355, !tbaa !4356
  %20 = getelementptr inbounds [7 x %struct.xLIST], [7 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %8, i32 2, !dbg !4358
  %21 = bitcast %struct.xMINI_LIST_ITEM* %20 to %struct.xLIST_ITEM*, !dbg !4358
  %22 = icmp eq %struct.xLIST_ITEM* %19, %21, !dbg !4358
  br i1 %22, label %23, label %26, !dbg !4355

23:                                               ; preds = %15
  %24 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %19, i32 0, i32 1, !dbg !4360
  %25 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %24, align 4, !dbg !4360, !tbaa !4357
  store %struct.xLIST_ITEM* %25, %struct.xLIST_ITEM** %16, align 4, !dbg !4360, !tbaa !4356
  br label %26, !dbg !4360

26:                                               ; preds = %23, %15
  %27 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %16, align 4, !dbg !4355, !tbaa !4356
  %28 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %27, i32 0, i32 3, !dbg !4355
  %29 = bitcast i8** %28 to %struct.tskTaskControlBlock**, !dbg !4355
  %30 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %29, align 4, !dbg !4355, !tbaa !4075
  store volatile %struct.tskTaskControlBlock* %30, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4355, !tbaa !1599
  br label %31

31:                                               ; preds = %26, %3
  ret void, !dbg !4362
}

; Function Attrs: noinline nounwind
define dso_local void @vTaskPlaceOnEventList(%struct.xLIST* noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !4363 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !4367, metadata !DIExpression()), !dbg !4369
  call void @llvm.dbg.value(metadata i32 %1, metadata !4368, metadata !DIExpression()), !dbg !4369
  %3 = icmp eq %struct.xLIST* %0, null, !dbg !4370
  br i1 %3, label %4, label %7, !dbg !4372

4:                                                ; preds = %2
  %5 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !4373, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %5, metadata !3744, metadata !DIExpression()) #27, !dbg !4376
  br label %6, !dbg !4377

6:                                                ; preds = %6, %4
  br label %6, !dbg !4378, !llvm.loop !4381

7:                                                ; preds = %2
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4383, !tbaa !1599
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, !dbg !4384
  call void @vListInsert(%struct.xLIST* noundef nonnull %0, %struct.xLIST_ITEM* noundef nonnull %9) #27, !dbg !4385
  call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %1), !dbg !4386
  ret void, !dbg !4387
}

; Function Attrs: noinline nounwind
define dso_local void @vTaskPlaceOnUnorderedEventList(%struct.xLIST* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !4388 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !4392, metadata !DIExpression()), !dbg !4395
  call void @llvm.dbg.value(metadata i32 %1, metadata !4393, metadata !DIExpression()), !dbg !4395
  call void @llvm.dbg.value(metadata i32 %2, metadata !4394, metadata !DIExpression()), !dbg !4395
  %4 = icmp eq %struct.xLIST* %0, null, !dbg !4396
  br i1 %4, label %5, label %8, !dbg !4398

5:                                                ; preds = %3
  %6 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !4399, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %6, metadata !3744, metadata !DIExpression()) #27, !dbg !4402
  br label %7, !dbg !4403

7:                                                ; preds = %7, %5
  br label %7, !dbg !4404, !llvm.loop !4407

8:                                                ; preds = %3
  %9 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !4409, !tbaa !3474
  %10 = icmp eq i32 %9, 0, !dbg !4409
  br i1 %10, label %11, label %14, !dbg !4411

11:                                               ; preds = %8
  %12 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !4412, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %12, metadata !3744, metadata !DIExpression()) #27, !dbg !4415
  br label %13, !dbg !4416

13:                                               ; preds = %13, %11
  br label %13, !dbg !4417, !llvm.loop !4420

14:                                               ; preds = %8
  %15 = or i32 %1, -2147483648, !dbg !4422
  %16 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4422, !tbaa !1599
  %17 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %16, i32 0, i32 2, i32 0, !dbg !4422
  store i32 %15, i32* %17, align 4, !dbg !4422, !tbaa !3857
  %18 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4423, !tbaa !1599
  %19 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %18, i32 0, i32 2, !dbg !4424
  call void @vListInsertEnd(%struct.xLIST* noundef nonnull %0, %struct.xLIST_ITEM* noundef nonnull %19) #27, !dbg !4425
  call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %2), !dbg !4426
  ret void, !dbg !4427
}

; Function Attrs: noinline nounwind
define dso_local i32 @xTaskRemoveFromEventList(%struct.xLIST* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !4428 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !4435, metadata !DIExpression()), !dbg !4438
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 1, !dbg !4439
  %3 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %2, align 4, !dbg !4439, !tbaa !4074
  %4 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %3, i32 0, i32 3, !dbg !4439
  %5 = bitcast i8** %4 to %struct.tskTaskControlBlock**, !dbg !4439
  %6 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %5, align 4, !dbg !4439, !tbaa !4075
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %6, metadata !4436, metadata !DIExpression()), !dbg !4438
  %7 = icmp eq %struct.tskTaskControlBlock* %6, null, !dbg !4440
  br i1 %7, label %8, label %11, !dbg !4442

8:                                                ; preds = %1
  %9 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !4443, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %9, metadata !3744, metadata !DIExpression()) #27, !dbg !4446
  br label %10, !dbg !4447

10:                                               ; preds = %10, %8
  br label %10, !dbg !4448, !llvm.loop !4451

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !4453
  %13 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %12) #27, !dbg !4454
  %14 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !4455, !tbaa !3474
  %15 = icmp eq i32 %14, 0, !dbg !4457
  br i1 %15, label %16, label %25, !dbg !4458

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 1, !dbg !4459
  %18 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %17) #27, !dbg !4461
  %19 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !4462
  %20 = load i32, i32* %19, align 4, !dbg !4462, !tbaa !3849
  %21 = shl i32 1, %20, !dbg !4462
  %22 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !4462, !tbaa !3474
  %23 = or i32 %22, %21, !dbg !4462
  store volatile i32 %23, i32* @uxTopReadyPriority, align 4, !dbg !4462, !tbaa !3474
  %24 = getelementptr inbounds [7 x %struct.xLIST], [7 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %20, !dbg !4462
  call void @vListInsertEnd(%struct.xLIST* noundef nonnull %24, %struct.xLIST_ITEM* noundef nonnull %17) #27, !dbg !4462
  br label %26, !dbg !4463

25:                                               ; preds = %11
  call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %12) #27, !dbg !4464
  br label %26

26:                                               ; preds = %25, %16
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !4466
  %28 = load i32, i32* %27, align 4, !dbg !4466, !tbaa !3849
  %29 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4468, !tbaa !1599
  %30 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %29, i32 0, i32 3, !dbg !4469
  %31 = load i32, i32* %30, align 4, !dbg !4469, !tbaa !3849
  %32 = icmp ugt i32 %28, %31, !dbg !4470
  br i1 %32, label %33, label %34, !dbg !4471

33:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 1, metadata !4437, metadata !DIExpression()), !dbg !4438
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !4472, !tbaa !3474
  br label %34, !dbg !4474

34:                                               ; preds = %26, %33
  %35 = phi i32 [ 1, %33 ], [ 0, %26 ], !dbg !4475
  call void @llvm.dbg.value(metadata i32 %35, metadata !4437, metadata !DIExpression()), !dbg !4438
  ret i32 %35, !dbg !4476
}

; Function Attrs: noinline nounwind
define dso_local void @vTaskRemoveFromUnorderedEventList(%struct.xLIST_ITEM* noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !4477 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !4481, metadata !DIExpression()), !dbg !4484
  call void @llvm.dbg.value(metadata i32 %1, metadata !4482, metadata !DIExpression()), !dbg !4484
  %3 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !4485, !tbaa !3474
  %4 = icmp eq i32 %3, 0, !dbg !4485
  br i1 %4, label %5, label %8, !dbg !4487

5:                                                ; preds = %2
  %6 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !4488, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %6, metadata !3744, metadata !DIExpression()) #27, !dbg !4491
  br label %7, !dbg !4492

7:                                                ; preds = %7, %5
  br label %7, !dbg !4493, !llvm.loop !4496

8:                                                ; preds = %2
  %9 = or i32 %1, -2147483648, !dbg !4498
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 0, !dbg !4498
  store i32 %9, i32* %10, align 4, !dbg !4498, !tbaa !4499
  %11 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 3, !dbg !4500
  %12 = bitcast i8** %11 to %struct.tskTaskControlBlock**, !dbg !4500
  %13 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %12, align 4, !dbg !4500, !tbaa !4075
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %13, metadata !4483, metadata !DIExpression()), !dbg !4484
  %14 = icmp eq %struct.tskTaskControlBlock* %13, null, !dbg !4501
  br i1 %14, label %15, label %18, !dbg !4503

15:                                               ; preds = %8
  %16 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !4504, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %16, metadata !3744, metadata !DIExpression()) #27, !dbg !4507
  br label %17, !dbg !4508

17:                                               ; preds = %17, %15
  br label %17, !dbg !4509, !llvm.loop !4512

18:                                               ; preds = %8
  %19 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef %0) #27, !dbg !4514
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %13, i32 0, i32 1, !dbg !4515
  %21 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %20) #27, !dbg !4516
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %13, i32 0, i32 3, !dbg !4517
  %23 = load i32, i32* %22, align 4, !dbg !4517, !tbaa !3849
  %24 = shl i32 1, %23, !dbg !4517
  %25 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !4517, !tbaa !3474
  %26 = or i32 %25, %24, !dbg !4517
  store volatile i32 %26, i32* @uxTopReadyPriority, align 4, !dbg !4517, !tbaa !3474
  %27 = getelementptr inbounds [7 x %struct.xLIST], [7 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %23, !dbg !4517
  call void @vListInsertEnd(%struct.xLIST* noundef nonnull %27, %struct.xLIST_ITEM* noundef nonnull %20) #27, !dbg !4517
  %28 = load i32, i32* %22, align 4, !dbg !4518, !tbaa !3849
  %29 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4520, !tbaa !1599
  %30 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %29, i32 0, i32 3, !dbg !4521
  %31 = load i32, i32* %30, align 4, !dbg !4521, !tbaa !3849
  %32 = icmp ugt i32 %28, %31, !dbg !4522
  br i1 %32, label %33, label %34, !dbg !4523

33:                                               ; preds = %18
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !4524, !tbaa !3474
  br label %34, !dbg !4526

34:                                               ; preds = %33, %18
  ret void, !dbg !4527
}

; Function Attrs: noinline nounwind
define dso_local void @vTaskSetTimeOutState(%struct.DMA_TypeDef* noundef writeonly %0) local_unnamed_addr #8 !dbg !4528 {
  call void @llvm.dbg.value(metadata %struct.DMA_TypeDef* %0, metadata !4539, metadata !DIExpression()), !dbg !4540
  %2 = icmp eq %struct.DMA_TypeDef* %0, null, !dbg !4541
  br i1 %2, label %3, label %6, !dbg !4543

3:                                                ; preds = %1
  %4 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !4544, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %4, metadata !3744, metadata !DIExpression()) #27, !dbg !4547
  br label %5, !dbg !4548

5:                                                ; preds = %5, %3
  br label %5, !dbg !4549, !llvm.loop !4552

6:                                                ; preds = %1
  call void @vPortEnterCritical() #27, !dbg !4554
  %7 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !4555, !tbaa !3474
  %8 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 0, !dbg !4557
  store i32 %7, i32* %8, align 4, !dbg !4558, !tbaa !4559
  %9 = load volatile i32, i32* @xTickCount, align 4, !dbg !4561, !tbaa !2488
  %10 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 1, !dbg !4562
  store i32 %9, i32* %10, align 4, !dbg !4563, !tbaa !4564
  call void @vPortExitCritical() #27, !dbg !4565
  ret void, !dbg !4566
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local void @vTaskInternalSetTimeOutState(%struct.DMA_TypeDef* nocapture noundef writeonly %0) local_unnamed_addr #14 !dbg !4567 {
  call void @llvm.dbg.value(metadata %struct.DMA_TypeDef* %0, metadata !4569, metadata !DIExpression()), !dbg !4570
  %2 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !4571, !tbaa !3474
  %3 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 0, !dbg !4572
  store i32 %2, i32* %3, align 4, !dbg !4573, !tbaa !4559
  %4 = load volatile i32, i32* @xTickCount, align 4, !dbg !4574, !tbaa !2488
  %5 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 1, !dbg !4575
  store i32 %4, i32* %5, align 4, !dbg !4576, !tbaa !4564
  ret void, !dbg !4577
}

; Function Attrs: noinline nounwind
define dso_local i32 @xTaskCheckForTimeOut(%struct.DMA_TypeDef* noundef %0, i32* noundef %1) local_unnamed_addr #8 !dbg !4578 {
  call void @llvm.dbg.value(metadata %struct.DMA_TypeDef* %0, metadata !4584, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i32* %1, metadata !4585, metadata !DIExpression()), !dbg !4590
  %3 = icmp eq %struct.DMA_TypeDef* %0, null, !dbg !4591
  br i1 %3, label %4, label %7, !dbg !4593

4:                                                ; preds = %2
  %5 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !4594, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %5, metadata !3744, metadata !DIExpression()) #27, !dbg !4597
  br label %6, !dbg !4598

6:                                                ; preds = %6, %4
  br label %6, !dbg !4599, !llvm.loop !4602

7:                                                ; preds = %2
  %8 = icmp eq i32* %1, null, !dbg !4604
  br i1 %8, label %9, label %12, !dbg !4606

9:                                                ; preds = %7
  %10 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !4607, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %10, metadata !3744, metadata !DIExpression()) #27, !dbg !4610
  br label %11, !dbg !4611

11:                                               ; preds = %11, %9
  br label %11, !dbg !4612, !llvm.loop !4615

12:                                               ; preds = %7
  call void @vPortEnterCritical() #27, !dbg !4617
  %13 = load volatile i32, i32* @xTickCount, align 4, !dbg !4618, !tbaa !2488
  call void @llvm.dbg.value(metadata i32 %13, metadata !4587, metadata !DIExpression()), !dbg !4619
  %14 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 1, !dbg !4620
  %15 = load i32, i32* %14, align 4, !dbg !4620, !tbaa !4564
  %16 = sub i32 %13, %15, !dbg !4621
  call void @llvm.dbg.value(metadata i32 %16, metadata !4589, metadata !DIExpression()), !dbg !4619
  %17 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !4622, !tbaa !3474
  %18 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 0, !dbg !4624
  %19 = load i32, i32* %18, align 4, !dbg !4624, !tbaa !4559
  %20 = icmp eq i32 %17, %19, !dbg !4625
  %21 = icmp ult i32 %13, %15
  %22 = select i1 %20, i1 true, i1 %21, !dbg !4626
  br i1 %22, label %23, label %29, !dbg !4626

23:                                               ; preds = %12
  %24 = load i32, i32* %1, align 4, !dbg !4627, !tbaa !2488
  %25 = icmp ugt i32 %24, %16, !dbg !4629
  br i1 %25, label %26, label %28, !dbg !4630

26:                                               ; preds = %23
  %27 = sub i32 %24, %16, !dbg !4631
  store i32 %27, i32* %1, align 4, !dbg !4631, !tbaa !2488
  call void @vTaskInternalSetTimeOutState(%struct.DMA_TypeDef* noundef nonnull %0), !dbg !4633
  call void @llvm.dbg.value(metadata i32 0, metadata !4586, metadata !DIExpression()), !dbg !4590
  br label %29, !dbg !4634

28:                                               ; preds = %23
  store i32 0, i32* %1, align 4, !dbg !4635, !tbaa !2488
  call void @llvm.dbg.value(metadata i32 1, metadata !4586, metadata !DIExpression()), !dbg !4590
  br label %29

29:                                               ; preds = %12, %26, %28
  %30 = phi i32 [ 0, %26 ], [ 1, %28 ], [ 1, %12 ], !dbg !4637
  call void @llvm.dbg.value(metadata i32 %30, metadata !4586, metadata !DIExpression()), !dbg !4590
  call void @vPortExitCritical() #27, !dbg !4638
  ret i32 %30, !dbg !4639
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @vTaskMissedYield() local_unnamed_addr #13 !dbg !4640 {
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !4641, !tbaa !3474
  ret void, !dbg !4642
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @uxTaskResetEventItemValue() local_unnamed_addr #14 !dbg !4643 {
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4646, !tbaa !1599
  %2 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %1, i32 0, i32 2, i32 0, !dbg !4646
  %3 = load i32, i32* %2, align 4, !dbg !4646, !tbaa !3857
  call void @llvm.dbg.value(metadata i32 %3, metadata !4645, metadata !DIExpression()), !dbg !4647
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4648, !tbaa !1599
  %5 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 3, !dbg !4648
  %6 = load i32, i32* %5, align 4, !dbg !4648, !tbaa !3849
  %7 = sub i32 7, %6, !dbg !4648
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4648, !tbaa !1599
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, i32 0, !dbg !4648
  store i32 %7, i32* %9, align 4, !dbg !4648, !tbaa !3857
  ret i32 %3, !dbg !4649
}

; Function Attrs: noinline nounwind
define dso_local i32 @ulTaskNotifyTake(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !4650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4654, metadata !DIExpression()), !dbg !4657
  call void @llvm.dbg.value(metadata i32 %1, metadata !4655, metadata !DIExpression()), !dbg !4657
  call void @vPortEnterCritical() #27, !dbg !4658
  %3 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4659, !tbaa !1599
  %4 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %3, i32 0, i32 6, !dbg !4662
  %5 = load volatile i32, i32* %4, align 4, !dbg !4662, !tbaa !3863
  %6 = icmp eq i32 %5, 0, !dbg !4663
  br i1 %6, label %7, label %12, !dbg !4664

7:                                                ; preds = %2
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4665, !tbaa !1599
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 7, !dbg !4667
  store volatile i8 1, i8* %9, align 4, !dbg !4668, !tbaa !3866
  %10 = icmp eq i32 %1, 0, !dbg !4669
  br i1 %10, label %12, label %11, !dbg !4671

11:                                               ; preds = %7
  call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %1), !dbg !4672
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4674, !tbaa !2488
  call void asm sideeffect "dsb", "~{memory}"() #27, !dbg !4674, !srcloc !4676
  call void asm sideeffect "isb", ""() #27, !dbg !4674, !srcloc !4677
  br label %12, !dbg !4678

12:                                               ; preds = %2, %11, %7
  call void @vPortExitCritical() #27, !dbg !4679
  call void @vPortEnterCritical() #27, !dbg !4680
  %13 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4681, !tbaa !1599
  %14 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %13, i32 0, i32 6, !dbg !4683
  %15 = load volatile i32, i32* %14, align 4, !dbg !4683, !tbaa !3863
  call void @llvm.dbg.value(metadata i32 %15, metadata !4656, metadata !DIExpression()), !dbg !4657
  %16 = icmp eq i32 %15, 0, !dbg !4684
  br i1 %16, label %23, label %17, !dbg !4686

17:                                               ; preds = %12
  %18 = icmp eq i32 %0, 0, !dbg !4687
  %19 = add i32 %15, -1, !dbg !4690
  %20 = select i1 %18, i32 %19, i32 0, !dbg !4690
  %21 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4691, !tbaa !1599
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %21, i32 0, i32 6, !dbg !4691
  store volatile i32 %20, i32* %22, align 4, !dbg !4691, !tbaa !3863
  br label %23, !dbg !4692

23:                                               ; preds = %17, %12
  %24 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4692, !tbaa !1599
  %25 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %24, i32 0, i32 7, !dbg !4693
  store volatile i8 0, i8* %25, align 4, !dbg !4694, !tbaa !3866
  call void @vPortExitCritical() #27, !dbg !4695
  ret i32 %15, !dbg !4696
}

; Function Attrs: noinline nounwind
define dso_local i32 @xTaskNotifyWait(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2, i32 noundef %3) local_unnamed_addr #8 !dbg !4697 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4701, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata i32 %1, metadata !4702, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata i32* %2, metadata !4703, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata i32 %3, metadata !4704, metadata !DIExpression()), !dbg !4706
  call void @vPortEnterCritical() #27, !dbg !4707
  %5 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4708, !tbaa !1599
  %6 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %5, i32 0, i32 7, !dbg !4711
  %7 = load volatile i8, i8* %6, align 4, !dbg !4711, !tbaa !3866
  %8 = icmp eq i8 %7, 2, !dbg !4712
  br i1 %8, label %19, label %9, !dbg !4713

9:                                                ; preds = %4
  %10 = xor i32 %0, -1, !dbg !4714
  %11 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4716, !tbaa !1599
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 6, !dbg !4717
  %13 = load volatile i32, i32* %12, align 4, !dbg !4718, !tbaa !3863
  %14 = and i32 %13, %10, !dbg !4718
  store volatile i32 %14, i32* %12, align 4, !dbg !4718, !tbaa !3863
  %15 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4719, !tbaa !1599
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 7, !dbg !4720
  store volatile i8 1, i8* %16, align 4, !dbg !4721, !tbaa !3866
  %17 = icmp eq i32 %3, 0, !dbg !4722
  br i1 %17, label %19, label %18, !dbg !4724

18:                                               ; preds = %9
  call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %3), !dbg !4725
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4727, !tbaa !2488
  call void asm sideeffect "dsb", "~{memory}"() #27, !dbg !4727, !srcloc !4729
  call void asm sideeffect "isb", ""() #27, !dbg !4727, !srcloc !4730
  br label %19, !dbg !4731

19:                                               ; preds = %4, %18, %9
  call void @vPortExitCritical() #27, !dbg !4732
  call void @vPortEnterCritical() #27, !dbg !4733
  %20 = icmp eq i32* %2, null, !dbg !4734
  br i1 %20, label %25, label %21, !dbg !4737

21:                                               ; preds = %19
  %22 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4738, !tbaa !1599
  %23 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %22, i32 0, i32 6, !dbg !4740
  %24 = load volatile i32, i32* %23, align 4, !dbg !4740, !tbaa !3863
  store i32 %24, i32* %2, align 4, !dbg !4741, !tbaa !2488
  br label %25, !dbg !4742

25:                                               ; preds = %21, %19
  %26 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4743, !tbaa !1599
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %26, i32 0, i32 7, !dbg !4745
  %28 = load volatile i8, i8* %27, align 4, !dbg !4745, !tbaa !3866
  %29 = icmp eq i8 %28, 2, !dbg !4746
  br i1 %29, label %30, label %36, !dbg !4747

30:                                               ; preds = %25
  %31 = xor i32 %1, -1, !dbg !4748
  %32 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4750, !tbaa !1599
  %33 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %32, i32 0, i32 6, !dbg !4751
  %34 = load volatile i32, i32* %33, align 4, !dbg !4752, !tbaa !3863
  %35 = and i32 %34, %31, !dbg !4752
  store volatile i32 %35, i32* %33, align 4, !dbg !4752, !tbaa !3863
  call void @llvm.dbg.value(metadata i32 1, metadata !4705, metadata !DIExpression()), !dbg !4706
  br label %36

36:                                               ; preds = %25, %30
  %37 = phi i32 [ 1, %30 ], [ 0, %25 ], !dbg !4753
  call void @llvm.dbg.value(metadata i32 %37, metadata !4705, metadata !DIExpression()), !dbg !4706
  %38 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4754, !tbaa !1599
  %39 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %38, i32 0, i32 7, !dbg !4755
  store volatile i8 0, i8* %39, align 4, !dbg !4756, !tbaa !3866
  call void @vPortExitCritical() #27, !dbg !4757
  ret i32 %37, !dbg !4758
}

; Function Attrs: noinline nounwind
define dso_local i32 @xTaskGenericNotify(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef writeonly %3) local_unnamed_addr #8 !dbg !4759 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4764, metadata !DIExpression()), !dbg !4771
  call void @llvm.dbg.value(metadata i32 %1, metadata !4765, metadata !DIExpression()), !dbg !4771
  call void @llvm.dbg.value(metadata i32 %2, metadata !4766, metadata !DIExpression()), !dbg !4771
  call void @llvm.dbg.value(metadata i32* %3, metadata !4767, metadata !DIExpression()), !dbg !4771
  call void @llvm.dbg.value(metadata i32 1, metadata !4769, metadata !DIExpression()), !dbg !4771
  %5 = icmp eq i8* %0, null, !dbg !4772
  br i1 %5, label %6, label %9, !dbg !4774

6:                                                ; preds = %4
  %7 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !4775, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %7, metadata !3744, metadata !DIExpression()) #27, !dbg !4778
  br label %8, !dbg !4779

8:                                                ; preds = %8, %6
  br label %8, !dbg !4780, !llvm.loop !4783

9:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4768, metadata !DIExpression()), !dbg !4771
  call void @vPortEnterCritical() #27, !dbg !4785
  %10 = icmp eq i32* %3, null, !dbg !4786
  br i1 %10, label %15, label %11, !dbg !4789

11:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i8* %0, metadata !4768, metadata !DIExpression()), !dbg !4771
  %12 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !4790
  %13 = bitcast i8* %12 to i32*, !dbg !4790
  %14 = load volatile i32, i32* %13, align 4, !dbg !4790, !tbaa !3863
  store i32 %14, i32* %3, align 4, !dbg !4792, !tbaa !2488
  br label %15, !dbg !4793

15:                                               ; preds = %11, %9
  %16 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !4794
  %17 = load volatile i8, i8* %16, align 4, !dbg !4794, !tbaa !3866
  call void @llvm.dbg.value(metadata i8 %17, metadata !4770, metadata !DIExpression()), !dbg !4771
  store volatile i8 2, i8* %16, align 4, !dbg !4795, !tbaa !3866
  switch i32 %2, label %36 [
    i32 1, label %18
    i32 2, label %23
    i32 3, label %28
    i32 4, label %31
  ], !dbg !4796

18:                                               ; preds = %15
  %19 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !4797
  %20 = bitcast i8* %19 to i32*, !dbg !4797
  %21 = load volatile i32, i32* %20, align 4, !dbg !4799, !tbaa !3863
  %22 = or i32 %21, %1, !dbg !4799
  store volatile i32 %22, i32* %20, align 4, !dbg !4799, !tbaa !3863
  br label %36, !dbg !4800

23:                                               ; preds = %15
  %24 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !4801
  %25 = bitcast i8* %24 to i32*, !dbg !4801
  %26 = load volatile i32, i32* %25, align 4, !dbg !4802, !tbaa !3863
  %27 = add i32 %26, 1, !dbg !4802
  store volatile i32 %27, i32* %25, align 4, !dbg !4802, !tbaa !3863
  br label %36, !dbg !4803

28:                                               ; preds = %15
  %29 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !4804
  %30 = bitcast i8* %29 to i32*, !dbg !4804
  store volatile i32 %1, i32* %30, align 4, !dbg !4805, !tbaa !3863
  br label %36, !dbg !4806

31:                                               ; preds = %15
  %32 = icmp eq i8 %17, 2, !dbg !4807
  br i1 %32, label %36, label %33, !dbg !4809

33:                                               ; preds = %31
  %34 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !4810
  %35 = bitcast i8* %34 to i32*, !dbg !4810
  store volatile i32 %1, i32* %35, align 4, !dbg !4812, !tbaa !3863
  br label %36, !dbg !4813

36:                                               ; preds = %31, %33, %15, %28, %23, %18
  %37 = phi i32 [ 1, %15 ], [ 1, %33 ], [ 1, %28 ], [ 1, %23 ], [ 1, %18 ], [ 0, %31 ], !dbg !4771
  call void @llvm.dbg.value(metadata i32 %37, metadata !4769, metadata !DIExpression()), !dbg !4771
  %38 = icmp eq i8 %17, 1, !dbg !4814
  br i1 %38, label %39, label %59, !dbg !4816

39:                                               ; preds = %36
  %40 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4817
  %41 = bitcast i8* %40 to %struct.xLIST_ITEM*, !dbg !4817
  %42 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %41) #27, !dbg !4819
  %43 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !4820
  %44 = bitcast i8* %43 to i32*, !dbg !4820
  %45 = load i32, i32* %44, align 4, !dbg !4820, !tbaa !3849
  %46 = shl i32 1, %45, !dbg !4820
  %47 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !4820, !tbaa !3474
  %48 = or i32 %47, %46, !dbg !4820
  store volatile i32 %48, i32* @uxTopReadyPriority, align 4, !dbg !4820, !tbaa !3474
  %49 = getelementptr inbounds [7 x %struct.xLIST], [7 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %45, !dbg !4820
  call void @vListInsertEnd(%struct.xLIST* noundef nonnull %49, %struct.xLIST_ITEM* noundef nonnull %41) #27, !dbg !4820
  %50 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !4821
  %51 = bitcast i8* %50 to i8**, !dbg !4821
  %52 = load i8*, i8** %51, align 4, !dbg !4821, !tbaa !4195
  %53 = icmp eq i8* %52, null, !dbg !4821
  br i1 %53, label %57, label %54, !dbg !4823

54:                                               ; preds = %39
  %55 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !4824, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %55, metadata !3744, metadata !DIExpression()) #27, !dbg !4827
  br label %56, !dbg !4828

56:                                               ; preds = %56, %54
  br label %56, !dbg !4829, !llvm.loop !4832

57:                                               ; preds = %39
  %58 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4834, !tbaa !1599
  br label %59, !dbg !4836

59:                                               ; preds = %36, %57
  call void @vPortExitCritical() #27, !dbg !4837
  ret i32 %37, !dbg !4838
}

; Function Attrs: noinline nounwind
define dso_local i32 @xTaskGenericNotifyFromISR(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef writeonly %3, i32* noundef writeonly %4) local_unnamed_addr #8 !dbg !4839 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4844, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32 %1, metadata !4845, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32 %2, metadata !4846, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32* %3, metadata !4847, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32* %4, metadata !4848, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32 1, metadata !4851, metadata !DIExpression()), !dbg !4853
  %6 = icmp eq i8* %0, null, !dbg !4854
  br i1 %6, label %7, label %10, !dbg !4856

7:                                                ; preds = %5
  %8 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !4857, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %8, metadata !3744, metadata !DIExpression()) #27, !dbg !4860
  br label %9, !dbg !4861

9:                                                ; preds = %9, %7
  br label %9, !dbg !4862, !llvm.loop !4865

10:                                               ; preds = %5
  call void @vPortValidateInterruptPriority() #27, !dbg !4867
  call void @llvm.dbg.value(metadata i8* %0, metadata !4849, metadata !DIExpression()), !dbg !4853
  %11 = call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i,~{memory}"(i32 80) #27, !dbg !4868, !srcloc !4874
  call void @llvm.dbg.value(metadata i32 undef, metadata !4871, metadata !DIExpression()) #27, !dbg !4875
  call void @llvm.dbg.value(metadata i32 undef, metadata !4872, metadata !DIExpression()) #27, !dbg !4875
  call void @llvm.dbg.value(metadata i32 undef, metadata !4852, metadata !DIExpression()), !dbg !4853
  %12 = icmp eq i32* %3, null, !dbg !4876
  br i1 %12, label %17, label %13, !dbg !4879

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i8* %0, metadata !4849, metadata !DIExpression()), !dbg !4853
  %14 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !4880
  %15 = bitcast i8* %14 to i32*, !dbg !4880
  %16 = load volatile i32, i32* %15, align 4, !dbg !4880, !tbaa !3863
  store i32 %16, i32* %3, align 4, !dbg !4882, !tbaa !2488
  br label %17, !dbg !4883

17:                                               ; preds = %13, %10
  %18 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !4884
  %19 = load volatile i8, i8* %18, align 4, !dbg !4884, !tbaa !3866
  call void @llvm.dbg.value(metadata i8 %19, metadata !4850, metadata !DIExpression()), !dbg !4853
  store volatile i8 2, i8* %18, align 4, !dbg !4885, !tbaa !3866
  switch i32 %2, label %38 [
    i32 1, label %20
    i32 2, label %25
    i32 3, label %30
    i32 4, label %33
  ], !dbg !4886

20:                                               ; preds = %17
  %21 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !4887
  %22 = bitcast i8* %21 to i32*, !dbg !4887
  %23 = load volatile i32, i32* %22, align 4, !dbg !4889, !tbaa !3863
  %24 = or i32 %23, %1, !dbg !4889
  store volatile i32 %24, i32* %22, align 4, !dbg !4889, !tbaa !3863
  br label %38, !dbg !4890

25:                                               ; preds = %17
  %26 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !4891
  %27 = bitcast i8* %26 to i32*, !dbg !4891
  %28 = load volatile i32, i32* %27, align 4, !dbg !4892, !tbaa !3863
  %29 = add i32 %28, 1, !dbg !4892
  store volatile i32 %29, i32* %27, align 4, !dbg !4892, !tbaa !3863
  br label %38, !dbg !4893

30:                                               ; preds = %17
  %31 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !4894
  %32 = bitcast i8* %31 to i32*, !dbg !4894
  store volatile i32 %1, i32* %32, align 4, !dbg !4895, !tbaa !3863
  br label %38, !dbg !4896

33:                                               ; preds = %17
  %34 = icmp eq i8 %19, 2, !dbg !4897
  br i1 %34, label %38, label %35, !dbg !4899

35:                                               ; preds = %33
  %36 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !4900
  %37 = bitcast i8* %36 to i32*, !dbg !4900
  store volatile i32 %1, i32* %37, align 4, !dbg !4902, !tbaa !3863
  br label %38, !dbg !4903

38:                                               ; preds = %33, %35, %17, %30, %25, %20
  %39 = phi i32 [ 1, %17 ], [ 1, %35 ], [ 1, %30 ], [ 1, %25 ], [ 1, %20 ], [ 0, %33 ], !dbg !4853
  call void @llvm.dbg.value(metadata i32 %39, metadata !4851, metadata !DIExpression()), !dbg !4853
  %40 = icmp eq i8 %19, 1, !dbg !4904
  br i1 %40, label %41, label %78, !dbg !4906

41:                                               ; preds = %38
  %42 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !4907
  %43 = bitcast i8* %42 to %struct.xLIST_ITEM*, !dbg !4907
  %44 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !4907
  %45 = bitcast i8* %44 to i8**, !dbg !4907
  %46 = load i8*, i8** %45, align 4, !dbg !4907, !tbaa !4195
  %47 = icmp eq i8* %46, null, !dbg !4907
  br i1 %47, label %51, label %48, !dbg !4910

48:                                               ; preds = %41
  %49 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !4911, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %49, metadata !3744, metadata !DIExpression()) #27, !dbg !4914
  br label %50, !dbg !4915

50:                                               ; preds = %50, %48
  br label %50, !dbg !4916, !llvm.loop !4919

51:                                               ; preds = %41
  %52 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !4921, !tbaa !3474
  %53 = icmp eq i32 %52, 0, !dbg !4923
  br i1 %53, label %54, label %65, !dbg !4924

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4925
  %56 = bitcast i8* %55 to %struct.xLIST_ITEM*, !dbg !4925
  %57 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %56) #27, !dbg !4927
  %58 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !4928
  %59 = bitcast i8* %58 to i32*, !dbg !4928
  %60 = load i32, i32* %59, align 4, !dbg !4928, !tbaa !3849
  %61 = shl i32 1, %60, !dbg !4928
  %62 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !4928, !tbaa !3474
  %63 = or i32 %62, %61, !dbg !4928
  store volatile i32 %63, i32* @uxTopReadyPriority, align 4, !dbg !4928, !tbaa !3474
  %64 = getelementptr inbounds [7 x %struct.xLIST], [7 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %60, !dbg !4928
  call void @vListInsertEnd(%struct.xLIST* noundef nonnull %64, %struct.xLIST_ITEM* noundef nonnull %56) #27, !dbg !4928
  br label %66, !dbg !4929

65:                                               ; preds = %51
  call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %43) #27, !dbg !4930
  br label %66

66:                                               ; preds = %65, %54
  %67 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !4932
  %68 = bitcast i8* %67 to i32*, !dbg !4932
  %69 = load i32, i32* %68, align 4, !dbg !4932, !tbaa !3849
  %70 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4934, !tbaa !1599
  %71 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %70, i32 0, i32 3, !dbg !4935
  %72 = load i32, i32* %71, align 4, !dbg !4935, !tbaa !3849
  %73 = icmp ugt i32 %69, %72, !dbg !4936
  br i1 %73, label %74, label %78, !dbg !4937

74:                                               ; preds = %66
  %75 = icmp eq i32* %4, null, !dbg !4938
  br i1 %75, label %77, label %76, !dbg !4941

76:                                               ; preds = %74
  store i32 1, i32* %4, align 4, !dbg !4942, !tbaa !3474
  br label %78, !dbg !4944

77:                                               ; preds = %74
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !4945, !tbaa !3474
  br label %78

78:                                               ; preds = %77, %76, %66, %38
  %79 = extractvalue { i32, i32 } %11, 0, !dbg !4868
  call void @llvm.dbg.value(metadata i32 %79, metadata !4871, metadata !DIExpression()) #27, !dbg !4875
  call void @llvm.dbg.value(metadata i32 %79, metadata !4852, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32 undef, metadata !4947, metadata !DIExpression()) #27, !dbg !4950
  call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 %79) #27, !dbg !4952, !srcloc !4953
  ret i32 %39, !dbg !4954
}

; Function Attrs: noinline nounwind
define dso_local void @vTaskNotifyGiveFromISR(i8* noundef %0, i32* noundef writeonly %1) local_unnamed_addr #8 !dbg !4955 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4959, metadata !DIExpression()), !dbg !4964
  call void @llvm.dbg.value(metadata i32* %1, metadata !4960, metadata !DIExpression()), !dbg !4964
  %3 = icmp eq i8* %0, null, !dbg !4965
  br i1 %3, label %4, label %7, !dbg !4967

4:                                                ; preds = %2
  %5 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !4968, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %5, metadata !3744, metadata !DIExpression()) #27, !dbg !4971
  br label %6, !dbg !4972

6:                                                ; preds = %6, %4
  br label %6, !dbg !4973, !llvm.loop !4976

7:                                                ; preds = %2
  call void @vPortValidateInterruptPriority() #27, !dbg !4978
  call void @llvm.dbg.value(metadata i8* %0, metadata !4961, metadata !DIExpression()), !dbg !4964
  %8 = call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i,~{memory}"(i32 80) #27, !dbg !4979, !srcloc !4874
  call void @llvm.dbg.value(metadata i32 undef, metadata !4871, metadata !DIExpression()) #27, !dbg !4981
  call void @llvm.dbg.value(metadata i32 undef, metadata !4872, metadata !DIExpression()) #27, !dbg !4981
  call void @llvm.dbg.value(metadata i32 undef, metadata !4963, metadata !DIExpression()), !dbg !4964
  %9 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !4982
  %10 = load volatile i8, i8* %9, align 4, !dbg !4982, !tbaa !3866
  call void @llvm.dbg.value(metadata i8 %10, metadata !4962, metadata !DIExpression()), !dbg !4964
  store volatile i8 2, i8* %9, align 4, !dbg !4984, !tbaa !3866
  %11 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !4985
  %12 = bitcast i8* %11 to i32*, !dbg !4985
  %13 = load volatile i32, i32* %12, align 4, !dbg !4986, !tbaa !3863
  %14 = add i32 %13, 1, !dbg !4986
  store volatile i32 %14, i32* %12, align 4, !dbg !4986, !tbaa !3863
  %15 = icmp eq i8 %10, 1, !dbg !4987
  br i1 %15, label %16, label %53, !dbg !4989

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !4990
  %18 = bitcast i8* %17 to %struct.xLIST_ITEM*, !dbg !4990
  %19 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !4990
  %20 = bitcast i8* %19 to i8**, !dbg !4990
  %21 = load i8*, i8** %20, align 4, !dbg !4990, !tbaa !4195
  %22 = icmp eq i8* %21, null, !dbg !4990
  br i1 %22, label %26, label %23, !dbg !4993

23:                                               ; preds = %16
  %24 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #27, !dbg !4994, !srcloc !3747
  call void @llvm.dbg.value(metadata i32 %24, metadata !3744, metadata !DIExpression()) #27, !dbg !4997
  br label %25, !dbg !4998

25:                                               ; preds = %25, %23
  br label %25, !dbg !4999, !llvm.loop !5002

26:                                               ; preds = %16
  %27 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !5004, !tbaa !3474
  %28 = icmp eq i32 %27, 0, !dbg !5006
  br i1 %28, label %29, label %40, !dbg !5007

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !5008
  %31 = bitcast i8* %30 to %struct.xLIST_ITEM*, !dbg !5008
  %32 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %31) #27, !dbg !5010
  %33 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !5011
  %34 = bitcast i8* %33 to i32*, !dbg !5011
  %35 = load i32, i32* %34, align 4, !dbg !5011, !tbaa !3849
  %36 = shl i32 1, %35, !dbg !5011
  %37 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !5011, !tbaa !3474
  %38 = or i32 %37, %36, !dbg !5011
  store volatile i32 %38, i32* @uxTopReadyPriority, align 4, !dbg !5011, !tbaa !3474
  %39 = getelementptr inbounds [7 x %struct.xLIST], [7 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %35, !dbg !5011
  call void @vListInsertEnd(%struct.xLIST* noundef nonnull %39, %struct.xLIST_ITEM* noundef nonnull %31) #27, !dbg !5011
  br label %41, !dbg !5012

40:                                               ; preds = %26
  call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %18) #27, !dbg !5013
  br label %41

41:                                               ; preds = %40, %29
  %42 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !5015
  %43 = bitcast i8* %42 to i32*, !dbg !5015
  %44 = load i32, i32* %43, align 4, !dbg !5015, !tbaa !3849
  %45 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5017, !tbaa !1599
  %46 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %45, i32 0, i32 3, !dbg !5018
  %47 = load i32, i32* %46, align 4, !dbg !5018, !tbaa !3849
  %48 = icmp ugt i32 %44, %47, !dbg !5019
  br i1 %48, label %49, label %53, !dbg !5020

49:                                               ; preds = %41
  %50 = icmp eq i32* %1, null, !dbg !5021
  br i1 %50, label %52, label %51, !dbg !5024

51:                                               ; preds = %49
  store i32 1, i32* %1, align 4, !dbg !5025, !tbaa !3474
  br label %53, !dbg !5027

52:                                               ; preds = %49
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !5028, !tbaa !3474
  br label %53

53:                                               ; preds = %52, %51, %41, %7
  %54 = extractvalue { i32, i32 } %8, 0, !dbg !4979
  call void @llvm.dbg.value(metadata i32 %54, metadata !4871, metadata !DIExpression()) #27, !dbg !4981
  call void @llvm.dbg.value(metadata i32 %54, metadata !4963, metadata !DIExpression()), !dbg !4964
  call void @llvm.dbg.value(metadata i32 undef, metadata !4947, metadata !DIExpression()) #27, !dbg !5030
  call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 %54) #27, !dbg !5032, !srcloc !4953
  ret void, !dbg !5033
}

; Function Attrs: noinline nounwind
define dso_local i32 @xTaskNotifyStateClear(i8* noundef %0) local_unnamed_addr #8 !dbg !5034 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5038, metadata !DIExpression()), !dbg !5041
  %2 = icmp eq i8* %0, null, !dbg !5042
  br i1 %2, label %3, label %5, !dbg !5042

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5042, !tbaa !1599
  br label %7, !dbg !5042

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !5042
  br label %7, !dbg !5042

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !5042
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !5039, metadata !DIExpression()), !dbg !5041
  call void @vPortEnterCritical() #27, !dbg !5043
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 7, !dbg !5044
  %10 = load volatile i8, i8* %9, align 4, !dbg !5044, !tbaa !3866
  %11 = icmp eq i8 %10, 2, !dbg !5047
  br i1 %11, label %12, label %13, !dbg !5048

12:                                               ; preds = %7
  store volatile i8 0, i8* %9, align 4, !dbg !5049, !tbaa !3866
  call void @llvm.dbg.value(metadata i32 1, metadata !5040, metadata !DIExpression()), !dbg !5041
  br label %13, !dbg !5051

13:                                               ; preds = %7, %12
  %14 = phi i32 [ 1, %12 ], [ 0, %7 ], !dbg !5052
  call void @llvm.dbg.value(metadata i32 %14, metadata !5040, metadata !DIExpression()), !dbg !5041
  call void @vPortExitCritical() #27, !dbg !5053
  ret i32 %14, !dbg !5054
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_NVIC_SetPriorityGrouping(i32 noundef %0) local_unnamed_addr #13 !dbg !5055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5057, metadata !DIExpression()), !dbg !5058
  call fastcc void @__NVIC_SetPriorityGrouping(i32 noundef %0), !dbg !5059
  ret void, !dbg !5060
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_SetPriorityGrouping(i32 noundef %0) unnamed_addr #13 !dbg !5061 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5063, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %0, metadata !5065, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !5066
  %2 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !5067, !tbaa !5068
  call void @llvm.dbg.value(metadata i32 %2, metadata !5064, metadata !DIExpression()), !dbg !5066
  %3 = and i32 %2, 63743, !dbg !5069
  call void @llvm.dbg.value(metadata i32 %3, metadata !5064, metadata !DIExpression()), !dbg !5066
  %4 = shl i32 %0, 8, !dbg !5070
  %5 = and i32 %4, 1792, !dbg !5070
  %6 = or i32 %5, %3, !dbg !5071
  %7 = or i32 %6, 100270080, !dbg !5071
  call void @llvm.dbg.value(metadata i32 %7, metadata !5064, metadata !DIExpression()), !dbg !5066
  store volatile i32 %7, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !5072, !tbaa !5068
  ret void, !dbg !5073
}

; Function Attrs: nofree noinline nounwind
define dso_local void @HAL_NVIC_SetPriority(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !5074 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5079, metadata !DIExpression()), !dbg !5083
  call void @llvm.dbg.value(metadata i32 %1, metadata !5080, metadata !DIExpression()), !dbg !5083
  call void @llvm.dbg.value(metadata i32 %2, metadata !5081, metadata !DIExpression()), !dbg !5083
  call void @llvm.dbg.value(metadata i32 0, metadata !5082, metadata !DIExpression()), !dbg !5083
  %4 = call fastcc i32 @__NVIC_GetPriorityGrouping(), !dbg !5084, !range !5085
  call void @llvm.dbg.value(metadata i32 %4, metadata !5082, metadata !DIExpression()), !dbg !5083
  %5 = call fastcc i32 @NVIC_EncodePriority(i32 noundef %4, i32 noundef %1, i32 noundef %2), !dbg !5086
  call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %5), !dbg !5087
  ret void, !dbg !5088
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define internal fastcc i32 @__NVIC_GetPriorityGrouping() unnamed_addr #14 !dbg !5089 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !5090, !tbaa !5068
  %2 = lshr i32 %1, 8, !dbg !5091
  %3 = and i32 %2, 7, !dbg !5091
  ret i32 %3, !dbg !5092
}

; Function Attrs: mustprogress nofree noinline nosync nounwind readnone willreturn
define internal fastcc i32 @NVIC_EncodePriority(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #19 !dbg !5093 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5097, metadata !DIExpression()), !dbg !5103
  call void @llvm.dbg.value(metadata i32 %1, metadata !5098, metadata !DIExpression()), !dbg !5103
  call void @llvm.dbg.value(metadata i32 %2, metadata !5099, metadata !DIExpression()), !dbg !5103
  %4 = and i32 %0, 7, !dbg !5104
  call void @llvm.dbg.value(metadata i32 %4, metadata !5100, metadata !DIExpression()), !dbg !5103
  %5 = xor i32 %4, 7, !dbg !5105
  %6 = icmp ult i32 %5, 4, !dbg !5106
  %7 = select i1 %6, i32 %5, i32 4, !dbg !5106
  call void @llvm.dbg.value(metadata i32 %7, metadata !5101, metadata !DIExpression()), !dbg !5103
  %8 = call i32 @llvm.usub.sat.i32(i32 %4, i32 3), !dbg !5107
  call void @llvm.dbg.value(metadata i32 %8, metadata !5102, metadata !DIExpression()), !dbg !5103
  %9 = shl nsw i32 -1, %7, !dbg !5108
  %10 = xor i32 %9, -1, !dbg !5108
  %11 = and i32 %10, %1, !dbg !5109
  %12 = shl i32 %11, %8, !dbg !5110
  %13 = shl nsw i32 -1, %8, !dbg !5111
  %14 = xor i32 %13, -1, !dbg !5111
  %15 = and i32 %14, %2, !dbg !5112
  %16 = or i32 %12, %15, !dbg !5113
  ret i32 %16, !dbg !5114
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5115 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5119, metadata !DIExpression()), !dbg !5121
  call void @llvm.dbg.value(metadata i32 %1, metadata !5120, metadata !DIExpression()), !dbg !5121
  %3 = trunc i32 %1 to i8, !dbg !5122
  %4 = shl i8 %3, 4, !dbg !5122
  %5 = and i32 %0, 15, !dbg !5124
  %6 = add nsw i32 %5, -4, !dbg !5124
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !5124
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5124
  %9 = icmp slt i32 %0, 0, !dbg !5124
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !5124
  store volatile i8 %4, i8* %10, align 1, !dbg !5122, !tbaa !1609
  ret void, !dbg !5125
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_NVIC_EnableIRQ(i32 noundef %0) local_unnamed_addr #13 !dbg !5126 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5130, metadata !DIExpression()), !dbg !5131
  call fastcc void @__NVIC_EnableIRQ(i32 noundef %0), !dbg !5132
  ret void, !dbg !5133
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #13 !dbg !5134 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5136, metadata !DIExpression()), !dbg !5137
  %2 = icmp sgt i32 %0, -1, !dbg !5138
  br i1 %2, label %3, label %8, !dbg !5140

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !5141
  %5 = shl i32 1, %4, !dbg !5143
  %6 = lshr i32 %0, 5, !dbg !5144
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !5145
  store volatile i32 %5, i32* %7, align 4, !dbg !5146, !tbaa !2488
  br label %8, !dbg !5147

8:                                                ; preds = %3, %1
  ret void, !dbg !5148
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_NVIC_DisableIRQ(i32 noundef %0) local_unnamed_addr #8 !dbg !5149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5151, metadata !DIExpression()), !dbg !5152
  call fastcc void @__NVIC_DisableIRQ(i32 noundef %0), !dbg !5153
  ret void, !dbg !5154
}

; Function Attrs: noinline nounwind
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #8 !dbg !5155 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5157, metadata !DIExpression()), !dbg !5158
  %2 = icmp sgt i32 %0, -1, !dbg !5159
  br i1 %2, label %3, label %8, !dbg !5161

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !5162
  %5 = shl i32 1, %4, !dbg !5164
  %6 = lshr i32 %0, 5, !dbg !5165
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !5166
  store volatile i32 %5, i32* %7, align 4, !dbg !5167, !tbaa !2488
  call void asm sideeffect "dsb 0xF", "~{memory}"() #27, !dbg !5168, !srcloc !5172
  call void asm sideeffect "isb 0xF", "~{memory}"() #27, !dbg !5173, !srcloc !5176
  br label %8, !dbg !5177

8:                                                ; preds = %3, %1
  ret void, !dbg !5178
}

; Function Attrs: noinline noreturn nounwind
define dso_local void @HAL_NVIC_SystemReset() local_unnamed_addr #17 !dbg !5179 {
  call fastcc void @__NVIC_SystemReset() #28, !dbg !5180
  unreachable, !dbg !5180
}

; Function Attrs: noinline noreturn nounwind
define internal fastcc void @__NVIC_SystemReset() unnamed_addr #17 !dbg !5181 {
  call void asm sideeffect "dsb 0xF", "~{memory}"() #27, !dbg !5182, !srcloc !5172
  %1 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !5184, !tbaa !5068
  %2 = and i32 %1, 1792, !dbg !5185
  %3 = or i32 %2, 100270084, !dbg !5186
  store volatile i32 %3, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !5187, !tbaa !5068
  call void asm sideeffect "dsb 0xF", "~{memory}"() #27, !dbg !5188, !srcloc !5172
  br label %4, !dbg !5190

4:                                                ; preds = %4, %0
  call void asm sideeffect "nop", ""() #27, !dbg !5191, !srcloc !5195
  br label %4, !dbg !5196, !llvm.loop !5197
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_SYSTICK_Config(i32 noundef %0) local_unnamed_addr #13 !dbg !5200 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5204, metadata !DIExpression()), !dbg !5205
  %2 = call fastcc i32 @SysTick_Config(i32 noundef %0), !dbg !5206
  ret i32 %2, !dbg !5207
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc i32 @SysTick_Config(i32 noundef %0) unnamed_addr #13 !dbg !5208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5210, metadata !DIExpression()), !dbg !5211
  %2 = add i32 %0, -1, !dbg !5212
  %3 = icmp ugt i32 %2, 16777215, !dbg !5214
  br i1 %3, label %5, label %4, !dbg !5215

4:                                                ; preds = %1
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !5216, !tbaa !3149
  call fastcc void @__NVIC_SetPriority(i32 noundef -1, i32 noundef 15), !dbg !5217
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !5218, !tbaa !3156
  store volatile i32 7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !5219, !tbaa !3159
  br label %5, !dbg !5220

5:                                                ; preds = %1, %4
  %6 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !5211
  ret i32 %6, !dbg !5221
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_NVIC_GetPriorityGrouping() local_unnamed_addr #14 !dbg !5222 {
  %1 = call fastcc i32 @__NVIC_GetPriorityGrouping(), !dbg !5223
  ret i32 %1, !dbg !5224
}

; Function Attrs: mustprogress nofree noinline nounwind willreturn
define dso_local void @HAL_NVIC_GetPriority(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #20 !dbg !5225 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5229, metadata !DIExpression()), !dbg !5233
  call void @llvm.dbg.value(metadata i32 %1, metadata !5230, metadata !DIExpression()), !dbg !5233
  call void @llvm.dbg.value(metadata i32* %2, metadata !5231, metadata !DIExpression()), !dbg !5233
  call void @llvm.dbg.value(metadata i32* %3, metadata !5232, metadata !DIExpression()), !dbg !5233
  %5 = call fastcc i32 @__NVIC_GetPriority(i32 noundef %0), !dbg !5234, !range !5235
  call fastcc void @NVIC_DecodePriority(i32 noundef %5, i32 noundef %1, i32* noundef %2, i32* noundef %3), !dbg !5236
  ret void, !dbg !5237
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define internal fastcc i32 @__NVIC_GetPriority(i32 noundef %0) unnamed_addr #14 !dbg !5238 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5242, metadata !DIExpression()), !dbg !5243
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5244
  %3 = and i32 %0, 15, !dbg !5244
  %4 = add nsw i32 %3, -4, !dbg !5244
  %5 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %4, !dbg !5244
  %6 = icmp slt i32 %0, 0, !dbg !5244
  %7 = select i1 %6, i8* %5, i8* %2, !dbg !5244
  %8 = load volatile i8, i8* %7, align 1, !dbg !5245, !tbaa !1609
  %9 = lshr i8 %8, 4, !dbg !5245
  %10 = zext i8 %9 to i32, !dbg !5245
  ret i32 %10, !dbg !5247
}

; Function Attrs: mustprogress nofree noinline nosync nounwind willreturn writeonly
define internal fastcc void @NVIC_DecodePriority(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2, i32* nocapture noundef writeonly %3) unnamed_addr #21 !dbg !5248 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5253, metadata !DIExpression()), !dbg !5260
  call void @llvm.dbg.value(metadata i32 %1, metadata !5254, metadata !DIExpression()), !dbg !5260
  call void @llvm.dbg.value(metadata i32* %2, metadata !5255, metadata !DIExpression()), !dbg !5260
  call void @llvm.dbg.value(metadata i32* %3, metadata !5256, metadata !DIExpression()), !dbg !5260
  %5 = and i32 %1, 7, !dbg !5261
  call void @llvm.dbg.value(metadata i32 %5, metadata !5257, metadata !DIExpression()), !dbg !5260
  %6 = xor i32 %5, 7, !dbg !5262
  %7 = icmp ult i32 %6, 4, !dbg !5263
  %8 = select i1 %7, i32 %6, i32 4, !dbg !5263
  call void @llvm.dbg.value(metadata i32 %8, metadata !5258, metadata !DIExpression()), !dbg !5260
  %9 = call i32 @llvm.usub.sat.i32(i32 %5, i32 3), !dbg !5264
  call void @llvm.dbg.value(metadata i32 %9, metadata !5259, metadata !DIExpression()), !dbg !5260
  %10 = lshr i32 %0, %9, !dbg !5265
  %11 = shl nsw i32 -1, %8, !dbg !5266
  %12 = xor i32 %11, -1, !dbg !5266
  %13 = and i32 %10, %12, !dbg !5267
  store i32 %13, i32* %2, align 4, !dbg !5268, !tbaa !2488
  %14 = shl nsw i32 -1, %9, !dbg !5269
  %15 = xor i32 %14, -1, !dbg !5269
  %16 = and i32 %15, %0, !dbg !5270
  store i32 %16, i32* %3, align 4, !dbg !5271, !tbaa !2488
  ret void, !dbg !5272
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_NVIC_SetPendingIRQ(i32 noundef %0) local_unnamed_addr #13 !dbg !5273 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5275, metadata !DIExpression()), !dbg !5276
  call fastcc void @__NVIC_SetPendingIRQ(i32 noundef %0), !dbg !5277
  ret void, !dbg !5278
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #13 !dbg !5279 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5281, metadata !DIExpression()), !dbg !5282
  %2 = icmp sgt i32 %0, -1, !dbg !5283
  br i1 %2, label %3, label %8, !dbg !5285

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !5286
  %5 = shl i32 1, %4, !dbg !5288
  %6 = lshr i32 %0, 5, !dbg !5289
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %6, !dbg !5290
  store volatile i32 %5, i32* %7, align 4, !dbg !5291, !tbaa !2488
  br label %8, !dbg !5292

8:                                                ; preds = %3, %1
  ret void, !dbg !5293
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_NVIC_GetPendingIRQ(i32 noundef %0) local_unnamed_addr #14 !dbg !5294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5296, metadata !DIExpression()), !dbg !5297
  %2 = call fastcc i32 @__NVIC_GetPendingIRQ(i32 noundef %0), !dbg !5298
  ret i32 %2, !dbg !5299
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define internal fastcc i32 @__NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #14 !dbg !5300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5302, metadata !DIExpression()), !dbg !5303
  %2 = icmp sgt i32 %0, -1, !dbg !5304
  br i1 %2, label %3, label %10, !dbg !5306

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !5307
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !5309
  %6 = load volatile i32, i32* %5, align 4, !dbg !5309, !tbaa !2488
  %7 = and i32 %0, 31, !dbg !5310
  %8 = lshr i32 %6, %7, !dbg !5311
  %9 = and i32 %8, 1, !dbg !5311
  br label %10, !dbg !5312

10:                                               ; preds = %1, %3
  %11 = phi i32 [ %9, %3 ], [ 0, %1 ], !dbg !5313
  ret i32 %11, !dbg !5314
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_NVIC_ClearPendingIRQ(i32 noundef %0) local_unnamed_addr #13 !dbg !5315 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5317, metadata !DIExpression()), !dbg !5318
  call fastcc void @__NVIC_ClearPendingIRQ(i32 noundef %0), !dbg !5319
  ret void, !dbg !5320
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #13 !dbg !5321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5323, metadata !DIExpression()), !dbg !5324
  %2 = icmp sgt i32 %0, -1, !dbg !5325
  br i1 %2, label %3, label %8, !dbg !5327

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !5328
  %5 = shl i32 1, %4, !dbg !5330
  %6 = lshr i32 %0, 5, !dbg !5331
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %6, !dbg !5332
  store volatile i32 %5, i32* %7, align 4, !dbg !5333, !tbaa !2488
  br label %8, !dbg !5334

8:                                                ; preds = %3, %1
  ret void, !dbg !5335
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_NVIC_GetActive(i32 noundef %0) local_unnamed_addr #14 !dbg !5336 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5338, metadata !DIExpression()), !dbg !5339
  %2 = call fastcc i32 @__NVIC_GetActive(i32 noundef %0), !dbg !5340
  ret i32 %2, !dbg !5341
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define internal fastcc i32 @__NVIC_GetActive(i32 noundef %0) unnamed_addr #14 !dbg !5342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5344, metadata !DIExpression()), !dbg !5345
  %2 = icmp sgt i32 %0, -1, !dbg !5346
  br i1 %2, label %3, label %10, !dbg !5348

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !5349
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812800 to [8 x i32]*), i32 0, i32 %4, !dbg !5351
  %6 = load volatile i32, i32* %5, align 4, !dbg !5351, !tbaa !2488
  %7 = and i32 %0, 31, !dbg !5352
  %8 = lshr i32 %6, %7, !dbg !5353
  %9 = and i32 %8, 1, !dbg !5353
  br label %10, !dbg !5354

10:                                               ; preds = %1, %3
  %11 = phi i32 [ %9, %3 ], [ 0, %1 ], !dbg !5355
  ret i32 %11, !dbg !5356
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_SYSTICK_CLKSourceConfig(i32 noundef %0) local_unnamed_addr #13 !dbg !5357 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5359, metadata !DIExpression()), !dbg !5360
  %2 = icmp eq i32 %0, 4, !dbg !5361
  %3 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !5363, !tbaa !3159
  %4 = and i32 %3, -5, !dbg !5364
  %5 = select i1 %2, i32 4, i32 0, !dbg !5364
  %6 = or i32 %4, %5, !dbg !5364
  store volatile i32 %6, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !5363, !tbaa !3159
  ret void, !dbg !5365
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_SYSTICK_IRQHandler() local_unnamed_addr #8 !dbg !5366 {
  call void @HAL_SYSTICK_Callback(), !dbg !5367
  ret void, !dbg !5368
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_SYSTICK_Callback() local_unnamed_addr #8 !dbg !5369 {
  ret void, !dbg !5370
}

; Function Attrs: nofree noinline nounwind
define dso_local void @HAL_GPIO_Init(%struct.USART_TypeDef* noundef %0, %struct.DMA_Channel_TypeDef* nocapture noundef readonly %1) local_unnamed_addr #18 !dbg !5371 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !5383, metadata !DIExpression()), !dbg !5399
  call void @llvm.dbg.value(metadata %struct.DMA_Channel_TypeDef* %1, metadata !5384, metadata !DIExpression()), !dbg !5399
  call void @llvm.dbg.value(metadata i32 0, metadata !5385, metadata !DIExpression()), !dbg !5399
  call void @llvm.dbg.value(metadata i32 0, metadata !5389, metadata !DIExpression()), !dbg !5399
  %4 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !5385, metadata !DIExpression()), !dbg !5399
  call void @llvm.dbg.value(metadata i32 0, metadata !5389, metadata !DIExpression()), !dbg !5399
  %5 = load i32, i32* %4, align 4, !dbg !5400, !tbaa !3159
  %6 = icmp eq i32 %5, 0, !dbg !5401
  br i1 %6, label %135, label %7, !dbg !5402

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 1
  %9 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 2
  %10 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4
  %11 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  %12 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 3
  %13 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 3
  %14 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 3
  %15 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 3
  %16 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0
  %17 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1
  %18 = ptrtoint %struct.USART_TypeDef* %0 to i32
  %19 = icmp eq %struct.USART_TypeDef* %0, inttoptr (i32 1073812480 to %struct.USART_TypeDef*)
  %20 = select i1 %19, i32 3, i32 4
  %21 = bitcast i32* %3 to i8*
  %22 = bitcast i32* %3 to i8*
  br label %23, !dbg !5402

23:                                               ; preds = %7, %129
  %24 = phi i32 [ %5, %7 ], [ %132, %129 ]
  %25 = phi i32 [ 0, %7 ], [ %131, %129 ]
  %26 = phi i32 [ 0, %7 ], [ %130, %129 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !5385, metadata !DIExpression()), !dbg !5399
  call void @llvm.dbg.value(metadata i32 %26, metadata !5389, metadata !DIExpression()), !dbg !5399
  %27 = shl i32 1, %25, !dbg !5403
  call void @llvm.dbg.value(metadata i32 %27, metadata !5386, metadata !DIExpression()), !dbg !5399
  %28 = and i32 %24, %27, !dbg !5404
  call void @llvm.dbg.value(metadata i32 %28, metadata !5387, metadata !DIExpression()), !dbg !5399
  %29 = icmp eq i32 %28, %27, !dbg !5405
  br i1 %29, label %30, label %129, !dbg !5406

30:                                               ; preds = %23
  %31 = load i32, i32* %8, align 4, !dbg !5407, !tbaa !3149
  switch i32 %31, label %48 [
    i32 1, label %32
    i32 17, label %34
    i32 2, label %37
    i32 18, label %40
    i32 0, label %43
    i32 269549568, label %43
    i32 270598144, label %43
    i32 271646720, label %43
    i32 269615104, label %43
    i32 270663680, label %43
    i32 271712256, label %43
    i32 3, label %47
  ], !dbg !5408

32:                                               ; preds = %30
  %33 = load i32, i32* %15, align 4, !dbg !5409, !tbaa !3153
  call void @llvm.dbg.value(metadata i32 %33, metadata !5389, metadata !DIExpression()), !dbg !5399
  br label %48, !dbg !5411

34:                                               ; preds = %30
  %35 = load i32, i32* %14, align 4, !dbg !5412, !tbaa !3153
  %36 = add i32 %35, 4, !dbg !5413
  call void @llvm.dbg.value(metadata i32 %36, metadata !5389, metadata !DIExpression()), !dbg !5399
  br label %48, !dbg !5414

37:                                               ; preds = %30
  %38 = load i32, i32* %13, align 4, !dbg !5415, !tbaa !3153
  %39 = add i32 %38, 8, !dbg !5416
  call void @llvm.dbg.value(metadata i32 %39, metadata !5389, metadata !DIExpression()), !dbg !5399
  br label %48, !dbg !5417

40:                                               ; preds = %30
  %41 = load i32, i32* %12, align 4, !dbg !5418, !tbaa !3153
  %42 = add i32 %41, 12, !dbg !5419
  call void @llvm.dbg.value(metadata i32 %42, metadata !5389, metadata !DIExpression()), !dbg !5399
  br label %48, !dbg !5420

43:                                               ; preds = %30, %30, %30, %30, %30, %30, %30
  %44 = load i32, i32* %9, align 4, !dbg !5421, !tbaa !3156
  switch i32 %44, label %46 [
    i32 0, label %48
    i32 1, label %45
  ], !dbg !5423

45:                                               ; preds = %43
  call void @llvm.dbg.value(metadata i32 8, metadata !5389, metadata !DIExpression()), !dbg !5399
  store volatile i32 %27, i32* %10, align 4, !dbg !5424, !tbaa !5427
  br label %48, !dbg !5429

46:                                               ; preds = %43
  call void @llvm.dbg.value(metadata i32 8, metadata !5389, metadata !DIExpression()), !dbg !5399
  store volatile i32 %27, i32* %11, align 4, !dbg !5430, !tbaa !5432
  br label %48

47:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 0, metadata !5389, metadata !DIExpression()), !dbg !5399
  br label %48, !dbg !5433

48:                                               ; preds = %43, %30, %46, %45, %47, %40, %37, %34, %32
  %49 = phi i32 [ %26, %30 ], [ 0, %47 ], [ 8, %45 ], [ 8, %46 ], [ %42, %40 ], [ %39, %37 ], [ %36, %34 ], [ %33, %32 ], [ 4, %43 ], !dbg !5399
  call void @llvm.dbg.value(metadata i32 %49, metadata !5389, metadata !DIExpression()), !dbg !5399
  %50 = icmp ult i32 %28, 256, !dbg !5434
  %51 = select i1 %50, i32* %16, i32* %17, !dbg !5435
  call void @llvm.dbg.value(metadata i32* %51, metadata !5390, metadata !DIExpression()), !dbg !5399
  %52 = shl i32 %25, 2, !dbg !5436
  %53 = add i32 %52, -32, !dbg !5436
  %54 = select i1 %50, i32 %52, i32 %53, !dbg !5436
  call void @llvm.dbg.value(metadata i32 %54, metadata !5391, metadata !DIExpression()), !dbg !5399
  %55 = load volatile i32, i32* %51, align 4, !dbg !5437, !tbaa !2488
  %56 = shl i32 15, %54, !dbg !5437
  %57 = xor i32 %56, -1, !dbg !5437
  %58 = and i32 %55, %57, !dbg !5437
  %59 = shl i32 %49, %54, !dbg !5437
  %60 = or i32 %58, %59, !dbg !5437
  store volatile i32 %60, i32* %51, align 4, !dbg !5437, !tbaa !2488
  %61 = load i32, i32* %8, align 4, !dbg !5438, !tbaa !3149
  %62 = and i32 %61, 268435456, !dbg !5439
  %63 = icmp eq i32 %62, 0, !dbg !5440
  br i1 %63, label %129, label %64, !dbg !5441

64:                                               ; preds = %48
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !5442
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5392, metadata !DIExpression()), !dbg !5442
  %65 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !5442, !tbaa !3161
  %66 = or i32 %65, 1, !dbg !5442
  store volatile i32 %66, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !5442, !tbaa !3161
  %67 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !5442, !tbaa !3161
  %68 = and i32 %67, 1, !dbg !5442
  store volatile i32 %68, i32* %3, align 4, !dbg !5442, !tbaa !2488
  %69 = load volatile i32, i32* %3, align 4, !dbg !5442, !tbaa !2488
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22), !dbg !5443
  %70 = lshr i32 %25, 2, !dbg !5444
  %71 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %70, !dbg !5445
  %72 = load volatile i32, i32* %71, align 4, !dbg !5445, !tbaa !2488
  call void @llvm.dbg.value(metadata i32 %72, metadata !5388, metadata !DIExpression()), !dbg !5399
  %73 = and i32 %52, 12, !dbg !5446
  %74 = shl i32 15, %73, !dbg !5446
  %75 = xor i32 %74, -1, !dbg !5446
  %76 = and i32 %72, %75, !dbg !5446
  call void @llvm.dbg.value(metadata i32 %76, metadata !5388, metadata !DIExpression()), !dbg !5399
  switch i32 %18, label %77 [
    i32 1073809408, label %80
    i32 1073810432, label %78
    i32 1073811456, label %79
  ], !dbg !5447

77:                                               ; preds = %64
  br label %80, !dbg !5447

78:                                               ; preds = %64
  br label %80, !dbg !5447

79:                                               ; preds = %64
  br label %80, !dbg !5447

80:                                               ; preds = %64, %79, %78, %77
  %81 = phi i32 [ 0, %64 ], [ %20, %77 ], [ 1, %78 ], [ 2, %79 ], !dbg !5447
  %82 = shl i32 %81, %73, !dbg !5447
  %83 = or i32 %82, %76, !dbg !5447
  call void @llvm.dbg.value(metadata i32 %83, metadata !5388, metadata !DIExpression()), !dbg !5399
  store volatile i32 %83, i32* %71, align 4, !dbg !5448, !tbaa !2488
  %84 = load i32, i32* %8, align 4, !dbg !5449, !tbaa !3149
  %85 = and i32 %84, 65536, !dbg !5451
  %86 = icmp eq i32 %85, 0, !dbg !5452
  br i1 %86, label %90, label %87, !dbg !5453

87:                                               ; preds = %80
  %88 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !5454, !tbaa !5456
  %89 = or i32 %88, %28, !dbg !5454
  br label %94, !dbg !5458

90:                                               ; preds = %80
  %91 = xor i32 %28, -1, !dbg !5459
  %92 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !5459, !tbaa !5456
  %93 = and i32 %92, %91, !dbg !5459
  br label %94

94:                                               ; preds = %90, %87
  %95 = phi i32 [ %93, %90 ], [ %89, %87 ]
  store volatile i32 %95, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !5461, !tbaa !5456
  %96 = and i32 %84, 131072, !dbg !5462
  %97 = icmp eq i32 %96, 0, !dbg !5464
  br i1 %97, label %101, label %98, !dbg !5465

98:                                               ; preds = %94
  %99 = load volatile i32, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !5466, !tbaa !5468
  %100 = or i32 %99, %28, !dbg !5466
  br label %105, !dbg !5469

101:                                              ; preds = %94
  %102 = xor i32 %28, -1, !dbg !5470
  %103 = load volatile i32, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !5470, !tbaa !5468
  %104 = and i32 %103, %102, !dbg !5470
  br label %105

105:                                              ; preds = %101, %98
  %106 = phi i32 [ %104, %101 ], [ %100, %98 ]
  store volatile i32 %106, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !5472, !tbaa !5468
  %107 = and i32 %84, 1048576, !dbg !5473
  %108 = icmp eq i32 %107, 0, !dbg !5475
  br i1 %108, label %112, label %109, !dbg !5476

109:                                              ; preds = %105
  %110 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !5477, !tbaa !5479
  %111 = or i32 %110, %28, !dbg !5477
  br label %116, !dbg !5480

112:                                              ; preds = %105
  %113 = xor i32 %28, -1, !dbg !5481
  %114 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !5481, !tbaa !5479
  %115 = and i32 %114, %113, !dbg !5481
  br label %116

116:                                              ; preds = %112, %109
  %117 = phi i32 [ %115, %112 ], [ %111, %109 ]
  store volatile i32 %117, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !5483, !tbaa !5479
  %118 = and i32 %84, 2097152, !dbg !5484
  %119 = icmp eq i32 %118, 0, !dbg !5486
  br i1 %119, label %123, label %120, !dbg !5487

120:                                              ; preds = %116
  %121 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !5488, !tbaa !5490
  %122 = or i32 %121, %28, !dbg !5488
  br label %127, !dbg !5491

123:                                              ; preds = %116
  %124 = xor i32 %28, -1, !dbg !5492
  %125 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !5492, !tbaa !5490
  %126 = and i32 %125, %124, !dbg !5492
  br label %127

127:                                              ; preds = %120, %123
  %128 = phi i32 [ %126, %123 ], [ %122, %120 ]
  store volatile i32 %128, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !5494, !tbaa !5490
  br label %129, !dbg !5495

129:                                              ; preds = %127, %48, %23
  %130 = phi i32 [ %49, %48 ], [ %26, %23 ], [ %49, %127 ], !dbg !5496
  call void @llvm.dbg.value(metadata i32 %130, metadata !5389, metadata !DIExpression()), !dbg !5399
  %131 = add i32 %25, 1, !dbg !5495
  call void @llvm.dbg.value(metadata i32 %131, metadata !5385, metadata !DIExpression()), !dbg !5399
  %132 = load i32, i32* %4, align 4, !dbg !5400, !tbaa !3159
  %133 = lshr i32 %132, %131, !dbg !5497
  %134 = icmp eq i32 %133, 0, !dbg !5401
  br i1 %134, label %135, label %23, !dbg !5402, !llvm.loop !5498

135:                                              ; preds = %129, %2
  ret void, !dbg !5500
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_GPIO_DeInit(%struct.USART_TypeDef* noundef %0, i32 noundef %1) local_unnamed_addr #13 !dbg !5501 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !5505, metadata !DIExpression()), !dbg !5512
  call void @llvm.dbg.value(metadata i32 %1, metadata !5506, metadata !DIExpression()), !dbg !5512
  call void @llvm.dbg.value(metadata i32 0, metadata !5507, metadata !DIExpression()), !dbg !5512
  %3 = icmp eq i32 %1, 0, !dbg !5513
  br i1 %3, label %62, label %4, !dbg !5514

4:                                                ; preds = %2
  %5 = ptrtoint %struct.USART_TypeDef* %0 to i32
  %6 = icmp eq %struct.USART_TypeDef* %0, inttoptr (i32 1073812480 to %struct.USART_TypeDef*)
  %7 = select i1 %6, i32 3, i32 4
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1
  %10 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %11, !dbg !5514

11:                                               ; preds = %4, %58
  %12 = phi i32 [ 0, %4 ], [ %59, %58 ]
  call void @llvm.dbg.value(metadata i32 %12, metadata !5507, metadata !DIExpression()), !dbg !5512
  %13 = shl i32 1, %12, !dbg !5515
  %14 = and i32 %13, %1, !dbg !5517
  call void @llvm.dbg.value(metadata i32 %14, metadata !5508, metadata !DIExpression()), !dbg !5512
  %15 = icmp eq i32 %14, 0, !dbg !5518
  br i1 %15, label %58, label %16, !dbg !5520

16:                                               ; preds = %11
  %17 = lshr i32 %12, 2, !dbg !5521
  %18 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %17, !dbg !5523
  %19 = load volatile i32, i32* %18, align 4, !dbg !5523, !tbaa !2488
  call void @llvm.dbg.value(metadata i32 %19, metadata !5509, metadata !DIExpression()), !dbg !5512
  %20 = shl i32 %12, 2, !dbg !5524
  %21 = and i32 %20, 12, !dbg !5524
  %22 = shl i32 15, %21, !dbg !5525
  %23 = and i32 %19, %22, !dbg !5526
  call void @llvm.dbg.value(metadata i32 %23, metadata !5509, metadata !DIExpression()), !dbg !5512
  switch i32 %5, label %24 [
    i32 1073809408, label %27
    i32 1073810432, label %25
    i32 1073811456, label %26
  ], !dbg !5527

24:                                               ; preds = %16
  br label %27, !dbg !5527

25:                                               ; preds = %16
  br label %27, !dbg !5529

26:                                               ; preds = %16
  br label %27, !dbg !5529

27:                                               ; preds = %16, %26, %25, %24
  %28 = phi i32 [ 0, %16 ], [ %7, %24 ], [ 1, %25 ], [ 2, %26 ], !dbg !5527
  %29 = shl i32 %28, %21, !dbg !5529
  %30 = icmp eq i32 %23, %29, !dbg !5530
  br i1 %30, label %31, label %44, !dbg !5531

31:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %22, metadata !5509, metadata !DIExpression()), !dbg !5512
  %32 = xor i32 %22, -1, !dbg !5532
  %33 = load volatile i32, i32* %18, align 4, !dbg !5532, !tbaa !2488
  %34 = and i32 %33, %32, !dbg !5532
  store volatile i32 %34, i32* %18, align 4, !dbg !5532, !tbaa !2488
  %35 = xor i32 %14, -1, !dbg !5534
  %36 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !5534, !tbaa !5456
  %37 = and i32 %36, %35, !dbg !5534
  store volatile i32 %37, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !5534, !tbaa !5456
  %38 = load volatile i32, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !5535, !tbaa !5468
  %39 = and i32 %38, %35, !dbg !5535
  store volatile i32 %39, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !5535, !tbaa !5468
  %40 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !5536, !tbaa !5479
  %41 = and i32 %40, %35, !dbg !5536
  store volatile i32 %41, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !5536, !tbaa !5479
  %42 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !5537, !tbaa !5490
  %43 = and i32 %42, %35, !dbg !5537
  store volatile i32 %43, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !5537, !tbaa !5490
  br label %44, !dbg !5538

44:                                               ; preds = %31, %27
  %45 = icmp ult i32 %14, 256, !dbg !5539
  %46 = select i1 %45, i32* %8, i32* %9, !dbg !5540
  call void @llvm.dbg.value(metadata i32* %46, metadata !5510, metadata !DIExpression()), !dbg !5512
  %47 = add i32 %20, -32, !dbg !5541
  %48 = select i1 %45, i32 %20, i32 %47, !dbg !5541
  call void @llvm.dbg.value(metadata i32 %48, metadata !5511, metadata !DIExpression()), !dbg !5512
  %49 = load volatile i32, i32* %46, align 4, !dbg !5542, !tbaa !2488
  %50 = shl i32 15, %48, !dbg !5542
  %51 = xor i32 %50, -1, !dbg !5542
  %52 = and i32 %49, %51, !dbg !5542
  %53 = shl i32 4, %48, !dbg !5542
  %54 = or i32 %52, %53, !dbg !5542
  store volatile i32 %54, i32* %46, align 4, !dbg !5542, !tbaa !2488
  %55 = xor i32 %14, -1, !dbg !5543
  %56 = load volatile i32, i32* %10, align 4, !dbg !5543, !tbaa !5544
  %57 = and i32 %56, %55, !dbg !5543
  store volatile i32 %57, i32* %10, align 4, !dbg !5543, !tbaa !5544
  br label %58, !dbg !5545

58:                                               ; preds = %44, %11
  %59 = add i32 %12, 1, !dbg !5546
  call void @llvm.dbg.value(metadata i32 %59, metadata !5507, metadata !DIExpression()), !dbg !5512
  %60 = lshr i32 %1, %59, !dbg !5547
  %61 = icmp eq i32 %60, 0, !dbg !5513
  br i1 %61, label %62, label %11, !dbg !5514, !llvm.loop !5548

62:                                               ; preds = %58, %2
  ret void, !dbg !5550
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_GPIO_ReadPin(%struct.USART_TypeDef* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #14 !dbg !5551 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !5556, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i16 %1, metadata !5557, metadata !DIExpression()), !dbg !5559
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !5560
  %4 = load volatile i32, i32* %3, align 4, !dbg !5560, !tbaa !5562
  %5 = zext i16 %1 to i32, !dbg !5563
  %6 = and i32 %4, %5, !dbg !5564
  %7 = icmp ne i32 %6, 0, !dbg !5565
  %8 = zext i1 %7 to i32
  call void @llvm.dbg.value(metadata i32 %8, metadata !5558, metadata !DIExpression()), !dbg !5559
  ret i32 %8, !dbg !5566
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_GPIO_WritePin(%struct.USART_TypeDef* noundef %0, i16 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #13 !dbg !5567 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !5571, metadata !DIExpression()), !dbg !5574
  call void @llvm.dbg.value(metadata i16 %1, metadata !5572, metadata !DIExpression()), !dbg !5574
  call void @llvm.dbg.value(metadata i32 %2, metadata !5573, metadata !DIExpression()), !dbg !5574
  %4 = icmp eq i32 %2, 0, !dbg !5575
  %5 = zext i16 %1 to i32, !dbg !5577
  %6 = shl nuw i32 %5, 16, !dbg !5578
  %7 = select i1 %4, i32 %6, i32 %5, !dbg !5578
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !5577
  store volatile i32 %7, i32* %8, align 4, !dbg !5577, !tbaa !5427
  ret void, !dbg !5579
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_GPIO_TogglePin(%struct.USART_TypeDef* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #13 !dbg !5580 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !5584, metadata !DIExpression()), !dbg !5586
  call void @llvm.dbg.value(metadata i16 %1, metadata !5585, metadata !DIExpression()), !dbg !5586
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !5587
  %4 = load volatile i32, i32* %3, align 4, !dbg !5587, !tbaa !5544
  %5 = zext i16 %1 to i32, !dbg !5589
  %6 = and i32 %4, %5, !dbg !5590
  %7 = icmp eq i32 %6, 0, !dbg !5591
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !5592
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !5592
  %10 = select i1 %7, i32* %8, i32* %9, !dbg !5592
  store volatile i32 %5, i32* %10, align 4, !dbg !5593, !tbaa !2488
  ret void, !dbg !5594
}

; Function Attrs: nofree noinline nounwind
define dso_local i32 @HAL_GPIO_LockPin(%struct.USART_TypeDef* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #18 !dbg !5595 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !5599, metadata !DIExpression()), !dbg !5602
  call void @llvm.dbg.value(metadata i16 %1, metadata !5600, metadata !DIExpression()), !dbg !5602
  %4 = bitcast i32* %3 to i8*, !dbg !5603
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !5603
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5601, metadata !DIExpression()), !dbg !5604
  store volatile i32 65536, i32* %3, align 4, !dbg !5604, !tbaa !2488
  %5 = zext i16 %1 to i32, !dbg !5605
  %6 = load volatile i32, i32* %3, align 4, !dbg !5605, !tbaa !2488
  %7 = or i32 %6, %5, !dbg !5605
  store volatile i32 %7, i32* %3, align 4, !dbg !5605, !tbaa !2488
  %8 = load volatile i32, i32* %3, align 4, !dbg !5606, !tbaa !2488
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 6, !dbg !5607
  store volatile i32 %8, i32* %9, align 4, !dbg !5608, !tbaa !5609
  store volatile i32 %5, i32* %9, align 4, !dbg !5610, !tbaa !5609
  %10 = load volatile i32, i32* %3, align 4, !dbg !5611, !tbaa !2488
  store volatile i32 %10, i32* %9, align 4, !dbg !5612, !tbaa !5609
  %11 = load volatile i32, i32* %9, align 4, !dbg !5613, !tbaa !5609
  store volatile i32 %11, i32* %3, align 4, !dbg !5614, !tbaa !2488
  %12 = load volatile i32, i32* %9, align 4, !dbg !5615, !tbaa !5609
  %13 = lshr i32 %12, 16, !dbg !5617
  %14 = and i32 %13, 1, !dbg !5617
  %15 = xor i32 %14, 1, !dbg !5617
  %16 = bitcast i32* %3 to i8*, !dbg !5618
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16), !dbg !5618
  ret i32 %15, !dbg !5618
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_GPIO_EXTI_IRQHandler(i16 noundef zeroext %0) local_unnamed_addr #8 !dbg !5619 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !5623, metadata !DIExpression()), !dbg !5624
  %2 = load volatile i32, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !5625, !tbaa !5627
  %3 = zext i16 %0 to i32, !dbg !5625
  %4 = and i32 %2, %3, !dbg !5625
  %5 = icmp eq i32 %4, 0, !dbg !5628
  br i1 %5, label %7, label %6, !dbg !5629

6:                                                ; preds = %1
  store volatile i32 %3, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !5630, !tbaa !5627
  call void @HAL_GPIO_EXTI_Callback(i16 noundef zeroext %0), !dbg !5632
  br label %7, !dbg !5633

7:                                                ; preds = %6, %1
  ret void, !dbg !5634
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_GPIO_EXTI_Callback(i16 noundef zeroext %0) local_unnamed_addr #8 !dbg !5635 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !5637, metadata !DIExpression()), !dbg !5638
  ret void, !dbg !5639
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @vListInitialise(%struct.xLIST* noundef %0) local_unnamed_addr #13 !dbg !5640 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !5645, metadata !DIExpression()), !dbg !5646
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, !dbg !5647
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 1, !dbg !5648
  %4 = bitcast %struct.xLIST_ITEM** %3 to %struct.xMINI_LIST_ITEM**, !dbg !5649
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %4, align 4, !dbg !5649, !tbaa !4356
  %5 = getelementptr inbounds %struct.xMINI_LIST_ITEM, %struct.xMINI_LIST_ITEM* %2, i32 0, i32 0, !dbg !5650
  store i32 -1, i32* %5, align 4, !dbg !5651, !tbaa !5652
  %6 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 1, !dbg !5653
  %7 = bitcast %struct.xLIST_ITEM** %6 to %struct.xMINI_LIST_ITEM**, !dbg !5654
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %7, align 4, !dbg !5654, !tbaa !4074
  %8 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 2, !dbg !5655
  %9 = bitcast %struct.xLIST_ITEM** %8 to %struct.xMINI_LIST_ITEM**, !dbg !5656
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %9, align 4, !dbg !5656, !tbaa !5657
  %10 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !5658
  store volatile i32 0, i32* %10, align 4, !dbg !5659, !tbaa !4068
  ret void, !dbg !5660
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local void @vListInitialiseItem(%struct.xLIST_ITEM* nocapture noundef writeonly %0) local_unnamed_addr #5 !dbg !5661 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !5666, metadata !DIExpression()), !dbg !5667
  %2 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 4, !dbg !5668
  store i8* null, i8** %2, align 4, !dbg !5669, !tbaa !5670
  ret void, !dbg !5671
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @vListInsertEnd(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef %1) local_unnamed_addr #13 !dbg !5672 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !5676, metadata !DIExpression()), !dbg !5679
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %1, metadata !5677, metadata !DIExpression()), !dbg !5679
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 1, !dbg !5680
  %4 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %3, align 4, !dbg !5680, !tbaa !4356
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %4, metadata !5678, metadata !DIExpression()), !dbg !5679
  %5 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 1, !dbg !5681
  store %struct.xLIST_ITEM* %4, %struct.xLIST_ITEM** %5, align 4, !dbg !5682, !tbaa !4357
  %6 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %4, i32 0, i32 2, !dbg !5683
  %7 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %6, align 4, !dbg !5683, !tbaa !5684
  %8 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 2, !dbg !5685
  store %struct.xLIST_ITEM* %7, %struct.xLIST_ITEM** %8, align 4, !dbg !5686, !tbaa !5684
  %9 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %6, align 4, !dbg !5687, !tbaa !5684
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %9, i32 0, i32 1, !dbg !5688
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %10, align 4, !dbg !5689, !tbaa !4357
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %6, align 4, !dbg !5690, !tbaa !5684
  %11 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 4, !dbg !5691
  %12 = bitcast i8** %11 to %struct.xLIST**, !dbg !5692
  store %struct.xLIST* %0, %struct.xLIST** %12, align 4, !dbg !5692, !tbaa !5670
  %13 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !5693
  %14 = load volatile i32, i32* %13, align 4, !dbg !5694, !tbaa !4068
  %15 = add i32 %14, 1, !dbg !5694
  store volatile i32 %15, i32* %13, align 4, !dbg !5694, !tbaa !4068
  ret void, !dbg !5695
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @vListInsert(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef %1) local_unnamed_addr #13 !dbg !5696 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !5698, metadata !DIExpression()), !dbg !5702
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %1, metadata !5699, metadata !DIExpression()), !dbg !5702
  %3 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 0, !dbg !5703
  %4 = load i32, i32* %3, align 4, !dbg !5703, !tbaa !4499
  call void @llvm.dbg.value(metadata i32 %4, metadata !5701, metadata !DIExpression()), !dbg !5702
  %5 = icmp eq i32 %4, -1, !dbg !5704
  br i1 %5, label %6, label %9, !dbg !5706

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 2, !dbg !5707
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !5707, !tbaa !5657
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %8, metadata !5700, metadata !DIExpression()), !dbg !5702
  br label %19, !dbg !5709

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, !dbg !5710
  %11 = bitcast %struct.xMINI_LIST_ITEM* %10 to %struct.xLIST_ITEM*, !dbg !5713
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %11, metadata !5700, metadata !DIExpression()), !dbg !5702
  br label %12, !dbg !5714

12:                                               ; preds = %12, %9
  %13 = phi %struct.xLIST_ITEM* [ %11, %9 ], [ %15, %12 ], !dbg !5715
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %13, metadata !5700, metadata !DIExpression()), !dbg !5702
  %14 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %13, i32 0, i32 1, !dbg !5716
  %15 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %14, align 4, !dbg !5716, !tbaa !4357
  %16 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %15, i32 0, i32 0, !dbg !5718
  %17 = load i32, i32* %16, align 4, !dbg !5718, !tbaa !4499
  %18 = icmp ugt i32 %17, %4, !dbg !5719
  br i1 %18, label %19, label %12, !dbg !5720, !llvm.loop !5721

19:                                               ; preds = %12, %6
  %20 = phi %struct.xLIST_ITEM* [ %8, %6 ], [ %13, %12 ], !dbg !5723
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %20, metadata !5700, metadata !DIExpression()), !dbg !5702
  %21 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %20, i32 0, i32 1, !dbg !5724
  %22 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %21, align 4, !dbg !5724, !tbaa !4357
  %23 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 1, !dbg !5725
  store %struct.xLIST_ITEM* %22, %struct.xLIST_ITEM** %23, align 4, !dbg !5726, !tbaa !4357
  %24 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %22, i32 0, i32 2, !dbg !5727
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %24, align 4, !dbg !5728, !tbaa !5684
  %25 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 2, !dbg !5729
  store %struct.xLIST_ITEM* %20, %struct.xLIST_ITEM** %25, align 4, !dbg !5730, !tbaa !5684
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %21, align 4, !dbg !5731, !tbaa !4357
  %26 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 4, !dbg !5732
  %27 = bitcast i8** %26 to %struct.xLIST**, !dbg !5733
  store %struct.xLIST* %0, %struct.xLIST** %27, align 4, !dbg !5733, !tbaa !5670
  %28 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !5734
  %29 = load volatile i32, i32* %28, align 4, !dbg !5735, !tbaa !4068
  %30 = add i32 %29, 1, !dbg !5735
  store volatile i32 %30, i32* %28, align 4, !dbg !5735, !tbaa !4068
  ret void, !dbg !5736
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @uxListRemove(%struct.xLIST_ITEM* noundef %0) local_unnamed_addr #13 !dbg !5737 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !5741, metadata !DIExpression()), !dbg !5743
  %2 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 4, !dbg !5744
  %3 = bitcast i8** %2 to %struct.xLIST**, !dbg !5744
  %4 = load %struct.xLIST*, %struct.xLIST** %3, align 4, !dbg !5744, !tbaa !5670
  call void @llvm.dbg.value(metadata %struct.xLIST* %4, metadata !5742, metadata !DIExpression()), !dbg !5743
  %5 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 2, !dbg !5745
  %6 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %5, align 4, !dbg !5745, !tbaa !5684
  %7 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 1, !dbg !5746
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !5746, !tbaa !4357
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 2, !dbg !5747
  store %struct.xLIST_ITEM* %6, %struct.xLIST_ITEM** %9, align 4, !dbg !5748, !tbaa !5684
  %10 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %5, align 4, !dbg !5749, !tbaa !5684
  %11 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %10, i32 0, i32 1, !dbg !5750
  store %struct.xLIST_ITEM* %8, %struct.xLIST_ITEM** %11, align 4, !dbg !5751, !tbaa !4357
  %12 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %4, i32 0, i32 1, !dbg !5752
  %13 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %12, align 4, !dbg !5752, !tbaa !4356
  %14 = icmp eq %struct.xLIST_ITEM* %13, %0, !dbg !5754
  br i1 %14, label %15, label %16, !dbg !5755

15:                                               ; preds = %1
  store %struct.xLIST_ITEM* %10, %struct.xLIST_ITEM** %12, align 4, !dbg !5756, !tbaa !4356
  br label %16, !dbg !5758

16:                                               ; preds = %1, %15
  store i8* null, i8** %2, align 4, !dbg !5759, !tbaa !5670
  %17 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %4, i32 0, i32 0, !dbg !5760
  %18 = load volatile i32, i32* %17, align 4, !dbg !5761, !tbaa !4068
  %19 = add i32 %18, -1, !dbg !5761
  store volatile i32 %19, i32* %17, align 4, !dbg !5761, !tbaa !4068
  %20 = load volatile i32, i32* %17, align 4, !dbg !5762, !tbaa !4068
  ret i32 %20, !dbg !5763
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialD2Ev(%"class.Cicada::BufferedSerial"* noundef nonnull returned align 8 dereferenceable(104) %0) unnamed_addr #8 comdat align 2 !dbg !5764 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !5767, metadata !DIExpression()), !dbg !5769
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !5770
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer"*, !dbg !5770
  %4 = call noundef %"class.Cicada::CircularBuffer"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(46) %3) #27, !dbg !5770
  %5 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !5770
  %6 = bitcast %"class.Cicada::LineCircularBuffer"* %5 to %"class.Cicada::CircularBuffer"*, !dbg !5770
  %7 = call noundef %"class.Cicada::CircularBuffer"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(46) %6) #27, !dbg !5770
  %8 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, !dbg !5770
  %9 = call noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialD2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %8) #27, !dbg !5770
  ret %"class.Cicada::BufferedSerial"* %0, !dbg !5772
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14BufferedSerialD0Ev(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #8 comdat align 2 !dbg !5773 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !5775, metadata !DIExpression()), !dbg !5776
  call void @llvm.trap() #29, !dbg !5777
  unreachable, !dbg !5777
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZNK6Cicada14BufferedSerial14bytesAvailableEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #6 align 2 !dbg !5778 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !5780, metadata !DIExpression()), !dbg !5783
  call void @_Z18eDisableInterruptsv() #27, !dbg !5784
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !5785
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer"*, !dbg !5785
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !5786
  call void @llvm.dbg.value(metadata i64 %4, metadata !5782, metadata !DIExpression()), !dbg !5783
  call void @_Z17eEnableInterruptsv() #27, !dbg !5787
  ret i64 %4, !dbg !5788
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZNK6Cicada14BufferedSerial14spaceAvailableEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #6 align 2 !dbg !5789 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !5791, metadata !DIExpression()), !dbg !5793
  call void @_Z18eDisableInterruptsv() #27, !dbg !5794
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !5795
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer"*, !dbg !5795
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !5796
  call void @llvm.dbg.value(metadata i64 %4, metadata !5792, metadata !DIExpression()), !dbg !5793
  call void @_Z17eEnableInterruptsv() #27, !dbg !5797
  ret i64 %4, !dbg !5798
}

declare dso_local void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial4readEPhy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8* nocapture noundef writeonly %1, i64 noundef %2) unnamed_addr #6 align 2 !dbg !5799 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !5801, metadata !DIExpression()), !dbg !5806
  call void @llvm.dbg.value(metadata i8* %1, metadata !5802, metadata !DIExpression()), !dbg !5806
  call void @llvm.dbg.value(metadata i64 %2, metadata !5803, metadata !DIExpression()), !dbg !5806
  %4 = bitcast %"class.Cicada::BufferedSerial"* %0 to i64 (%"class.Cicada::BufferedSerial"*)***, !dbg !5807
  %5 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %4, align 8, !dbg !5807, !tbaa !1498
  %6 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %5, i32 2, !dbg !5807
  %7 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %6, align 4, !dbg !5807
  %8 = call noundef i64 %7(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #27, !dbg !5807
  call void @llvm.dbg.value(metadata i64 %8, metadata !5804, metadata !DIExpression()), !dbg !5806
  %9 = icmp ult i64 %8, %2, !dbg !5808
  %10 = select i1 %9, i64 %8, i64 %2, !dbg !5810
  call void @llvm.dbg.value(metadata i64 %10, metadata !5803, metadata !DIExpression()), !dbg !5806
  call void @llvm.dbg.value(metadata i64 0, metadata !5805, metadata !DIExpression()), !dbg !5806
  %11 = icmp eq i64 %10, 0, !dbg !5811
  br i1 %11, label %24, label %12, !dbg !5812

12:                                               ; preds = %3
  %13 = bitcast %"class.Cicada::BufferedSerial"* %0 to i8 (%"class.Cicada::BufferedSerial"*)***
  br label %14, !dbg !5812

14:                                               ; preds = %12, %14
  %15 = phi i64 [ 0, %12 ], [ %20, %14 ]
  call void @llvm.dbg.value(metadata i64 %15, metadata !5805, metadata !DIExpression()), !dbg !5806
  %16 = load i8 (%"class.Cicada::BufferedSerial"*)**, i8 (%"class.Cicada::BufferedSerial"*)*** %13, align 8, !dbg !5813, !tbaa !1498
  %17 = getelementptr inbounds i8 (%"class.Cicada::BufferedSerial"*)*, i8 (%"class.Cicada::BufferedSerial"*)** %16, i32 7, !dbg !5813
  %18 = load i8 (%"class.Cicada::BufferedSerial"*)*, i8 (%"class.Cicada::BufferedSerial"*)** %17, align 4, !dbg !5813
  %19 = call noundef zeroext i8 %18(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #27, !dbg !5813
  %20 = add nuw i64 %15, 1, !dbg !5815
  call void @llvm.dbg.value(metadata i64 %20, metadata !5805, metadata !DIExpression()), !dbg !5806
  %21 = trunc i64 %15 to i32, !dbg !5816
  %22 = getelementptr inbounds i8, i8* %1, i32 %21, !dbg !5816
  store i8 %19, i8* %22, align 1, !dbg !5817, !tbaa !1367
  %23 = icmp ult i64 %20, %10, !dbg !5811
  br i1 %23, label %14, label %24, !dbg !5812, !llvm.loop !5818

24:                                               ; preds = %14, %3
  %25 = phi i64 [ 0, %3 ], [ %20, %14 ], !dbg !5806
  ret i64 %25, !dbg !5820
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial5writeEPKhy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8* nocapture noundef readonly %1, i64 noundef %2) unnamed_addr #6 align 2 !dbg !5821 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !5823, metadata !DIExpression()), !dbg !5828
  call void @llvm.dbg.value(metadata i8* %1, metadata !5824, metadata !DIExpression()), !dbg !5828
  call void @llvm.dbg.value(metadata i64 %2, metadata !5825, metadata !DIExpression()), !dbg !5828
  %4 = bitcast %"class.Cicada::BufferedSerial"* %0 to i64 (%"class.Cicada::BufferedSerial"*)***, !dbg !5829
  %5 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %4, align 8, !dbg !5829, !tbaa !1498
  %6 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %5, i32 3, !dbg !5829
  %7 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %6, align 4, !dbg !5829
  %8 = call noundef i64 %7(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #27, !dbg !5829
  call void @llvm.dbg.value(metadata i64 %8, metadata !5826, metadata !DIExpression()), !dbg !5828
  %9 = icmp ult i64 %8, %2, !dbg !5830
  %10 = select i1 %9, i64 %8, i64 %2, !dbg !5832
  call void @llvm.dbg.value(metadata i64 %10, metadata !5825, metadata !DIExpression()), !dbg !5828
  call void @llvm.dbg.value(metadata i64 0, metadata !5827, metadata !DIExpression()), !dbg !5828
  %11 = icmp eq i64 %10, 0, !dbg !5833
  br i1 %11, label %19, label %12, !dbg !5834

12:                                               ; preds = %3, %12
  %13 = phi i64 [ %14, %12 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i64 %13, metadata !5827, metadata !DIExpression()), !dbg !5828
  %14 = add nuw i64 %13, 1, !dbg !5835
  call void @llvm.dbg.value(metadata i64 %14, metadata !5827, metadata !DIExpression()), !dbg !5828
  %15 = trunc i64 %13 to i32, !dbg !5837
  %16 = getelementptr inbounds i8, i8* %1, i32 %15, !dbg !5837
  %17 = load i8, i8* %16, align 1, !dbg !5837, !tbaa !1367
  call void @_ZN6Cicada14BufferedSerial12copyToBufferEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %17), !dbg !5838
  %18 = icmp ult i64 %14, %10, !dbg !5833
  br i1 %18, label %12, label %19, !dbg !5834, !llvm.loop !5839

19:                                               ; preds = %12, %3
  %20 = phi i64 [ 0, %3 ], [ %14, %12 ], !dbg !5828
  %21 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, !dbg !5841
  %22 = bitcast %"class.Cicada::ICommDevice"* %21 to void (%"class.Cicada::ICommDevice"*)***, !dbg !5841
  %23 = load void (%"class.Cicada::ICommDevice"*)**, void (%"class.Cicada::ICommDevice"*)*** %22, align 4, !dbg !5841, !tbaa !1498
  %24 = getelementptr inbounds void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %23, i32 9, !dbg !5841
  %25 = load void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %24, align 4, !dbg !5841
  call void %25(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %21) #27, !dbg !5841
  ret i64 %20, !dbg !5842
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i8 @_ZN6Cicada14BufferedSerial4readEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #6 align 2 !dbg !5843 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !5845, metadata !DIExpression()), !dbg !5847
  call void @_Z18eDisableInterruptsv() #27, !dbg !5848
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !5849
  %3 = call noundef zeroext i8 @_ZN6Cicada18LineCircularBuffer4pullEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %2), !dbg !5850
  call void @llvm.dbg.value(metadata i8 %3, metadata !5846, metadata !DIExpression()), !dbg !5847
  call void @_Z17eEnableInterruptsv() #27, !dbg !5851
  ret i8 %3, !dbg !5852
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial5writeEPKh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8* nocapture noundef readonly %1) unnamed_addr #6 align 2 !dbg !5853 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !5855, metadata !DIExpression()), !dbg !5859
  call void @llvm.dbg.value(metadata i8* %1, metadata !5856, metadata !DIExpression()), !dbg !5859
  %3 = bitcast %"class.Cicada::BufferedSerial"* %0 to i64 (%"class.Cicada::BufferedSerial"*)***, !dbg !5860
  %4 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %3, align 8, !dbg !5860, !tbaa !1498
  %5 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %4, i32 3, !dbg !5860
  %6 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %5, align 4, !dbg !5860
  %7 = call noundef i64 %6(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #27, !dbg !5860
  call void @llvm.dbg.value(metadata i64 %7, metadata !5857, metadata !DIExpression()), !dbg !5859
  call void @llvm.dbg.value(metadata i64 0, metadata !5858, metadata !DIExpression()), !dbg !5859
  %8 = load i8, i8* %1, align 1, !dbg !5861, !tbaa !1367
  %9 = icmp ne i8 %8, 0, !dbg !5862
  %10 = icmp ne i64 %7, 0, !dbg !5863
  %11 = and i1 %9, %10, !dbg !5863
  br i1 %11, label %12, label %22, !dbg !5864

12:                                               ; preds = %2, %12
  %13 = phi i8 [ %18, %12 ], [ %8, %2 ]
  %14 = phi i64 [ %15, %12 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i64 %14, metadata !5858, metadata !DIExpression()), !dbg !5859
  %15 = add nuw i64 %14, 1, !dbg !5865
  call void @llvm.dbg.value(metadata i64 %15, metadata !5858, metadata !DIExpression()), !dbg !5859
  call void @_ZN6Cicada14BufferedSerial12copyToBufferEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %13), !dbg !5867
  %16 = trunc i64 %15 to i32, !dbg !5861
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !5861
  %18 = load i8, i8* %17, align 1, !dbg !5861, !tbaa !1367
  %19 = icmp ne i8 %18, 0, !dbg !5862
  %20 = icmp ult i64 %15, %7, !dbg !5863
  %21 = select i1 %19, i1 %20, i1 false, !dbg !5863
  br i1 %21, label %12, label %22, !dbg !5864, !llvm.loop !5868

22:                                               ; preds = %12, %2
  %23 = phi i64 [ 0, %2 ], [ %15, %12 ], !dbg !5859
  %24 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, !dbg !5870
  %25 = bitcast %"class.Cicada::ICommDevice"* %24 to void (%"class.Cicada::ICommDevice"*)***, !dbg !5870
  %26 = load void (%"class.Cicada::ICommDevice"*)**, void (%"class.Cicada::ICommDevice"*)*** %25, align 4, !dbg !5870, !tbaa !1498
  %27 = getelementptr inbounds void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %26, i32 9, !dbg !5870
  %28 = load void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %27, align 4, !dbg !5870
  call void %28(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %24) #27, !dbg !5870
  ret i64 %23, !dbg !5871
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada14BufferedSerial5writeEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %1) unnamed_addr #6 align 2 !dbg !5872 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !5874, metadata !DIExpression()), !dbg !5876
  call void @llvm.dbg.value(metadata i8 %1, metadata !5875, metadata !DIExpression()), !dbg !5876
  call void @_ZN6Cicada14BufferedSerial12copyToBufferEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %1), !dbg !5877
  %3 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, !dbg !5878
  %4 = bitcast %"class.Cicada::ICommDevice"* %3 to void (%"class.Cicada::ICommDevice"*)***, !dbg !5878
  %5 = load void (%"class.Cicada::ICommDevice"*)**, void (%"class.Cicada::ICommDevice"*)*** %4, align 4, !dbg !5878, !tbaa !1498
  %6 = getelementptr inbounds void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %5, i32 9, !dbg !5878
  %7 = load void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %6, align 4, !dbg !5878
  call void %7(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %3) #27, !dbg !5878
  ret void, !dbg !5879
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZNK6Cicada14BufferedSerial11canReadLineEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #6 align 2 !dbg !5880 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !5882, metadata !DIExpression()), !dbg !5884
  call void @_Z18eDisableInterruptsv() #27, !dbg !5885
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !5886
  %3 = call noundef zeroext i16 @_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %2), !dbg !5887
  call void @llvm.dbg.value(metadata i16 %3, metadata !5883, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5884
  call void @_Z17eEnableInterruptsv() #27, !dbg !5888
  %4 = icmp ne i16 %3, 0, !dbg !5889
  ret i1 %4, !dbg !5890
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial8readLineEPhy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8* nocapture noundef writeonly %1, i64 noundef %2) unnamed_addr #6 align 2 !dbg !5891 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !5893, metadata !DIExpression()), !dbg !5898
  call void @llvm.dbg.value(metadata i8* %1, metadata !5894, metadata !DIExpression()), !dbg !5898
  call void @llvm.dbg.value(metadata i64 %2, metadata !5895, metadata !DIExpression()), !dbg !5898
  call void @llvm.dbg.value(metadata i64 0, metadata !5896, metadata !DIExpression()), !dbg !5898
  call void @llvm.dbg.value(metadata i8 0, metadata !5897, metadata !DIExpression()), !dbg !5898
  %4 = icmp eq i64 %2, 0, !dbg !5899
  br i1 %4, label %39, label %5, !dbg !5901

5:                                                ; preds = %3
  %6 = bitcast %"class.Cicada::BufferedSerial"* %0 to i64 (%"class.Cicada::BufferedSerial"*)***
  call void @llvm.dbg.value(metadata i8 0, metadata !5897, metadata !DIExpression()), !dbg !5898
  call void @llvm.dbg.value(metadata i64 0, metadata !5896, metadata !DIExpression()), !dbg !5898
  %7 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %6, align 8, !dbg !5902, !tbaa !1498
  %8 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %7, i32 2, !dbg !5902
  %9 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %8, align 4, !dbg !5902
  %10 = call noundef i64 %9(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #27, !dbg !5902
  %11 = icmp eq i64 %10, 0, !dbg !5902
  br i1 %11, label %35, label %12, !dbg !5903

12:                                               ; preds = %5
  %13 = bitcast %"class.Cicada::BufferedSerial"* %0 to i8 (%"class.Cicada::BufferedSerial"*)***
  %14 = add i64 %2, -1
  br label %15, !dbg !5903

15:                                               ; preds = %12, %26
  %16 = phi i64 [ 0, %12 ], [ %27, %26 ]
  call void @llvm.dbg.value(metadata i64 %16, metadata !5896, metadata !DIExpression()), !dbg !5898
  %17 = load i8 (%"class.Cicada::BufferedSerial"*)**, i8 (%"class.Cicada::BufferedSerial"*)*** %13, align 8, !dbg !5904, !tbaa !1498
  %18 = getelementptr inbounds i8 (%"class.Cicada::BufferedSerial"*)*, i8 (%"class.Cicada::BufferedSerial"*)** %17, i32 7, !dbg !5904
  %19 = load i8 (%"class.Cicada::BufferedSerial"*)*, i8 (%"class.Cicada::BufferedSerial"*)** %18, align 4, !dbg !5904
  %20 = call noundef zeroext i8 %19(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #27, !dbg !5904
  call void @llvm.dbg.value(metadata i8 %20, metadata !5897, metadata !DIExpression()), !dbg !5898
  %21 = icmp ult i64 %16, %14, !dbg !5906
  br i1 %21, label %22, label %26, !dbg !5908

22:                                               ; preds = %15
  %23 = add i64 %16, 1, !dbg !5909
  call void @llvm.dbg.value(metadata i64 %23, metadata !5896, metadata !DIExpression()), !dbg !5898
  %24 = trunc i64 %16 to i32, !dbg !5911
  %25 = getelementptr inbounds i8, i8* %1, i32 %24, !dbg !5911
  store i8 %20, i8* %25, align 1, !dbg !5912, !tbaa !1367
  br label %26, !dbg !5913

26:                                               ; preds = %22, %15
  %27 = phi i64 [ %23, %22 ], [ %16, %15 ], !dbg !5898
  call void @llvm.dbg.value(metadata i8 %20, metadata !5897, metadata !DIExpression()), !dbg !5898
  call void @llvm.dbg.value(metadata i64 %27, metadata !5896, metadata !DIExpression()), !dbg !5898
  %28 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %6, align 8, !dbg !5902, !tbaa !1498
  %29 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %28, i32 2, !dbg !5902
  %30 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %29, align 4, !dbg !5902
  %31 = call noundef i64 %30(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #27, !dbg !5902
  %32 = icmp ne i64 %31, 0, !dbg !5902
  %33 = icmp ne i8 %20, 10, !dbg !5914
  %34 = and i1 %33, %32, !dbg !5914
  br i1 %34, label %15, label %35, !dbg !5903, !llvm.loop !5915

35:                                               ; preds = %26, %5
  %36 = phi i64 [ 0, %5 ], [ %27, %26 ], !dbg !5898
  %37 = trunc i64 %36 to i32, !dbg !5917
  %38 = getelementptr inbounds i8, i8* %1, i32 %37, !dbg !5917
  store i8 0, i8* %38, align 1, !dbg !5918, !tbaa !1367
  br label %39, !dbg !5919

39:                                               ; preds = %3, %35
  %40 = phi i64 [ %36, %35 ], [ 0, %3 ], !dbg !5898
  ret i64 %40, !dbg !5920
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #6 align 2 !dbg !5921 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !5923, metadata !DIExpression()), !dbg !5924
  call void @_Z18eDisableInterruptsv() #27, !dbg !5925
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !5926
  call void @_ZN6Cicada18LineCircularBuffer5flushEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %2), !dbg !5927
  call void @_Z17eEnableInterruptsv() #27, !dbg !5928
  ret void, !dbg !5929
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial14readBufferSizeEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #6 align 2 !dbg !5930 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !5932, metadata !DIExpression()), !dbg !5933
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !5934
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer"*, !dbg !5934
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE4sizeEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !5935
  ret i64 %4, !dbg !5936
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial15writeBufferSizeEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #6 align 2 !dbg !5937 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !5939, metadata !DIExpression()), !dbg !5940
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !5941
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer"*, !dbg !5941
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE4sizeEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !5942
  ret i64 %4, !dbg !5943
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::BufferedSerial"* @_ZThn4_N6Cicada14BufferedSerialD1Ev(%"class.Cicada::BufferedSerial"* noundef %0) unnamed_addr #8 comdat align 2 !dbg !5944 {
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 -1, i32 2, i32 1, !dbg !5946
  %3 = bitcast i16* %2 to %"class.Cicada::BufferedSerial"*, !dbg !5946
  %4 = tail call noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialD2Ev(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %3) #27, !dbg !5946
  ret %"class.Cicada::BufferedSerial"* undef, !dbg !5946
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada14BufferedSerialD0Ev(%"class.Cicada::BufferedSerial"* noundef %0) unnamed_addr #8 comdat align 2 !dbg !5947 {
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 -1, i32 2, i32 1, !dbg !5948
  %3 = bitcast i16* %2 to %"class.Cicada::BufferedSerial"*, !dbg !5948
  tail call void @_ZN6Cicada14BufferedSerialD0Ev(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %3) #27, !dbg !5948
  ret void, !dbg !5948
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIcE4sizeEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #6 comdat align 2 !dbg !5949 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !5951, metadata !DIExpression()), !dbg !5953
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 5, !dbg !5954
  %3 = load i64, i64* %2, align 8, !dbg !5954, !tbaa !5955
  ret i64 %3, !dbg !5958
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada18LineCircularBuffer5flushEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) unnamed_addr #6 comdat align 2 !dbg !5959 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !5961, metadata !DIExpression()), !dbg !5963
  %2 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !5964
  store i16 0, i16* %2, align 4, !dbg !5965, !tbaa !5966
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer"*, !dbg !5969
  call void @_ZN6Cicada14CircularBufferIcE5flushEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !5969
  ret void, !dbg !5970
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIcE5flushEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #6 comdat align 2 !dbg !5971 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !5973, metadata !DIExpression()), !dbg !5975
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 2, !dbg !5976
  %3 = bitcast i64* %2 to i8*, !dbg !5977
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %3, i8 0, i64 24, i1 false), !dbg !5978
  ret void, !dbg !5977
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i16 @_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) local_unnamed_addr #6 comdat align 2 !dbg !5979 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !5981, metadata !DIExpression()), !dbg !5983
  %2 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !5984
  %3 = load i16, i16* %2, align 4, !dbg !5984, !tbaa !5966
  ret i16 %3, !dbg !5985
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada14BufferedSerial12copyToBufferEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %1) local_unnamed_addr #6 align 2 !dbg !5986 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !5988, metadata !DIExpression()), !dbg !5990
  call void @llvm.dbg.value(metadata i8 %1, metadata !5989, metadata !DIExpression()), !dbg !5990
  call void @_Z18eDisableInterruptsv() #27, !dbg !5991
  %3 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !5992
  call void @_ZN6Cicada18LineCircularBuffer4pushEc(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %3, i8 noundef zeroext %1), !dbg !5993
  call void @_Z17eEnableInterruptsv() #27, !dbg !5994
  ret void, !dbg !5995
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada18LineCircularBuffer4pushEc(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0, i8 noundef zeroext %1) unnamed_addr #6 comdat align 2 !dbg !5996 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !5998, metadata !DIExpression()), !dbg !6000
  call void @llvm.dbg.value(metadata i8 %1, metadata !5999, metadata !DIExpression()), !dbg !6000
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer"*, !dbg !6001
  call void @_ZN6Cicada14CircularBufferIcE4pushEc(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %3, i8 noundef zeroext %1), !dbg !6001
  %4 = icmp eq i8 %1, 10, !dbg !6002
  br i1 %4, label %5, label %9, !dbg !6004

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !6005
  %7 = load i16, i16* %6, align 4, !dbg !6007, !tbaa !5966
  %8 = add i16 %7, 1, !dbg !6007
  store i16 %8, i16* %6, align 4, !dbg !6007, !tbaa !5966
  br label %9, !dbg !6008

9:                                                ; preds = %5, %2
  ret void, !dbg !6009
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIcE4pushEc(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0, i8 noundef zeroext %1) unnamed_addr #6 comdat align 2 !dbg !6010 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !6012, metadata !DIExpression()), !dbg !6014
  call void @llvm.dbg.value(metadata i8 %1, metadata !6013, metadata !DIExpression()), !dbg !6014
  %3 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 6, !dbg !6015
  %4 = load i8*, i8** %3, align 8, !dbg !6015, !tbaa !6016
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 2, !dbg !6017
  %6 = load i64, i64* %5, align 8, !dbg !6017, !tbaa !6018
  %7 = trunc i64 %6 to i32, !dbg !6015
  %8 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !6015
  store i8 %1, i8* %8, align 1, !dbg !6019, !tbaa !1367
  call void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %5), !dbg !6020
  %9 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 4, !dbg !6021
  %10 = load i64, i64* %9, align 8, !dbg !6021, !tbaa !6023
  %11 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 5, !dbg !6024
  %12 = load i64, i64* %11, align 8, !dbg !6024, !tbaa !5955
  %13 = icmp ult i64 %10, %12, !dbg !6025
  br i1 %13, label %14, label %16, !dbg !6026

14:                                               ; preds = %2
  %15 = add i64 %10, 1, !dbg !6027
  store i64 %15, i64* %9, align 8, !dbg !6027, !tbaa !6023
  br label %16, !dbg !6028

16:                                               ; preds = %14, %2
  ret void, !dbg !6029
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #6 comdat align 2 !dbg !6030 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !6032, metadata !DIExpression()), !dbg !6034
  call void @llvm.dbg.value(metadata i64* %1, metadata !6033, metadata !DIExpression()), !dbg !6034
  %3 = load i64, i64* %1, align 8, !dbg !6035, !tbaa !6036
  %4 = add i64 %3, 1, !dbg !6035
  store i64 %4, i64* %1, align 8, !dbg !6035, !tbaa !6036
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 5, !dbg !6037
  %6 = load i64, i64* %5, align 8, !dbg !6037, !tbaa !5955
  %7 = icmp ult i64 %4, %6, !dbg !6039
  %8 = select i1 %7, i64 %4, i64 0, !dbg !6040
  store i64 %8, i64* %1, align 8, !dbg !6034
  ret void, !dbg !6041
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i8 @_ZN6Cicada18LineCircularBuffer4pullEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) unnamed_addr #6 comdat align 2 !dbg !6042 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !6044, metadata !DIExpression()), !dbg !6046
  %2 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer"*, !dbg !6047
  %3 = call noundef zeroext i8 @_ZN6Cicada14CircularBufferIcE4pullEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %2), !dbg !6047
  call void @llvm.dbg.value(metadata i8 %3, metadata !6045, metadata !DIExpression()), !dbg !6046
  %4 = icmp eq i8 %3, 10, !dbg !6048
  br i1 %4, label %5, label %9, !dbg !6050

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !6051
  %7 = load i16, i16* %6, align 4, !dbg !6053, !tbaa !5966
  %8 = add i16 %7, -1, !dbg !6053
  store i16 %8, i16* %6, align 4, !dbg !6053, !tbaa !5966
  br label %9, !dbg !6054

9:                                                ; preds = %5, %1
  ret i8 %3, !dbg !6055
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i8 @_ZN6Cicada14CircularBufferIcE4pullEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #6 comdat align 2 !dbg !6056 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !6058, metadata !DIExpression()), !dbg !6060
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 6, !dbg !6061
  %3 = load i8*, i8** %2, align 8, !dbg !6061, !tbaa !6016
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 3, !dbg !6062
  %5 = load i64, i64* %4, align 8, !dbg !6062, !tbaa !6063
  %6 = trunc i64 %5 to i32, !dbg !6061
  %7 = getelementptr inbounds i8, i8* %3, i32 %6, !dbg !6061
  %8 = load i8, i8* %7, align 1, !dbg !6061, !tbaa !1367
  call void @llvm.dbg.value(metadata i8 %8, metadata !6059, metadata !DIExpression()), !dbg !6060
  call void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %4), !dbg !6064
  %9 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 4, !dbg !6065
  %10 = load i64, i64* %9, align 8, !dbg !6065, !tbaa !6023
  %11 = icmp eq i64 %10, 0, !dbg !6067
  br i1 %11, label %14, label %12, !dbg !6068

12:                                               ; preds = %1
  %13 = add i64 %10, -1, !dbg !6069
  store i64 %13, i64* %9, align 8, !dbg !6069, !tbaa !6023
  br label %14, !dbg !6070

14:                                               ; preds = %12, %1
  ret i8 %8, !dbg !6071
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #6 comdat align 2 !dbg !6072 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !6074, metadata !DIExpression()), !dbg !6075
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 5, !dbg !6076
  %3 = load i64, i64* %2, align 8, !dbg !6076, !tbaa !5955
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 4, !dbg !6077
  %5 = load i64, i64* %4, align 8, !dbg !6077, !tbaa !6023
  %6 = sub i64 %3, %5, !dbg !6078
  ret i64 %6, !dbg !6079
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #6 comdat align 2 !dbg !6080 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !6082, metadata !DIExpression()), !dbg !6083
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 4, !dbg !6084
  %3 = load i64, i64* %2, align 8, !dbg !6084, !tbaa !6023
  ret i64 %3, !dbg !6085
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #22

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::CircularBuffer"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer"* noundef nonnull returned align 8 dereferenceable(44) %0) unnamed_addr #8 comdat align 2 !dbg !6086 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !6088, metadata !DIExpression()), !dbg !6089
  ret %"class.Cicada::CircularBuffer"* %0, !dbg !6090
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialD2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull returned align 4 dereferenceable(8) %0) unnamed_addr #8 comdat align 2 !dbg !6091 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %0, metadata !6093, metadata !DIExpression()), !dbg !6095
  %2 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 1, !dbg !6096
  %3 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada7ISerialD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %2) #27, !dbg !6096
  %4 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 0, !dbg !6096
  %5 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %4) #27, !dbg !6096
  ret %"class.Cicada::IBufferedSerial"* %0, !dbg !6098
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada7ISerialD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #8 comdat align 2 !dbg !6099 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !6101, metadata !DIExpression()), !dbg !6103
  ret %"class.Cicada::ICommDevice"* %0, !dbg !6104
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #8 comdat align 2 !dbg !6105 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !6107, metadata !DIExpression()), !dbg !6109
  ret %"class.Cicada::ICommDevice"* %0, !dbg !6110
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialC2EPcS1_yy(%"class.Cicada::BufferedSerial"* noundef nonnull returned align 8 dereferenceable(104) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4) unnamed_addr #8 align 2 !dbg !6111 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !6113, metadata !DIExpression()), !dbg !6118
  call void @llvm.dbg.value(metadata i8* %1, metadata !6114, metadata !DIExpression()), !dbg !6118
  call void @llvm.dbg.value(metadata i8* %2, metadata !6115, metadata !DIExpression()), !dbg !6118
  call void @llvm.dbg.value(metadata i64 %3, metadata !6116, metadata !DIExpression()), !dbg !6118
  call void @llvm.dbg.value(metadata i64 %4, metadata !6117, metadata !DIExpression()), !dbg !6118
  %6 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, !dbg !6119
  %7 = call noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialC2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %6) #27, !dbg !6120
  %8 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6119
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada14BufferedSerialE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %8, align 8, !dbg !6119, !tbaa !1498
  %9 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6119
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada14BufferedSerialE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %9, align 4, !dbg !6119, !tbaa !1498
  %10 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !6121
  %11 = call noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %10, i8* noundef %1, i64 noundef %3), !dbg !6121
  %12 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !6122
  %13 = call noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %12, i8* noundef %2, i64 noundef %4), !dbg !6122
  ret %"class.Cicada::BufferedSerial"* %0, !dbg !6123
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialC2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull returned align 4 dereferenceable(8) %0) unnamed_addr #8 comdat align 2 !dbg !6124 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %0, metadata !6127, metadata !DIExpression()), !dbg !6128
  %2 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 0, !dbg !6129
  %3 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %2) #27, !dbg !6129
  %4 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 1, !dbg !6129
  %5 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada7ISerialC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %4) #27, !dbg !6129
  %6 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 0, i32 0, !dbg !6129
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada15IBufferedSerialE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 4, !dbg !6129, !tbaa !1498
  %7 = getelementptr %"class.Cicada::ICommDevice", %"class.Cicada::ICommDevice"* %4, i32 0, i32 0, !dbg !6129
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada15IBufferedSerialE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %7, align 4, !dbg !6129, !tbaa !1498
  ret %"class.Cicada::IBufferedSerial"* %0, !dbg !6129
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull returned align 8 dereferenceable(46) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #8 comdat align 2 !dbg !6130 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !6132, metadata !DIExpression()), !dbg !6135
  call void @llvm.dbg.value(metadata i8* %1, metadata !6133, metadata !DIExpression()), !dbg !6135
  call void @llvm.dbg.value(metadata i64 %2, metadata !6134, metadata !DIExpression()), !dbg !6135
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer"*, !dbg !6136
  %5 = call noundef %"class.Cicada::CircularBuffer"* @_ZN6Cicada14CircularBufferIcEC2EPcy(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %4, i8* noundef %1, i64 noundef %2), !dbg !6137
  %6 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 0, i32 0, !dbg !6136
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6Cicada18LineCircularBufferE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 8, !dbg !6136, !tbaa !1498
  %7 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !6138
  store i16 0, i16* %7, align 4, !dbg !6138, !tbaa !5966
  ret %"class.Cicada::LineCircularBuffer"* %0, !dbg !6139
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::CircularBuffer"* @_ZN6Cicada14CircularBufferIcEC2EPcy(%"class.Cicada::CircularBuffer"* noundef nonnull returned align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #8 comdat align 2 !dbg !6140 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !6142, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.value(metadata i8* %1, metadata !6143, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.value(metadata i64 %2, metadata !6144, metadata !DIExpression()), !dbg !6145
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 0, !dbg !6146
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6Cicada14CircularBufferIcEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8, !dbg !6146, !tbaa !1498
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 2, !dbg !6147
  %6 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 5, !dbg !6148
  %7 = bitcast i64* %5 to i8*, !dbg !6148
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false), !dbg !6149
  store i64 %2, i64* %6, align 8, !dbg !6148, !tbaa !5955
  %8 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 6, !dbg !6150
  store i8* %1, i8** %8, align 8, !dbg !6150, !tbaa !6016
  ret %"class.Cicada::CircularBuffer"* %0, !dbg !6151
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada18LineCircularBufferD0Ev(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) unnamed_addr #8 comdat align 2 !dbg !6152 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !6155, metadata !DIExpression()), !dbg !6156
  %2 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer"*, !dbg !6157
  %3 = call noundef %"class.Cicada::CircularBuffer"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(46) %2) #27, !dbg !6157
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to i8*, !dbg !6157
  call void @_ZdlPv(i8* noundef %4) #30, !dbg !6157
  ret void, !dbg !6157
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada18LineCircularBuffer4pushEPKcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #6 comdat align 2 !dbg !6158 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !6160, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i8* %1, metadata !6161, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i64 %2, metadata !6162, metadata !DIExpression()), !dbg !6164
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer"*, !dbg !6165
  %5 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !6165
  %6 = icmp ult i64 %5, %2, !dbg !6167
  br i1 %6, label %7, label %9, !dbg !6168

7:                                                ; preds = %3
  %8 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !6169
  call void @llvm.dbg.value(metadata i64 %8, metadata !6162, metadata !DIExpression()), !dbg !6164
  br label %9, !dbg !6170

9:                                                ; preds = %7, %3
  %10 = phi i64 [ %8, %7 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %10, metadata !6162, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i64 0, metadata !6163, metadata !DIExpression()), !dbg !6164
  %11 = icmp eq i64 %10, 0, !dbg !6171
  br i1 %11, label %24, label %12, !dbg !6172

12:                                               ; preds = %9
  %13 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to void (%"class.Cicada::LineCircularBuffer"*, i8)***
  br label %14, !dbg !6172

14:                                               ; preds = %12, %14
  %15 = phi i64 [ 0, %12 ], [ %16, %14 ]
  call void @llvm.dbg.value(metadata i64 %15, metadata !6163, metadata !DIExpression()), !dbg !6164
  %16 = add nuw i64 %15, 1, !dbg !6173
  call void @llvm.dbg.value(metadata i64 %16, metadata !6163, metadata !DIExpression()), !dbg !6164
  %17 = trunc i64 %15 to i32, !dbg !6175
  %18 = getelementptr inbounds i8, i8* %1, i32 %17, !dbg !6175
  %19 = load i8, i8* %18, align 1, !dbg !6175, !tbaa !1367
  %20 = load void (%"class.Cicada::LineCircularBuffer"*, i8)**, void (%"class.Cicada::LineCircularBuffer"*, i8)*** %13, align 8, !dbg !6176, !tbaa !1498
  %21 = getelementptr inbounds void (%"class.Cicada::LineCircularBuffer"*, i8)*, void (%"class.Cicada::LineCircularBuffer"*, i8)** %20, i32 3, !dbg !6176
  %22 = load void (%"class.Cicada::LineCircularBuffer"*, i8)*, void (%"class.Cicada::LineCircularBuffer"*, i8)** %21, align 4, !dbg !6176
  call void %22(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0, i8 noundef zeroext %19) #27, !dbg !6176
  %23 = icmp ult i64 %16, %10, !dbg !6171
  br i1 %23, label %14, label %24, !dbg !6172, !llvm.loop !6177

24:                                               ; preds = %14, %9
  %25 = phi i64 [ 0, %9 ], [ %10, %14 ], !dbg !6164
  ret i64 %25, !dbg !6179
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada18LineCircularBuffer4pullEPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #6 comdat align 2 !dbg !6180 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !6182, metadata !DIExpression()), !dbg !6186
  call void @llvm.dbg.value(metadata i8* %1, metadata !6183, metadata !DIExpression()), !dbg !6186
  call void @llvm.dbg.value(metadata i64 %2, metadata !6184, metadata !DIExpression()), !dbg !6186
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer"*, !dbg !6187
  %5 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !6187
  %6 = icmp ult i64 %5, %2, !dbg !6189
  br i1 %6, label %7, label %9, !dbg !6190

7:                                                ; preds = %3
  %8 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !6191
  call void @llvm.dbg.value(metadata i64 %8, metadata !6184, metadata !DIExpression()), !dbg !6186
  br label %9, !dbg !6192

9:                                                ; preds = %7, %3
  %10 = phi i64 [ %8, %7 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %10, metadata !6184, metadata !DIExpression()), !dbg !6186
  call void @llvm.dbg.value(metadata i64 0, metadata !6185, metadata !DIExpression()), !dbg !6186
  %11 = icmp eq i64 %10, 0, !dbg !6193
  br i1 %11, label %24, label %12, !dbg !6194

12:                                               ; preds = %9
  %13 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to i8 (%"class.Cicada::LineCircularBuffer"*)***
  br label %14, !dbg !6194

14:                                               ; preds = %12, %14
  %15 = phi i64 [ 0, %12 ], [ %20, %14 ]
  call void @llvm.dbg.value(metadata i64 %15, metadata !6185, metadata !DIExpression()), !dbg !6186
  %16 = load i8 (%"class.Cicada::LineCircularBuffer"*)**, i8 (%"class.Cicada::LineCircularBuffer"*)*** %13, align 8, !dbg !6195, !tbaa !1498
  %17 = getelementptr inbounds i8 (%"class.Cicada::LineCircularBuffer"*)*, i8 (%"class.Cicada::LineCircularBuffer"*)** %16, i32 5, !dbg !6195
  %18 = load i8 (%"class.Cicada::LineCircularBuffer"*)*, i8 (%"class.Cicada::LineCircularBuffer"*)** %17, align 4, !dbg !6195
  %19 = call noundef zeroext i8 %18(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) #27, !dbg !6195
  %20 = add nuw i64 %15, 1, !dbg !6197
  call void @llvm.dbg.value(metadata i64 %20, metadata !6185, metadata !DIExpression()), !dbg !6186
  %21 = trunc i64 %15 to i32, !dbg !6198
  %22 = getelementptr inbounds i8, i8* %1, i32 %21, !dbg !6198
  store i8 %19, i8* %22, align 1, !dbg !6199, !tbaa !1367
  %23 = icmp ult i64 %20, %10, !dbg !6193
  br i1 %23, label %14, label %24, !dbg !6194, !llvm.loop !6200

24:                                               ; preds = %14, %9
  %25 = phi i64 [ 0, %9 ], [ %10, %14 ], !dbg !6186
  ret i64 %25, !dbg !6202
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i8 @_ZN6Cicada14CircularBufferIcE4readEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #6 comdat align 2 !dbg !6203 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !6205, metadata !DIExpression()), !dbg !6206
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 6, !dbg !6207
  %3 = load i8*, i8** %2, align 8, !dbg !6207, !tbaa !6016
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 3, !dbg !6208
  %5 = load i64, i64* %4, align 8, !dbg !6208, !tbaa !6063
  %6 = trunc i64 %5 to i32, !dbg !6207
  %7 = getelementptr inbounds i8, i8* %3, i32 %6, !dbg !6207
  %8 = load i8, i8* %7, align 1, !dbg !6207, !tbaa !1367
  ret i8 %8, !dbg !6209
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i1 @_ZNK6Cicada14CircularBufferIcE7isEmptyEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #6 comdat align 2 !dbg !6210 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !6212, metadata !DIExpression()), !dbg !6213
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 4, !dbg !6214
  %3 = load i64, i64* %2, align 8, !dbg !6214, !tbaa !6023
  %4 = icmp eq i64 %3, 0, !dbg !6215
  ret i1 %4, !dbg !6216
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i1 @_ZNK6Cicada14CircularBufferIcE6isFullEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #6 comdat align 2 !dbg !6217 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !6219, metadata !DIExpression()), !dbg !6220
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 4, !dbg !6221
  %3 = load i64, i64* %2, align 8, !dbg !6221, !tbaa !6023
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 5, !dbg !6222
  %5 = load i64, i64* %4, align 8, !dbg !6222, !tbaa !5955
  %6 = icmp eq i64 %3, %5, !dbg !6223
  ret i1 %6, !dbg !6224
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8* noundef) local_unnamed_addr #23

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIcED0Ev(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #8 comdat align 2 !dbg !6225 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !6227, metadata !DIExpression()), !dbg !6228
  %2 = call noundef %"class.Cicada::CircularBuffer"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) #27, !dbg !6229
  %3 = bitcast %"class.Cicada::CircularBuffer"* %0 to i8*, !dbg !6229
  call void @_ZdlPv(i8* noundef %3) #30, !dbg !6229
  ret void, !dbg !6230
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada14CircularBufferIcE4pushEPKcy(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #6 comdat align 2 !dbg !6231 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !6233, metadata !DIExpression()), !dbg !6237
  call void @llvm.dbg.value(metadata i8* %1, metadata !6234, metadata !DIExpression()), !dbg !6237
  call void @llvm.dbg.value(metadata i64 %2, metadata !6235, metadata !DIExpression()), !dbg !6237
  %4 = bitcast %"class.Cicada::CircularBuffer"* %0 to i64 (%"class.Cicada::CircularBuffer"*)***, !dbg !6238
  %5 = load i64 (%"class.Cicada::CircularBuffer"*)**, i64 (%"class.Cicada::CircularBuffer"*)*** %4, align 8, !dbg !6238, !tbaa !1498
  %6 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer"*)*, i64 (%"class.Cicada::CircularBuffer"*)** %5, i32 11, !dbg !6238
  %7 = load i64 (%"class.Cicada::CircularBuffer"*)*, i64 (%"class.Cicada::CircularBuffer"*)** %6, align 4, !dbg !6238
  %8 = call noundef i64 %7(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) #27, !dbg !6238
  %9 = icmp ult i64 %8, %2, !dbg !6240
  br i1 %9, label %10, label %15, !dbg !6241

10:                                               ; preds = %3
  %11 = load i64 (%"class.Cicada::CircularBuffer"*)**, i64 (%"class.Cicada::CircularBuffer"*)*** %4, align 8, !dbg !6242, !tbaa !1498
  %12 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer"*)*, i64 (%"class.Cicada::CircularBuffer"*)** %11, i32 11, !dbg !6242
  %13 = load i64 (%"class.Cicada::CircularBuffer"*)*, i64 (%"class.Cicada::CircularBuffer"*)** %12, align 4, !dbg !6242
  %14 = call noundef i64 %13(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) #27, !dbg !6242
  call void @llvm.dbg.value(metadata i64 %14, metadata !6235, metadata !DIExpression()), !dbg !6237
  br label %15, !dbg !6243

15:                                               ; preds = %10, %3
  %16 = phi i64 [ %14, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %16, metadata !6235, metadata !DIExpression()), !dbg !6237
  call void @llvm.dbg.value(metadata i64 0, metadata !6236, metadata !DIExpression()), !dbg !6237
  %17 = icmp eq i64 %16, 0, !dbg !6244
  br i1 %17, label %32, label %18, !dbg !6245

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 6
  %20 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 2
  br label %21, !dbg !6245

21:                                               ; preds = %18, %21
  %22 = phi i64 [ 0, %18 ], [ %23, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !6236, metadata !DIExpression()), !dbg !6237
  %23 = add nuw i64 %22, 1, !dbg !6246
  call void @llvm.dbg.value(metadata i64 %23, metadata !6236, metadata !DIExpression()), !dbg !6237
  %24 = trunc i64 %22 to i32, !dbg !6248
  %25 = getelementptr inbounds i8, i8* %1, i32 %24, !dbg !6248
  %26 = load i8, i8* %25, align 1, !dbg !6248, !tbaa !1367
  %27 = load i8*, i8** %19, align 8, !dbg !6249, !tbaa !6016
  %28 = load i64, i64* %20, align 8, !dbg !6250, !tbaa !6018
  %29 = trunc i64 %28 to i32, !dbg !6249
  %30 = getelementptr inbounds i8, i8* %27, i32 %29, !dbg !6249
  store i8 %26, i8* %30, align 1, !dbg !6251, !tbaa !1367
  call void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %20), !dbg !6252
  %31 = icmp ult i64 %23, %16, !dbg !6244
  br i1 %31, label %21, label %32, !dbg !6245, !llvm.loop !6253

32:                                               ; preds = %21, %15
  %33 = phi i64 [ 0, %15 ], [ %16, %21 ], !dbg !6237
  %34 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 4, !dbg !6255
  %35 = load i64, i64* %34, align 8, !dbg !6256, !tbaa !6023
  %36 = add i64 %35, %33, !dbg !6256
  store i64 %36, i64* %34, align 8, !dbg !6256, !tbaa !6023
  ret i64 %33, !dbg !6257
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada14CircularBufferIcE4pullEPcy(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #6 comdat align 2 !dbg !6258 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !6260, metadata !DIExpression()), !dbg !6264
  call void @llvm.dbg.value(metadata i8* %1, metadata !6261, metadata !DIExpression()), !dbg !6264
  call void @llvm.dbg.value(metadata i64 %2, metadata !6262, metadata !DIExpression()), !dbg !6264
  %4 = bitcast %"class.Cicada::CircularBuffer"* %0 to i64 (%"class.Cicada::CircularBuffer"*)***, !dbg !6265
  %5 = load i64 (%"class.Cicada::CircularBuffer"*)**, i64 (%"class.Cicada::CircularBuffer"*)*** %4, align 8, !dbg !6265, !tbaa !1498
  %6 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer"*)*, i64 (%"class.Cicada::CircularBuffer"*)** %5, i32 10, !dbg !6265
  %7 = load i64 (%"class.Cicada::CircularBuffer"*)*, i64 (%"class.Cicada::CircularBuffer"*)** %6, align 4, !dbg !6265
  %8 = call noundef i64 %7(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) #27, !dbg !6265
  %9 = icmp ult i64 %8, %2, !dbg !6267
  br i1 %9, label %10, label %15, !dbg !6268

10:                                               ; preds = %3
  %11 = load i64 (%"class.Cicada::CircularBuffer"*)**, i64 (%"class.Cicada::CircularBuffer"*)*** %4, align 8, !dbg !6269, !tbaa !1498
  %12 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer"*)*, i64 (%"class.Cicada::CircularBuffer"*)** %11, i32 10, !dbg !6269
  %13 = load i64 (%"class.Cicada::CircularBuffer"*)*, i64 (%"class.Cicada::CircularBuffer"*)** %12, align 4, !dbg !6269
  %14 = call noundef i64 %13(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) #27, !dbg !6269
  call void @llvm.dbg.value(metadata i64 %14, metadata !6262, metadata !DIExpression()), !dbg !6264
  br label %15, !dbg !6270

15:                                               ; preds = %10, %3
  %16 = phi i64 [ %14, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %16, metadata !6262, metadata !DIExpression()), !dbg !6264
  call void @llvm.dbg.value(metadata i64 0, metadata !6263, metadata !DIExpression()), !dbg !6264
  %17 = icmp eq i64 %16, 0, !dbg !6271
  br i1 %17, label %32, label %18, !dbg !6272

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 6
  %20 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 3
  br label %21, !dbg !6272

21:                                               ; preds = %18, %21
  %22 = phi i64 [ 0, %18 ], [ %28, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !6263, metadata !DIExpression()), !dbg !6264
  %23 = load i8*, i8** %19, align 8, !dbg !6273, !tbaa !6016
  %24 = load i64, i64* %20, align 8, !dbg !6275, !tbaa !6063
  %25 = trunc i64 %24 to i32, !dbg !6273
  %26 = getelementptr inbounds i8, i8* %23, i32 %25, !dbg !6273
  %27 = load i8, i8* %26, align 1, !dbg !6273, !tbaa !1367
  %28 = add nuw i64 %22, 1, !dbg !6276
  call void @llvm.dbg.value(metadata i64 %28, metadata !6263, metadata !DIExpression()), !dbg !6264
  %29 = trunc i64 %22 to i32, !dbg !6277
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !6277
  store i8 %27, i8* %30, align 1, !dbg !6278, !tbaa !1367
  call void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %20), !dbg !6279
  %31 = icmp ult i64 %28, %16, !dbg !6271
  br i1 %31, label %21, label %32, !dbg !6272, !llvm.loop !6280

32:                                               ; preds = %21, %15
  %33 = phi i64 [ 0, %15 ], [ %16, %21 ], !dbg !6264
  %34 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 4, !dbg !6282
  %35 = load i64, i64* %34, align 8, !dbg !6283, !tbaa !6023
  %36 = sub i64 %35, %33, !dbg !6283
  store i64 %36, i64* %34, align 8, !dbg !6283, !tbaa !6023
  ret i64 %33, !dbg !6284
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #8 comdat align 2 !dbg !6285 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !6288, metadata !DIExpression()), !dbg !6289
  %2 = getelementptr inbounds %"class.Cicada::ICommDevice", %"class.Cicada::ICommDevice"* %0, i32 0, i32 0, !dbg !6290
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6Cicada11ICommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %2, align 4, !dbg !6290, !tbaa !1498
  ret %"class.Cicada::ICommDevice"* %0, !dbg !6290
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada7ISerialC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #8 comdat align 2 !dbg !6291 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !6294, metadata !DIExpression()), !dbg !6295
  %2 = getelementptr inbounds %"class.Cicada::ICommDevice", %"class.Cicada::ICommDevice"* %0, i32 0, i32 0, !dbg !6296
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN6Cicada7ISerialE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %2, align 4, !dbg !6296, !tbaa !1498
  ret %"class.Cicada::ICommDevice"* %0, !dbg !6296
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada15IBufferedSerialD0Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %0) unnamed_addr #8 comdat align 2 !dbg !6297 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %0, metadata !6299, metadata !DIExpression()), !dbg !6300
  call void @llvm.trap() #29, !dbg !6301
  unreachable, !dbg !6301
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IBufferedSerial"* @_ZThn4_N6Cicada15IBufferedSerialD1Ev(%"class.Cicada::IBufferedSerial"* noundef %0) unnamed_addr #8 comdat align 2 !dbg !6302 {
  %2 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 -1, i32 1, !dbg !6303
  %3 = bitcast %"class.Cicada::ICommDevice"* %2 to %"class.Cicada::IBufferedSerial"*, !dbg !6303
  %4 = tail call noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialD2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %3) #27, !dbg !6303
  ret %"class.Cicada::IBufferedSerial"* undef, !dbg !6303
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada15IBufferedSerialD0Ev(%"class.Cicada::IBufferedSerial"* noundef %0) unnamed_addr #8 comdat align 2 !dbg !6304 {
  %2 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 -1, i32 1, !dbg !6305
  %3 = bitcast %"class.Cicada::ICommDevice"* %2 to %"class.Cicada::IBufferedSerial"*, !dbg !6305
  tail call void @_ZN6Cicada15IBufferedSerialD0Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %3) #27, !dbg !6305
  ret void, !dbg !6305
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada7ISerialD0Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %0) unnamed_addr #8 comdat align 2 !dbg !6306 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !6308, metadata !DIExpression()), !dbg !6309
  call void @llvm.trap() #29, !dbg !6310
  unreachable, !dbg !6310
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada11ICommDeviceD0Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %0) unnamed_addr #8 comdat align 2 !dbg !6311 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !6313, metadata !DIExpression()), !dbg !6314
  call void @llvm.trap() #29, !dbg !6315
  unreachable, !dbg !6315
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialC2EPcS1_y(%"class.Cicada::BufferedSerial"* noundef nonnull returned align 8 dereferenceable(104) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3) unnamed_addr #8 align 2 !dbg !6316 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !6318, metadata !DIExpression()), !dbg !6322
  call void @llvm.dbg.value(metadata i8* %1, metadata !6319, metadata !DIExpression()), !dbg !6322
  call void @llvm.dbg.value(metadata i8* %2, metadata !6320, metadata !DIExpression()), !dbg !6322
  call void @llvm.dbg.value(metadata i64 %3, metadata !6321, metadata !DIExpression()), !dbg !6322
  %5 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, !dbg !6323
  %6 = call noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialC2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %5) #27, !dbg !6324
  %7 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6323
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada14BufferedSerialE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %7, align 8, !dbg !6323, !tbaa !1498
  %8 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6323
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada14BufferedSerialE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %8, align 4, !dbg !6323, !tbaa !1498
  %9 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !6325
  %10 = call noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %9, i8* noundef %1, i64 noundef %3), !dbg !6325
  %11 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !6326
  %12 = call noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %11, i8* noundef %2, i64 noundef %3), !dbg !6326
  ret %"class.Cicada::BufferedSerial"* %0, !dbg !6327
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada14BufferedSerial23transferToAndFromBufferEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) local_unnamed_addr #6 align 2 !dbg !6328 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !6330, metadata !DIExpression()), !dbg !6332
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #27, !dbg !6333
  %3 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, !dbg !6334
  %4 = bitcast %"class.Cicada::ICommDevice"* %3 to i1 (%"class.Cicada::ICommDevice"*, i8*)***, !dbg !6334
  %5 = load i1 (%"class.Cicada::ICommDevice"*, i8*)**, i1 (%"class.Cicada::ICommDevice"*, i8*)*** %4, align 4, !dbg !6334, !tbaa !1498
  %6 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*, i8*)*, i1 (%"class.Cicada::ICommDevice"*, i8*)** %5, i32 7, !dbg !6334
  %7 = load i1 (%"class.Cicada::ICommDevice"*, i8*)*, i1 (%"class.Cicada::ICommDevice"*, i8*)** %6, align 4, !dbg !6334
  call void @llvm.dbg.value(metadata i8* %2, metadata !6331, metadata !DIExpression(DW_OP_deref)), !dbg !6332
  %8 = call noundef zeroext i1 %7(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %3, i8* noundef nonnull align 1 dereferenceable(1) %2) #27, !dbg !6334
  br i1 %8, label %9, label %15, !dbg !6336

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !6337
  %11 = bitcast %"class.Cicada::LineCircularBuffer"* %10 to %"class.Cicada::CircularBuffer"*, !dbg !6337
  %12 = call noundef zeroext i1 @_ZNK6Cicada14CircularBufferIcE6isFullEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %11), !dbg !6338
  br i1 %12, label %15, label %13, !dbg !6339

13:                                               ; preds = %9
  %14 = load i8, i8* %2, align 1, !dbg !6340, !tbaa !1367
  call void @llvm.dbg.value(metadata i8 %14, metadata !6331, metadata !DIExpression()), !dbg !6332
  call void @_ZN6Cicada18LineCircularBuffer4pushEc(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %10, i8 noundef zeroext %14), !dbg !6342
  br label %15, !dbg !6343

15:                                               ; preds = %13, %9, %1
  %16 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !6344
  %17 = bitcast %"class.Cicada::LineCircularBuffer"* %16 to %"class.Cicada::CircularBuffer"*, !dbg !6344
  %18 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %17), !dbg !6346
  %19 = icmp eq i64 %18, 0, !dbg !6344
  br i1 %19, label %29, label %20, !dbg !6347

20:                                               ; preds = %15
  %21 = call noundef zeroext i8 @_ZN6Cicada14CircularBufferIcE4readEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %17), !dbg !6348
  %22 = bitcast %"class.Cicada::ICommDevice"* %3 to i1 (%"class.Cicada::ICommDevice"*, i8)***, !dbg !6351
  %23 = load i1 (%"class.Cicada::ICommDevice"*, i8)**, i1 (%"class.Cicada::ICommDevice"*, i8)*** %22, align 4, !dbg !6351, !tbaa !1498
  %24 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*, i8)*, i1 (%"class.Cicada::ICommDevice"*, i8)** %23, i32 8, !dbg !6351
  %25 = load i1 (%"class.Cicada::ICommDevice"*, i8)*, i1 (%"class.Cicada::ICommDevice"*, i8)** %24, align 4, !dbg !6351
  %26 = call noundef zeroext i1 %25(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %3, i8 noundef zeroext %21) #27, !dbg !6351
  br i1 %26, label %27, label %29, !dbg !6352

27:                                               ; preds = %20
  %28 = call noundef zeroext i8 @_ZN6Cicada18LineCircularBuffer4pullEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %16), !dbg !6353
  br label %29, !dbg !6355

29:                                               ; preds = %20, %27, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #27, !dbg !6356
  ret void, !dbg !6356
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_Z18eDisableInterruptsv() local_unnamed_addr #6 !dbg !6357 {
  call void asm sideeffect "cpsid i", "~{memory}"() #27, !dbg !6358, !srcloc !6361
  ret void, !dbg !6362
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_Z17eEnableInterruptsv() local_unnamed_addr #6 !dbg !6363 {
  call void asm sideeffect "cpsie i", "~{memory}"() #27, !dbg !6364, !srcloc !6367
  ret void, !dbg !6368
}

; Function Attrs: noinline nounwind
define dso_local noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD2Ev(%"class.Cicada::Stm32Uart"* noundef nonnull returned align 8 dereferenceable(192) %0) unnamed_addr #8 align 2 !dbg !6369 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6371, metadata !DIExpression()), !dbg !6372
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6373
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %2, align 8, !dbg !6373, !tbaa !1498
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !6373
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %3, align 4, !dbg !6373, !tbaa !1498
  %4 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !6374
  %5 = load i8, i8* %4, align 8, !dbg !6374, !tbaa !6377
  %6 = and i8 %5, 1, !dbg !6384
  %7 = icmp eq i8 %6, 0, !dbg !6374
  br i1 %7, label %13, label %8, !dbg !6385

8:                                                ; preds = %1
  %9 = bitcast %"class.Cicada::Stm32Uart"* %0 to void (%"class.Cicada::Stm32Uart"*)***, !dbg !6386
  %10 = load void (%"class.Cicada::Stm32Uart"*)**, void (%"class.Cicada::Stm32Uart"*)*** %9, align 8, !dbg !6386, !tbaa !1498
  %11 = getelementptr inbounds void (%"class.Cicada::Stm32Uart"*)*, void (%"class.Cicada::Stm32Uart"*)** %10, i32 19, !dbg !6386
  %12 = load void (%"class.Cicada::Stm32Uart"*)*, void (%"class.Cicada::Stm32Uart"*)** %11, align 4, !dbg !6386
  call void %12(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) #27, !dbg !6386
  br label %13, !dbg !6386

13:                                               ; preds = %8, %1
  %14 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, !dbg !6387
  %15 = call noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialD2Ev(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %14) #27, !dbg !6387
  ret %"class.Cicada::Stm32Uart"* %0, !dbg !6388
}

; Function Attrs: noinline nounwind
define dso_local void @_ZN6Cicada9Stm32UartD0Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #8 align 2 !dbg !6389 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6391, metadata !DIExpression()), !dbg !6392
  %2 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD2Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) #27, !dbg !6393
  %3 = bitcast %"class.Cicada::Stm32Uart"* %0 to i8*, !dbg !6393
  call void @_ZdlPv(i8* noundef %3) #30, !dbg !6393
  ret void, !dbg !6394
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZNK6Cicada9Stm32Uart20writeBufferProcessedEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #6 align 2 !dbg !6395 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6397, metadata !DIExpression()), !dbg !6399
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 2, !dbg !6400
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer"*, !dbg !6400
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !6401
  %5 = icmp eq i64 %4, 0, !dbg !6402
  br i1 %5, label %6, label %13, !dbg !6403

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !6404
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !6404, !tbaa !6405
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 0, !dbg !6404
  %10 = load volatile i32, i32* %9, align 4, !dbg !6404, !tbaa !6406
  %11 = and i32 %10, 64, !dbg !6404
  %12 = icmp ne i32 %11, 0, !dbg !6404
  br label %13

13:                                               ; preds = %6, %1
  %14 = phi i1 [ false, %1 ], [ %12, %6 ], !dbg !6399
  ret i1 %14, !dbg !6408
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #6 align 2 !dbg !6409 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6411, metadata !DIExpression()), !dbg !6412
  %2 = bitcast %"class.Cicada::Stm32Uart"* %0 to i1 (%"class.Cicada::Stm32Uart"*, i8)***, !dbg !6413
  %3 = load i1 (%"class.Cicada::Stm32Uart"*, i8)**, i1 (%"class.Cicada::Stm32Uart"*, i8)*** %2, align 8, !dbg !6413, !tbaa !1498
  %4 = getelementptr inbounds i1 (%"class.Cicada::Stm32Uart"*, i8)*, i1 (%"class.Cicada::Stm32Uart"*, i8)** %3, i32 16, !dbg !6413
  %5 = load i1 (%"class.Cicada::Stm32Uart"*, i8)*, i1 (%"class.Cicada::Stm32Uart"*, i8)** %4, align 4, !dbg !6413
  %6 = call noundef zeroext i1 %5(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, i8 noundef zeroext 15) #27, !dbg !6413
  ret i1 %6, !dbg !6414
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEh(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, i8 noundef zeroext %1) unnamed_addr #6 align 2 !dbg !6415 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.DMA_Channel_TypeDef, align 4
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6417, metadata !DIExpression()), !dbg !6461
  call void @llvm.dbg.value(metadata i8 %1, metadata !6418, metadata !DIExpression()), !dbg !6461
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, !dbg !6462
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %12, i32 0, i32 0, !dbg !6463
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %13, align 4, !dbg !6463, !tbaa !6405
  %15 = ptrtoint %struct.USART_TypeDef* %14 to i32, !dbg !6464
  switch i32 %15, label %123 [
    i32 1073821696, label %16
    i32 1073759232, label %26
    i32 1073760256, label %34
  ], !dbg !6464

16:                                               ; preds = %2
  %17 = load volatile i32, i32* inttoptr (i32 1073807364 to i32*), align 4, !dbg !6465, !tbaa !6466
  call void @llvm.dbg.value(metadata i32 %17, metadata !6419, metadata !DIExpression()), !dbg !6468
  call void @llvm.dbg.value(metadata i32 %17, metadata !6419, metadata !DIExpression(DW_OP_constu, 117440512, DW_OP_or, DW_OP_stack_value)), !dbg !6468
  %18 = or i32 %17, 117440516, !dbg !6465
  call void @llvm.dbg.value(metadata i32 %18, metadata !6419, metadata !DIExpression()), !dbg !6468
  store volatile i32 %18, i32* inttoptr (i32 1073807364 to i32*), align 4, !dbg !6465, !tbaa !6466
  %19 = bitcast i32* %3 to i8*, !dbg !6469
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19), !dbg !6469
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6423, metadata !DIExpression()), !dbg !6469
  %20 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6469, !tbaa !6470
  %21 = or i32 %20, 16384, !dbg !6469
  store volatile i32 %21, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6469, !tbaa !6470
  %22 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6469, !tbaa !6470
  %23 = and i32 %22, 16384, !dbg !6469
  store volatile i32 %23, i32* %3, align 4, !dbg !6469, !tbaa !1471
  %24 = load volatile i32, i32* %3, align 4, !dbg !6469, !tbaa !1471
  %25 = bitcast i32* %3 to i8*, !dbg !6472
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25), !dbg !6472
  br label %42, !dbg !6473

26:                                               ; preds = %2
  %27 = bitcast i32* %4 to i8*, !dbg !6474
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27), !dbg !6474
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6425, metadata !DIExpression()), !dbg !6474
  %28 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !6474, !tbaa !6475
  %29 = or i32 %28, 131072, !dbg !6474
  store volatile i32 %29, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !6474, !tbaa !6475
  %30 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !6474, !tbaa !6475
  %31 = and i32 %30, 131072, !dbg !6474
  store volatile i32 %31, i32* %4, align 4, !dbg !6474, !tbaa !1471
  %32 = load volatile i32, i32* %4, align 4, !dbg !6474, !tbaa !1471
  %33 = bitcast i32* %4 to i8*, !dbg !6476
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33), !dbg !6476
  br label %42, !dbg !6477

34:                                               ; preds = %2
  %35 = bitcast i32* %5 to i8*, !dbg !6478
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35), !dbg !6478
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6429, metadata !DIExpression()), !dbg !6478
  %36 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !6478, !tbaa !6475
  %37 = or i32 %36, 262144, !dbg !6478
  store volatile i32 %37, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !6478, !tbaa !6475
  %38 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !6478, !tbaa !6475
  %39 = and i32 %38, 262144, !dbg !6478
  store volatile i32 %39, i32* %5, align 4, !dbg !6478, !tbaa !1471
  %40 = load volatile i32, i32* %5, align 4, !dbg !6478, !tbaa !1471
  %41 = bitcast i32* %5 to i8*, !dbg !6479
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41), !dbg !6479
  br label %42

42:                                               ; preds = %26, %34, %16
  %43 = phi i32 [ 38, %26 ], [ 39, %34 ], [ 37, %16 ]
  %44 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !6480
  store i32 %43, i32* %44, align 4, !dbg !6480, !tbaa !6481
  %45 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 3, !dbg !6482
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %45, align 4, !dbg !6482, !tbaa !6483
  %47 = ptrtoint %struct.USART_TypeDef* %46 to i32, !dbg !6484
  %48 = add i32 %47, -1073809408, !dbg !6484
  %49 = call i32 @llvm.fshl.i32(i32 %48, i32 %48, i32 22), !dbg !6484
  switch i32 %49, label %90 [
    i32 0, label %50
    i32 1, label %58
    i32 2, label %66
    i32 3, label %74
    i32 4, label %82
  ], !dbg !6484

50:                                               ; preds = %42
  %51 = bitcast i32* %6 to i8*, !dbg !6485
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51), !dbg !6485
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6433, metadata !DIExpression()), !dbg !6485
  %52 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6485, !tbaa !6470
  %53 = or i32 %52, 4, !dbg !6485
  store volatile i32 %53, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6485, !tbaa !6470
  %54 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6485, !tbaa !6470
  %55 = and i32 %54, 4, !dbg !6485
  store volatile i32 %55, i32* %6, align 4, !dbg !6485, !tbaa !1471
  %56 = load volatile i32, i32* %6, align 4, !dbg !6485, !tbaa !1471
  %57 = bitcast i32* %6 to i8*, !dbg !6486
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57), !dbg !6486
  br label %90, !dbg !6487

58:                                               ; preds = %42
  %59 = bitcast i32* %7 to i8*, !dbg !6488
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59), !dbg !6488
  call void @llvm.dbg.declare(metadata i32* %7, metadata !6437, metadata !DIExpression()), !dbg !6488
  %60 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6488, !tbaa !6470
  %61 = or i32 %60, 8, !dbg !6488
  store volatile i32 %61, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6488, !tbaa !6470
  %62 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6488, !tbaa !6470
  %63 = and i32 %62, 8, !dbg !6488
  store volatile i32 %63, i32* %7, align 4, !dbg !6488, !tbaa !1471
  %64 = load volatile i32, i32* %7, align 4, !dbg !6488, !tbaa !1471
  %65 = bitcast i32* %7 to i8*, !dbg !6489
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65), !dbg !6489
  br label %90, !dbg !6490

66:                                               ; preds = %42
  %67 = bitcast i32* %8 to i8*, !dbg !6491
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67), !dbg !6491
  call void @llvm.dbg.declare(metadata i32* %8, metadata !6441, metadata !DIExpression()), !dbg !6491
  %68 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6491, !tbaa !6470
  %69 = or i32 %68, 16, !dbg !6491
  store volatile i32 %69, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6491, !tbaa !6470
  %70 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6491, !tbaa !6470
  %71 = and i32 %70, 16, !dbg !6491
  store volatile i32 %71, i32* %8, align 4, !dbg !6491, !tbaa !1471
  %72 = load volatile i32, i32* %8, align 4, !dbg !6491, !tbaa !1471
  %73 = bitcast i32* %8 to i8*, !dbg !6492
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73), !dbg !6492
  br label %90, !dbg !6493

74:                                               ; preds = %42
  %75 = bitcast i32* %9 to i8*, !dbg !6494
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75), !dbg !6494
  call void @llvm.dbg.declare(metadata i32* %9, metadata !6445, metadata !DIExpression()), !dbg !6494
  %76 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6494, !tbaa !6470
  %77 = or i32 %76, 32, !dbg !6494
  store volatile i32 %77, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6494, !tbaa !6470
  %78 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6494, !tbaa !6470
  %79 = and i32 %78, 32, !dbg !6494
  store volatile i32 %79, i32* %9, align 4, !dbg !6494, !tbaa !1471
  %80 = load volatile i32, i32* %9, align 4, !dbg !6494, !tbaa !1471
  %81 = bitcast i32* %9 to i8*, !dbg !6495
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %81), !dbg !6495
  br label %90, !dbg !6496

82:                                               ; preds = %42
  %83 = bitcast i32* %10 to i8*, !dbg !6497
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83), !dbg !6497
  call void @llvm.dbg.declare(metadata i32* %10, metadata !6449, metadata !DIExpression()), !dbg !6497
  %84 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6497, !tbaa !6470
  %85 = or i32 %84, 64, !dbg !6497
  store volatile i32 %85, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6497, !tbaa !6470
  %86 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6497, !tbaa !6470
  %87 = and i32 %86, 64, !dbg !6497
  store volatile i32 %87, i32* %10, align 4, !dbg !6497, !tbaa !1471
  %88 = load volatile i32, i32* %10, align 4, !dbg !6497, !tbaa !1471
  %89 = bitcast i32* %10 to i8*, !dbg !6498
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89), !dbg !6498
  br label %90, !dbg !6499

90:                                               ; preds = %42, %58, %74, %82, %66, %50
  %91 = bitcast %struct.DMA_Channel_TypeDef* %11 to i8*, !dbg !6500
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #27, !dbg !6500
  call void @llvm.dbg.declare(metadata %struct.DMA_Channel_TypeDef* %11, metadata !6453, metadata !DIExpression()), !dbg !6501
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(16) %91, i8 0, i32 16, i1 false), !dbg !6501
  %92 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 4, !dbg !6502
  %93 = load i16, i16* %92, align 8, !dbg !6502, !tbaa !6503
  %94 = zext i16 %93 to i32, !dbg !6502
  %95 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %11, i32 0, i32 0, !dbg !6504
  store i32 %94, i32* %95, align 4, !dbg !6505, !tbaa !6506
  %96 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %11, i32 0, i32 1, !dbg !6508
  store i32 2, i32* %96, align 4, !dbg !6509, !tbaa !6510
  %97 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %11, i32 0, i32 2, !dbg !6511
  store i32 0, i32* %97, align 4, !dbg !6512, !tbaa !6513
  %98 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %11, i32 0, i32 3, !dbg !6514
  store i32 3, i32* %98, align 4, !dbg !6515, !tbaa !6516
  call void @HAL_GPIO_Init(%struct.USART_TypeDef* noundef %46, %struct.DMA_Channel_TypeDef* noundef nonnull %11) #27, !dbg !6517
  %99 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 5, !dbg !6518
  %100 = load i16, i16* %99, align 2, !dbg !6518, !tbaa !6519
  %101 = zext i16 %100 to i32, !dbg !6518
  store i32 %101, i32* %95, align 4, !dbg !6520, !tbaa !6506
  store i32 0, i32* %96, align 4, !dbg !6521, !tbaa !6510
  %102 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %45, align 4, !dbg !6522, !tbaa !6483
  call void @HAL_GPIO_Init(%struct.USART_TypeDef* noundef %102, %struct.DMA_Channel_TypeDef* noundef nonnull %11) #27, !dbg !6523
  %103 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 2, !dbg !6524
  store i32 0, i32* %103, align 8, !dbg !6525, !tbaa !6526
  %104 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 3, !dbg !6527
  store i32 0, i32* %104, align 4, !dbg !6528, !tbaa !6529
  %105 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 4, !dbg !6530
  store i32 12, i32* %105, align 8, !dbg !6531, !tbaa !6532
  %106 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 5, !dbg !6533
  store i32 0, i32* %106, align 4, !dbg !6534, !tbaa !6535
  %107 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 6, !dbg !6536
  store i32 0, i32* %107, align 8, !dbg !6537, !tbaa !6538
  %108 = call i32 @HAL_UART_Init(%struct.__UART_HandleTypeDef* noundef nonnull %12) #27, !dbg !6539
  %109 = icmp eq i32 %108, 0, !dbg !6541
  br i1 %109, label %110, label %122, !dbg !6542

110:                                              ; preds = %90
  %111 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !6543
  %112 = load i32, i32* %111, align 4, !dbg !6543, !tbaa !6481
  %113 = zext i8 %1 to i32, !dbg !6544
  call fastcc void @_ZL18__NVIC_SetPriority9IRQn_Typej(i32 noundef %112, i32 noundef %113), !dbg !6545
  %114 = load i32, i32* %111, align 4, !dbg !6546, !tbaa !6481
  call fastcc void @_ZL16__NVIC_EnableIRQ9IRQn_Type(i32 noundef %114), !dbg !6547
  %115 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %13, align 4, !dbg !6548, !tbaa !6405
  %116 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %115, i32 0, i32 3, !dbg !6548
  %117 = load volatile i32, i32* %116, align 4, !dbg !6548, !tbaa !6549
  %118 = or i32 %117, 32, !dbg !6548
  store volatile i32 %118, i32* %116, align 4, !dbg !6548, !tbaa !6549
  %119 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !6550
  %120 = load i8, i8* %119, align 8, !dbg !6551, !tbaa !6377
  %121 = or i8 %120, 1, !dbg !6551
  store i8 %121, i8* %119, align 8, !dbg !6551, !tbaa !6377
  br label %122, !dbg !6552

122:                                              ; preds = %90, %110
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #27, !dbg !6553
  br label %123

123:                                              ; preds = %2, %122
  %124 = phi i1 [ %109, %122 ], [ false, %2 ], !dbg !6461
  ret i1 %124, !dbg !6553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart6isOpenEv(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull readonly align 8 dereferenceable(192) %0) unnamed_addr #15 align 2 !dbg !6554 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6556, metadata !DIExpression()), !dbg !6557
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !6558
  %3 = load i8, i8* %2, align 8, !dbg !6558, !tbaa !6377
  %4 = and i8 %3, 1, !dbg !6559
  %5 = icmp ne i8 %4, 0, !dbg !6558
  ret i1 %5, !dbg !6560
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart15setSerialConfigEjh(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull writeonly align 8 dereferenceable(192) %0, i32 noundef %1, i8 noundef zeroext %2) unnamed_addr #5 align 2 !dbg !6561 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6563, metadata !DIExpression()), !dbg !6566
  call void @llvm.dbg.value(metadata i32 %1, metadata !6564, metadata !DIExpression()), !dbg !6566
  call void @llvm.dbg.value(metadata i8 %2, metadata !6565, metadata !DIExpression()), !dbg !6566
  %4 = add i32 %1, -4500001, !dbg !6567
  %5 = icmp ult i32 %4, -4499951, !dbg !6567
  br i1 %5, label %12, label %6, !dbg !6567

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 0, !dbg !6569
  store i32 %1, i32* %7, align 8, !dbg !6570, !tbaa !6571
  switch i8 %2, label %12 [
    i8 8, label %9
    i8 9, label %8
  ], !dbg !6572

8:                                                ; preds = %6
  br label %9, !dbg !6573

9:                                                ; preds = %6, %8
  %10 = phi i32 [ 4096, %8 ], [ 0, %6 ]
  %11 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 1, !dbg !6575
  store i32 %10, i32* %11, align 4, !dbg !6575, !tbaa !6576
  br label %12, !dbg !6577

12:                                               ; preds = %9, %6, %3
  %13 = phi i1 [ false, %3 ], [ false, %6 ], [ true, %9 ], !dbg !6566
  ret i1 %13, !dbg !6577
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada9Stm32Uart5closeEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #6 align 2 !dbg !6578 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6580, metadata !DIExpression()), !dbg !6581
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !6582
  %3 = load i32, i32* %2, align 4, !dbg !6582, !tbaa !6481
  call fastcc void @_ZL17__NVIC_DisableIRQ9IRQn_Type(i32 noundef %3), !dbg !6583
  %4 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, !dbg !6584
  %5 = call i32 @HAL_UART_DeInit(%struct.__UART_HandleTypeDef* noundef nonnull %4) #27, !dbg !6585
  %6 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 3, !dbg !6586
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !6586, !tbaa !6483
  %8 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 4, !dbg !6587
  %9 = load i16, i16* %8, align 8, !dbg !6587, !tbaa !6503
  %10 = zext i16 %9 to i32, !dbg !6587
  call void @HAL_GPIO_DeInit(%struct.USART_TypeDef* noundef %7, i32 noundef %10) #27, !dbg !6588
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !6589, !tbaa !6483
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 5, !dbg !6590
  %13 = load i16, i16* %12, align 2, !dbg !6590, !tbaa !6519
  %14 = zext i16 %13 to i32, !dbg !6590
  call void @HAL_GPIO_DeInit(%struct.USART_TypeDef* noundef %11, i32 noundef %14) #27, !dbg !6591
  %15 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !6592
  %16 = load i8, i8* %15, align 8, !dbg !6593, !tbaa !6377
  %17 = and i8 %16, -2, !dbg !6593
  store i8 %17, i8* %15, align 8, !dbg !6593, !tbaa !6377
  ret void, !dbg !6594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define dso_local noalias noundef i8* @_ZNK6Cicada9Stm32Uart8portNameEv(%"class.Cicada::Stm32Uart"* nocapture nonnull readnone align 8 %0) unnamed_addr #10 align 2 !dbg !6595 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* undef, metadata !6597, metadata !DIExpression()), !dbg !6598
  ret i8* null, !dbg !6599
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart7rawReadERh(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull readonly align 8 dereferenceable(192) %0, i8* nocapture noundef nonnull writeonly align 1 dereferenceable(1) %1) unnamed_addr #14 align 2 !dbg !6600 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6602, metadata !DIExpression()), !dbg !6604
  call void @llvm.dbg.value(metadata i8* %1, metadata !6603, metadata !DIExpression()), !dbg !6604
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !6605
  %4 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %3, align 4, !dbg !6605, !tbaa !6405
  %5 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %4, i32 0, i32 0, !dbg !6605
  %6 = load volatile i32, i32* %5, align 4, !dbg !6605, !tbaa !6406
  %7 = and i32 %6, 32, !dbg !6605
  %8 = icmp eq i32 %7, 0, !dbg !6605
  br i1 %8, label %9, label %13, !dbg !6607

9:                                                ; preds = %2
  %10 = load volatile i32, i32* %5, align 4, !dbg !6608, !tbaa !6406
  %11 = and i32 %10, 8, !dbg !6608
  %12 = icmp eq i32 %11, 0, !dbg !6608
  br i1 %12, label %17, label %13, !dbg !6609

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %4, i32 0, i32 1, !dbg !6610
  %15 = load volatile i32, i32* %14, align 4, !dbg !6610, !tbaa !6612
  %16 = trunc i32 %15 to i8, !dbg !6610
  store i8 %16, i8* %1, align 1, !dbg !6613, !tbaa !1367
  br label %17, !dbg !6614

17:                                               ; preds = %9, %13
  %18 = phi i1 [ true, %13 ], [ false, %9 ], !dbg !6604
  ret i1 %18, !dbg !6615
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart8rawWriteEh(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull readonly align 8 dereferenceable(192) %0, i8 noundef zeroext %1) unnamed_addr #24 align 2 !dbg !6616 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6618, metadata !DIExpression()), !dbg !6620
  call void @llvm.dbg.value(metadata i8 %1, metadata !6619, metadata !DIExpression()), !dbg !6620
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !6621
  %4 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %3, align 4, !dbg !6621, !tbaa !6405
  %5 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %4, i32 0, i32 0, !dbg !6621
  %6 = load volatile i32, i32* %5, align 4, !dbg !6621, !tbaa !6406
  %7 = and i32 %6, 128, !dbg !6621
  %8 = icmp eq i32 %7, 0, !dbg !6621
  br i1 %8, label %12, label %9, !dbg !6623

9:                                                ; preds = %2
  %10 = zext i8 %1 to i32, !dbg !6624
  %11 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %4, i32 0, i32 1, !dbg !6624
  store volatile i32 %10, i32* %11, align 4, !dbg !6624, !tbaa !6612
  br label %12, !dbg !6626

12:                                               ; preds = %2, %9
  %13 = xor i1 %8, true, !dbg !6627
  ret i1 %13, !dbg !6627
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind
define dso_local void @_ZN6Cicada9Stm32Uart13startTransmitEv(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull readonly align 8 dereferenceable(192) %0) unnamed_addr #24 align 2 !dbg !6628 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6630, metadata !DIExpression()), !dbg !6631
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !6632
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6632, !tbaa !6405
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !6632
  %5 = load volatile i32, i32* %4, align 4, !dbg !6632, !tbaa !6549
  %6 = or i32 %5, 128, !dbg !6632
  store volatile i32 %6, i32* %4, align 4, !dbg !6632, !tbaa !6549
  ret void, !dbg !6633
}

; Function Attrs: noinline nounwind
define dso_local noalias noundef %"class.Cicada::Stm32Uart"* @_ZThn4_N6Cicada9Stm32UartD1Ev(%"class.Cicada::Stm32Uart"* noundef %0) unnamed_addr #8 align 2 !dbg !6634 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6635
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !6635
  %4 = tail call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD2Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3) #27, !dbg !6635
  ret %"class.Cicada::Stm32Uart"* undef, !dbg !6635
}

; Function Attrs: noinline nounwind
define dso_local void @_ZThn4_N6Cicada9Stm32UartD0Ev(%"class.Cicada::Stm32Uart"* noundef %0) unnamed_addr #8 align 2 !dbg !6636 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6637
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !6637
  tail call void @_ZN6Cicada9Stm32UartD0Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3) #27, !dbg !6637
  ret void, !dbg !6637
}

; Function Attrs: noinline nounwind
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef %0) unnamed_addr #8 align 2 !dbg !6638 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6639
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !6639
  %4 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3), !dbg !6639
  ret i1 %4, !dbg !6639
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart6isOpenEv(%"class.Cicada::Stm32Uart"* nocapture noundef readonly %0) unnamed_addr #15 align 2 !dbg !6640 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6641
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !6641
  %4 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart6isOpenEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3), !dbg !6641
  ret i1 %4, !dbg !6641
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart15setSerialConfigEjh(%"class.Cicada::Stm32Uart"* nocapture noundef writeonly %0, i32 noundef %1, i8 noundef zeroext %2) unnamed_addr #5 align 2 !dbg !6642 {
  %4 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6643
  %5 = bitcast i32* %4 to %"class.Cicada::Stm32Uart"*, !dbg !6643
  %6 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart15setSerialConfigEjh(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %5, i32 noundef %1, i8 noundef zeroext %2), !dbg !6643
  ret i1 %6, !dbg !6643
}

; Function Attrs: noinline nounwind
define dso_local void @_ZThn4_N6Cicada9Stm32Uart5closeEv(%"class.Cicada::Stm32Uart"* noundef %0) unnamed_addr #8 align 2 !dbg !6644 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6645
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !6645
  tail call void @_ZN6Cicada9Stm32Uart5closeEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3), !dbg !6645
  ret void, !dbg !6645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define dso_local noalias noundef i8* @_ZThn4_NK6Cicada9Stm32Uart8portNameEv(%"class.Cicada::Stm32Uart"* nocapture noundef readnone %0) unnamed_addr #10 align 2 !dbg !6646 {
  ret i8* null, !dbg !6647
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart7rawReadERh(%"class.Cicada::Stm32Uart"* nocapture noundef readonly %0, i8* nocapture noundef nonnull writeonly align 1 dereferenceable(1) %1) unnamed_addr #14 align 2 !dbg !6648 {
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6649
  %4 = bitcast i32* %3 to %"class.Cicada::Stm32Uart"*, !dbg !6649
  %5 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart7rawReadERh(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %4, i8* noundef nonnull align 1 dereferenceable(1) %1), !dbg !6649
  ret i1 %5, !dbg !6649
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart8rawWriteEh(%"class.Cicada::Stm32Uart"* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #13 align 2 !dbg !6650 {
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6651
  %4 = bitcast i32* %3 to %"class.Cicada::Stm32Uart"*, !dbg !6651
  %5 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart8rawWriteEh(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %4, i8 noundef zeroext %1), !dbg !6651
  ret i1 %5, !dbg !6651
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @_ZThn4_N6Cicada9Stm32Uart13startTransmitEv(%"class.Cicada::Stm32Uart"* nocapture noundef readonly %0) unnamed_addr #13 align 2 !dbg !6652 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !6653
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !6653
  tail call void @_ZN6Cicada9Stm32Uart13startTransmitEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3), !dbg !6653
  ret void, !dbg !6653
}

; Function Attrs: mustprogress noinline nounwind
define internal fastcc void @_ZL17__NVIC_DisableIRQ9IRQn_Type(i32 noundef %0) unnamed_addr #6 !dbg !6654 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6658, metadata !DIExpression()), !dbg !6659
  %2 = icmp sgt i32 %0, -1, !dbg !6660
  br i1 %2, label %3, label %8, !dbg !6662

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6663
  %5 = shl i32 1, %4, !dbg !6665
  %6 = lshr i32 %0, 5, !dbg !6666
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6667
  store volatile i32 %5, i32* %7, align 4, !dbg !6668, !tbaa !1471
  call void asm sideeffect "dsb 0xF", "~{memory}"() #27, !dbg !6669, !srcloc !6672
  call void asm sideeffect "isb 0xF", "~{memory}"() #27, !dbg !6673, !srcloc !6676
  br label %8, !dbg !6677

8:                                                ; preds = %3, %1
  ret void, !dbg !6678
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind
define internal fastcc void @_ZL18__NVIC_SetPriority9IRQn_Typej(i32 noundef %0, i32 noundef %1) unnamed_addr #24 !dbg !6679 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6683, metadata !DIExpression()), !dbg !6685
  call void @llvm.dbg.value(metadata i32 %1, metadata !6684, metadata !DIExpression()), !dbg !6685
  %3 = trunc i32 %1 to i8, !dbg !6686
  %4 = shl i8 %3, 4, !dbg !6686
  %5 = and i32 %0, 15, !dbg !6688
  %6 = add nsw i32 %5, -4, !dbg !6688
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6688
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6688
  %9 = icmp slt i32 %0, 0, !dbg !6688
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6688
  store volatile i8 %4, i8* %10, align 1, !dbg !6686, !tbaa !1367
  ret void, !dbg !6689
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind
define internal fastcc void @_ZL16__NVIC_EnableIRQ9IRQn_Type(i32 noundef %0) unnamed_addr #24 !dbg !6690 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6692, metadata !DIExpression()), !dbg !6693
  %2 = icmp sgt i32 %0, -1, !dbg !6694
  br i1 %2, label %3, label %8, !dbg !6696

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6697
  %5 = shl i32 1, %4, !dbg !6699
  %6 = lshr i32 %0, 5, !dbg !6700
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6701
  store volatile i32 %5, i32* %7, align 4, !dbg !6702, !tbaa !1471
  br label %8, !dbg !6703

8:                                                ; preds = %3, %1
  ret void, !dbg !6704
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartC2EPcS1_yyP13USART_TypeDefP12GPIO_TypeDeftt(%"class.Cicada::Stm32Uart"* noundef nonnull returned align 8 dereferenceable(192) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4, %struct.USART_TypeDef* noundef %5, %struct.USART_TypeDef* noundef %6, i16 noundef zeroext %7, i16 noundef zeroext %8) unnamed_addr #8 align 2 !dbg !6705 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6707, metadata !DIExpression()), !dbg !6716
  call void @llvm.dbg.value(metadata i8* %1, metadata !6708, metadata !DIExpression()), !dbg !6716
  call void @llvm.dbg.value(metadata i8* %2, metadata !6709, metadata !DIExpression()), !dbg !6716
  call void @llvm.dbg.value(metadata i64 %3, metadata !6710, metadata !DIExpression()), !dbg !6716
  call void @llvm.dbg.value(metadata i64 %4, metadata !6711, metadata !DIExpression()), !dbg !6716
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %5, metadata !6712, metadata !DIExpression()), !dbg !6716
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %6, metadata !6713, metadata !DIExpression()), !dbg !6716
  call void @llvm.dbg.value(metadata i16 %7, metadata !6714, metadata !DIExpression()), !dbg !6716
  call void @llvm.dbg.value(metadata i16 %8, metadata !6715, metadata !DIExpression()), !dbg !6716
  %10 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, !dbg !6717
  %11 = call noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialC2EPcS1_yy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %10, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4) #27, !dbg !6718
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6717
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %12, align 8, !dbg !6717, !tbaa !1498
  %13 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !6717
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %13, align 4, !dbg !6717, !tbaa !1498
  %14 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !6719
  store i8 0, i8* %14, align 8, !dbg !6719, !tbaa !6377
  %15 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, !dbg !6720
  %16 = bitcast %struct.__UART_HandleTypeDef* %15 to i8*, !dbg !6720
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(72) %16, i8 0, i32 72, i1 false), !dbg !6720
  %17 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 3, !dbg !6721
  store %struct.USART_TypeDef* %6, %struct.USART_TypeDef** %17, align 4, !dbg !6721, !tbaa !6483
  %18 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 4, !dbg !6722
  store i16 %7, i16* %18, align 8, !dbg !6722, !tbaa !6503
  %19 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 5, !dbg !6723
  store i16 %8, i16* %19, align 2, !dbg !6723, !tbaa !6519
  %20 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !6724
  store i32 0, i32* %20, align 4, !dbg !6724, !tbaa !6481
  call void @_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, %struct.USART_TypeDef* noundef %5), !dbg !6725
  ret %"class.Cicada::Stm32Uart"* %0, !dbg !6727
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind
define dso_local void @_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, %struct.USART_TypeDef* noundef %1) local_unnamed_addr #25 align 2 !dbg !6728 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6730, metadata !DIExpression()), !dbg !6734
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %1, metadata !6731, metadata !DIExpression()), !dbg !6734
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !6735
  store %struct.USART_TypeDef* %1, %struct.USART_TypeDef** %3, align 4, !dbg !6736, !tbaa !6405
  %4 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 0, !dbg !6737
  store i32 115200, i32* %4, align 8, !dbg !6738, !tbaa !6571
  %5 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 1, !dbg !6739
  store i32 0, i32* %5, align 4, !dbg !6740, !tbaa !6576
  call void @llvm.dbg.value(metadata i32 0, metadata !6732, metadata !DIExpression()), !dbg !6741
  br label %9, !dbg !6742

6:                                                ; preds = %9
  %7 = add nuw nsw i32 %10, 1, !dbg !6743
  call void @llvm.dbg.value(metadata i32 %7, metadata !6732, metadata !DIExpression()), !dbg !6741
  call void @llvm.dbg.value(metadata i32 %10, metadata !6732, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6741
  %8 = icmp eq i32 %7, 4, !dbg !6745
  br i1 %8, label %15, label %9, !dbg !6742, !llvm.loop !6746

9:                                                ; preds = %2, %6
  %10 = phi i32 [ 0, %2 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !6732, metadata !DIExpression()), !dbg !6741
  %11 = getelementptr inbounds [4 x %"class.Cicada::Stm32Uart"*], [4 x %"class.Cicada::Stm32Uart"*]* @_ZN6Cicada9Stm32Uart8instanceE, i32 0, i32 %10, !dbg !6748
  %12 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** %11, align 4, !dbg !6748, !tbaa !1467
  %13 = icmp eq %"class.Cicada::Stm32Uart"* %12, null, !dbg !6751
  call void @llvm.dbg.value(metadata i32 %10, metadata !6732, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6741
  br i1 %13, label %14, label %6, !dbg !6752

14:                                               ; preds = %9
  store %"class.Cicada::Stm32Uart"* %0, %"class.Cicada::Stm32Uart"** %11, align 4, !dbg !6753, !tbaa !1467
  br label %15, !dbg !6755

15:                                               ; preds = %6, %14
  ret void, !dbg !6756
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartC2EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt(%"class.Cicada::Stm32Uart"* noundef nonnull returned align 8 dereferenceable(192) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, %struct.USART_TypeDef* noundef %4, %struct.USART_TypeDef* noundef %5, i16 noundef zeroext %6, i16 noundef zeroext %7) unnamed_addr #8 align 2 !dbg !6757 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6759, metadata !DIExpression()), !dbg !6767
  call void @llvm.dbg.value(metadata i8* %1, metadata !6760, metadata !DIExpression()), !dbg !6767
  call void @llvm.dbg.value(metadata i8* %2, metadata !6761, metadata !DIExpression()), !dbg !6767
  call void @llvm.dbg.value(metadata i64 %3, metadata !6762, metadata !DIExpression()), !dbg !6767
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %4, metadata !6763, metadata !DIExpression()), !dbg !6767
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %5, metadata !6764, metadata !DIExpression()), !dbg !6767
  call void @llvm.dbg.value(metadata i16 %6, metadata !6765, metadata !DIExpression()), !dbg !6767
  call void @llvm.dbg.value(metadata i16 %7, metadata !6766, metadata !DIExpression()), !dbg !6767
  %9 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, !dbg !6768
  %10 = call noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialC2EPcS1_y(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %9, i8* noundef %1, i8* noundef %2, i64 noundef %3) #27, !dbg !6769
  %11 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6768
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %11, align 8, !dbg !6768, !tbaa !1498
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !6768
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %12, align 4, !dbg !6768, !tbaa !1498
  %13 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !6770
  store i8 0, i8* %13, align 8, !dbg !6770, !tbaa !6377
  %14 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, !dbg !6771
  %15 = bitcast %struct.__UART_HandleTypeDef* %14 to i8*, !dbg !6771
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(72) %15, i8 0, i32 72, i1 false), !dbg !6771
  %16 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 3, !dbg !6772
  store %struct.USART_TypeDef* %5, %struct.USART_TypeDef** %16, align 4, !dbg !6772, !tbaa !6483
  %17 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 4, !dbg !6773
  store i16 %6, i16* %17, align 8, !dbg !6773, !tbaa !6503
  %18 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 5, !dbg !6774
  store i16 %7, i16* %18, align 2, !dbg !6774, !tbaa !6519
  %19 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !6775
  store i32 0, i32* %19, align 4, !dbg !6775, !tbaa !6481
  call void @_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, %struct.USART_TypeDef* noundef %4), !dbg !6776
  ret %"class.Cicada::Stm32Uart"* %0, !dbg !6778
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef(%struct.USART_TypeDef* noundef readnone %0) local_unnamed_addr #15 align 2 !dbg !6779 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !6781, metadata !DIExpression()), !dbg !6787
  call void @llvm.dbg.value(metadata i32 0, metadata !6782, metadata !DIExpression()), !dbg !6788
  br label %5, !dbg !6789

2:                                                ; preds = %16
  %3 = add nuw nsw i32 %7, 1, !dbg !6790
  call void @llvm.dbg.value(metadata i32 %3, metadata !6782, metadata !DIExpression()), !dbg !6788
  call void @llvm.dbg.value(metadata i32 %7, metadata !6782, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6788
  %4 = icmp eq i32 %3, 4, !dbg !6791
  br i1 %4, label %19, label %5, !dbg !6789, !llvm.loop !6792

5:                                                ; preds = %1, %2
  %6 = phi %"class.Cicada::Stm32Uart"* [ undef, %1 ], [ %18, %2 ]
  %7 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !6782, metadata !DIExpression()), !dbg !6788
  %8 = getelementptr inbounds [4 x %"class.Cicada::Stm32Uart"*], [4 x %"class.Cicada::Stm32Uart"*]* @_ZN6Cicada9Stm32Uart8instanceE, i32 0, i32 %7, !dbg !6794
  %9 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** %8, align 4, !dbg !6794, !tbaa !1467
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %9, metadata !6784, metadata !DIExpression()), !dbg !6795
  %10 = icmp eq %"class.Cicada::Stm32Uart"* %9, null, !dbg !6796
  br i1 %10, label %15, label %11, !dbg !6798

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %9, i32 0, i32 2, i32 0, !dbg !6799
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %12, align 4, !dbg !6799, !tbaa !6405
  %14 = icmp eq %struct.USART_TypeDef* %13, %0, !dbg !6800
  br i1 %14, label %16, label %15, !dbg !6801

15:                                               ; preds = %11, %5
  br label %16, !dbg !6802

16:                                               ; preds = %11, %15
  %17 = phi i1 [ true, %15 ], [ false, %11 ]
  %18 = phi %"class.Cicada::Stm32Uart"* [ %6, %15 ], [ %9, %11 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !6782, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6788
  br i1 %17, label %2, label %19

19:                                               ; preds = %2, %16
  %20 = phi %"class.Cicada::Stm32Uart"* [ null, %2 ], [ %18, %16 ]
  ret %"class.Cicada::Stm32Uart"* %20, !dbg !6803
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada9Stm32Uart15handleInterruptEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) local_unnamed_addr #6 align 2 !dbg !6804 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !6806, metadata !DIExpression()), !dbg !6807
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, !dbg !6808
  call void @_ZN6Cicada14BufferedSerial23transferToAndFromBufferEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %2) #27, !dbg !6808
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 2, !dbg !6809
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %3 to %"class.Cicada::CircularBuffer"*, !dbg !6809
  %5 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !6811
  %6 = icmp eq i64 %5, 0, !dbg !6809
  br i1 %6, label %7, label %13, !dbg !6812

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !6813
  %9 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %8, align 4, !dbg !6813, !tbaa !6405
  %10 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %9, i32 0, i32 3, !dbg !6813
  %11 = load volatile i32, i32* %10, align 4, !dbg !6813, !tbaa !6549
  %12 = and i32 %11, -129, !dbg !6813
  store volatile i32 %12, i32* %10, align 4, !dbg !6813, !tbaa !6549
  br label %13, !dbg !6813

13:                                               ; preds = %7, %1
  ret void, !dbg !6814
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Init(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #8 !dbg !6815 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6819, metadata !DIExpression()), !dbg !6820
  %2 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !6821
  br i1 %2, label %27, label %3, !dbg !6823

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6824
  %5 = load volatile i32, i32* %4, align 4, !dbg !6824, !tbaa !6826
  %6 = icmp eq i32 %5, 0, !dbg !6829
  br i1 %6, label %7, label %9, !dbg !6830

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !6831
  store i32 0, i32* %8, align 4, !dbg !6833, !tbaa !6834
  call void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !6835
  br label %9, !dbg !6836

9:                                                ; preds = %7, %3
  store volatile i32 36, i32* %4, align 4, !dbg !6837, !tbaa !6826
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6838
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %10, align 4, !dbg !6838, !tbaa !6839
  %12 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %11, i32 0, i32 3, !dbg !6838
  %13 = load volatile i32, i32* %12, align 4, !dbg !6838, !tbaa !5544
  %14 = and i32 %13, -8193, !dbg !6838
  store volatile i32 %14, i32* %12, align 4, !dbg !6838, !tbaa !5544
  call fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !6840
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %10, align 4, !dbg !6841, !tbaa !6839
  %16 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 4, !dbg !6841
  %17 = load volatile i32, i32* %16, align 4, !dbg !6841, !tbaa !5427
  %18 = and i32 %17, -18433, !dbg !6841
  store volatile i32 %18, i32* %16, align 4, !dbg !6841, !tbaa !5427
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 5, !dbg !6842
  %20 = load volatile i32, i32* %19, align 4, !dbg !6842, !tbaa !5432
  %21 = and i32 %20, -43, !dbg !6842
  store volatile i32 %21, i32* %19, align 4, !dbg !6842, !tbaa !5432
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 3, !dbg !6843
  %23 = load volatile i32, i32* %22, align 4, !dbg !6843, !tbaa !5544
  %24 = or i32 %23, 8192, !dbg !6843
  store volatile i32 %24, i32* %22, align 4, !dbg !6843, !tbaa !5544
  %25 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6844
  store volatile i32 0, i32* %25, align 4, !dbg !6845, !tbaa !6846
  store volatile i32 32, i32* %4, align 4, !dbg !6847, !tbaa !6826
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !6848
  store volatile i32 32, i32* %26, align 4, !dbg !6849, !tbaa !6850
  br label %27, !dbg !6851

27:                                               ; preds = %1, %9
  %28 = phi i32 [ 0, %9 ], [ 1, %1 ], !dbg !6820
  ret i32 %28, !dbg !6852
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #8 !dbg !6853 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6857, metadata !DIExpression()), !dbg !6858
  ret void, !dbg !6859
}

; Function Attrs: noinline nounwind
define internal fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* nocapture noundef readonly %0) unnamed_addr #8 !dbg !6860 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6862, metadata !DIExpression()), !dbg !6865
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6866
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6866, !tbaa !6839
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 4, !dbg !6866
  %5 = load volatile i32, i32* %4, align 4, !dbg !6866, !tbaa !5427
  %6 = and i32 %5, -12289, !dbg !6866
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 2, !dbg !6866
  %8 = load i32, i32* %7, align 4, !dbg !6866, !tbaa !6867
  %9 = or i32 %6, %8, !dbg !6866
  store volatile i32 %9, i32* %4, align 4, !dbg !6866, !tbaa !5427
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1, !dbg !6868
  %11 = load i32, i32* %10, align 4, !dbg !6868, !tbaa !6869
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3, !dbg !6870
  %13 = load i32, i32* %12, align 4, !dbg !6870, !tbaa !6871
  %14 = or i32 %13, %11, !dbg !6872
  %15 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 4, !dbg !6873
  %16 = load i32, i32* %15, align 4, !dbg !6873, !tbaa !6874
  %17 = or i32 %14, %16, !dbg !6875
  call void @llvm.dbg.value(metadata i32 %17, metadata !6863, metadata !DIExpression()), !dbg !6865
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !6876
  %19 = load volatile i32, i32* %18, align 4, !dbg !6876, !tbaa !5544
  %20 = and i32 %19, -5645, !dbg !6876
  %21 = or i32 %17, %20, !dbg !6876
  store volatile i32 %21, i32* %18, align 4, !dbg !6876, !tbaa !5544
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !6877
  %23 = load volatile i32, i32* %22, align 4, !dbg !6877, !tbaa !5432
  %24 = and i32 %23, -769, !dbg !6877
  %25 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 5, !dbg !6877
  %26 = load i32, i32* %25, align 4, !dbg !6877, !tbaa !6878
  %27 = or i32 %24, %26, !dbg !6877
  store volatile i32 %27, i32* %22, align 4, !dbg !6877, !tbaa !5432
  %28 = icmp eq %struct.USART_TypeDef* %3, inttoptr (i32 1073821696 to %struct.USART_TypeDef*), !dbg !6879
  br i1 %28, label %29, label %31, !dbg !6881

29:                                               ; preds = %1
  %30 = call i32 @HAL_RCC_GetPCLK2Freq() #27, !dbg !6882
  call void @llvm.dbg.value(metadata i32 %30, metadata !6864, metadata !DIExpression()), !dbg !6865
  br label %33, !dbg !6884

31:                                               ; preds = %1
  %32 = call i32 @HAL_RCC_GetPCLK1Freq() #27, !dbg !6885
  call void @llvm.dbg.value(metadata i32 %32, metadata !6864, metadata !DIExpression()), !dbg !6865
  br label %33

33:                                               ; preds = %31, %29
  %34 = phi i32 [ %32, %31 ], [ %30, %29 ]
  %35 = mul i32 %34, 25, !dbg !6887
  %36 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 0, !dbg !6887
  %37 = load i32, i32* %36, align 4, !dbg !6887, !tbaa !6888
  %38 = shl i32 %37, 2, !dbg !6887
  %39 = udiv i32 %35, %38, !dbg !6887
  %40 = udiv i32 %39, 100, !dbg !6887
  %41 = shl nuw nsw i32 %40, 4, !dbg !6887
  %42 = mul i32 %40, -100, !dbg !6887
  %43 = add i32 %42, %39, !dbg !6887
  %44 = shl i32 %43, 4, !dbg !6887
  %45 = add i32 %44, 50, !dbg !6887
  %46 = udiv i32 %45, 100, !dbg !6887
  %47 = and i32 %46, 240, !dbg !6887
  %48 = add nuw nsw i32 %47, %41, !dbg !6887
  %49 = and i32 %46, 15, !dbg !6887
  %50 = or i32 %48, %49, !dbg !6887
  %51 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6887, !tbaa !6839
  %52 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %51, i32 0, i32 2, !dbg !6887
  store volatile i32 %50, i32* %52, align 4, !dbg !6887, !tbaa !5562
  ret void, !dbg !6889
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_HalfDuplex_Init(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #8 !dbg !6890 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6892, metadata !DIExpression()), !dbg !6893
  %2 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !6894
  br i1 %2, label %29, label %3, !dbg !6896

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6897
  %5 = load volatile i32, i32* %4, align 4, !dbg !6897, !tbaa !6826
  %6 = icmp eq i32 %5, 0, !dbg !6899
  br i1 %6, label %7, label %9, !dbg !6900

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !6901
  store i32 0, i32* %8, align 4, !dbg !6903, !tbaa !6834
  call void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !6904
  br label %9, !dbg !6905

9:                                                ; preds = %7, %3
  store volatile i32 36, i32* %4, align 4, !dbg !6906, !tbaa !6826
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6907
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %10, align 4, !dbg !6907, !tbaa !6839
  %12 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %11, i32 0, i32 3, !dbg !6907
  %13 = load volatile i32, i32* %12, align 4, !dbg !6907, !tbaa !5544
  %14 = and i32 %13, -8193, !dbg !6907
  store volatile i32 %14, i32* %12, align 4, !dbg !6907, !tbaa !5544
  call fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !6908
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %10, align 4, !dbg !6909, !tbaa !6839
  %16 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 4, !dbg !6909
  %17 = load volatile i32, i32* %16, align 4, !dbg !6909, !tbaa !5427
  %18 = and i32 %17, -18433, !dbg !6909
  store volatile i32 %18, i32* %16, align 4, !dbg !6909, !tbaa !5427
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 5, !dbg !6910
  %20 = load volatile i32, i32* %19, align 4, !dbg !6910, !tbaa !5432
  %21 = and i32 %20, -35, !dbg !6910
  store volatile i32 %21, i32* %19, align 4, !dbg !6910, !tbaa !5432
  %22 = load volatile i32, i32* %19, align 4, !dbg !6911, !tbaa !5432
  %23 = or i32 %22, 8, !dbg !6911
  store volatile i32 %23, i32* %19, align 4, !dbg !6911, !tbaa !5432
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 3, !dbg !6912
  %25 = load volatile i32, i32* %24, align 4, !dbg !6912, !tbaa !5544
  %26 = or i32 %25, 8192, !dbg !6912
  store volatile i32 %26, i32* %24, align 4, !dbg !6912, !tbaa !5544
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6913
  store volatile i32 0, i32* %27, align 4, !dbg !6914, !tbaa !6846
  store volatile i32 32, i32* %4, align 4, !dbg !6915, !tbaa !6826
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !6916
  store volatile i32 32, i32* %28, align 4, !dbg !6917, !tbaa !6850
  br label %29, !dbg !6918

29:                                               ; preds = %1, %9
  %30 = phi i32 [ 0, %9 ], [ 1, %1 ], !dbg !6893
  ret i32 %30, !dbg !6919
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_LIN_Init(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6920 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6924, metadata !DIExpression()), !dbg !6926
  call void @llvm.dbg.value(metadata i32 %1, metadata !6925, metadata !DIExpression()), !dbg !6926
  %3 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !6927
  br i1 %3, label %34, label %4, !dbg !6929

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6930
  %6 = load volatile i32, i32* %5, align 4, !dbg !6930, !tbaa !6826
  %7 = icmp eq i32 %6, 0, !dbg !6932
  br i1 %7, label %8, label %10, !dbg !6933

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !6934
  store i32 0, i32* %9, align 4, !dbg !6936, !tbaa !6834
  call void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !6937
  br label %10, !dbg !6938

10:                                               ; preds = %8, %4
  store volatile i32 36, i32* %5, align 4, !dbg !6939, !tbaa !6826
  %11 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6940
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %11, align 4, !dbg !6940, !tbaa !6839
  %13 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %12, i32 0, i32 3, !dbg !6940
  %14 = load volatile i32, i32* %13, align 4, !dbg !6940, !tbaa !5544
  %15 = and i32 %14, -8193, !dbg !6940
  store volatile i32 %15, i32* %13, align 4, !dbg !6940, !tbaa !5544
  call fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !6941
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %11, align 4, !dbg !6942, !tbaa !6839
  %17 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %16, i32 0, i32 4, !dbg !6942
  %18 = load volatile i32, i32* %17, align 4, !dbg !6942, !tbaa !5427
  %19 = and i32 %18, -2049, !dbg !6942
  store volatile i32 %19, i32* %17, align 4, !dbg !6942, !tbaa !5427
  %20 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %16, i32 0, i32 5, !dbg !6943
  %21 = load volatile i32, i32* %20, align 4, !dbg !6943, !tbaa !5432
  %22 = and i32 %21, -43, !dbg !6943
  store volatile i32 %22, i32* %20, align 4, !dbg !6943, !tbaa !5432
  %23 = load volatile i32, i32* %17, align 4, !dbg !6944, !tbaa !5427
  %24 = or i32 %23, 16384, !dbg !6944
  store volatile i32 %24, i32* %17, align 4, !dbg !6944, !tbaa !5427
  %25 = load volatile i32, i32* %17, align 4, !dbg !6945, !tbaa !5427
  %26 = and i32 %25, -33, !dbg !6945
  store volatile i32 %26, i32* %17, align 4, !dbg !6945, !tbaa !5427
  %27 = load volatile i32, i32* %17, align 4, !dbg !6946, !tbaa !5427
  %28 = or i32 %27, %1, !dbg !6946
  store volatile i32 %28, i32* %17, align 4, !dbg !6946, !tbaa !5427
  %29 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %16, i32 0, i32 3, !dbg !6947
  %30 = load volatile i32, i32* %29, align 4, !dbg !6947, !tbaa !5544
  %31 = or i32 %30, 8192, !dbg !6947
  store volatile i32 %31, i32* %29, align 4, !dbg !6947, !tbaa !5544
  %32 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6948
  store volatile i32 0, i32* %32, align 4, !dbg !6949, !tbaa !6846
  store volatile i32 32, i32* %5, align 4, !dbg !6950, !tbaa !6826
  %33 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !6951
  store volatile i32 32, i32* %33, align 4, !dbg !6952, !tbaa !6850
  br label %34, !dbg !6953

34:                                               ; preds = %2, %10
  %35 = phi i32 [ 0, %10 ], [ 1, %2 ], !dbg !6926
  ret i32 %35, !dbg !6954
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_MultiProcessor_Init(%struct.__UART_HandleTypeDef* noundef %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #8 !dbg !6955 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6959, metadata !DIExpression()), !dbg !6962
  call void @llvm.dbg.value(metadata i8 %1, metadata !6960, metadata !DIExpression()), !dbg !6962
  call void @llvm.dbg.value(metadata i32 %2, metadata !6961, metadata !DIExpression()), !dbg !6962
  %4 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !6963
  br i1 %4, label %38, label %5, !dbg !6965

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6966
  %7 = load volatile i32, i32* %6, align 4, !dbg !6966, !tbaa !6826
  %8 = icmp eq i32 %7, 0, !dbg !6968
  br i1 %8, label %9, label %11, !dbg !6969

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !6970
  store i32 0, i32* %10, align 4, !dbg !6972, !tbaa !6834
  call void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !6973
  br label %11, !dbg !6974

11:                                               ; preds = %9, %5
  store volatile i32 36, i32* %6, align 4, !dbg !6975, !tbaa !6826
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6976
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %12, align 4, !dbg !6976, !tbaa !6839
  %14 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %13, i32 0, i32 3, !dbg !6976
  %15 = load volatile i32, i32* %14, align 4, !dbg !6976, !tbaa !5544
  %16 = and i32 %15, -8193, !dbg !6976
  store volatile i32 %16, i32* %14, align 4, !dbg !6976, !tbaa !5544
  call fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !6977
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %12, align 4, !dbg !6978, !tbaa !6839
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 4, !dbg !6978
  %19 = load volatile i32, i32* %18, align 4, !dbg !6978, !tbaa !5427
  %20 = and i32 %19, -18433, !dbg !6978
  store volatile i32 %20, i32* %18, align 4, !dbg !6978, !tbaa !5427
  %21 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 5, !dbg !6979
  %22 = load volatile i32, i32* %21, align 4, !dbg !6979, !tbaa !5432
  %23 = and i32 %22, -43, !dbg !6979
  store volatile i32 %23, i32* %21, align 4, !dbg !6979, !tbaa !5432
  %24 = load volatile i32, i32* %18, align 4, !dbg !6980, !tbaa !5427
  %25 = and i32 %24, -16, !dbg !6980
  store volatile i32 %25, i32* %18, align 4, !dbg !6980, !tbaa !5427
  %26 = zext i8 %1 to i32, !dbg !6981
  %27 = load volatile i32, i32* %18, align 4, !dbg !6981, !tbaa !5427
  %28 = or i32 %27, %26, !dbg !6981
  store volatile i32 %28, i32* %18, align 4, !dbg !6981, !tbaa !5427
  %29 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 3, !dbg !6982
  %30 = load volatile i32, i32* %29, align 4, !dbg !6982, !tbaa !5544
  %31 = and i32 %30, -2049, !dbg !6982
  store volatile i32 %31, i32* %29, align 4, !dbg !6982, !tbaa !5544
  %32 = load volatile i32, i32* %29, align 4, !dbg !6983, !tbaa !5544
  %33 = or i32 %32, %2, !dbg !6983
  store volatile i32 %33, i32* %29, align 4, !dbg !6983, !tbaa !5544
  %34 = load volatile i32, i32* %29, align 4, !dbg !6984, !tbaa !5544
  %35 = or i32 %34, 8192, !dbg !6984
  store volatile i32 %35, i32* %29, align 4, !dbg !6984, !tbaa !5544
  %36 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6985
  store volatile i32 0, i32* %36, align 4, !dbg !6986, !tbaa !6846
  store volatile i32 32, i32* %6, align 4, !dbg !6987, !tbaa !6826
  %37 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !6988
  store volatile i32 32, i32* %37, align 4, !dbg !6989, !tbaa !6850
  br label %38, !dbg !6990

38:                                               ; preds = %3, %11
  %39 = phi i32 [ 0, %11 ], [ 1, %3 ], !dbg !6962
  ret i32 %39, !dbg !6991
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_DeInit(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #8 !dbg !6992 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6994, metadata !DIExpression()), !dbg !6995
  %2 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !6996
  br i1 %2, label %13, label %3, !dbg !6998

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6999
  store volatile i32 36, i32* %4, align 4, !dbg !7000, !tbaa !6826
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !7001
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7001, !tbaa !6839
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %6, i32 0, i32 3, !dbg !7001
  %8 = load volatile i32, i32* %7, align 4, !dbg !7001, !tbaa !5544
  %9 = and i32 %8, -8193, !dbg !7001
  store volatile i32 %9, i32* %7, align 4, !dbg !7001, !tbaa !5544
  call void @HAL_UART_MspDeInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !7002
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !7003
  store volatile i32 0, i32* %10, align 4, !dbg !7004, !tbaa !6846
  store volatile i32 0, i32* %4, align 4, !dbg !7005, !tbaa !6826
  %11 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !7006
  store volatile i32 0, i32* %11, align 4, !dbg !7007, !tbaa !6850
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !7008
  store i32 0, i32* %12, align 4, !dbg !7008, !tbaa !6834
  br label %13, !dbg !7010

13:                                               ; preds = %1, %3
  %14 = phi i32 [ 0, %3 ], [ 1, %1 ], !dbg !6995
  ret i32 %14, !dbg !7011
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_MspDeInit(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #8 !dbg !7012 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7014, metadata !DIExpression()), !dbg !7015
  ret void, !dbg !7016
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Transmit(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef readonly %1, i16 noundef zeroext %2, i32 noundef %3) local_unnamed_addr #8 !dbg !7017 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7021, metadata !DIExpression()), !dbg !7027
  call void @llvm.dbg.value(metadata i8* %1, metadata !7022, metadata !DIExpression()), !dbg !7027
  call void @llvm.dbg.value(metadata i16 %2, metadata !7023, metadata !DIExpression()), !dbg !7027
  call void @llvm.dbg.value(metadata i32 %3, metadata !7024, metadata !DIExpression()), !dbg !7027
  call void @llvm.dbg.value(metadata i32 0, metadata !7026, metadata !DIExpression()), !dbg !7027
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !7028
  %6 = load volatile i32, i32* %5, align 4, !dbg !7028, !tbaa !6826
  %7 = icmp eq i32 %6, 32, !dbg !7030
  br i1 %7, label %8, label %65, !dbg !7031

8:                                                ; preds = %4
  %9 = icmp eq i8* %1, null, !dbg !7032
  %10 = icmp eq i16 %2, 0
  %11 = or i1 %9, %10, !dbg !7035
  br i1 %11, label %65, label %12, !dbg !7035

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !7036
  %14 = load i32, i32* %13, align 4, !dbg !7036, !tbaa !6834
  %15 = icmp eq i32 %14, 1, !dbg !7036
  br i1 %15, label %65, label %16, !dbg !7039

16:                                               ; preds = %12
  store i32 1, i32* %13, align 4, !dbg !7040, !tbaa !6834
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !7042
  store volatile i32 0, i32* %17, align 4, !dbg !7043, !tbaa !6846
  store volatile i32 33, i32* %5, align 4, !dbg !7044, !tbaa !6826
  %18 = call i32 @HAL_GetTick() #27, !dbg !7045
  call void @llvm.dbg.value(metadata i32 %18, metadata !7026, metadata !DIExpression()), !dbg !7027
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 3, !dbg !7046
  store i16 %2, i16* %19, align 4, !dbg !7047, !tbaa !7048
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !7049
  store volatile i16 %2, i16* %20, align 2, !dbg !7050, !tbaa !7051
  call void @llvm.dbg.value(metadata i8* %1, metadata !7022, metadata !DIExpression()), !dbg !7027
  %21 = load volatile i16, i16* %20, align 2, !dbg !7052, !tbaa !7051
  %22 = icmp eq i16 %21, 0, !dbg !7053
  br i1 %22, label %61, label %23, !dbg !7054

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1
  %25 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3
  br label %28, !dbg !7054

28:                                               ; preds = %23, %57
  %29 = phi i8* [ %1, %23 ], [ %58, %57 ]
  call void @llvm.dbg.value(metadata i8* %29, metadata !7022, metadata !DIExpression()), !dbg !7027
  %30 = load volatile i16, i16* %20, align 2, !dbg !7055, !tbaa !7051
  %31 = add i16 %30, -1, !dbg !7055
  store volatile i16 %31, i16* %20, align 2, !dbg !7055, !tbaa !7051
  %32 = load i32, i32* %24, align 4, !dbg !7057, !tbaa !6869
  %33 = icmp eq i32 %32, 4096, !dbg !7059
  %34 = call fastcc i32 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef 128, i32 noundef %18, i32 noundef %3), !dbg !7060
  %35 = icmp eq i32 %34, 0, !dbg !7060
  br i1 %33, label %36, label %50, !dbg !7061

36:                                               ; preds = %28
  br i1 %35, label %37, label %65, !dbg !7062

37:                                               ; preds = %36
  %38 = bitcast i8* %29 to i16*, !dbg !7064
  call void @llvm.dbg.value(metadata i16* %38, metadata !7025, metadata !DIExpression()), !dbg !7027
  %39 = load i16, i16* %38, align 2, !dbg !7065, !tbaa !7066
  %40 = and i16 %39, 511, !dbg !7067
  %41 = zext i16 %40 to i32, !dbg !7067
  %42 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %26, align 4, !dbg !7068, !tbaa !6839
  %43 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %42, i32 0, i32 1, !dbg !7069
  store volatile i32 %41, i32* %43, align 4, !dbg !7070, !tbaa !7071
  %44 = load i32, i32* %27, align 4, !dbg !7072, !tbaa !6871
  %45 = icmp eq i32 %44, 0, !dbg !7074
  br i1 %45, label %46, label %48, !dbg !7075

46:                                               ; preds = %37
  %47 = getelementptr inbounds i8, i8* %29, i32 2, !dbg !7076
  call void @llvm.dbg.value(metadata i8* %47, metadata !7022, metadata !DIExpression()), !dbg !7027
  br label %57, !dbg !7078

48:                                               ; preds = %37
  %49 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !7079
  call void @llvm.dbg.value(metadata i8* %49, metadata !7022, metadata !DIExpression()), !dbg !7027
  br label %57

50:                                               ; preds = %28
  br i1 %35, label %51, label %65, !dbg !7081

51:                                               ; preds = %50
  %52 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !7083
  call void @llvm.dbg.value(metadata i8* %52, metadata !7022, metadata !DIExpression()), !dbg !7027
  %53 = load i8, i8* %29, align 1, !dbg !7084, !tbaa !1609
  %54 = zext i8 %53 to i32, !dbg !7084
  %55 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %25, align 4, !dbg !7085, !tbaa !6839
  %56 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %55, i32 0, i32 1, !dbg !7086
  store volatile i32 %54, i32* %56, align 4, !dbg !7087, !tbaa !7071
  br label %57

57:                                               ; preds = %46, %48, %51
  %58 = phi i8* [ %47, %46 ], [ %49, %48 ], [ %52, %51 ], !dbg !7060
  call void @llvm.dbg.value(metadata i8* %58, metadata !7022, metadata !DIExpression()), !dbg !7027
  %59 = load volatile i16, i16* %20, align 2, !dbg !7052, !tbaa !7051
  %60 = icmp eq i16 %59, 0, !dbg !7053
  br i1 %60, label %61, label %28, !dbg !7054, !llvm.loop !7088

61:                                               ; preds = %57, %16
  %62 = call fastcc i32 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef 64, i32 noundef %18, i32 noundef %3), !dbg !7090
  %63 = icmp eq i32 %62, 0, !dbg !7092
  br i1 %63, label %64, label %65, !dbg !7093

64:                                               ; preds = %61
  store volatile i32 32, i32* %5, align 4, !dbg !7094, !tbaa !6826
  store i32 0, i32* %13, align 4, !dbg !7095, !tbaa !6834
  br label %65, !dbg !7097

65:                                               ; preds = %50, %36, %4, %61, %12, %8, %64
  %66 = phi i32 [ 0, %64 ], [ 1, %8 ], [ 2, %12 ], [ 3, %61 ], [ 2, %4 ], [ 3, %36 ], [ 3, %50 ], !dbg !7098
  ret i32 %66, !dbg !7099
}

; Function Attrs: noinline nounwind
define internal fastcc i32 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #8 !dbg !7100 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7104, metadata !DIExpression()), !dbg !7109
  call void @llvm.dbg.value(metadata i32 %1, metadata !7105, metadata !DIExpression()), !dbg !7109
  call void @llvm.dbg.value(metadata i32 0, metadata !7106, metadata !DIExpression()), !dbg !7109
  call void @llvm.dbg.value(metadata i32 %2, metadata !7107, metadata !DIExpression()), !dbg !7109
  call void @llvm.dbg.value(metadata i32 %3, metadata !7108, metadata !DIExpression()), !dbg !7109
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7110, !tbaa !6839
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %6, i32 0, i32 0, !dbg !7110
  %8 = load volatile i32, i32* %7, align 4, !dbg !7110, !tbaa !7111
  %9 = and i32 %8, %1, !dbg !7110
  %10 = icmp eq i32 %9, %1, !dbg !7110
  br i1 %10, label %37, label %11, !dbg !7112

11:                                               ; preds = %4
  switch i32 %3, label %17 [
    i32 0, label %21
    i32 -1, label %12
  ]

12:                                               ; preds = %17, %11
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !tbaa !6839
  %14 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %13, i32 0, i32 0
  %15 = icmp eq i32 %3, -1
  br label %33, !dbg !7112

16:                                               ; preds = %33
  br i1 %15, label %33, label %17, !dbg !7113

17:                                               ; preds = %16, %11
  %18 = call i32 @HAL_GetTick() #27, !dbg !7115
  %19 = sub i32 %18, %2, !dbg !7119
  %20 = icmp ugt i32 %19, %3, !dbg !7120
  br i1 %20, label %21, label %12, !dbg !7121

21:                                               ; preds = %17, %11
  %22 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !7110
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !7122, !tbaa !6839
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 3, !dbg !7122
  %25 = load volatile i32, i32* %24, align 4, !dbg !7122, !tbaa !5544
  %26 = and i32 %25, -417, !dbg !7122
  store volatile i32 %26, i32* %24, align 4, !dbg !7122, !tbaa !5544
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 5, !dbg !7124
  %28 = load volatile i32, i32* %27, align 4, !dbg !7124, !tbaa !5432
  %29 = and i32 %28, -2, !dbg !7124
  store volatile i32 %29, i32* %27, align 4, !dbg !7124, !tbaa !5432
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !7125
  store volatile i32 32, i32* %30, align 4, !dbg !7126, !tbaa !6826
  %31 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !7127
  store volatile i32 32, i32* %31, align 4, !dbg !7128, !tbaa !6850
  %32 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !7129
  store i32 0, i32* %32, align 4, !dbg !7129, !tbaa !6834
  br label %37, !dbg !7131

33:                                               ; preds = %12, %16
  %34 = load volatile i32, i32* %14, align 4, !dbg !7110, !tbaa !7111
  %35 = and i32 %34, %1, !dbg !7110
  %36 = icmp eq i32 %35, %1, !dbg !7110
  br i1 %36, label %37, label %16, !dbg !7112, !llvm.loop !7132

37:                                               ; preds = %33, %4, %21
  %38 = phi i32 [ 3, %21 ], [ 0, %4 ], [ 0, %33 ], !dbg !7109
  ret i32 %38, !dbg !7134
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Receive(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef writeonly %1, i16 noundef zeroext %2, i32 noundef %3) local_unnamed_addr #8 !dbg !7135 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7137, metadata !DIExpression()), !dbg !7143
  call void @llvm.dbg.value(metadata i8* %1, metadata !7138, metadata !DIExpression()), !dbg !7143
  call void @llvm.dbg.value(metadata i16 %2, metadata !7139, metadata !DIExpression()), !dbg !7143
  call void @llvm.dbg.value(metadata i32 %3, metadata !7140, metadata !DIExpression()), !dbg !7143
  call void @llvm.dbg.value(metadata i32 0, metadata !7142, metadata !DIExpression()), !dbg !7143
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !7144
  %6 = load volatile i32, i32* %5, align 4, !dbg !7144, !tbaa !6850
  %7 = icmp eq i32 %6, 32, !dbg !7146
  br i1 %7, label %8, label %80, !dbg !7147

8:                                                ; preds = %4
  %9 = icmp eq i8* %1, null, !dbg !7148
  %10 = icmp eq i16 %2, 0
  %11 = or i1 %9, %10, !dbg !7151
  br i1 %11, label %80, label %12, !dbg !7151

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !7152
  %14 = load i32, i32* %13, align 4, !dbg !7152, !tbaa !6834
  %15 = icmp eq i32 %14, 1, !dbg !7152
  br i1 %15, label %80, label %16, !dbg !7155

16:                                               ; preds = %12
  store i32 1, i32* %13, align 4, !dbg !7156, !tbaa !6834
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !7158
  store volatile i32 0, i32* %17, align 4, !dbg !7159, !tbaa !6846
  store volatile i32 34, i32* %5, align 4, !dbg !7160, !tbaa !6850
  %18 = call i32 @HAL_GetTick() #27, !dbg !7161
  call void @llvm.dbg.value(metadata i32 %18, metadata !7142, metadata !DIExpression()), !dbg !7143
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 6, !dbg !7162
  store i16 %2, i16* %19, align 4, !dbg !7163, !tbaa !7164
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !7165
  store volatile i16 %2, i16* %20, align 2, !dbg !7166, !tbaa !7167
  call void @llvm.dbg.value(metadata i8* %1, metadata !7138, metadata !DIExpression()), !dbg !7143
  %21 = load volatile i16, i16* %20, align 2, !dbg !7168, !tbaa !7167
  %22 = icmp eq i16 %21, 0, !dbg !7169
  br i1 %22, label %79, label %23, !dbg !7170

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1
  %25 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3
  %29 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  br label %31, !dbg !7170

31:                                               ; preds = %23, %75
  %32 = phi i8* [ %1, %23 ], [ %76, %75 ]
  call void @llvm.dbg.value(metadata i8* %32, metadata !7138, metadata !DIExpression()), !dbg !7143
  %33 = load volatile i16, i16* %20, align 2, !dbg !7171, !tbaa !7167
  %34 = add i16 %33, -1, !dbg !7171
  store volatile i16 %34, i16* %20, align 2, !dbg !7171, !tbaa !7167
  %35 = load i32, i32* %24, align 4, !dbg !7173, !tbaa !6869
  %36 = icmp eq i32 %35, 4096, !dbg !7175
  %37 = call fastcc i32 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef 32, i32 noundef %18, i32 noundef %3), !dbg !7176
  %38 = icmp eq i32 %37, 0, !dbg !7176
  br i1 %36, label %39, label %58, !dbg !7177

39:                                               ; preds = %31
  br i1 %38, label %40, label %80, !dbg !7178

40:                                               ; preds = %39
  %41 = bitcast i8* %32 to i16*, !dbg !7180
  call void @llvm.dbg.value(metadata i16* %41, metadata !7141, metadata !DIExpression()), !dbg !7143
  %42 = load i32, i32* %28, align 4, !dbg !7181, !tbaa !6871
  %43 = icmp eq i32 %42, 0, !dbg !7183
  br i1 %43, label %44, label %51, !dbg !7184

44:                                               ; preds = %40
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !7185, !tbaa !6839
  %46 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %45, i32 0, i32 1, !dbg !7187
  %47 = load volatile i32, i32* %46, align 4, !dbg !7187, !tbaa !7071
  %48 = trunc i32 %47 to i16, !dbg !7188
  %49 = and i16 %48, 511, !dbg !7188
  store i16 %49, i16* %41, align 2, !dbg !7189, !tbaa !7066
  %50 = getelementptr inbounds i8, i8* %32, i32 2, !dbg !7190
  call void @llvm.dbg.value(metadata i8* %50, metadata !7138, metadata !DIExpression()), !dbg !7143
  br label %75, !dbg !7191

51:                                               ; preds = %40
  %52 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %29, align 4, !dbg !7192, !tbaa !6839
  %53 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %52, i32 0, i32 1, !dbg !7194
  %54 = load volatile i32, i32* %53, align 4, !dbg !7194, !tbaa !7071
  %55 = trunc i32 %54 to i16, !dbg !7195
  %56 = and i16 %55, 255, !dbg !7195
  store i16 %56, i16* %41, align 2, !dbg !7196, !tbaa !7066
  %57 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !7197
  call void @llvm.dbg.value(metadata i8* %57, metadata !7138, metadata !DIExpression()), !dbg !7143
  br label %75

58:                                               ; preds = %31
  br i1 %38, label %59, label %80, !dbg !7198

59:                                               ; preds = %58
  %60 = load i32, i32* %25, align 4, !dbg !7200, !tbaa !6871
  %61 = icmp eq i32 %60, 0, !dbg !7202
  br i1 %61, label %62, label %68, !dbg !7203

62:                                               ; preds = %59
  %63 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %27, align 4, !dbg !7204, !tbaa !6839
  %64 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %63, i32 0, i32 1, !dbg !7206
  %65 = load volatile i32, i32* %64, align 4, !dbg !7206, !tbaa !7071
  %66 = trunc i32 %65 to i8, !dbg !7207
  %67 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !7208
  call void @llvm.dbg.value(metadata i8* %67, metadata !7138, metadata !DIExpression()), !dbg !7143
  store i8 %66, i8* %32, align 1, !dbg !7209, !tbaa !1609
  br label %75, !dbg !7210

68:                                               ; preds = %59
  %69 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %26, align 4, !dbg !7211, !tbaa !6839
  %70 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %69, i32 0, i32 1, !dbg !7213
  %71 = load volatile i32, i32* %70, align 4, !dbg !7213, !tbaa !7071
  %72 = trunc i32 %71 to i8, !dbg !7214
  %73 = and i8 %72, 127, !dbg !7214
  %74 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !7215
  call void @llvm.dbg.value(metadata i8* %74, metadata !7138, metadata !DIExpression()), !dbg !7143
  store i8 %73, i8* %32, align 1, !dbg !7216, !tbaa !1609
  br label %75

75:                                               ; preds = %62, %68, %44, %51
  %76 = phi i8* [ %50, %44 ], [ %57, %51 ], [ %67, %62 ], [ %74, %68 ], !dbg !7176
  call void @llvm.dbg.value(metadata i8* %76, metadata !7138, metadata !DIExpression()), !dbg !7143
  %77 = load volatile i16, i16* %20, align 2, !dbg !7168, !tbaa !7167
  %78 = icmp eq i16 %77, 0, !dbg !7169
  br i1 %78, label %79, label %31, !dbg !7170, !llvm.loop !7217

79:                                               ; preds = %75, %16
  store volatile i32 32, i32* %5, align 4, !dbg !7219, !tbaa !6850
  store i32 0, i32* %13, align 4, !dbg !7220, !tbaa !6834
  br label %80, !dbg !7222

80:                                               ; preds = %58, %39, %4, %12, %8, %79
  %81 = phi i32 [ 0, %79 ], [ 1, %8 ], [ 2, %12 ], [ 2, %4 ], [ 3, %39 ], [ 3, %58 ], !dbg !7223
  ret i32 %81, !dbg !7224
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_UART_Transmit_IT(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #13 !dbg !7225 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7229, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i8* %1, metadata !7230, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i16 %2, metadata !7231, metadata !DIExpression()), !dbg !7232
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !7233
  %5 = load volatile i32, i32* %4, align 4, !dbg !7233, !tbaa !6826
  %6 = icmp eq i32 %5, 32, !dbg !7235
  br i1 %6, label %7, label %25, !dbg !7236

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !7237
  %9 = icmp eq i16 %2, 0
  %10 = or i1 %8, %9, !dbg !7240
  br i1 %10, label %25, label %11, !dbg !7240

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !7241
  %13 = load i32, i32* %12, align 4, !dbg !7241, !tbaa !6834
  %14 = icmp eq i32 %13, 1, !dbg !7241
  br i1 %14, label %25, label %15, !dbg !7244

15:                                               ; preds = %11
  store i32 1, i32* %12, align 4, !dbg !7245, !tbaa !6834
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 2, !dbg !7247
  store i8* %1, i8** %16, align 4, !dbg !7248, !tbaa !7249
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 3, !dbg !7250
  store i16 %2, i16* %17, align 4, !dbg !7251, !tbaa !7048
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !7252
  store volatile i16 %2, i16* %18, align 2, !dbg !7253, !tbaa !7051
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !7254
  store volatile i32 0, i32* %19, align 4, !dbg !7255, !tbaa !6846
  store volatile i32 33, i32* %4, align 4, !dbg !7256, !tbaa !6826
  store i32 0, i32* %12, align 4, !dbg !7257, !tbaa !6834
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !7259
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %20, align 4, !dbg !7259, !tbaa !6839
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %21, i32 0, i32 3, !dbg !7259
  %23 = load volatile i32, i32* %22, align 4, !dbg !7259, !tbaa !5544
  %24 = or i32 %23, 128, !dbg !7259
  store volatile i32 %24, i32* %22, align 4, !dbg !7259, !tbaa !5544
  br label %25, !dbg !7260

25:                                               ; preds = %3, %11, %7, %15
  %26 = phi i32 [ 0, %15 ], [ 1, %7 ], [ 2, %11 ], [ 2, %3 ], !dbg !7261
  ret i32 %26, !dbg !7262
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_UART_Receive_IT(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #13 !dbg !7263 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7265, metadata !DIExpression()), !dbg !7268
  call void @llvm.dbg.value(metadata i8* %1, metadata !7266, metadata !DIExpression()), !dbg !7268
  call void @llvm.dbg.value(metadata i16 %2, metadata !7267, metadata !DIExpression()), !dbg !7268
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !7269
  %5 = load volatile i32, i32* %4, align 4, !dbg !7269, !tbaa !6850
  %6 = icmp eq i32 %5, 32, !dbg !7271
  br i1 %6, label %7, label %30, !dbg !7272

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !7273
  %9 = icmp eq i16 %2, 0
  %10 = or i1 %8, %9, !dbg !7276
  br i1 %10, label %30, label %11, !dbg !7276

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !7277
  %13 = load i32, i32* %12, align 4, !dbg !7277, !tbaa !6834
  %14 = icmp eq i32 %13, 1, !dbg !7277
  br i1 %14, label %30, label %15, !dbg !7280

15:                                               ; preds = %11
  store i32 1, i32* %12, align 4, !dbg !7281, !tbaa !6834
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !7283
  store i8* %1, i8** %16, align 4, !dbg !7284, !tbaa !7285
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 6, !dbg !7286
  store i16 %2, i16* %17, align 4, !dbg !7287, !tbaa !7164
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !7288
  store volatile i16 %2, i16* %18, align 2, !dbg !7289, !tbaa !7167
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !7290
  store volatile i32 0, i32* %19, align 4, !dbg !7291, !tbaa !6846
  store volatile i32 34, i32* %4, align 4, !dbg !7292, !tbaa !6850
  store i32 0, i32* %12, align 4, !dbg !7293, !tbaa !6834
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !7295
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %20, align 4, !dbg !7295, !tbaa !6839
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %21, i32 0, i32 3, !dbg !7295
  %23 = load volatile i32, i32* %22, align 4, !dbg !7295, !tbaa !5544
  %24 = or i32 %23, 256, !dbg !7295
  store volatile i32 %24, i32* %22, align 4, !dbg !7295, !tbaa !5544
  %25 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %21, i32 0, i32 5, !dbg !7296
  %26 = load volatile i32, i32* %25, align 4, !dbg !7296, !tbaa !5432
  %27 = or i32 %26, 1, !dbg !7296
  store volatile i32 %27, i32* %25, align 4, !dbg !7296, !tbaa !5432
  %28 = load volatile i32, i32* %22, align 4, !dbg !7297, !tbaa !5544
  %29 = or i32 %28, 32, !dbg !7297
  store volatile i32 %29, i32* %22, align 4, !dbg !7297, !tbaa !5544
  br label %30, !dbg !7298

30:                                               ; preds = %3, %11, %7, %15
  %31 = phi i32 [ 0, %15 ], [ 1, %7 ], [ 2, %11 ], [ 2, %3 ], !dbg !7299
  ret i32 %31, !dbg !7300
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Transmit_DMA(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #8 !dbg !7301 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7303, metadata !DIExpression()), !dbg !7307
  call void @llvm.dbg.value(metadata i8* %1, metadata !7304, metadata !DIExpression()), !dbg !7307
  call void @llvm.dbg.value(metadata i16 %2, metadata !7305, metadata !DIExpression()), !dbg !7307
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !7308
  %5 = load volatile i32, i32* %4, align 4, !dbg !7308, !tbaa !6826
  %6 = icmp eq i32 %5, 32, !dbg !7310
  br i1 %6, label %7, label %38, !dbg !7311

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !7312
  %9 = zext i16 %2 to i32
  %10 = icmp eq i16 %2, 0
  %11 = or i1 %8, %10, !dbg !7315
  br i1 %11, label %38, label %12, !dbg !7315

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !7316
  %14 = load i32, i32* %13, align 4, !dbg !7316, !tbaa !6834
  %15 = icmp eq i32 %14, 1, !dbg !7316
  br i1 %15, label %38, label %16, !dbg !7319

16:                                               ; preds = %12
  store i32 1, i32* %13, align 4, !dbg !7320, !tbaa !6834
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 2, !dbg !7322
  store i8* %1, i8** %17, align 4, !dbg !7323, !tbaa !7249
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 3, !dbg !7324
  store i16 %2, i16* %18, align 4, !dbg !7325, !tbaa !7048
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !7326
  store volatile i16 %2, i16* %19, align 2, !dbg !7327, !tbaa !7051
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !7328
  store volatile i32 0, i32* %20, align 4, !dbg !7329, !tbaa !6846
  store volatile i32 33, i32* %4, align 4, !dbg !7330, !tbaa !6826
  %21 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !7331
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %21, align 4, !dbg !7331, !tbaa !7332
  %23 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 5, !dbg !7333
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMATransmitCplt, void (%struct.__DMA_HandleTypeDef*)** %23, align 4, !dbg !7334, !tbaa !7335
  %24 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 6, !dbg !7337
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMATxHalfCplt, void (%struct.__DMA_HandleTypeDef*)** %24, align 4, !dbg !7338, !tbaa !7339
  %25 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 7, !dbg !7340
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMAError, void (%struct.__DMA_HandleTypeDef*)** %25, align 4, !dbg !7341, !tbaa !7342
  %26 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 8, !dbg !7343
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %26, align 4, !dbg !7344, !tbaa !7345
  call void @llvm.dbg.value(metadata i32* undef, metadata !7306, metadata !DIExpression()), !dbg !7307
  %27 = ptrtoint i8* %1 to i32, !dbg !7346
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !7347
  %29 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %28, align 4, !dbg !7347, !tbaa !6839
  %30 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %29, i32 0, i32 1, !dbg !7348
  %31 = ptrtoint i32* %30 to i32, !dbg !7349
  %32 = call i32 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* noundef %22, i32 noundef %27, i32 noundef %31, i32 noundef %9) #27, !dbg !7350
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %28, align 4, !dbg !7351, !tbaa !6839
  %34 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %33, i32 0, i32 0, !dbg !7351
  store volatile i32 -65, i32* %34, align 4, !dbg !7351, !tbaa !7111
  store i32 0, i32* %13, align 4, !dbg !7352, !tbaa !6834
  %35 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %33, i32 0, i32 5, !dbg !7354
  %36 = load volatile i32, i32* %35, align 4, !dbg !7354, !tbaa !5432
  %37 = or i32 %36, 128, !dbg !7354
  store volatile i32 %37, i32* %35, align 4, !dbg !7354, !tbaa !5432
  br label %38, !dbg !7355

38:                                               ; preds = %3, %12, %7, %16
  %39 = phi i32 [ 0, %16 ], [ 1, %7 ], [ 2, %12 ], [ 2, %3 ], !dbg !7356
  ret i32 %39, !dbg !7357
}

; Function Attrs: noinline nounwind
define internal void @UART_DMATransmitCplt(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #8 !dbg !7358 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !7362, metadata !DIExpression()), !dbg !7364
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !7365
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !7365
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !7365, !tbaa !7366
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !7363, metadata !DIExpression()), !dbg !7364
  %5 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 0, !dbg !7367
  %6 = load %struct.DMA_Channel_TypeDef*, %struct.DMA_Channel_TypeDef** %5, align 4, !dbg !7367, !tbaa !7369
  %7 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %6, i32 0, i32 0, !dbg !7370
  %8 = load volatile i32, i32* %7, align 4, !dbg !7370, !tbaa !3159
  %9 = and i32 %8, 32, !dbg !7371
  %10 = icmp eq i32 %9, 0, !dbg !7372
  br i1 %10, label %11, label %21, !dbg !7373

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !7374
  store volatile i16 0, i16* %12, align 2, !dbg !7376, !tbaa !7051
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 0, !dbg !7377
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %13, align 4, !dbg !7377, !tbaa !6839
  %15 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %14, i32 0, i32 5, !dbg !7377
  %16 = load volatile i32, i32* %15, align 4, !dbg !7377, !tbaa !5432
  %17 = and i32 %16, -129, !dbg !7377
  store volatile i32 %17, i32* %15, align 4, !dbg !7377, !tbaa !5432
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %14, i32 0, i32 3, !dbg !7378
  %19 = load volatile i32, i32* %18, align 4, !dbg !7378, !tbaa !5544
  %20 = or i32 %19, 64, !dbg !7378
  store volatile i32 %20, i32* %18, align 4, !dbg !7378, !tbaa !5544
  br label %22, !dbg !7379

21:                                               ; preds = %1
  call void @HAL_UART_TxCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !7380
  br label %22

22:                                               ; preds = %21, %11
  ret void, !dbg !7382
}

; Function Attrs: noinline nounwind
define internal void @UART_DMATxHalfCplt(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #8 !dbg !7383 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !7385, metadata !DIExpression()), !dbg !7387
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !7388
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !7388
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !7388, !tbaa !7366
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !7386, metadata !DIExpression()), !dbg !7387
  call void @HAL_UART_TxHalfCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !7389
  ret void, !dbg !7390
}

; Function Attrs: noinline nounwind
define internal void @UART_DMAError(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #8 !dbg !7391 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !7393, metadata !DIExpression()), !dbg !7396
  call void @llvm.dbg.value(metadata i32 0, metadata !7394, metadata !DIExpression()), !dbg !7396
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !7397
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !7397
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !7397, !tbaa !7366
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !7395, metadata !DIExpression()), !dbg !7396
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 0, !dbg !7398
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7398, !tbaa !6839
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %6, i32 0, i32 5, !dbg !7398
  %8 = load volatile i32, i32* %7, align 4, !dbg !7398, !tbaa !5432
  %9 = and i32 %8, 128, !dbg !7398
  %10 = icmp ne i32 %9, 0, !dbg !7398
  call void @llvm.dbg.value(metadata i1 %10, metadata !7394, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7396
  %11 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 11, !dbg !7399
  %12 = load volatile i32, i32* %11, align 4, !dbg !7399, !tbaa !6826
  %13 = icmp eq i32 %12, 33, !dbg !7401
  %14 = select i1 %13, i1 %10, i1 false, !dbg !7402
  br i1 %14, label %15, label %17, !dbg !7402

15:                                               ; preds = %1
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !7403
  store volatile i16 0, i16* %16, align 2, !dbg !7405, !tbaa !7051
  call fastcc void @UART_EndTxTransfer(%struct.__UART_HandleTypeDef* noundef %4), !dbg !7406
  br label %17, !dbg !7407

17:                                               ; preds = %15, %1
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7408, !tbaa !6839
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %18, i32 0, i32 5, !dbg !7408
  %20 = load volatile i32, i32* %19, align 4, !dbg !7408, !tbaa !5432
  %21 = and i32 %20, 64, !dbg !7408
  %22 = icmp ne i32 %21, 0, !dbg !7408
  call void @llvm.dbg.value(metadata i1 %22, metadata !7394, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7396
  %23 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !7409
  %24 = load volatile i32, i32* %23, align 4, !dbg !7409, !tbaa !6850
  %25 = icmp eq i32 %24, 34, !dbg !7411
  %26 = select i1 %25, i1 %22, i1 false, !dbg !7412
  br i1 %26, label %27, label %29, !dbg !7412

27:                                               ; preds = %17
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !7413
  store volatile i16 0, i16* %28, align 2, !dbg !7415, !tbaa !7167
  call fastcc void @UART_EndRxTransfer(%struct.__UART_HandleTypeDef* noundef %4), !dbg !7416
  br label %29, !dbg !7417

29:                                               ; preds = %27, %17
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 13, !dbg !7418
  %31 = load volatile i32, i32* %30, align 4, !dbg !7419, !tbaa !6846
  %32 = or i32 %31, 16, !dbg !7419
  store volatile i32 %32, i32* %30, align 4, !dbg !7419, !tbaa !6846
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !7420
  ret void, !dbg !7421
}

declare !dbg !7422 dso_local i32 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #26

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @UART_EndTxTransfer(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #13 !dbg !7425 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7427, metadata !DIExpression()), !dbg !7428
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !7429
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !7429, !tbaa !6839
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !7429
  %5 = load volatile i32, i32* %4, align 4, !dbg !7429, !tbaa !5544
  %6 = and i32 %5, -193, !dbg !7429
  store volatile i32 %6, i32* %4, align 4, !dbg !7429, !tbaa !5544
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !7430
  store volatile i32 32, i32* %7, align 4, !dbg !7431, !tbaa !6826
  ret void, !dbg !7432
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @UART_EndRxTransfer(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #13 !dbg !7433 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7435, metadata !DIExpression()), !dbg !7436
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !7437
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !7437, !tbaa !6839
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !7437
  %5 = load volatile i32, i32* %4, align 4, !dbg !7437, !tbaa !5544
  %6 = and i32 %5, -289, !dbg !7437
  store volatile i32 %6, i32* %4, align 4, !dbg !7437, !tbaa !5544
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !7438
  %8 = load volatile i32, i32* %7, align 4, !dbg !7438, !tbaa !5432
  %9 = and i32 %8, -2, !dbg !7438
  store volatile i32 %9, i32* %7, align 4, !dbg !7438, !tbaa !5432
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !7439
  store volatile i32 32, i32* %10, align 4, !dbg !7440, !tbaa !6850
  ret void, !dbg !7441
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #8 !dbg !7442 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7444, metadata !DIExpression()), !dbg !7445
  ret void, !dbg !7446
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_TxHalfCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #8 !dbg !7447 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7449, metadata !DIExpression()), !dbg !7450
  ret void, !dbg !7451
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_TxCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #8 !dbg !7452 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7454, metadata !DIExpression()), !dbg !7455
  ret void, !dbg !7456
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Receive_DMA(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #8 !dbg !7457 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7459, metadata !DIExpression()), !dbg !7467
  call void @llvm.dbg.value(metadata i8* %1, metadata !7460, metadata !DIExpression()), !dbg !7467
  call void @llvm.dbg.value(metadata i16 %2, metadata !7461, metadata !DIExpression()), !dbg !7467
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !7468
  %6 = load volatile i32, i32* %5, align 4, !dbg !7468, !tbaa !6850
  %7 = icmp eq i32 %6, 32, !dbg !7469
  br i1 %7, label %8, label %49, !dbg !7470

8:                                                ; preds = %3
  %9 = icmp eq i8* %1, null, !dbg !7471
  %10 = zext i16 %2 to i32
  %11 = icmp eq i16 %2, 0
  %12 = or i1 %9, %11, !dbg !7473
  br i1 %12, label %49, label %13, !dbg !7473

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !7474
  %15 = load i32, i32* %14, align 4, !dbg !7474, !tbaa !6834
  %16 = icmp eq i32 %15, 1, !dbg !7474
  br i1 %16, label %49, label %17, !dbg !7477

17:                                               ; preds = %13
  store i32 1, i32* %14, align 4, !dbg !7478, !tbaa !6834
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !7480
  store i8* %1, i8** %18, align 4, !dbg !7481, !tbaa !7285
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 6, !dbg !7482
  store i16 %2, i16* %19, align 4, !dbg !7483, !tbaa !7164
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !7484
  store volatile i32 0, i32* %20, align 4, !dbg !7485, !tbaa !6846
  store volatile i32 34, i32* %5, align 4, !dbg !7486, !tbaa !6850
  %21 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !7487
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %21, align 4, !dbg !7487, !tbaa !7488
  %23 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 5, !dbg !7489
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMAReceiveCplt, void (%struct.__DMA_HandleTypeDef*)** %23, align 4, !dbg !7490, !tbaa !7335
  %24 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 6, !dbg !7491
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMARxHalfCplt, void (%struct.__DMA_HandleTypeDef*)** %24, align 4, !dbg !7492, !tbaa !7339
  %25 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 7, !dbg !7493
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMAError, void (%struct.__DMA_HandleTypeDef*)** %25, align 4, !dbg !7494, !tbaa !7342
  %26 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 8, !dbg !7495
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %26, align 4, !dbg !7496, !tbaa !7345
  call void @llvm.dbg.value(metadata i32* undef, metadata !7462, metadata !DIExpression()), !dbg !7467
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !7497
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %27, align 4, !dbg !7497, !tbaa !6839
  %29 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %28, i32 0, i32 1, !dbg !7498
  %30 = ptrtoint i32* %29 to i32, !dbg !7499
  %31 = ptrtoint i8* %1 to i32, !dbg !7500
  %32 = call i32 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* noundef %22, i32 noundef %30, i32 noundef %31, i32 noundef %10) #27, !dbg !7501
  %33 = bitcast i32* %4 to i8*, !dbg !7502
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33), !dbg !7502
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7463, metadata !DIExpression()), !dbg !7502
  store volatile i32 0, i32* %4, align 4, !dbg !7502, !tbaa !2488
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %27, align 4, !dbg !7502, !tbaa !6839
  %35 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 0, !dbg !7502
  %36 = load volatile i32, i32* %35, align 4, !dbg !7502, !tbaa !7111
  store volatile i32 %36, i32* %4, align 4, !dbg !7502, !tbaa !2488
  %37 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 1, !dbg !7502
  %38 = load volatile i32, i32* %37, align 4, !dbg !7502, !tbaa !7071
  store volatile i32 %38, i32* %4, align 4, !dbg !7502, !tbaa !2488
  %39 = load volatile i32, i32* %4, align 4, !dbg !7502, !tbaa !2488
  %40 = bitcast i32* %4 to i8*, !dbg !7503
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40), !dbg !7503
  store i32 0, i32* %14, align 4, !dbg !7504, !tbaa !6834
  %41 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 3, !dbg !7506
  %42 = load volatile i32, i32* %41, align 4, !dbg !7506, !tbaa !5544
  %43 = or i32 %42, 256, !dbg !7506
  store volatile i32 %43, i32* %41, align 4, !dbg !7506, !tbaa !5544
  %44 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 5, !dbg !7507
  %45 = load volatile i32, i32* %44, align 4, !dbg !7507, !tbaa !5432
  %46 = or i32 %45, 1, !dbg !7507
  store volatile i32 %46, i32* %44, align 4, !dbg !7507, !tbaa !5432
  %47 = load volatile i32, i32* %44, align 4, !dbg !7508, !tbaa !5432
  %48 = or i32 %47, 64, !dbg !7508
  store volatile i32 %48, i32* %44, align 4, !dbg !7508, !tbaa !5432
  br label %49, !dbg !7509

49:                                               ; preds = %3, %13, %8, %17
  %50 = phi i32 [ 0, %17 ], [ 1, %8 ], [ 2, %13 ], [ 2, %3 ], !dbg !7510
  ret i32 %50, !dbg !7511
}

; Function Attrs: noinline nounwind
define internal void @UART_DMAReceiveCplt(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #8 !dbg !7512 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !7514, metadata !DIExpression()), !dbg !7516
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !7517
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !7517
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !7517, !tbaa !7366
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !7515, metadata !DIExpression()), !dbg !7516
  %5 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 0, !dbg !7518
  %6 = load %struct.DMA_Channel_TypeDef*, %struct.DMA_Channel_TypeDef** %5, align 4, !dbg !7518, !tbaa !7369
  %7 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %6, i32 0, i32 0, !dbg !7520
  %8 = load volatile i32, i32* %7, align 4, !dbg !7520, !tbaa !3159
  %9 = and i32 %8, 32, !dbg !7521
  %10 = icmp eq i32 %9, 0, !dbg !7522
  br i1 %10, label %11, label %24, !dbg !7523

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !7524
  store volatile i16 0, i16* %12, align 2, !dbg !7526, !tbaa !7167
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 0, !dbg !7527
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %13, align 4, !dbg !7527, !tbaa !6839
  %15 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %14, i32 0, i32 3, !dbg !7527
  %16 = load volatile i32, i32* %15, align 4, !dbg !7527, !tbaa !5544
  %17 = and i32 %16, -257, !dbg !7527
  store volatile i32 %17, i32* %15, align 4, !dbg !7527, !tbaa !5544
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %14, i32 0, i32 5, !dbg !7528
  %19 = load volatile i32, i32* %18, align 4, !dbg !7528, !tbaa !5432
  %20 = and i32 %19, -2, !dbg !7528
  store volatile i32 %20, i32* %18, align 4, !dbg !7528, !tbaa !5432
  %21 = load volatile i32, i32* %18, align 4, !dbg !7529, !tbaa !5432
  %22 = and i32 %21, -65, !dbg !7529
  store volatile i32 %22, i32* %18, align 4, !dbg !7529, !tbaa !5432
  %23 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !7530
  store volatile i32 32, i32* %23, align 4, !dbg !7531, !tbaa !6850
  br label %24, !dbg !7532

24:                                               ; preds = %11, %1
  call void @HAL_UART_RxCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !7533
  ret void, !dbg !7534
}

; Function Attrs: noinline nounwind
define internal void @UART_DMARxHalfCplt(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #8 !dbg !7535 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !7537, metadata !DIExpression()), !dbg !7539
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !7540
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !7540
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !7540, !tbaa !7366
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !7538, metadata !DIExpression()), !dbg !7539
  call void @HAL_UART_RxHalfCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !7541
  ret void, !dbg !7542
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_RxHalfCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #8 !dbg !7543 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7545, metadata !DIExpression()), !dbg !7546
  ret void, !dbg !7547
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_RxCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #8 !dbg !7548 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7550, metadata !DIExpression()), !dbg !7551
  ret void, !dbg !7552
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_UART_DMAPause(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #13 !dbg !7553 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7555, metadata !DIExpression()), !dbg !7557
  call void @llvm.dbg.value(metadata i32 0, metadata !7556, metadata !DIExpression()), !dbg !7557
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !7558
  %3 = load i32, i32* %2, align 4, !dbg !7558, !tbaa !6834
  %4 = icmp eq i32 %3, 1, !dbg !7558
  br i1 %4, label %36, label %5, !dbg !7561

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !7562, !tbaa !6834
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !7564
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7564, !tbaa !6839
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %7, i32 0, i32 5, !dbg !7564
  %9 = load volatile i32, i32* %8, align 4, !dbg !7564, !tbaa !5432
  %10 = and i32 %9, 128, !dbg !7564
  %11 = icmp ne i32 %10, 0, !dbg !7564
  call void @llvm.dbg.value(metadata i1 %11, metadata !7556, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7557
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !7565
  %13 = load volatile i32, i32* %12, align 4, !dbg !7565, !tbaa !6826
  %14 = icmp eq i32 %13, 33, !dbg !7567
  %15 = select i1 %14, i1 %11, i1 false, !dbg !7568
  br i1 %15, label %16, label %19, !dbg !7568

16:                                               ; preds = %5
  %17 = load volatile i32, i32* %8, align 4, !dbg !7569, !tbaa !5432
  %18 = and i32 %17, -129, !dbg !7569
  store volatile i32 %18, i32* %8, align 4, !dbg !7569, !tbaa !5432
  br label %19, !dbg !7571

19:                                               ; preds = %16, %5
  %20 = load volatile i32, i32* %8, align 4, !dbg !7572, !tbaa !5432
  %21 = and i32 %20, 64, !dbg !7572
  %22 = icmp ne i32 %21, 0, !dbg !7572
  call void @llvm.dbg.value(metadata i1 %22, metadata !7556, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7557
  %23 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !7573
  %24 = load volatile i32, i32* %23, align 4, !dbg !7573, !tbaa !6850
  %25 = icmp eq i32 %24, 34, !dbg !7575
  %26 = select i1 %25, i1 %22, i1 false, !dbg !7576
  br i1 %26, label %27, label %35, !dbg !7576

27:                                               ; preds = %19
  %28 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %7, i32 0, i32 3, !dbg !7577
  %29 = load volatile i32, i32* %28, align 4, !dbg !7577, !tbaa !5544
  %30 = and i32 %29, -257, !dbg !7577
  store volatile i32 %30, i32* %28, align 4, !dbg !7577, !tbaa !5544
  %31 = load volatile i32, i32* %8, align 4, !dbg !7579, !tbaa !5432
  %32 = and i32 %31, -2, !dbg !7579
  store volatile i32 %32, i32* %8, align 4, !dbg !7579, !tbaa !5432
  %33 = load volatile i32, i32* %8, align 4, !dbg !7580, !tbaa !5432
  %34 = and i32 %33, -65, !dbg !7580
  store volatile i32 %34, i32* %8, align 4, !dbg !7580, !tbaa !5432
  br label %35, !dbg !7581

35:                                               ; preds = %19, %27
  store i32 0, i32* %2, align 4, !dbg !7582, !tbaa !6834
  br label %36, !dbg !7584

36:                                               ; preds = %1, %35
  %37 = phi i32 [ 0, %35 ], [ 2, %1 ], !dbg !7557
  ret i32 %37, !dbg !7585
}

; Function Attrs: nofree noinline nounwind
define dso_local i32 @HAL_UART_DMAResume(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #18 !dbg !7586 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7588, metadata !DIExpression()), !dbg !7593
  %3 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !7594
  %4 = load i32, i32* %3, align 4, !dbg !7594, !tbaa !6834
  %5 = icmp eq i32 %4, 1, !dbg !7594
  br i1 %5, label %39, label %6, !dbg !7597

6:                                                ; preds = %1
  store i32 1, i32* %3, align 4, !dbg !7598, !tbaa !6834
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !7600
  %8 = load volatile i32, i32* %7, align 4, !dbg !7600, !tbaa !6826
  %9 = icmp eq i32 %8, 33, !dbg !7602
  br i1 %9, label %10, label %16, !dbg !7603

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !7604
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %11, align 4, !dbg !7604, !tbaa !6839
  %13 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %12, i32 0, i32 5, !dbg !7604
  %14 = load volatile i32, i32* %13, align 4, !dbg !7604, !tbaa !5432
  %15 = or i32 %14, 128, !dbg !7604
  store volatile i32 %15, i32* %13, align 4, !dbg !7604, !tbaa !5432
  br label %16, !dbg !7606

16:                                               ; preds = %10, %6
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !7607
  %18 = load volatile i32, i32* %17, align 4, !dbg !7607, !tbaa !6850
  %19 = icmp eq i32 %18, 34, !dbg !7608
  br i1 %19, label %20, label %38, !dbg !7609

20:                                               ; preds = %16
  %21 = bitcast i32* %2 to i8*, !dbg !7610
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !7610
  call void @llvm.dbg.declare(metadata i32* %2, metadata !7589, metadata !DIExpression()), !dbg !7610
  store volatile i32 0, i32* %2, align 4, !dbg !7610, !tbaa !2488
  %22 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !7610
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !7610, !tbaa !6839
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 0, !dbg !7610
  %25 = load volatile i32, i32* %24, align 4, !dbg !7610, !tbaa !7111
  store volatile i32 %25, i32* %2, align 4, !dbg !7610, !tbaa !2488
  %26 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 1, !dbg !7610
  %27 = load volatile i32, i32* %26, align 4, !dbg !7610, !tbaa !7071
  store volatile i32 %27, i32* %2, align 4, !dbg !7610, !tbaa !2488
  %28 = load volatile i32, i32* %2, align 4, !dbg !7610, !tbaa !2488
  %29 = bitcast i32* %2 to i8*, !dbg !7611
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29), !dbg !7611
  %30 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 3, !dbg !7612
  %31 = load volatile i32, i32* %30, align 4, !dbg !7612, !tbaa !5544
  %32 = or i32 %31, 256, !dbg !7612
  store volatile i32 %32, i32* %30, align 4, !dbg !7612, !tbaa !5544
  %33 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 5, !dbg !7613
  %34 = load volatile i32, i32* %33, align 4, !dbg !7613, !tbaa !5432
  %35 = or i32 %34, 1, !dbg !7613
  store volatile i32 %35, i32* %33, align 4, !dbg !7613, !tbaa !5432
  %36 = load volatile i32, i32* %33, align 4, !dbg !7614, !tbaa !5432
  %37 = or i32 %36, 64, !dbg !7614
  store volatile i32 %37, i32* %33, align 4, !dbg !7614, !tbaa !5432
  br label %38, !dbg !7615

38:                                               ; preds = %16, %20
  store i32 0, i32* %3, align 4, !dbg !7616, !tbaa !6834
  br label %39, !dbg !7618

39:                                               ; preds = %1, %38
  %40 = phi i32 [ 0, %38 ], [ 2, %1 ], !dbg !7593
  ret i32 %40, !dbg !7619
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_DMAStop(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #8 !dbg !7620 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7622, metadata !DIExpression()), !dbg !7624
  call void @llvm.dbg.value(metadata i32 0, metadata !7623, metadata !DIExpression()), !dbg !7624
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !7625
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !7625, !tbaa !6839
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !7625
  %5 = load volatile i32, i32* %4, align 4, !dbg !7625, !tbaa !5432
  %6 = and i32 %5, 128, !dbg !7625
  %7 = icmp ne i32 %6, 0, !dbg !7625
  call void @llvm.dbg.value(metadata i1 %7, metadata !7623, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7624
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !7626
  %9 = load volatile i32, i32* %8, align 4, !dbg !7626, !tbaa !6826
  %10 = icmp eq i32 %9, 33, !dbg !7628
  %11 = select i1 %10, i1 %7, i1 false, !dbg !7629
  br i1 %11, label %12, label %21, !dbg !7629

12:                                               ; preds = %1
  %13 = load volatile i32, i32* %4, align 4, !dbg !7630, !tbaa !5432
  %14 = and i32 %13, -129, !dbg !7630
  store volatile i32 %14, i32* %4, align 4, !dbg !7630, !tbaa !5432
  %15 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !7632
  %16 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %15, align 4, !dbg !7632, !tbaa !7332
  %17 = icmp eq %struct.__DMA_HandleTypeDef* %16, null, !dbg !7634
  br i1 %17, label %20, label %18, !dbg !7635

18:                                               ; preds = %12
  %19 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %16) #27, !dbg !7636
  br label %20, !dbg !7638

20:                                               ; preds = %18, %12
  call fastcc void @UART_EndTxTransfer(%struct.__UART_HandleTypeDef* noundef %0), !dbg !7639
  br label %21, !dbg !7640

21:                                               ; preds = %20, %1
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !7641, !tbaa !6839
  %23 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %22, i32 0, i32 5, !dbg !7641
  %24 = load volatile i32, i32* %23, align 4, !dbg !7641, !tbaa !5432
  %25 = and i32 %24, 64, !dbg !7641
  %26 = icmp ne i32 %25, 0, !dbg !7641
  call void @llvm.dbg.value(metadata i1 %26, metadata !7623, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7624
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !7642
  %28 = load volatile i32, i32* %27, align 4, !dbg !7642, !tbaa !6850
  %29 = icmp eq i32 %28, 34, !dbg !7644
  %30 = select i1 %29, i1 %26, i1 false, !dbg !7645
  br i1 %30, label %31, label %40, !dbg !7645

31:                                               ; preds = %21
  %32 = load volatile i32, i32* %23, align 4, !dbg !7646, !tbaa !5432
  %33 = and i32 %32, -65, !dbg !7646
  store volatile i32 %33, i32* %23, align 4, !dbg !7646, !tbaa !5432
  %34 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !7648
  %35 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %34, align 4, !dbg !7648, !tbaa !7488
  %36 = icmp eq %struct.__DMA_HandleTypeDef* %35, null, !dbg !7650
  br i1 %36, label %39, label %37, !dbg !7651

37:                                               ; preds = %31
  %38 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %35) #27, !dbg !7652
  br label %39, !dbg !7654

39:                                               ; preds = %37, %31
  call fastcc void @UART_EndRxTransfer(%struct.__UART_HandleTypeDef* noundef %0), !dbg !7655
  br label %40, !dbg !7656

40:                                               ; preds = %39, %21
  ret i32 0, !dbg !7657
}

declare !dbg !7658 dso_local i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef) local_unnamed_addr #26

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Abort(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #8 !dbg !7661 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7663, metadata !DIExpression()), !dbg !7664
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !7665
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !7665, !tbaa !6839
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !7665
  %5 = load volatile i32, i32* %4, align 4, !dbg !7665, !tbaa !5544
  %6 = and i32 %5, -481, !dbg !7665
  store volatile i32 %6, i32* %4, align 4, !dbg !7665, !tbaa !5544
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !7666
  %8 = load volatile i32, i32* %7, align 4, !dbg !7666, !tbaa !5432
  %9 = and i32 %8, -2, !dbg !7666
  store volatile i32 %9, i32* %7, align 4, !dbg !7666, !tbaa !5432
  %10 = load volatile i32, i32* %7, align 4, !dbg !7667, !tbaa !5432
  %11 = and i32 %10, 128, !dbg !7667
  %12 = icmp eq i32 %11, 0, !dbg !7667
  br i1 %12, label %29, label %13, !dbg !7669

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %7, align 4, !dbg !7670, !tbaa !5432
  %15 = and i32 %14, -129, !dbg !7670
  store volatile i32 %15, i32* %7, align 4, !dbg !7670, !tbaa !5432
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !7672
  %17 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !7672, !tbaa !7332
  %18 = icmp eq %struct.__DMA_HandleTypeDef* %17, null, !dbg !7674
  br i1 %18, label %29, label %19, !dbg !7675

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %17, i32 0, i32 8, !dbg !7676
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %20, align 4, !dbg !7678, !tbaa !7345
  %21 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %17) #27, !dbg !7679
  %22 = icmp eq i32 %21, 0, !dbg !7681
  br i1 %22, label %29, label %23, !dbg !7682

23:                                               ; preds = %19
  %24 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !7683, !tbaa !7332
  %25 = call i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef %24) #27, !dbg !7686
  %26 = icmp eq i32 %25, 32, !dbg !7687
  br i1 %26, label %27, label %29, !dbg !7688

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !7689
  store volatile i32 16, i32* %28, align 4, !dbg !7691, !tbaa !6846
  br label %57, !dbg !7692

29:                                               ; preds = %13, %23, %19, %1
  %30 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !7693, !tbaa !6839
  %31 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %30, i32 0, i32 5, !dbg !7693
  %32 = load volatile i32, i32* %31, align 4, !dbg !7693, !tbaa !5432
  %33 = and i32 %32, 64, !dbg !7693
  %34 = icmp eq i32 %33, 0, !dbg !7693
  br i1 %34, label %51, label %35, !dbg !7695

35:                                               ; preds = %29
  %36 = load volatile i32, i32* %31, align 4, !dbg !7696, !tbaa !5432
  %37 = and i32 %36, -65, !dbg !7696
  store volatile i32 %37, i32* %31, align 4, !dbg !7696, !tbaa !5432
  %38 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !7698
  %39 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %38, align 4, !dbg !7698, !tbaa !7488
  %40 = icmp eq %struct.__DMA_HandleTypeDef* %39, null, !dbg !7700
  br i1 %40, label %51, label %41, !dbg !7701

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %39, i32 0, i32 8, !dbg !7702
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %42, align 4, !dbg !7704, !tbaa !7345
  %43 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %39) #27, !dbg !7705
  %44 = icmp eq i32 %43, 0, !dbg !7707
  br i1 %44, label %51, label %45, !dbg !7708

45:                                               ; preds = %41
  %46 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %38, align 4, !dbg !7709, !tbaa !7488
  %47 = call i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef %46) #27, !dbg !7712
  %48 = icmp eq i32 %47, 32, !dbg !7713
  br i1 %48, label %49, label %51, !dbg !7714

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !7715
  store volatile i32 16, i32* %50, align 4, !dbg !7717, !tbaa !6846
  br label %57, !dbg !7718

51:                                               ; preds = %35, %45, %41, %29
  %52 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !7719
  store volatile i16 0, i16* %52, align 2, !dbg !7720, !tbaa !7051
  %53 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !7721
  store volatile i16 0, i16* %53, align 2, !dbg !7722, !tbaa !7167
  %54 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !7723
  store volatile i32 0, i32* %54, align 4, !dbg !7724, !tbaa !6846
  %55 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !7725
  store volatile i32 32, i32* %55, align 4, !dbg !7726, !tbaa !6850
  %56 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !7727
  store volatile i32 32, i32* %56, align 4, !dbg !7728, !tbaa !6826
  br label %57, !dbg !7729

57:                                               ; preds = %51, %49, %27
  %58 = phi i32 [ 3, %27 ], [ 3, %49 ], [ 0, %51 ], !dbg !7664
  ret i32 %58, !dbg !7730
}

declare !dbg !7731 dso_local i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef) local_unnamed_addr #26

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_AbortTransmit(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #8 !dbg !7734 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7736, metadata !DIExpression()), !dbg !7737
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !7738
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !7738, !tbaa !6839
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !7738
  %5 = load volatile i32, i32* %4, align 4, !dbg !7738, !tbaa !5544
  %6 = and i32 %5, -193, !dbg !7738
  store volatile i32 %6, i32* %4, align 4, !dbg !7738, !tbaa !5544
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !7739
  %8 = load volatile i32, i32* %7, align 4, !dbg !7739, !tbaa !5432
  %9 = and i32 %8, 128, !dbg !7739
  %10 = icmp eq i32 %9, 0, !dbg !7739
  br i1 %10, label %27, label %11, !dbg !7741

11:                                               ; preds = %1
  %12 = load volatile i32, i32* %7, align 4, !dbg !7742, !tbaa !5432
  %13 = and i32 %12, -129, !dbg !7742
  store volatile i32 %13, i32* %7, align 4, !dbg !7742, !tbaa !5432
  %14 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !7744
  %15 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %14, align 4, !dbg !7744, !tbaa !7332
  %16 = icmp eq %struct.__DMA_HandleTypeDef* %15, null, !dbg !7746
  br i1 %16, label %27, label %17, !dbg !7747

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %15, i32 0, i32 8, !dbg !7748
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %18, align 4, !dbg !7750, !tbaa !7345
  %19 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %15) #27, !dbg !7751
  %20 = icmp eq i32 %19, 0, !dbg !7753
  br i1 %20, label %27, label %21, !dbg !7754

21:                                               ; preds = %17
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %14, align 4, !dbg !7755, !tbaa !7332
  %23 = call i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef %22) #27, !dbg !7758
  %24 = icmp eq i32 %23, 32, !dbg !7759
  br i1 %24, label %25, label %27, !dbg !7760

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !7761
  store volatile i32 16, i32* %26, align 4, !dbg !7763, !tbaa !6846
  br label %30, !dbg !7764

27:                                               ; preds = %11, %21, %17, %1
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !7765
  store volatile i16 0, i16* %28, align 2, !dbg !7766, !tbaa !7051
  %29 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !7767
  store volatile i32 32, i32* %29, align 4, !dbg !7768, !tbaa !6826
  br label %30, !dbg !7769

30:                                               ; preds = %27, %25
  %31 = phi i32 [ 3, %25 ], [ 0, %27 ], !dbg !7737
  ret i32 %31, !dbg !7770
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_AbortReceive(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #8 !dbg !7771 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7773, metadata !DIExpression()), !dbg !7774
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !7775
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !7775, !tbaa !6839
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !7775
  %5 = load volatile i32, i32* %4, align 4, !dbg !7775, !tbaa !5544
  %6 = and i32 %5, -289, !dbg !7775
  store volatile i32 %6, i32* %4, align 4, !dbg !7775, !tbaa !5544
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !7776
  %8 = load volatile i32, i32* %7, align 4, !dbg !7776, !tbaa !5432
  %9 = and i32 %8, -2, !dbg !7776
  store volatile i32 %9, i32* %7, align 4, !dbg !7776, !tbaa !5432
  %10 = load volatile i32, i32* %7, align 4, !dbg !7777, !tbaa !5432
  %11 = and i32 %10, 64, !dbg !7777
  %12 = icmp eq i32 %11, 0, !dbg !7777
  br i1 %12, label %29, label %13, !dbg !7779

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %7, align 4, !dbg !7780, !tbaa !5432
  %15 = and i32 %14, -65, !dbg !7780
  store volatile i32 %15, i32* %7, align 4, !dbg !7780, !tbaa !5432
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !7782
  %17 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !7782, !tbaa !7488
  %18 = icmp eq %struct.__DMA_HandleTypeDef* %17, null, !dbg !7784
  br i1 %18, label %29, label %19, !dbg !7785

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %17, i32 0, i32 8, !dbg !7786
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %20, align 4, !dbg !7788, !tbaa !7345
  %21 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %17) #27, !dbg !7789
  %22 = icmp eq i32 %21, 0, !dbg !7791
  br i1 %22, label %29, label %23, !dbg !7792

23:                                               ; preds = %19
  %24 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !7793, !tbaa !7488
  %25 = call i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef %24) #27, !dbg !7796
  %26 = icmp eq i32 %25, 32, !dbg !7797
  br i1 %26, label %27, label %29, !dbg !7798

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !7799
  store volatile i32 16, i32* %28, align 4, !dbg !7801, !tbaa !6846
  br label %32, !dbg !7802

29:                                               ; preds = %13, %23, %19, %1
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !7803
  store volatile i16 0, i16* %30, align 2, !dbg !7804, !tbaa !7167
  %31 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !7805
  store volatile i32 32, i32* %31, align 4, !dbg !7806, !tbaa !6850
  br label %32, !dbg !7807

32:                                               ; preds = %29, %27
  %33 = phi i32 [ 3, %27 ], [ 0, %29 ], !dbg !7774
  ret i32 %33, !dbg !7808
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Abort_IT(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #8 !dbg !7809 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7811, metadata !DIExpression()), !dbg !7813
  call void @llvm.dbg.value(metadata i32 1, metadata !7812, metadata !DIExpression()), !dbg !7813
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !7814
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !7814, !tbaa !6839
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !7814
  %5 = load volatile i32, i32* %4, align 4, !dbg !7814, !tbaa !5544
  %6 = and i32 %5, -481, !dbg !7814
  store volatile i32 %6, i32* %4, align 4, !dbg !7814, !tbaa !5544
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !7815
  %8 = load volatile i32, i32* %7, align 4, !dbg !7815, !tbaa !5432
  %9 = and i32 %8, -2, !dbg !7815
  store volatile i32 %9, i32* %7, align 4, !dbg !7815, !tbaa !5432
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !7816
  %11 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %10, align 4, !dbg !7816, !tbaa !7332
  %12 = icmp eq %struct.__DMA_HandleTypeDef* %11, null, !dbg !7818
  br i1 %12, label %19, label %13, !dbg !7819

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %7, align 4, !dbg !7820, !tbaa !5432
  %15 = and i32 %14, 128, !dbg !7820
  %16 = icmp eq i32 %15, 0, !dbg !7820
  %17 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %11, i32 0, i32 8, !dbg !7823
  %18 = select i1 %16, void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)* @UART_DMATxAbortCallback
  store void (%struct.__DMA_HandleTypeDef*)* %18, void (%struct.__DMA_HandleTypeDef*)** %17, align 4, !dbg !7823, !tbaa !7345
  br label %19, !dbg !7824

19:                                               ; preds = %13, %1
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !7824
  %21 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %20, align 4, !dbg !7824, !tbaa !7488
  %22 = icmp eq %struct.__DMA_HandleTypeDef* %21, null, !dbg !7826
  br i1 %22, label %29, label %23, !dbg !7827

23:                                               ; preds = %19
  %24 = load volatile i32, i32* %7, align 4, !dbg !7828, !tbaa !5432
  %25 = and i32 %24, 64, !dbg !7828
  %26 = icmp eq i32 %25, 0, !dbg !7828
  %27 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %21, i32 0, i32 8, !dbg !7831
  %28 = select i1 %26, void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)* @UART_DMARxAbortCallback
  store void (%struct.__DMA_HandleTypeDef*)* %28, void (%struct.__DMA_HandleTypeDef*)** %27, align 4, !dbg !7831, !tbaa !7345
  br label %29, !dbg !7832

29:                                               ; preds = %23, %19
  %30 = load volatile i32, i32* %7, align 4, !dbg !7832, !tbaa !5432
  %31 = and i32 %30, 128, !dbg !7832
  %32 = icmp eq i32 %31, 0, !dbg !7832
  br i1 %32, label %42, label %33, !dbg !7834

33:                                               ; preds = %29
  %34 = load volatile i32, i32* %7, align 4, !dbg !7835, !tbaa !5432
  %35 = and i32 %34, -129, !dbg !7835
  store volatile i32 %35, i32* %7, align 4, !dbg !7835, !tbaa !5432
  br i1 %12, label %42, label %36, !dbg !7837

36:                                               ; preds = %33
  %37 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %11) #27, !dbg !7838
  %38 = icmp eq i32 %37, 0, !dbg !7842
  br i1 %38, label %42, label %39, !dbg !7843

39:                                               ; preds = %36
  %40 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %10, align 4, !dbg !7844, !tbaa !7332
  %41 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %40, i32 0, i32 8, !dbg !7846
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %41, align 4, !dbg !7847, !tbaa !7345
  br label %42, !dbg !7848

42:                                               ; preds = %36, %33, %39, %29
  %43 = phi i32 [ 1, %39 ], [ 1, %33 ], [ 1, %29 ], [ 0, %36 ], !dbg !7813
  call void @llvm.dbg.value(metadata i32 %43, metadata !7812, metadata !DIExpression()), !dbg !7813
  %44 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !7849, !tbaa !6839
  %45 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %44, i32 0, i32 5, !dbg !7849
  %46 = load volatile i32, i32* %45, align 4, !dbg !7849, !tbaa !5432
  %47 = and i32 %46, 64, !dbg !7849
  %48 = icmp eq i32 %47, 0, !dbg !7849
  br i1 %48, label %60, label %49, !dbg !7851

49:                                               ; preds = %42
  %50 = load volatile i32, i32* %45, align 4, !dbg !7852, !tbaa !5432
  %51 = and i32 %50, -65, !dbg !7852
  store volatile i32 %51, i32* %45, align 4, !dbg !7852, !tbaa !5432
  %52 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %20, align 4, !dbg !7854, !tbaa !7488
  %53 = icmp eq %struct.__DMA_HandleTypeDef* %52, null, !dbg !7856
  br i1 %53, label %60, label %54, !dbg !7857

54:                                               ; preds = %49
  %55 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %52) #27, !dbg !7858
  %56 = icmp eq i32 %55, 0, !dbg !7861
  br i1 %56, label %60, label %57, !dbg !7862

57:                                               ; preds = %54
  %58 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %20, align 4, !dbg !7863, !tbaa !7488
  %59 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %58, i32 0, i32 8, !dbg !7865
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %59, align 4, !dbg !7866, !tbaa !7345
  call void @llvm.dbg.value(metadata i32 1, metadata !7812, metadata !DIExpression()), !dbg !7813
  br label %60, !dbg !7867

60:                                               ; preds = %54, %49, %57, %42
  %61 = phi i32 [ 1, %57 ], [ %43, %49 ], [ %43, %42 ], [ 0, %54 ], !dbg !7813
  call void @llvm.dbg.value(metadata i32 %61, metadata !7812, metadata !DIExpression()), !dbg !7813
  %62 = icmp eq i32 %61, 1, !dbg !7868
  br i1 %62, label %63, label %69, !dbg !7870

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !7871
  store volatile i16 0, i16* %64, align 2, !dbg !7873, !tbaa !7051
  %65 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !7874
  store volatile i16 0, i16* %65, align 2, !dbg !7875, !tbaa !7167
  %66 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !7876
  store volatile i32 0, i32* %66, align 4, !dbg !7877, !tbaa !6846
  %67 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !7878
  store volatile i32 32, i32* %67, align 4, !dbg !7879, !tbaa !6826
  %68 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !7880
  store volatile i32 32, i32* %68, align 4, !dbg !7881, !tbaa !6850
  call void @HAL_UART_AbortCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !7882
  br label %69, !dbg !7883

69:                                               ; preds = %63, %60
  ret i32 0, !dbg !7884
}

; Function Attrs: noinline nounwind
define internal void @UART_DMATxAbortCallback(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #8 !dbg !7885 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !7887, metadata !DIExpression()), !dbg !7889
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !7890
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !7890
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !7890, !tbaa !7366
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !7888, metadata !DIExpression()), !dbg !7889
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 8, !dbg !7891
  %6 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %5, align 4, !dbg !7891, !tbaa !7332
  %7 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %6, i32 0, i32 8, !dbg !7892
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %7, align 4, !dbg !7893, !tbaa !7345
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 9, !dbg !7894
  %9 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %8, align 4, !dbg !7894, !tbaa !7488
  %10 = icmp eq %struct.__DMA_HandleTypeDef* %9, null, !dbg !7896
  br i1 %10, label %15, label %11, !dbg !7897

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %9, i32 0, i32 8, !dbg !7898
  %13 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %12, align 4, !dbg !7898, !tbaa !7345
  %14 = icmp eq void (%struct.__DMA_HandleTypeDef*)* %13, null, !dbg !7901
  br i1 %14, label %15, label %21, !dbg !7902

15:                                               ; preds = %11, %1
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !7903
  store volatile i16 0, i16* %16, align 2, !dbg !7904, !tbaa !7051
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !7905
  store volatile i16 0, i16* %17, align 2, !dbg !7906, !tbaa !7167
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 13, !dbg !7907
  store volatile i32 0, i32* %18, align 4, !dbg !7908, !tbaa !6846
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 11, !dbg !7909
  store volatile i32 32, i32* %19, align 4, !dbg !7910, !tbaa !6826
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !7911
  store volatile i32 32, i32* %20, align 4, !dbg !7912, !tbaa !6850
  call void @HAL_UART_AbortCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !7913
  br label %21, !dbg !7914

21:                                               ; preds = %11, %15
  ret void, !dbg !7914
}

; Function Attrs: noinline nounwind
define internal void @UART_DMARxAbortCallback(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #8 !dbg !7915 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !7917, metadata !DIExpression()), !dbg !7919
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !7920
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !7920
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !7920, !tbaa !7366
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !7918, metadata !DIExpression()), !dbg !7919
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 9, !dbg !7921
  %6 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %5, align 4, !dbg !7921, !tbaa !7488
  %7 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %6, i32 0, i32 8, !dbg !7922
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %7, align 4, !dbg !7923, !tbaa !7345
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 8, !dbg !7924
  %9 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %8, align 4, !dbg !7924, !tbaa !7332
  %10 = icmp eq %struct.__DMA_HandleTypeDef* %9, null, !dbg !7926
  br i1 %10, label %15, label %11, !dbg !7927

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %9, i32 0, i32 8, !dbg !7928
  %13 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %12, align 4, !dbg !7928, !tbaa !7345
  %14 = icmp eq void (%struct.__DMA_HandleTypeDef*)* %13, null, !dbg !7931
  br i1 %14, label %15, label %21, !dbg !7932

15:                                               ; preds = %11, %1
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !7933
  store volatile i16 0, i16* %16, align 2, !dbg !7934, !tbaa !7051
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !7935
  store volatile i16 0, i16* %17, align 2, !dbg !7936, !tbaa !7167
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 13, !dbg !7937
  store volatile i32 0, i32* %18, align 4, !dbg !7938, !tbaa !6846
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 11, !dbg !7939
  store volatile i32 32, i32* %19, align 4, !dbg !7940, !tbaa !6826
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !7941
  store volatile i32 32, i32* %20, align 4, !dbg !7942, !tbaa !6850
  call void @HAL_UART_AbortCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !7943
  br label %21, !dbg !7944

21:                                               ; preds = %11, %15
  ret void, !dbg !7944
}

declare !dbg !7945 dso_local i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef) local_unnamed_addr #26

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_AbortCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #8 !dbg !7946 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7948, metadata !DIExpression()), !dbg !7949
  ret void, !dbg !7950
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_AbortTransmit_IT(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #8 !dbg !7951 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !7953, metadata !DIExpression()), !dbg !7954
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !7955
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !7955, !tbaa !6839
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !7955
  %5 = load volatile i32, i32* %4, align 4, !dbg !7955, !tbaa !5544
  %6 = and i32 %5, -193, !dbg !7955
  store volatile i32 %6, i32* %4, align 4, !dbg !7955, !tbaa !5544
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !7956
  %8 = load volatile i32, i32* %7, align 4, !dbg !7956, !tbaa !5432
  %9 = and i32 %8, 128, !dbg !7956
  %10 = icmp eq i32 %9, 0, !dbg !7956
  br i1 %10, label %28, label %11, !dbg !7958

11:                                               ; preds = %1
  %12 = load volatile i32, i32* %7, align 4, !dbg !7959, !tbaa !5432
  %13 = and i32 %12, -129, !dbg !7959
  store volatile i32 %13, i32* %7, align 4, !dbg !7959, !tbaa !5432
  %14 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !7961
  %15 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %14, align 4, !dbg !7961, !tbaa !7332
  %16 = icmp eq %struct.__DMA_HandleTypeDef* %15, null, !dbg !7963
  br i1 %16, label %25, label %17, !dbg !7964

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %15, i32 0, i32 8, !dbg !7965
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMATxOnlyAbortCallback, void (%struct.__DMA_HandleTypeDef*)** %18, align 4, !dbg !7967, !tbaa !7345
  %19 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %15) #27, !dbg !7968
  %20 = icmp eq i32 %19, 0, !dbg !7970
  br i1 %20, label %31, label %21, !dbg !7971

21:                                               ; preds = %17
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %14, align 4, !dbg !7972, !tbaa !7332
  %23 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 8, !dbg !7974
  %24 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %23, align 4, !dbg !7974, !tbaa !7345
  call void %24(%struct.__DMA_HandleTypeDef* noundef %22) #27, !dbg !7975
  br label %31, !dbg !7976

25:                                               ; preds = %11
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !7977
  store volatile i16 0, i16* %26, align 2, !dbg !7979, !tbaa !7051
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !7980
  store volatile i32 32, i32* %27, align 4, !dbg !7981, !tbaa !6826
  call void @HAL_UART_AbortTransmitCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !7982
  br label %31

28:                                               ; preds = %1
  %29 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !7983
  store volatile i16 0, i16* %29, align 2, !dbg !7985, !tbaa !7051
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !7986
  store volatile i32 32, i32* %30, align 4, !dbg !7987, !tbaa !6826
  call void @HAL_UART_AbortTransmitCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !7988
  br label %31

31:                                               ; preds = %25, %21, %17, %28
  ret i32 0, !dbg !7989
}

; Function Attrs: noinline nounwind
define internal void @UART_DMATxOnlyAbortCallback(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #8 !dbg !7990 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !7992, metadata !DIExpression()), !dbg !7994
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !7995
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !7995
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !7995, !tbaa !7366
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !7993, metadata !DIExpression()), !dbg !7994
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !7996
  store volatile i16 0, i16* %5, align 2, !dbg !7997, !tbaa !7051
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 11, !dbg !7998
  store volatile i32 32, i32* %6, align 4, !dbg !7999, !tbaa !6826
  call void @HAL_UART_AbortTransmitCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !8000
  ret void, !dbg !8001
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_AbortTransmitCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #8 !dbg !8002 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8004, metadata !DIExpression()), !dbg !8005
  ret void, !dbg !8006
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_AbortReceive_IT(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #8 !dbg !8007 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8009, metadata !DIExpression()), !dbg !8010
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8011
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !8011, !tbaa !6839
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !8011
  %5 = load volatile i32, i32* %4, align 4, !dbg !8011, !tbaa !5544
  %6 = and i32 %5, -289, !dbg !8011
  store volatile i32 %6, i32* %4, align 4, !dbg !8011, !tbaa !5544
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !8012
  %8 = load volatile i32, i32* %7, align 4, !dbg !8012, !tbaa !5432
  %9 = and i32 %8, -2, !dbg !8012
  store volatile i32 %9, i32* %7, align 4, !dbg !8012, !tbaa !5432
  %10 = load volatile i32, i32* %7, align 4, !dbg !8013, !tbaa !5432
  %11 = and i32 %10, 64, !dbg !8013
  %12 = icmp eq i32 %11, 0, !dbg !8013
  br i1 %12, label %30, label %13, !dbg !8015

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %7, align 4, !dbg !8016, !tbaa !5432
  %15 = and i32 %14, -65, !dbg !8016
  store volatile i32 %15, i32* %7, align 4, !dbg !8016, !tbaa !5432
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !8018
  %17 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !8018, !tbaa !7488
  %18 = icmp eq %struct.__DMA_HandleTypeDef* %17, null, !dbg !8020
  br i1 %18, label %27, label %19, !dbg !8021

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %17, i32 0, i32 8, !dbg !8022
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMARxOnlyAbortCallback, void (%struct.__DMA_HandleTypeDef*)** %20, align 4, !dbg !8024, !tbaa !7345
  %21 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %17) #27, !dbg !8025
  %22 = icmp eq i32 %21, 0, !dbg !8027
  br i1 %22, label %33, label %23, !dbg !8028

23:                                               ; preds = %19
  %24 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !8029, !tbaa !7488
  %25 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %24, i32 0, i32 8, !dbg !8031
  %26 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %25, align 4, !dbg !8031, !tbaa !7345
  call void %26(%struct.__DMA_HandleTypeDef* noundef %24) #27, !dbg !8032
  br label %33, !dbg !8033

27:                                               ; preds = %13
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !8034
  store volatile i16 0, i16* %28, align 2, !dbg !8036, !tbaa !7167
  %29 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !8037
  store volatile i32 32, i32* %29, align 4, !dbg !8038, !tbaa !6850
  call void @HAL_UART_AbortReceiveCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8039
  br label %33

30:                                               ; preds = %1
  %31 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !8040
  store volatile i16 0, i16* %31, align 2, !dbg !8042, !tbaa !7167
  %32 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !8043
  store volatile i32 32, i32* %32, align 4, !dbg !8044, !tbaa !6850
  call void @HAL_UART_AbortReceiveCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8045
  br label %33

33:                                               ; preds = %27, %23, %19, %30
  ret i32 0, !dbg !8046
}

; Function Attrs: noinline nounwind
define internal void @UART_DMARxOnlyAbortCallback(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #8 !dbg !8047 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !8049, metadata !DIExpression()), !dbg !8051
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !8052
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !8052
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !8052, !tbaa !7366
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !8050, metadata !DIExpression()), !dbg !8051
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !8053
  store volatile i16 0, i16* %5, align 2, !dbg !8054, !tbaa !7167
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !8055
  store volatile i32 32, i32* %6, align 4, !dbg !8056, !tbaa !6850
  call void @HAL_UART_AbortReceiveCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !8057
  ret void, !dbg !8058
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_AbortReceiveCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #8 !dbg !8059 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8061, metadata !DIExpression()), !dbg !8062
  ret void, !dbg !8063
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_UART_IRQHandler(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #8 !dbg !8064 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8066, metadata !DIExpression()), !dbg !8072
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8073
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !8073, !tbaa !6839
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 0, !dbg !8073
  %5 = load volatile i32, i32* %4, align 4, !dbg !8073, !tbaa !7111
  call void @llvm.dbg.value(metadata i32 %5, metadata !8067, metadata !DIExpression()), !dbg !8072
  %6 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !8074
  %7 = load volatile i32, i32* %6, align 4, !dbg !8074, !tbaa !5544
  call void @llvm.dbg.value(metadata i32 %7, metadata !8068, metadata !DIExpression()), !dbg !8072
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !8075
  %9 = load volatile i32, i32* %8, align 4, !dbg !8075, !tbaa !5432
  call void @llvm.dbg.value(metadata i32 %9, metadata !8069, metadata !DIExpression()), !dbg !8072
  call void @llvm.dbg.value(metadata i32 0, metadata !8070, metadata !DIExpression()), !dbg !8072
  call void @llvm.dbg.value(metadata i32 0, metadata !8071, metadata !DIExpression()), !dbg !8072
  call void @llvm.dbg.value(metadata i32 %5, metadata !8070, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !8072
  %10 = and i32 %5, 32
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %5, 47, !dbg !8076
  %13 = icmp ne i32 %12, 32, !dbg !8076
  %14 = and i32 %7, 32
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %13, i1 true, i1 %15, !dbg !8076
  br i1 %16, label %18, label %17, !dbg !8076

17:                                               ; preds = %1
  call fastcc void @UART_Receive_IT(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8077
  br label %115, !dbg !8082

18:                                               ; preds = %1
  %19 = and i32 %5, 15, !dbg !8083
  call void @llvm.dbg.value(metadata i32 %19, metadata !8070, metadata !DIExpression()), !dbg !8072
  %20 = icmp eq i32 %19, 0, !dbg !8084
  br i1 %20, label %101, label %21, !dbg !8086

21:                                               ; preds = %18
  %22 = and i32 %9, 1, !dbg !8087
  %23 = icmp eq i32 %22, 0, !dbg !8088
  %24 = and i32 %7, 288
  %25 = icmp eq i32 %24, 0
  %26 = select i1 %23, i1 %25, i1 false, !dbg !8089
  br i1 %26, label %101, label %27, !dbg !8089

27:                                               ; preds = %21
  %28 = and i32 %5, 1, !dbg !8090
  %29 = icmp eq i32 %28, 0, !dbg !8093
  %30 = and i32 %7, 256
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %29, i1 true, i1 %31, !dbg !8094
  br i1 %32, label %37, label %33, !dbg !8094

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !8095
  %35 = load volatile i32, i32* %34, align 4, !dbg !8097, !tbaa !6846
  %36 = or i32 %35, 1, !dbg !8097
  store volatile i32 %36, i32* %34, align 4, !dbg !8097, !tbaa !6846
  br label %37, !dbg !8098

37:                                               ; preds = %33, %27
  %38 = and i32 %5, 4, !dbg !8099
  %39 = icmp eq i32 %38, 0, !dbg !8101
  %40 = select i1 %39, i1 true, i1 %23, !dbg !8102
  br i1 %40, label %45, label %41, !dbg !8102

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !8103
  %43 = load volatile i32, i32* %42, align 4, !dbg !8105, !tbaa !6846
  %44 = or i32 %43, 2, !dbg !8105
  store volatile i32 %44, i32* %42, align 4, !dbg !8105, !tbaa !6846
  br label %45, !dbg !8106

45:                                               ; preds = %37, %41
  %46 = and i32 %5, 2, !dbg !8107
  %47 = icmp eq i32 %46, 0, !dbg !8109
  %48 = select i1 %47, i1 true, i1 %23, !dbg !8110
  br i1 %48, label %53, label %49, !dbg !8110

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !8111
  %51 = load volatile i32, i32* %50, align 4, !dbg !8113, !tbaa !6846
  %52 = or i32 %51, 4, !dbg !8113
  store volatile i32 %52, i32* %50, align 4, !dbg !8113, !tbaa !6846
  br label %53, !dbg !8114

53:                                               ; preds = %45, %49
  %54 = and i32 %5, 8, !dbg !8115
  %55 = icmp eq i32 %54, 0, !dbg !8117
  %56 = select i1 %55, i1 true, i1 %23, !dbg !8118
  br i1 %56, label %61, label %57, !dbg !8118

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !8119
  %59 = load volatile i32, i32* %58, align 4, !dbg !8121, !tbaa !6846
  %60 = or i32 %59, 8, !dbg !8121
  store volatile i32 %60, i32* %58, align 4, !dbg !8121, !tbaa !6846
  br label %61, !dbg !8122

61:                                               ; preds = %53, %57
  %62 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !8123
  %63 = load volatile i32, i32* %62, align 4, !dbg !8123, !tbaa !6846
  %64 = icmp eq i32 %63, 0, !dbg !8125
  br i1 %64, label %115, label %65, !dbg !8126

65:                                               ; preds = %61
  %66 = select i1 %11, i1 true, i1 %15, !dbg !8127
  br i1 %66, label %68, label %67, !dbg !8127

67:                                               ; preds = %65
  call fastcc void @UART_Receive_IT(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8130
  br label %68, !dbg !8132

68:                                               ; preds = %67, %65
  %69 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !8133, !tbaa !6839
  %70 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %69, i32 0, i32 5, !dbg !8133
  %71 = load volatile i32, i32* %70, align 4, !dbg !8133, !tbaa !5432
  %72 = and i32 %71, 64, !dbg !8133
  %73 = icmp ne i32 %72, 0, !dbg !8133
  call void @llvm.dbg.value(metadata i1 %73, metadata !8071, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8072
  %74 = load volatile i32, i32* %62, align 4, !dbg !8134, !tbaa !6846
  %75 = and i32 %74, 8, !dbg !8136
  %76 = icmp ne i32 %75, 0, !dbg !8137
  %77 = select i1 %76, i1 true, i1 %73, !dbg !8138
  br i1 %77, label %78, label %100, !dbg !8138

78:                                               ; preds = %68
  call fastcc void @UART_EndRxTransfer(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8139
  %79 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !8141, !tbaa !6839
  %80 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %79, i32 0, i32 5, !dbg !8141
  %81 = load volatile i32, i32* %80, align 4, !dbg !8141, !tbaa !5432
  %82 = and i32 %81, 64, !dbg !8141
  %83 = icmp eq i32 %82, 0, !dbg !8141
  br i1 %83, label %99, label %84, !dbg !8143

84:                                               ; preds = %78
  %85 = load volatile i32, i32* %80, align 4, !dbg !8144, !tbaa !5432
  %86 = and i32 %85, -65, !dbg !8144
  store volatile i32 %86, i32* %80, align 4, !dbg !8144, !tbaa !5432
  %87 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !8146
  %88 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %87, align 4, !dbg !8146, !tbaa !7488
  %89 = icmp eq %struct.__DMA_HandleTypeDef* %88, null, !dbg !8148
  br i1 %89, label %98, label %90, !dbg !8149

90:                                               ; preds = %84
  %91 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %88, i32 0, i32 8, !dbg !8150
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMAAbortOnError, void (%struct.__DMA_HandleTypeDef*)** %91, align 4, !dbg !8152, !tbaa !7345
  %92 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %88) #27, !dbg !8153
  %93 = icmp eq i32 %92, 0, !dbg !8155
  br i1 %93, label %115, label %94, !dbg !8156

94:                                               ; preds = %90
  %95 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %87, align 4, !dbg !8157, !tbaa !7488
  %96 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %95, i32 0, i32 8, !dbg !8159
  %97 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %96, align 4, !dbg !8159, !tbaa !7345
  call void %97(%struct.__DMA_HandleTypeDef* noundef %95) #27, !dbg !8160
  br label %115, !dbg !8161

98:                                               ; preds = %84
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8162
  br label %115

99:                                               ; preds = %78
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8164
  br label %115

100:                                              ; preds = %68
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8166
  store volatile i32 0, i32* %62, align 4, !dbg !8168, !tbaa !6846
  br label %115

101:                                              ; preds = %21, %18
  %102 = and i32 %5, 128, !dbg !8169
  %103 = icmp eq i32 %102, 0, !dbg !8171
  %104 = and i32 %7, 128
  %105 = icmp eq i32 %104, 0
  %106 = select i1 %103, i1 true, i1 %105, !dbg !8172
  br i1 %106, label %108, label %107, !dbg !8172

107:                                              ; preds = %101
  call fastcc void @UART_Transmit_IT(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8173
  br label %115, !dbg !8175

108:                                              ; preds = %101
  %109 = and i32 %5, 64, !dbg !8176
  %110 = icmp eq i32 %109, 0, !dbg !8178
  %111 = and i32 %7, 64
  %112 = icmp eq i32 %111, 0
  %113 = select i1 %110, i1 true, i1 %112, !dbg !8179
  br i1 %113, label %115, label %114, !dbg !8179

114:                                              ; preds = %108
  call fastcc void @UART_EndTransmit_IT(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8180
  br label %115, !dbg !8182

115:                                              ; preds = %108, %61, %99, %90, %94, %98, %100, %114, %107, %17
  ret void, !dbg !8183
}

; Function Attrs: noinline nounwind
define internal fastcc void @UART_Receive_IT(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #8 !dbg !8184 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8186, metadata !DIExpression()), !dbg !8188
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !8189
  %3 = load volatile i32, i32* %2, align 4, !dbg !8189, !tbaa !6850
  %4 = icmp eq i32 %3, 34, !dbg !8191
  br i1 %4, label %5, label %63, !dbg !8192

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1, !dbg !8193
  %7 = load i32, i32* %6, align 4, !dbg !8193, !tbaa !6869
  %8 = icmp eq i32 %7, 4096, !dbg !8196
  br i1 %8, label %9, label %29, !dbg !8197

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !8198
  %11 = bitcast i8** %10 to i16**, !dbg !8198
  %12 = load i16*, i16** %11, align 4, !dbg !8198, !tbaa !7285
  call void @llvm.dbg.value(metadata i16* %12, metadata !8187, metadata !DIExpression()), !dbg !8188
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3, !dbg !8200
  %14 = load i32, i32* %13, align 4, !dbg !8200, !tbaa !6871
  %15 = icmp eq i32 %14, 0, !dbg !8202
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8203
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %16, align 4, !dbg !8203, !tbaa !6839
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 1, !dbg !8203
  %19 = load volatile i32, i32* %18, align 4, !dbg !8203, !tbaa !7071
  %20 = trunc i32 %19 to i16, !dbg !8203
  br i1 %15, label %21, label %25, !dbg !8204

21:                                               ; preds = %9
  %22 = and i16 %20, 511, !dbg !8205
  store i16 %22, i16* %12, align 2, !dbg !8207, !tbaa !7066
  %23 = load i8*, i8** %10, align 4, !dbg !8208, !tbaa !7285
  %24 = getelementptr inbounds i8, i8* %23, i32 2, !dbg !8208
  store i8* %24, i8** %10, align 4, !dbg !8208, !tbaa !7285
  br label %47, !dbg !8209

25:                                               ; preds = %9
  %26 = and i16 %20, 255, !dbg !8210
  store i16 %26, i16* %12, align 2, !dbg !8212, !tbaa !7066
  %27 = load i8*, i8** %10, align 4, !dbg !8213, !tbaa !7285
  %28 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !8213
  store i8* %28, i8** %10, align 4, !dbg !8213, !tbaa !7285
  br label %47

29:                                               ; preds = %5
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3, !dbg !8214
  %31 = load i32, i32* %30, align 4, !dbg !8214, !tbaa !6871
  %32 = icmp eq i32 %31, 0, !dbg !8217
  %33 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8218
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %33, align 4, !dbg !8218, !tbaa !6839
  %35 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 1, !dbg !8218
  %36 = load volatile i32, i32* %35, align 4, !dbg !8218, !tbaa !7071
  %37 = trunc i32 %36 to i8, !dbg !8218
  br i1 %32, label %38, label %42, !dbg !8219

38:                                               ; preds = %29
  %39 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !8220
  %40 = load i8*, i8** %39, align 4, !dbg !8222, !tbaa !7285
  %41 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !8222
  store i8* %41, i8** %39, align 4, !dbg !8222, !tbaa !7285
  store i8 %37, i8* %40, align 1, !dbg !8223, !tbaa !1609
  br label %47, !dbg !8224

42:                                               ; preds = %29
  %43 = and i8 %37, 127, !dbg !8225
  %44 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !8227
  %45 = load i8*, i8** %44, align 4, !dbg !8228, !tbaa !7285
  %46 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !8228
  store i8* %46, i8** %44, align 4, !dbg !8228, !tbaa !7285
  store i8 %43, i8* %45, align 1, !dbg !8229, !tbaa !1609
  br label %47

47:                                               ; preds = %38, %42, %21, %25
  %48 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !8230
  %49 = load volatile i16, i16* %48, align 2, !dbg !8232, !tbaa !7167
  %50 = add i16 %49, -1, !dbg !8232
  store volatile i16 %50, i16* %48, align 2, !dbg !8232, !tbaa !7167
  %51 = icmp eq i16 %50, 0, !dbg !8233
  br i1 %51, label %52, label %63, !dbg !8234

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8235
  %54 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %53, align 4, !dbg !8235, !tbaa !6839
  %55 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %54, i32 0, i32 3, !dbg !8235
  %56 = load volatile i32, i32* %55, align 4, !dbg !8235, !tbaa !5544
  %57 = and i32 %56, -33, !dbg !8235
  store volatile i32 %57, i32* %55, align 4, !dbg !8235, !tbaa !5544
  %58 = load volatile i32, i32* %55, align 4, !dbg !8237, !tbaa !5544
  %59 = and i32 %58, -257, !dbg !8237
  store volatile i32 %59, i32* %55, align 4, !dbg !8237, !tbaa !5544
  %60 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %54, i32 0, i32 5, !dbg !8238
  %61 = load volatile i32, i32* %60, align 4, !dbg !8238, !tbaa !5432
  %62 = and i32 %61, -2, !dbg !8238
  store volatile i32 %62, i32* %60, align 4, !dbg !8238, !tbaa !5432
  store volatile i32 32, i32* %2, align 4, !dbg !8239, !tbaa !6850
  call void @HAL_UART_RxCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8240
  br label %63, !dbg !8241

63:                                               ; preds = %1, %47, %52
  ret void, !dbg !8242
}

; Function Attrs: noinline nounwind
define internal void @UART_DMAAbortOnError(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #8 !dbg !8243 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !8245, metadata !DIExpression()), !dbg !8247
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !8248
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !8248
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !8248, !tbaa !7366
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !8246, metadata !DIExpression()), !dbg !8247
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !8249
  store volatile i16 0, i16* %5, align 2, !dbg !8250, !tbaa !7167
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !8251
  store volatile i16 0, i16* %6, align 2, !dbg !8252, !tbaa !7051
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !8253
  ret void, !dbg !8254
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @UART_Transmit_IT(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #13 !dbg !8255 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8257, metadata !DIExpression()), !dbg !8259
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !8260
  %3 = load volatile i32, i32* %2, align 4, !dbg !8260, !tbaa !6826
  %4 = icmp eq i32 %3, 33, !dbg !8262
  br i1 %4, label %5, label %48, !dbg !8263

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1, !dbg !8264
  %7 = load i32, i32* %6, align 4, !dbg !8264, !tbaa !6869
  %8 = icmp eq i32 %7, 4096, !dbg !8267
  %9 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 2, !dbg !8268
  br i1 %8, label %10, label %27, !dbg !8269

10:                                               ; preds = %5
  %11 = bitcast i8** %9 to i16**, !dbg !8270
  %12 = load i16*, i16** %11, align 4, !dbg !8270, !tbaa !7249
  call void @llvm.dbg.value(metadata i16* %12, metadata !8258, metadata !DIExpression()), !dbg !8259
  %13 = load i16, i16* %12, align 2, !dbg !8272, !tbaa !7066
  %14 = and i16 %13, 511, !dbg !8273
  %15 = zext i16 %14 to i32, !dbg !8274
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8275
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %16, align 4, !dbg !8275, !tbaa !6839
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 1, !dbg !8276
  store volatile i32 %15, i32* %18, align 4, !dbg !8277, !tbaa !7071
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3, !dbg !8278
  %20 = load i32, i32* %19, align 4, !dbg !8278, !tbaa !6871
  %21 = icmp eq i32 %20, 0, !dbg !8280
  %22 = load i8*, i8** %9, align 4, !dbg !8281, !tbaa !7249
  br i1 %21, label %23, label %25, !dbg !8282

23:                                               ; preds = %10
  %24 = getelementptr inbounds i8, i8* %22, i32 2, !dbg !8283
  store i8* %24, i8** %9, align 4, !dbg !8283, !tbaa !7249
  br label %35, !dbg !8285

25:                                               ; preds = %10
  %26 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !8286
  store i8* %26, i8** %9, align 4, !dbg !8286, !tbaa !7249
  br label %35

27:                                               ; preds = %5
  %28 = load i8*, i8** %9, align 4, !dbg !8288, !tbaa !7249
  %29 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !8288
  store i8* %29, i8** %9, align 4, !dbg !8288, !tbaa !7249
  %30 = load i8, i8* %28, align 1, !dbg !8290, !tbaa !1609
  %31 = zext i8 %30 to i32, !dbg !8291
  %32 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8292
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !8292, !tbaa !6839
  %34 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %33, i32 0, i32 1, !dbg !8293
  store volatile i32 %31, i32* %34, align 4, !dbg !8294, !tbaa !7071
  br label %35

35:                                               ; preds = %23, %25, %27
  %36 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !8295
  %37 = load volatile i16, i16* %36, align 2, !dbg !8297, !tbaa !7051
  %38 = add i16 %37, -1, !dbg !8297
  store volatile i16 %38, i16* %36, align 2, !dbg !8297, !tbaa !7051
  %39 = icmp eq i16 %38, 0, !dbg !8298
  br i1 %39, label %40, label %48, !dbg !8299

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8300
  %42 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %41, align 4, !dbg !8300, !tbaa !6839
  %43 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %42, i32 0, i32 3, !dbg !8300
  %44 = load volatile i32, i32* %43, align 4, !dbg !8300, !tbaa !5544
  %45 = and i32 %44, -129, !dbg !8300
  store volatile i32 %45, i32* %43, align 4, !dbg !8300, !tbaa !5544
  %46 = load volatile i32, i32* %43, align 4, !dbg !8302, !tbaa !5544
  %47 = or i32 %46, 64, !dbg !8302
  store volatile i32 %47, i32* %43, align 4, !dbg !8302, !tbaa !5544
  br label %48, !dbg !8303

48:                                               ; preds = %1, %35, %40
  ret void, !dbg !8304
}

; Function Attrs: noinline nounwind
define internal fastcc void @UART_EndTransmit_IT(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #8 !dbg !8305 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8307, metadata !DIExpression()), !dbg !8308
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8309
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !8309, !tbaa !6839
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !8309
  %5 = load volatile i32, i32* %4, align 4, !dbg !8309, !tbaa !5544
  %6 = and i32 %5, -65, !dbg !8309
  store volatile i32 %6, i32* %4, align 4, !dbg !8309, !tbaa !5544
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !8310
  store volatile i32 32, i32* %7, align 4, !dbg !8311, !tbaa !6826
  call void @HAL_UART_TxCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !8312
  ret void, !dbg !8313
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_LIN_SendBreak(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #13 !dbg !8314 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8316, metadata !DIExpression()), !dbg !8317
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !8318
  %3 = load i32, i32* %2, align 4, !dbg !8318, !tbaa !6834
  %4 = icmp eq i32 %3, 1, !dbg !8318
  br i1 %4, label %12, label %5, !dbg !8321

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !8322, !tbaa !6834
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !8324
  store volatile i32 36, i32* %6, align 4, !dbg !8325, !tbaa !6826
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8326
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !8326, !tbaa !6839
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !8326
  %10 = load volatile i32, i32* %9, align 4, !dbg !8326, !tbaa !5544
  %11 = or i32 %10, 1, !dbg !8326
  store volatile i32 %11, i32* %9, align 4, !dbg !8326, !tbaa !5544
  store volatile i32 32, i32* %6, align 4, !dbg !8327, !tbaa !6826
  store i32 0, i32* %2, align 4, !dbg !8328, !tbaa !6834
  br label %12, !dbg !8330

12:                                               ; preds = %1, %5
  %13 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !8317
  ret i32 %13, !dbg !8331
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_MultiProcessor_EnterMuteMode(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #13 !dbg !8332 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8334, metadata !DIExpression()), !dbg !8335
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !8336
  %3 = load i32, i32* %2, align 4, !dbg !8336, !tbaa !6834
  %4 = icmp eq i32 %3, 1, !dbg !8336
  br i1 %4, label %12, label %5, !dbg !8339

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !8340, !tbaa !6834
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !8342
  store volatile i32 36, i32* %6, align 4, !dbg !8343, !tbaa !6826
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8344
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !8344, !tbaa !6839
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !8344
  %10 = load volatile i32, i32* %9, align 4, !dbg !8344, !tbaa !5544
  %11 = or i32 %10, 2, !dbg !8344
  store volatile i32 %11, i32* %9, align 4, !dbg !8344, !tbaa !5544
  store volatile i32 32, i32* %6, align 4, !dbg !8345, !tbaa !6826
  store i32 0, i32* %2, align 4, !dbg !8346, !tbaa !6834
  br label %12, !dbg !8348

12:                                               ; preds = %1, %5
  %13 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !8335
  ret i32 %13, !dbg !8349
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_MultiProcessor_ExitMuteMode(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #13 !dbg !8350 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8352, metadata !DIExpression()), !dbg !8353
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !8354
  %3 = load i32, i32* %2, align 4, !dbg !8354, !tbaa !6834
  %4 = icmp eq i32 %3, 1, !dbg !8354
  br i1 %4, label %12, label %5, !dbg !8357

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !8358, !tbaa !6834
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !8360
  store volatile i32 36, i32* %6, align 4, !dbg !8361, !tbaa !6826
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8362
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !8362, !tbaa !6839
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !8362
  %10 = load volatile i32, i32* %9, align 4, !dbg !8362, !tbaa !5544
  %11 = and i32 %10, -3, !dbg !8362
  store volatile i32 %11, i32* %9, align 4, !dbg !8362, !tbaa !5544
  store volatile i32 32, i32* %6, align 4, !dbg !8363, !tbaa !6826
  store i32 0, i32* %2, align 4, !dbg !8364, !tbaa !6834
  br label %12, !dbg !8366

12:                                               ; preds = %1, %5
  %13 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !8353
  ret i32 %13, !dbg !8367
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_HalfDuplex_EnableTransmitter(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #13 !dbg !8368 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8370, metadata !DIExpression()), !dbg !8372
  call void @llvm.dbg.value(metadata i32 0, metadata !8371, metadata !DIExpression()), !dbg !8372
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !8373
  %3 = load i32, i32* %2, align 4, !dbg !8373, !tbaa !6834
  %4 = icmp eq i32 %3, 1, !dbg !8373
  br i1 %4, label %13, label %5, !dbg !8376

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !8377, !tbaa !6834
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !8379
  store volatile i32 36, i32* %6, align 4, !dbg !8380, !tbaa !6826
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8381
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !8381, !tbaa !6839
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !8382
  %10 = load volatile i32, i32* %9, align 4, !dbg !8382, !tbaa !5544
  call void @llvm.dbg.value(metadata i32 %10, metadata !8371, metadata !DIExpression()), !dbg !8372
  %11 = and i32 %10, -13, !dbg !8383
  call void @llvm.dbg.value(metadata i32 %11, metadata !8371, metadata !DIExpression()), !dbg !8372
  %12 = or i32 %11, 8, !dbg !8384
  call void @llvm.dbg.value(metadata i32 %12, metadata !8371, metadata !DIExpression()), !dbg !8372
  store volatile i32 %12, i32* %9, align 4, !dbg !8385, !tbaa !5544
  store volatile i32 32, i32* %6, align 4, !dbg !8386, !tbaa !6826
  store i32 0, i32* %2, align 4, !dbg !8387, !tbaa !6834
  br label %13, !dbg !8389

13:                                               ; preds = %1, %5
  %14 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !8372
  ret i32 %14, !dbg !8390
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_HalfDuplex_EnableReceiver(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #13 !dbg !8391 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8393, metadata !DIExpression()), !dbg !8395
  call void @llvm.dbg.value(metadata i32 0, metadata !8394, metadata !DIExpression()), !dbg !8395
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !8396
  %3 = load i32, i32* %2, align 4, !dbg !8396, !tbaa !6834
  %4 = icmp eq i32 %3, 1, !dbg !8396
  br i1 %4, label %13, label %5, !dbg !8399

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !8400, !tbaa !6834
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !8402
  store volatile i32 36, i32* %6, align 4, !dbg !8403, !tbaa !6826
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !8404
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !8404, !tbaa !6839
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !8405
  %10 = load volatile i32, i32* %9, align 4, !dbg !8405, !tbaa !5544
  call void @llvm.dbg.value(metadata i32 %10, metadata !8394, metadata !DIExpression()), !dbg !8395
  %11 = and i32 %10, -13, !dbg !8406
  call void @llvm.dbg.value(metadata i32 %11, metadata !8394, metadata !DIExpression()), !dbg !8395
  %12 = or i32 %11, 4, !dbg !8407
  call void @llvm.dbg.value(metadata i32 %12, metadata !8394, metadata !DIExpression()), !dbg !8395
  store volatile i32 %12, i32* %9, align 4, !dbg !8408, !tbaa !5544
  store volatile i32 32, i32* %6, align 4, !dbg !8409, !tbaa !6826
  store i32 0, i32* %2, align 4, !dbg !8410, !tbaa !6834
  br label %13, !dbg !8412

13:                                               ; preds = %1, %5
  %14 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !8395
  ret i32 %14, !dbg !8413
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_UART_GetState(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #14 !dbg !8414 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8418, metadata !DIExpression()), !dbg !8421
  call void @llvm.dbg.value(metadata i32 0, metadata !8419, metadata !DIExpression()), !dbg !8421
  call void @llvm.dbg.value(metadata i32 0, metadata !8420, metadata !DIExpression()), !dbg !8421
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !8422
  %3 = load volatile i32, i32* %2, align 4, !dbg !8422, !tbaa !6826
  call void @llvm.dbg.value(metadata i32 %3, metadata !8419, metadata !DIExpression()), !dbg !8421
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !8423
  %5 = load volatile i32, i32* %4, align 4, !dbg !8423, !tbaa !6850
  call void @llvm.dbg.value(metadata i32 %5, metadata !8420, metadata !DIExpression()), !dbg !8421
  %6 = or i32 %5, %3, !dbg !8424
  ret i32 %6, !dbg !8425
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_UART_GetError(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #14 !dbg !8426 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !8430, metadata !DIExpression()), !dbg !8431
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !8432
  %3 = load volatile i32, i32* %2, align 4, !dbg !8432, !tbaa !6846
  ret i32 %3, !dbg !8433
}

attributes #0 = { mustprogress noinline noreturn nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nofree nosync nounwind willreturn }
attributes #3 = { mustprogress noinline norecurse nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly nofree nounwind willreturn writeonly }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress noinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { nofree nounwind }
attributes #8 = { noinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nofree nosync nounwind willreturn }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { nofree noinline norecurse nosync nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline norecurse nosync nounwind readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { mustprogress nofree noinline norecurse nounwind willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nosync nounwind readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { naked noinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { noinline noreturn nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { mustprogress nofree noinline nosync nounwind readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nosync nounwind willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { cold noreturn nounwind }
attributes #23 = { nobuiltin nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline norecurse nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { mustprogress nofree noinline norecurse nosync nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #26 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #27 = { nounwind }
attributes #28 = { noreturn }
attributes #29 = { noreturn nounwind }
attributes #30 = { builtin nounwind }

!llvm.dbg.cu = !{!2, !214, !264, !806, !335, !455, !474, !858, !912, !965, !991, !1183, !572, !1185}
!llvm.ident = !{!1297, !1297, !1297, !1297, !1297, !1297, !1297, !1297, !1297, !1297, !1297, !1297, !1297, !1297}
!llvm.module.flags = !{!1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "xStack", scope: !2, file: !3, line: 18, type: !197, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !13, globals: !46, imports: !117, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../examples/stm32f1/dualport_freertos.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "a0144c24190a5db8717462da8fead24b")
!4 = !{!5}
!5 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 41, baseType: !7, size: 32, elements: !8, identifier: "_ZTS17HAL_StatusTypeDef")
!6 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "4d6e0bbb91efacee14a68a416f506def")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "HAL_OK", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "HAL_ERROR", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "HAL_BUSY", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3, isUnsigned: true)
!13 = !{!14, !31, !34, !37, !42, !43, !39}
!14 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 32)
!15 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !16, line: 516, baseType: !17)
!16 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "d2562af6d7239ab46ca8ba238a43c848")
!17 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 507, size: 224, flags: DIFlagTypePassByValue, elements: !18, identifier: "_ZTS13USART_TypeDef")
!18 = !{!19, !25, !26, !27, !28, !29, !30}
!19 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !17, file: !16, line: 509, baseType: !20, size: 32)
!20 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !21)
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !22, line: 48, baseType: !23)
!22 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "ab914e287601b2385e57880e6599aa6b")
!23 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !24, line: 79, baseType: !7)
!24 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "f7024d0682a918b41f94e8be9cd90461")
!25 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !17, file: !16, line: 510, baseType: !20, size: 32, offset: 32)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !17, file: !16, line: 511, baseType: !20, size: 32, offset: 64)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !17, file: !16, line: 512, baseType: !20, size: 32, offset: 96)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !17, file: !16, line: 513, baseType: !20, size: 32, offset: 128)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !17, file: !16, line: 514, baseType: !20, size: 32, offset: 160)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !17, file: !16, line: 515, baseType: !20, size: 32, offset: 192)
!31 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 32)
!32 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !16, line: 367, baseType: !33)
!33 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 358, size: 224, flags: DIFlagFwdDecl, identifier: "_ZTS12GPIO_TypeDef")
!34 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !22, line: 36, baseType: !35)
!35 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !24, line: 57, baseType: !36)
!36 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!37 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 32)
!38 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !39)
!39 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !22, line: 24, baseType: !40)
!40 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !24, line: 43, baseType: !41)
!41 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!42 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !39, size: 32)
!43 = !DIDerivedType(tag: DW_TAG_typedef, name: "UBaseType_t", file: !44, line: 57, baseType: !45)
!44 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "5fd77bad595782d66ff9acd907773be8")
!45 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!46 = !{!0, !47, !76, !91, !96, !106, !109}
!47 = !DIGlobalVariableExpression(var: !48, expr: !DIExpression())
!48 = distinct !DIGlobalVariable(name: "xTaskBuffer", scope: !2, file: !3, line: 19, type: !49, isLocal: false, isDefinition: true)
!49 = !DIDerivedType(tag: DW_TAG_typedef, name: "StaticTask_t", file: !50, line: 1030, baseType: !51)
!50 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "35901dd1e618d03882fd7fe7e54fee1a")
!51 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xSTATIC_TCB", file: !50, line: 984, size: 608, flags: DIFlagTypePassByValue, elements: !52, identifier: "_ZTS11xSTATIC_TCB")
!52 = !{!53, !55, !68, !69, !70, !74, !75}
!53 = !DIDerivedType(tag: DW_TAG_member, name: "pxDummy1", scope: !51, file: !50, line: 986, baseType: !54, size: 32)
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "xDummy3", scope: !51, file: !50, line: 990, baseType: !56, size: 320, offset: 32)
!56 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 320, elements: !66)
!57 = !DIDerivedType(tag: DW_TAG_typedef, name: "StaticListItem_t", file: !50, line: 953, baseType: !58)
!58 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xSTATIC_LIST_ITEM", file: !50, line: 948, size: 160, flags: DIFlagTypePassByValue, elements: !59, identifier: "_ZTS17xSTATIC_LIST_ITEM")
!59 = !{!60, !62}
!60 = !DIDerivedType(tag: DW_TAG_member, name: "xDummy1", scope: !58, file: !50, line: 950, baseType: !61, size: 32)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "TickType_t", file: !44, line: 63, baseType: !21)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "pvDummy2", scope: !58, file: !50, line: 951, baseType: !63, size: 128, offset: 32)
!63 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 128, elements: !64)
!64 = !{!65}
!65 = !DISubrange(count: 4)
!66 = !{!67}
!67 = !DISubrange(count: 2)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "uxDummy5", scope: !51, file: !50, line: 991, baseType: !43, size: 32, offset: 352)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "pxDummy6", scope: !51, file: !50, line: 992, baseType: !54, size: 32, offset: 384)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "ucDummy7", scope: !51, file: !50, line: 993, baseType: !71, size: 128, offset: 416)
!71 = !DICompositeType(tag: DW_TAG_array_type, baseType: !39, size: 128, elements: !72)
!72 = !{!73}
!73 = !DISubrange(count: 16)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "ulDummy18", scope: !51, file: !50, line: 1019, baseType: !21, size: 32, offset: 544)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "ucDummy19", scope: !51, file: !50, line: 1020, baseType: !39, size: 8, offset: 576)
!76 = !DIGlobalVariableExpression(var: !77, expr: !DIExpression())
!77 = distinct !DIGlobalVariable(name: "xIdleTaskTCB", scope: !78, file: !3, line: 108, type: !49, isLocal: true, isDefinition: true)
!78 = distinct !DISubprogram(name: "vApplicationGetIdleTaskMemory", scope: !3, file: !3, line: 105, type: !79, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !87)
!79 = !DISubroutineType(types: !80)
!80 = !{null, !81, !83, !86}
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 32)
!82 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !49, size: 32)
!83 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 32)
!84 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 32)
!85 = !DIDerivedType(tag: DW_TAG_typedef, name: "StackType_t", file: !44, line: 55, baseType: !21)
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 32)
!87 = !{!88, !89, !90}
!88 = !DILocalVariable(name: "ppxIdleTaskTCBBuffer", arg: 1, scope: !78, file: !3, line: 105, type: !81)
!89 = !DILocalVariable(name: "ppxIdleTaskStackBuffer", arg: 2, scope: !78, file: !3, line: 106, type: !83)
!90 = !DILocalVariable(name: "pulIdleTaskStackSize", arg: 3, scope: !78, file: !3, line: 106, type: !86)
!91 = !DIGlobalVariableExpression(var: !92, expr: !DIExpression())
!92 = distinct !DIGlobalVariable(name: "uxIdleTaskStack", scope: !78, file: !3, line: 109, type: !93, isLocal: true, isDefinition: true)
!93 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 4096, elements: !94)
!94 = !{!95}
!95 = !DISubrange(count: 128)
!96 = !DIGlobalVariableExpression(var: !97, expr: !DIExpression())
!97 = distinct !DIGlobalVariable(name: "instance", scope: !98, file: !3, line: 124, type: !102, isLocal: true, isDefinition: true)
!98 = distinct !DISubprogram(name: "USART1_IRQHandler", scope: !3, file: !3, line: 122, type: !99, scopeLine: 123, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !101)
!99 = !DISubroutineType(types: !100)
!100 = !{null}
!101 = !{}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!103 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Stm32Uart", scope: !105, file: !104, line: 51, size: 1536, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada9Stm32UartE")
!104 = !DIFile(filename: "../cicada/platform/stm32f1/stm32uart.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "f1205a68111afe9a0868ac35ca31b4e6")
!105 = !DINamespace(name: "Cicada", scope: null)
!106 = !DIGlobalVariableExpression(var: !107, expr: !DIExpression())
!107 = distinct !DIGlobalVariable(name: "instance", scope: !108, file: !3, line: 130, type: !102, isLocal: true, isDefinition: true)
!108 = distinct !DISubprogram(name: "USART2_IRQHandler", scope: !3, file: !3, line: 128, type: !99, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !101)
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "serial", scope: !111, file: !3, line: 136, type: !102, isLocal: true, isDefinition: true)
!111 = distinct !DISubprogram(name: "_putchar", scope: !3, file: !3, line: 134, type: !112, scopeLine: 135, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !115)
!112 = !DISubroutineType(types: !113)
!113 = !{null, !114}
!114 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!115 = !{!116}
!116 = !DILocalVariable(name: "c", arg: 1, scope: !111, file: !3, line: 134, type: !114)
!117 = !{!118, !124, !128, !132, !136, !139, !141, !143, !145, !148, !151, !154, !157, !160, !163, !164, !165, !166, !170, !172, !174, !176, !178, !181, !184, !187, !190, !193, !196}
!118 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !120, file: !123, line: 47)
!119 = !DINamespace(name: "std", scope: null)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !22, line: 20, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !24, line: 41, baseType: !122)
!122 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!123 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/cstdint", directory: "/home/mjshen/RTOSExploration")
!124 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !125, file: !123, line: 48)
!125 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !22, line: 32, baseType: !126)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int16_t", file: !24, line: 55, baseType: !127)
!127 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!128 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !129, file: !123, line: 49)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !22, line: 44, baseType: !130)
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !24, line: 77, baseType: !131)
!131 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!132 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !133, file: !123, line: 50)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !22, line: 56, baseType: !134)
!134 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !24, line: 103, baseType: !135)
!135 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!136 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !137, file: !123, line: 52)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast8_t", file: !138, line: 51, baseType: !122)
!138 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdint.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "a169a1d650067906a9e00519a9405ebb")
!139 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !140, file: !123, line: 53)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast16_t", file: !138, line: 61, baseType: !127)
!141 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !142, file: !123, line: 54)
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast32_t", file: !138, line: 71, baseType: !131)
!143 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !144, file: !123, line: 55)
!144 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast64_t", file: !138, line: 81, baseType: !135)
!145 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !146, file: !123, line: 57)
!146 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least8_t", file: !138, line: 21, baseType: !147)
!147 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least8_t", file: !24, line: 134, baseType: !122)
!148 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !149, file: !123, line: 58)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least16_t", file: !138, line: 27, baseType: !150)
!150 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least16_t", file: !24, line: 160, baseType: !127)
!151 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !152, file: !123, line: 59)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least32_t", file: !138, line: 33, baseType: !153)
!153 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least32_t", file: !24, line: 182, baseType: !131)
!154 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !155, file: !123, line: 60)
!155 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least64_t", file: !138, line: 39, baseType: !156)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !24, line: 200, baseType: !135)
!157 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !158, file: !123, line: 62)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !22, line: 67, baseType: !159)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !24, line: 214, baseType: !135)
!160 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !161, file: !123, line: 63)
!161 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !22, line: 77, baseType: !162)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intptr_t", file: !24, line: 230, baseType: !131)
!163 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !39, file: !123, line: 65)
!164 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !34, file: !123, line: 66)
!165 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !21, file: !123, line: 67)
!166 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !167, file: !123, line: 68)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !22, line: 60, baseType: !168)
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !24, line: 105, baseType: !169)
!169 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!170 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !171, file: !123, line: 70)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast8_t", file: !138, line: 52, baseType: !41)
!172 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !173, file: !123, line: 71)
!173 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast16_t", file: !138, line: 62, baseType: !36)
!174 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !175, file: !123, line: 72)
!175 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast32_t", file: !138, line: 72, baseType: !7)
!176 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !177, file: !123, line: 73)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast64_t", file: !138, line: 82, baseType: !169)
!178 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !179, file: !123, line: 75)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least8_t", file: !138, line: 22, baseType: !180)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least8_t", file: !24, line: 136, baseType: !41)
!181 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !182, file: !123, line: 76)
!182 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least16_t", file: !138, line: 28, baseType: !183)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least16_t", file: !24, line: 162, baseType: !36)
!184 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !185, file: !123, line: 77)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least32_t", file: !138, line: 34, baseType: !186)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least32_t", file: !24, line: 184, baseType: !7)
!187 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !188, file: !123, line: 78)
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !138, line: 40, baseType: !189)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least64_t", file: !24, line: 202, baseType: !169)
!190 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !191, file: !123, line: 80)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !22, line: 72, baseType: !192)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !24, line: 222, baseType: !169)
!193 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !119, entity: !194, file: !123, line: 81)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !22, line: 82, baseType: !195)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintptr_t", file: !24, line: 232, baseType: !7)
!196 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !2, entity: !105, file: !3, line: 15)
!197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 65536, elements: !198)
!198 = !{!199}
!199 = !DISubrange(count: 2048)
!200 = !DIGlobalVariableExpression(var: !201, expr: !DIExpression())
!201 = distinct !DIGlobalVariable(name: "pow10", scope: !202, file: !203, line: 311, type: !259, isLocal: true, isDefinition: true)
!202 = distinct !DISubprogram(name: "_ftoa", scope: !203, file: !203, line: 299, type: !204, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !214, retainedNodes: !226)
!203 = !DIFile(filename: "../dep/printf/src/printf.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "7383fa86adf0d25d8eda174a9b330d6a")
!204 = !DISubroutineType(types: !205)
!205 = !{!206, !208, !212, !206, !206, !213, !7, !7, !7}
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !207, line: 46, baseType: !7)
!207 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "", checksumkind: CSK_MD5, checksum: "2499dd2361b915724b073282bea3a7bc")
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "out_fct_type", file: !203, line: 97, baseType: !209)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = !DISubroutineType(types: !211)
!211 = !{null, !114, !54, !206, !206}
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 32)
!213 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!214 = distinct !DICompileUnit(language: DW_LANG_C99, file: !203, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !215, globals: !225, splitDebugInlining: false, nameTableKind: None)
!215 = !{!206, !212, !194, !7, !131, !169, !45, !114, !127, !41, !36, !213, !216}
!216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 32)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "out_fct_wrap_type", file: !203, line: 104, baseType: !218)
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !203, line: 101, size: 64, elements: !219)
!219 = !{!220, !224}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "fct", scope: !218, file: !203, line: 102, baseType: !221, size: 32)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!222 = !DISubroutineType(types: !223)
!223 = !{null, !114, !54}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !218, file: !203, line: 103, baseType: !54, size: 32, offset: 32)
!225 = !{!200}
!226 = !{!227, !228, !229, !230, !231, !232, !233, !234, !235, !237, !241, !242, !243, !245, !247, !248, !249, !250, !253, !257}
!227 = !DILocalVariable(name: "out", arg: 1, scope: !202, file: !203, line: 299, type: !208)
!228 = !DILocalVariable(name: "buffer", arg: 2, scope: !202, file: !203, line: 299, type: !212)
!229 = !DILocalVariable(name: "idx", arg: 3, scope: !202, file: !203, line: 299, type: !206)
!230 = !DILocalVariable(name: "maxlen", arg: 4, scope: !202, file: !203, line: 299, type: !206)
!231 = !DILocalVariable(name: "value", arg: 5, scope: !202, file: !203, line: 299, type: !213)
!232 = !DILocalVariable(name: "prec", arg: 6, scope: !202, file: !203, line: 299, type: !7)
!233 = !DILocalVariable(name: "width", arg: 7, scope: !202, file: !203, line: 299, type: !7)
!234 = !DILocalVariable(name: "flags", arg: 8, scope: !202, file: !203, line: 299, type: !7)
!235 = !DILocalVariable(name: "start_idx", scope: !202, file: !203, line: 301, type: !236)
!236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !206)
!237 = !DILocalVariable(name: "buf", scope: !202, file: !203, line: 303, type: !238)
!238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !114, size: 256, elements: !239)
!239 = !{!240}
!240 = !DISubrange(count: 32)
!241 = !DILocalVariable(name: "len", scope: !202, file: !203, line: 304, type: !206)
!242 = !DILocalVariable(name: "diff", scope: !202, file: !203, line: 305, type: !213)
!243 = !DILocalVariable(name: "thres_max", scope: !202, file: !203, line: 308, type: !244)
!244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !213)
!245 = !DILocalVariable(name: "negative", scope: !202, file: !203, line: 322, type: !246)
!246 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!247 = !DILocalVariable(name: "whole", scope: !202, file: !203, line: 338, type: !131)
!248 = !DILocalVariable(name: "tmp", scope: !202, file: !203, line: 339, type: !213)
!249 = !DILocalVariable(name: "frac", scope: !202, file: !203, line: 340, type: !45)
!250 = !DILocalVariable(name: "count", scope: !251, file: !203, line: 373, type: !7)
!251 = distinct !DILexicalBlock(scope: !252, file: !203, line: 372, column: 8)
!252 = distinct !DILexicalBlock(scope: !202, file: !203, line: 364, column: 7)
!253 = !DILocalVariable(name: "i", scope: !254, file: !203, line: 424, type: !206)
!254 = distinct !DILexicalBlock(scope: !255, file: !203, line: 424, column: 5)
!255 = distinct !DILexicalBlock(scope: !256, file: !203, line: 423, column: 58)
!256 = distinct !DILexicalBlock(scope: !202, file: !203, line: 423, column: 7)
!257 = !DILocalVariable(name: "i", scope: !258, file: !203, line: 430, type: !206)
!258 = distinct !DILexicalBlock(scope: !202, file: !203, line: 430, column: 3)
!259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !244, size: 640, elements: !260)
!260 = !{!261}
!261 = !DISubrange(count: 10)
!262 = !DIGlobalVariableExpression(var: !263, expr: !DIExpression())
!263 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !264, file: !265, line: 124, type: !332, isLocal: false, isDefinition: true)
!264 = distinct !DICompileUnit(language: DW_LANG_C99, file: !265, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !266, retainedTypes: !272, globals: !324, splitDebugInlining: false, nameTableKind: None)
!265 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/system_stm32f1xx.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "2e873de3002e5d783190a46ff1c7da2d")
!266 = !{!267}
!267 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !268, line: 151, baseType: !7, size: 32, elements: !269)
!268 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "dc4ed8bdf8589b30d30d93eb6ee6ca27")
!269 = !{!270, !271}
!270 = !DIEnumerator(name: "RESET", value: 0)
!271 = !DIEnumerator(name: "SET", value: 1)
!272 = !{!273, !287, !21}
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !16, line: 438, baseType: !275)
!275 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 424, size: 320, elements: !276)
!276 = !{!277, !278, !279, !280, !281, !282, !283, !284, !285, !286}
!277 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !275, file: !16, line: 426, baseType: !20, size: 32)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !275, file: !16, line: 427, baseType: !20, size: 32, offset: 32)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !275, file: !16, line: 428, baseType: !20, size: 32, offset: 64)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !275, file: !16, line: 429, baseType: !20, size: 32, offset: 96)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !275, file: !16, line: 430, baseType: !20, size: 32, offset: 128)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !275, file: !16, line: 431, baseType: !20, size: 32, offset: 160)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !275, file: !16, line: 432, baseType: !20, size: 32, offset: 192)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !275, file: !16, line: 433, baseType: !20, size: 32, offset: 224)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !275, file: !16, line: 434, baseType: !20, size: 32, offset: 256)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !275, file: !16, line: 435, baseType: !20, size: 32, offset: 288)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !289, line: 397, baseType: !290)
!289 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build")
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !289, line: 374, size: 1120, elements: !291)
!291 = !{!292, !294, !295, !296, !297, !298, !299, !304, !305, !306, !307, !308, !309, !310, !311, !313, !314, !315, !317, !321, !323}
!292 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !290, file: !289, line: 376, baseType: !293, size: 32)
!293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !20)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !290, file: !289, line: 377, baseType: !20, size: 32, offset: 32)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !290, file: !289, line: 378, baseType: !20, size: 32, offset: 64)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !290, file: !289, line: 379, baseType: !20, size: 32, offset: 96)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !290, file: !289, line: 380, baseType: !20, size: 32, offset: 128)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !290, file: !289, line: 381, baseType: !20, size: 32, offset: 160)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !290, file: !289, line: 382, baseType: !300, size: 96, offset: 192)
!300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 96, elements: !302)
!301 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !39)
!302 = !{!303}
!303 = !DISubrange(count: 12)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !290, file: !289, line: 383, baseType: !20, size: 32, offset: 288)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !290, file: !289, line: 384, baseType: !20, size: 32, offset: 320)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !290, file: !289, line: 385, baseType: !20, size: 32, offset: 352)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !290, file: !289, line: 386, baseType: !20, size: 32, offset: 384)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !290, file: !289, line: 387, baseType: !20, size: 32, offset: 416)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !290, file: !289, line: 388, baseType: !20, size: 32, offset: 448)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !290, file: !289, line: 389, baseType: !20, size: 32, offset: 480)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !290, file: !289, line: 390, baseType: !312, size: 64, offset: 512)
!312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 64, elements: !66)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !290, file: !289, line: 391, baseType: !293, size: 32, offset: 576)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !290, file: !289, line: 392, baseType: !293, size: 32, offset: 608)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !290, file: !289, line: 393, baseType: !316, size: 128, offset: 640)
!316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 128, elements: !64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !290, file: !289, line: 394, baseType: !318, size: 160, offset: 768)
!318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 160, elements: !319)
!319 = !{!320}
!320 = !DISubrange(count: 5)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !290, file: !289, line: 395, baseType: !322, size: 160, offset: 928)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 160, elements: !319)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !290, file: !289, line: 396, baseType: !20, size: 32, offset: 1088)
!324 = !{!325, !262, !327}
!325 = !DIGlobalVariableExpression(var: !326, expr: !DIExpression())
!326 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !264, file: !265, line: 123, type: !21, isLocal: false, isDefinition: true)
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !264, file: !265, line: 125, type: !329, isLocal: false, isDefinition: true)
!329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !38, size: 64, elements: !330)
!330 = !{!331}
!331 = !DISubrange(count: 8)
!332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !38, size: 128, elements: !72)
!333 = !DIGlobalVariableExpression(var: !334, expr: !DIExpression())
!334 = distinct !DIGlobalVariable(name: "uwTickPrio", scope: !335, file: !336, line: 80, type: !21, isLocal: false, isDefinition: true)
!335 = distinct !DICompileUnit(language: DW_LANG_C99, file: !336, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !337, retainedTypes: !405, globals: !447, splitDebugInlining: false, nameTableKind: None)
!336 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "1a5fa7b79e9e470cf817b81d791a6ccb")
!337 = !{!338, !345, !351}
!338 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !339, line: 49, baseType: !7, size: 32, elements: !340)
!339 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "5eab64b252ccd159497a11d87d26bc0b")
!340 = !{!341, !342, !343, !344}
!341 = !DIEnumerator(name: "HAL_TICK_FREQ_10HZ", value: 100)
!342 = !DIEnumerator(name: "HAL_TICK_FREQ_100HZ", value: 10)
!343 = !DIEnumerator(name: "HAL_TICK_FREQ_1KHZ", value: 1)
!344 = !DIEnumerator(name: "HAL_TICK_FREQ_DEFAULT", value: 1)
!345 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 41, baseType: !7, size: 32, elements: !346)
!346 = !{!347, !348, !349, !350}
!347 = !DIEnumerator(name: "HAL_OK", value: 0)
!348 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!349 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!350 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!351 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !16, line: 69, baseType: !131, size: 32, elements: !352)
!352 = !{!353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404}
!353 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!354 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!355 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!356 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!357 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!358 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!359 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!360 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!361 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!362 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!363 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!364 = !DIEnumerator(name: "TAMPER_IRQn", value: 2)
!365 = !DIEnumerator(name: "RTC_IRQn", value: 3)
!366 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!367 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!368 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!369 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!370 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!371 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!372 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!373 = !DIEnumerator(name: "DMA1_Channel1_IRQn", value: 11)
!374 = !DIEnumerator(name: "DMA1_Channel2_IRQn", value: 12)
!375 = !DIEnumerator(name: "DMA1_Channel3_IRQn", value: 13)
!376 = !DIEnumerator(name: "DMA1_Channel4_IRQn", value: 14)
!377 = !DIEnumerator(name: "DMA1_Channel5_IRQn", value: 15)
!378 = !DIEnumerator(name: "DMA1_Channel6_IRQn", value: 16)
!379 = !DIEnumerator(name: "DMA1_Channel7_IRQn", value: 17)
!380 = !DIEnumerator(name: "ADC1_2_IRQn", value: 18)
!381 = !DIEnumerator(name: "USB_HP_CAN1_TX_IRQn", value: 19)
!382 = !DIEnumerator(name: "USB_LP_CAN1_RX0_IRQn", value: 20)
!383 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!384 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!385 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!386 = !DIEnumerator(name: "TIM1_BRK_IRQn", value: 24)
!387 = !DIEnumerator(name: "TIM1_UP_IRQn", value: 25)
!388 = !DIEnumerator(name: "TIM1_TRG_COM_IRQn", value: 26)
!389 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!390 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!391 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!392 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!393 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!394 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!395 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!396 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!397 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!398 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!399 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!400 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!401 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!402 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!403 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!404 = !DIEnumerator(name: "USBWakeUp_IRQn", value: 42)
!405 = !{!406, !21, !419, !433, !441, !86}
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 32)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !16, line: 336, baseType: !408)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 325, size: 288, elements: !409)
!409 = !{!410, !411, !412, !413, !414, !415, !416, !417, !418}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !408, file: !16, line: 327, baseType: !20, size: 32)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !408, file: !16, line: 328, baseType: !20, size: 32, offset: 32)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !408, file: !16, line: 329, baseType: !20, size: 32, offset: 64)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !408, file: !16, line: 330, baseType: !20, size: 32, offset: 96)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !408, file: !16, line: 331, baseType: !20, size: 32, offset: 128)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "AR", scope: !408, file: !16, line: 332, baseType: !20, size: 32, offset: 160)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !408, file: !16, line: 333, baseType: !20, size: 32, offset: 192)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !408, file: !16, line: 334, baseType: !20, size: 32, offset: 224)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR", scope: !408, file: !16, line: 335, baseType: !20, size: 32, offset: 256)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 32)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !16, line: 438, baseType: !421)
!421 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 424, size: 320, elements: !422)
!422 = !{!423, !424, !425, !426, !427, !428, !429, !430, !431, !432}
!423 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !421, file: !16, line: 426, baseType: !20, size: 32)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !421, file: !16, line: 427, baseType: !20, size: 32, offset: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !421, file: !16, line: 428, baseType: !20, size: 32, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !421, file: !16, line: 429, baseType: !20, size: 32, offset: 96)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !421, file: !16, line: 430, baseType: !20, size: 32, offset: 128)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !421, file: !16, line: 431, baseType: !20, size: 32, offset: 160)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !421, file: !16, line: 432, baseType: !20, size: 32, offset: 192)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !421, file: !16, line: 433, baseType: !20, size: 32, offset: 224)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !421, file: !16, line: 434, baseType: !20, size: 32, offset: 256)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !421, file: !16, line: 435, baseType: !20, size: 32, offset: 288)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 32)
!434 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !289, line: 700, baseType: !435)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !289, line: 694, size: 128, elements: !436)
!436 = !{!437, !438, !439, !440}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !435, file: !289, line: 696, baseType: !20, size: 32)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !435, file: !289, line: 697, baseType: !20, size: 32, offset: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !435, file: !289, line: 698, baseType: !20, size: 32, offset: 64)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !435, file: !289, line: 699, baseType: !293, size: 32, offset: 96)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 32)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "DBGMCU_TypeDef", file: !16, line: 285, baseType: !443)
!443 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 281, size: 64, elements: !444)
!444 = !{!445, !446}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "IDCODE", scope: !443, file: !16, line: 283, baseType: !20, size: 32)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !443, file: !16, line: 284, baseType: !20, size: 32, offset: 32)
!447 = !{!333, !448, !451}
!448 = !DIGlobalVariableExpression(var: !449, expr: !DIExpression())
!449 = distinct !DIGlobalVariable(name: "uwTickFreq", scope: !335, file: !336, line: 81, type: !450, isLocal: false, isDefinition: true)
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_TickFreqTypeDef", file: !339, line: 55, baseType: !338)
!451 = !DIGlobalVariableExpression(var: !452, expr: !DIExpression())
!452 = distinct !DIGlobalVariable(name: "uwTick", scope: !335, file: !336, line: 79, type: !20, isLocal: false, isDefinition: true)
!453 = !DIGlobalVariableExpression(var: !454, expr: !DIExpression())
!454 = distinct !DIGlobalVariable(name: "ucMaxSysCallPriority", scope: !455, file: !456, line: 164, type: !39, isLocal: true, isDefinition: true)
!455 = distinct !DICompileUnit(language: DW_LANG_C99, file: !456, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !457, globals: !462, splitDebugInlining: false, nameTableKind: None)
!456 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/port.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "3134ad912cd7b4d155d138db3d2b3f77")
!457 = !{!85, !458, !39, !21, !459, !460, !61}
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 32)
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "BaseType_t", file: !44, line: 56, baseType: !461)
!461 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!462 = !{!463, !453, !468, !470}
!463 = !DIGlobalVariableExpression(var: !464, expr: !DIExpression())
!464 = distinct !DIGlobalVariable(name: "pcInterruptPriorityRegisters", scope: !455, file: !456, line: 166, type: !465, isLocal: true, isDefinition: true)
!465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !466)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 32)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !301)
!468 = !DIGlobalVariableExpression(var: !469, expr: !DIExpression())
!469 = distinct !DIGlobalVariable(name: "ulMaxPRIGROUPValue", scope: !455, file: !456, line: 165, type: !21, isLocal: true, isDefinition: true)
!470 = !DIGlobalVariableExpression(var: !471, expr: !DIExpression())
!471 = distinct !DIGlobalVariable(name: "uxCriticalNesting", scope: !455, file: !456, line: 133, type: !43, isLocal: true, isDefinition: true)
!472 = !DIGlobalVariableExpression(var: !473, expr: !DIExpression())
!473 = distinct !DIGlobalVariable(name: "pxCurrentTCB", scope: !474, file: !475, line: 348, type: !569, isLocal: false, isDefinition: true)
!474 = distinct !DICompileUnit(language: DW_LANG_C99, file: !475, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !476, retainedTypes: !485, globals: !513, splitDebugInlining: false, nameTableKind: None)
!475 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "4c78d8e6db8748ab90199895767857f2")
!476 = !{!477}
!477 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !478, line: 81, baseType: !7, size: 32, elements: !479)
!478 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Middlewares/Third_Party/FreeRTOS/Source/include/task.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "d024d745131a960c5ab0e9fb4124ba87")
!479 = !{!480, !481, !482, !483, !484}
!480 = !DIEnumerator(name: "eNoAction", value: 0)
!481 = !DIEnumerator(name: "eSetBits", value: 1)
!482 = !DIEnumerator(name: "eIncrement", value: 2)
!483 = !DIEnumerator(name: "eSetValueWithOverwrite", value: 3)
!484 = !DIEnumerator(name: "eSetValueWithoutOverwrite", value: 4)
!485 = !{!54, !486, !84, !460, !61, !459, !43, !21, !39, !512}
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 32)
!487 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCB_t", file: !475, line: 343, baseType: !488)
!488 = !DIDerivedType(tag: DW_TAG_typedef, name: "tskTCB", file: !475, line: 339, baseType: !489)
!489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tskTaskControlBlock", file: !475, line: 269, size: 608, elements: !490)
!490 = !{!491, !494, !505, !506, !507, !508, !510, !511}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "pxTopOfStack", scope: !489, file: !475, line: 271, baseType: !492, size: 32)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 32)
!493 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !85)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "xStateListItem", scope: !489, file: !475, line: 277, baseType: !495, size: 160, offset: 32)
!495 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !496, line: 149, baseType: !497)
!496 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Middlewares/Third_Party/FreeRTOS/Source/include/list.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "da6acc022f4d62328dbc603eb4dcc0f5")
!497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !496, line: 139, size: 160, elements: !498)
!498 = !{!499, !500, !502, !503, !504}
!499 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !497, file: !496, line: 142, baseType: !61, size: 32)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !497, file: !496, line: 143, baseType: !501, size: 32, offset: 32)
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 32)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !497, file: !496, line: 144, baseType: !501, size: 32, offset: 64)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !497, file: !496, line: 145, baseType: !54, size: 32, offset: 96)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !497, file: !496, line: 146, baseType: !54, size: 32, offset: 128)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "xEventListItem", scope: !489, file: !475, line: 278, baseType: !495, size: 160, offset: 192)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "uxPriority", scope: !489, file: !475, line: 279, baseType: !43, size: 32, offset: 352)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "pxStack", scope: !489, file: !475, line: 280, baseType: !84, size: 32, offset: 384)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "pcTaskName", scope: !489, file: !475, line: 281, baseType: !509, size: 128, offset: 416)
!509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !114, size: 128, elements: !72)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "ulNotifiedValue", scope: !489, file: !475, line: 325, baseType: !20, size: 32, offset: 544)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "ucNotifyState", scope: !489, file: !475, line: 326, baseType: !301, size: 8, offset: 576)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskHandle_t", file: !478, line: 61, baseType: !54)
!513 = !{!472, !514, !530, !532, !534, !536, !538, !541, !544, !546, !548, !550, !552, !557, !559, !561, !565, !567}
!514 = !DIGlobalVariableExpression(var: !515, expr: !DIExpression())
!515 = distinct !DIGlobalVariable(name: "xDelayedTaskList1", scope: !474, file: !475, line: 352, type: !516, isLocal: true, isDefinition: true)
!516 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !496, line: 170, baseType: !517)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !496, line: 163, size: 160, elements: !518)
!518 = !{!519, !521, !523}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !517, file: !496, line: 166, baseType: !520, size: 32)
!520 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !43)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !517, file: !496, line: 167, baseType: !522, size: 32, offset: 32)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 32)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !517, file: !496, line: 168, baseType: !524, size: 96, offset: 64)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !496, line: 158, baseType: !525)
!525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !496, line: 151, size: 96, elements: !526)
!526 = !{!527, !528, !529}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !525, file: !496, line: 154, baseType: !61, size: 32)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !525, file: !496, line: 155, baseType: !501, size: 32, offset: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !525, file: !496, line: 156, baseType: !501, size: 32, offset: 64)
!530 = !DIGlobalVariableExpression(var: !531, expr: !DIExpression())
!531 = distinct !DIGlobalVariable(name: "xDelayedTaskList2", scope: !474, file: !475, line: 353, type: !516, isLocal: true, isDefinition: true)
!532 = !DIGlobalVariableExpression(var: !533, expr: !DIExpression())
!533 = distinct !DIGlobalVariable(name: "uxTaskNumber", scope: !474, file: !475, line: 379, type: !43, isLocal: true, isDefinition: true)
!534 = !DIGlobalVariableExpression(var: !535, expr: !DIExpression())
!535 = distinct !DIGlobalVariable(name: "uxSchedulerSuspended", scope: !474, file: !475, line: 391, type: !520, isLocal: true, isDefinition: true)
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(name: "xIdleTaskHandle", scope: !474, file: !475, line: 381, type: !512, isLocal: true, isDefinition: true)
!538 = !DIGlobalVariableExpression(var: !539, expr: !DIExpression())
!539 = distinct !DIGlobalVariable(name: "xNextTaskUnblockTime", scope: !474, file: !475, line: 380, type: !540, isLocal: true, isDefinition: true)
!540 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !61)
!541 = !DIGlobalVariableExpression(var: !542, expr: !DIExpression())
!542 = distinct !DIGlobalVariable(name: "xSchedulerRunning", scope: !474, file: !475, line: 375, type: !543, isLocal: true, isDefinition: true)
!543 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !460)
!544 = !DIGlobalVariableExpression(var: !545, expr: !DIExpression())
!545 = distinct !DIGlobalVariable(name: "xTickCount", scope: !474, file: !475, line: 373, type: !540, isLocal: true, isDefinition: true)
!546 = !DIGlobalVariableExpression(var: !547, expr: !DIExpression())
!547 = distinct !DIGlobalVariable(name: "uxCurrentNumberOfTasks", scope: !474, file: !475, line: 372, type: !520, isLocal: true, isDefinition: true)
!548 = !DIGlobalVariableExpression(var: !549, expr: !DIExpression())
!549 = distinct !DIGlobalVariable(name: "xPendingReadyList", scope: !474, file: !475, line: 356, type: !516, isLocal: true, isDefinition: true)
!550 = !DIGlobalVariableExpression(var: !551, expr: !DIExpression())
!551 = distinct !DIGlobalVariable(name: "uxTopReadyPriority", scope: !474, file: !475, line: 374, type: !520, isLocal: true, isDefinition: true)
!552 = !DIGlobalVariableExpression(var: !553, expr: !DIExpression())
!553 = distinct !DIGlobalVariable(name: "pxReadyTasksLists", scope: !474, file: !475, line: 351, type: !554, isLocal: true, isDefinition: true)
!554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 1120, elements: !555)
!555 = !{!556}
!556 = !DISubrange(count: 7)
!557 = !DIGlobalVariableExpression(var: !558, expr: !DIExpression())
!558 = distinct !DIGlobalVariable(name: "xYieldPending", scope: !474, file: !475, line: 377, type: !543, isLocal: true, isDefinition: true)
!559 = !DIGlobalVariableExpression(var: !560, expr: !DIExpression())
!560 = distinct !DIGlobalVariable(name: "uxPendedTicks", scope: !474, file: !475, line: 376, type: !520, isLocal: true, isDefinition: true)
!561 = !DIGlobalVariableExpression(var: !562, expr: !DIExpression())
!562 = distinct !DIGlobalVariable(name: "pxDelayedTaskList", scope: !474, file: !475, line: 354, type: !563, isLocal: true, isDefinition: true)
!563 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !564)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 32)
!565 = !DIGlobalVariableExpression(var: !566, expr: !DIExpression())
!566 = distinct !DIGlobalVariable(name: "pxOverflowDelayedTaskList", scope: !474, file: !475, line: 355, type: !563, isLocal: true, isDefinition: true)
!567 = !DIGlobalVariableExpression(var: !568, expr: !DIExpression())
!568 = distinct !DIGlobalVariable(name: "xNumOfOverflows", scope: !474, file: !475, line: 378, type: !543, isLocal: true, isDefinition: true)
!569 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !486)
!570 = !DIGlobalVariableExpression(var: !571, expr: !DIExpression())
!571 = distinct !DIGlobalVariable(name: "instance", linkageName: "_ZN6Cicada9Stm32Uart8instanceE", scope: !572, file: !573, line: 32, type: !677, isLocal: false, isDefinition: true, declaration: !676)
!572 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !573, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !574, retainedTypes: !591, globals: !803, imports: !804, splitDebugInlining: false, nameTableKind: None)
!573 = !DIFile(filename: "../cicada/platform/stm32f1/stm32uart.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "3cfb26aba75e1df83974cb6e4fff6457")
!574 = !{!575, !5, !576, !580}
!575 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, file: !16, line: 69, baseType: !131, size: 32, elements: !352, identifier: "_ZTS9IRQn_Type")
!576 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 52, baseType: !7, size: 32, elements: !577, identifier: "_ZTS15HAL_LockTypeDef")
!577 = !{!578, !579}
!578 = !DIEnumerator(name: "HAL_UNLOCKED", value: 0, isUnsigned: true)
!579 = !DIEnumerator(name: "HAL_LOCKED", value: 1, isUnsigned: true)
!580 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, file: !581, line: 117, baseType: !7, size: 32, elements: !582, identifier: "_ZTS21HAL_UART_StateTypeDef")
!581 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "74469f61b271b78e5ff5784cb5eb97d1")
!582 = !{!583, !584, !585, !586, !587, !588, !589, !590}
!583 = !DIEnumerator(name: "HAL_UART_STATE_RESET", value: 0, isUnsigned: true)
!584 = !DIEnumerator(name: "HAL_UART_STATE_READY", value: 32, isUnsigned: true)
!585 = !DIEnumerator(name: "HAL_UART_STATE_BUSY", value: 36, isUnsigned: true)
!586 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_TX", value: 33, isUnsigned: true)
!587 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_RX", value: 34, isUnsigned: true)
!588 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_TX_RX", value: 35, isUnsigned: true)
!589 = !DIEnumerator(name: "HAL_UART_STATE_TIMEOUT", value: 160, isUnsigned: true)
!590 = !DIEnumerator(name: "HAL_UART_STATE_ERROR", value: 224, isUnsigned: true)
!591 = !{!21, !14, !592, !602, !31, !39, !34, !129, !616, !646, !671}
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 32)
!593 = !DIDerivedType(tag: DW_TAG_typedef, name: "AFIO_TypeDef", file: !16, line: 380, baseType: !594)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 373, size: 256, flags: DIFlagTypePassByValue, elements: !595, identifier: "_ZTS12AFIO_TypeDef")
!595 = !{!596, !597, !598, !600, !601}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "EVCR", scope: !594, file: !16, line: 375, baseType: !20, size: 32)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "MAPR", scope: !594, file: !16, line: 376, baseType: !20, size: 32, offset: 32)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !594, file: !16, line: 377, baseType: !599, size: 128, offset: 64)
!599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 128, elements: !64)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !594, file: !16, line: 378, baseType: !21, size: 32, offset: 192)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "MAPR2", scope: !594, file: !16, line: 379, baseType: !20, size: 32, offset: 224)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 32)
!603 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !16, line: 438, baseType: !604)
!604 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 424, size: 320, flags: DIFlagTypePassByValue, elements: !605, identifier: "_ZTS11RCC_TypeDef")
!605 = !{!606, !607, !608, !609, !610, !611, !612, !613, !614, !615}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !604, file: !16, line: 426, baseType: !20, size: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !604, file: !16, line: 427, baseType: !20, size: 32, offset: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !604, file: !16, line: 428, baseType: !20, size: 32, offset: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !604, file: !16, line: 429, baseType: !20, size: 32, offset: 96)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !604, file: !16, line: 430, baseType: !20, size: 32, offset: 128)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !604, file: !16, line: 431, baseType: !20, size: 32, offset: 160)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !604, file: !16, line: 432, baseType: !20, size: 32, offset: 192)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !604, file: !16, line: 433, baseType: !20, size: 32, offset: 224)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !604, file: !16, line: 434, baseType: !20, size: 32, offset: 256)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !604, file: !16, line: 435, baseType: !20, size: 32, offset: 288)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 32)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !289, line: 355, baseType: !618)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !289, line: 340, size: 28704, flags: DIFlagTypePassByValue, elements: !619, identifier: "_ZTS9NVIC_Type")
!619 = !{!620, !622, !626, !627, !628, !629, !630, !631, !632, !633, !637, !641, !645}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !618, file: !289, line: 342, baseType: !621, size: 256)
!621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 256, elements: !330)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !618, file: !289, line: 343, baseType: !623, size: 768, offset: 256)
!623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 768, elements: !624)
!624 = !{!625}
!625 = !DISubrange(count: 24)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !618, file: !289, line: 344, baseType: !621, size: 256, offset: 1024)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !618, file: !289, line: 345, baseType: !623, size: 768, offset: 1280)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !618, file: !289, line: 346, baseType: !621, size: 256, offset: 2048)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !618, file: !289, line: 347, baseType: !623, size: 768, offset: 2304)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !618, file: !289, line: 348, baseType: !621, size: 256, offset: 3072)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !618, file: !289, line: 349, baseType: !623, size: 768, offset: 3328)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !618, file: !289, line: 350, baseType: !621, size: 256, offset: 4096)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !618, file: !289, line: 351, baseType: !634, size: 1792, offset: 4352)
!634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 1792, elements: !635)
!635 = !{!636}
!636 = !DISubrange(count: 56)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !618, file: !289, line: 352, baseType: !638, size: 1920, offset: 6144)
!638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 1920, elements: !639)
!639 = !{!640}
!640 = !DISubrange(count: 240)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !618, file: !289, line: 353, baseType: !642, size: 20608, offset: 8064)
!642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 20608, elements: !643)
!643 = !{!644}
!644 = !DISubrange(count: 644)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !618, file: !289, line: 354, baseType: !20, size: 32, offset: 28672)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 32)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !289, line: 397, baseType: !648)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !289, line: 374, size: 1120, flags: DIFlagTypePassByValue, elements: !649, identifier: "_ZTS8SCB_Type")
!649 = !{!650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !648, file: !289, line: 376, baseType: !293, size: 32)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !648, file: !289, line: 377, baseType: !20, size: 32, offset: 32)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !648, file: !289, line: 378, baseType: !20, size: 32, offset: 64)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !648, file: !289, line: 379, baseType: !20, size: 32, offset: 96)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !648, file: !289, line: 380, baseType: !20, size: 32, offset: 128)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !648, file: !289, line: 381, baseType: !20, size: 32, offset: 160)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !648, file: !289, line: 382, baseType: !300, size: 96, offset: 192)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !648, file: !289, line: 383, baseType: !20, size: 32, offset: 288)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !648, file: !289, line: 384, baseType: !20, size: 32, offset: 320)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !648, file: !289, line: 385, baseType: !20, size: 32, offset: 352)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !648, file: !289, line: 386, baseType: !20, size: 32, offset: 384)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !648, file: !289, line: 387, baseType: !20, size: 32, offset: 416)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !648, file: !289, line: 388, baseType: !20, size: 32, offset: 448)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !648, file: !289, line: 389, baseType: !20, size: 32, offset: 480)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !648, file: !289, line: 390, baseType: !312, size: 64, offset: 512)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !648, file: !289, line: 391, baseType: !293, size: 32, offset: 576)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !648, file: !289, line: 392, baseType: !293, size: 32, offset: 608)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !648, file: !289, line: 393, baseType: !316, size: 128, offset: 640)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !648, file: !289, line: 394, baseType: !318, size: 160, offset: 768)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !648, file: !289, line: 395, baseType: !322, size: 160, offset: 928)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !648, file: !289, line: 396, baseType: !20, size: 32, offset: 1088)
!671 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Stm32Uart", scope: !105, file: !104, line: 51, size: 1536, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !672, vtableHolder: !776)
!672 = !{!673, !676, !679, !680, !716, !717, !718, !719, !721, !727, !730, !733, !736, !740, !743, !744, !747, !748, !755, !759, !760, !761, !764, !765, !769, !773}
!673 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !671, baseType: !674, flags: DIFlagPublic, extraData: i32 0)
!674 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "BufferedSerial", scope: !105, file: !675, line: 42, size: 832, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada14BufferedSerialE")
!675 = !DIFile(filename: "../cicada/bufferedserial.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "b9c9871d742db1af5ee8abb5df52fc59")
!676 = !DIDerivedType(tag: DW_TAG_member, name: "instance", scope: !671, file: !104, line: 120, baseType: !677, flags: DIFlagStaticMember)
!677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !678, size: 128, elements: !64)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 32)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !671, file: !104, line: 122, baseType: !39, size: 8, offset: 832)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "_handle", scope: !671, file: !104, line: 123, baseType: !681, size: 576, offset: 864)
!681 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_HandleTypeDef", file: !581, line: 189, baseType: !682)
!682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__UART_HandleTypeDef", file: !581, line: 141, size: 576, flags: DIFlagTypePassByValue, elements: !683, identifier: "_ZTS20__UART_HandleTypeDef")
!683 = !{!684, !685, !696, !697, !698, !700, !701, !702, !703, !708, !709, !711, !714, !715}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "Instance", scope: !682, file: !581, line: 143, baseType: !14, size: 32)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "Init", scope: !682, file: !581, line: 145, baseType: !686, size: 224, offset: 32)
!686 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_InitTypeDef", file: !581, line: 76, baseType: !687)
!687 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !581, line: 47, size: 224, flags: DIFlagTypePassByValue, elements: !688, identifier: "_ZTS16UART_InitTypeDef")
!688 = !{!689, !690, !691, !692, !693, !694, !695}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "BaudRate", scope: !687, file: !581, line: 49, baseType: !21, size: 32)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "WordLength", scope: !687, file: !581, line: 54, baseType: !21, size: 32, offset: 32)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "StopBits", scope: !687, file: !581, line: 57, baseType: !21, size: 32, offset: 64)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "Parity", scope: !687, file: !581, line: 60, baseType: !21, size: 32, offset: 96)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !687, file: !581, line: 67, baseType: !21, size: 32, offset: 128)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "HwFlowCtl", scope: !687, file: !581, line: 70, baseType: !21, size: 32, offset: 160)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "OverSampling", scope: !687, file: !581, line: 73, baseType: !21, size: 32, offset: 192)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "pTxBuffPtr", scope: !682, file: !581, line: 147, baseType: !42, size: 32, offset: 256)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "TxXferSize", scope: !682, file: !581, line: 149, baseType: !34, size: 16, offset: 288)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "TxXferCount", scope: !682, file: !581, line: 151, baseType: !699, size: 16, offset: 304)
!699 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !34)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "pRxBuffPtr", scope: !682, file: !581, line: 153, baseType: !42, size: 32, offset: 320)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "RxXferSize", scope: !682, file: !581, line: 155, baseType: !34, size: 16, offset: 352)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "RxXferCount", scope: !682, file: !581, line: 157, baseType: !699, size: 16, offset: 368)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "hdmatx", scope: !682, file: !581, line: 159, baseType: !704, size: 32, offset: 384)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 32)
!705 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_HandleTypeDef", file: !706, line: 137, baseType: !707)
!706 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "dd8e7645a79a80f8166404bb078b3d4e")
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__DMA_HandleTypeDef", file: !706, line: 111, size: 576, flags: DIFlagFwdDecl, identifier: "_ZTS19__DMA_HandleTypeDef")
!708 = !DIDerivedType(tag: DW_TAG_member, name: "hdmarx", scope: !682, file: !581, line: 161, baseType: !704, size: 32, offset: 416)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "Lock", scope: !682, file: !581, line: 163, baseType: !710, size: 32, offset: 448)
!710 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_LockTypeDef", file: !6, line: 56, baseType: !576)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "gState", scope: !682, file: !581, line: 165, baseType: !712, size: 32, offset: 480)
!712 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !713)
!713 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_UART_StateTypeDef", file: !581, line: 136, baseType: !580)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "RxState", scope: !682, file: !581, line: 169, baseType: !712, size: 32, offset: 512)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "ErrorCode", scope: !682, file: !581, line: 172, baseType: !20, size: 32, offset: 544)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "_uartPort", scope: !671, file: !104, line: 124, baseType: !31, size: 32, offset: 1440)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "_txPin", scope: !671, file: !104, line: 125, baseType: !34, size: 16, offset: 1472)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "_rxPin", scope: !671, file: !104, line: 126, baseType: !34, size: 16, offset: 1488)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "_uartInterruptInstance", scope: !671, file: !104, line: 127, baseType: !720, size: 32, offset: 1504)
!720 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !16, line: 126, baseType: !575)
!721 = !DISubprogram(name: "Stm32Uart", scope: !671, file: !104, line: 66, type: !722, scopeLine: 66, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!722 = !DISubroutineType(types: !723)
!723 = !{null, !724, !212, !212, !725, !14, !31, !34, !34}
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "Size", scope: !105, file: !726, line: 32, baseType: !167)
!726 = !DIFile(filename: "../cicada/types.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "6dfa4c2c933d4c520c13fa7638528c51")
!727 = !DISubprogram(name: "Stm32Uart", scope: !671, file: !104, line: 83, type: !728, scopeLine: 83, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!728 = !DISubroutineType(types: !729)
!729 = !{null, !724, !212, !212, !725, !725, !14, !31, !34, !34}
!730 = !DISubprogram(name: "~Stm32Uart", scope: !671, file: !104, line: 86, type: !731, scopeLine: 86, containingType: !671, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!731 = !DISubroutineType(types: !732)
!732 = !{null, !724}
!733 = !DISubprogram(name: "getInstance", linkageName: "_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef", scope: !671, file: !104, line: 88, type: !734, scopeLine: 88, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!734 = !DISubroutineType(types: !735)
!735 = !{!678, !14}
!736 = !DISubprogram(name: "open", linkageName: "_ZN6Cicada9Stm32Uart4openEv", scope: !671, file: !104, line: 93, type: !737, scopeLine: 93, containingType: !671, virtualIndex: 15, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!737 = !DISubroutineType(types: !738)
!738 = !{!739, !724}
!739 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!740 = !DISubprogram(name: "open", linkageName: "_ZN6Cicada9Stm32Uart4openEh", scope: !671, file: !104, line: 100, type: !741, scopeLine: 100, containingType: !671, virtualIndex: 16, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!741 = !DISubroutineType(types: !742)
!742 = !{!739, !724, !39}
!743 = !DISubprogram(name: "isOpen", linkageName: "_ZN6Cicada9Stm32Uart6isOpenEv", scope: !671, file: !104, line: 102, type: !737, scopeLine: 102, containingType: !671, virtualIndex: 17, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!744 = !DISubprogram(name: "setSerialConfig", linkageName: "_ZN6Cicada9Stm32Uart15setSerialConfigEjh", scope: !671, file: !104, line: 103, type: !745, scopeLine: 103, containingType: !671, virtualIndex: 18, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!745 = !DISubroutineType(types: !746)
!746 = !{!739, !724, !21, !39}
!747 = !DISubprogram(name: "close", linkageName: "_ZN6Cicada9Stm32Uart5closeEv", scope: !671, file: !104, line: 104, type: !731, scopeLine: 104, containingType: !671, virtualIndex: 19, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!748 = !DISubprogram(name: "portName", linkageName: "_ZNK6Cicada9Stm32Uart8portNameEv", scope: !671, file: !104, line: 105, type: !749, scopeLine: 105, containingType: !671, virtualIndex: 20, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!749 = !DISubroutineType(types: !750)
!750 = !{!751, !753}
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 32)
!752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !114)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!754 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !671)
!755 = !DISubprogram(name: "rawRead", linkageName: "_ZN6Cicada9Stm32Uart7rawReadERh", scope: !671, file: !104, line: 106, type: !756, scopeLine: 106, containingType: !671, virtualIndex: 21, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!756 = !DISubroutineType(types: !757)
!757 = !{!739, !724, !758}
!758 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !39, size: 32)
!759 = !DISubprogram(name: "rawWrite", linkageName: "_ZN6Cicada9Stm32Uart8rawWriteEh", scope: !671, file: !104, line: 107, type: !741, scopeLine: 107, containingType: !671, virtualIndex: 22, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!760 = !DISubprogram(name: "startTransmit", linkageName: "_ZN6Cicada9Stm32Uart13startTransmitEv", scope: !671, file: !104, line: 108, type: !731, scopeLine: 108, containingType: !671, virtualIndex: 23, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!761 = !DISubprogram(name: "writeBufferProcessed", linkageName: "_ZNK6Cicada9Stm32Uart20writeBufferProcessedEv", scope: !671, file: !104, line: 109, type: !762, scopeLine: 109, containingType: !671, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!762 = !DISubroutineType(types: !763)
!763 = !{!739, !753}
!764 = !DISubprogram(name: "handleInterrupt", linkageName: "_ZN6Cicada9Stm32Uart15handleInterruptEv", scope: !671, file: !104, line: 111, type: !731, scopeLine: 111, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!765 = !DISubprogram(name: "Stm32Uart", scope: !671, file: !104, line: 115, type: !766, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!766 = !DISubroutineType(types: !767)
!767 = !{null, !724, !768}
!768 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !754, size: 32)
!769 = !DISubprogram(name: "operator=", linkageName: "_ZN6Cicada9Stm32UartaSERKS0_", scope: !671, file: !104, line: 116, type: !770, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!770 = !DISubroutineType(types: !771)
!771 = !{!772, !724, !768}
!772 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !671, size: 32)
!773 = !DISubprogram(name: "init", linkageName: "_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef", scope: !671, file: !104, line: 118, type: !774, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!774 = !DISubroutineType(types: !775)
!775 = !{null, !724, !14}
!776 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "ICommDevice", scope: !105, file: !777, line: 43, size: 32, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !778, vtableHolder: !776, identifier: "_ZTSN6Cicada11ICommDeviceE")
!777 = !DIFile(filename: "../cicada/icommdevice.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e83d2959922f5020d303a6315b56c6e9")
!778 = !{!779, !784, !788, !793, !794, !797, !800}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$ICommDevice", scope: !777, file: !777, baseType: !780, size: 32, flags: DIFlagArtificial)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 32)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "__vtbl_ptr_type", baseType: !782, size: 32)
!782 = !DISubroutineType(types: !783)
!783 = !{!131}
!784 = !DISubprogram(name: "~ICommDevice", scope: !776, file: !777, line: 46, type: !785, scopeLine: 46, containingType: !776, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!785 = !DISubroutineType(types: !786)
!786 = !{null, !787}
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!788 = !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada11ICommDevice14bytesAvailableEv", scope: !776, file: !777, line: 52, type: !789, scopeLine: 52, containingType: !776, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!789 = !DISubroutineType(types: !790)
!790 = !{!725, !791}
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !776)
!793 = !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada11ICommDevice14spaceAvailableEv", scope: !776, file: !777, line: 60, type: !789, scopeLine: 60, containingType: !776, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!794 = !DISubprogram(name: "writeBufferProcessed", linkageName: "_ZNK6Cicada11ICommDevice20writeBufferProcessedEv", scope: !776, file: !777, line: 71, type: !795, scopeLine: 71, containingType: !776, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!795 = !DISubroutineType(types: !796)
!796 = !{!739, !791}
!797 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada11ICommDevice4readEPhy", scope: !776, file: !777, line: 85, type: !798, scopeLine: 85, containingType: !776, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!798 = !DISubroutineType(types: !799)
!799 = !{!725, !787, !42, !725}
!800 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada11ICommDevice5writeEPKhy", scope: !776, file: !777, line: 98, type: !801, scopeLine: 98, containingType: !776, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!801 = !DISubroutineType(types: !802)
!802 = !{!725, !787, !37, !725}
!803 = !{!570}
!804 = !{!118, !124, !128, !132, !136, !139, !141, !143, !145, !148, !151, !154, !157, !160, !163, !164, !165, !166, !170, !172, !174, !176, !178, !181, !184, !187, !190, !193, !805}
!805 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !572, entity: !105, file: !573, line: 28)
!806 = distinct !DICompileUnit(language: DW_LANG_C99, file: !807, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !808, retainedTypes: !813, splitDebugInlining: false, nameTableKind: None)
!807 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "bf5d5e021854d33cea3d58ed6b9d5087")
!808 = !{!345, !267, !809}
!809 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !268, line: 157, baseType: !7, size: 32, elements: !810)
!810 = !{!811, !812}
!811 = !DIEnumerator(name: "DISABLE", value: 0)
!812 = !DIEnumerator(name: "ENABLE", value: 1)
!813 = !{!814, !21, !54, !39, !459, !828, !834, !34, !847, !458}
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 32)
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !16, line: 438, baseType: !816)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 424, size: 320, elements: !817)
!817 = !{!818, !819, !820, !821, !822, !823, !824, !825, !826, !827}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !816, file: !16, line: 426, baseType: !20, size: 32)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !816, file: !16, line: 427, baseType: !20, size: 32, offset: 32)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !816, file: !16, line: 428, baseType: !20, size: 32, offset: 64)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !816, file: !16, line: 429, baseType: !20, size: 32, offset: 96)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !816, file: !16, line: 430, baseType: !20, size: 32, offset: 128)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !816, file: !16, line: 431, baseType: !20, size: 32, offset: 160)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !816, file: !16, line: 432, baseType: !20, size: 32, offset: 192)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !816, file: !16, line: 433, baseType: !20, size: 32, offset: 224)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !816, file: !16, line: 434, baseType: !20, size: 32, offset: 256)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !816, file: !16, line: 435, baseType: !20, size: 32, offset: 288)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 32)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !16, line: 418, baseType: !830)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 414, size: 64, elements: !831)
!831 = !{!832, !833}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !830, file: !16, line: 416, baseType: !20, size: 32)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !830, file: !16, line: 417, baseType: !20, size: 32, offset: 32)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 32)
!835 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !16, line: 336, baseType: !836)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 325, size: 288, elements: !837)
!837 = !{!838, !839, !840, !841, !842, !843, !844, !845, !846}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !836, file: !16, line: 327, baseType: !20, size: 32)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !836, file: !16, line: 328, baseType: !20, size: 32, offset: 32)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !836, file: !16, line: 329, baseType: !20, size: 32, offset: 64)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !836, file: !16, line: 330, baseType: !20, size: 32, offset: 96)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !836, file: !16, line: 331, baseType: !20, size: 32, offset: 128)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "AR", scope: !836, file: !16, line: 332, baseType: !20, size: 32, offset: 160)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !836, file: !16, line: 333, baseType: !20, size: 32, offset: 192)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !836, file: !16, line: 334, baseType: !20, size: 32, offset: 224)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR", scope: !836, file: !16, line: 335, baseType: !20, size: 32, offset: 256)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 32)
!848 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !16, line: 367, baseType: !849)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 358, size: 224, elements: !850)
!850 = !{!851, !852, !853, !854, !855, !856, !857}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "CRL", scope: !849, file: !16, line: 360, baseType: !20, size: 32)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "CRH", scope: !849, file: !16, line: 361, baseType: !20, size: 32, offset: 32)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !849, file: !16, line: 362, baseType: !20, size: 32, offset: 64)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !849, file: !16, line: 363, baseType: !20, size: 32, offset: 96)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !849, file: !16, line: 364, baseType: !20, size: 32, offset: 128)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !849, file: !16, line: 365, baseType: !20, size: 32, offset: 160)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !849, file: !16, line: 366, baseType: !20, size: 32, offset: 192)
!858 = distinct !DICompileUnit(language: DW_LANG_C99, file: !859, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !860, retainedTypes: !861, splitDebugInlining: false, nameTableKind: None)
!859 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "83cb8d6817603f64d73dca2a0b01efa1")
!860 = !{!351}
!861 = !{!862, !21, !870, !129, !39, !895}
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 32)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !289, line: 700, baseType: !864)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !289, line: 694, size: 128, elements: !865)
!865 = !{!866, !867, !868, !869}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !864, file: !289, line: 696, baseType: !20, size: 32)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !864, file: !289, line: 697, baseType: !20, size: 32, offset: 32)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !864, file: !289, line: 698, baseType: !20, size: 32, offset: 64)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !864, file: !289, line: 699, baseType: !293, size: 32, offset: 96)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 32)
!871 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !289, line: 397, baseType: !872)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !289, line: 374, size: 1120, elements: !873)
!873 = !{!874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !872, file: !289, line: 376, baseType: !293, size: 32)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !872, file: !289, line: 377, baseType: !20, size: 32, offset: 32)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !872, file: !289, line: 378, baseType: !20, size: 32, offset: 64)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !872, file: !289, line: 379, baseType: !20, size: 32, offset: 96)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !872, file: !289, line: 380, baseType: !20, size: 32, offset: 128)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !872, file: !289, line: 381, baseType: !20, size: 32, offset: 160)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !872, file: !289, line: 382, baseType: !300, size: 96, offset: 192)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !872, file: !289, line: 383, baseType: !20, size: 32, offset: 288)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !872, file: !289, line: 384, baseType: !20, size: 32, offset: 320)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !872, file: !289, line: 385, baseType: !20, size: 32, offset: 352)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !872, file: !289, line: 386, baseType: !20, size: 32, offset: 384)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !872, file: !289, line: 387, baseType: !20, size: 32, offset: 416)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !872, file: !289, line: 388, baseType: !20, size: 32, offset: 448)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !872, file: !289, line: 389, baseType: !20, size: 32, offset: 480)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !872, file: !289, line: 390, baseType: !312, size: 64, offset: 512)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !872, file: !289, line: 391, baseType: !293, size: 32, offset: 576)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !872, file: !289, line: 392, baseType: !293, size: 32, offset: 608)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !872, file: !289, line: 393, baseType: !316, size: 128, offset: 640)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !872, file: !289, line: 394, baseType: !318, size: 160, offset: 768)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !872, file: !289, line: 395, baseType: !322, size: 160, offset: 928)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !872, file: !289, line: 396, baseType: !20, size: 32, offset: 1088)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 32)
!896 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !289, line: 355, baseType: !897)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !289, line: 340, size: 28704, elements: !898)
!898 = !{!899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !897, file: !289, line: 342, baseType: !621, size: 256)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !897, file: !289, line: 343, baseType: !623, size: 768, offset: 256)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !897, file: !289, line: 344, baseType: !621, size: 256, offset: 1024)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !897, file: !289, line: 345, baseType: !623, size: 768, offset: 1280)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !897, file: !289, line: 346, baseType: !621, size: 256, offset: 2048)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !897, file: !289, line: 347, baseType: !623, size: 768, offset: 2304)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !897, file: !289, line: 348, baseType: !621, size: 256, offset: 3072)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !897, file: !289, line: 349, baseType: !623, size: 768, offset: 3328)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !897, file: !289, line: 350, baseType: !621, size: 256, offset: 4096)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !897, file: !289, line: 351, baseType: !634, size: 1792, offset: 4352)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !897, file: !289, line: 352, baseType: !638, size: 1920, offset: 6144)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !897, file: !289, line: 353, baseType: !642, size: 20608, offset: 8064)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !897, file: !289, line: 354, baseType: !20, size: 32, offset: 28672)
!912 = distinct !DICompileUnit(language: DW_LANG_C99, file: !913, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !914, retainedTypes: !920, splitDebugInlining: false, nameTableKind: None)
!913 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "de98d9c05272efa2ca465428751dd1b5")
!914 = !{!915, !345}
!915 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !916, line: 65, baseType: !7, size: 32, elements: !917)
!916 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "b5ff32b0624c591654a3e02ee400cffe")
!917 = !{!918, !919}
!918 = !DIEnumerator(name: "GPIO_PIN_RESET", value: 0)
!919 = !DIEnumerator(name: "GPIO_PIN_SET", value: 1)
!920 = !{!21, !34, !921, !935, !944, !955}
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !16, line: 438, baseType: !923)
!923 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 424, size: 320, elements: !924)
!924 = !{!925, !926, !927, !928, !929, !930, !931, !932, !933, !934}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !923, file: !16, line: 426, baseType: !20, size: 32)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !923, file: !16, line: 427, baseType: !20, size: 32, offset: 32)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !923, file: !16, line: 428, baseType: !20, size: 32, offset: 64)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !923, file: !16, line: 429, baseType: !20, size: 32, offset: 96)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !923, file: !16, line: 430, baseType: !20, size: 32, offset: 128)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !923, file: !16, line: 431, baseType: !20, size: 32, offset: 160)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !923, file: !16, line: 432, baseType: !20, size: 32, offset: 192)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !923, file: !16, line: 433, baseType: !20, size: 32, offset: 224)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !923, file: !16, line: 434, baseType: !20, size: 32, offset: 256)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !923, file: !16, line: 435, baseType: !20, size: 32, offset: 288)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 32)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "AFIO_TypeDef", file: !16, line: 380, baseType: !937)
!937 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 373, size: 256, elements: !938)
!938 = !{!939, !940, !941, !942, !943}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "EVCR", scope: !937, file: !16, line: 375, baseType: !20, size: 32)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "MAPR", scope: !937, file: !16, line: 376, baseType: !20, size: 32, offset: 32)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !937, file: !16, line: 377, baseType: !599, size: 128, offset: 64)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !937, file: !16, line: 378, baseType: !21, size: 32, offset: 192)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "MAPR2", scope: !937, file: !16, line: 379, baseType: !20, size: 32, offset: 224)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 32)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !16, line: 367, baseType: !946)
!946 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 358, size: 224, elements: !947)
!947 = !{!948, !949, !950, !951, !952, !953, !954}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "CRL", scope: !946, file: !16, line: 360, baseType: !20, size: 32)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "CRH", scope: !946, file: !16, line: 361, baseType: !20, size: 32, offset: 32)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !946, file: !16, line: 362, baseType: !20, size: 32, offset: 64)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !946, file: !16, line: 363, baseType: !20, size: 32, offset: 96)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !946, file: !16, line: 364, baseType: !20, size: 32, offset: 128)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !946, file: !16, line: 365, baseType: !20, size: 32, offset: 160)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !946, file: !16, line: 366, baseType: !20, size: 32, offset: 192)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !16, line: 319, baseType: !957)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 311, size: 192, elements: !958)
!958 = !{!959, !960, !961, !962, !963, !964}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !957, file: !16, line: 313, baseType: !20, size: 32)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !957, file: !16, line: 314, baseType: !20, size: 32, offset: 32)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !957, file: !16, line: 315, baseType: !20, size: 32, offset: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !957, file: !16, line: 316, baseType: !20, size: 32, offset: 96)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !957, file: !16, line: 317, baseType: !20, size: 32, offset: 128)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !957, file: !16, line: 318, baseType: !20, size: 32, offset: 160)
!965 = distinct !DICompileUnit(language: DW_LANG_C99, file: !966, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !967, splitDebugInlining: false, nameTableKind: None)
!966 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Middlewares/Third_Party/FreeRTOS/Source/list.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "07241db0e76b259c6ede584bfdc291d6")
!967 = !{!968, !61, !43, !54, !978}
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !496, line: 149, baseType: !970)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !496, line: 139, size: 160, elements: !971)
!971 = !{!972, !973, !975, !976, !977}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !970, file: !496, line: 142, baseType: !61, size: 32)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !970, file: !496, line: 143, baseType: !974, size: 32, offset: 32)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 32)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !970, file: !496, line: 144, baseType: !974, size: 32, offset: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !970, file: !496, line: 145, baseType: !54, size: 32, offset: 96)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !970, file: !496, line: 146, baseType: !54, size: 32, offset: 128)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 32)
!979 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !496, line: 170, baseType: !980)
!980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !496, line: 163, size: 160, elements: !981)
!981 = !{!982, !983, !984}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !980, file: !496, line: 166, baseType: !520, size: 32)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !980, file: !496, line: 167, baseType: !968, size: 32, offset: 32)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !980, file: !496, line: 168, baseType: !985, size: 96, offset: 64)
!985 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !496, line: 158, baseType: !986)
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !496, line: 151, size: 96, elements: !987)
!987 = !{!988, !989, !990}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !986, file: !496, line: 154, baseType: !61, size: 32)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !986, file: !496, line: 155, baseType: !974, size: 32, offset: 32)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !986, file: !496, line: 156, baseType: !974, size: 32, offset: 64)
!991 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !992, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !993, imports: !1181, splitDebugInlining: false, nameTableKind: None)
!992 = !DIFile(filename: "../cicada/bufferedserial.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "0c50e54046b616f386000f55e6143c47")
!993 = !{!994, !997, !776, !1002, !1061, !1065}
!994 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "BufferedSerial", scope: !105, file: !675, line: 42, size: 832, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !995, vtableHolder: !776)
!995 = !{!996, !1060, !1139, !1140, !1144, !1147, !1152, !1153, !1156, !1159, !1162, !1165, !1168, !1171, !1172, !1175, !1178, !1179, !1180}
!996 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !994, baseType: !997, flags: DIFlagPublic, extraData: i32 0)
!997 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "IBufferedSerial", scope: !105, file: !998, line: 39, size: 64, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !999, vtableHolder: !776, identifier: "_ZTSN6Cicada15IBufferedSerialE")
!998 = !DIFile(filename: "../cicada/ibufferedserial.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "0e5db7c0b86651abb573e233dc791166")
!999 = !{!1000, !1001, !1030, !1034, !1037, !1040, !1043, !1046, !1049, !1054, !1055, !1056, !1059}
!1000 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !997, baseType: !776, flags: DIFlagPublic, extraData: i32 0)
!1001 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !997, baseType: !1002, offset: 32, flags: DIFlagPublic, extraData: i32 0)
!1002 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "ISerial", scope: !105, file: !1003, line: 37, size: 32, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1004, vtableHolder: !1002, identifier: "_ZTSN6Cicada7ISerialE")
!1003 = !DIFile(filename: "../cicada/iserial.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e3dc53a2acd15a8e90c357a32168f40f")
!1004 = !{!1005, !1006, !1010, !1013, !1014, !1017, !1018, !1023, !1026, !1029}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$ISerial", scope: !1003, file: !1003, baseType: !780, size: 32, flags: DIFlagArtificial)
!1006 = !DISubprogram(name: "~ISerial", scope: !1002, file: !1003, line: 40, type: !1007, scopeLine: 40, containingType: !1002, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{null, !1009}
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1010 = !DISubprogram(name: "open", linkageName: "_ZN6Cicada7ISerial4openEv", scope: !1002, file: !1003, line: 46, type: !1011, scopeLine: 46, containingType: !1002, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!739, !1009}
!1013 = !DISubprogram(name: "isOpen", linkageName: "_ZN6Cicada7ISerial6isOpenEv", scope: !1002, file: !1003, line: 52, type: !1011, scopeLine: 52, containingType: !1002, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1014 = !DISubprogram(name: "setSerialConfig", linkageName: "_ZN6Cicada7ISerial15setSerialConfigEjh", scope: !1002, file: !1003, line: 60, type: !1015, scopeLine: 60, containingType: !1002, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{!739, !1009, !21, !39}
!1017 = !DISubprogram(name: "close", linkageName: "_ZN6Cicada7ISerial5closeEv", scope: !1002, file: !1003, line: 65, type: !1007, scopeLine: 65, containingType: !1002, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1018 = !DISubprogram(name: "portName", linkageName: "_ZNK6Cicada7ISerial8portNameEv", scope: !1002, file: !1003, line: 71, type: !1019, scopeLine: 71, containingType: !1002, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!751, !1021}
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1002)
!1023 = !DISubprogram(name: "rawRead", linkageName: "_ZN6Cicada7ISerial7rawReadERh", scope: !1002, file: !1003, line: 80, type: !1024, scopeLine: 80, containingType: !1002, virtualIndex: 7, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{!739, !1009, !758}
!1026 = !DISubprogram(name: "rawWrite", linkageName: "_ZN6Cicada7ISerial8rawWriteEh", scope: !1002, file: !1003, line: 87, type: !1027, scopeLine: 87, containingType: !1002, virtualIndex: 8, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!739, !1009, !39}
!1029 = !DISubprogram(name: "startTransmit", linkageName: "_ZN6Cicada7ISerial13startTransmitEv", scope: !1002, file: !1003, line: 93, type: !1007, scopeLine: 93, containingType: !1002, virtualIndex: 9, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1030 = !DISubprogram(name: "~IBufferedSerial", scope: !997, file: !998, line: 42, type: !1031, scopeLine: 42, containingType: !997, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1031 = !DISubroutineType(types: !1032)
!1032 = !{null, !1033}
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1034 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada15IBufferedSerial4readEPhy", scope: !997, file: !998, line: 44, type: !1035, scopeLine: 44, containingType: !997, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1035 = !DISubroutineType(types: !1036)
!1036 = !{!725, !1033, !42, !725}
!1037 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada15IBufferedSerial5writeEPKhy", scope: !997, file: !998, line: 45, type: !1038, scopeLine: 45, containingType: !997, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{!725, !1033, !37, !725}
!1040 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada15IBufferedSerial4readEv", scope: !997, file: !998, line: 51, type: !1041, scopeLine: 51, containingType: !997, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!39, !1033}
!1043 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada15IBufferedSerial5writeEPKh", scope: !997, file: !998, line: 62, type: !1044, scopeLine: 62, containingType: !997, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!725, !1033, !37}
!1046 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada15IBufferedSerial5writeEh", scope: !997, file: !998, line: 68, type: !1047, scopeLine: 68, containingType: !997, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1047 = !DISubroutineType(types: !1048)
!1048 = !{null, !1033, !39}
!1049 = !DISubprogram(name: "canReadLine", linkageName: "_ZNK6Cicada15IBufferedSerial11canReadLineEv", scope: !997, file: !998, line: 73, type: !1050, scopeLine: 73, containingType: !997, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1050 = !DISubroutineType(types: !1051)
!1051 = !{!739, !1052}
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !997)
!1054 = !DISubprogram(name: "readLine", linkageName: "_ZN6Cicada15IBufferedSerial8readLineEPhy", scope: !997, file: !998, line: 85, type: !1035, scopeLine: 85, containingType: !997, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1055 = !DISubprogram(name: "flushReceiveBuffers", linkageName: "_ZN6Cicada15IBufferedSerial19flushReceiveBuffersEv", scope: !997, file: !998, line: 90, type: !1031, scopeLine: 90, containingType: !997, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1056 = !DISubprogram(name: "readBufferSize", linkageName: "_ZN6Cicada15IBufferedSerial14readBufferSizeEv", scope: !997, file: !998, line: 95, type: !1057, scopeLine: 95, containingType: !997, virtualIndex: 13, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{!725, !1033}
!1059 = !DISubprogram(name: "writeBufferSize", linkageName: "_ZN6Cicada15IBufferedSerial15writeBufferSizeEv", scope: !997, file: !998, line: 96, type: !1057, scopeLine: 96, containingType: !997, virtualIndex: 14, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "_readBuffer", scope: !994, file: !675, line: 105, baseType: !1061, size: 384, offset: 64, flags: DIFlagProtected)
!1061 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "LineCircularBuffer", scope: !105, file: !1062, line: 38, size: 384, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1063, vtableHolder: !1065, identifier: "_ZTSN6Cicada18LineCircularBufferE")
!1062 = !DIFile(filename: "../cicada/linecircularbuffer.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "7c64ede70efe975ae69caea246f4ce64")
!1063 = !{!1064, !1113, !1114, !1118, !1121, !1124, !1127, !1130, !1135, !1136}
!1064 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1061, baseType: !1065, flags: DIFlagPublic, extraData: i32 0)
!1065 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "CircularBuffer<char>", scope: !105, file: !1066, line: 39, size: 384, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1067, vtableHolder: !1065, templateParams: !1111, identifier: "_ZTSN6Cicada14CircularBufferIcEE")
!1066 = !DIFile(filename: "../cicada/circularbuffer.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "eefa34d28a75acab61b1e5f45f9ba1dd")
!1067 = !{!1068, !1069, !1070, !1071, !1072, !1074, !1075, !1079, !1082, !1085, !1088, !1091, !1094, !1095, !1096, !1101, !1102, !1105, !1106, !1107}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$CircularBuffer", scope: !1066, file: !1066, baseType: !780, size: 32, flags: DIFlagArtificial)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "_writeHead", scope: !1065, file: !1066, line: 196, baseType: !725, size: 64, offset: 64)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "_readHead", scope: !1065, file: !1066, line: 197, baseType: !725, size: 64, offset: 128)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "_availableData", scope: !1065, file: !1066, line: 198, baseType: !725, size: 64, offset: 192)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "_bufferSize", scope: !1065, file: !1066, line: 199, baseType: !1073, size: 64, offset: 256)
!1073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !725)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "_buffer", scope: !1065, file: !1066, line: 200, baseType: !212, size: 32, offset: 320)
!1075 = !DISubprogram(name: "CircularBuffer", scope: !1065, file: !1066, line: 48, type: !1076, scopeLine: 48, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{null, !1078, !212, !725}
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1079 = !DISubprogram(name: "~CircularBuffer", scope: !1065, file: !1066, line: 56, type: !1080, scopeLine: 56, containingType: !1065, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{null, !1078}
!1082 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIcE4pushEPKcy", scope: !1065, file: !1066, line: 65, type: !1083, scopeLine: 65, containingType: !1065, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1083 = !DISubroutineType(types: !1084)
!1084 = !{!725, !1078, !751, !725}
!1085 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIcE4pushEc", scope: !1065, file: !1066, line: 88, type: !1086, scopeLine: 88, containingType: !1065, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{null, !1078, !114}
!1088 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIcE4pullEPcy", scope: !1065, file: !1066, line: 102, type: !1089, scopeLine: 102, containingType: !1065, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{!725, !1078, !212, !725}
!1091 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIcE4pullEv", scope: !1065, file: !1066, line: 124, type: !1092, scopeLine: 124, containingType: !1065, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!114, !1078}
!1094 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada14CircularBufferIcE4readEv", scope: !1065, file: !1066, line: 140, type: !1092, scopeLine: 140, containingType: !1065, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1095 = !DISubprogram(name: "flush", linkageName: "_ZN6Cicada14CircularBufferIcE5flushEv", scope: !1065, file: !1066, line: 148, type: !1080, scopeLine: 148, containingType: !1065, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1096 = !DISubprogram(name: "isEmpty", linkageName: "_ZNK6Cicada14CircularBufferIcE7isEmptyEv", scope: !1065, file: !1066, line: 158, type: !1097, scopeLine: 158, containingType: !1065, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{!739, !1099}
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1065)
!1101 = !DISubprogram(name: "isFull", linkageName: "_ZNK6Cicada14CircularBufferIcE6isFullEv", scope: !1065, file: !1066, line: 166, type: !1097, scopeLine: 166, containingType: !1065, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1102 = !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv", scope: !1065, file: !1066, line: 174, type: !1103, scopeLine: 174, containingType: !1065, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{!725, !1099}
!1105 = !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv", scope: !1065, file: !1066, line: 182, type: !1103, scopeLine: 182, containingType: !1065, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1106 = !DISubprogram(name: "size", linkageName: "_ZNK6Cicada14CircularBufferIcE4sizeEv", scope: !1065, file: !1066, line: 190, type: !1103, scopeLine: 190, containingType: !1065, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1107 = !DISubprogram(name: "incrementOrResetHead", linkageName: "_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy", scope: !1065, file: !1066, line: 202, type: !1108, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{null, !1078, !1110}
!1110 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !725, size: 32)
!1111 = !{!1112}
!1112 = !DITemplateTypeParameter(name: "T", type: !114)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "_bufferedLines", scope: !1061, file: !1062, line: 130, baseType: !34, size: 16, offset: 352)
!1114 = !DISubprogram(name: "LineCircularBuffer", scope: !1061, file: !1062, line: 41, type: !1115, scopeLine: 41, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{null, !1117, !212, !725}
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1118 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada18LineCircularBuffer4pushEPKcy", scope: !1061, file: !1062, line: 46, type: !1119, scopeLine: 46, containingType: !1061, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{!725, !1117, !751, !725}
!1121 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada18LineCircularBuffer4pushEc", scope: !1061, file: !1062, line: 60, type: !1122, scopeLine: 60, containingType: !1061, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1122 = !DISubroutineType(types: !1123)
!1123 = !{null, !1117, !114}
!1124 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada18LineCircularBuffer4pullEPcy", scope: !1061, file: !1062, line: 69, type: !1125, scopeLine: 69, containingType: !1061, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1125 = !DISubroutineType(types: !1126)
!1126 = !{!725, !1117, !212, !725}
!1127 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada18LineCircularBuffer4pullEv", scope: !1061, file: !1062, line: 83, type: !1128, scopeLine: 83, containingType: !1061, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!114, !1117}
!1130 = !DISubprogram(name: "numBufferedLines", linkageName: "_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv", scope: !1061, file: !1062, line: 97, type: !1131, scopeLine: 97, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1131 = !DISubroutineType(types: !1132)
!1132 = !{!34, !1133}
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1061)
!1135 = !DISubprogram(name: "readLine", linkageName: "_ZN6Cicada18LineCircularBuffer8readLineEPcy", scope: !1061, file: !1062, line: 108, type: !1125, scopeLine: 108, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1136 = !DISubprogram(name: "flush", linkageName: "_ZN6Cicada18LineCircularBuffer5flushEv", scope: !1061, file: !1062, line: 123, type: !1137, scopeLine: 123, containingType: !1061, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1137 = !DISubroutineType(types: !1138)
!1138 = !{null, !1117}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "_writeBuffer", scope: !994, file: !675, line: 106, baseType: !1061, size: 384, offset: 448, flags: DIFlagProtected)
!1140 = !DISubprogram(name: "BufferedSerial", scope: !994, file: !675, line: 54, type: !1141, scopeLine: 54, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1141 = !DISubroutineType(types: !1142)
!1142 = !{null, !1143, !212, !212, !725, !725}
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1144 = !DISubprogram(name: "BufferedSerial", scope: !994, file: !675, line: 64, type: !1145, scopeLine: 64, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1145 = !DISubroutineType(types: !1146)
!1146 = !{null, !1143, !212, !212, !725}
!1147 = !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14BufferedSerial14bytesAvailableEv", scope: !994, file: !675, line: 66, type: !1148, scopeLine: 66, containingType: !994, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1148 = !DISubroutineType(types: !1149)
!1149 = !{!725, !1150}
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !994)
!1152 = !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14BufferedSerial14spaceAvailableEv", scope: !994, file: !675, line: 68, type: !1148, scopeLine: 68, containingType: !994, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1153 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada14BufferedSerial4readEPhy", scope: !994, file: !675, line: 70, type: !1154, scopeLine: 70, containingType: !994, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{!725, !1143, !42, !725}
!1156 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada14BufferedSerial4readEv", scope: !994, file: !675, line: 72, type: !1157, scopeLine: 72, containingType: !994, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1157 = !DISubroutineType(types: !1158)
!1158 = !{!39, !1143}
!1159 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEPKhy", scope: !994, file: !675, line: 74, type: !1160, scopeLine: 74, containingType: !994, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1160 = !DISubroutineType(types: !1161)
!1161 = !{!725, !1143, !37, !725}
!1162 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEPKh", scope: !994, file: !675, line: 76, type: !1163, scopeLine: 76, containingType: !994, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1163 = !DISubroutineType(types: !1164)
!1164 = !{!725, !1143, !37}
!1165 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEh", scope: !994, file: !675, line: 78, type: !1166, scopeLine: 78, containingType: !994, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1166 = !DISubroutineType(types: !1167)
!1167 = !{null, !1143, !39}
!1168 = !DISubprogram(name: "canReadLine", linkageName: "_ZNK6Cicada14BufferedSerial11canReadLineEv", scope: !994, file: !675, line: 80, type: !1169, scopeLine: 80, containingType: !994, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{!739, !1150}
!1171 = !DISubprogram(name: "readLine", linkageName: "_ZN6Cicada14BufferedSerial8readLineEPhy", scope: !994, file: !675, line: 91, type: !1154, scopeLine: 91, containingType: !994, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1172 = !DISubprogram(name: "flushReceiveBuffers", linkageName: "_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv", scope: !994, file: !675, line: 93, type: !1173, scopeLine: 93, containingType: !994, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1173 = !DISubroutineType(types: !1174)
!1174 = !{null, !1143}
!1175 = !DISubprogram(name: "readBufferSize", linkageName: "_ZN6Cicada14BufferedSerial14readBufferSizeEv", scope: !994, file: !675, line: 95, type: !1176, scopeLine: 95, containingType: !994, virtualIndex: 13, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1176 = !DISubroutineType(types: !1177)
!1177 = !{!725, !1143}
!1178 = !DISubprogram(name: "writeBufferSize", linkageName: "_ZN6Cicada14BufferedSerial15writeBufferSizeEv", scope: !994, file: !675, line: 96, type: !1176, scopeLine: 96, containingType: !994, virtualIndex: 14, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1179 = !DISubprogram(name: "transferToAndFromBuffer", linkageName: "_ZN6Cicada14BufferedSerial23transferToAndFromBufferEv", scope: !994, file: !675, line: 102, type: !1173, scopeLine: 102, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1180 = !DISubprogram(name: "copyToBuffer", linkageName: "_ZN6Cicada14BufferedSerial12copyToBufferEh", scope: !994, file: !675, line: 109, type: !1166, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1181 = !{!118, !124, !128, !132, !136, !139, !141, !143, !145, !148, !151, !154, !157, !160, !163, !164, !165, !166, !170, !172, !174, !176, !178, !181, !184, !187, !190, !193, !1182}
!1182 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !991, entity: !105, file: !992, line: 28)
!1183 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1184, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1184 = !DIFile(filename: "../cicada/platform/stm32f1/irq_stm32.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e34a510e3cc4f838fcfeb73936339393")
!1185 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1186, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1187, retainedTypes: !1208, splitDebugInlining: false, nameTableKind: None)
!1186 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "16c165b28ca3d4a5c8d7d66f2c899e26")
!1187 = !{!345, !1188, !1192, !1198, !267}
!1188 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 52, baseType: !7, size: 32, elements: !1189)
!1189 = !{!1190, !1191}
!1190 = !DIEnumerator(name: "HAL_UNLOCKED", value: 0)
!1191 = !DIEnumerator(name: "HAL_LOCKED", value: 1)
!1192 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !706, line: 78, baseType: !7, size: 32, elements: !1193)
!1193 = !{!1194, !1195, !1196, !1197}
!1194 = !DIEnumerator(name: "HAL_DMA_STATE_RESET", value: 0)
!1195 = !DIEnumerator(name: "HAL_DMA_STATE_READY", value: 1)
!1196 = !DIEnumerator(name: "HAL_DMA_STATE_BUSY", value: 2)
!1197 = !DIEnumerator(name: "HAL_DMA_STATE_TIMEOUT", value: 3)
!1198 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !581, line: 117, baseType: !7, size: 32, elements: !1199)
!1199 = !{!1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207}
!1200 = !DIEnumerator(name: "HAL_UART_STATE_RESET", value: 0)
!1201 = !DIEnumerator(name: "HAL_UART_STATE_READY", value: 32)
!1202 = !DIEnumerator(name: "HAL_UART_STATE_BUSY", value: 36)
!1203 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_TX", value: 33)
!1204 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_RX", value: 34)
!1205 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_TX_RX", value: 35)
!1206 = !DIEnumerator(name: "HAL_UART_STATE_TIMEOUT", value: 160)
!1207 = !DIEnumerator(name: "HAL_UART_STATE_ERROR", value: 224)
!1208 = !{!54, !21, !1209, !34, !39, !86, !1210, !1211, !1245, !1216}
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !34, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_UART_StateTypeDef", file: !581, line: 136, baseType: !1198)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1212 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_HandleTypeDef", file: !581, line: 189, baseType: !1213)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__UART_HandleTypeDef", file: !581, line: 141, size: 576, elements: !1214)
!1214 = !{!1215, !1227, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1291, !1292, !1293, !1295, !1296}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "Instance", scope: !1213, file: !581, line: 143, baseType: !1216, size: 32)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1217 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !16, line: 516, baseType: !1218)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 507, size: 224, elements: !1219)
!1219 = !{!1220, !1221, !1222, !1223, !1224, !1225, !1226}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1218, file: !16, line: 509, baseType: !20, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1218, file: !16, line: 510, baseType: !20, size: 32, offset: 32)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1218, file: !16, line: 511, baseType: !20, size: 32, offset: 64)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1218, file: !16, line: 512, baseType: !20, size: 32, offset: 96)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1218, file: !16, line: 513, baseType: !20, size: 32, offset: 128)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1218, file: !16, line: 514, baseType: !20, size: 32, offset: 160)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1218, file: !16, line: 515, baseType: !20, size: 32, offset: 192)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "Init", scope: !1213, file: !581, line: 145, baseType: !1228, size: 224, offset: 32)
!1228 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_InitTypeDef", file: !581, line: 76, baseType: !1229)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !581, line: 47, size: 224, elements: !1230)
!1230 = !{!1231, !1232, !1233, !1234, !1235, !1236, !1237}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "BaudRate", scope: !1229, file: !581, line: 49, baseType: !21, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "WordLength", scope: !1229, file: !581, line: 54, baseType: !21, size: 32, offset: 32)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "StopBits", scope: !1229, file: !581, line: 57, baseType: !21, size: 32, offset: 64)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "Parity", scope: !1229, file: !581, line: 60, baseType: !21, size: 32, offset: 96)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !1229, file: !581, line: 67, baseType: !21, size: 32, offset: 128)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "HwFlowCtl", scope: !1229, file: !581, line: 70, baseType: !21, size: 32, offset: 160)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "OverSampling", scope: !1229, file: !581, line: 73, baseType: !21, size: 32, offset: 192)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "pTxBuffPtr", scope: !1213, file: !581, line: 147, baseType: !42, size: 32, offset: 256)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "TxXferSize", scope: !1213, file: !581, line: 149, baseType: !34, size: 16, offset: 288)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "TxXferCount", scope: !1213, file: !581, line: 151, baseType: !699, size: 16, offset: 304)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "pRxBuffPtr", scope: !1213, file: !581, line: 153, baseType: !42, size: 32, offset: 320)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "RxXferSize", scope: !1213, file: !581, line: 155, baseType: !34, size: 16, offset: 352)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "RxXferCount", scope: !1213, file: !581, line: 157, baseType: !699, size: 16, offset: 368)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "hdmatx", scope: !1213, file: !581, line: 159, baseType: !1245, size: 32, offset: 384)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 32)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_HandleTypeDef", file: !706, line: 137, baseType: !1247)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__DMA_HandleTypeDef", file: !706, line: 111, size: 576, elements: !1248)
!1248 = !{!1249, !1258, !1269, !1271, !1273, !1274, !1279, !1280, !1281, !1282, !1283, !1290}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "Instance", scope: !1247, file: !706, line: 113, baseType: !1250, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_Channel_TypeDef", file: !16, line: 297, baseType: !1252)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 291, size: 128, elements: !1253)
!1253 = !{!1254, !1255, !1256, !1257}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1252, file: !16, line: 293, baseType: !20, size: 32)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "CNDTR", scope: !1252, file: !16, line: 294, baseType: !20, size: 32, offset: 32)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "CPAR", scope: !1252, file: !16, line: 295, baseType: !20, size: 32, offset: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "CMAR", scope: !1252, file: !16, line: 296, baseType: !20, size: 32, offset: 96)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "Init", scope: !1247, file: !706, line: 115, baseType: !1259, size: 224, offset: 32)
!1259 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_InitTypeDef", file: !706, line: 73, baseType: !1260)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !706, line: 48, size: 224, elements: !1261)
!1261 = !{!1262, !1263, !1264, !1265, !1266, !1267, !1268}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "Direction", scope: !1260, file: !706, line: 50, baseType: !21, size: 32)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphInc", scope: !1260, file: !706, line: 54, baseType: !21, size: 32, offset: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "MemInc", scope: !1260, file: !706, line: 57, baseType: !21, size: 32, offset: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphDataAlignment", scope: !1260, file: !706, line: 60, baseType: !21, size: 32, offset: 96)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "MemDataAlignment", scope: !1260, file: !706, line: 63, baseType: !21, size: 32, offset: 128)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !1260, file: !706, line: 66, baseType: !21, size: 32, offset: 160)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "Priority", scope: !1260, file: !706, line: 71, baseType: !21, size: 32, offset: 192)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "Lock", scope: !1247, file: !706, line: 117, baseType: !1270, size: 32, offset: 256)
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_LockTypeDef", file: !6, line: 56, baseType: !1188)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "State", scope: !1247, file: !706, line: 119, baseType: !1272, size: 32, offset: 288)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_DMA_StateTypeDef", file: !706, line: 84, baseType: !1192)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "Parent", scope: !1247, file: !706, line: 121, baseType: !54, size: 32, offset: 320)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "XferCpltCallback", scope: !1247, file: !706, line: 123, baseType: !1275, size: 32, offset: 352)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 32)
!1276 = !DISubroutineType(types: !1277)
!1277 = !{null, !1278}
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 32)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "XferHalfCpltCallback", scope: !1247, file: !706, line: 125, baseType: !1275, size: 32, offset: 384)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "XferErrorCallback", scope: !1247, file: !706, line: 127, baseType: !1275, size: 32, offset: 416)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "XferAbortCallback", scope: !1247, file: !706, line: 129, baseType: !1275, size: 32, offset: 448)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "ErrorCode", scope: !1247, file: !706, line: 131, baseType: !20, size: 32, offset: 480)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "DmaBaseAddress", scope: !1247, file: !706, line: 133, baseType: !1284, size: 32, offset: 512)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 32)
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_TypeDef", file: !16, line: 303, baseType: !1286)
!1286 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 299, size: 64, elements: !1287)
!1287 = !{!1288, !1289}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !1286, file: !16, line: 301, baseType: !20, size: 32)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "IFCR", scope: !1286, file: !16, line: 302, baseType: !20, size: 32, offset: 32)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "ChannelIndex", scope: !1247, file: !706, line: 135, baseType: !21, size: 32, offset: 544)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "hdmarx", scope: !1213, file: !581, line: 161, baseType: !1245, size: 32, offset: 416)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "Lock", scope: !1213, file: !581, line: 163, baseType: !1270, size: 32, offset: 448)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "gState", scope: !1213, file: !581, line: 165, baseType: !1294, size: 32, offset: 480)
!1294 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1210)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "RxState", scope: !1213, file: !581, line: 169, baseType: !1294, size: 32, offset: 512)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "ErrorCode", scope: !1213, file: !581, line: 172, baseType: !20, size: 32, offset: 544)
!1297 = !{!"Ubuntu clang version 14.0.6"}
!1298 = !{i32 7, !"Dwarf Version", i32 5}
!1299 = !{i32 2, !"Debug Info Version", i32 3}
!1300 = !{i32 1, !"wchar_size", i32 4}
!1301 = !{i32 1, !"min_enum_size", i32 4}
!1302 = !{i32 1, !"branch-target-enforcement", i32 0}
!1303 = !{i32 1, !"sign-return-address", i32 0}
!1304 = !{i32 1, !"sign-return-address-all", i32 0}
!1305 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!1306 = !{i32 7, !"frame-pointer", i32 2}
!1307 = distinct !DISubprogram(name: "serialTask", linkageName: "_Z10serialTaskPv", scope: !3, file: !3, line: 25, type: !1308, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1310)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{null, !54}
!1310 = !{!1311, !1312, !1314, !1318, !1319, !1320, !1321, !1322, !1323, !1327, !1328, !1329}
!1311 = !DILocalVariable(name: "parameters", arg: 1, scope: !1307, file: !3, line: 25, type: !54)
!1312 = !DILocalVariable(name: "bufferSize", scope: !1307, file: !3, line: 27, type: !1313)
!1313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !34)
!1314 = !DILocalVariable(name: "readBufferDebug", scope: !1307, file: !3, line: 28, type: !1315)
!1315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !114, size: 12032, elements: !1316)
!1316 = !{!1317}
!1317 = !DISubrange(count: 1504)
!1318 = !DILocalVariable(name: "writeBufferDebug", scope: !1307, file: !3, line: 29, type: !1315)
!1319 = !DILocalVariable(name: "readBuffer", scope: !1307, file: !3, line: 30, type: !1315)
!1320 = !DILocalVariable(name: "writeBuffer", scope: !1307, file: !3, line: 31, type: !1315)
!1321 = !DILocalVariable(name: "debug", scope: !1307, file: !3, line: 32, type: !103)
!1322 = !DILocalVariable(name: "serial", scope: !1307, file: !3, line: 33, type: !103)
!1323 = !DILocalVariable(name: "send_str", scope: !1324, file: !3, line: 40, type: !751)
!1324 = distinct !DILexicalBlock(scope: !1325, file: !3, line: 39, column: 14)
!1325 = distinct !DILexicalBlock(scope: !1326, file: !3, line: 39, column: 5)
!1326 = distinct !DILexicalBlock(scope: !1307, file: !3, line: 39, column: 5)
!1327 = !DILocalVariable(name: "bytesWritten", scope: !1324, file: !3, line: 42, type: !131)
!1328 = !DILocalVariable(name: "buf", scope: !1324, file: !3, line: 49, type: !238)
!1329 = !DILocalVariable(name: "bytesReceived", scope: !1324, file: !3, line: 50, type: !131)
!1330 = !DILocation(line: 0, scope: !1307)
!1331 = !DILocation(line: 28, column: 5, scope: !1307)
!1332 = !DILocation(line: 28, column: 10, scope: !1307)
!1333 = !DILocation(line: 29, column: 5, scope: !1307)
!1334 = !DILocation(line: 29, column: 10, scope: !1307)
!1335 = !DILocation(line: 30, column: 5, scope: !1307)
!1336 = !DILocation(line: 30, column: 10, scope: !1307)
!1337 = !DILocation(line: 31, column: 5, scope: !1307)
!1338 = !DILocation(line: 31, column: 10, scope: !1307)
!1339 = !DILocation(line: 32, column: 5, scope: !1307)
!1340 = !DILocation(line: 32, column: 15, scope: !1307)
!1341 = !DILocation(line: 33, column: 5, scope: !1307)
!1342 = !DILocation(line: 33, column: 15, scope: !1307)
!1343 = !DILocation(line: 36, column: 11, scope: !1307)
!1344 = !DILocation(line: 37, column: 12, scope: !1307)
!1345 = !DILocation(line: 39, column: 5, scope: !1307)
!1346 = !DILocation(line: 0, scope: !1324)
!1347 = !DILocation(line: 41, column: 9, scope: !1324)
!1348 = !DILocation(line: 42, column: 35, scope: !1324)
!1349 = !DILocation(line: 42, column: 28, scope: !1324)
!1350 = !DILocation(line: 43, column: 9, scope: !1324)
!1351 = !DILocation(line: 45, column: 24, scope: !1324)
!1352 = !DILocation(line: 45, column: 17, scope: !1324)
!1353 = !DILocation(line: 45, column: 9, scope: !1324)
!1354 = !DILocation(line: 46, column: 13, scope: !1355)
!1355 = distinct !DILexicalBlock(scope: !1324, file: !3, line: 45, column: 42)
!1356 = distinct !{!1356, !1353, !1357, !1358, !1359}
!1357 = !DILocation(line: 47, column: 9, scope: !1324)
!1358 = !{!"llvm.loop.mustprogress"}
!1359 = !{!"llvm.loop.unroll.disable"}
!1360 = !DILocation(line: 49, column: 9, scope: !1324)
!1361 = !DILocation(line: 49, column: 14, scope: !1324)
!1362 = !DILocation(line: 51, column: 32, scope: !1324)
!1363 = !DILocation(line: 51, column: 25, scope: !1324)
!1364 = !DILocation(line: 52, column: 9, scope: !1324)
!1365 = !DILocation(line: 54, column: 9, scope: !1324)
!1366 = !DILocation(line: 54, column: 28, scope: !1324)
!1367 = !{!1368, !1368, i64 0}
!1368 = !{!"omnipotent char", !1369, i64 0}
!1369 = !{!"Simple C++ TBAA"}
!1370 = !DILocation(line: 55, column: 9, scope: !1324)
!1371 = !DILocation(line: 57, column: 9, scope: !1324)
!1372 = !DILocation(line: 58, column: 5, scope: !1325)
!1373 = !DILocation(line: 39, column: 5, scope: !1325)
!1374 = distinct !{!1374, !1375, !1376, !1358, !1359}
!1375 = !DILocation(line: 39, column: 5, scope: !1326)
!1376 = !DILocation(line: 58, column: 5, scope: !1326)
!1377 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 61, type: !1378, scopeLine: 62, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1381)
!1378 = !DISubroutineType(types: !1379)
!1379 = !{!131, !131, !1380}
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 32)
!1381 = !{!1382, !1383}
!1382 = !DILocalVariable(name: "argc", arg: 1, scope: !1377, file: !3, line: 61, type: !131)
!1383 = !DILocalVariable(name: "argv", arg: 2, scope: !1377, file: !3, line: 61, type: !1380)
!1384 = !DILocation(line: 0, scope: !1377)
!1385 = !DILocation(line: 64, column: 5, scope: !1377)
!1386 = !DILocation(line: 65, column: 5, scope: !1377)
!1387 = !DILocation(line: 68, column: 5, scope: !1377)
!1388 = !DILocation(line: 71, column: 5, scope: !1377)
!1389 = !DILocation(line: 72, column: 1, scope: !1377)
!1390 = distinct !DISubprogram(name: "SystemClock_Config", linkageName: "_ZL18SystemClock_Configv", scope: !3, file: !3, line: 74, type: !99, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1391)
!1391 = !{!1392, !1412}
!1392 = !DILocalVariable(name: "RCC_OscInitStruct", scope: !1390, file: !3, line: 76, type: !1393)
!1393 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !1394, line: 261, baseType: !1395)
!1394 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "49bf7e29630a7d603739687645591a41")
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1394, line: 228, size: 320, flags: DIFlagTypePassByValue, elements: !1396, identifier: "_ZTS18RCC_OscInitTypeDef")
!1396 = !{!1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !1395, file: !1394, line: 230, baseType: !21, size: 32)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !1395, file: !1394, line: 238, baseType: !21, size: 32, offset: 32)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "HSEPredivValue", scope: !1395, file: !1394, line: 241, baseType: !21, size: 32, offset: 64)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !1395, file: !1394, line: 244, baseType: !21, size: 32, offset: 96)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !1395, file: !1394, line: 247, baseType: !21, size: 32, offset: 128)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !1395, file: !1394, line: 250, baseType: !21, size: 32, offset: 160)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !1395, file: !1394, line: 253, baseType: !21, size: 32, offset: 192)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !1395, file: !1394, line: 256, baseType: !1405, size: 96, offset: 224)
!1405 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !1406, line: 59, baseType: !1407)
!1406 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "3e0cb02f236e8f5a4c479e8d7b418957")
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1406, line: 49, size: 96, flags: DIFlagTypePassByValue, elements: !1408, identifier: "_ZTS18RCC_PLLInitTypeDef")
!1408 = !{!1409, !1410, !1411}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !1407, file: !1406, line: 51, baseType: !21, size: 32)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !1407, file: !1406, line: 54, baseType: !21, size: 32, offset: 32)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !1407, file: !1406, line: 57, baseType: !21, size: 32, offset: 64)
!1412 = !DILocalVariable(name: "RCC_ClkInitStruct", scope: !1390, file: !3, line: 77, type: !1413)
!1413 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !1406, line: 80, baseType: !1414)
!1414 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1406, line: 64, size: 160, flags: DIFlagTypePassByValue, elements: !1415, identifier: "_ZTS18RCC_ClkInitTypeDef")
!1415 = !{!1416, !1417, !1418, !1419, !1420}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !1414, file: !1406, line: 66, baseType: !21, size: 32)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !1414, file: !1406, line: 69, baseType: !21, size: 32, offset: 32)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !1414, file: !1406, line: 72, baseType: !21, size: 32, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !1414, file: !1406, line: 75, baseType: !21, size: 32, offset: 96)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !1414, file: !1406, line: 78, baseType: !21, size: 32, offset: 128)
!1421 = !DILocation(line: 76, column: 5, scope: !1390)
!1422 = !DILocation(line: 76, column: 24, scope: !1390)
!1423 = !DILocation(line: 77, column: 5, scope: !1390)
!1424 = !DILocation(line: 77, column: 24, scope: !1390)
!1425 = !DILocation(line: 81, column: 23, scope: !1390)
!1426 = !DILocation(line: 81, column: 38, scope: !1390)
!1427 = !{!1428, !1429, i64 0}
!1428 = !{!"_ZTS18RCC_OscInitTypeDef", !1429, i64 0, !1429, i64 4, !1429, i64 8, !1429, i64 12, !1429, i64 16, !1429, i64 20, !1429, i64 24, !1430, i64 28}
!1429 = !{!"int", !1368, i64 0}
!1430 = !{!"_ZTS18RCC_PLLInitTypeDef", !1429, i64 0, !1429, i64 4, !1429, i64 8}
!1431 = !DILocation(line: 82, column: 23, scope: !1390)
!1432 = !DILocation(line: 82, column: 32, scope: !1390)
!1433 = !{!1428, !1429, i64 16}
!1434 = !DILocation(line: 83, column: 23, scope: !1390)
!1435 = !DILocation(line: 83, column: 43, scope: !1390)
!1436 = !{!1428, !1429, i64 20}
!1437 = !DILocation(line: 84, column: 27, scope: !1390)
!1438 = !DILocation(line: 84, column: 36, scope: !1390)
!1439 = !{!1428, !1429, i64 28}
!1440 = !DILocation(line: 85, column: 27, scope: !1390)
!1441 = !DILocation(line: 85, column: 37, scope: !1390)
!1442 = !{!1428, !1429, i64 32}
!1443 = !DILocation(line: 86, column: 27, scope: !1390)
!1444 = !DILocation(line: 86, column: 34, scope: !1390)
!1445 = !{!1428, !1429, i64 36}
!1446 = !DILocation(line: 87, column: 5, scope: !1390)
!1447 = !DILocation(line: 91, column: 23, scope: !1390)
!1448 = !DILocation(line: 92, column: 9, scope: !1390)
!1449 = !{!1450, !1429, i64 0}
!1450 = !{!"_ZTS18RCC_ClkInitTypeDef", !1429, i64 0, !1429, i64 4, !1429, i64 8, !1429, i64 12, !1429, i64 16}
!1451 = !DILocation(line: 93, column: 23, scope: !1390)
!1452 = !DILocation(line: 93, column: 36, scope: !1390)
!1453 = !{!1450, !1429, i64 4}
!1454 = !DILocation(line: 94, column: 23, scope: !1390)
!1455 = !DILocation(line: 94, column: 37, scope: !1390)
!1456 = !{!1450, !1429, i64 8}
!1457 = !DILocation(line: 95, column: 23, scope: !1390)
!1458 = !DILocation(line: 95, column: 38, scope: !1390)
!1459 = !{!1450, !1429, i64 12}
!1460 = !DILocation(line: 96, column: 23, scope: !1390)
!1461 = !DILocation(line: 96, column: 38, scope: !1390)
!1462 = !{!1450, !1429, i64 16}
!1463 = !DILocation(line: 98, column: 5, scope: !1390)
!1464 = !DILocation(line: 99, column: 1, scope: !1390)
!1465 = !DILocation(line: 0, scope: !78)
!1466 = !DILocation(line: 110, column: 27, scope: !78)
!1467 = !{!1468, !1468, i64 0}
!1468 = !{!"any pointer", !1368, i64 0}
!1469 = !DILocation(line: 111, column: 29, scope: !78)
!1470 = !DILocation(line: 112, column: 27, scope: !78)
!1471 = !{!1429, !1429, i64 0}
!1472 = !DILocation(line: 113, column: 1, scope: !78)
!1473 = distinct !DISubprogram(name: "SysTick_Handler", scope: !3, file: !3, line: 116, type: !99, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !101)
!1474 = !DILocation(line: 118, column: 5, scope: !1473)
!1475 = !DILocation(line: 119, column: 5, scope: !1473)
!1476 = !DILocation(line: 120, column: 1, scope: !1473)
!1477 = !DILocation(line: 124, column: 5, scope: !98)
!1478 = !{!"branch_weights", i32 1, i32 1048575}
!1479 = !DILocation(line: 124, column: 34, scope: !98)
!1480 = !DILocation(line: 125, column: 5, scope: !98)
!1481 = !DILocation(line: 125, column: 15, scope: !98)
!1482 = !DILocation(line: 126, column: 1, scope: !98)
!1483 = !DILocation(line: 130, column: 5, scope: !108)
!1484 = !DILocation(line: 130, column: 34, scope: !108)
!1485 = !DILocation(line: 131, column: 5, scope: !108)
!1486 = !DILocation(line: 131, column: 15, scope: !108)
!1487 = !DILocation(line: 132, column: 1, scope: !108)
!1488 = !DILocation(line: 0, scope: !111)
!1489 = !DILocation(line: 137, column: 10, scope: !1490)
!1490 = distinct !DILexicalBlock(scope: !111, file: !3, line: 137, column: 9)
!1491 = !DILocation(line: 137, column: 9, scope: !111)
!1492 = !DILocation(line: 138, column: 18, scope: !1493)
!1493 = distinct !DILexicalBlock(scope: !1490, file: !3, line: 137, column: 18)
!1494 = !DILocation(line: 138, column: 16, scope: !1493)
!1495 = !DILocation(line: 139, column: 5, scope: !1493)
!1496 = !DILocation(line: 140, column: 5, scope: !111)
!1497 = !DILocation(line: 140, column: 13, scope: !111)
!1498 = !{!1499, !1499, i64 0}
!1499 = !{!"vtable pointer", !1369, i64 0}
!1500 = !DILocation(line: 141, column: 1, scope: !111)
!1501 = distinct !DISubprogram(name: "printf_", scope: !203, file: !203, line: 720, type: !1502, scopeLine: 721, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !214, retainedNodes: !1504)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{!131, !751, null}
!1504 = !{!1505, !1506, !1514, !1518}
!1505 = !DILocalVariable(name: "format", arg: 1, scope: !1501, file: !203, line: 720, type: !751)
!1506 = !DILocalVariable(name: "va", scope: !1501, file: !203, line: 722, type: !1507)
!1507 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1508, line: 14, baseType: !1509)
!1508 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "", checksumkind: CSK_MD5, checksum: "4de3cbd931b589d291e5c39387aecf82")
!1509 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1510, baseType: !1511)
!1510 = !DIFile(filename: "../dep/printf/src/printf.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build")
!1511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !1512)
!1512 = !{!1513}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !1511, file: !1510, line: 722, baseType: !54, size: 32)
!1514 = !DILocalVariable(name: "buffer", scope: !1501, file: !203, line: 724, type: !1515)
!1515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !114, size: 8, elements: !1516)
!1516 = !{!1517}
!1517 = !DISubrange(count: 1)
!1518 = !DILocalVariable(name: "ret", scope: !1501, file: !203, line: 725, type: !1519)
!1519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!1520 = !DILocation(line: 0, scope: !1501)
!1521 = !DILocation(line: 722, column: 3, scope: !1501)
!1522 = !DILocation(line: 722, column: 11, scope: !1501)
!1523 = !DILocation(line: 723, column: 3, scope: !1501)
!1524 = !DILocation(line: 724, column: 3, scope: !1501)
!1525 = !DILocation(line: 724, column: 8, scope: !1501)
!1526 = !DILocation(line: 725, column: 19, scope: !1501)
!1527 = !DILocation(line: 726, column: 3, scope: !1501)
!1528 = !DILocation(line: 728, column: 1, scope: !1501)
!1529 = !DILocation(line: 727, column: 3, scope: !1501)
!1530 = distinct !DISubprogram(name: "_out_char", scope: !203, file: !203, line: 124, type: !210, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !214, retainedNodes: !1531)
!1531 = !{!1532, !1533, !1534, !1535}
!1532 = !DILocalVariable(name: "character", arg: 1, scope: !1530, file: !203, line: 124, type: !114)
!1533 = !DILocalVariable(name: "buffer", arg: 2, scope: !1530, file: !203, line: 124, type: !54)
!1534 = !DILocalVariable(name: "idx", arg: 3, scope: !1530, file: !203, line: 124, type: !206)
!1535 = !DILocalVariable(name: "maxlen", arg: 4, scope: !1530, file: !203, line: 124, type: !206)
!1536 = !DILocation(line: 0, scope: !1530)
!1537 = !DILocation(line: 127, column: 7, scope: !1538)
!1538 = distinct !DILexicalBlock(scope: !1530, file: !203, line: 127, column: 7)
!1539 = !DILocation(line: 127, column: 7, scope: !1530)
!1540 = !DILocation(line: 128, column: 5, scope: !1541)
!1541 = distinct !DILexicalBlock(scope: !1538, file: !203, line: 127, column: 18)
!1542 = !DILocation(line: 129, column: 3, scope: !1541)
!1543 = !DILocation(line: 130, column: 1, scope: !1530)
!1544 = distinct !DISubprogram(name: "_vsnprintf", scope: !203, file: !203, line: 447, type: !1545, scopeLine: 448, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !214, retainedNodes: !1547)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{!131, !208, !212, !236, !751, !1507}
!1547 = !{!1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1563, !1569, !1572, !1578, !1582, !1584, !1590, !1592, !1594, !1595}
!1548 = !DILocalVariable(name: "out", arg: 1, scope: !1544, file: !203, line: 447, type: !208)
!1549 = !DILocalVariable(name: "buffer", arg: 2, scope: !1544, file: !203, line: 447, type: !212)
!1550 = !DILocalVariable(name: "maxlen", arg: 3, scope: !1544, file: !203, line: 447, type: !236)
!1551 = !DILocalVariable(name: "format", arg: 4, scope: !1544, file: !203, line: 447, type: !751)
!1552 = !DILocalVariable(name: "va", arg: 5, scope: !1544, file: !203, line: 447, type: !1507)
!1553 = !DILocalVariable(name: "flags", scope: !1544, file: !203, line: 449, type: !7)
!1554 = !DILocalVariable(name: "width", scope: !1544, file: !203, line: 449, type: !7)
!1555 = !DILocalVariable(name: "precision", scope: !1544, file: !203, line: 449, type: !7)
!1556 = !DILocalVariable(name: "n", scope: !1544, file: !203, line: 449, type: !7)
!1557 = !DILocalVariable(name: "idx", scope: !1544, file: !203, line: 450, type: !206)
!1558 = !DILocalVariable(name: "w", scope: !1559, file: !203, line: 490, type: !1519)
!1559 = distinct !DILexicalBlock(scope: !1560, file: !203, line: 489, column: 30)
!1560 = distinct !DILexicalBlock(scope: !1561, file: !203, line: 489, column: 14)
!1561 = distinct !DILexicalBlock(scope: !1562, file: !203, line: 486, column: 9)
!1562 = distinct !DILexicalBlock(scope: !1544, file: !203, line: 458, column: 3)
!1563 = !DILocalVariable(name: "prec", scope: !1564, file: !203, line: 510, type: !1519)
!1564 = distinct !DILexicalBlock(scope: !1565, file: !203, line: 509, column: 32)
!1565 = distinct !DILexicalBlock(scope: !1566, file: !203, line: 509, column: 16)
!1566 = distinct !DILexicalBlock(scope: !1567, file: !203, line: 506, column: 11)
!1567 = distinct !DILexicalBlock(scope: !1568, file: !203, line: 503, column: 25)
!1568 = distinct !DILexicalBlock(scope: !1562, file: !203, line: 503, column: 9)
!1569 = !DILocalVariable(name: "base", scope: !1570, file: !203, line: 562, type: !7)
!1570 = distinct !DILexicalBlock(scope: !1571, file: !203, line: 560, column: 18)
!1571 = distinct !DILexicalBlock(scope: !1562, file: !203, line: 553, column: 22)
!1572 = !DILocalVariable(name: "value", scope: !1573, file: !203, line: 596, type: !1577)
!1573 = distinct !DILexicalBlock(scope: !1574, file: !203, line: 594, column: 40)
!1574 = distinct !DILexicalBlock(scope: !1575, file: !203, line: 594, column: 15)
!1575 = distinct !DILexicalBlock(scope: !1576, file: !203, line: 592, column: 51)
!1576 = distinct !DILexicalBlock(scope: !1570, file: !203, line: 592, column: 13)
!1577 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!1578 = !DILocalVariable(name: "value", scope: !1579, file: !203, line: 601, type: !1581)
!1579 = distinct !DILexicalBlock(scope: !1580, file: !203, line: 600, column: 40)
!1580 = distinct !DILexicalBlock(scope: !1574, file: !203, line: 600, column: 20)
!1581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !461)
!1582 = !DILocalVariable(name: "value", scope: !1583, file: !203, line: 605, type: !1519)
!1583 = distinct !DILexicalBlock(scope: !1580, file: !203, line: 604, column: 16)
!1584 = !DILocalVariable(name: "value", scope: !1585, file: !203, line: 620, type: !1589)
!1585 = distinct !DILexicalBlock(scope: !1586, file: !203, line: 619, column: 16)
!1586 = distinct !DILexicalBlock(scope: !1587, file: !203, line: 616, column: 20)
!1587 = distinct !DILexicalBlock(scope: !1588, file: !203, line: 611, column: 15)
!1588 = distinct !DILexicalBlock(scope: !1576, file: !203, line: 609, column: 14)
!1589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!1590 = !DILocalVariable(name: "l", scope: !1591, file: !203, line: 635, type: !7)
!1591 = distinct !DILexicalBlock(scope: !1571, file: !203, line: 634, column: 18)
!1592 = !DILocalVariable(name: "p", scope: !1593, file: !203, line: 655, type: !751)
!1593 = distinct !DILexicalBlock(scope: !1571, file: !203, line: 654, column: 18)
!1594 = !DILocalVariable(name: "l", scope: !1593, file: !203, line: 656, type: !7)
!1595 = !DILocalVariable(name: "is_ll", scope: !1596, file: !203, line: 684, type: !1597)
!1596 = distinct !DILexicalBlock(scope: !1571, file: !203, line: 680, column: 18)
!1597 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !246)
!1598 = !DILocation(line: 0, scope: !1544)
!1599 = !{!1600, !1600, i64 0}
!1600 = !{!"any pointer", !1601, i64 0}
!1601 = !{!"omnipotent char", !1602, i64 0}
!1602 = !{!"Simple C/C++ TBAA"}
!1603 = !DILocation(line: 452, column: 8, scope: !1604)
!1604 = distinct !DILexicalBlock(scope: !1544, file: !203, line: 452, column: 7)
!1605 = !DILocation(line: 452, column: 7, scope: !1544)
!1606 = !DILocation(line: 457, column: 3, scope: !1544)
!1607 = !DILocation(line: 457, column: 11, scope: !1544)
!1608 = !DILocation(line: 457, column: 10, scope: !1544)
!1609 = !{!1601, !1601, i64 0}
!1610 = !DILocation(line: 462, column: 31, scope: !1611)
!1611 = distinct !DILexicalBlock(scope: !1612, file: !203, line: 460, column: 25)
!1612 = distinct !DILexicalBlock(scope: !1562, file: !203, line: 460, column: 9)
!1613 = !DILocation(line: 462, column: 7, scope: !1611)
!1614 = !{void (i8, i8*, i32, i32)* @_out_buffer, void (i8, i8*, i32, i32)* @_out_char, void (i8, i8*, i32, i32)* @_out_fct, void (i8, i8*, i32, i32)* @_out_null}
!1615 = !DILocation(line: 463, column: 13, scope: !1611)
!1616 = !DILocation(line: 464, column: 7, scope: !1611)
!1617 = distinct !{!1617, !1606, !1618, !1358, !1359}
!1618 = !DILocation(line: 708, column: 3, scope: !1544)
!1619 = !DILocation(line: 468, column: 13, scope: !1620)
!1620 = distinct !DILexicalBlock(scope: !1612, file: !203, line: 466, column: 10)
!1621 = !DILocation(line: 473, column: 5, scope: !1562)
!1622 = !DILocation(line: 472, column: 11, scope: !1562)
!1623 = !DILocation(line: 474, column: 16, scope: !1624)
!1624 = distinct !DILexicalBlock(scope: !1562, file: !203, line: 473, column: 8)
!1625 = !DILocation(line: 474, column: 15, scope: !1624)
!1626 = !DILocation(line: 474, column: 7, scope: !1624)
!1627 = !DILocation(line: 475, column: 25, scope: !1628)
!1628 = distinct !DILexicalBlock(scope: !1624, file: !203, line: 474, column: 24)
!1629 = !DILocation(line: 475, column: 49, scope: !1628)
!1630 = !DILocation(line: 475, column: 61, scope: !1628)
!1631 = !DILocation(line: 476, column: 25, scope: !1628)
!1632 = !DILocation(line: 476, column: 49, scope: !1628)
!1633 = !DILocation(line: 476, column: 61, scope: !1628)
!1634 = !DILocation(line: 477, column: 25, scope: !1628)
!1635 = !DILocation(line: 477, column: 49, scope: !1628)
!1636 = !DILocation(line: 477, column: 61, scope: !1628)
!1637 = !DILocation(line: 478, column: 25, scope: !1628)
!1638 = !DILocation(line: 478, column: 49, scope: !1628)
!1639 = !DILocation(line: 478, column: 61, scope: !1628)
!1640 = !DILocation(line: 479, column: 25, scope: !1628)
!1641 = !DILocation(line: 479, column: 49, scope: !1628)
!1642 = !DILocation(line: 479, column: 61, scope: !1628)
!1643 = !DILocation(line: 0, scope: !1628)
!1644 = !DILocation(line: 0, scope: !1562)
!1645 = !DILocation(line: 482, column: 5, scope: !1624)
!1646 = distinct !{!1646, !1621, !1647, !1358, !1359}
!1647 = !DILocation(line: 482, column: 15, scope: !1562)
!1648 = !DILocation(line: 486, column: 20, scope: !1561)
!1649 = !DILocation(line: 486, column: 19, scope: !1561)
!1650 = !DILocation(line: 486, column: 9, scope: !1561)
!1651 = !DILocation(line: 486, column: 9, scope: !1562)
!1652 = !DILocation(line: 487, column: 15, scope: !1653)
!1653 = distinct !DILexicalBlock(scope: !1561, file: !203, line: 486, column: 29)
!1654 = !DILocation(line: 488, column: 5, scope: !1653)
!1655 = !DILocation(line: 489, column: 22, scope: !1560)
!1656 = !DILocation(line: 489, column: 14, scope: !1561)
!1657 = !DILocation(line: 490, column: 21, scope: !1559)
!1658 = !DILocation(line: 0, scope: !1559)
!1659 = !DILocation(line: 491, column: 13, scope: !1660)
!1660 = distinct !DILexicalBlock(scope: !1559, file: !203, line: 491, column: 11)
!1661 = !DILocation(line: 491, column: 11, scope: !1559)
!1662 = !DILocation(line: 498, column: 13, scope: !1559)
!1663 = !DILocation(line: 499, column: 5, scope: !1559)
!1664 = !DILocation(line: 503, column: 10, scope: !1568)
!1665 = !DILocation(line: 503, column: 9, scope: !1568)
!1666 = !DILocation(line: 503, column: 17, scope: !1568)
!1667 = !DILocation(line: 503, column: 9, scope: !1562)
!1668 = !DILocation(line: 504, column: 13, scope: !1567)
!1669 = !DILocation(line: 505, column: 13, scope: !1567)
!1670 = !DILocation(line: 506, column: 21, scope: !1566)
!1671 = !DILocation(line: 506, column: 11, scope: !1566)
!1672 = !DILocation(line: 506, column: 11, scope: !1567)
!1673 = !DILocation(line: 507, column: 21, scope: !1674)
!1674 = distinct !DILexicalBlock(scope: !1566, file: !203, line: 506, column: 31)
!1675 = !DILocation(line: 508, column: 7, scope: !1674)
!1676 = !DILocation(line: 509, column: 24, scope: !1565)
!1677 = !DILocation(line: 509, column: 16, scope: !1566)
!1678 = !DILocation(line: 510, column: 31, scope: !1564)
!1679 = !DILocation(line: 0, scope: !1564)
!1680 = !DILocation(line: 511, column: 26, scope: !1564)
!1681 = !DILocation(line: 511, column: 21, scope: !1564)
!1682 = !DILocation(line: 512, column: 15, scope: !1564)
!1683 = !DILocation(line: 513, column: 7, scope: !1564)
!1684 = !DILocation(line: 517, column: 14, scope: !1562)
!1685 = !DILocation(line: 517, column: 13, scope: !1562)
!1686 = !DILocation(line: 517, column: 5, scope: !1562)
!1687 = !DILocation(line: 519, column: 15, scope: !1688)
!1688 = distinct !DILexicalBlock(scope: !1562, file: !203, line: 517, column: 22)
!1689 = !DILocation(line: 520, column: 15, scope: !1688)
!1690 = !DILocation(line: 521, column: 13, scope: !1691)
!1691 = distinct !DILexicalBlock(scope: !1688, file: !203, line: 521, column: 13)
!1692 = !DILocation(line: 521, column: 21, scope: !1691)
!1693 = !DILocation(line: 521, column: 13, scope: !1688)
!1694 = !DILocation(line: 522, column: 17, scope: !1695)
!1695 = distinct !DILexicalBlock(scope: !1691, file: !203, line: 521, column: 29)
!1696 = !DILocation(line: 523, column: 17, scope: !1695)
!1697 = !DILocation(line: 524, column: 9, scope: !1695)
!1698 = !DILocation(line: 527, column: 15, scope: !1688)
!1699 = !DILocation(line: 528, column: 15, scope: !1688)
!1700 = !DILocation(line: 529, column: 13, scope: !1701)
!1701 = distinct !DILexicalBlock(scope: !1688, file: !203, line: 529, column: 13)
!1702 = !DILocation(line: 529, column: 21, scope: !1701)
!1703 = !DILocation(line: 529, column: 13, scope: !1688)
!1704 = !DILocation(line: 530, column: 17, scope: !1705)
!1705 = distinct !DILexicalBlock(scope: !1701, file: !203, line: 529, column: 29)
!1706 = !DILocation(line: 531, column: 17, scope: !1705)
!1707 = !DILocation(line: 532, column: 9, scope: !1705)
!1708 = !DILocation(line: 536, column: 15, scope: !1688)
!1709 = !DILocation(line: 537, column: 15, scope: !1688)
!1710 = !DILocation(line: 538, column: 9, scope: !1688)
!1711 = !DILocation(line: 541, column: 15, scope: !1688)
!1712 = !DILocation(line: 542, column: 15, scope: !1688)
!1713 = !DILocation(line: 543, column: 9, scope: !1688)
!1714 = !DILocation(line: 545, column: 15, scope: !1688)
!1715 = !DILocation(line: 546, column: 15, scope: !1688)
!1716 = !DILocation(line: 547, column: 9, scope: !1688)
!1717 = !DILocation(line: 553, column: 14, scope: !1562)
!1718 = !DILocation(line: 553, column: 13, scope: !1562)
!1719 = !DILocation(line: 553, column: 5, scope: !1562)
!1720 = !DILocation(line: 0, scope: !1570)
!1721 = !DILocation(line: 568, column: 9, scope: !1722)
!1722 = distinct !DILexicalBlock(scope: !1723, file: !203, line: 566, column: 34)
!1723 = distinct !DILexicalBlock(scope: !1724, file: !203, line: 566, column: 18)
!1724 = distinct !DILexicalBlock(scope: !1570, file: !203, line: 563, column: 13)
!1725 = !DILocation(line: 571, column: 9, scope: !1726)
!1726 = distinct !DILexicalBlock(scope: !1727, file: !203, line: 569, column: 34)
!1727 = distinct !DILexicalBlock(scope: !1723, file: !203, line: 569, column: 18)
!1728 = !DILocation(line: 574, column: 17, scope: !1729)
!1729 = distinct !DILexicalBlock(scope: !1727, file: !203, line: 572, column: 14)
!1730 = !DILocation(line: 0, scope: !1724)
!1731 = !DILocation(line: 577, column: 21, scope: !1732)
!1732 = distinct !DILexicalBlock(scope: !1570, file: !203, line: 577, column: 13)
!1733 = !DILocation(line: 577, column: 13, scope: !1570)
!1734 = !DILocation(line: 582, column: 30, scope: !1735)
!1735 = distinct !DILexicalBlock(scope: !1570, file: !203, line: 582, column: 13)
!1736 = !DILocation(line: 583, column: 17, scope: !1737)
!1737 = distinct !DILexicalBlock(scope: !1735, file: !203, line: 582, column: 51)
!1738 = !DILocation(line: 584, column: 9, scope: !1737)
!1739 = !DILocation(line: 587, column: 19, scope: !1740)
!1740 = distinct !DILexicalBlock(scope: !1570, file: !203, line: 587, column: 13)
!1741 = !DILocation(line: 587, column: 13, scope: !1570)
!1742 = !DILocation(line: 592, column: 30, scope: !1576)
!1743 = !DILocation(line: 594, column: 21, scope: !1574)
!1744 = !DILocation(line: 594, column: 15, scope: !1575)
!1745 = !DILocation(line: 596, column: 37, scope: !1573)
!1746 = !DILocation(line: 0, scope: !1573)
!1747 = !DILocation(line: 597, column: 82, scope: !1573)
!1748 = !DILocation(line: 597, column: 120, scope: !1573)
!1749 = !DILocation(line: 597, column: 125, scope: !1573)
!1750 = !DILocation(line: 597, column: 19, scope: !1573)
!1751 = !DILocation(line: 599, column: 11, scope: !1573)
!1752 = !DILocation(line: 600, column: 26, scope: !1580)
!1753 = !DILocation(line: 600, column: 20, scope: !1574)
!1754 = !DILocation(line: 601, column: 32, scope: !1579)
!1755 = !DILocation(line: 0, scope: !1579)
!1756 = !DILocation(line: 602, column: 72, scope: !1579)
!1757 = !DILocation(line: 602, column: 110, scope: !1579)
!1758 = !DILocation(line: 602, column: 19, scope: !1579)
!1759 = !DILocation(line: 603, column: 11, scope: !1579)
!1760 = !DILocation(line: 605, column: 38, scope: !1583)
!1761 = !DILocation(line: 605, column: 31, scope: !1583)
!1762 = !DILocation(line: 605, column: 60, scope: !1583)
!1763 = !DILocation(line: 605, column: 54, scope: !1583)
!1764 = !DILocation(line: 605, column: 85, scope: !1583)
!1765 = !DILocation(line: 0, scope: !1583)
!1766 = !DILocation(line: 605, column: 78, scope: !1583)
!1767 = !DILocation(line: 605, column: 102, scope: !1583)
!1768 = !DILocation(line: 606, column: 71, scope: !1583)
!1769 = !DILocation(line: 606, column: 109, scope: !1583)
!1770 = !DILocation(line: 606, column: 19, scope: !1583)
!1771 = !DILocation(line: 611, column: 21, scope: !1587)
!1772 = !DILocation(line: 611, column: 15, scope: !1588)
!1773 = !DILocation(line: 613, column: 61, scope: !1774)
!1774 = distinct !DILexicalBlock(scope: !1587, file: !203, line: 611, column: 40)
!1775 = !DILocation(line: 613, column: 100, scope: !1774)
!1776 = !DILocation(line: 613, column: 19, scope: !1774)
!1777 = !DILocation(line: 615, column: 11, scope: !1774)
!1778 = !DILocation(line: 616, column: 26, scope: !1586)
!1779 = !DILocation(line: 616, column: 20, scope: !1587)
!1780 = !DILocation(line: 617, column: 56, scope: !1781)
!1781 = distinct !DILexicalBlock(scope: !1586, file: !203, line: 616, column: 40)
!1782 = !DILocation(line: 617, column: 19, scope: !1781)
!1783 = !DILocation(line: 618, column: 11, scope: !1781)
!1784 = !DILocation(line: 620, column: 47, scope: !1585)
!1785 = !DILocation(line: 620, column: 40, scope: !1585)
!1786 = !DILocation(line: 620, column: 78, scope: !1585)
!1787 = !DILocation(line: 620, column: 63, scope: !1585)
!1788 = !DILocation(line: 620, column: 112, scope: !1585)
!1789 = !DILocation(line: 0, scope: !1585)
!1790 = !DILocation(line: 620, column: 105, scope: !1585)
!1791 = !DILocation(line: 621, column: 19, scope: !1585)
!1792 = !DILocation(line: 0, scope: !1576)
!1793 = !DILocation(line: 624, column: 15, scope: !1570)
!1794 = !DILocation(line: 630, column: 47, scope: !1571)
!1795 = !DILocation(line: 630, column: 15, scope: !1571)
!1796 = !DILocation(line: 631, column: 15, scope: !1571)
!1797 = !DILocation(line: 632, column: 9, scope: !1571)
!1798 = !DILocation(line: 0, scope: !1591)
!1799 = !DILocation(line: 637, column: 21, scope: !1800)
!1800 = distinct !DILexicalBlock(scope: !1591, file: !203, line: 637, column: 13)
!1801 = !DILocation(line: 637, column: 13, scope: !1591)
!1802 = !DILocation(line: 638, column: 22, scope: !1803)
!1803 = distinct !DILexicalBlock(scope: !1800, file: !203, line: 637, column: 36)
!1804 = !DILocation(line: 638, column: 11, scope: !1803)
!1805 = !DILocation(line: 639, column: 33, scope: !1806)
!1806 = distinct !DILexicalBlock(scope: !1803, file: !203, line: 638, column: 31)
!1807 = !DILocation(line: 639, column: 13, scope: !1806)
!1808 = !DILocation(line: 638, column: 19, scope: !1803)
!1809 = distinct !{!1809, !1804, !1810, !1358, !1359}
!1810 = !DILocation(line: 640, column: 11, scope: !1803)
!1811 = !DILocation(line: 450, column: 10, scope: !1544)
!1812 = !DILocation(line: 643, column: 19, scope: !1591)
!1813 = !DILocation(line: 643, column: 13, scope: !1591)
!1814 = !DILocation(line: 643, column: 47, scope: !1591)
!1815 = !DILocation(line: 643, column: 9, scope: !1591)
!1816 = !DILocation(line: 645, column: 13, scope: !1591)
!1817 = !DILocation(line: 646, column: 19, scope: !1818)
!1818 = distinct !DILexicalBlock(scope: !1819, file: !203, line: 645, column: 33)
!1819 = distinct !DILexicalBlock(scope: !1591, file: !203, line: 645, column: 13)
!1820 = !DILocation(line: 647, column: 33, scope: !1821)
!1821 = distinct !DILexicalBlock(scope: !1818, file: !203, line: 646, column: 31)
!1822 = !DILocation(line: 647, column: 13, scope: !1821)
!1823 = !DILocation(line: 646, column: 22, scope: !1818)
!1824 = !DILocation(line: 646, column: 11, scope: !1818)
!1825 = distinct !{!1825, !1824, !1826, !1358, !1359}
!1826 = !DILocation(line: 648, column: 11, scope: !1818)
!1827 = !DILocation(line: 650, column: 15, scope: !1591)
!1828 = !DILocation(line: 655, column: 25, scope: !1593)
!1829 = !DILocation(line: 0, scope: !1593)
!1830 = !DILocation(line: 656, column: 40, scope: !1593)
!1831 = !DILocation(line: 656, column: 26, scope: !1593)
!1832 = !DILocation(line: 658, column: 19, scope: !1833)
!1833 = distinct !DILexicalBlock(scope: !1593, file: !203, line: 658, column: 13)
!1834 = !DILocation(line: 658, column: 13, scope: !1593)
!1835 = !DILocation(line: 661, column: 21, scope: !1836)
!1836 = distinct !DILexicalBlock(scope: !1593, file: !203, line: 661, column: 13)
!1837 = !DILocation(line: 661, column: 13, scope: !1593)
!1838 = !DILocation(line: 662, column: 19, scope: !1839)
!1839 = distinct !DILexicalBlock(scope: !1836, file: !203, line: 661, column: 36)
!1840 = !DILocation(line: 662, column: 22, scope: !1839)
!1841 = !DILocation(line: 662, column: 11, scope: !1839)
!1842 = !DILocation(line: 663, column: 33, scope: !1843)
!1843 = distinct !DILexicalBlock(scope: !1839, file: !203, line: 662, column: 31)
!1844 = !DILocation(line: 663, column: 13, scope: !1843)
!1845 = distinct !{!1845, !1841, !1846, !1358, !1359}
!1846 = !DILocation(line: 664, column: 11, scope: !1839)
!1847 = !DILocation(line: 667, column: 17, scope: !1593)
!1848 = !DILocation(line: 667, column: 20, scope: !1593)
!1849 = !DILocation(line: 667, column: 26, scope: !1593)
!1850 = !DILocation(line: 667, column: 57, scope: !1593)
!1851 = !DILocation(line: 667, column: 69, scope: !1593)
!1852 = !DILocation(line: 667, column: 9, scope: !1593)
!1853 = !DILocation(line: 668, column: 18, scope: !1854)
!1854 = distinct !DILexicalBlock(scope: !1593, file: !203, line: 667, column: 74)
!1855 = !DILocation(line: 668, column: 34, scope: !1854)
!1856 = !DILocation(line: 668, column: 11, scope: !1854)
!1857 = distinct !{!1857, !1852, !1858, !1358, !1359}
!1858 = !DILocation(line: 669, column: 9, scope: !1593)
!1859 = !DILocation(line: 671, column: 13, scope: !1593)
!1860 = !DILocation(line: 672, column: 19, scope: !1861)
!1861 = distinct !DILexicalBlock(scope: !1862, file: !203, line: 671, column: 33)
!1862 = distinct !DILexicalBlock(scope: !1593, file: !203, line: 671, column: 13)
!1863 = !DILocation(line: 673, column: 33, scope: !1864)
!1864 = distinct !DILexicalBlock(scope: !1861, file: !203, line: 672, column: 31)
!1865 = !DILocation(line: 673, column: 13, scope: !1864)
!1866 = !DILocation(line: 672, column: 22, scope: !1861)
!1867 = !DILocation(line: 672, column: 11, scope: !1861)
!1868 = distinct !{!1868, !1867, !1869, !1358, !1359}
!1869 = !DILocation(line: 674, column: 11, scope: !1861)
!1870 = !DILocation(line: 676, column: 15, scope: !1593)
!1871 = !DILocation(line: 682, column: 15, scope: !1596)
!1872 = !DILocation(line: 0, scope: !1596)
!1873 = !DILocation(line: 690, column: 81, scope: !1874)
!1874 = distinct !DILexicalBlock(scope: !1875, file: !203, line: 688, column: 14)
!1875 = distinct !DILexicalBlock(scope: !1596, file: !203, line: 685, column: 13)
!1876 = !DILocation(line: 690, column: 70, scope: !1874)
!1877 = !DILocation(line: 690, column: 17, scope: !1874)
!1878 = !DILocation(line: 694, column: 15, scope: !1596)
!1879 = !DILocation(line: 699, column: 29, scope: !1571)
!1880 = !DILocation(line: 699, column: 9, scope: !1571)
!1881 = !DILocation(line: 700, column: 15, scope: !1571)
!1882 = !DILocation(line: 701, column: 9, scope: !1571)
!1883 = !DILocation(line: 704, column: 33, scope: !1571)
!1884 = !DILocation(line: 704, column: 9, scope: !1571)
!1885 = !DILocation(line: 705, column: 15, scope: !1571)
!1886 = !DILocation(line: 706, column: 9, scope: !1571)
!1887 = !DILocation(line: 711, column: 28, scope: !1544)
!1888 = !DILocation(line: 711, column: 24, scope: !1544)
!1889 = !DILocation(line: 711, column: 3, scope: !1544)
!1890 = !DILocation(line: 714, column: 3, scope: !1544)
!1891 = distinct !DISubprogram(name: "_out_null", scope: !203, file: !203, line: 117, type: !210, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !214, retainedNodes: !1892)
!1892 = !{!1893, !1894, !1895, !1896}
!1893 = !DILocalVariable(name: "character", arg: 1, scope: !1891, file: !203, line: 117, type: !114)
!1894 = !DILocalVariable(name: "buffer", arg: 2, scope: !1891, file: !203, line: 117, type: !54)
!1895 = !DILocalVariable(name: "idx", arg: 3, scope: !1891, file: !203, line: 117, type: !206)
!1896 = !DILocalVariable(name: "maxlen", arg: 4, scope: !1891, file: !203, line: 117, type: !206)
!1897 = !DILocation(line: 0, scope: !1891)
!1898 = !DILocation(line: 120, column: 1, scope: !1891)
!1899 = distinct !DISubprogram(name: "_out_buffer", scope: !203, file: !203, line: 108, type: !210, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !214, retainedNodes: !1900)
!1900 = !{!1901, !1902, !1903, !1904}
!1901 = !DILocalVariable(name: "character", arg: 1, scope: !1899, file: !203, line: 108, type: !114)
!1902 = !DILocalVariable(name: "buffer", arg: 2, scope: !1899, file: !203, line: 108, type: !54)
!1903 = !DILocalVariable(name: "idx", arg: 3, scope: !1899, file: !203, line: 108, type: !206)
!1904 = !DILocalVariable(name: "maxlen", arg: 4, scope: !1899, file: !203, line: 108, type: !206)
!1905 = !DILocation(line: 0, scope: !1899)
!1906 = !DILocation(line: 110, column: 11, scope: !1907)
!1907 = distinct !DILexicalBlock(scope: !1899, file: !203, line: 110, column: 7)
!1908 = !DILocation(line: 110, column: 7, scope: !1899)
!1909 = !DILocation(line: 111, column: 5, scope: !1910)
!1910 = distinct !DILexicalBlock(scope: !1907, file: !203, line: 110, column: 21)
!1911 = !DILocation(line: 111, column: 26, scope: !1910)
!1912 = !DILocation(line: 112, column: 3, scope: !1910)
!1913 = !DILocation(line: 113, column: 1, scope: !1899)
!1914 = distinct !DISubprogram(name: "_out_fct", scope: !203, file: !203, line: 134, type: !210, scopeLine: 135, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !214, retainedNodes: !1915)
!1915 = !{!1916, !1917, !1918, !1919}
!1916 = !DILocalVariable(name: "character", arg: 1, scope: !1914, file: !203, line: 134, type: !114)
!1917 = !DILocalVariable(name: "buffer", arg: 2, scope: !1914, file: !203, line: 134, type: !54)
!1918 = !DILocalVariable(name: "idx", arg: 3, scope: !1914, file: !203, line: 134, type: !206)
!1919 = !DILocalVariable(name: "maxlen", arg: 4, scope: !1914, file: !203, line: 134, type: !206)
!1920 = !DILocation(line: 0, scope: !1914)
!1921 = !DILocation(line: 137, column: 7, scope: !1922)
!1922 = distinct !DILexicalBlock(scope: !1914, file: !203, line: 137, column: 7)
!1923 = !DILocation(line: 137, column: 7, scope: !1914)
!1924 = !DILocation(line: 139, column: 35, scope: !1925)
!1925 = distinct !DILexicalBlock(scope: !1922, file: !203, line: 137, column: 18)
!1926 = !{!1927, !1600, i64 0}
!1927 = !{!"", !1600, i64 0, !1600, i64 4}
!1928 = !DILocation(line: 139, column: 80, scope: !1925)
!1929 = !{!1927, !1600, i64 4}
!1930 = !DILocation(line: 139, column: 5, scope: !1925)
!1931 = !DILocation(line: 140, column: 3, scope: !1925)
!1932 = !DILocation(line: 141, column: 1, scope: !1914)
!1933 = distinct !DISubprogram(name: "_is_digit", scope: !203, file: !203, line: 156, type: !1934, scopeLine: 157, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !214, retainedNodes: !1936)
!1934 = !DISubroutineType(types: !1935)
!1935 = !{!246, !114}
!1936 = !{!1937}
!1937 = !DILocalVariable(name: "ch", arg: 1, scope: !1933, file: !203, line: 156, type: !114)
!1938 = !DILocation(line: 0, scope: !1933)
!1939 = !DILocation(line: 158, column: 22, scope: !1933)
!1940 = !DILocation(line: 158, column: 3, scope: !1933)
!1941 = distinct !DISubprogram(name: "_atoi", scope: !203, file: !203, line: 163, type: !1942, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !214, retainedNodes: !1945)
!1942 = !DISubroutineType(types: !1943)
!1943 = !{!7, !1944}
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 32)
!1945 = !{!1946, !1947}
!1946 = !DILocalVariable(name: "str", arg: 1, scope: !1941, file: !203, line: 163, type: !1944)
!1947 = !DILocalVariable(name: "i", scope: !1941, file: !203, line: 165, type: !7)
!1948 = !DILocation(line: 0, scope: !1941)
!1949 = !DILocation(line: 166, column: 21, scope: !1941)
!1950 = !DILocation(line: 166, column: 20, scope: !1941)
!1951 = !DILocation(line: 166, column: 10, scope: !1941)
!1952 = !DILocation(line: 166, column: 3, scope: !1941)
!1953 = !DILocation(line: 167, column: 11, scope: !1954)
!1954 = distinct !DILexicalBlock(scope: !1941, file: !203, line: 166, column: 28)
!1955 = !DILocation(line: 167, column: 42, scope: !1954)
!1956 = !DILocation(line: 167, column: 34, scope: !1954)
!1957 = !DILocation(line: 167, column: 46, scope: !1954)
!1958 = !DILocation(line: 167, column: 17, scope: !1954)
!1959 = distinct !{!1959, !1952, !1960, !1358, !1359}
!1960 = !DILocation(line: 168, column: 3, scope: !1941)
!1961 = !DILocation(line: 169, column: 3, scope: !1941)
!1962 = distinct !DISubprogram(name: "_ntoa_long_long", scope: !203, file: !203, line: 274, type: !1963, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !214, retainedNodes: !1965)
!1963 = !DISubroutineType(types: !1964)
!1964 = !{!206, !208, !212, !206, !206, !169, !246, !169, !7, !7, !7}
!1965 = !{!1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978}
!1966 = !DILocalVariable(name: "out", arg: 1, scope: !1962, file: !203, line: 274, type: !208)
!1967 = !DILocalVariable(name: "buffer", arg: 2, scope: !1962, file: !203, line: 274, type: !212)
!1968 = !DILocalVariable(name: "idx", arg: 3, scope: !1962, file: !203, line: 274, type: !206)
!1969 = !DILocalVariable(name: "maxlen", arg: 4, scope: !1962, file: !203, line: 274, type: !206)
!1970 = !DILocalVariable(name: "value", arg: 5, scope: !1962, file: !203, line: 274, type: !169)
!1971 = !DILocalVariable(name: "negative", arg: 6, scope: !1962, file: !203, line: 274, type: !246)
!1972 = !DILocalVariable(name: "base", arg: 7, scope: !1962, file: !203, line: 274, type: !169)
!1973 = !DILocalVariable(name: "prec", arg: 8, scope: !1962, file: !203, line: 274, type: !7)
!1974 = !DILocalVariable(name: "width", arg: 9, scope: !1962, file: !203, line: 274, type: !7)
!1975 = !DILocalVariable(name: "flags", arg: 10, scope: !1962, file: !203, line: 274, type: !7)
!1976 = !DILocalVariable(name: "buf", scope: !1962, file: !203, line: 276, type: !238)
!1977 = !DILocalVariable(name: "len", scope: !1962, file: !203, line: 277, type: !206)
!1978 = !DILocalVariable(name: "digit", scope: !1979, file: !203, line: 287, type: !752)
!1979 = distinct !DILexicalBlock(scope: !1980, file: !203, line: 286, column: 8)
!1980 = distinct !DILexicalBlock(scope: !1981, file: !203, line: 285, column: 44)
!1981 = distinct !DILexicalBlock(scope: !1962, file: !203, line: 285, column: 7)
!1982 = !DILocation(line: 0, scope: !1962)
!1983 = !DILocation(line: 276, column: 3, scope: !1962)
!1984 = !DILocation(line: 276, column: 8, scope: !1962)
!1985 = !DILocation(line: 280, column: 8, scope: !1986)
!1986 = distinct !DILexicalBlock(scope: !1962, file: !203, line: 280, column: 7)
!1987 = !DILocation(line: 280, column: 7, scope: !1962)
!1988 = !DILocation(line: 285, column: 15, scope: !1981)
!1989 = !DILocation(line: 285, column: 34, scope: !1981)
!1990 = !DILocation(line: 286, column: 5, scope: !1980)
!1991 = !DILocation(line: 289, column: 13, scope: !1979)
!1992 = !DILocation(line: 287, column: 26, scope: !1979)
!1993 = !DILocation(line: 288, column: 20, scope: !1979)
!1994 = !DILocation(line: 0, scope: !1979)
!1995 = !DILocation(line: 288, column: 26, scope: !1979)
!1996 = !DILocation(line: 288, column: 14, scope: !1979)
!1997 = !DILocation(line: 288, column: 7, scope: !1979)
!1998 = !DILocation(line: 288, column: 18, scope: !1979)
!1999 = !DILocation(line: 290, column: 14, scope: !1980)
!2000 = !DILocation(line: 290, column: 20, scope: !1980)
!2001 = !DILocation(line: 290, column: 5, scope: !1979)
!2002 = distinct !{!2002, !1990, !2003, !1358, !1359}
!2003 = !DILocation(line: 290, column: 54, scope: !1980)
!2004 = !DILocation(line: 293, column: 69, scope: !1962)
!2005 = !DILocation(line: 293, column: 10, scope: !1962)
!2006 = !DILocation(line: 294, column: 1, scope: !1962)
!2007 = !DILocation(line: 293, column: 3, scope: !1962)
!2008 = distinct !DISubprogram(name: "_ntoa_long", scope: !203, file: !203, line: 249, type: !2009, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !214, retainedNodes: !2011)
!2009 = !DISubroutineType(types: !2010)
!2010 = !{!206, !208, !212, !206, !206, !45, !246, !45, !7, !7, !7}
!2011 = !{!2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024}
!2012 = !DILocalVariable(name: "out", arg: 1, scope: !2008, file: !203, line: 249, type: !208)
!2013 = !DILocalVariable(name: "buffer", arg: 2, scope: !2008, file: !203, line: 249, type: !212)
!2014 = !DILocalVariable(name: "idx", arg: 3, scope: !2008, file: !203, line: 249, type: !206)
!2015 = !DILocalVariable(name: "maxlen", arg: 4, scope: !2008, file: !203, line: 249, type: !206)
!2016 = !DILocalVariable(name: "value", arg: 5, scope: !2008, file: !203, line: 249, type: !45)
!2017 = !DILocalVariable(name: "negative", arg: 6, scope: !2008, file: !203, line: 249, type: !246)
!2018 = !DILocalVariable(name: "base", arg: 7, scope: !2008, file: !203, line: 249, type: !45)
!2019 = !DILocalVariable(name: "prec", arg: 8, scope: !2008, file: !203, line: 249, type: !7)
!2020 = !DILocalVariable(name: "width", arg: 9, scope: !2008, file: !203, line: 249, type: !7)
!2021 = !DILocalVariable(name: "flags", arg: 10, scope: !2008, file: !203, line: 249, type: !7)
!2022 = !DILocalVariable(name: "buf", scope: !2008, file: !203, line: 251, type: !238)
!2023 = !DILocalVariable(name: "len", scope: !2008, file: !203, line: 252, type: !206)
!2024 = !DILocalVariable(name: "digit", scope: !2025, file: !203, line: 262, type: !752)
!2025 = distinct !DILexicalBlock(scope: !2026, file: !203, line: 261, column: 8)
!2026 = distinct !DILexicalBlock(scope: !2027, file: !203, line: 260, column: 44)
!2027 = distinct !DILexicalBlock(scope: !2008, file: !203, line: 260, column: 7)
!2028 = !DILocation(line: 0, scope: !2008)
!2029 = !DILocation(line: 251, column: 3, scope: !2008)
!2030 = !DILocation(line: 251, column: 8, scope: !2008)
!2031 = !DILocation(line: 255, column: 8, scope: !2032)
!2032 = distinct !DILexicalBlock(scope: !2008, file: !203, line: 255, column: 7)
!2033 = !DILocation(line: 255, column: 7, scope: !2008)
!2034 = !DILocation(line: 260, column: 15, scope: !2027)
!2035 = !DILocation(line: 260, column: 34, scope: !2027)
!2036 = !DILocation(line: 261, column: 5, scope: !2026)
!2037 = !DILocation(line: 264, column: 13, scope: !2025)
!2038 = !DILocation(line: 263, column: 20, scope: !2025)
!2039 = !DILocation(line: 0, scope: !2025)
!2040 = !DILocation(line: 263, column: 26, scope: !2025)
!2041 = !DILocation(line: 263, column: 14, scope: !2025)
!2042 = !DILocation(line: 263, column: 7, scope: !2025)
!2043 = !DILocation(line: 263, column: 18, scope: !2025)
!2044 = !DILocation(line: 265, column: 14, scope: !2026)
!2045 = !DILocation(line: 265, column: 20, scope: !2026)
!2046 = !DILocation(line: 265, column: 5, scope: !2025)
!2047 = distinct !{!2047, !2036, !2048, !1358, !1359}
!2048 = !DILocation(line: 265, column: 54, scope: !2026)
!2049 = !DILocation(line: 268, column: 10, scope: !2008)
!2050 = !DILocation(line: 269, column: 1, scope: !2008)
!2051 = !DILocation(line: 268, column: 3, scope: !2008)
!2052 = !DILocation(line: 0, scope: !202)
!2053 = !DILocation(line: 303, column: 3, scope: !202)
!2054 = !DILocation(line: 303, column: 8, scope: !202)
!2055 = !DILocation(line: 314, column: 13, scope: !2056)
!2056 = distinct !DILexicalBlock(scope: !202, file: !203, line: 314, column: 7)
!2057 = !DILocation(line: 314, column: 7, scope: !202)
!2058 = !DILocation(line: 315, column: 25, scope: !2059)
!2059 = distinct !DILexicalBlock(scope: !2056, file: !203, line: 314, column: 23)
!2060 = !DILocation(line: 315, column: 5, scope: !2059)
!2061 = !DILocation(line: 316, column: 25, scope: !2059)
!2062 = !DILocation(line: 316, column: 5, scope: !2059)
!2063 = !DILocation(line: 317, column: 25, scope: !2059)
!2064 = !DILocation(line: 317, column: 5, scope: !2059)
!2065 = !DILocation(line: 318, column: 5, scope: !2059)
!2066 = !DILocation(line: 323, column: 13, scope: !2067)
!2067 = distinct !DILexicalBlock(scope: !202, file: !203, line: 323, column: 7)
!2068 = !DILocation(line: 323, column: 7, scope: !202)
!2069 = !DILocation(line: 329, column: 15, scope: !2070)
!2070 = distinct !DILexicalBlock(scope: !202, file: !203, line: 329, column: 7)
!2071 = !DILocation(line: 329, column: 7, scope: !202)
!2072 = !DILocation(line: 333, column: 42, scope: !202)
!2073 = !DILocation(line: 333, column: 3, scope: !202)
!2074 = !DILocation(line: 334, column: 16, scope: !2075)
!2075 = distinct !DILexicalBlock(scope: !202, file: !203, line: 333, column: 58)
!2076 = !DILocation(line: 334, column: 12, scope: !2075)
!2077 = !DILocation(line: 335, column: 9, scope: !2075)
!2078 = distinct !{!2078, !2073, !2079, !1358, !1359}
!2079 = !DILocation(line: 336, column: 3, scope: !202)
!2080 = !DILocation(line: 333, column: 15, scope: !202)
!2081 = !DILocation(line: 338, column: 15, scope: !202)
!2082 = !DILocation(line: 339, column: 25, scope: !202)
!2083 = !DILocation(line: 339, column: 23, scope: !202)
!2084 = !DILocation(line: 339, column: 34, scope: !202)
!2085 = !{!2086, !2086, i64 0}
!2086 = !{!"double", !1601, i64 0}
!2087 = !DILocation(line: 339, column: 32, scope: !202)
!2088 = !DILocation(line: 340, column: 24, scope: !202)
!2089 = !DILocation(line: 341, column: 16, scope: !202)
!2090 = !DILocation(line: 341, column: 14, scope: !202)
!2091 = !DILocation(line: 343, column: 12, scope: !2092)
!2092 = distinct !DILexicalBlock(scope: !202, file: !203, line: 343, column: 7)
!2093 = !DILocation(line: 343, column: 7, scope: !202)
!2094 = !DILocation(line: 344, column: 5, scope: !2095)
!2095 = distinct !DILexicalBlock(scope: !2092, file: !203, line: 343, column: 19)
!2096 = !DILocation(line: 346, column: 9, scope: !2097)
!2097 = distinct !DILexicalBlock(scope: !2095, file: !203, line: 346, column: 9)
!2098 = !DILocation(line: 346, column: 14, scope: !2097)
!2099 = !DILocation(line: 346, column: 9, scope: !2095)
!2100 = !DILocation(line: 348, column: 7, scope: !2101)
!2101 = distinct !DILexicalBlock(scope: !2097, file: !203, line: 346, column: 30)
!2102 = !DILocation(line: 349, column: 5, scope: !2101)
!2103 = !DILocation(line: 351, column: 17, scope: !2104)
!2104 = distinct !DILexicalBlock(scope: !2092, file: !203, line: 351, column: 12)
!2105 = !DILocation(line: 351, column: 12, scope: !2092)
!2106 = !DILocation(line: 353, column: 18, scope: !2107)
!2107 = distinct !DILexicalBlock(scope: !2104, file: !203, line: 353, column: 12)
!2108 = !DILocation(line: 353, column: 25, scope: !2107)
!2109 = !DILocation(line: 360, column: 13, scope: !2110)
!2110 = distinct !DILexicalBlock(scope: !202, file: !203, line: 360, column: 7)
!2111 = !DILocation(line: 360, column: 7, scope: !202)
!2112 = !DILocation(line: 364, column: 12, scope: !252)
!2113 = !DILocation(line: 364, column: 7, scope: !202)
!2114 = !DILocation(line: 365, column: 20, scope: !2115)
!2115 = distinct !DILexicalBlock(scope: !252, file: !203, line: 364, column: 19)
!2116 = !DILocation(line: 365, column: 18, scope: !2115)
!2117 = !DILocation(line: 366, column: 24, scope: !2118)
!2118 = distinct !DILexicalBlock(scope: !2115, file: !203, line: 366, column: 9)
!2119 = !DILocation(line: 0, scope: !251)
!2120 = !DILocation(line: 375, column: 5, scope: !251)
!2121 = !DILocation(line: 376, column: 7, scope: !2122)
!2122 = distinct !DILexicalBlock(scope: !251, file: !203, line: 375, column: 43)
!2123 = !DILocation(line: 378, column: 18, scope: !2124)
!2124 = distinct !DILexicalBlock(scope: !2122, file: !203, line: 378, column: 11)
!2125 = !DILocation(line: 377, column: 20, scope: !2122)
!2126 = !DILocation(line: 377, column: 14, scope: !2122)
!2127 = !DILocation(line: 377, column: 7, scope: !2122)
!2128 = !DILocation(line: 377, column: 18, scope: !2122)
!2129 = !DILocation(line: 378, column: 11, scope: !2122)
!2130 = distinct !{!2130, !2120, !2131, !1358, !1359}
!2131 = !DILocation(line: 381, column: 5, scope: !251)
!2132 = !DILocation(line: 383, column: 17, scope: !251)
!2133 = !DILocation(line: 383, column: 44, scope: !251)
!2134 = !DILocation(line: 383, column: 53, scope: !251)
!2135 = !DILocation(line: 384, column: 14, scope: !2136)
!2136 = distinct !DILexicalBlock(scope: !251, file: !203, line: 383, column: 63)
!2137 = !DILocation(line: 384, column: 7, scope: !2136)
!2138 = !DILocation(line: 384, column: 18, scope: !2136)
!2139 = distinct !{!2139, !2140, !2141, !1358, !1359}
!2140 = !DILocation(line: 383, column: 5, scope: !251)
!2141 = !DILocation(line: 385, column: 5, scope: !251)
!2142 = !DILocation(line: 386, column: 9, scope: !251)
!2143 = !DILocation(line: 388, column: 14, scope: !2144)
!2144 = distinct !DILexicalBlock(scope: !2145, file: !203, line: 386, column: 40)
!2145 = distinct !DILexicalBlock(scope: !251, file: !203, line: 386, column: 9)
!2146 = !DILocation(line: 388, column: 7, scope: !2144)
!2147 = !DILocation(line: 388, column: 18, scope: !2144)
!2148 = !DILocation(line: 389, column: 5, scope: !2144)
!2149 = !DILocation(line: 393, column: 14, scope: !202)
!2150 = !DILocation(line: 393, column: 3, scope: !202)
!2151 = !DILocation(line: 395, column: 17, scope: !2152)
!2152 = distinct !DILexicalBlock(scope: !2153, file: !203, line: 395, column: 9)
!2153 = distinct !DILexicalBlock(scope: !202, file: !203, line: 393, column: 41)
!2154 = !DILocation(line: 394, column: 18, scope: !2153)
!2155 = !DILocation(line: 394, column: 12, scope: !2153)
!2156 = !DILocation(line: 394, column: 5, scope: !2153)
!2157 = !DILocation(line: 394, column: 16, scope: !2153)
!2158 = !DILocation(line: 395, column: 9, scope: !2153)
!2159 = distinct !{!2159, !2150, !2160, !1358, !1359}
!2160 = !DILocation(line: 398, column: 3, scope: !202)
!2161 = !DILocation(line: 401, column: 15, scope: !2162)
!2162 = distinct !DILexicalBlock(scope: !202, file: !203, line: 401, column: 7)
!2163 = !DILocation(line: 401, column: 29, scope: !2162)
!2164 = !DILocation(line: 402, column: 9, scope: !2165)
!2165 = distinct !DILexicalBlock(scope: !2166, file: !203, line: 402, column: 9)
!2166 = distinct !DILexicalBlock(scope: !2162, file: !203, line: 401, column: 57)
!2167 = !DILocation(line: 402, column: 15, scope: !2165)
!2168 = !DILocation(line: 402, column: 28, scope: !2165)
!2169 = !DILocation(line: 405, column: 17, scope: !2166)
!2170 = !DILocation(line: 405, column: 26, scope: !2166)
!2171 = !DILocation(line: 405, column: 5, scope: !2166)
!2172 = !DILocation(line: 406, column: 18, scope: !2173)
!2173 = distinct !DILexicalBlock(scope: !2166, file: !203, line: 405, column: 62)
!2174 = !DILocation(line: 410, column: 11, scope: !2175)
!2175 = distinct !DILexicalBlock(scope: !202, file: !203, line: 410, column: 7)
!2176 = !DILocation(line: 410, column: 7, scope: !202)
!2177 = !DILocation(line: 411, column: 9, scope: !2178)
!2178 = distinct !DILexicalBlock(scope: !2175, file: !203, line: 410, column: 38)
!2179 = !DILocation(line: 414, column: 20, scope: !2180)
!2180 = distinct !DILexicalBlock(scope: !2181, file: !203, line: 414, column: 14)
!2181 = distinct !DILexicalBlock(scope: !2178, file: !203, line: 411, column: 9)
!2182 = !DILocation(line: 414, column: 14, scope: !2181)
!2183 = !DILocation(line: 417, column: 20, scope: !2184)
!2184 = distinct !DILexicalBlock(scope: !2180, file: !203, line: 417, column: 14)
!2185 = !DILocation(line: 417, column: 14, scope: !2180)
!2186 = !DILocation(line: 0, scope: !2181)
!2187 = !DILocation(line: 423, column: 29, scope: !256)
!2188 = !DILocation(line: 0, scope: !254)
!2189 = !DILocation(line: 425, column: 27, scope: !2190)
!2190 = distinct !DILexicalBlock(scope: !2191, file: !203, line: 424, column: 42)
!2191 = distinct !DILexicalBlock(scope: !254, file: !203, line: 424, column: 5)
!2192 = !DILocation(line: 425, column: 7, scope: !2190)
!2193 = !DILocation(line: 424, column: 38, scope: !2191)
!2194 = !DILocation(line: 424, column: 28, scope: !2191)
!2195 = !DILocation(line: 424, column: 5, scope: !254)
!2196 = distinct !{!2196, !2195, !2197, !1358, !1359}
!2197 = !DILocation(line: 426, column: 5, scope: !254)
!2198 = !DILocation(line: 0, scope: !258)
!2199 = !DILocation(line: 430, column: 25, scope: !2200)
!2200 = distinct !DILexicalBlock(scope: !258, file: !203, line: 430, column: 3)
!2201 = !DILocation(line: 430, column: 3, scope: !258)
!2202 = !DILocation(line: 435, column: 7, scope: !202)
!2203 = !DILocation(line: 431, column: 21, scope: !2204)
!2204 = distinct !DILexicalBlock(scope: !2200, file: !203, line: 430, column: 37)
!2205 = !DILocation(line: 431, column: 9, scope: !2204)
!2206 = !DILocation(line: 431, column: 39, scope: !2204)
!2207 = !DILocation(line: 431, column: 5, scope: !2204)
!2208 = !DILocation(line: 430, column: 33, scope: !2200)
!2209 = distinct !{!2209, !2201, !2210, !1358, !1359}
!2210 = !DILocation(line: 432, column: 3, scope: !258)
!2211 = !DILocation(line: 437, column: 27, scope: !2212)
!2212 = distinct !DILexicalBlock(scope: !2213, file: !203, line: 436, column: 37)
!2213 = distinct !DILexicalBlock(scope: !2214, file: !203, line: 435, column: 27)
!2214 = distinct !DILexicalBlock(scope: !202, file: !203, line: 435, column: 7)
!2215 = !DILocation(line: 437, column: 7, scope: !2212)
!2216 = !DILocation(line: 436, column: 16, scope: !2213)
!2217 = !DILocation(line: 436, column: 28, scope: !2213)
!2218 = !DILocation(line: 436, column: 5, scope: !2213)
!2219 = distinct !{!2219, !2218, !2220, !1358, !1359}
!2220 = !DILocation(line: 438, column: 5, scope: !2213)
!2221 = !DILocation(line: 442, column: 1, scope: !202)
!2222 = distinct !DISubprogram(name: "_strnlen_s", scope: !203, file: !203, line: 146, type: !2223, scopeLine: 147, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !214, retainedNodes: !2225)
!2223 = !DISubroutineType(types: !2224)
!2224 = !{!7, !751, !206}
!2225 = !{!2226, !2227, !2228}
!2226 = !DILocalVariable(name: "str", arg: 1, scope: !2222, file: !203, line: 146, type: !751)
!2227 = !DILocalVariable(name: "maxsize", arg: 2, scope: !2222, file: !203, line: 146, type: !206)
!2228 = !DILocalVariable(name: "s", scope: !2222, file: !203, line: 148, type: !751)
!2229 = !DILocation(line: 0, scope: !2222)
!2230 = !DILocation(line: 149, column: 17, scope: !2231)
!2231 = distinct !DILexicalBlock(scope: !2232, file: !203, line: 149, column: 3)
!2232 = distinct !DILexicalBlock(scope: !2222, file: !203, line: 149, column: 3)
!2233 = !DILocation(line: 149, column: 20, scope: !2231)
!2234 = !DILocation(line: 149, column: 30, scope: !2231)
!2235 = !DILocation(line: 149, column: 34, scope: !2231)
!2236 = distinct !{!2236, !2237, !2238, !1358, !1359}
!2237 = !DILocation(line: 149, column: 3, scope: !2232)
!2238 = !DILocation(line: 149, column: 38, scope: !2232)
!2239 = !DILocation(line: 0, scope: !2232)
!2240 = !DILocation(line: 150, column: 27, scope: !2222)
!2241 = !DILocation(line: 150, column: 3, scope: !2222)
!2242 = distinct !DISubprogram(name: "_ntoa_format", scope: !203, file: !203, line: 174, type: !2243, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !214, retainedNodes: !2245)
!2243 = !DISubroutineType(types: !2244)
!2244 = !{!206, !208, !212, !206, !206, !212, !206, !246, !7, !7, !7, !7}
!2245 = !{!2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2262}
!2246 = !DILocalVariable(name: "out", arg: 1, scope: !2242, file: !203, line: 174, type: !208)
!2247 = !DILocalVariable(name: "buffer", arg: 2, scope: !2242, file: !203, line: 174, type: !212)
!2248 = !DILocalVariable(name: "idx", arg: 3, scope: !2242, file: !203, line: 174, type: !206)
!2249 = !DILocalVariable(name: "maxlen", arg: 4, scope: !2242, file: !203, line: 174, type: !206)
!2250 = !DILocalVariable(name: "buf", arg: 5, scope: !2242, file: !203, line: 174, type: !212)
!2251 = !DILocalVariable(name: "len", arg: 6, scope: !2242, file: !203, line: 174, type: !206)
!2252 = !DILocalVariable(name: "negative", arg: 7, scope: !2242, file: !203, line: 174, type: !246)
!2253 = !DILocalVariable(name: "base", arg: 8, scope: !2242, file: !203, line: 174, type: !7)
!2254 = !DILocalVariable(name: "prec", arg: 9, scope: !2242, file: !203, line: 174, type: !7)
!2255 = !DILocalVariable(name: "width", arg: 10, scope: !2242, file: !203, line: 174, type: !7)
!2256 = !DILocalVariable(name: "flags", arg: 11, scope: !2242, file: !203, line: 174, type: !7)
!2257 = !DILocalVariable(name: "start_idx", scope: !2242, file: !203, line: 176, type: !236)
!2258 = !DILocalVariable(name: "i", scope: !2259, file: !203, line: 227, type: !206)
!2259 = distinct !DILexicalBlock(scope: !2260, file: !203, line: 227, column: 5)
!2260 = distinct !DILexicalBlock(scope: !2261, file: !203, line: 226, column: 58)
!2261 = distinct !DILexicalBlock(scope: !2242, file: !203, line: 226, column: 7)
!2262 = !DILocalVariable(name: "i", scope: !2263, file: !203, line: 233, type: !206)
!2263 = distinct !DILexicalBlock(scope: !2242, file: !203, line: 233, column: 3)
!2264 = !DILocation(line: 0, scope: !2242)
!2265 = !DILocation(line: 179, column: 15, scope: !2266)
!2266 = distinct !DILexicalBlock(scope: !2242, file: !203, line: 179, column: 7)
!2267 = !DILocation(line: 179, column: 7, scope: !2242)
!2268 = !DILocation(line: 180, column: 9, scope: !2269)
!2269 = distinct !DILexicalBlock(scope: !2270, file: !203, line: 180, column: 9)
!2270 = distinct !DILexicalBlock(scope: !2266, file: !203, line: 179, column: 30)
!2271 = !DILocation(line: 180, column: 15, scope: !2269)
!2272 = !DILocation(line: 180, column: 25, scope: !2269)
!2273 = !DILocation(line: 180, column: 42, scope: !2269)
!2274 = !DILocation(line: 180, column: 55, scope: !2269)
!2275 = !DILocation(line: 183, column: 17, scope: !2270)
!2276 = !DILocation(line: 183, column: 25, scope: !2270)
!2277 = !DILocation(line: 183, column: 5, scope: !2270)
!2278 = !DILocation(line: 184, column: 18, scope: !2279)
!2279 = distinct !DILexicalBlock(scope: !2270, file: !203, line: 183, column: 61)
!2280 = !DILocation(line: 186, column: 36, scope: !2270)
!2281 = !DILocation(line: 186, column: 44, scope: !2270)
!2282 = !DILocation(line: 186, column: 53, scope: !2270)
!2283 = !DILocation(line: 187, column: 14, scope: !2284)
!2284 = distinct !DILexicalBlock(scope: !2270, file: !203, line: 186, column: 89)
!2285 = !DILocation(line: 187, column: 7, scope: !2284)
!2286 = !DILocation(line: 187, column: 18, scope: !2284)
!2287 = distinct !{!2287, !2288, !2289, !1358, !1359}
!2288 = !DILocation(line: 186, column: 5, scope: !2270)
!2289 = !DILocation(line: 188, column: 5, scope: !2270)
!2290 = !DILocation(line: 192, column: 13, scope: !2291)
!2291 = distinct !DILexicalBlock(scope: !2242, file: !203, line: 192, column: 7)
!2292 = !DILocation(line: 192, column: 7, scope: !2242)
!2293 = !DILocation(line: 193, column: 17, scope: !2294)
!2294 = distinct !DILexicalBlock(scope: !2295, file: !203, line: 193, column: 9)
!2295 = distinct !DILexicalBlock(scope: !2291, file: !203, line: 192, column: 27)
!2296 = !DILocation(line: 193, column: 36, scope: !2294)
!2297 = !DILocation(line: 193, column: 52, scope: !2294)
!2298 = !DILocation(line: 193, column: 61, scope: !2294)
!2299 = !DILocation(line: 194, column: 10, scope: !2300)
!2300 = distinct !DILexicalBlock(scope: !2294, file: !203, line: 193, column: 81)
!2301 = !DILocation(line: 195, column: 11, scope: !2302)
!2302 = distinct !DILexicalBlock(scope: !2300, file: !203, line: 195, column: 11)
!2303 = !DILocation(line: 195, column: 15, scope: !2302)
!2304 = !DILocation(line: 199, column: 15, scope: !2305)
!2305 = distinct !DILexicalBlock(scope: !2295, file: !203, line: 199, column: 9)
!2306 = !DILocation(line: 199, column: 23, scope: !2305)
!2307 = !DILocation(line: 199, column: 34, scope: !2305)
!2308 = !DILocation(line: 199, column: 53, scope: !2305)
!2309 = !DILocation(line: 202, column: 38, scope: !2310)
!2310 = distinct !DILexicalBlock(scope: !2305, file: !203, line: 202, column: 14)
!2311 = !DILocation(line: 202, column: 57, scope: !2310)
!2312 = !DILocation(line: 205, column: 20, scope: !2313)
!2313 = distinct !DILexicalBlock(scope: !2310, file: !203, line: 205, column: 14)
!2314 = !DILocation(line: 205, column: 27, scope: !2313)
!2315 = !DILocation(line: 0, scope: !2305)
!2316 = !DILocation(line: 208, column: 13, scope: !2317)
!2317 = distinct !DILexicalBlock(scope: !2295, file: !203, line: 208, column: 9)
!2318 = !DILocation(line: 0, scope: !2295)
!2319 = !DILocation(line: 208, column: 9, scope: !2295)
!2320 = !DILocation(line: 209, column: 14, scope: !2321)
!2321 = distinct !DILexicalBlock(scope: !2317, file: !203, line: 208, column: 40)
!2322 = !DILocation(line: 209, column: 7, scope: !2321)
!2323 = !DILocation(line: 209, column: 18, scope: !2321)
!2324 = !DILocation(line: 210, column: 5, scope: !2321)
!2325 = !DILocation(line: 213, column: 11, scope: !2326)
!2326 = distinct !DILexicalBlock(scope: !2242, file: !203, line: 213, column: 7)
!2327 = !DILocation(line: 213, column: 7, scope: !2242)
!2328 = !DILocation(line: 214, column: 9, scope: !2329)
!2329 = distinct !DILexicalBlock(scope: !2326, file: !203, line: 213, column: 38)
!2330 = !DILocation(line: 217, column: 20, scope: !2331)
!2331 = distinct !DILexicalBlock(scope: !2332, file: !203, line: 217, column: 14)
!2332 = distinct !DILexicalBlock(scope: !2329, file: !203, line: 214, column: 9)
!2333 = !DILocation(line: 217, column: 14, scope: !2332)
!2334 = !DILocation(line: 220, column: 20, scope: !2335)
!2335 = distinct !DILexicalBlock(scope: !2331, file: !203, line: 220, column: 14)
!2336 = !DILocation(line: 220, column: 14, scope: !2331)
!2337 = !DILocation(line: 0, scope: !2332)
!2338 = !DILocation(line: 226, column: 29, scope: !2261)
!2339 = !DILocation(line: 0, scope: !2259)
!2340 = !DILocation(line: 228, column: 27, scope: !2341)
!2341 = distinct !DILexicalBlock(scope: !2342, file: !203, line: 227, column: 42)
!2342 = distinct !DILexicalBlock(scope: !2259, file: !203, line: 227, column: 5)
!2343 = !DILocation(line: 228, column: 7, scope: !2341)
!2344 = !DILocation(line: 227, column: 38, scope: !2342)
!2345 = !DILocation(line: 227, column: 28, scope: !2342)
!2346 = !DILocation(line: 227, column: 5, scope: !2259)
!2347 = distinct !{!2347, !2346, !2348, !1358, !1359}
!2348 = !DILocation(line: 229, column: 5, scope: !2259)
!2349 = !DILocation(line: 0, scope: !2263)
!2350 = !DILocation(line: 233, column: 25, scope: !2351)
!2351 = distinct !DILexicalBlock(scope: !2263, file: !203, line: 233, column: 3)
!2352 = !DILocation(line: 233, column: 3, scope: !2263)
!2353 = !DILocation(line: 238, column: 7, scope: !2242)
!2354 = !DILocation(line: 234, column: 21, scope: !2355)
!2355 = distinct !DILexicalBlock(scope: !2351, file: !203, line: 233, column: 37)
!2356 = !DILocation(line: 234, column: 9, scope: !2355)
!2357 = !DILocation(line: 234, column: 39, scope: !2355)
!2358 = !DILocation(line: 234, column: 5, scope: !2355)
!2359 = !DILocation(line: 233, column: 33, scope: !2351)
!2360 = distinct !{!2360, !2352, !2361, !1358, !1359}
!2361 = !DILocation(line: 235, column: 3, scope: !2263)
!2362 = !DILocation(line: 240, column: 27, scope: !2363)
!2363 = distinct !DILexicalBlock(scope: !2364, file: !203, line: 239, column: 37)
!2364 = distinct !DILexicalBlock(scope: !2365, file: !203, line: 238, column: 27)
!2365 = distinct !DILexicalBlock(scope: !2242, file: !203, line: 238, column: 7)
!2366 = !DILocation(line: 240, column: 7, scope: !2363)
!2367 = !DILocation(line: 239, column: 16, scope: !2364)
!2368 = !DILocation(line: 239, column: 28, scope: !2364)
!2369 = !DILocation(line: 239, column: 5, scope: !2364)
!2370 = distinct !{!2370, !2369, !2371, !1358, !1359}
!2371 = !DILocation(line: 241, column: 5, scope: !2364)
!2372 = !DILocation(line: 244, column: 3, scope: !2242)
!2373 = distinct !DISubprogram(name: "sprintf_", scope: !203, file: !203, line: 731, type: !2374, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !214, retainedNodes: !2376)
!2374 = !DISubroutineType(types: !2375)
!2375 = !{!131, !212, !751, null}
!2376 = !{!2377, !2378, !2379, !2380}
!2377 = !DILocalVariable(name: "buffer", arg: 1, scope: !2373, file: !203, line: 731, type: !212)
!2378 = !DILocalVariable(name: "format", arg: 2, scope: !2373, file: !203, line: 731, type: !751)
!2379 = !DILocalVariable(name: "va", scope: !2373, file: !203, line: 733, type: !1507)
!2380 = !DILocalVariable(name: "ret", scope: !2373, file: !203, line: 735, type: !1519)
!2381 = !DILocation(line: 0, scope: !2373)
!2382 = !DILocation(line: 733, column: 3, scope: !2373)
!2383 = !DILocation(line: 733, column: 11, scope: !2373)
!2384 = !DILocation(line: 734, column: 3, scope: !2373)
!2385 = !DILocation(line: 735, column: 19, scope: !2373)
!2386 = !DILocation(line: 736, column: 3, scope: !2373)
!2387 = !DILocation(line: 738, column: 1, scope: !2373)
!2388 = !DILocation(line: 737, column: 3, scope: !2373)
!2389 = distinct !DISubprogram(name: "snprintf_", scope: !203, file: !203, line: 741, type: !2390, scopeLine: 742, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !214, retainedNodes: !2392)
!2390 = !DISubroutineType(types: !2391)
!2391 = !{!131, !212, !206, !751, null}
!2392 = !{!2393, !2394, !2395, !2396, !2397}
!2393 = !DILocalVariable(name: "buffer", arg: 1, scope: !2389, file: !203, line: 741, type: !212)
!2394 = !DILocalVariable(name: "count", arg: 2, scope: !2389, file: !203, line: 741, type: !206)
!2395 = !DILocalVariable(name: "format", arg: 3, scope: !2389, file: !203, line: 741, type: !751)
!2396 = !DILocalVariable(name: "va", scope: !2389, file: !203, line: 743, type: !1507)
!2397 = !DILocalVariable(name: "ret", scope: !2389, file: !203, line: 745, type: !1519)
!2398 = !DILocation(line: 0, scope: !2389)
!2399 = !DILocation(line: 743, column: 3, scope: !2389)
!2400 = !DILocation(line: 743, column: 11, scope: !2389)
!2401 = !DILocation(line: 744, column: 3, scope: !2389)
!2402 = !DILocation(line: 745, column: 19, scope: !2389)
!2403 = !DILocation(line: 746, column: 3, scope: !2389)
!2404 = !DILocation(line: 748, column: 1, scope: !2389)
!2405 = !DILocation(line: 747, column: 3, scope: !2389)
!2406 = distinct !DISubprogram(name: "vsnprintf_", scope: !203, file: !203, line: 751, type: !2407, scopeLine: 752, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !214, retainedNodes: !2409)
!2407 = !DISubroutineType(types: !2408)
!2408 = !{!131, !212, !206, !751, !1507}
!2409 = !{!2410, !2411, !2412, !2413}
!2410 = !DILocalVariable(name: "buffer", arg: 1, scope: !2406, file: !203, line: 751, type: !212)
!2411 = !DILocalVariable(name: "count", arg: 2, scope: !2406, file: !203, line: 751, type: !206)
!2412 = !DILocalVariable(name: "format", arg: 3, scope: !2406, file: !203, line: 751, type: !751)
!2413 = !DILocalVariable(name: "va", arg: 4, scope: !2406, file: !203, line: 751, type: !1507)
!2414 = !DILocation(line: 0, scope: !2406)
!2415 = !DILocation(line: 753, column: 10, scope: !2406)
!2416 = !DILocation(line: 753, column: 3, scope: !2406)
!2417 = distinct !DISubprogram(name: "fctprintf", scope: !203, file: !203, line: 757, type: !2418, scopeLine: 758, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !214, retainedNodes: !2420)
!2418 = !DISubroutineType(types: !2419)
!2419 = !{!131, !221, !54, !751, null}
!2420 = !{!2421, !2422, !2423, !2424, !2425, !2427}
!2421 = !DILocalVariable(name: "out", arg: 1, scope: !2417, file: !203, line: 757, type: !221)
!2422 = !DILocalVariable(name: "arg", arg: 2, scope: !2417, file: !203, line: 757, type: !54)
!2423 = !DILocalVariable(name: "format", arg: 3, scope: !2417, file: !203, line: 757, type: !751)
!2424 = !DILocalVariable(name: "va", scope: !2417, file: !203, line: 759, type: !1507)
!2425 = !DILocalVariable(name: "out_fct_wrap", scope: !2417, file: !203, line: 761, type: !2426)
!2426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !217)
!2427 = !DILocalVariable(name: "ret", scope: !2417, file: !203, line: 762, type: !1519)
!2428 = !DILocation(line: 0, scope: !2417)
!2429 = !DILocation(line: 759, column: 3, scope: !2417)
!2430 = !DILocation(line: 759, column: 11, scope: !2417)
!2431 = !DILocation(line: 760, column: 3, scope: !2417)
!2432 = !DILocation(line: 761, column: 3, scope: !2417)
!2433 = !DILocation(line: 761, column: 27, scope: !2417)
!2434 = !DILocation(line: 761, column: 42, scope: !2417)
!2435 = !DILocation(line: 762, column: 19, scope: !2417)
!2436 = !DILocation(line: 763, column: 3, scope: !2417)
!2437 = !DILocation(line: 765, column: 1, scope: !2417)
!2438 = !DILocation(line: 764, column: 3, scope: !2417)
!2439 = distinct !DISubprogram(name: "SystemInit", scope: !265, file: !265, line: 157, type: !99, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !101)
!2440 = !DILocation(line: 161, column: 11, scope: !2439)
!2441 = !{!2442, !2443, i64 0}
!2442 = !{!"", !2443, i64 0, !2443, i64 4, !2443, i64 8, !2443, i64 12, !2443, i64 16, !2443, i64 20, !2443, i64 24, !2443, i64 28, !2443, i64 32, !2443, i64 36}
!2443 = !{!"int", !1601, i64 0}
!2444 = !DILocation(line: 165, column: 13, scope: !2439)
!2445 = !{!2442, !2443, i64 4}
!2446 = !DILocation(line: 171, column: 11, scope: !2439)
!2447 = !DILocation(line: 174, column: 11, scope: !2439)
!2448 = !DILocation(line: 177, column: 13, scope: !2439)
!2449 = !DILocation(line: 196, column: 12, scope: !2439)
!2450 = !{!2442, !2443, i64 8}
!2451 = !DILocation(line: 208, column: 13, scope: !2439)
!2452 = !{!2453, !2443, i64 8}
!2453 = !{!"", !2443, i64 0, !2443, i64 4, !2443, i64 8, !2443, i64 12, !2443, i64 16, !2443, i64 20, !1601, i64 24, !2443, i64 36, !2443, i64 40, !2443, i64 44, !2443, i64 48, !2443, i64 52, !2443, i64 56, !2443, i64 60, !1601, i64 64, !2443, i64 72, !2443, i64 76, !1601, i64 80, !1601, i64 96, !1601, i64 116, !2443, i64 136}
!2454 = !DILocation(line: 210, column: 1, scope: !2439)
!2455 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !265, file: !265, line: 247, type: !99, scopeLine: 248, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !2456)
!2456 = !{!2457, !2458, !2459}
!2457 = !DILocalVariable(name: "tmp", scope: !2455, file: !265, line: 249, type: !21)
!2458 = !DILocalVariable(name: "pllmull", scope: !2455, file: !265, line: 249, type: !21)
!2459 = !DILocalVariable(name: "pllsource", scope: !2455, file: !265, line: 249, type: !21)
!2460 = !DILocation(line: 0, scope: !2455)
!2461 = !DILocation(line: 260, column: 14, scope: !2455)
!2462 = !DILocation(line: 260, column: 19, scope: !2455)
!2463 = !DILocation(line: 262, column: 3, scope: !2455)
!2464 = !DILocation(line: 273, column: 22, scope: !2465)
!2465 = distinct !DILexicalBlock(scope: !2455, file: !265, line: 263, column: 3)
!2466 = !DILocation(line: 274, column: 24, scope: !2465)
!2467 = !DILocation(line: 274, column: 29, scope: !2465)
!2468 = !DILocation(line: 277, column: 27, scope: !2465)
!2469 = !DILocation(line: 277, column: 35, scope: !2465)
!2470 = !DILocation(line: 279, column: 21, scope: !2471)
!2471 = distinct !DILexicalBlock(scope: !2465, file: !265, line: 279, column: 11)
!2472 = !DILocation(line: 279, column: 11, scope: !2465)
!2473 = !DILocation(line: 282, column: 45, scope: !2474)
!2474 = distinct !DILexicalBlock(scope: !2471, file: !265, line: 280, column: 7)
!2475 = !DILocation(line: 283, column: 7, scope: !2474)
!2476 = !DILocation(line: 292, column: 19, scope: !2477)
!2477 = distinct !DILexicalBlock(scope: !2478, file: !265, line: 292, column: 13)
!2478 = distinct !DILexicalBlock(scope: !2471, file: !265, line: 285, column: 7)
!2479 = !DILocation(line: 292, column: 24, scope: !2477)
!2480 = !DILocation(line: 292, column: 45, scope: !2477)
!2481 = !DILocation(line: 292, column: 13, scope: !2478)
!2482 = !DILocation(line: 294, column: 47, scope: !2483)
!2483 = distinct !DILexicalBlock(scope: !2477, file: !265, line: 293, column: 9)
!2484 = !DILocation(line: 295, column: 9, scope: !2483)
!2485 = !DILocation(line: 298, column: 39, scope: !2486)
!2486 = distinct !DILexicalBlock(scope: !2477, file: !265, line: 297, column: 9)
!2487 = !DILocation(line: 0, scope: !2465)
!2488 = !{!2443, !2443, i64 0}
!2489 = !DILocation(line: 350, column: 30, scope: !2455)
!2490 = !DILocation(line: 350, column: 52, scope: !2455)
!2491 = !DILocation(line: 350, column: 9, scope: !2455)
!2492 = !DILocation(line: 352, column: 19, scope: !2455)
!2493 = !DILocation(line: 353, column: 1, scope: !2455)
!2494 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !807, file: !807, line: 202, type: !2495, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !2498)
!2495 = !DISubroutineType(types: !2496)
!2496 = !{!2497}
!2497 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !6, line: 47, baseType: !345)
!2498 = !{!2499}
!2499 = !DILocalVariable(name: "tickstart", scope: !2494, file: !807, line: 204, type: !21)
!2500 = !DILocation(line: 207, column: 15, scope: !2494)
!2501 = !DILocation(line: 0, scope: !2494)
!2502 = !DILocation(line: 210, column: 3, scope: !2494)
!2503 = !DILocation(line: 213, column: 3, scope: !2494)
!2504 = !DILocation(line: 213, column: 10, scope: !2494)
!2505 = !DILocation(line: 213, column: 43, scope: !2494)
!2506 = !DILocation(line: 215, column: 10, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2508, file: !807, line: 215, column: 9)
!2508 = distinct !DILexicalBlock(scope: !2494, file: !807, line: 214, column: 3)
!2509 = !DILocation(line: 215, column: 24, scope: !2507)
!2510 = !DILocation(line: 215, column: 37, scope: !2507)
!2511 = !DILocation(line: 215, column: 9, scope: !2508)
!2512 = distinct !{!2512, !2503, !2513, !1358, !1359}
!2513 = !DILocation(line: 219, column: 3, scope: !2494)
!2514 = !DILocation(line: 222, column: 3, scope: !2494)
!2515 = !DILocation(line: 225, column: 15, scope: !2494)
!2516 = !DILocation(line: 228, column: 3, scope: !2494)
!2517 = !DILocation(line: 231, column: 3, scope: !2494)
!2518 = !DILocation(line: 231, column: 10, scope: !2494)
!2519 = !DILocation(line: 231, column: 44, scope: !2494)
!2520 = !DILocation(line: 233, column: 10, scope: !2521)
!2521 = distinct !DILexicalBlock(scope: !2522, file: !807, line: 233, column: 9)
!2522 = distinct !DILexicalBlock(scope: !2494, file: !807, line: 232, column: 3)
!2523 = !DILocation(line: 233, column: 24, scope: !2521)
!2524 = !DILocation(line: 233, column: 37, scope: !2521)
!2525 = !DILocation(line: 233, column: 9, scope: !2522)
!2526 = distinct !{!2526, !2517, !2527, !1358, !1359}
!2527 = !DILocation(line: 237, column: 3, scope: !2494)
!2528 = !DILocation(line: 240, column: 19, scope: !2494)
!2529 = !DILocation(line: 243, column: 20, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !2494, file: !807, line: 243, column: 7)
!2531 = !DILocation(line: 243, column: 7, scope: !2530)
!2532 = !DILocation(line: 243, column: 32, scope: !2530)
!2533 = !DILocation(line: 243, column: 7, scope: !2494)
!2534 = !DILocation(line: 249, column: 15, scope: !2494)
!2535 = !DILocation(line: 252, column: 3, scope: !2494)
!2536 = !DILocation(line: 255, column: 3, scope: !2494)
!2537 = !DILocation(line: 255, column: 10, scope: !2494)
!2538 = !DILocation(line: 255, column: 43, scope: !2494)
!2539 = !DILocation(line: 257, column: 10, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2541, file: !807, line: 257, column: 9)
!2541 = distinct !DILexicalBlock(scope: !2494, file: !807, line: 256, column: 3)
!2542 = !DILocation(line: 257, column: 24, scope: !2540)
!2543 = !DILocation(line: 257, column: 37, scope: !2540)
!2544 = !DILocation(line: 257, column: 9, scope: !2541)
!2545 = distinct !{!2545, !2536, !2546, !1358, !1359}
!2546 = !DILocation(line: 261, column: 3, scope: !2494)
!2547 = !DILocation(line: 264, column: 3, scope: !2494)
!2548 = !DILocation(line: 267, column: 15, scope: !2494)
!2549 = !DILocation(line: 270, column: 3, scope: !2494)
!2550 = !DILocation(line: 273, column: 3, scope: !2494)
!2551 = !DILocation(line: 273, column: 10, scope: !2494)
!2552 = !DILocation(line: 273, column: 43, scope: !2494)
!2553 = !DILocation(line: 275, column: 10, scope: !2554)
!2554 = distinct !DILexicalBlock(scope: !2555, file: !807, line: 275, column: 9)
!2555 = distinct !DILexicalBlock(scope: !2494, file: !807, line: 274, column: 3)
!2556 = !DILocation(line: 275, column: 24, scope: !2554)
!2557 = !DILocation(line: 275, column: 37, scope: !2554)
!2558 = !DILocation(line: 275, column: 9, scope: !2555)
!2559 = distinct !{!2559, !2550, !2560, !1358, !1359}
!2560 = !DILocation(line: 279, column: 3, scope: !2494)
!2561 = !DILocation(line: 282, column: 3, scope: !2494)
!2562 = !DILocation(line: 324, column: 3, scope: !2494)
!2563 = !{!2442, !2443, i64 36}
!2564 = !DILocation(line: 327, column: 3, scope: !2494)
!2565 = !DILocation(line: 329, column: 3, scope: !2494)
!2566 = !DILocation(line: 330, column: 1, scope: !2494)
!2567 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !807, file: !807, line: 347, type: !2568, scopeLine: 348, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !2588)
!2568 = !DISubroutineType(types: !2569)
!2569 = !{!2497, !2570}
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !1394, line: 261, baseType: !2572)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1394, line: 228, size: 320, elements: !2573)
!2573 = !{!2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !2572, file: !1394, line: 230, baseType: !21, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !2572, file: !1394, line: 238, baseType: !21, size: 32, offset: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "HSEPredivValue", scope: !2572, file: !1394, line: 241, baseType: !21, size: 32, offset: 64)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !2572, file: !1394, line: 244, baseType: !21, size: 32, offset: 96)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !2572, file: !1394, line: 247, baseType: !21, size: 32, offset: 128)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !2572, file: !1394, line: 250, baseType: !21, size: 32, offset: 160)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !2572, file: !1394, line: 253, baseType: !21, size: 32, offset: 192)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !2572, file: !1394, line: 256, baseType: !2582, size: 96, offset: 224)
!2582 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !1406, line: 59, baseType: !2583)
!2583 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1406, line: 49, size: 96, elements: !2584)
!2584 = !{!2585, !2586, !2587}
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !2583, file: !1406, line: 51, baseType: !21, size: 32)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !2583, file: !1406, line: 54, baseType: !21, size: 32, offset: 32)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !2583, file: !1406, line: 57, baseType: !21, size: 32, offset: 64)
!2588 = !{!2589, !2590, !2591, !2592, !2596}
!2589 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !2567, file: !807, line: 347, type: !2570)
!2590 = !DILocalVariable(name: "tickstart", scope: !2567, file: !807, line: 349, type: !21)
!2591 = !DILocalVariable(name: "pll_config", scope: !2567, file: !807, line: 350, type: !21)
!2592 = !DILocalVariable(name: "pwrclkchanged", scope: !2593, file: !807, line: 526, type: !2595)
!2593 = distinct !DILexicalBlock(scope: !2594, file: !807, line: 525, column: 3)
!2594 = distinct !DILexicalBlock(scope: !2567, file: !807, line: 524, column: 7)
!2595 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !268, line: 155, baseType: !267)
!2596 = !DILocalVariable(name: "tmpreg", scope: !2597, file: !807, line: 535, type: !20)
!2597 = distinct !DILexicalBlock(scope: !2598, file: !807, line: 535, column: 7)
!2598 = distinct !DILexicalBlock(scope: !2599, file: !807, line: 534, column: 5)
!2599 = distinct !DILexicalBlock(scope: !2593, file: !807, line: 533, column: 9)
!2600 = !DILocation(line: 0, scope: !2567)
!2601 = !DILocation(line: 353, column: 25, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !2567, file: !807, line: 353, column: 7)
!2603 = !DILocation(line: 353, column: 7, scope: !2567)
!2604 = !DILocation(line: 362, column: 28, scope: !2605)
!2605 = distinct !DILexicalBlock(scope: !2567, file: !807, line: 362, column: 7)
!2606 = !{!2607, !2443, i64 0}
!2607 = !{!"", !2443, i64 0, !2443, i64 4, !2443, i64 8, !2443, i64 12, !2443, i64 16, !2443, i64 20, !2443, i64 24, !2608, i64 28}
!2608 = !{!"", !2443, i64 0, !2443, i64 4, !2443, i64 8}
!2609 = !DILocation(line: 362, column: 44, scope: !2605)
!2610 = !DILocation(line: 362, column: 70, scope: !2605)
!2611 = !DILocation(line: 362, column: 7, scope: !2567)
!2612 = !DILocation(line: 368, column: 10, scope: !2613)
!2613 = distinct !DILexicalBlock(scope: !2614, file: !807, line: 368, column: 9)
!2614 = distinct !DILexicalBlock(scope: !2605, file: !807, line: 363, column: 3)
!2615 = !DILocation(line: 368, column: 40, scope: !2613)
!2616 = !DILocation(line: 369, column: 9, scope: !2613)
!2617 = !DILocation(line: 369, column: 14, scope: !2613)
!2618 = !DILocation(line: 369, column: 44, scope: !2613)
!2619 = !DILocation(line: 369, column: 79, scope: !2613)
!2620 = !DILocation(line: 369, column: 83, scope: !2613)
!2621 = !DILocation(line: 369, column: 113, scope: !2613)
!2622 = !DILocation(line: 368, column: 9, scope: !2614)
!2623 = !DILocation(line: 371, column: 12, scope: !2624)
!2624 = distinct !DILexicalBlock(scope: !2625, file: !807, line: 371, column: 11)
!2625 = distinct !DILexicalBlock(scope: !2613, file: !807, line: 370, column: 5)
!2626 = !DILocation(line: 371, column: 48, scope: !2624)
!2627 = !DILocation(line: 371, column: 58, scope: !2624)
!2628 = !DILocation(line: 371, column: 81, scope: !2624)
!2629 = !{!2607, !2443, i64 4}
!2630 = !DILocation(line: 371, column: 90, scope: !2624)
!2631 = !DILocation(line: 371, column: 11, scope: !2625)
!2632 = !DILocation(line: 379, column: 7, scope: !2633)
!2633 = distinct !DILexicalBlock(scope: !2634, file: !807, line: 379, column: 7)
!2634 = distinct !DILexicalBlock(scope: !2635, file: !807, line: 379, column: 7)
!2635 = distinct !DILexicalBlock(scope: !2613, file: !807, line: 377, column: 5)
!2636 = !DILocation(line: 379, column: 7, scope: !2634)
!2637 = !DILocation(line: 379, column: 7, scope: !2638)
!2638 = distinct !DILexicalBlock(scope: !2633, file: !807, line: 379, column: 7)
!2639 = !DILocation(line: 379, column: 7, scope: !2640)
!2640 = distinct !DILexicalBlock(scope: !2641, file: !807, line: 379, column: 7)
!2641 = distinct !DILexicalBlock(scope: !2633, file: !807, line: 379, column: 7)
!2642 = !DILocation(line: 379, column: 7, scope: !2643)
!2643 = distinct !DILexicalBlock(scope: !2644, file: !807, line: 379, column: 7)
!2644 = distinct !DILexicalBlock(scope: !2641, file: !807, line: 379, column: 7)
!2645 = !DILocation(line: 379, column: 7, scope: !2646)
!2646 = distinct !DILexicalBlock(scope: !2644, file: !807, line: 379, column: 7)
!2647 = !DILocation(line: 0, scope: !2633)
!2648 = !DILocation(line: 383, column: 39, scope: !2649)
!2649 = distinct !DILexicalBlock(scope: !2635, file: !807, line: 383, column: 11)
!2650 = !DILocation(line: 0, scope: !2649)
!2651 = !DILocation(line: 383, column: 11, scope: !2635)
!2652 = !DILocation(line: 389, column: 16, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2649, file: !807, line: 384, column: 7)
!2654 = !DILocation(line: 389, column: 52, scope: !2653)
!2655 = !DILocation(line: 389, column: 9, scope: !2653)
!2656 = !DILocation(line: 391, column: 16, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !2658, file: !807, line: 391, column: 15)
!2658 = distinct !DILexicalBlock(scope: !2653, file: !807, line: 390, column: 9)
!2659 = !DILocation(line: 391, column: 30, scope: !2657)
!2660 = !DILocation(line: 391, column: 43, scope: !2657)
!2661 = !DILocation(line: 391, column: 15, scope: !2658)
!2662 = distinct !{!2662, !2655, !2663, !1358, !1359}
!2663 = !DILocation(line: 395, column: 9, scope: !2653)
!2664 = !DILocation(line: 403, column: 16, scope: !2665)
!2665 = distinct !DILexicalBlock(scope: !2649, file: !807, line: 398, column: 7)
!2666 = !DILocation(line: 403, column: 52, scope: !2665)
!2667 = !DILocation(line: 403, column: 9, scope: !2665)
!2668 = !DILocation(line: 405, column: 16, scope: !2669)
!2669 = distinct !DILexicalBlock(scope: !2670, file: !807, line: 405, column: 15)
!2670 = distinct !DILexicalBlock(scope: !2665, file: !807, line: 404, column: 9)
!2671 = !DILocation(line: 405, column: 30, scope: !2669)
!2672 = !DILocation(line: 405, column: 43, scope: !2669)
!2673 = !DILocation(line: 405, column: 15, scope: !2670)
!2674 = distinct !{!2674, !2667, !2675, !1358, !1359}
!2675 = !DILocation(line: 409, column: 9, scope: !2665)
!2676 = !DILocation(line: 414, column: 28, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2567, file: !807, line: 414, column: 7)
!2678 = !DILocation(line: 414, column: 44, scope: !2677)
!2679 = !DILocation(line: 414, column: 70, scope: !2677)
!2680 = !DILocation(line: 414, column: 7, scope: !2567)
!2681 = !DILocation(line: 421, column: 10, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !2683, file: !807, line: 421, column: 9)
!2683 = distinct !DILexicalBlock(scope: !2677, file: !807, line: 415, column: 3)
!2684 = !DILocation(line: 421, column: 40, scope: !2682)
!2685 = !DILocation(line: 422, column: 9, scope: !2682)
!2686 = !DILocation(line: 422, column: 14, scope: !2682)
!2687 = !DILocation(line: 422, column: 44, scope: !2682)
!2688 = !DILocation(line: 422, column: 79, scope: !2682)
!2689 = !DILocation(line: 422, column: 83, scope: !2682)
!2690 = !DILocation(line: 422, column: 113, scope: !2682)
!2691 = !DILocation(line: 421, column: 9, scope: !2683)
!2692 = !DILocation(line: 425, column: 12, scope: !2693)
!2693 = distinct !DILexicalBlock(scope: !2694, file: !807, line: 425, column: 11)
!2694 = distinct !DILexicalBlock(scope: !2682, file: !807, line: 423, column: 5)
!2695 = !DILocation(line: 425, column: 48, scope: !2693)
!2696 = !DILocation(line: 425, column: 58, scope: !2693)
!2697 = !DILocation(line: 425, column: 81, scope: !2693)
!2698 = !{!2607, !2443, i64 16}
!2699 = !DILocation(line: 425, column: 90, scope: !2693)
!2700 = !DILocation(line: 425, column: 11, scope: !2694)
!2701 = !DILocation(line: 439, column: 30, scope: !2702)
!2702 = distinct !DILexicalBlock(scope: !2703, file: !807, line: 439, column: 11)
!2703 = distinct !DILexicalBlock(scope: !2682, file: !807, line: 437, column: 5)
!2704 = !DILocation(line: 439, column: 39, scope: !2702)
!2705 = !DILocation(line: 439, column: 11, scope: !2703)
!2706 = !DILocation(line: 442, column: 9, scope: !2707)
!2707 = distinct !DILexicalBlock(scope: !2702, file: !807, line: 440, column: 7)
!2708 = !DILocation(line: 445, column: 21, scope: !2707)
!2709 = !DILocation(line: 448, column: 9, scope: !2707)
!2710 = !DILocation(line: 448, column: 16, scope: !2707)
!2711 = !DILocation(line: 448, column: 52, scope: !2707)
!2712 = !DILocation(line: 450, column: 16, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2714, file: !807, line: 450, column: 15)
!2714 = distinct !DILexicalBlock(scope: !2707, file: !807, line: 449, column: 9)
!2715 = !DILocation(line: 450, column: 30, scope: !2713)
!2716 = !DILocation(line: 450, column: 43, scope: !2713)
!2717 = !DILocation(line: 450, column: 15, scope: !2714)
!2718 = distinct !{!2718, !2709, !2719, !1358, !1359}
!2719 = !DILocation(line: 454, column: 9, scope: !2707)
!2720 = !DILocation(line: 462, column: 9, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2702, file: !807, line: 460, column: 7)
!2722 = !DILocation(line: 465, column: 21, scope: !2721)
!2723 = !DILocation(line: 468, column: 9, scope: !2721)
!2724 = !DILocation(line: 468, column: 16, scope: !2721)
!2725 = !DILocation(line: 468, column: 52, scope: !2721)
!2726 = !DILocation(line: 470, column: 16, scope: !2727)
!2727 = distinct !DILexicalBlock(scope: !2728, file: !807, line: 470, column: 15)
!2728 = distinct !DILexicalBlock(scope: !2721, file: !807, line: 469, column: 9)
!2729 = !DILocation(line: 470, column: 30, scope: !2727)
!2730 = !DILocation(line: 470, column: 43, scope: !2727)
!2731 = !DILocation(line: 470, column: 15, scope: !2728)
!2732 = distinct !{!2732, !2723, !2733, !1358, !1359}
!2733 = !DILocation(line: 474, column: 9, scope: !2721)
!2734 = !DILocation(line: 0, scope: !2682)
!2735 = !{!2607, !2443, i64 20}
!2736 = !DILocation(line: 479, column: 28, scope: !2737)
!2737 = distinct !DILexicalBlock(scope: !2567, file: !807, line: 479, column: 7)
!2738 = !DILocation(line: 479, column: 44, scope: !2737)
!2739 = !DILocation(line: 479, column: 70, scope: !2737)
!2740 = !DILocation(line: 479, column: 7, scope: !2567)
!2741 = !DILocation(line: 485, column: 28, scope: !2742)
!2742 = distinct !DILexicalBlock(scope: !2743, file: !807, line: 485, column: 9)
!2743 = distinct !DILexicalBlock(scope: !2737, file: !807, line: 480, column: 3)
!2744 = !{!2607, !2443, i64 24}
!2745 = !DILocation(line: 485, column: 37, scope: !2742)
!2746 = !DILocation(line: 485, column: 9, scope: !2743)
!2747 = !DILocation(line: 488, column: 7, scope: !2748)
!2748 = distinct !DILexicalBlock(scope: !2742, file: !807, line: 486, column: 5)
!2749 = !DILocation(line: 491, column: 19, scope: !2748)
!2750 = !DILocation(line: 494, column: 7, scope: !2748)
!2751 = !DILocation(line: 494, column: 14, scope: !2748)
!2752 = !DILocation(line: 494, column: 50, scope: !2748)
!2753 = !DILocation(line: 496, column: 14, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2755, file: !807, line: 496, column: 13)
!2755 = distinct !DILexicalBlock(scope: !2748, file: !807, line: 495, column: 7)
!2756 = !DILocation(line: 496, column: 28, scope: !2754)
!2757 = !DILocation(line: 496, column: 41, scope: !2754)
!2758 = !DILocation(line: 496, column: 13, scope: !2755)
!2759 = distinct !{!2759, !2750, !2760, !1358, !1359}
!2760 = !DILocation(line: 500, column: 7, scope: !2748)
!2761 = !DILocation(line: 503, column: 7, scope: !2748)
!2762 = !DILocation(line: 504, column: 5, scope: !2748)
!2763 = !DILocation(line: 508, column: 7, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2742, file: !807, line: 506, column: 5)
!2765 = !DILocation(line: 511, column: 19, scope: !2764)
!2766 = !DILocation(line: 514, column: 7, scope: !2764)
!2767 = !DILocation(line: 514, column: 14, scope: !2764)
!2768 = !DILocation(line: 514, column: 50, scope: !2764)
!2769 = !DILocation(line: 516, column: 14, scope: !2770)
!2770 = distinct !DILexicalBlock(scope: !2771, file: !807, line: 516, column: 13)
!2771 = distinct !DILexicalBlock(scope: !2764, file: !807, line: 515, column: 7)
!2772 = !DILocation(line: 516, column: 28, scope: !2770)
!2773 = !DILocation(line: 516, column: 41, scope: !2770)
!2774 = !DILocation(line: 516, column: 13, scope: !2771)
!2775 = distinct !{!2775, !2766, !2776, !1358, !1359}
!2776 = !DILocation(line: 520, column: 7, scope: !2764)
!2777 = !DILocation(line: 524, column: 28, scope: !2594)
!2778 = !DILocation(line: 524, column: 44, scope: !2594)
!2779 = !DILocation(line: 524, column: 70, scope: !2594)
!2780 = !DILocation(line: 524, column: 7, scope: !2567)
!2781 = !DILocation(line: 0, scope: !2593)
!2782 = !DILocation(line: 533, column: 9, scope: !2599)
!2783 = !{!2442, !2443, i64 28}
!2784 = !DILocation(line: 533, column: 9, scope: !2593)
!2785 = !DILocation(line: 535, column: 7, scope: !2597)
!2786 = !DILocation(line: 535, column: 7, scope: !2598)
!2787 = !DILocation(line: 537, column: 5, scope: !2598)
!2788 = !DILocation(line: 539, column: 9, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2593, file: !807, line: 539, column: 9)
!2790 = !{!2791, !2443, i64 0}
!2791 = !{!"", !2443, i64 0, !2443, i64 4}
!2792 = !DILocation(line: 539, column: 9, scope: !2593)
!2793 = !DILocation(line: 542, column: 7, scope: !2794)
!2794 = distinct !DILexicalBlock(scope: !2789, file: !807, line: 540, column: 5)
!2795 = !DILocation(line: 545, column: 19, scope: !2794)
!2796 = !DILocation(line: 547, column: 7, scope: !2794)
!2797 = !DILocation(line: 547, column: 14, scope: !2794)
!2798 = !DILocation(line: 549, column: 14, scope: !2799)
!2799 = distinct !DILexicalBlock(scope: !2800, file: !807, line: 549, column: 13)
!2800 = distinct !DILexicalBlock(scope: !2794, file: !807, line: 548, column: 7)
!2801 = !DILocation(line: 549, column: 28, scope: !2799)
!2802 = !DILocation(line: 549, column: 41, scope: !2799)
!2803 = !DILocation(line: 549, column: 13, scope: !2800)
!2804 = distinct !{!2804, !2796, !2805, !1358, !1359}
!2805 = !DILocation(line: 553, column: 7, scope: !2794)
!2806 = !DILocation(line: 557, column: 5, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2808, file: !807, line: 557, column: 5)
!2808 = distinct !DILexicalBlock(scope: !2593, file: !807, line: 557, column: 5)
!2809 = !{!2607, !2443, i64 12}
!2810 = !DILocation(line: 557, column: 5, scope: !2808)
!2811 = !DILocation(line: 557, column: 5, scope: !2812)
!2812 = distinct !DILexicalBlock(scope: !2807, file: !807, line: 557, column: 5)
!2813 = !{!2442, !2443, i64 32}
!2814 = !DILocation(line: 557, column: 5, scope: !2815)
!2815 = distinct !DILexicalBlock(scope: !2816, file: !807, line: 557, column: 5)
!2816 = distinct !DILexicalBlock(scope: !2807, file: !807, line: 557, column: 5)
!2817 = !DILocation(line: 557, column: 5, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2819, file: !807, line: 557, column: 5)
!2819 = distinct !DILexicalBlock(scope: !2816, file: !807, line: 557, column: 5)
!2820 = !DILocation(line: 557, column: 5, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2819, file: !807, line: 557, column: 5)
!2822 = !DILocation(line: 0, scope: !2807)
!2823 = !DILocation(line: 559, column: 37, scope: !2824)
!2824 = distinct !DILexicalBlock(scope: !2593, file: !807, line: 559, column: 9)
!2825 = !DILocation(line: 0, scope: !2824)
!2826 = !DILocation(line: 559, column: 9, scope: !2593)
!2827 = !DILocation(line: 565, column: 14, scope: !2828)
!2828 = distinct !DILexicalBlock(scope: !2824, file: !807, line: 560, column: 5)
!2829 = !DILocation(line: 565, column: 50, scope: !2828)
!2830 = !DILocation(line: 565, column: 7, scope: !2828)
!2831 = !DILocation(line: 567, column: 14, scope: !2832)
!2832 = distinct !DILexicalBlock(scope: !2833, file: !807, line: 567, column: 13)
!2833 = distinct !DILexicalBlock(scope: !2828, file: !807, line: 566, column: 7)
!2834 = !DILocation(line: 567, column: 28, scope: !2832)
!2835 = !DILocation(line: 567, column: 41, scope: !2832)
!2836 = !DILocation(line: 567, column: 13, scope: !2833)
!2837 = distinct !{!2837, !2830, !2838, !1358, !1359}
!2838 = !DILocation(line: 571, column: 7, scope: !2828)
!2839 = !DILocation(line: 579, column: 14, scope: !2840)
!2840 = distinct !DILexicalBlock(scope: !2824, file: !807, line: 574, column: 5)
!2841 = !DILocation(line: 579, column: 50, scope: !2840)
!2842 = !DILocation(line: 579, column: 7, scope: !2840)
!2843 = !DILocation(line: 581, column: 14, scope: !2844)
!2844 = distinct !DILexicalBlock(scope: !2845, file: !807, line: 581, column: 13)
!2845 = distinct !DILexicalBlock(scope: !2840, file: !807, line: 580, column: 7)
!2846 = !DILocation(line: 581, column: 28, scope: !2844)
!2847 = !DILocation(line: 581, column: 41, scope: !2844)
!2848 = !DILocation(line: 581, column: 13, scope: !2845)
!2849 = distinct !{!2849, !2842, !2850, !1358, !1359}
!2850 = !DILocation(line: 585, column: 7, scope: !2840)
!2851 = !DILocation(line: 589, column: 9, scope: !2593)
!2852 = !DILocation(line: 591, column: 7, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2854, file: !807, line: 590, column: 5)
!2854 = distinct !DILexicalBlock(scope: !2593, file: !807, line: 589, column: 9)
!2855 = !DILocation(line: 592, column: 5, scope: !2853)
!2856 = !DILocation(line: 688, column: 31, scope: !2857)
!2857 = distinct !DILexicalBlock(scope: !2567, file: !807, line: 688, column: 7)
!2858 = !{!2607, !2443, i64 28}
!2859 = !DILocation(line: 688, column: 41, scope: !2857)
!2860 = !DILocation(line: 688, column: 7, scope: !2567)
!2861 = !DILocation(line: 691, column: 9, scope: !2862)
!2862 = distinct !DILexicalBlock(scope: !2863, file: !807, line: 691, column: 9)
!2863 = distinct !DILexicalBlock(scope: !2857, file: !807, line: 689, column: 3)
!2864 = !DILocation(line: 691, column: 39, scope: !2862)
!2865 = !DILocation(line: 691, column: 9, scope: !2863)
!2866 = !DILocation(line: 693, column: 45, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2868, file: !807, line: 693, column: 11)
!2868 = distinct !DILexicalBlock(scope: !2862, file: !807, line: 692, column: 5)
!2869 = !DILocation(line: 0, scope: !2867)
!2870 = !DILocation(line: 693, column: 11, scope: !2868)
!2871 = !DILocation(line: 706, column: 16, scope: !2872)
!2872 = distinct !DILexicalBlock(scope: !2867, file: !807, line: 694, column: 7)
!2873 = !DILocation(line: 706, column: 53, scope: !2872)
!2874 = !DILocation(line: 706, column: 9, scope: !2872)
!2875 = !DILocation(line: 708, column: 16, scope: !2876)
!2876 = distinct !DILexicalBlock(scope: !2877, file: !807, line: 708, column: 15)
!2877 = distinct !DILexicalBlock(scope: !2872, file: !807, line: 707, column: 9)
!2878 = !DILocation(line: 708, column: 30, scope: !2876)
!2879 = !DILocation(line: 708, column: 43, scope: !2876)
!2880 = !DILocation(line: 708, column: 15, scope: !2877)
!2881 = distinct !{!2881, !2874, !2882, !1358, !1359}
!2882 = !DILocation(line: 712, column: 9, scope: !2872)
!2883 = !DILocation(line: 716, column: 36, scope: !2884)
!2884 = distinct !DILexicalBlock(scope: !2872, file: !807, line: 716, column: 13)
!2885 = !{!2607, !2443, i64 32}
!2886 = !DILocation(line: 716, column: 46, scope: !2884)
!2887 = !DILocation(line: 716, column: 13, scope: !2872)
!2888 = !DILocation(line: 728, column: 11, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2884, file: !807, line: 717, column: 9)
!2890 = !{!2607, !2443, i64 8}
!2891 = !DILocation(line: 729, column: 9, scope: !2889)
!2892 = !DILocation(line: 732, column: 9, scope: !2872)
!2893 = !{!2607, !2443, i64 36}
!2894 = !DILocation(line: 735, column: 9, scope: !2872)
!2895 = !DILocation(line: 738, column: 21, scope: !2872)
!2896 = !DILocation(line: 741, column: 9, scope: !2872)
!2897 = !DILocation(line: 741, column: 16, scope: !2872)
!2898 = !DILocation(line: 741, column: 53, scope: !2872)
!2899 = !DILocation(line: 743, column: 16, scope: !2900)
!2900 = distinct !DILexicalBlock(scope: !2901, file: !807, line: 743, column: 15)
!2901 = distinct !DILexicalBlock(scope: !2872, file: !807, line: 742, column: 9)
!2902 = !DILocation(line: 743, column: 30, scope: !2900)
!2903 = !DILocation(line: 743, column: 43, scope: !2900)
!2904 = !DILocation(line: 743, column: 15, scope: !2901)
!2905 = distinct !{!2905, !2896, !2906, !1358, !1359}
!2906 = !DILocation(line: 747, column: 9, scope: !2872)
!2907 = !DILocation(line: 758, column: 16, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2867, file: !807, line: 750, column: 7)
!2909 = !DILocation(line: 758, column: 53, scope: !2908)
!2910 = !DILocation(line: 758, column: 9, scope: !2908)
!2911 = !DILocation(line: 760, column: 16, scope: !2912)
!2912 = distinct !DILexicalBlock(scope: !2913, file: !807, line: 760, column: 15)
!2913 = distinct !DILexicalBlock(scope: !2908, file: !807, line: 759, column: 9)
!2914 = !DILocation(line: 760, column: 30, scope: !2912)
!2915 = !DILocation(line: 760, column: 43, scope: !2912)
!2916 = !DILocation(line: 760, column: 15, scope: !2913)
!2917 = distinct !{!2917, !2910, !2918, !1358, !1359}
!2918 = !DILocation(line: 764, column: 9, scope: !2908)
!2919 = !DILocation(line: 770, column: 45, scope: !2920)
!2920 = distinct !DILexicalBlock(scope: !2921, file: !807, line: 770, column: 11)
!2921 = distinct !DILexicalBlock(scope: !2862, file: !807, line: 768, column: 5)
!2922 = !DILocation(line: 770, column: 11, scope: !2921)
!2923 = !DILocation(line: 777, column: 27, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2920, file: !807, line: 775, column: 7)
!2925 = !DILocation(line: 778, column: 14, scope: !2926)
!2926 = distinct !DILexicalBlock(scope: !2924, file: !807, line: 778, column: 13)
!2927 = !DILocation(line: 778, column: 78, scope: !2926)
!2928 = !DILocation(line: 778, column: 52, scope: !2926)
!2929 = !DILocation(line: 778, column: 89, scope: !2926)
!2930 = !DILocation(line: 779, column: 14, scope: !2926)
!2931 = !DILocation(line: 779, column: 79, scope: !2926)
!2932 = !DILocation(line: 779, column: 53, scope: !2926)
!2933 = !DILocation(line: 778, column: 13, scope: !2924)
!2934 = !DILocation(line: 787, column: 3, scope: !2567)
!2935 = !DILocation(line: 788, column: 1, scope: !2567)
!2936 = distinct !DISubprogram(name: "RCC_Delay", scope: !807, file: !807, line: 1365, type: !2937, scopeLine: 1366, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !2939)
!2937 = !DISubroutineType(types: !2938)
!2938 = !{null, !21}
!2939 = !{!2940, !2941}
!2940 = !DILocalVariable(name: "mdelay", arg: 1, scope: !2936, file: !807, line: 1365, type: !21)
!2941 = !DILocalVariable(name: "Delay", scope: !2936, file: !807, line: 1367, type: !20)
!2942 = !DILocation(line: 0, scope: !2936)
!2943 = !DILocation(line: 1367, column: 3, scope: !2936)
!2944 = !DILocation(line: 1367, column: 17, scope: !2936)
!2945 = !DILocation(line: 1367, column: 35, scope: !2936)
!2946 = !DILocation(line: 1367, column: 56, scope: !2936)
!2947 = !DILocation(line: 1368, column: 3, scope: !2936)
!2948 = !DILocation(line: 1370, column: 5, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !2936, file: !807, line: 1369, column: 3)
!2950 = !{i64 2149488927}
!2951 = !DILocation(line: 1372, column: 16, scope: !2936)
!2952 = !DILocation(line: 1371, column: 3, scope: !2949)
!2953 = distinct !{!2953, !2947, !2954, !1358, !1359}
!2954 = !DILocation(line: 1372, column: 18, scope: !2936)
!2955 = !DILocation(line: 1373, column: 1, scope: !2936)
!2956 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !807, file: !807, line: 813, type: !2957, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !2968)
!2957 = !DISubroutineType(types: !2958)
!2958 = !{!2497, !2959, !21}
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 32)
!2960 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !1406, line: 80, baseType: !2961)
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1406, line: 64, size: 160, elements: !2962)
!2962 = !{!2963, !2964, !2965, !2966, !2967}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !2961, file: !1406, line: 66, baseType: !21, size: 32)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !2961, file: !1406, line: 69, baseType: !21, size: 32, offset: 32)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !2961, file: !1406, line: 72, baseType: !21, size: 32, offset: 64)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !2961, file: !1406, line: 75, baseType: !21, size: 32, offset: 96)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !2961, file: !1406, line: 78, baseType: !21, size: 32, offset: 128)
!2968 = !{!2969, !2970, !2971}
!2969 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !2956, file: !807, line: 813, type: !2959)
!2970 = !DILocalVariable(name: "FLatency", arg: 2, scope: !2956, file: !807, line: 813, type: !21)
!2971 = !DILocalVariable(name: "tickstart", scope: !2956, file: !807, line: 815, type: !21)
!2972 = !DILocation(line: 0, scope: !2956)
!2973 = !DILocation(line: 818, column: 25, scope: !2974)
!2974 = distinct !DILexicalBlock(scope: !2956, file: !807, line: 818, column: 7)
!2975 = !DILocation(line: 818, column: 7, scope: !2956)
!2976 = !DILocation(line: 833, column: 18, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2956, file: !807, line: 833, column: 7)
!2978 = !{!2979, !2443, i64 0}
!2979 = !{!"", !2443, i64 0, !2443, i64 4, !2443, i64 8, !2443, i64 12, !2443, i64 16, !2443, i64 20, !2443, i64 24, !2443, i64 28, !2443, i64 32}
!2980 = !DILocation(line: 833, column: 16, scope: !2977)
!2981 = !DILocation(line: 833, column: 7, scope: !2956)
!2982 = !DILocation(line: 836, column: 5, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2977, file: !807, line: 834, column: 3)
!2984 = !DILocation(line: 840, column: 9, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2983, file: !807, line: 840, column: 9)
!2986 = !DILocation(line: 840, column: 35, scope: !2985)
!2987 = !DILocation(line: 840, column: 9, scope: !2983)
!2988 = !DILocation(line: 848, column: 26, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2956, file: !807, line: 848, column: 5)
!2990 = !{!2991, !2443, i64 0}
!2991 = !{!"", !2443, i64 0, !2443, i64 4, !2443, i64 8, !2443, i64 12, !2443, i64 16}
!2992 = !DILocation(line: 848, column: 37, scope: !2989)
!2993 = !DILocation(line: 848, column: 59, scope: !2989)
!2994 = !DILocation(line: 848, column: 5, scope: !2956)
!2995 = !DILocation(line: 852, column: 41, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2997, file: !807, line: 852, column: 9)
!2997 = distinct !DILexicalBlock(scope: !2989, file: !807, line: 849, column: 3)
!2998 = !DILocation(line: 852, column: 64, scope: !2996)
!2999 = !DILocation(line: 852, column: 9, scope: !2997)
!3000 = !DILocation(line: 854, column: 7, scope: !3001)
!3001 = distinct !DILexicalBlock(scope: !2996, file: !807, line: 853, column: 5)
!3002 = !DILocation(line: 855, column: 5, scope: !3001)
!3003 = !DILocation(line: 857, column: 41, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !2997, file: !807, line: 857, column: 9)
!3005 = !DILocation(line: 857, column: 64, scope: !3004)
!3006 = !DILocation(line: 857, column: 9, scope: !2997)
!3007 = !DILocation(line: 859, column: 7, scope: !3008)
!3008 = distinct !DILexicalBlock(scope: !3004, file: !807, line: 858, column: 5)
!3009 = !DILocation(line: 860, column: 5, scope: !3008)
!3010 = !DILocation(line: 864, column: 5, scope: !2997)
!3011 = !{!2991, !2443, i64 8}
!3012 = !DILocation(line: 865, column: 3, scope: !2997)
!3013 = !DILocation(line: 868, column: 39, scope: !3014)
!3014 = distinct !DILexicalBlock(scope: !2956, file: !807, line: 868, column: 7)
!3015 = !DILocation(line: 868, column: 63, scope: !3014)
!3016 = !DILocation(line: 868, column: 7, scope: !2956)
!3017 = !DILocation(line: 873, column: 28, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !3019, file: !807, line: 873, column: 9)
!3019 = distinct !DILexicalBlock(scope: !3014, file: !807, line: 869, column: 3)
!3020 = !{!2991, !2443, i64 4}
!3021 = !DILocation(line: 873, column: 9, scope: !3019)
!3022 = !DILocation(line: 876, column: 11, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !3024, file: !807, line: 876, column: 11)
!3024 = distinct !DILexicalBlock(scope: !3018, file: !807, line: 874, column: 5)
!3025 = !DILocation(line: 876, column: 47, scope: !3023)
!3026 = !DILocation(line: 876, column: 11, scope: !3024)
!3027 = !DILocation(line: 885, column: 11, scope: !3028)
!3028 = distinct !DILexicalBlock(scope: !3029, file: !807, line: 885, column: 11)
!3029 = distinct !DILexicalBlock(scope: !3030, file: !807, line: 883, column: 5)
!3030 = distinct !DILexicalBlock(scope: !3018, file: !807, line: 882, column: 14)
!3031 = !DILocation(line: 885, column: 47, scope: !3028)
!3032 = !DILocation(line: 885, column: 11, scope: !3029)
!3033 = !DILocation(line: 894, column: 11, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !3035, file: !807, line: 894, column: 11)
!3035 = distinct !DILexicalBlock(scope: !3030, file: !807, line: 892, column: 5)
!3036 = !DILocation(line: 894, column: 47, scope: !3034)
!3037 = !DILocation(line: 894, column: 11, scope: !3035)
!3038 = !DILocation(line: 899, column: 5, scope: !3019)
!3039 = !DILocation(line: 902, column: 17, scope: !3019)
!3040 = !DILocation(line: 904, column: 5, scope: !3019)
!3041 = !DILocation(line: 904, column: 12, scope: !3019)
!3042 = !DILocation(line: 904, column: 65, scope: !3019)
!3043 = !DILocation(line: 904, column: 78, scope: !3019)
!3044 = !DILocation(line: 904, column: 42, scope: !3019)
!3045 = !DILocation(line: 906, column: 12, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !3047, file: !807, line: 906, column: 11)
!3047 = distinct !DILexicalBlock(scope: !3019, file: !807, line: 905, column: 5)
!3048 = !DILocation(line: 906, column: 26, scope: !3046)
!3049 = !DILocation(line: 906, column: 39, scope: !3046)
!3050 = !DILocation(line: 906, column: 11, scope: !3047)
!3051 = distinct !{!3051, !3040, !3052, !1358, !1359}
!3052 = !DILocation(line: 910, column: 5, scope: !3019)
!3053 = !DILocation(line: 915, column: 18, scope: !3054)
!3054 = distinct !DILexicalBlock(scope: !2956, file: !807, line: 915, column: 7)
!3055 = !DILocation(line: 915, column: 16, scope: !3054)
!3056 = !DILocation(line: 915, column: 7, scope: !2956)
!3057 = !DILocation(line: 918, column: 5, scope: !3058)
!3058 = distinct !DILexicalBlock(scope: !3054, file: !807, line: 916, column: 3)
!3059 = !DILocation(line: 922, column: 9, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3058, file: !807, line: 922, column: 9)
!3061 = !DILocation(line: 922, column: 35, scope: !3060)
!3062 = !DILocation(line: 922, column: 9, scope: !3058)
!3063 = !DILocation(line: 930, column: 26, scope: !3064)
!3064 = distinct !DILexicalBlock(scope: !2956, file: !807, line: 930, column: 5)
!3065 = !DILocation(line: 930, column: 37, scope: !3064)
!3066 = !DILocation(line: 930, column: 60, scope: !3064)
!3067 = !DILocation(line: 930, column: 5, scope: !2956)
!3068 = !DILocation(line: 933, column: 5, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !3064, file: !807, line: 931, column: 3)
!3070 = !{!2991, !2443, i64 12}
!3071 = !DILocation(line: 934, column: 3, scope: !3069)
!3072 = !DILocation(line: 937, column: 39, scope: !3073)
!3073 = distinct !DILexicalBlock(scope: !2956, file: !807, line: 937, column: 7)
!3074 = !DILocation(line: 937, column: 62, scope: !3073)
!3075 = !DILocation(line: 937, column: 7, scope: !2956)
!3076 = !DILocation(line: 940, column: 5, scope: !3077)
!3077 = distinct !DILexicalBlock(scope: !3073, file: !807, line: 938, column: 3)
!3078 = !{!2991, !2443, i64 16}
!3079 = !DILocation(line: 941, column: 3, scope: !3077)
!3080 = !DILocation(line: 944, column: 21, scope: !2956)
!3081 = !DILocation(line: 944, column: 70, scope: !2956)
!3082 = !DILocation(line: 944, column: 92, scope: !2956)
!3083 = !DILocation(line: 944, column: 50, scope: !2956)
!3084 = !DILocation(line: 944, column: 47, scope: !2956)
!3085 = !DILocation(line: 944, column: 19, scope: !2956)
!3086 = !DILocation(line: 947, column: 16, scope: !2956)
!3087 = !DILocation(line: 947, column: 3, scope: !2956)
!3088 = !DILocation(line: 949, column: 3, scope: !2956)
!3089 = !DILocation(line: 950, column: 1, scope: !2956)
!3090 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !807, file: !807, line: 1082, type: !3091, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !3093)
!3091 = !DISubroutineType(types: !3092)
!3092 = !{!21}
!3093 = !{!3094, !3095, !3097, !3098, !3099, !3100, !3101}
!3094 = !DILocalVariable(name: "aPLLMULFactorTable", scope: !3090, file: !807, line: 1088, type: !332)
!3095 = !DILocalVariable(name: "aPredivFactorTable", scope: !3090, file: !807, line: 1092, type: !3096)
!3096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !38, size: 16, elements: !66)
!3097 = !DILocalVariable(name: "tmpreg", scope: !3090, file: !807, line: 1096, type: !21)
!3098 = !DILocalVariable(name: "prediv", scope: !3090, file: !807, line: 1096, type: !21)
!3099 = !DILocalVariable(name: "pllclk", scope: !3090, file: !807, line: 1096, type: !21)
!3100 = !DILocalVariable(name: "pllmul", scope: !3090, file: !807, line: 1096, type: !21)
!3101 = !DILocalVariable(name: "sysclockfreq", scope: !3090, file: !807, line: 1097, type: !21)
!3102 = !DILocation(line: 1088, column: 17, scope: !3090)
!3103 = !DILocation(line: 1092, column: 17, scope: !3090)
!3104 = !DILocation(line: 0, scope: !3090)
!3105 = !DILocation(line: 1102, column: 17, scope: !3090)
!3106 = !DILocation(line: 1105, column: 18, scope: !3090)
!3107 = !DILocation(line: 1105, column: 3, scope: !3090)
!3108 = !DILocation(line: 1114, column: 73, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !3110, file: !807, line: 1113, column: 5)
!3110 = distinct !DILexicalBlock(scope: !3090, file: !807, line: 1106, column: 3)
!3111 = !DILocation(line: 1114, column: 16, scope: !3109)
!3112 = !DILocation(line: 1115, column: 19, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3109, file: !807, line: 1115, column: 11)
!3114 = !DILocation(line: 1115, column: 38, scope: !3113)
!3115 = !DILocation(line: 1115, column: 11, scope: !3109)
!3116 = !DILocation(line: 1120, column: 53, scope: !3117)
!3117 = distinct !DILexicalBlock(scope: !3113, file: !807, line: 1116, column: 7)
!3118 = !DILocation(line: 1120, column: 79, scope: !3117)
!3119 = !DILocation(line: 1120, column: 18, scope: !3117)
!3120 = !DILocation(line: 1146, column: 41, scope: !3117)
!3121 = !DILocation(line: 1146, column: 51, scope: !3117)
!3122 = !DILocation(line: 1148, column: 7, scope: !3117)
!3123 = !DILocation(line: 1152, column: 46, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3113, file: !807, line: 1150, column: 7)
!3125 = !DILocation(line: 0, scope: !3110)
!3126 = !DILocation(line: 1164, column: 3, scope: !3090)
!3127 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !807, file: !807, line: 1002, type: !3128, scopeLine: 1003, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !3130)
!3128 = !DISubroutineType(types: !3129)
!3129 = !{null, !21, !21, !21}
!3130 = !{!3131, !3132, !3133, !3134, !3142}
!3131 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !3127, file: !807, line: 1002, type: !21)
!3132 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !3127, file: !807, line: 1002, type: !21)
!3133 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !3127, file: !807, line: 1002, type: !21)
!3134 = !DILocalVariable(name: "gpio", scope: !3127, file: !807, line: 1004, type: !3135)
!3135 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !916, line: 60, baseType: !3136)
!3136 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !916, line: 47, size: 128, elements: !3137)
!3137 = !{!3138, !3139, !3140, !3141}
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !3136, file: !916, line: 49, baseType: !21, size: 32)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !3136, file: !916, line: 52, baseType: !21, size: 32, offset: 32)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !3136, file: !916, line: 55, baseType: !21, size: 32, offset: 64)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !3136, file: !916, line: 58, baseType: !21, size: 32, offset: 96)
!3142 = !DILocalVariable(name: "tmpreg", scope: !3143, file: !807, line: 1022, type: !20)
!3143 = distinct !DILexicalBlock(scope: !3127, file: !807, line: 1022, column: 3)
!3144 = !DILocation(line: 0, scope: !3127)
!3145 = !DILocation(line: 1004, column: 3, scope: !3127)
!3146 = !DILocation(line: 1004, column: 20, scope: !3127)
!3147 = !DILocation(line: 1016, column: 8, scope: !3127)
!3148 = !DILocation(line: 1016, column: 18, scope: !3127)
!3149 = !{!3150, !2443, i64 4}
!3150 = !{!"", !2443, i64 0, !2443, i64 4, !2443, i64 8, !2443, i64 12}
!3151 = !DILocation(line: 1017, column: 8, scope: !3127)
!3152 = !DILocation(line: 1017, column: 18, scope: !3127)
!3153 = !{!3150, !2443, i64 12}
!3154 = !DILocation(line: 1018, column: 8, scope: !3127)
!3155 = !DILocation(line: 1018, column: 18, scope: !3127)
!3156 = !{!3150, !2443, i64 8}
!3157 = !DILocation(line: 1019, column: 8, scope: !3127)
!3158 = !DILocation(line: 1019, column: 18, scope: !3127)
!3159 = !{!3150, !2443, i64 0}
!3160 = !DILocation(line: 1022, column: 3, scope: !3143)
!3161 = !{!2442, !2443, i64 24}
!3162 = !DILocation(line: 1022, column: 3, scope: !3127)
!3163 = !DILocation(line: 1024, column: 3, scope: !3127)
!3164 = !DILocation(line: 1027, column: 3, scope: !3127)
!3165 = !DILocation(line: 1028, column: 1, scope: !3127)
!3166 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !807, file: !807, line: 1039, type: !99, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !101)
!3167 = !DILocation(line: 1041, column: 38, scope: !3166)
!3168 = !DILocation(line: 1042, column: 1, scope: !3166)
!3169 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !807, file: !807, line: 1048, type: !99, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !101)
!3170 = !DILocation(line: 1050, column: 38, scope: !3169)
!3171 = !DILocation(line: 1051, column: 1, scope: !3169)
!3172 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !807, file: !807, line: 1176, type: !3091, scopeLine: 1177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !101)
!3173 = !DILocation(line: 1178, column: 10, scope: !3172)
!3174 = !DILocation(line: 1178, column: 3, scope: !3172)
!3175 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !807, file: !807, line: 1187, type: !3091, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !101)
!3176 = !DILocation(line: 1190, column: 11, scope: !3175)
!3177 = !DILocation(line: 1190, column: 56, scope: !3175)
!3178 = !DILocation(line: 1190, column: 79, scope: !3175)
!3179 = !DILocation(line: 1190, column: 36, scope: !3175)
!3180 = !DILocation(line: 1190, column: 33, scope: !3175)
!3181 = !DILocation(line: 1190, column: 3, scope: !3175)
!3182 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !807, file: !807, line: 1199, type: !3091, scopeLine: 1200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !101)
!3183 = !DILocation(line: 1202, column: 11, scope: !3182)
!3184 = !DILocation(line: 1202, column: 56, scope: !3182)
!3185 = !DILocation(line: 1202, column: 79, scope: !3182)
!3186 = !DILocation(line: 1202, column: 36, scope: !3182)
!3187 = !DILocation(line: 1202, column: 33, scope: !3182)
!3188 = !DILocation(line: 1202, column: 3, scope: !3182)
!3189 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !807, file: !807, line: 1212, type: !3190, scopeLine: 1213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !3192)
!3190 = !DISubroutineType(types: !3191)
!3191 = !{null, !2570}
!3192 = !{!3193}
!3193 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !3189, file: !807, line: 1212, type: !2570)
!3194 = !DILocation(line: 0, scope: !3189)
!3195 = !DILocation(line: 1218, column: 22, scope: !3189)
!3196 = !DILocation(line: 1218, column: 37, scope: !3189)
!3197 = !DILocation(line: 1227, column: 13, scope: !3198)
!3198 = distinct !DILexicalBlock(scope: !3189, file: !807, line: 1227, column: 7)
!3199 = !DILocation(line: 1227, column: 16, scope: !3198)
!3200 = !DILocation(line: 1227, column: 33, scope: !3198)
!3201 = !DILocation(line: 1227, column: 7, scope: !3189)
!3202 = !DILocation(line: 1229, column: 24, scope: !3203)
!3203 = distinct !DILexicalBlock(scope: !3198, file: !807, line: 1228, column: 3)
!3204 = !DILocation(line: 1229, column: 33, scope: !3203)
!3205 = !DILocation(line: 1230, column: 3, scope: !3203)
!3206 = !DILocation(line: 1231, column: 18, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !3198, file: !807, line: 1231, column: 12)
!3208 = !DILocation(line: 1231, column: 21, scope: !3207)
!3209 = !DILocation(line: 1231, column: 37, scope: !3207)
!3210 = !DILocation(line: 0, scope: !3207)
!3211 = !DILocation(line: 1231, column: 12, scope: !3198)
!3212 = !DILocation(line: 1233, column: 33, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3207, file: !807, line: 1232, column: 3)
!3214 = !DILocation(line: 1234, column: 3, scope: !3213)
!3215 = !DILocation(line: 1237, column: 33, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3207, file: !807, line: 1236, column: 3)
!3217 = !DILocation(line: 1239, column: 39, scope: !3189)
!3218 = !DILocation(line: 1239, column: 22, scope: !3189)
!3219 = !DILocation(line: 1239, column: 37, scope: !3189)
!3220 = !DILocation(line: 1242, column: 13, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !3189, file: !807, line: 1242, column: 7)
!3222 = !DILocation(line: 1242, column: 16, scope: !3221)
!3223 = !DILocation(line: 0, scope: !3221)
!3224 = !DILocation(line: 1251, column: 61, scope: !3189)
!3225 = !DILocation(line: 1251, column: 82, scope: !3189)
!3226 = !DILocation(line: 1251, column: 22, scope: !3189)
!3227 = !DILocation(line: 1251, column: 42, scope: !3189)
!3228 = !DILocation(line: 1254, column: 13, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3189, file: !807, line: 1254, column: 7)
!3230 = !DILocation(line: 1254, column: 18, scope: !3229)
!3231 = !DILocation(line: 1254, column: 37, scope: !3229)
!3232 = !DILocation(line: 1254, column: 7, scope: !3189)
!3233 = !DILocation(line: 1256, column: 24, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3229, file: !807, line: 1255, column: 3)
!3235 = !DILocation(line: 1256, column: 33, scope: !3234)
!3236 = !DILocation(line: 1257, column: 3, scope: !3234)
!3237 = !DILocation(line: 1258, column: 18, scope: !3238)
!3238 = distinct !DILexicalBlock(scope: !3229, file: !807, line: 1258, column: 12)
!3239 = !DILocation(line: 1258, column: 23, scope: !3238)
!3240 = !DILocation(line: 1258, column: 41, scope: !3238)
!3241 = !DILocation(line: 0, scope: !3238)
!3242 = !DILocation(line: 1258, column: 12, scope: !3229)
!3243 = !DILocation(line: 1260, column: 33, scope: !3244)
!3244 = distinct !DILexicalBlock(scope: !3238, file: !807, line: 1259, column: 3)
!3245 = !DILocation(line: 1261, column: 3, scope: !3244)
!3246 = !DILocation(line: 1264, column: 33, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3238, file: !807, line: 1263, column: 3)
!3248 = !DILocation(line: 1268, column: 13, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3189, file: !807, line: 1268, column: 7)
!3250 = !DILocation(line: 1268, column: 17, scope: !3249)
!3251 = !DILocation(line: 0, scope: !3249)
!3252 = !DILocation(line: 1279, column: 13, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3189, file: !807, line: 1279, column: 7)
!3254 = !DILocation(line: 1279, column: 16, scope: !3253)
!3255 = !DILocation(line: 1279, column: 32, scope: !3253)
!3256 = !DILocation(line: 1279, column: 7, scope: !3189)
!3257 = !DILocation(line: 0, scope: !3253)
!3258 = !DILocation(line: 1287, column: 54, scope: !3189)
!3259 = !DILocation(line: 1287, column: 59, scope: !3189)
!3260 = !DILocation(line: 1287, column: 26, scope: !3189)
!3261 = !DILocation(line: 1287, column: 36, scope: !3189)
!3262 = !DILocation(line: 1288, column: 51, scope: !3189)
!3263 = !DILocation(line: 1288, column: 56, scope: !3189)
!3264 = !DILocation(line: 1288, column: 26, scope: !3189)
!3265 = !DILocation(line: 1288, column: 33, scope: !3189)
!3266 = !DILocation(line: 1302, column: 1, scope: !3189)
!3267 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !807, file: !807, line: 1312, type: !3268, scopeLine: 1313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !3270)
!3268 = !DISubroutineType(types: !3269)
!3269 = !{null, !2959, !86}
!3270 = !{!3271, !3272}
!3271 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !3267, file: !807, line: 1312, type: !2959)
!3272 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !3267, file: !807, line: 1312, type: !86)
!3273 = !DILocation(line: 0, scope: !3267)
!3274 = !DILocation(line: 1319, column: 22, scope: !3267)
!3275 = !DILocation(line: 1319, column: 32, scope: !3267)
!3276 = !DILocation(line: 1322, column: 53, scope: !3267)
!3277 = !DILocation(line: 1322, column: 58, scope: !3267)
!3278 = !DILocation(line: 1322, column: 22, scope: !3267)
!3279 = !DILocation(line: 1322, column: 35, scope: !3267)
!3280 = !DILocation(line: 1325, column: 54, scope: !3267)
!3281 = !DILocation(line: 1325, column: 59, scope: !3267)
!3282 = !DILocation(line: 1325, column: 22, scope: !3267)
!3283 = !DILocation(line: 1325, column: 36, scope: !3267)
!3284 = !DILocation(line: 1328, column: 55, scope: !3267)
!3285 = !DILocation(line: 1328, column: 60, scope: !3267)
!3286 = !DILocation(line: 1328, column: 22, scope: !3267)
!3287 = !DILocation(line: 1328, column: 37, scope: !3267)
!3288 = !DILocation(line: 1331, column: 56, scope: !3267)
!3289 = !DILocation(line: 1331, column: 79, scope: !3267)
!3290 = !DILocation(line: 1331, column: 22, scope: !3267)
!3291 = !DILocation(line: 1331, column: 37, scope: !3267)
!3292 = !DILocation(line: 1335, column: 34, scope: !3267)
!3293 = !DILocation(line: 1335, column: 38, scope: !3267)
!3294 = !DILocation(line: 1335, column: 14, scope: !3267)
!3295 = !DILocation(line: 1340, column: 1, scope: !3267)
!3296 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !807, file: !807, line: 1347, type: !99, scopeLine: 1348, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !101)
!3297 = !DILocation(line: 1350, column: 7, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3296, file: !807, line: 1350, column: 7)
!3299 = !DILocation(line: 1350, column: 7, scope: !3296)
!3300 = !DILocation(line: 1353, column: 5, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3298, file: !807, line: 1351, column: 3)
!3302 = !DILocation(line: 1356, column: 5, scope: !3301)
!3303 = !DILocation(line: 1357, column: 3, scope: !3301)
!3304 = !DILocation(line: 1358, column: 1, scope: !3296)
!3305 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !807, file: !807, line: 1379, type: !99, scopeLine: 1380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !101)
!3306 = !DILocation(line: 1384, column: 1, scope: !3305)
!3307 = distinct !DISubprogram(name: "HAL_Init", scope: !336, file: !336, line: 142, type: !2495, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !101)
!3308 = !DILocation(line: 152, column: 3, scope: !3307)
!3309 = !DILocation(line: 157, column: 3, scope: !3307)
!3310 = !DILocation(line: 160, column: 3, scope: !3307)
!3311 = !DILocation(line: 163, column: 3, scope: !3307)
!3312 = !DILocation(line: 166, column: 3, scope: !3307)
!3313 = distinct !DISubprogram(name: "HAL_InitTick", scope: !336, file: !336, line: 234, type: !3314, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !3316)
!3314 = !DISubroutineType(types: !3315)
!3315 = !{!2497, !21}
!3316 = !{!3317}
!3317 = !DILocalVariable(name: "TickPriority", arg: 1, scope: !3313, file: !336, line: 234, type: !21)
!3318 = !DILocation(line: 0, scope: !3313)
!3319 = !DILocation(line: 237, column: 26, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3313, file: !336, line: 237, column: 7)
!3321 = !DILocation(line: 237, column: 53, scope: !3320)
!3322 = !DILocation(line: 237, column: 51, scope: !3320)
!3323 = !DILocation(line: 237, column: 42, scope: !3320)
!3324 = !DILocation(line: 237, column: 7, scope: !3320)
!3325 = !DILocation(line: 237, column: 66, scope: !3320)
!3326 = !DILocation(line: 237, column: 7, scope: !3313)
!3327 = !DILocation(line: 245, column: 5, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3329, file: !336, line: 244, column: 3)
!3329 = distinct !DILexicalBlock(scope: !3313, file: !336, line: 243, column: 7)
!3330 = !DILocation(line: 246, column: 16, scope: !3328)
!3331 = !DILocation(line: 254, column: 3, scope: !3313)
!3332 = !DILocation(line: 255, column: 1, scope: !3313)
!3333 = distinct !DISubprogram(name: "HAL_MspInit", scope: !336, file: !336, line: 200, type: !99, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !101)
!3334 = !DILocation(line: 205, column: 1, scope: !3333)
!3335 = distinct !DISubprogram(name: "HAL_DeInit", scope: !336, file: !336, line: 175, type: !2495, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !101)
!3336 = !DILocation(line: 178, column: 3, scope: !3335)
!3337 = !{!2442, !2443, i64 12}
!3338 = !DILocation(line: 179, column: 3, scope: !3335)
!3339 = !{!2442, !2443, i64 16}
!3340 = !DILocation(line: 181, column: 3, scope: !3335)
!3341 = !DILocation(line: 182, column: 3, scope: !3335)
!3342 = !DILocation(line: 190, column: 3, scope: !3335)
!3343 = !DILocation(line: 193, column: 3, scope: !3335)
!3344 = distinct !DISubprogram(name: "HAL_MspDeInit", scope: !336, file: !336, line: 211, type: !99, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !101)
!3345 = !DILocation(line: 216, column: 1, scope: !3344)
!3346 = distinct !DISubprogram(name: "HAL_IncTick", scope: !336, file: !336, line: 293, type: !99, scopeLine: 294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !101)
!3347 = !DILocation(line: 295, column: 13, scope: !3346)
!3348 = !DILocation(line: 295, column: 10, scope: !3346)
!3349 = !DILocation(line: 296, column: 1, scope: !3346)
!3350 = distinct !DISubprogram(name: "HAL_GetTick", scope: !336, file: !336, line: 304, type: !3091, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !101)
!3351 = !DILocation(line: 306, column: 10, scope: !3350)
!3352 = !DILocation(line: 306, column: 3, scope: !3350)
!3353 = distinct !DISubprogram(name: "HAL_GetTickPrio", scope: !336, file: !336, line: 313, type: !3091, scopeLine: 314, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !101)
!3354 = !DILocation(line: 315, column: 10, scope: !3353)
!3355 = !DILocation(line: 315, column: 3, scope: !3353)
!3356 = distinct !DISubprogram(name: "HAL_SetTickFreq", scope: !336, file: !336, line: 322, type: !3357, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !3359)
!3357 = !DISubroutineType(types: !3358)
!3358 = !{!2497, !450}
!3359 = !{!3360, !3361}
!3360 = !DILocalVariable(name: "Freq", arg: 1, scope: !3356, file: !336, line: 322, type: !450)
!3361 = !DILocalVariable(name: "status", scope: !3356, file: !336, line: 324, type: !2497)
!3362 = !DILocation(line: 0, scope: !3356)
!3363 = !DILocation(line: 327, column: 7, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3356, file: !336, line: 327, column: 7)
!3365 = !DILocation(line: 327, column: 18, scope: !3364)
!3366 = !DILocation(line: 327, column: 7, scope: !3356)
!3367 = !DILocation(line: 330, column: 27, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3364, file: !336, line: 328, column: 3)
!3369 = !DILocation(line: 330, column: 14, scope: !3368)
!3370 = !DILocation(line: 331, column: 16, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3368, file: !336, line: 331, column: 9)
!3372 = !DILocation(line: 331, column: 9, scope: !3368)
!3373 = !DILocation(line: 333, column: 18, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3371, file: !336, line: 332, column: 5)
!3375 = !DILocation(line: 334, column: 5, scope: !3374)
!3376 = !DILocation(line: 337, column: 3, scope: !3356)
!3377 = distinct !DISubprogram(name: "HAL_GetTickFreq", scope: !336, file: !336, line: 344, type: !3378, scopeLine: 345, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !101)
!3378 = !DISubroutineType(types: !3379)
!3379 = !{!450}
!3380 = !DILocation(line: 346, column: 10, scope: !3377)
!3381 = !DILocation(line: 346, column: 3, scope: !3377)
!3382 = distinct !DISubprogram(name: "HAL_Delay", scope: !336, file: !336, line: 360, type: !2937, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !3383)
!3383 = !{!3384, !3385, !3386}
!3384 = !DILocalVariable(name: "Delay", arg: 1, scope: !3382, file: !336, line: 360, type: !21)
!3385 = !DILocalVariable(name: "tickstart", scope: !3382, file: !336, line: 362, type: !21)
!3386 = !DILocalVariable(name: "wait", scope: !3382, file: !336, line: 363, type: !21)
!3387 = !DILocation(line: 0, scope: !3382)
!3388 = !DILocation(line: 362, column: 24, scope: !3382)
!3389 = !DILocation(line: 366, column: 12, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3382, file: !336, line: 366, column: 7)
!3391 = !DILocation(line: 366, column: 7, scope: !3382)
!3392 = !DILocation(line: 371, column: 3, scope: !3382)
!3393 = !DILocation(line: 371, column: 11, scope: !3382)
!3394 = !DILocation(line: 371, column: 25, scope: !3382)
!3395 = !DILocation(line: 371, column: 38, scope: !3382)
!3396 = distinct !{!3396, !3392, !3397, !1358, !1359}
!3397 = !DILocation(line: 373, column: 3, scope: !3382)
!3398 = !DILocation(line: 374, column: 1, scope: !3382)
!3399 = distinct !DISubprogram(name: "HAL_SuspendTick", scope: !336, file: !336, line: 386, type: !99, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !101)
!3400 = !DILocation(line: 389, column: 3, scope: !3399)
!3401 = !DILocation(line: 390, column: 1, scope: !3399)
!3402 = distinct !DISubprogram(name: "HAL_ResumeTick", scope: !336, file: !336, line: 402, type: !99, scopeLine: 403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !101)
!3403 = !DILocation(line: 405, column: 3, scope: !3402)
!3404 = !DILocation(line: 406, column: 1, scope: !3402)
!3405 = distinct !DISubprogram(name: "HAL_GetHalVersion", scope: !336, file: !336, line: 412, type: !3091, scopeLine: 413, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !101)
!3406 = !DILocation(line: 414, column: 3, scope: !3405)
!3407 = distinct !DISubprogram(name: "HAL_GetREVID", scope: !336, file: !336, line: 428, type: !3091, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !101)
!3408 = !DILocation(line: 430, column: 20, scope: !3407)
!3409 = !DILocation(line: 430, column: 28, scope: !3407)
!3410 = !DILocation(line: 430, column: 3, scope: !3407)
!3411 = distinct !DISubprogram(name: "HAL_GetDEVID", scope: !336, file: !336, line: 444, type: !3091, scopeLine: 445, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !101)
!3412 = !DILocation(line: 446, column: 20, scope: !3411)
!3413 = !DILocation(line: 446, column: 28, scope: !3411)
!3414 = !DILocation(line: 446, column: 3, scope: !3411)
!3415 = distinct !DISubprogram(name: "HAL_GetUIDw0", scope: !336, file: !336, line: 453, type: !3091, scopeLine: 454, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !101)
!3416 = !DILocation(line: 455, column: 11, scope: !3415)
!3417 = !DILocation(line: 455, column: 4, scope: !3415)
!3418 = distinct !DISubprogram(name: "HAL_GetUIDw1", scope: !336, file: !336, line: 462, type: !3091, scopeLine: 463, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !101)
!3419 = !DILocation(line: 464, column: 11, scope: !3418)
!3420 = !DILocation(line: 464, column: 4, scope: !3418)
!3421 = distinct !DISubprogram(name: "HAL_GetUIDw2", scope: !336, file: !336, line: 471, type: !3091, scopeLine: 472, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !101)
!3422 = !DILocation(line: 473, column: 11, scope: !3421)
!3423 = !DILocation(line: 473, column: 4, scope: !3421)
!3424 = distinct !DISubprogram(name: "HAL_DBGMCU_EnableDBGSleepMode", scope: !336, file: !336, line: 480, type: !99, scopeLine: 481, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !101)
!3425 = !DILocation(line: 482, column: 3, scope: !3424)
!3426 = !{!2791, !2443, i64 4}
!3427 = !DILocation(line: 483, column: 1, scope: !3424)
!3428 = distinct !DISubprogram(name: "HAL_DBGMCU_DisableDBGSleepMode", scope: !336, file: !336, line: 496, type: !99, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !101)
!3429 = !DILocation(line: 498, column: 3, scope: !3428)
!3430 = !DILocation(line: 499, column: 1, scope: !3428)
!3431 = distinct !DISubprogram(name: "HAL_DBGMCU_EnableDBGStopMode", scope: !336, file: !336, line: 526, type: !99, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !101)
!3432 = !DILocation(line: 528, column: 3, scope: !3431)
!3433 = !DILocation(line: 529, column: 1, scope: !3431)
!3434 = distinct !DISubprogram(name: "HAL_DBGMCU_DisableDBGStopMode", scope: !336, file: !336, line: 542, type: !99, scopeLine: 543, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !101)
!3435 = !DILocation(line: 544, column: 3, scope: !3434)
!3436 = !DILocation(line: 545, column: 1, scope: !3434)
!3437 = distinct !DISubprogram(name: "HAL_DBGMCU_EnableDBGStandbyMode", scope: !336, file: !336, line: 558, type: !99, scopeLine: 559, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !101)
!3438 = !DILocation(line: 560, column: 3, scope: !3437)
!3439 = !DILocation(line: 561, column: 1, scope: !3437)
!3440 = distinct !DISubprogram(name: "HAL_DBGMCU_DisableDBGStandbyMode", scope: !336, file: !336, line: 574, type: !99, scopeLine: 575, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !335, retainedNodes: !101)
!3441 = !DILocation(line: 576, column: 3, scope: !3440)
!3442 = !DILocation(line: 577, column: 1, scope: !3440)
!3443 = distinct !DISubprogram(name: "pxPortInitialiseStack", scope: !456, file: !456, line: 174, type: !3444, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !3449)
!3444 = !DISubroutineType(types: !3445)
!3445 = !{!84, !84, !3446, !54}
!3446 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskFunction_t", file: !3447, line: 35, baseType: !3448)
!3447 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "a67be67d0625ba02d12b6cd4392e9e62")
!3448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 32)
!3449 = !{!3450, !3451, !3452}
!3450 = !DILocalVariable(name: "pxTopOfStack", arg: 1, scope: !3443, file: !456, line: 174, type: !84)
!3451 = !DILocalVariable(name: "pxCode", arg: 2, scope: !3443, file: !456, line: 174, type: !3446)
!3452 = !DILocalVariable(name: "pvParameters", arg: 3, scope: !3443, file: !456, line: 174, type: !54)
!3453 = !DILocation(line: 0, scope: !3443)
!3454 = !DILocation(line: 178, column: 14, scope: !3443)
!3455 = !DILocation(line: 179, column: 16, scope: !3443)
!3456 = !DILocation(line: 180, column: 14, scope: !3443)
!3457 = !DILocation(line: 181, column: 20, scope: !3443)
!3458 = !DILocation(line: 181, column: 45, scope: !3443)
!3459 = !DILocation(line: 181, column: 16, scope: !3443)
!3460 = !DILocation(line: 182, column: 14, scope: !3443)
!3461 = !DILocation(line: 183, column: 16, scope: !3443)
!3462 = !DILocation(line: 184, column: 15, scope: !3443)
!3463 = !DILocation(line: 185, column: 18, scope: !3443)
!3464 = !DILocation(line: 185, column: 16, scope: !3443)
!3465 = !DILocation(line: 186, column: 15, scope: !3443)
!3466 = !DILocation(line: 188, column: 2, scope: !3443)
!3467 = distinct !DISubprogram(name: "prvTaskExitError", scope: !456, file: !456, line: 192, type: !99, scopeLine: 193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !3468)
!3468 = !{!3469}
!3469 = !DILocalVariable(name: "ulDummy", scope: !3467, file: !456, line: 194, type: !20)
!3470 = !DILocation(line: 194, column: 1, scope: !3467)
!3471 = !DILocation(line: 194, column: 19, scope: !3467)
!3472 = !DILocation(line: 202, column: 2, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3467, file: !456, line: 202, column: 2)
!3474 = !{!3475, !3475, i64 0}
!3475 = !{!"long", !1601, i64 0}
!3476 = !DILocation(line: 0, scope: !3467)
!3477 = !DILocation(line: 202, column: 2, scope: !3467)
!3478 = !DILocation(line: 202, column: 2, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3480, file: !456, line: 202, column: 2)
!3480 = distinct !DILexicalBlock(scope: !3481, file: !456, line: 202, column: 2)
!3481 = distinct !DILexicalBlock(scope: !3473, file: !456, line: 202, column: 2)
!3482 = distinct !{!3482, !3483, !3483, !1359}
!3483 = !DILocation(line: 202, column: 2, scope: !3480)
!3484 = !DILocation(line: 204, column: 9, scope: !3467)
!3485 = !DILocation(line: 204, column: 17, scope: !3467)
!3486 = !DILocation(line: 204, column: 2, scope: !3467)
!3487 = distinct !{!3487, !3486, !3488, !1358, !1359}
!3488 = !DILocation(line: 213, column: 2, scope: !3467)
!3489 = !DILocation(line: 214, column: 1, scope: !3467)
!3490 = distinct !DISubprogram(name: "SVC_Handler", scope: !456, file: !456, line: 217, type: !99, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !101)
!3491 = !DILocation(line: 219, column: 2, scope: !3490)
!3492 = !{i64 8905, i64 8973, i64 9063, i64 9155, i64 9298, i64 9365, i64 9388, i64 9417, i64 9449, i64 9479, i64 9504, i64 9524, i64 9550}
!3493 = !DILocation(line: 234, column: 1, scope: !3490)
!3494 = distinct !DISubprogram(name: "xPortStartScheduler", scope: !456, file: !456, line: 257, type: !3495, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !3497)
!3495 = !DISubroutineType(types: !3496)
!3496 = !{!460}
!3497 = !{!3498, !3500, !3502}
!3498 = !DILocalVariable(name: "ulOriginalPriority", scope: !3499, file: !456, line: 265, type: !20)
!3499 = distinct !DILexicalBlock(scope: !3494, file: !456, line: 264, column: 2)
!3500 = !DILocalVariable(name: "pucFirstUserPriorityRegister", scope: !3499, file: !456, line: 266, type: !3501)
!3501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !458)
!3502 = !DILocalVariable(name: "ucMaxPriorityValue", scope: !3499, file: !456, line: 267, type: !301)
!3503 = !DILocation(line: 265, column: 3, scope: !3499)
!3504 = !DILocation(line: 265, column: 21, scope: !3499)
!3505 = !DILocation(line: 0, scope: !3499)
!3506 = !DILocation(line: 267, column: 3, scope: !3499)
!3507 = !DILocation(line: 267, column: 20, scope: !3499)
!3508 = !DILocation(line: 275, column: 24, scope: !3499)
!3509 = !DILocation(line: 275, column: 22, scope: !3499)
!3510 = !DILocation(line: 279, column: 33, scope: !3499)
!3511 = !DILocation(line: 282, column: 24, scope: !3499)
!3512 = !DILocation(line: 282, column: 22, scope: !3499)
!3513 = !DILocation(line: 285, column: 65, scope: !3499)
!3514 = !DILocation(line: 285, column: 63, scope: !3499)
!3515 = !DILocation(line: 285, column: 24, scope: !3499)
!3516 = !DILocation(line: 289, column: 22, scope: !3499)
!3517 = !DILocation(line: 290, column: 12, scope: !3499)
!3518 = !DILocation(line: 290, column: 55, scope: !3499)
!3519 = !DILocation(line: 290, column: 3, scope: !3499)
!3520 = !DILocation(line: 292, column: 22, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3499, file: !456, line: 291, column: 3)
!3522 = !DILocation(line: 293, column: 23, scope: !3521)
!3523 = distinct !{!3523, !3519, !3524, !1358, !1359}
!3524 = !DILocation(line: 294, column: 3, scope: !3499)
!3525 = !DILocation(line: 310, column: 4, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3527, file: !456, line: 310, column: 4)
!3527 = distinct !DILexicalBlock(scope: !3499, file: !456, line: 306, column: 3)
!3528 = !DILocation(line: 310, column: 4, scope: !3527)
!3529 = !DILocation(line: 195, column: 2, scope: !3530, inlinedAt: !3533)
!3530 = distinct !DISubprogram(name: "vPortRaiseBASEPRI", scope: !44, file: !44, line: 191, type: !99, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !3531)
!3531 = !{!3532}
!3532 = !DILocalVariable(name: "ulNewBASEPRI", scope: !3530, file: !44, line: 193, type: !21)
!3533 = distinct !DILocation(line: 310, column: 4, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3526, file: !456, line: 310, column: 4)
!3535 = !{i64 194939, i64 194973, i64 195010, i64 195038}
!3536 = !DILocation(line: 0, scope: !3530, inlinedAt: !3533)
!3537 = !DILocation(line: 310, column: 4, scope: !3534)
!3538 = !DILocation(line: 310, column: 4, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3540, file: !456, line: 310, column: 4)
!3540 = distinct !DILexicalBlock(scope: !3534, file: !456, line: 310, column: 4)
!3541 = distinct !{!3541, !3542, !3542, !1359}
!3542 = !DILocation(line: 310, column: 4, scope: !3540)
!3543 = !DILocation(line: 316, column: 22, scope: !3499)
!3544 = !DILocation(line: 317, column: 22, scope: !3499)
!3545 = !DILocation(line: 321, column: 35, scope: !3499)
!3546 = !DILocation(line: 321, column: 33, scope: !3499)
!3547 = !DILocation(line: 322, column: 2, scope: !3494)
!3548 = !DILocation(line: 326, column: 23, scope: !3494)
!3549 = !DILocation(line: 327, column: 23, scope: !3494)
!3550 = !DILocation(line: 331, column: 2, scope: !3494)
!3551 = !DILocation(line: 334, column: 20, scope: !3494)
!3552 = !DILocation(line: 337, column: 2, scope: !3494)
!3553 = !DILocation(line: 345, column: 2, scope: !3494)
!3554 = !DILocation(line: 346, column: 2, scope: !3494)
!3555 = !DILocation(line: 349, column: 2, scope: !3494)
!3556 = distinct !DISubprogram(name: "vPortSetupTimerInterrupt", scope: !456, file: !456, line: 617, type: !99, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !101)
!3557 = !DILocation(line: 629, column: 28, scope: !3556)
!3558 = !DILocation(line: 630, column: 37, scope: !3556)
!3559 = !DILocation(line: 633, column: 32, scope: !3556)
!3560 = !DILocation(line: 633, column: 55, scope: !3556)
!3561 = !DILocation(line: 633, column: 78, scope: !3556)
!3562 = !DILocation(line: 633, column: 28, scope: !3556)
!3563 = !DILocation(line: 634, column: 28, scope: !3556)
!3564 = !DILocation(line: 635, column: 1, scope: !3556)
!3565 = distinct !DISubprogram(name: "prvPortStartFirstTask", scope: !456, file: !456, line: 237, type: !99, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !101)
!3566 = !DILocation(line: 239, column: 2, scope: !3565)
!3567 = !{i64 9744, i64 9834, i64 9862, i64 9890, i64 9966, i64 10023, i64 10046, i64 10066, i64 10086, i64 10147}
!3568 = !DILocation(line: 251, column: 1, scope: !3565)
!3569 = distinct !DISubprogram(name: "vPortEndScheduler", scope: !456, file: !456, line: 353, type: !99, scopeLine: 354, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !101)
!3570 = !DILocation(line: 357, column: 2, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3569, file: !456, line: 357, column: 2)
!3572 = !DILocation(line: 357, column: 2, scope: !3569)
!3573 = !DILocation(line: 195, column: 2, scope: !3530, inlinedAt: !3574)
!3574 = distinct !DILocation(line: 357, column: 2, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3571, file: !456, line: 357, column: 2)
!3576 = !DILocation(line: 0, scope: !3530, inlinedAt: !3574)
!3577 = !DILocation(line: 357, column: 2, scope: !3575)
!3578 = !DILocation(line: 357, column: 2, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3580, file: !456, line: 357, column: 2)
!3580 = distinct !DILexicalBlock(scope: !3575, file: !456, line: 357, column: 2)
!3581 = distinct !{!3581, !3582, !3582, !1359}
!3582 = !DILocation(line: 357, column: 2, scope: !3580)
!3583 = !DILocation(line: 358, column: 1, scope: !3569)
!3584 = distinct !DISubprogram(name: "vPortEnterCritical", scope: !456, file: !456, line: 361, type: !99, scopeLine: 362, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !101)
!3585 = !DILocation(line: 195, column: 2, scope: !3530, inlinedAt: !3586)
!3586 = distinct !DILocation(line: 363, column: 2, scope: !3584)
!3587 = !DILocation(line: 0, scope: !3530, inlinedAt: !3586)
!3588 = !DILocation(line: 364, column: 19, scope: !3584)
!3589 = !DILocation(line: 371, column: 24, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3584, file: !456, line: 371, column: 6)
!3591 = !DILocation(line: 371, column: 6, scope: !3584)
!3592 = !DILocation(line: 373, column: 3, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3594, file: !456, line: 373, column: 3)
!3594 = distinct !DILexicalBlock(scope: !3590, file: !456, line: 372, column: 2)
!3595 = !DILocation(line: 373, column: 3, scope: !3594)
!3596 = !DILocation(line: 195, column: 2, scope: !3530, inlinedAt: !3597)
!3597 = distinct !DILocation(line: 373, column: 3, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3593, file: !456, line: 373, column: 3)
!3599 = !DILocation(line: 0, scope: !3530, inlinedAt: !3597)
!3600 = !DILocation(line: 373, column: 3, scope: !3598)
!3601 = !DILocation(line: 373, column: 3, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3603, file: !456, line: 373, column: 3)
!3603 = distinct !DILexicalBlock(scope: !3598, file: !456, line: 373, column: 3)
!3604 = distinct !{!3604, !3605, !3605, !1359}
!3605 = !DILocation(line: 373, column: 3, scope: !3603)
!3606 = !DILocation(line: 375, column: 1, scope: !3584)
!3607 = distinct !DISubprogram(name: "vPortExitCritical", scope: !456, file: !456, line: 378, type: !99, scopeLine: 379, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !101)
!3608 = !DILocation(line: 380, column: 2, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3607, file: !456, line: 380, column: 2)
!3610 = !DILocation(line: 380, column: 2, scope: !3607)
!3611 = !DILocation(line: 195, column: 2, scope: !3530, inlinedAt: !3612)
!3612 = distinct !DILocation(line: 380, column: 2, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3609, file: !456, line: 380, column: 2)
!3614 = !DILocation(line: 0, scope: !3530, inlinedAt: !3612)
!3615 = !DILocation(line: 380, column: 2, scope: !3613)
!3616 = !DILocation(line: 380, column: 2, scope: !3617)
!3617 = distinct !DILexicalBlock(scope: !3618, file: !456, line: 380, column: 2)
!3618 = distinct !DILexicalBlock(scope: !3613, file: !456, line: 380, column: 2)
!3619 = distinct !{!3619, !3620, !3620, !1359}
!3620 = !DILocation(line: 380, column: 2, scope: !3618)
!3621 = !DILocation(line: 381, column: 19, scope: !3607)
!3622 = !DILocation(line: 382, column: 24, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3607, file: !456, line: 382, column: 6)
!3624 = !DILocation(line: 382, column: 6, scope: !3607)
!3625 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !3626, file: !44, line: 227, type: !21)
!3626 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !44, file: !44, line: 227, type: !2937, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !3627)
!3627 = !{!3625}
!3628 = !DILocation(line: 0, scope: !3626, inlinedAt: !3629)
!3629 = distinct !DILocation(line: 384, column: 3, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3623, file: !456, line: 383, column: 2)
!3631 = !DILocation(line: 229, column: 2, scope: !3626, inlinedAt: !3629)
!3632 = !{i64 195916}
!3633 = !DILocation(line: 385, column: 2, scope: !3630)
!3634 = !DILocation(line: 386, column: 1, scope: !3607)
!3635 = distinct !DISubprogram(name: "PendSV_Handler", scope: !456, file: !456, line: 389, type: !99, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !101)
!3636 = !DILocation(line: 393, column: 2, scope: !3635)
!3637 = !{i64 15069, i64 15096, i64 15116, i64 15133, i64 15212, i64 15238, i64 15255, i64 15323, i64 15415, i64 15432, i64 15464, i64 15489, i64 15518, i64 15551, i64 15576, i64 15605, i64 15637, i64 15719, i64 15745, i64 15834, i64 15891, i64 15917, i64 15937, i64 15959, i64 15976, i64 15999}
!3638 = !DILocation(line: 423, column: 1, scope: !3635)
!3639 = distinct !DISubprogram(name: "xPortSysTickHandler", scope: !456, file: !456, line: 426, type: !99, scopeLine: 427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !101)
!3640 = !DILocation(line: 195, column: 2, scope: !3530, inlinedAt: !3641)
!3641 = distinct !DILocation(line: 432, column: 2, scope: !3639)
!3642 = !DILocation(line: 0, scope: !3530, inlinedAt: !3641)
!3643 = !DILocation(line: 435, column: 7, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3645, file: !456, line: 435, column: 7)
!3645 = distinct !DILexicalBlock(scope: !3639, file: !456, line: 433, column: 2)
!3646 = !DILocation(line: 435, column: 28, scope: !3644)
!3647 = !DILocation(line: 435, column: 7, scope: !3645)
!3648 = !DILocation(line: 439, column: 26, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3644, file: !456, line: 436, column: 3)
!3650 = !DILocation(line: 440, column: 3, scope: !3649)
!3651 = !DILocation(line: 0, scope: !3626, inlinedAt: !3652)
!3652 = distinct !DILocation(line: 442, column: 2, scope: !3639)
!3653 = !DILocation(line: 229, column: 2, scope: !3626, inlinedAt: !3652)
!3654 = !DILocation(line: 443, column: 1, scope: !3639)
!3655 = distinct !DISubprogram(name: "vPortValidateInterruptPriority", scope: !456, file: !456, line: 640, type: !99, scopeLine: 641, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !3656)
!3656 = !{!3657, !3658}
!3657 = !DILocalVariable(name: "ulCurrentInterrupt", scope: !3655, file: !456, line: 642, type: !21)
!3658 = !DILocalVariable(name: "ucCurrentPriority", scope: !3655, file: !456, line: 643, type: !39)
!3659 = !DILocation(line: 646, column: 3, scope: !3655)
!3660 = !{i64 25130}
!3661 = !DILocation(line: 0, scope: !3655)
!3662 = !DILocation(line: 649, column: 26, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3655, file: !456, line: 649, column: 7)
!3664 = !DILocation(line: 649, column: 7, scope: !3655)
!3665 = !DILocation(line: 652, column: 24, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3663, file: !456, line: 650, column: 3)
!3667 = !DILocation(line: 677, column: 4, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3666, file: !456, line: 677, column: 4)
!3669 = !DILocation(line: 677, column: 4, scope: !3666)
!3670 = !DILocation(line: 195, column: 2, scope: !3530, inlinedAt: !3671)
!3671 = distinct !DILocation(line: 677, column: 4, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3668, file: !456, line: 677, column: 4)
!3673 = !DILocation(line: 0, scope: !3530, inlinedAt: !3671)
!3674 = !DILocation(line: 677, column: 4, scope: !3672)
!3675 = !DILocation(line: 677, column: 4, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3677, file: !456, line: 677, column: 4)
!3677 = distinct !DILexicalBlock(scope: !3672, file: !456, line: 677, column: 4)
!3678 = distinct !{!3678, !3679, !3679, !1359}
!3679 = !DILocation(line: 677, column: 4, scope: !3677)
!3680 = !DILocation(line: 693, column: 3, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3655, file: !456, line: 693, column: 3)
!3682 = !DILocation(line: 693, column: 3, scope: !3655)
!3683 = !DILocation(line: 195, column: 2, scope: !3530, inlinedAt: !3684)
!3684 = distinct !DILocation(line: 693, column: 3, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3681, file: !456, line: 693, column: 3)
!3686 = !DILocation(line: 0, scope: !3530, inlinedAt: !3684)
!3687 = !DILocation(line: 693, column: 3, scope: !3685)
!3688 = !DILocation(line: 693, column: 3, scope: !3689)
!3689 = distinct !DILexicalBlock(scope: !3690, file: !456, line: 693, column: 3)
!3690 = distinct !DILexicalBlock(scope: !3685, file: !456, line: 693, column: 3)
!3691 = distinct !{!3691, !3692, !3692, !1359}
!3692 = !DILocation(line: 693, column: 3, scope: !3690)
!3693 = !DILocation(line: 694, column: 2, scope: !3655)
!3694 = distinct !DISubprogram(name: "xTaskCreateStatic", scope: !475, file: !475, line: 575, type: !3695, scopeLine: 582, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !3719)
!3695 = !DISubroutineType(types: !3696)
!3696 = !{!512, !3446, !3697, !3698, !3699, !43, !3700, !3701}
!3697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !751)
!3698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !21)
!3699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !54)
!3700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !84)
!3701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3702)
!3702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3703, size: 32)
!3703 = !DIDerivedType(tag: DW_TAG_typedef, name: "StaticTask_t", file: !50, line: 1030, baseType: !3704)
!3704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xSTATIC_TCB", file: !50, line: 984, size: 608, elements: !3705)
!3705 = !{!3706, !3707, !3714, !3715, !3716, !3717, !3718}
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "pxDummy1", scope: !3704, file: !50, line: 986, baseType: !54, size: 32)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "xDummy3", scope: !3704, file: !50, line: 990, baseType: !3708, size: 320, offset: 32)
!3708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3709, size: 320, elements: !66)
!3709 = !DIDerivedType(tag: DW_TAG_typedef, name: "StaticListItem_t", file: !50, line: 953, baseType: !3710)
!3710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xSTATIC_LIST_ITEM", file: !50, line: 948, size: 160, elements: !3711)
!3711 = !{!3712, !3713}
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "xDummy1", scope: !3710, file: !50, line: 950, baseType: !61, size: 32)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "pvDummy2", scope: !3710, file: !50, line: 951, baseType: !63, size: 128, offset: 32)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "uxDummy5", scope: !3704, file: !50, line: 991, baseType: !43, size: 32, offset: 352)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "pxDummy6", scope: !3704, file: !50, line: 992, baseType: !54, size: 32, offset: 384)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "ucDummy7", scope: !3704, file: !50, line: 993, baseType: !71, size: 128, offset: 416)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "ulDummy18", scope: !3704, file: !50, line: 1019, baseType: !21, size: 32, offset: 544)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "ucDummy19", scope: !3704, file: !50, line: 1020, baseType: !39, size: 8, offset: 576)
!3719 = !{!3720, !3721, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729}
!3720 = !DILocalVariable(name: "pxTaskCode", arg: 1, scope: !3694, file: !475, line: 575, type: !3446)
!3721 = !DILocalVariable(name: "pcName", arg: 2, scope: !3694, file: !475, line: 576, type: !3697)
!3722 = !DILocalVariable(name: "ulStackDepth", arg: 3, scope: !3694, file: !475, line: 577, type: !3698)
!3723 = !DILocalVariable(name: "pvParameters", arg: 4, scope: !3694, file: !475, line: 578, type: !3699)
!3724 = !DILocalVariable(name: "uxPriority", arg: 5, scope: !3694, file: !475, line: 579, type: !43)
!3725 = !DILocalVariable(name: "puxStackBuffer", arg: 6, scope: !3694, file: !475, line: 580, type: !3700)
!3726 = !DILocalVariable(name: "pxTaskBuffer", arg: 7, scope: !3694, file: !475, line: 581, type: !3701)
!3727 = !DILocalVariable(name: "pxNewTCB", scope: !3694, file: !475, line: 583, type: !486)
!3728 = !DILocalVariable(name: "xReturn", scope: !3694, file: !475, line: 584, type: !512)
!3729 = !DILocalVariable(name: "xSize", scope: !3730, file: !475, line: 594, type: !3731)
!3730 = distinct !DILexicalBlock(scope: !3694, file: !475, line: 590, column: 3)
!3731 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !3732)
!3732 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !3733, line: 40, baseType: !3734)
!3733 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/strings.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "dceb1b71cd72987b246237af8552faba")
!3734 = !DIDerivedType(tag: DW_TAG_typedef, name: "__size_t", file: !3735, line: 131, baseType: !7)
!3735 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "b45aad52ebaa1042158f2766af29f8e2")
!3736 = !DILocation(line: 0, scope: !3694)
!3737 = !DILocation(line: 584, column: 2, scope: !3694)
!3738 = !DILocation(line: 586, column: 3, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3694, file: !475, line: 586, column: 3)
!3740 = !DILocation(line: 586, column: 3, scope: !3694)
!3741 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !3745)
!3742 = distinct !DISubprogram(name: "vPortRaiseBASEPRI", scope: !44, file: !44, line: 191, type: !99, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !3743)
!3743 = !{!3744}
!3744 = !DILocalVariable(name: "ulNewBASEPRI", scope: !3742, file: !44, line: 193, type: !21)
!3745 = distinct !DILocation(line: 586, column: 3, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3739, file: !475, line: 586, column: 3)
!3747 = !{i64 471527, i64 471561, i64 471598, i64 471626}
!3748 = !DILocation(line: 0, scope: !3742, inlinedAt: !3745)
!3749 = !DILocation(line: 586, column: 3, scope: !3746)
!3750 = !DILocation(line: 586, column: 3, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3752, file: !475, line: 586, column: 3)
!3752 = distinct !DILexicalBlock(scope: !3746, file: !475, line: 586, column: 3)
!3753 = distinct !{!3753, !3754, !3754, !1359}
!3754 = !DILocation(line: 586, column: 3, scope: !3752)
!3755 = !DILocation(line: 587, column: 3, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3694, file: !475, line: 587, column: 3)
!3757 = !DILocation(line: 587, column: 3, scope: !3694)
!3758 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !3759)
!3759 = distinct !DILocation(line: 587, column: 3, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3756, file: !475, line: 587, column: 3)
!3761 = !DILocation(line: 0, scope: !3742, inlinedAt: !3759)
!3762 = !DILocation(line: 587, column: 3, scope: !3760)
!3763 = !DILocation(line: 587, column: 3, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3765, file: !475, line: 587, column: 3)
!3765 = distinct !DILexicalBlock(scope: !3760, file: !475, line: 587, column: 3)
!3766 = distinct !{!3766, !3767, !3767, !1359}
!3767 = !DILocation(line: 587, column: 3, scope: !3765)
!3768 = !DILocation(line: 594, column: 4, scope: !3730)
!3769 = !DILocation(line: 594, column: 20, scope: !3730)
!3770 = !DILocation(line: 595, column: 4, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3730, file: !475, line: 595, column: 4)
!3772 = !DILocation(line: 595, column: 4, scope: !3730)
!3773 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !3774)
!3774 = distinct !DILocation(line: 595, column: 4, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3771, file: !475, line: 595, column: 4)
!3776 = !DILocation(line: 0, scope: !3742, inlinedAt: !3774)
!3777 = !DILocation(line: 595, column: 4, scope: !3775)
!3778 = !DILocation(line: 595, column: 4, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3780, file: !475, line: 595, column: 4)
!3780 = distinct !DILexicalBlock(scope: !3775, file: !475, line: 595, column: 4)
!3781 = distinct !{!3781, !3782, !3782, !1359}
!3782 = !DILocation(line: 595, column: 4, scope: !3780)
!3783 = !DILocation(line: 596, column: 3, scope: !3694)
!3784 = !DILocation(line: 604, column: 15, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3786, file: !475, line: 601, column: 3)
!3786 = distinct !DILexicalBlock(scope: !3694, file: !475, line: 600, column: 7)
!3787 = !DILocation(line: 605, column: 14, scope: !3785)
!3788 = !DILocation(line: 605, column: 22, scope: !3785)
!3789 = !{!3790, !1600, i64 48}
!3790 = !{!"tskTaskControlBlock", !1600, i64 0, !3791, i64 4, !3791, i64 24, !3475, i64 44, !1600, i64 48, !1601, i64 52, !2443, i64 68, !1601, i64 72}
!3791 = !{!"xLIST_ITEM", !2443, i64 0, !1600, i64 4, !1600, i64 8, !1600, i64 12, !1600, i64 16}
!3792 = !DILocation(line: 615, column: 4, scope: !3785)
!3793 = !DILocation(line: 616, column: 4, scope: !3785)
!3794 = !DILocation(line: 623, column: 10, scope: !3694)
!3795 = !DILocation(line: 624, column: 2, scope: !3694)
!3796 = !DILocation(line: 623, column: 3, scope: !3694)
!3797 = distinct !DISubprogram(name: "prvInitialiseNewTask", scope: !475, file: !475, line: 817, type: !3798, scopeLine: 825, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !3811)
!3798 = !DISubroutineType(types: !3799)
!3799 = !{null, !3446, !3697, !3698, !3699, !43, !3800, !486, !3802}
!3800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3801)
!3801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 32)
!3802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3803)
!3803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3804, size: 32)
!3804 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3805)
!3805 = !DIDerivedType(tag: DW_TAG_typedef, name: "MemoryRegion_t", file: !478, line: 107, baseType: !3806)
!3806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMEMORY_REGION", file: !478, line: 102, size: 96, elements: !3807)
!3807 = !{!3808, !3809, !3810}
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "pvBaseAddress", scope: !3806, file: !478, line: 104, baseType: !54, size: 32)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "ulLengthInBytes", scope: !3806, file: !478, line: 105, baseType: !21, size: 32, offset: 32)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "ulParameters", scope: !3806, file: !478, line: 106, baseType: !21, size: 32, offset: 64)
!3811 = !{!3812, !3813, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3821}
!3812 = !DILocalVariable(name: "pxTaskCode", arg: 1, scope: !3797, file: !475, line: 817, type: !3446)
!3813 = !DILocalVariable(name: "pcName", arg: 2, scope: !3797, file: !475, line: 818, type: !3697)
!3814 = !DILocalVariable(name: "ulStackDepth", arg: 3, scope: !3797, file: !475, line: 819, type: !3698)
!3815 = !DILocalVariable(name: "pvParameters", arg: 4, scope: !3797, file: !475, line: 820, type: !3699)
!3816 = !DILocalVariable(name: "uxPriority", arg: 5, scope: !3797, file: !475, line: 821, type: !43)
!3817 = !DILocalVariable(name: "pxCreatedTask", arg: 6, scope: !3797, file: !475, line: 822, type: !3800)
!3818 = !DILocalVariable(name: "pxNewTCB", arg: 7, scope: !3797, file: !475, line: 823, type: !486)
!3819 = !DILocalVariable(name: "xRegions", arg: 8, scope: !3797, file: !475, line: 824, type: !3802)
!3820 = !DILocalVariable(name: "pxTopOfStack", scope: !3797, file: !475, line: 826, type: !84)
!3821 = !DILocalVariable(name: "x", scope: !3797, file: !475, line: 827, type: !43)
!3822 = !DILocation(line: 0, scope: !3797)
!3823 = !DILocation(line: 857, column: 28, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3797, file: !475, line: 856, column: 2)
!3825 = !DILocation(line: 857, column: 53, scope: !3824)
!3826 = !DILocation(line: 857, column: 36, scope: !3824)
!3827 = !DILocation(line: 858, column: 40, scope: !3824)
!3828 = !DILocation(line: 858, column: 81, scope: !3824)
!3829 = !DILocation(line: 885, column: 2, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3797, file: !475, line: 885, column: 2)
!3831 = !DILocation(line: 887, column: 31, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3833, file: !475, line: 886, column: 2)
!3833 = distinct !DILexicalBlock(scope: !3830, file: !475, line: 885, column: 2)
!3834 = !DILocation(line: 887, column: 3, scope: !3832)
!3835 = !DILocation(line: 887, column: 29, scope: !3832)
!3836 = !DILocation(line: 892, column: 7, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3832, file: !475, line: 892, column: 7)
!3838 = !DILocation(line: 892, column: 19, scope: !3837)
!3839 = !DILocation(line: 885, column: 76, scope: !3833)
!3840 = !DILocation(line: 892, column: 7, scope: !3832)
!3841 = distinct !{!3841, !3829, !3842, !1358, !1359}
!3842 = !DILocation(line: 900, column: 2, scope: !3830)
!3843 = !DILocation(line: 858, column: 18, scope: !3824)
!3844 = !DILocation(line: 904, column: 2, scope: !3797)
!3845 = !DILocation(line: 904, column: 54, scope: !3797)
!3846 = !DILocation(line: 908, column: 6, scope: !3797)
!3847 = !DILocation(line: 917, column: 12, scope: !3797)
!3848 = !DILocation(line: 917, column: 23, scope: !3797)
!3849 = !{!3790, !3475, i64 44}
!3850 = !DILocation(line: 925, column: 36, scope: !3797)
!3851 = !DILocation(line: 925, column: 2, scope: !3797)
!3852 = !DILocation(line: 926, column: 36, scope: !3797)
!3853 = !DILocation(line: 926, column: 2, scope: !3797)
!3854 = !DILocation(line: 930, column: 2, scope: !3797)
!3855 = !{!3790, !1600, i64 16}
!3856 = !DILocation(line: 933, column: 2, scope: !3797)
!3857 = !{!3790, !2443, i64 24}
!3858 = !DILocation(line: 934, column: 2, scope: !3797)
!3859 = !{!3790, !1600, i64 36}
!3860 = !DILocation(line: 976, column: 13, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3797, file: !475, line: 975, column: 2)
!3862 = !DILocation(line: 976, column: 29, scope: !3861)
!3863 = !{!3790, !2443, i64 68}
!3864 = !DILocation(line: 977, column: 13, scope: !3861)
!3865 = !DILocation(line: 977, column: 27, scope: !3861)
!3866 = !{!3790, !1601, i64 72}
!3867 = !DILocation(line: 1004, column: 28, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3797, file: !475, line: 1003, column: 2)
!3869 = !DILocation(line: 1004, column: 13, scope: !3868)
!3870 = !DILocation(line: 1004, column: 26, scope: !3868)
!3871 = !{!3790, !1600, i64 0}
!3872 = !DILocation(line: 1008, column: 31, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3797, file: !475, line: 1008, column: 6)
!3874 = !DILocation(line: 1008, column: 6, scope: !3797)
!3875 = !DILocation(line: 1012, column: 18, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3873, file: !475, line: 1009, column: 2)
!3877 = !DILocation(line: 1013, column: 2, scope: !3876)
!3878 = !DILocation(line: 1018, column: 1, scope: !3797)
!3879 = distinct !DISubprogram(name: "prvAddNewTaskToReadyList", scope: !475, file: !475, line: 1021, type: !3880, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !3882)
!3880 = !DISubroutineType(types: !3881)
!3881 = !{null, !486}
!3882 = !{!3883}
!3883 = !DILocalVariable(name: "pxNewTCB", arg: 1, scope: !3879, file: !475, line: 1021, type: !486)
!3884 = !DILocation(line: 0, scope: !3879)
!3885 = !DILocation(line: 1025, column: 2, scope: !3879)
!3886 = !DILocation(line: 1027, column: 25, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3879, file: !475, line: 1026, column: 2)
!3888 = !DILocation(line: 1028, column: 7, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3887, file: !475, line: 1028, column: 7)
!3890 = !DILocation(line: 1028, column: 20, scope: !3889)
!3891 = !DILocation(line: 1028, column: 7, scope: !3887)
!3892 = !DILocation(line: 1032, column: 17, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3889, file: !475, line: 1029, column: 3)
!3894 = !DILocation(line: 1034, column: 8, scope: !3895)
!3895 = distinct !DILexicalBlock(scope: !3893, file: !475, line: 1034, column: 8)
!3896 = !DILocation(line: 1034, column: 31, scope: !3895)
!3897 = !DILocation(line: 1034, column: 8, scope: !3893)
!3898 = !DILocation(line: 1039, column: 5, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3895, file: !475, line: 1035, column: 4)
!3900 = !DILocation(line: 1040, column: 4, scope: !3899)
!3901 = !DILocation(line: 1051, column: 8, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3903, file: !475, line: 1051, column: 8)
!3903 = distinct !DILexicalBlock(scope: !3889, file: !475, line: 1047, column: 3)
!3904 = !DILocation(line: 1051, column: 26, scope: !3902)
!3905 = !DILocation(line: 1051, column: 8, scope: !3903)
!3906 = !DILocation(line: 1053, column: 9, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3908, file: !475, line: 1053, column: 9)
!3908 = distinct !DILexicalBlock(scope: !3902, file: !475, line: 1052, column: 4)
!3909 = !DILocation(line: 1053, column: 23, scope: !3907)
!3910 = !DILocation(line: 1053, column: 47, scope: !3907)
!3911 = !DILocation(line: 1053, column: 34, scope: !3907)
!3912 = !DILocation(line: 1053, column: 9, scope: !3908)
!3913 = !DILocation(line: 1055, column: 19, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3907, file: !475, line: 1054, column: 5)
!3915 = !DILocation(line: 1056, column: 5, scope: !3914)
!3916 = !DILocation(line: 1068, column: 15, scope: !3887)
!3917 = !DILocation(line: 1078, column: 3, scope: !3887)
!3918 = !DILocation(line: 1082, column: 2, scope: !3879)
!3919 = !DILocation(line: 1084, column: 6, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3879, file: !475, line: 1084, column: 6)
!3921 = !DILocation(line: 1084, column: 24, scope: !3920)
!3922 = !DILocation(line: 1084, column: 6, scope: !3879)
!3923 = !DILocation(line: 1088, column: 7, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3925, file: !475, line: 1088, column: 7)
!3925 = distinct !DILexicalBlock(scope: !3920, file: !475, line: 1085, column: 2)
!3926 = !DILocation(line: 1096, column: 2, scope: !3925)
!3927 = !DILocation(line: 1101, column: 1, scope: !3879)
!3928 = distinct !DISubprogram(name: "prvInitialiseTaskLists", scope: !475, file: !475, line: 3430, type: !99, scopeLine: 3431, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !3929)
!3929 = !{!3930}
!3930 = !DILocalVariable(name: "uxPriority", scope: !3928, file: !475, line: 3432, type: !43)
!3931 = !DILocation(line: 0, scope: !3928)
!3932 = !DILocation(line: 3434, column: 2, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3928, file: !475, line: 3434, column: 2)
!3934 = !DILocation(line: 3436, column: 23, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3936, file: !475, line: 3435, column: 2)
!3936 = distinct !DILexicalBlock(scope: !3933, file: !475, line: 3434, column: 2)
!3937 = !DILocation(line: 3436, column: 3, scope: !3935)
!3938 = !DILocation(line: 3434, column: 101, scope: !3936)
!3939 = !DILocation(line: 3434, column: 51, scope: !3936)
!3940 = distinct !{!3940, !3932, !3941, !1358, !1359}
!3941 = !DILocation(line: 3437, column: 2, scope: !3933)
!3942 = !DILocation(line: 3439, column: 2, scope: !3928)
!3943 = !DILocation(line: 3440, column: 2, scope: !3928)
!3944 = !DILocation(line: 3441, column: 2, scope: !3928)
!3945 = !DILocation(line: 3457, column: 20, scope: !3928)
!3946 = !DILocation(line: 3458, column: 28, scope: !3928)
!3947 = !DILocation(line: 3459, column: 1, scope: !3928)
!3948 = distinct !DISubprogram(name: "vTaskDelay", scope: !475, file: !475, line: 1282, type: !3949, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !3952)
!3949 = !DISubroutineType(types: !3950)
!3950 = !{null, !3951}
!3951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !61)
!3952 = !{!3953, !3954}
!3953 = !DILocalVariable(name: "xTicksToDelay", arg: 1, scope: !3948, file: !475, line: 1282, type: !3951)
!3954 = !DILocalVariable(name: "xAlreadyYielded", scope: !3948, file: !475, line: 1284, type: !460)
!3955 = !DILocation(line: 0, scope: !3948)
!3956 = !DILocation(line: 1287, column: 21, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3948, file: !475, line: 1287, column: 7)
!3958 = !DILocation(line: 1287, column: 7, scope: !3948)
!3959 = !DILocation(line: 1289, column: 4, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3961, file: !475, line: 1289, column: 4)
!3961 = distinct !DILexicalBlock(scope: !3957, file: !475, line: 1288, column: 3)
!3962 = !DILocation(line: 1289, column: 4, scope: !3961)
!3963 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !3964)
!3964 = distinct !DILocation(line: 1289, column: 4, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3960, file: !475, line: 1289, column: 4)
!3966 = !DILocation(line: 0, scope: !3742, inlinedAt: !3964)
!3967 = !DILocation(line: 1289, column: 4, scope: !3965)
!3968 = !DILocation(line: 1289, column: 4, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3970, file: !475, line: 1289, column: 4)
!3970 = distinct !DILexicalBlock(scope: !3965, file: !475, line: 1289, column: 4)
!3971 = distinct !{!3971, !3972, !3972, !1359}
!3972 = !DILocation(line: 1289, column: 4, scope: !3970)
!3973 = !DILocation(line: 1290, column: 4, scope: !3961)
!3974 = !DILocation(line: 1301, column: 5, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3961, file: !475, line: 1291, column: 4)
!3976 = !DILocation(line: 1303, column: 22, scope: !3961)
!3977 = !DILocation(line: 1304, column: 3, scope: !3961)
!3978 = !DILocation(line: 1314, column: 4, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3980, file: !475, line: 1314, column: 4)
!3980 = distinct !DILexicalBlock(scope: !3981, file: !475, line: 1313, column: 3)
!3981 = distinct !DILexicalBlock(scope: !3948, file: !475, line: 1312, column: 7)
!3982 = !{i64 2148151022}
!3983 = !{i64 2148151073}
!3984 = !DILocation(line: 1320, column: 2, scope: !3948)
!3985 = distinct !DISubprogram(name: "vTaskSuspendAll", scope: !475, file: !475, line: 2026, type: !99, scopeLine: 2027, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !101)
!3986 = !DILocation(line: 2032, column: 2, scope: !3985)
!3987 = !DILocation(line: 2033, column: 1, scope: !3985)
!3988 = distinct !DISubprogram(name: "prvAddCurrentTaskToDelayedList", scope: !475, file: !475, line: 4906, type: !3989, scopeLine: 4907, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !3992)
!3989 = !DISubroutineType(types: !3990)
!3990 = !{null, !61, !3991}
!3991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !460)
!3992 = !{!3993, !3994, !3995, !3996}
!3993 = !DILocalVariable(name: "xTicksToWait", arg: 1, scope: !3988, file: !475, line: 4906, type: !61)
!3994 = !DILocalVariable(name: "xCanBlockIndefinitely", arg: 2, scope: !3988, file: !475, line: 4906, type: !3991)
!3995 = !DILocalVariable(name: "xTimeToWake", scope: !3988, file: !475, line: 4908, type: !61)
!3996 = !DILocalVariable(name: "xConstTickCount", scope: !3988, file: !475, line: 4909, type: !3951)
!3997 = !DILocation(line: 0, scope: !3988)
!3998 = !DILocation(line: 4909, column: 36, scope: !3988)
!3999 = !DILocation(line: 4922, column: 23, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3988, file: !475, line: 4922, column: 6)
!4001 = !DILocation(line: 4922, column: 37, scope: !4000)
!4002 = !DILocation(line: 4922, column: 6, scope: !4000)
!4003 = !DILocation(line: 4922, column: 56, scope: !4000)
!4004 = !DILocation(line: 4922, column: 6, scope: !3988)
!4005 = !DILocation(line: 4926, column: 3, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !4000, file: !475, line: 4923, column: 2)
!4007 = !DILocation(line: 4927, column: 2, scope: !4006)
!4008 = !DILocation(line: 4983, column: 33, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !3988, file: !475, line: 4979, column: 2)
!4010 = !DILocation(line: 4986, column: 3, scope: !4009)
!4011 = !{!3790, !2443, i64 4}
!4012 = !DILocation(line: 4988, column: 19, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !4009, file: !475, line: 4988, column: 7)
!4014 = !DILocation(line: 4988, column: 7, scope: !4009)
!4015 = !DILocation(line: 4991, column: 17, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !4013, file: !475, line: 4989, column: 3)
!4017 = !DILocation(line: 4991, column: 47, scope: !4016)
!4018 = !DILocation(line: 4991, column: 61, scope: !4016)
!4019 = !DILocation(line: 4991, column: 4, scope: !4016)
!4020 = !DILocation(line: 4992, column: 3, scope: !4016)
!4021 = !DILocation(line: 4996, column: 17, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4013, file: !475, line: 4994, column: 3)
!4023 = !DILocation(line: 4996, column: 39, scope: !4022)
!4024 = !DILocation(line: 4996, column: 53, scope: !4022)
!4025 = !DILocation(line: 4996, column: 4, scope: !4022)
!4026 = !DILocation(line: 5001, column: 22, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4022, file: !475, line: 5001, column: 8)
!4028 = !DILocation(line: 5001, column: 20, scope: !4027)
!4029 = !DILocation(line: 5001, column: 8, scope: !4022)
!4030 = !DILocation(line: 5003, column: 26, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4027, file: !475, line: 5002, column: 4)
!4032 = !DILocation(line: 5004, column: 4, scope: !4031)
!4033 = !DILocation(line: 5015, column: 1, scope: !3988)
!4034 = distinct !DISubprogram(name: "xTaskResumeAll", scope: !475, file: !475, line: 2099, type: !3495, scopeLine: 2100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4035)
!4035 = !{!4036, !4037, !4038}
!4036 = !DILocalVariable(name: "pxTCB", scope: !4034, file: !475, line: 2101, type: !486)
!4037 = !DILocalVariable(name: "xAlreadyYielded", scope: !4034, file: !475, line: 2102, type: !460)
!4038 = !DILocalVariable(name: "uxPendedCounts", scope: !4039, file: !475, line: 2158, type: !43)
!4039 = distinct !DILexicalBlock(scope: !4040, file: !475, line: 2157, column: 5)
!4040 = distinct !DILexicalBlock(scope: !4041, file: !475, line: 2120, column: 4)
!4041 = distinct !DILexicalBlock(scope: !4042, file: !475, line: 2119, column: 8)
!4042 = distinct !DILexicalBlock(scope: !4043, file: !475, line: 2118, column: 3)
!4043 = distinct !DILexicalBlock(scope: !4044, file: !475, line: 2117, column: 7)
!4044 = distinct !DILexicalBlock(scope: !4034, file: !475, line: 2114, column: 2)
!4045 = !DILocation(line: 0, scope: !4034)
!4046 = !DILocation(line: 2106, column: 2, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4034, file: !475, line: 2106, column: 2)
!4048 = !DILocation(line: 2106, column: 2, scope: !4034)
!4049 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !4050)
!4050 = distinct !DILocation(line: 2106, column: 2, scope: !4051)
!4051 = distinct !DILexicalBlock(scope: !4047, file: !475, line: 2106, column: 2)
!4052 = !DILocation(line: 0, scope: !3742, inlinedAt: !4050)
!4053 = !DILocation(line: 2106, column: 2, scope: !4051)
!4054 = !DILocation(line: 2106, column: 2, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4056, file: !475, line: 2106, column: 2)
!4056 = distinct !DILexicalBlock(scope: !4051, file: !475, line: 2106, column: 2)
!4057 = distinct !{!4057, !4058, !4058, !1359}
!4058 = !DILocation(line: 2106, column: 2, scope: !4056)
!4059 = !DILocation(line: 2113, column: 2, scope: !4034)
!4060 = !DILocation(line: 2115, column: 3, scope: !4044)
!4061 = !DILocation(line: 2117, column: 7, scope: !4043)
!4062 = !DILocation(line: 2117, column: 28, scope: !4043)
!4063 = !DILocation(line: 2117, column: 7, scope: !4044)
!4064 = !DILocation(line: 2119, column: 8, scope: !4041)
!4065 = !DILocation(line: 2119, column: 31, scope: !4041)
!4066 = !DILocation(line: 2119, column: 8, scope: !4042)
!4067 = !DILocation(line: 2123, column: 12, scope: !4040)
!4068 = !{!4069, !3475, i64 0}
!4069 = !{!"xLIST", !3475, i64 0, !1600, i64 4, !4070, i64 8}
!4070 = !{!"xMINI_LIST_ITEM", !2443, i64 0, !1600, i64 4, !1600, i64 8}
!4071 = !DILocation(line: 2123, column: 5, scope: !4040)
!4072 = !DILocation(line: 2125, column: 26, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4040, file: !475, line: 2124, column: 5)
!4074 = !{!4069, !1600, i64 12}
!4075 = !{!3791, !1600, i64 12}
!4076 = !DILocation(line: 2126, column: 39, scope: !4073)
!4077 = !DILocation(line: 2126, column: 15, scope: !4073)
!4078 = !DILocation(line: 2127, column: 39, scope: !4073)
!4079 = !DILocation(line: 2127, column: 15, scope: !4073)
!4080 = !DILocation(line: 2128, column: 6, scope: !4073)
!4081 = !DILocation(line: 2132, column: 17, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4073, file: !475, line: 2132, column: 10)
!4083 = !DILocation(line: 2132, column: 31, scope: !4082)
!4084 = !DILocation(line: 2132, column: 45, scope: !4082)
!4085 = !DILocation(line: 2132, column: 28, scope: !4082)
!4086 = !DILocation(line: 2132, column: 10, scope: !4073)
!4087 = !DILocation(line: 2134, column: 21, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4082, file: !475, line: 2133, column: 6)
!4089 = !DILocation(line: 2135, column: 6, scope: !4088)
!4090 = distinct !{!4090, !4071, !4091, !1358, !1359}
!4091 = !DILocation(line: 2140, column: 5, scope: !4040)
!4092 = !DILocation(line: 2142, column: 15, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4040, file: !475, line: 2142, column: 9)
!4094 = !DILocation(line: 2142, column: 9, scope: !4040)
!4095 = !DILocation(line: 2150, column: 6, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4093, file: !475, line: 2143, column: 5)
!4097 = !DILocation(line: 2151, column: 5, scope: !4096)
!4098 = !DILocation(line: 2158, column: 35, scope: !4039)
!4099 = !DILocation(line: 0, scope: !4039)
!4100 = !DILocation(line: 2160, column: 25, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4039, file: !475, line: 2160, column: 10)
!4102 = !DILocation(line: 2160, column: 10, scope: !4039)
!4103 = !DILocation(line: 2164, column: 12, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4105, file: !475, line: 2164, column: 12)
!4105 = distinct !DILexicalBlock(scope: !4106, file: !475, line: 2163, column: 7)
!4106 = distinct !DILexicalBlock(scope: !4101, file: !475, line: 2161, column: 6)
!4107 = !DILocation(line: 2172, column: 8, scope: !4105)
!4108 = !DILocation(line: 2173, column: 31, scope: !4106)
!4109 = !DILocation(line: 2173, column: 7, scope: !4105)
!4110 = distinct !{!4110, !4111, !4112, !1358, !1359}
!4111 = !DILocation(line: 2162, column: 7, scope: !4106)
!4112 = !DILocation(line: 2173, column: 52, scope: !4106)
!4113 = !DILocation(line: 2175, column: 21, scope: !4106)
!4114 = !DILocation(line: 2176, column: 6, scope: !4106)
!4115 = !DILocation(line: 2183, column: 9, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4040, file: !475, line: 2183, column: 9)
!4117 = !DILocation(line: 2196, column: 4, scope: !4040)
!4118 = !DILocation(line: 2203, column: 2, scope: !4034)
!4119 = !DILocation(line: 2205, column: 2, scope: !4034)
!4120 = distinct !DISubprogram(name: "prvResetNextTaskUnblockTime", scope: !475, file: !475, line: 3724, type: !99, scopeLine: 3725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4121)
!4121 = !{!4122}
!4122 = !DILocalVariable(name: "pxTCB", scope: !4120, file: !475, line: 3726, type: !486)
!4123 = !DILocation(line: 3728, column: 6, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4120, file: !475, line: 3728, column: 6)
!4125 = !DILocation(line: 3728, column: 6, scope: !4120)
!4126 = !DILocation(line: 3742, column: 27, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4124, file: !475, line: 3737, column: 2)
!4128 = !DILocation(line: 0, scope: !4120)
!4129 = !DILocation(line: 3743, column: 26, scope: !4127)
!4130 = !DILocation(line: 0, scope: !4124)
!4131 = !DILocation(line: 3745, column: 1, scope: !4120)
!4132 = distinct !DISubprogram(name: "xTaskIncrementTick", scope: !475, file: !475, line: 2583, type: !3495, scopeLine: 2584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4133)
!4133 = !{!4134, !4135, !4136, !4137, !4140}
!4134 = !DILocalVariable(name: "pxTCB", scope: !4132, file: !475, line: 2585, type: !486)
!4135 = !DILocalVariable(name: "xItemValue", scope: !4132, file: !475, line: 2586, type: !61)
!4136 = !DILocalVariable(name: "xSwitchRequired", scope: !4132, file: !475, line: 2587, type: !460)
!4137 = !DILocalVariable(name: "xConstTickCount", scope: !4138, file: !475, line: 2597, type: !3951)
!4138 = distinct !DILexicalBlock(scope: !4139, file: !475, line: 2594, column: 2)
!4139 = distinct !DILexicalBlock(scope: !4132, file: !475, line: 2593, column: 6)
!4140 = !DILocalVariable(name: "pxTemp", scope: !4141, file: !475, line: 2605, type: !564)
!4141 = distinct !DILexicalBlock(scope: !4142, file: !475, line: 2605, column: 4)
!4142 = distinct !DILexicalBlock(scope: !4143, file: !475, line: 2604, column: 3)
!4143 = distinct !DILexicalBlock(scope: !4138, file: !475, line: 2603, column: 7)
!4144 = !DILocation(line: 0, scope: !4132)
!4145 = !DILocation(line: 2593, column: 6, scope: !4139)
!4146 = !DILocation(line: 2593, column: 27, scope: !4139)
!4147 = !DILocation(line: 2593, column: 6, scope: !4132)
!4148 = !DILocation(line: 2597, column: 38, scope: !4138)
!4149 = !DILocation(line: 2597, column: 49, scope: !4138)
!4150 = !DILocation(line: 0, scope: !4138)
!4151 = !DILocation(line: 2601, column: 14, scope: !4138)
!4152 = !DILocation(line: 2603, column: 23, scope: !4143)
!4153 = !DILocation(line: 2603, column: 7, scope: !4138)
!4154 = !DILocation(line: 2605, column: 4, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4141, file: !475, line: 2605, column: 4)
!4156 = !DILocation(line: 2605, column: 4, scope: !4141)
!4157 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !4158)
!4158 = distinct !DILocation(line: 2605, column: 4, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4155, file: !475, line: 2605, column: 4)
!4160 = !DILocation(line: 0, scope: !3742, inlinedAt: !4158)
!4161 = !DILocation(line: 2605, column: 4, scope: !4159)
!4162 = !DILocation(line: 2605, column: 4, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4164, file: !475, line: 2605, column: 4)
!4164 = distinct !DILexicalBlock(scope: !4159, file: !475, line: 2605, column: 4)
!4165 = distinct !{!4165, !4166, !4166, !1359}
!4166 = !DILocation(line: 2605, column: 4, scope: !4164)
!4167 = !DILocation(line: 0, scope: !4141)
!4168 = !DILocation(line: 2606, column: 3, scope: !4142)
!4169 = !DILocation(line: 2616, column: 26, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !4138, file: !475, line: 2616, column: 7)
!4171 = !DILocation(line: 2616, column: 23, scope: !4170)
!4172 = !DILocation(line: 2616, column: 7, scope: !4138)
!4173 = !DILocation(line: 2620, column: 9, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4175, file: !475, line: 2620, column: 9)
!4175 = distinct !DILexicalBlock(scope: !4176, file: !475, line: 2619, column: 4)
!4176 = distinct !DILexicalBlock(scope: !4177, file: !475, line: 2618, column: 4)
!4177 = distinct !DILexicalBlock(scope: !4178, file: !475, line: 2618, column: 4)
!4178 = distinct !DILexicalBlock(scope: !4170, file: !475, line: 2617, column: 3)
!4179 = !DILocation(line: 2620, column: 9, scope: !4175)
!4180 = !DILocation(line: 2627, column: 27, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4174, file: !475, line: 2621, column: 5)
!4182 = !DILocation(line: 2628, column: 6, scope: !4181)
!4183 = !DILocation(line: 2636, column: 26, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4174, file: !475, line: 2631, column: 5)
!4185 = !DILocation(line: 2637, column: 19, scope: !4184)
!4186 = !DILocation(line: 2639, column: 26, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4184, file: !475, line: 2639, column: 10)
!4188 = !DILocation(line: 2639, column: 10, scope: !4184)
!4189 = !DILocation(line: 2646, column: 28, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !4187, file: !475, line: 2640, column: 6)
!4191 = !DILocation(line: 2647, column: 7, scope: !4190)
!4192 = !DILocation(line: 2655, column: 15, scope: !4184)
!4193 = !DILocation(line: 2659, column: 10, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !4184, file: !475, line: 2659, column: 10)
!4195 = !{!3790, !1600, i64 40}
!4196 = !DILocation(line: 2659, column: 64, scope: !4194)
!4197 = !DILocation(line: 2659, column: 10, scope: !4184)
!4198 = !DILocation(line: 2661, column: 16, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4194, file: !475, line: 2660, column: 6)
!4200 = !DILocation(line: 2662, column: 6, scope: !4199)
!4201 = !DILocation(line: 2670, column: 6, scope: !4184)
!4202 = distinct !{!4202, !4203, !4204, !1359}
!4203 = !DILocation(line: 2618, column: 4, scope: !4177)
!4204 = !DILocation(line: 2691, column: 4, scope: !4177)
!4205 = !DILocation(line: 2727, column: 3, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4139, file: !475, line: 2726, column: 2)
!4207 = !DILocation(line: 2751, column: 2, scope: !4132)
!4208 = distinct !DISubprogram(name: "vTaskStartScheduler", scope: !475, file: !475, line: 1895, type: !99, scopeLine: 1896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4209)
!4209 = !{!4210, !4211, !4213, !4214}
!4210 = !DILocalVariable(name: "xReturn", scope: !4208, file: !475, line: 1897, type: !460)
!4211 = !DILocalVariable(name: "pxIdleTaskTCBBuffer", scope: !4212, file: !475, line: 1902, type: !3702)
!4212 = distinct !DILexicalBlock(scope: !4208, file: !475, line: 1901, column: 2)
!4213 = !DILocalVariable(name: "pxIdleTaskStackBuffer", scope: !4212, file: !475, line: 1903, type: !84)
!4214 = !DILocalVariable(name: "ulIdleTaskStackSize", scope: !4212, file: !475, line: 1904, type: !21)
!4215 = !DILocation(line: 1902, column: 3, scope: !4212)
!4216 = !DILocation(line: 0, scope: !4212)
!4217 = !DILocation(line: 1902, column: 17, scope: !4212)
!4218 = !DILocation(line: 1903, column: 3, scope: !4212)
!4219 = !DILocation(line: 1903, column: 16, scope: !4212)
!4220 = !DILocation(line: 1904, column: 3, scope: !4212)
!4221 = !DILocation(line: 1908, column: 3, scope: !4212)
!4222 = !DILocation(line: 1911, column: 13, scope: !4212)
!4223 = !DILocation(line: 1914, column: 13, scope: !4212)
!4224 = !DILocation(line: 1915, column: 13, scope: !4212)
!4225 = !DILocation(line: 1909, column: 21, scope: !4212)
!4226 = !DILocation(line: 1909, column: 19, scope: !4212)
!4227 = !DILocation(line: 1917, column: 23, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4212, file: !475, line: 1917, column: 7)
!4229 = !DILocation(line: 0, scope: !4208)
!4230 = !DILocation(line: 1925, column: 2, scope: !4208)
!4231 = !DILocation(line: 1951, column: 6, scope: !4208)
!4232 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !4233)
!4233 = distinct !DILocation(line: 1967, column: 3, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4235, file: !475, line: 1952, column: 2)
!4235 = distinct !DILexicalBlock(scope: !4208, file: !475, line: 1951, column: 6)
!4236 = !DILocation(line: 0, scope: !3742, inlinedAt: !4233)
!4237 = !DILocation(line: 1977, column: 24, scope: !4234)
!4238 = !DILocation(line: 1978, column: 21, scope: !4234)
!4239 = !DILocation(line: 1979, column: 14, scope: !4234)
!4240 = !DILocation(line: 1991, column: 7, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4234, file: !475, line: 1991, column: 7)
!4242 = !DILocation(line: 2000, column: 2, scope: !4234)
!4243 = !DILocation(line: 2012, column: 1, scope: !4208)
!4244 = distinct !DISubprogram(name: "prvIdleTask", scope: !475, file: !475, line: 3218, type: !1308, scopeLine: 3219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4245)
!4245 = !{!4246}
!4246 = !DILocalVariable(name: "pvParameters", arg: 1, scope: !4244, file: !475, line: 3218, type: !54)
!4247 = !DILocation(line: 0, scope: !4244)
!4248 = !DILocation(line: 3231, column: 2, scope: !4244)
!4249 = !DILocation(line: 3243, column: 4, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4251, file: !475, line: 3243, column: 4)
!4251 = distinct !DILexicalBlock(scope: !4252, file: !475, line: 3238, column: 3)
!4252 = distinct !DILexicalBlock(scope: !4253, file: !475, line: 3232, column: 2)
!4253 = distinct !DILexicalBlock(scope: !4254, file: !475, line: 3231, column: 2)
!4254 = distinct !DILexicalBlock(scope: !4244, file: !475, line: 3231, column: 2)
!4255 = !{i64 2148159436}
!4256 = !{i64 2148159487}
!4257 = !DILocation(line: 3231, column: 2, scope: !4253)
!4258 = distinct !{!4258, !4259, !4260, !1359}
!4259 = !DILocation(line: 3231, column: 2, scope: !4254)
!4260 = !DILocation(line: 3331, column: 2, scope: !4254)
!4261 = distinct !DISubprogram(name: "vTaskEndScheduler", scope: !475, file: !475, line: 2015, type: !99, scopeLine: 2016, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !101)
!4262 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !4263)
!4263 = distinct !DILocation(line: 2020, column: 2, scope: !4261)
!4264 = !DILocation(line: 0, scope: !3742, inlinedAt: !4263)
!4265 = !DILocation(line: 2021, column: 20, scope: !4261)
!4266 = !DILocation(line: 2022, column: 2, scope: !4261)
!4267 = !DILocation(line: 2023, column: 1, scope: !4261)
!4268 = distinct !DISubprogram(name: "xTaskGetTickCount", scope: !475, file: !475, line: 2209, type: !4269, scopeLine: 2210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4271)
!4269 = !DISubroutineType(types: !4270)
!4270 = !{!61}
!4271 = !{!4272}
!4272 = !DILocalVariable(name: "xTicks", scope: !4268, file: !475, line: 2211, type: !61)
!4273 = !DILocation(line: 2216, column: 12, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4268, file: !475, line: 2215, column: 2)
!4275 = !DILocation(line: 0, scope: !4268)
!4276 = !DILocation(line: 2220, column: 2, scope: !4268)
!4277 = distinct !DISubprogram(name: "xTaskGetTickCountFromISR", scope: !475, file: !475, line: 2224, type: !4269, scopeLine: 2225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4278)
!4278 = !{!4279, !4280}
!4279 = !DILocalVariable(name: "xReturn", scope: !4277, file: !475, line: 2226, type: !61)
!4280 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !4277, file: !475, line: 2227, type: !43)
!4281 = !DILocation(line: 2243, column: 2, scope: !4277)
!4282 = !DILocation(line: 0, scope: !4277)
!4283 = !DILocation(line: 2247, column: 13, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4277, file: !475, line: 2246, column: 2)
!4285 = !DILocation(line: 2251, column: 2, scope: !4277)
!4286 = distinct !DISubprogram(name: "uxTaskGetNumberOfTasks", scope: !475, file: !475, line: 2255, type: !4287, scopeLine: 2256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !101)
!4287 = !DISubroutineType(types: !4288)
!4288 = !{!43}
!4289 = !DILocation(line: 2259, column: 9, scope: !4286)
!4290 = !DILocation(line: 2259, column: 2, scope: !4286)
!4291 = distinct !DISubprogram(name: "pcTaskGetName", scope: !475, file: !475, line: 2263, type: !4292, scopeLine: 2264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4294)
!4292 = !DISubroutineType(types: !4293)
!4293 = !{!212, !512}
!4294 = !{!4295, !4296}
!4295 = !DILocalVariable(name: "xTaskToQuery", arg: 1, scope: !4291, file: !475, line: 2263, type: !512)
!4296 = !DILocalVariable(name: "pxTCB", scope: !4291, file: !475, line: 2265, type: !486)
!4297 = !DILocation(line: 0, scope: !4291)
!4298 = !DILocation(line: 2269, column: 10, scope: !4291)
!4299 = !DILocation(line: 2270, column: 2, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4291, file: !475, line: 2270, column: 2)
!4301 = !DILocation(line: 2270, column: 2, scope: !4291)
!4302 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !4303)
!4303 = distinct !DILocation(line: 2270, column: 2, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !4300, file: !475, line: 2270, column: 2)
!4305 = !DILocation(line: 0, scope: !3742, inlinedAt: !4303)
!4306 = !DILocation(line: 2270, column: 2, scope: !4304)
!4307 = !DILocation(line: 2270, column: 2, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4309, file: !475, line: 2270, column: 2)
!4309 = distinct !DILexicalBlock(scope: !4304, file: !475, line: 2270, column: 2)
!4310 = distinct !{!4310, !4311, !4311, !1359}
!4311 = !DILocation(line: 2270, column: 2, scope: !4309)
!4312 = !DILocation(line: 2271, column: 12, scope: !4291)
!4313 = !DILocation(line: 2271, column: 2, scope: !4291)
!4314 = distinct !DISubprogram(name: "vTaskSwitchContext", scope: !475, file: !475, line: 2845, type: !99, scopeLine: 2846, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4315)
!4315 = !{!4316, !4320}
!4316 = !DILocalVariable(name: "uxTopPriority", scope: !4317, file: !475, line: 2890, type: !43)
!4317 = distinct !DILexicalBlock(scope: !4318, file: !475, line: 2890, column: 3)
!4318 = distinct !DILexicalBlock(scope: !4319, file: !475, line: 2854, column: 2)
!4319 = distinct !DILexicalBlock(scope: !4314, file: !475, line: 2847, column: 6)
!4320 = !DILocalVariable(name: "pxConstList", scope: !4321, file: !475, line: 2890, type: !4322)
!4321 = distinct !DILexicalBlock(scope: !4317, file: !475, line: 2890, column: 3)
!4322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !564)
!4323 = !DILocation(line: 2847, column: 6, scope: !4319)
!4324 = !DILocation(line: 2847, column: 27, scope: !4319)
!4325 = !DILocation(line: 2847, column: 6, scope: !4314)
!4326 = !DILocation(line: 2851, column: 17, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4319, file: !475, line: 2848, column: 2)
!4328 = !DILocation(line: 2852, column: 2, scope: !4327)
!4329 = !DILocation(line: 2855, column: 17, scope: !4318)
!4330 = !DILocation(line: 2890, column: 3, scope: !4317)
!4331 = !DILocalVariable(name: "ulBitmap", arg: 1, scope: !4332, file: !44, line: 130, type: !21)
!4332 = distinct !DISubprogram(name: "ucPortCountLeadingZeros", scope: !44, file: !44, line: 130, type: !4333, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4335)
!4333 = !DISubroutineType(types: !4334)
!4334 = !{!39, !21}
!4335 = !{!4331, !4336}
!4336 = !DILocalVariable(name: "ucReturn", scope: !4332, file: !44, line: 132, type: !39)
!4337 = !DILocation(line: 0, scope: !4332, inlinedAt: !4338)
!4338 = distinct !DILocation(line: 2890, column: 3, scope: !4317)
!4339 = !DILocation(line: 134, column: 3, scope: !4332, inlinedAt: !4338)
!4340 = !{i64 469520}
!4341 = !DILocation(line: 0, scope: !4317)
!4342 = !DILocation(line: 2890, column: 3, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4317, file: !475, line: 2890, column: 3)
!4344 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !4345)
!4345 = distinct !DILocation(line: 2890, column: 3, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4343, file: !475, line: 2890, column: 3)
!4347 = !DILocation(line: 0, scope: !3742, inlinedAt: !4345)
!4348 = !DILocation(line: 2890, column: 3, scope: !4346)
!4349 = !DILocation(line: 2890, column: 3, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4351, file: !475, line: 2890, column: 3)
!4351 = distinct !DILexicalBlock(scope: !4346, file: !475, line: 2890, column: 3)
!4352 = distinct !{!4352, !4353, !4353, !1359}
!4353 = !DILocation(line: 2890, column: 3, scope: !4351)
!4354 = !DILocation(line: 0, scope: !4321)
!4355 = !DILocation(line: 2890, column: 3, scope: !4321)
!4356 = !{!4069, !1600, i64 4}
!4357 = !{!3791, !1600, i64 4}
!4358 = !DILocation(line: 2890, column: 3, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4321, file: !475, line: 2890, column: 3)
!4360 = !DILocation(line: 2890, column: 3, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4359, file: !475, line: 2890, column: 3)
!4362 = !DILocation(line: 2901, column: 1, scope: !4314)
!4363 = distinct !DISubprogram(name: "vTaskPlaceOnEventList", scope: !475, file: !475, line: 2904, type: !4364, scopeLine: 2905, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4366)
!4364 = !DISubroutineType(types: !4365)
!4365 = !{null, !4322, !3951}
!4366 = !{!4367, !4368}
!4367 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !4363, file: !475, line: 2904, type: !4322)
!4368 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !4363, file: !475, line: 2904, type: !3951)
!4369 = !DILocation(line: 0, scope: !4363)
!4370 = !DILocation(line: 2906, column: 2, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4363, file: !475, line: 2906, column: 2)
!4372 = !DILocation(line: 2906, column: 2, scope: !4363)
!4373 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !4374)
!4374 = distinct !DILocation(line: 2906, column: 2, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4371, file: !475, line: 2906, column: 2)
!4376 = !DILocation(line: 0, scope: !3742, inlinedAt: !4374)
!4377 = !DILocation(line: 2906, column: 2, scope: !4375)
!4378 = !DILocation(line: 2906, column: 2, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4380, file: !475, line: 2906, column: 2)
!4380 = distinct !DILexicalBlock(scope: !4375, file: !475, line: 2906, column: 2)
!4381 = distinct !{!4381, !4382, !4382, !1359}
!4382 = !DILocation(line: 2906, column: 2, scope: !4380)
!4383 = !DILocation(line: 2915, column: 31, scope: !4363)
!4384 = !DILocation(line: 2915, column: 45, scope: !4363)
!4385 = !DILocation(line: 2915, column: 2, scope: !4363)
!4386 = !DILocation(line: 2917, column: 2, scope: !4363)
!4387 = !DILocation(line: 2918, column: 1, scope: !4363)
!4388 = distinct !DISubprogram(name: "vTaskPlaceOnUnorderedEventList", scope: !475, file: !475, line: 2921, type: !4389, scopeLine: 2922, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4391)
!4389 = !DISubroutineType(types: !4390)
!4390 = !{null, !564, !3951, !3951}
!4391 = !{!4392, !4393, !4394}
!4392 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !4388, file: !475, line: 2921, type: !564)
!4393 = !DILocalVariable(name: "xItemValue", arg: 2, scope: !4388, file: !475, line: 2921, type: !3951)
!4394 = !DILocalVariable(name: "xTicksToWait", arg: 3, scope: !4388, file: !475, line: 2921, type: !3951)
!4395 = !DILocation(line: 0, scope: !4388)
!4396 = !DILocation(line: 2923, column: 2, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4388, file: !475, line: 2923, column: 2)
!4398 = !DILocation(line: 2923, column: 2, scope: !4388)
!4399 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !4400)
!4400 = distinct !DILocation(line: 2923, column: 2, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4397, file: !475, line: 2923, column: 2)
!4402 = !DILocation(line: 0, scope: !3742, inlinedAt: !4400)
!4403 = !DILocation(line: 2923, column: 2, scope: !4401)
!4404 = !DILocation(line: 2923, column: 2, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4406, file: !475, line: 2923, column: 2)
!4406 = distinct !DILexicalBlock(scope: !4401, file: !475, line: 2923, column: 2)
!4407 = distinct !{!4407, !4408, !4408, !1359}
!4408 = !DILocation(line: 2923, column: 2, scope: !4406)
!4409 = !DILocation(line: 2927, column: 2, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4388, file: !475, line: 2927, column: 2)
!4411 = !DILocation(line: 2927, column: 2, scope: !4388)
!4412 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !4413)
!4413 = distinct !DILocation(line: 2927, column: 2, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4410, file: !475, line: 2927, column: 2)
!4415 = !DILocation(line: 0, scope: !3742, inlinedAt: !4413)
!4416 = !DILocation(line: 2927, column: 2, scope: !4414)
!4417 = !DILocation(line: 2927, column: 2, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4419, file: !475, line: 2927, column: 2)
!4419 = distinct !DILexicalBlock(scope: !4414, file: !475, line: 2927, column: 2)
!4420 = distinct !{!4420, !4421, !4421, !1359}
!4421 = !DILocation(line: 2927, column: 2, scope: !4419)
!4422 = !DILocation(line: 2932, column: 2, scope: !4388)
!4423 = !DILocation(line: 2939, column: 34, scope: !4388)
!4424 = !DILocation(line: 2939, column: 48, scope: !4388)
!4425 = !DILocation(line: 2939, column: 2, scope: !4388)
!4426 = !DILocation(line: 2941, column: 2, scope: !4388)
!4427 = !DILocation(line: 2942, column: 1, scope: !4388)
!4428 = distinct !DISubprogram(name: "xTaskRemoveFromEventList", scope: !475, file: !475, line: 2978, type: !4429, scopeLine: 2979, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4434)
!4429 = !DISubroutineType(types: !4430)
!4430 = !{!460, !4431}
!4431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4432)
!4432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4433, size: 32)
!4433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !516)
!4434 = !{!4435, !4436, !4437}
!4435 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !4428, file: !475, line: 2978, type: !4431)
!4436 = !DILocalVariable(name: "pxUnblockedTCB", scope: !4428, file: !475, line: 2980, type: !486)
!4437 = !DILocalVariable(name: "xReturn", scope: !4428, file: !475, line: 2981, type: !460)
!4438 = !DILocation(line: 0, scope: !4428)
!4439 = !DILocation(line: 2996, column: 31, scope: !4428)
!4440 = !DILocation(line: 2997, column: 2, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4428, file: !475, line: 2997, column: 2)
!4442 = !DILocation(line: 2997, column: 2, scope: !4428)
!4443 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !4444)
!4444 = distinct !DILocation(line: 2997, column: 2, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4441, file: !475, line: 2997, column: 2)
!4446 = !DILocation(line: 0, scope: !3742, inlinedAt: !4444)
!4447 = !DILocation(line: 2997, column: 2, scope: !4445)
!4448 = !DILocation(line: 2997, column: 2, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4450, file: !475, line: 2997, column: 2)
!4450 = distinct !DILexicalBlock(scope: !4445, file: !475, line: 2997, column: 2)
!4451 = distinct !{!4451, !4452, !4452, !1359}
!4452 = !DILocation(line: 2997, column: 2, scope: !4450)
!4453 = !DILocation(line: 2998, column: 44, scope: !4428)
!4454 = !DILocation(line: 2998, column: 11, scope: !4428)
!4455 = !DILocation(line: 3000, column: 6, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4428, file: !475, line: 3000, column: 6)
!4457 = !DILocation(line: 3000, column: 27, scope: !4456)
!4458 = !DILocation(line: 3000, column: 6, scope: !4428)
!4459 = !DILocation(line: 3002, column: 45, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4456, file: !475, line: 3001, column: 2)
!4461 = !DILocation(line: 3002, column: 12, scope: !4460)
!4462 = !DILocation(line: 3003, column: 3, scope: !4460)
!4463 = !DILocation(line: 3004, column: 2, scope: !4460)
!4464 = !DILocation(line: 3009, column: 3, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4456, file: !475, line: 3006, column: 2)
!4466 = !DILocation(line: 3012, column: 22, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4428, file: !475, line: 3012, column: 6)
!4468 = !DILocation(line: 3012, column: 35, scope: !4467)
!4469 = !DILocation(line: 3012, column: 49, scope: !4467)
!4470 = !DILocation(line: 3012, column: 33, scope: !4467)
!4471 = !DILocation(line: 3012, column: 6, scope: !4428)
!4472 = !DILocation(line: 3021, column: 17, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4467, file: !475, line: 3013, column: 2)
!4474 = !DILocation(line: 3022, column: 2, scope: !4473)
!4475 = !DILocation(line: 0, scope: !4467)
!4476 = !DILocation(line: 3042, column: 2, scope: !4428)
!4477 = distinct !DISubprogram(name: "vTaskRemoveFromUnorderedEventList", scope: !475, file: !475, line: 3046, type: !4478, scopeLine: 3047, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4480)
!4478 = !DISubroutineType(types: !4479)
!4479 = !{null, !522, !3951}
!4480 = !{!4481, !4482, !4483}
!4481 = !DILocalVariable(name: "pxEventListItem", arg: 1, scope: !4477, file: !475, line: 3046, type: !522)
!4482 = !DILocalVariable(name: "xItemValue", arg: 2, scope: !4477, file: !475, line: 3046, type: !3951)
!4483 = !DILocalVariable(name: "pxUnblockedTCB", scope: !4477, file: !475, line: 3048, type: !486)
!4484 = !DILocation(line: 0, scope: !4477)
!4485 = !DILocation(line: 3052, column: 2, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4477, file: !475, line: 3052, column: 2)
!4487 = !DILocation(line: 3052, column: 2, scope: !4477)
!4488 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !4489)
!4489 = distinct !DILocation(line: 3052, column: 2, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4486, file: !475, line: 3052, column: 2)
!4491 = !DILocation(line: 0, scope: !3742, inlinedAt: !4489)
!4492 = !DILocation(line: 3052, column: 2, scope: !4490)
!4493 = !DILocation(line: 3052, column: 2, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4495, file: !475, line: 3052, column: 2)
!4495 = distinct !DILexicalBlock(scope: !4490, file: !475, line: 3052, column: 2)
!4496 = distinct !{!4496, !4497, !4497, !1359}
!4497 = !DILocation(line: 3052, column: 2, scope: !4495)
!4498 = !DILocation(line: 3055, column: 2, scope: !4477)
!4499 = !{!3791, !2443, i64 0}
!4500 = !DILocation(line: 3059, column: 31, scope: !4477)
!4501 = !DILocation(line: 3060, column: 2, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4477, file: !475, line: 3060, column: 2)
!4503 = !DILocation(line: 3060, column: 2, scope: !4477)
!4504 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !4505)
!4505 = distinct !DILocation(line: 3060, column: 2, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4502, file: !475, line: 3060, column: 2)
!4507 = !DILocation(line: 0, scope: !3742, inlinedAt: !4505)
!4508 = !DILocation(line: 3060, column: 2, scope: !4506)
!4509 = !DILocation(line: 3060, column: 2, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4511, file: !475, line: 3060, column: 2)
!4511 = distinct !DILexicalBlock(scope: !4506, file: !475, line: 3060, column: 2)
!4512 = distinct !{!4512, !4513, !4513, !1359}
!4513 = !DILocation(line: 3060, column: 2, scope: !4511)
!4514 = !DILocation(line: 3061, column: 11, scope: !4477)
!4515 = !DILocation(line: 3066, column: 44, scope: !4477)
!4516 = !DILocation(line: 3066, column: 11, scope: !4477)
!4517 = !DILocation(line: 3067, column: 2, scope: !4477)
!4518 = !DILocation(line: 3069, column: 22, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4477, file: !475, line: 3069, column: 6)
!4520 = !DILocation(line: 3069, column: 35, scope: !4519)
!4521 = !DILocation(line: 3069, column: 49, scope: !4519)
!4522 = !DILocation(line: 3069, column: 33, scope: !4519)
!4523 = !DILocation(line: 3069, column: 6, scope: !4477)
!4524 = !DILocation(line: 3075, column: 17, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4519, file: !475, line: 3070, column: 2)
!4526 = !DILocation(line: 3076, column: 2, scope: !4525)
!4527 = !DILocation(line: 3077, column: 1, scope: !4477)
!4528 = distinct !DISubprogram(name: "vTaskSetTimeOutState", scope: !475, file: !475, line: 3080, type: !4529, scopeLine: 3081, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4538)
!4529 = !DISubroutineType(types: !4530)
!4530 = !{null, !4531}
!4531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4532)
!4532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4533, size: 32)
!4533 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimeOut_t", file: !478, line: 97, baseType: !4534)
!4534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xTIME_OUT", file: !478, line: 93, size: 64, elements: !4535)
!4535 = !{!4536, !4537}
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "xOverflowCount", scope: !4534, file: !478, line: 95, baseType: !460, size: 32)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "xTimeOnEntering", scope: !4534, file: !478, line: 96, baseType: !61, size: 32, offset: 32)
!4538 = !{!4539}
!4539 = !DILocalVariable(name: "pxTimeOut", arg: 1, scope: !4528, file: !475, line: 3080, type: !4531)
!4540 = !DILocation(line: 0, scope: !4528)
!4541 = !DILocation(line: 3082, column: 2, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4528, file: !475, line: 3082, column: 2)
!4543 = !DILocation(line: 3082, column: 2, scope: !4528)
!4544 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !4545)
!4545 = distinct !DILocation(line: 3082, column: 2, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4542, file: !475, line: 3082, column: 2)
!4547 = !DILocation(line: 0, scope: !3742, inlinedAt: !4545)
!4548 = !DILocation(line: 3082, column: 2, scope: !4546)
!4549 = !DILocation(line: 3082, column: 2, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4551, file: !475, line: 3082, column: 2)
!4551 = distinct !DILexicalBlock(scope: !4546, file: !475, line: 3082, column: 2)
!4552 = distinct !{!4552, !4553, !4553, !1359}
!4553 = !DILocation(line: 3082, column: 2, scope: !4551)
!4554 = !DILocation(line: 3083, column: 2, scope: !4528)
!4555 = !DILocation(line: 3085, column: 31, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4528, file: !475, line: 3084, column: 2)
!4557 = !DILocation(line: 3085, column: 14, scope: !4556)
!4558 = !DILocation(line: 3085, column: 29, scope: !4556)
!4559 = !{!4560, !3475, i64 0}
!4560 = !{!"xTIME_OUT", !3475, i64 0, !2443, i64 4}
!4561 = !DILocation(line: 3086, column: 32, scope: !4556)
!4562 = !DILocation(line: 3086, column: 14, scope: !4556)
!4563 = !DILocation(line: 3086, column: 30, scope: !4556)
!4564 = !{!4560, !2443, i64 4}
!4565 = !DILocation(line: 3088, column: 2, scope: !4528)
!4566 = !DILocation(line: 3089, column: 1, scope: !4528)
!4567 = distinct !DISubprogram(name: "vTaskInternalSetTimeOutState", scope: !475, file: !475, line: 3092, type: !4529, scopeLine: 3093, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4568)
!4568 = !{!4569}
!4569 = !DILocalVariable(name: "pxTimeOut", arg: 1, scope: !4567, file: !475, line: 3092, type: !4531)
!4570 = !DILocation(line: 0, scope: !4567)
!4571 = !DILocation(line: 3095, column: 30, scope: !4567)
!4572 = !DILocation(line: 3095, column: 13, scope: !4567)
!4573 = !DILocation(line: 3095, column: 28, scope: !4567)
!4574 = !DILocation(line: 3096, column: 31, scope: !4567)
!4575 = !DILocation(line: 3096, column: 13, scope: !4567)
!4576 = !DILocation(line: 3096, column: 29, scope: !4567)
!4577 = !DILocation(line: 3097, column: 1, scope: !4567)
!4578 = distinct !DISubprogram(name: "xTaskCheckForTimeOut", scope: !475, file: !475, line: 3100, type: !4579, scopeLine: 3101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4583)
!4579 = !DISubroutineType(types: !4580)
!4580 = !{!460, !4531, !4581}
!4581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4582)
!4582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 32)
!4583 = !{!4584, !4585, !4586, !4587, !4589}
!4584 = !DILocalVariable(name: "pxTimeOut", arg: 1, scope: !4578, file: !475, line: 3100, type: !4531)
!4585 = !DILocalVariable(name: "pxTicksToWait", arg: 2, scope: !4578, file: !475, line: 3100, type: !4581)
!4586 = !DILocalVariable(name: "xReturn", scope: !4578, file: !475, line: 3102, type: !460)
!4587 = !DILocalVariable(name: "xConstTickCount", scope: !4588, file: !475, line: 3110, type: !3951)
!4588 = distinct !DILexicalBlock(scope: !4578, file: !475, line: 3108, column: 2)
!4589 = !DILocalVariable(name: "xElapsedTime", scope: !4588, file: !475, line: 3111, type: !3951)
!4590 = !DILocation(line: 0, scope: !4578)
!4591 = !DILocation(line: 3104, column: 2, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4578, file: !475, line: 3104, column: 2)
!4593 = !DILocation(line: 3104, column: 2, scope: !4578)
!4594 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !4595)
!4595 = distinct !DILocation(line: 3104, column: 2, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4592, file: !475, line: 3104, column: 2)
!4597 = !DILocation(line: 0, scope: !3742, inlinedAt: !4595)
!4598 = !DILocation(line: 3104, column: 2, scope: !4596)
!4599 = !DILocation(line: 3104, column: 2, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4601, file: !475, line: 3104, column: 2)
!4601 = distinct !DILexicalBlock(scope: !4596, file: !475, line: 3104, column: 2)
!4602 = distinct !{!4602, !4603, !4603, !1359}
!4603 = !DILocation(line: 3104, column: 2, scope: !4601)
!4604 = !DILocation(line: 3105, column: 2, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4578, file: !475, line: 3105, column: 2)
!4606 = !DILocation(line: 3105, column: 2, scope: !4578)
!4607 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !4608)
!4608 = distinct !DILocation(line: 3105, column: 2, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4605, file: !475, line: 3105, column: 2)
!4610 = !DILocation(line: 0, scope: !3742, inlinedAt: !4608)
!4611 = !DILocation(line: 3105, column: 2, scope: !4609)
!4612 = !DILocation(line: 3105, column: 2, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4614, file: !475, line: 3105, column: 2)
!4614 = distinct !DILexicalBlock(scope: !4609, file: !475, line: 3105, column: 2)
!4615 = distinct !{!4615, !4616, !4616, !1359}
!4616 = !DILocation(line: 3105, column: 2, scope: !4614)
!4617 = !DILocation(line: 3107, column: 2, scope: !4578)
!4618 = !DILocation(line: 3110, column: 38, scope: !4588)
!4619 = !DILocation(line: 0, scope: !4588)
!4620 = !DILocation(line: 3111, column: 64, scope: !4588)
!4621 = !DILocation(line: 3111, column: 51, scope: !4588)
!4622 = !DILocation(line: 3135, column: 9, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4588, file: !475, line: 3135, column: 7)
!4624 = !DILocation(line: 3135, column: 39, scope: !4623)
!4625 = !DILocation(line: 3135, column: 25, scope: !4623)
!4626 = !DILocation(line: 3135, column: 56, scope: !4623)
!4627 = !DILocation(line: 3144, column: 27, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4623, file: !475, line: 3144, column: 12)
!4629 = !DILocation(line: 3144, column: 25, scope: !4628)
!4630 = !DILocation(line: 3144, column: 12, scope: !4623)
!4631 = !DILocation(line: 3147, column: 19, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4628, file: !475, line: 3145, column: 3)
!4633 = !DILocation(line: 3148, column: 4, scope: !4632)
!4634 = !DILocation(line: 3150, column: 3, scope: !4632)
!4635 = !DILocation(line: 3153, column: 19, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4628, file: !475, line: 3152, column: 3)
!4637 = !DILocation(line: 0, scope: !4623)
!4638 = !DILocation(line: 3157, column: 2, scope: !4578)
!4639 = !DILocation(line: 3159, column: 2, scope: !4578)
!4640 = distinct !DISubprogram(name: "vTaskMissedYield", scope: !475, file: !475, line: 3163, type: !99, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !101)
!4641 = !DILocation(line: 3165, column: 16, scope: !4640)
!4642 = !DILocation(line: 3166, column: 1, scope: !4640)
!4643 = distinct !DISubprogram(name: "uxTaskResetEventItemValue", scope: !475, file: !475, line: 4376, type: !4269, scopeLine: 4377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4644)
!4644 = !{!4645}
!4645 = !DILocalVariable(name: "uxReturn", scope: !4643, file: !475, line: 4378, type: !61)
!4646 = !DILocation(line: 4380, column: 13, scope: !4643)
!4647 = !DILocation(line: 0, scope: !4643)
!4648 = !DILocation(line: 4384, column: 2, scope: !4643)
!4649 = !DILocation(line: 4386, column: 2, scope: !4643)
!4650 = distinct !DISubprogram(name: "ulTaskNotifyTake", scope: !475, file: !475, line: 4409, type: !4651, scopeLine: 4410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4653)
!4651 = !DISubroutineType(types: !4652)
!4652 = !{!21, !460, !61}
!4653 = !{!4654, !4655, !4656}
!4654 = !DILocalVariable(name: "xClearCountOnExit", arg: 1, scope: !4650, file: !475, line: 4409, type: !460)
!4655 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !4650, file: !475, line: 4409, type: !61)
!4656 = !DILocalVariable(name: "ulReturn", scope: !4650, file: !475, line: 4411, type: !21)
!4657 = !DILocation(line: 0, scope: !4650)
!4658 = !DILocation(line: 4413, column: 3, scope: !4650)
!4659 = !DILocation(line: 4416, column: 8, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4661, file: !475, line: 4416, column: 8)
!4661 = distinct !DILexicalBlock(scope: !4650, file: !475, line: 4414, column: 3)
!4662 = !DILocation(line: 4416, column: 22, scope: !4660)
!4663 = !DILocation(line: 4416, column: 38, scope: !4660)
!4664 = !DILocation(line: 4416, column: 8, scope: !4661)
!4665 = !DILocation(line: 4419, column: 5, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4660, file: !475, line: 4417, column: 4)
!4667 = !DILocation(line: 4419, column: 19, scope: !4666)
!4668 = !DILocation(line: 4419, column: 33, scope: !4666)
!4669 = !DILocation(line: 4421, column: 22, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4666, file: !475, line: 4421, column: 9)
!4671 = !DILocation(line: 4421, column: 9, scope: !4666)
!4672 = !DILocation(line: 4423, column: 6, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4670, file: !475, line: 4422, column: 5)
!4674 = !DILocation(line: 4430, column: 6, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4673, file: !475, line: 4430, column: 6)
!4676 = !{i64 2148160556}
!4677 = !{i64 2148160607}
!4678 = !DILocation(line: 4431, column: 5, scope: !4673)
!4679 = !DILocation(line: 4442, column: 3, scope: !4650)
!4680 = !DILocation(line: 4444, column: 3, scope: !4650)
!4681 = !DILocation(line: 4447, column: 15, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4650, file: !475, line: 4445, column: 3)
!4683 = !DILocation(line: 4447, column: 29, scope: !4682)
!4684 = !DILocation(line: 4449, column: 17, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4682, file: !475, line: 4449, column: 8)
!4686 = !DILocation(line: 4449, column: 8, scope: !4682)
!4687 = !DILocation(line: 4451, column: 27, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4689, file: !475, line: 4451, column: 9)
!4689 = distinct !DILexicalBlock(scope: !4685, file: !475, line: 4450, column: 4)
!4690 = !DILocation(line: 4451, column: 9, scope: !4689)
!4691 = !DILocation(line: 0, scope: !4688)
!4692 = !DILocation(line: 4465, column: 4, scope: !4682)
!4693 = !DILocation(line: 4465, column: 18, scope: !4682)
!4694 = !DILocation(line: 4465, column: 32, scope: !4682)
!4695 = !DILocation(line: 4467, column: 3, scope: !4650)
!4696 = !DILocation(line: 4469, column: 3, scope: !4650)
!4697 = distinct !DISubprogram(name: "xTaskNotifyWait", scope: !475, file: !475, line: 4477, type: !4698, scopeLine: 4478, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4700)
!4698 = !DISubroutineType(types: !4699)
!4699 = !{!460, !21, !21, !86, !61}
!4700 = !{!4701, !4702, !4703, !4704, !4705}
!4701 = !DILocalVariable(name: "ulBitsToClearOnEntry", arg: 1, scope: !4697, file: !475, line: 4477, type: !21)
!4702 = !DILocalVariable(name: "ulBitsToClearOnExit", arg: 2, scope: !4697, file: !475, line: 4477, type: !21)
!4703 = !DILocalVariable(name: "pulNotificationValue", arg: 3, scope: !4697, file: !475, line: 4477, type: !86)
!4704 = !DILocalVariable(name: "xTicksToWait", arg: 4, scope: !4697, file: !475, line: 4477, type: !61)
!4705 = !DILocalVariable(name: "xReturn", scope: !4697, file: !475, line: 4479, type: !460)
!4706 = !DILocation(line: 0, scope: !4697)
!4707 = !DILocation(line: 4481, column: 3, scope: !4697)
!4708 = !DILocation(line: 4484, column: 8, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4710, file: !475, line: 4484, column: 8)
!4710 = distinct !DILexicalBlock(scope: !4697, file: !475, line: 4482, column: 3)
!4711 = !DILocation(line: 4484, column: 22, scope: !4709)
!4712 = !DILocation(line: 4484, column: 36, scope: !4709)
!4713 = !DILocation(line: 4484, column: 8, scope: !4710)
!4714 = !DILocation(line: 4489, column: 38, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4709, file: !475, line: 4485, column: 4)
!4716 = !DILocation(line: 4489, column: 5, scope: !4715)
!4717 = !DILocation(line: 4489, column: 19, scope: !4715)
!4718 = !DILocation(line: 4489, column: 35, scope: !4715)
!4719 = !DILocation(line: 4492, column: 5, scope: !4715)
!4720 = !DILocation(line: 4492, column: 19, scope: !4715)
!4721 = !DILocation(line: 4492, column: 33, scope: !4715)
!4722 = !DILocation(line: 4494, column: 22, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4715, file: !475, line: 4494, column: 9)
!4724 = !DILocation(line: 4494, column: 9, scope: !4715)
!4725 = !DILocation(line: 4496, column: 6, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4723, file: !475, line: 4495, column: 5)
!4727 = !DILocation(line: 4503, column: 6, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4726, file: !475, line: 4503, column: 6)
!4729 = !{i64 2148161295}
!4730 = !{i64 2148161346}
!4731 = !DILocation(line: 4504, column: 5, scope: !4726)
!4732 = !DILocation(line: 4515, column: 3, scope: !4697)
!4733 = !DILocation(line: 4517, column: 3, scope: !4697)
!4734 = !DILocation(line: 4521, column: 29, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4736, file: !475, line: 4521, column: 8)
!4736 = distinct !DILexicalBlock(scope: !4697, file: !475, line: 4518, column: 3)
!4737 = !DILocation(line: 4521, column: 8, scope: !4736)
!4738 = !DILocation(line: 4525, column: 29, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4735, file: !475, line: 4522, column: 4)
!4740 = !DILocation(line: 4525, column: 43, scope: !4739)
!4741 = !DILocation(line: 4525, column: 27, scope: !4739)
!4742 = !DILocation(line: 4526, column: 4, scope: !4739)
!4743 = !DILocation(line: 4532, column: 8, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4736, file: !475, line: 4532, column: 8)
!4745 = !DILocation(line: 4532, column: 22, scope: !4744)
!4746 = !DILocation(line: 4532, column: 36, scope: !4744)
!4747 = !DILocation(line: 4532, column: 8, scope: !4736)
!4748 = !DILocation(line: 4541, column: 38, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4744, file: !475, line: 4538, column: 4)
!4750 = !DILocation(line: 4541, column: 5, scope: !4749)
!4751 = !DILocation(line: 4541, column: 19, scope: !4749)
!4752 = !DILocation(line: 4541, column: 35, scope: !4749)
!4753 = !DILocation(line: 0, scope: !4744)
!4754 = !DILocation(line: 4545, column: 4, scope: !4736)
!4755 = !DILocation(line: 4545, column: 18, scope: !4736)
!4756 = !DILocation(line: 4545, column: 32, scope: !4736)
!4757 = !DILocation(line: 4547, column: 3, scope: !4697)
!4758 = !DILocation(line: 4549, column: 3, scope: !4697)
!4759 = distinct !DISubprogram(name: "xTaskGenericNotify", scope: !475, file: !475, line: 4557, type: !4760, scopeLine: 4558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4763)
!4760 = !DISubroutineType(types: !4761)
!4761 = !{!460, !512, !21, !4762, !86}
!4762 = !DIDerivedType(tag: DW_TAG_typedef, name: "eNotifyAction", file: !478, line: 88, baseType: !477)
!4763 = !{!4764, !4765, !4766, !4767, !4768, !4769, !4770}
!4764 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !4759, file: !475, line: 4557, type: !512)
!4765 = !DILocalVariable(name: "ulValue", arg: 2, scope: !4759, file: !475, line: 4557, type: !21)
!4766 = !DILocalVariable(name: "eAction", arg: 3, scope: !4759, file: !475, line: 4557, type: !4762)
!4767 = !DILocalVariable(name: "pulPreviousNotificationValue", arg: 4, scope: !4759, file: !475, line: 4557, type: !86)
!4768 = !DILocalVariable(name: "pxTCB", scope: !4759, file: !475, line: 4559, type: !486)
!4769 = !DILocalVariable(name: "xReturn", scope: !4759, file: !475, line: 4560, type: !460)
!4770 = !DILocalVariable(name: "ucOriginalNotifyState", scope: !4759, file: !475, line: 4561, type: !39)
!4771 = !DILocation(line: 0, scope: !4759)
!4772 = !DILocation(line: 4563, column: 3, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4759, file: !475, line: 4563, column: 3)
!4774 = !DILocation(line: 4563, column: 3, scope: !4759)
!4775 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !4776)
!4776 = distinct !DILocation(line: 4563, column: 3, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4773, file: !475, line: 4563, column: 3)
!4778 = !DILocation(line: 0, scope: !3742, inlinedAt: !4776)
!4779 = !DILocation(line: 4563, column: 3, scope: !4777)
!4780 = !DILocation(line: 4563, column: 3, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4782, file: !475, line: 4563, column: 3)
!4782 = distinct !DILexicalBlock(scope: !4777, file: !475, line: 4563, column: 3)
!4783 = distinct !{!4783, !4784, !4784, !1359}
!4784 = !DILocation(line: 4563, column: 3, scope: !4782)
!4785 = !DILocation(line: 4566, column: 3, scope: !4759)
!4786 = !DILocation(line: 4568, column: 37, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4788, file: !475, line: 4568, column: 8)
!4788 = distinct !DILexicalBlock(scope: !4759, file: !475, line: 4567, column: 3)
!4789 = !DILocation(line: 4568, column: 8, scope: !4788)
!4790 = !DILocation(line: 4570, column: 44, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4787, file: !475, line: 4569, column: 4)
!4792 = !DILocation(line: 4570, column: 35, scope: !4791)
!4793 = !DILocation(line: 4571, column: 4, scope: !4791)
!4794 = !DILocation(line: 4573, column: 35, scope: !4788)
!4795 = !DILocation(line: 4575, column: 25, scope: !4788)
!4796 = !DILocation(line: 4577, column: 4, scope: !4788)
!4797 = !DILocation(line: 4580, column: 13, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4788, file: !475, line: 4578, column: 4)
!4799 = !DILocation(line: 4580, column: 29, scope: !4798)
!4800 = !DILocation(line: 4581, column: 6, scope: !4798)
!4801 = !DILocation(line: 4584, column: 15, scope: !4798)
!4802 = !DILocation(line: 4584, column: 32, scope: !4798)
!4803 = !DILocation(line: 4585, column: 6, scope: !4798)
!4804 = !DILocation(line: 4588, column: 13, scope: !4798)
!4805 = !DILocation(line: 4588, column: 29, scope: !4798)
!4806 = !DILocation(line: 4589, column: 6, scope: !4798)
!4807 = !DILocation(line: 4592, column: 32, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4798, file: !475, line: 4592, column: 10)
!4809 = !DILocation(line: 4592, column: 10, scope: !4798)
!4810 = !DILocation(line: 4594, column: 14, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4808, file: !475, line: 4593, column: 6)
!4812 = !DILocation(line: 4594, column: 30, scope: !4811)
!4813 = !DILocation(line: 4595, column: 6, scope: !4811)
!4814 = !DILocation(line: 4613, column: 30, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4788, file: !475, line: 4613, column: 8)
!4816 = !DILocation(line: 4613, column: 8, scope: !4788)
!4817 = !DILocation(line: 4615, column: 38, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4815, file: !475, line: 4614, column: 4)
!4819 = !DILocation(line: 4615, column: 14, scope: !4818)
!4820 = !DILocation(line: 4616, column: 5, scope: !4818)
!4821 = !DILocation(line: 4619, column: 5, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4818, file: !475, line: 4619, column: 5)
!4823 = !DILocation(line: 4619, column: 5, scope: !4818)
!4824 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !4825)
!4825 = distinct !DILocation(line: 4619, column: 5, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4822, file: !475, line: 4619, column: 5)
!4827 = !DILocation(line: 0, scope: !3742, inlinedAt: !4825)
!4828 = !DILocation(line: 4619, column: 5, scope: !4826)
!4829 = !DILocation(line: 4619, column: 5, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4831, file: !475, line: 4619, column: 5)
!4831 = distinct !DILexicalBlock(scope: !4826, file: !475, line: 4619, column: 5)
!4832 = distinct !{!4832, !4833, !4833, !1359}
!4833 = !DILocation(line: 4619, column: 5, scope: !4831)
!4834 = !DILocation(line: 4637, column: 29, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4818, file: !475, line: 4637, column: 9)
!4836 = !DILocation(line: 4647, column: 4, scope: !4818)
!4837 = !DILocation(line: 4653, column: 3, scope: !4759)
!4838 = !DILocation(line: 4655, column: 3, scope: !4759)
!4839 = distinct !DISubprogram(name: "xTaskGenericNotifyFromISR", scope: !475, file: !475, line: 4663, type: !4840, scopeLine: 4664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4843)
!4840 = !DISubroutineType(types: !4841)
!4841 = !{!460, !512, !21, !4762, !86, !4842}
!4842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 32)
!4843 = !{!4844, !4845, !4846, !4847, !4848, !4849, !4850, !4851, !4852}
!4844 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !4839, file: !475, line: 4663, type: !512)
!4845 = !DILocalVariable(name: "ulValue", arg: 2, scope: !4839, file: !475, line: 4663, type: !21)
!4846 = !DILocalVariable(name: "eAction", arg: 3, scope: !4839, file: !475, line: 4663, type: !4762)
!4847 = !DILocalVariable(name: "pulPreviousNotificationValue", arg: 4, scope: !4839, file: !475, line: 4663, type: !86)
!4848 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 5, scope: !4839, file: !475, line: 4663, type: !4842)
!4849 = !DILocalVariable(name: "pxTCB", scope: !4839, file: !475, line: 4665, type: !486)
!4850 = !DILocalVariable(name: "ucOriginalNotifyState", scope: !4839, file: !475, line: 4666, type: !39)
!4851 = !DILocalVariable(name: "xReturn", scope: !4839, file: !475, line: 4667, type: !460)
!4852 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !4839, file: !475, line: 4668, type: !43)
!4853 = !DILocation(line: 0, scope: !4839)
!4854 = !DILocation(line: 4670, column: 3, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4839, file: !475, line: 4670, column: 3)
!4856 = !DILocation(line: 4670, column: 3, scope: !4839)
!4857 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !4858)
!4858 = distinct !DILocation(line: 4670, column: 3, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4855, file: !475, line: 4670, column: 3)
!4860 = !DILocation(line: 0, scope: !3742, inlinedAt: !4858)
!4861 = !DILocation(line: 4670, column: 3, scope: !4859)
!4862 = !DILocation(line: 4670, column: 3, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4864, file: !475, line: 4670, column: 3)
!4864 = distinct !DILexicalBlock(scope: !4859, file: !475, line: 4670, column: 3)
!4865 = distinct !{!4865, !4866, !4866, !1359}
!4866 = !DILocation(line: 4670, column: 3, scope: !4864)
!4867 = !DILocation(line: 4688, column: 3, scope: !4839)
!4868 = !DILocation(line: 211, column: 2, scope: !4869, inlinedAt: !4873)
!4869 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !44, file: !44, line: 207, type: !3091, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4870)
!4870 = !{!4871, !4872}
!4871 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !4869, file: !44, line: 209, type: !21)
!4872 = !DILocalVariable(name: "ulNewBASEPRI", scope: !4869, file: !44, line: 209, type: !21)
!4873 = distinct !DILocation(line: 4692, column: 28, scope: !4839)
!4874 = !{i64 471942, i64 471980, i64 472013, i64 472050, i64 472078}
!4875 = !DILocation(line: 0, scope: !4869, inlinedAt: !4873)
!4876 = !DILocation(line: 4694, column: 37, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4878, file: !475, line: 4694, column: 8)
!4878 = distinct !DILexicalBlock(scope: !4839, file: !475, line: 4693, column: 3)
!4879 = !DILocation(line: 4694, column: 8, scope: !4878)
!4880 = !DILocation(line: 4696, column: 44, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4877, file: !475, line: 4695, column: 4)
!4882 = !DILocation(line: 4696, column: 35, scope: !4881)
!4883 = !DILocation(line: 4697, column: 4, scope: !4881)
!4884 = !DILocation(line: 4699, column: 35, scope: !4878)
!4885 = !DILocation(line: 4700, column: 25, scope: !4878)
!4886 = !DILocation(line: 4702, column: 4, scope: !4878)
!4887 = !DILocation(line: 4705, column: 13, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4878, file: !475, line: 4703, column: 4)
!4889 = !DILocation(line: 4705, column: 29, scope: !4888)
!4890 = !DILocation(line: 4706, column: 6, scope: !4888)
!4891 = !DILocation(line: 4709, column: 15, scope: !4888)
!4892 = !DILocation(line: 4709, column: 32, scope: !4888)
!4893 = !DILocation(line: 4710, column: 6, scope: !4888)
!4894 = !DILocation(line: 4713, column: 13, scope: !4888)
!4895 = !DILocation(line: 4713, column: 29, scope: !4888)
!4896 = !DILocation(line: 4714, column: 6, scope: !4888)
!4897 = !DILocation(line: 4717, column: 32, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4888, file: !475, line: 4717, column: 10)
!4899 = !DILocation(line: 4717, column: 10, scope: !4888)
!4900 = !DILocation(line: 4719, column: 14, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4898, file: !475, line: 4718, column: 6)
!4902 = !DILocation(line: 4719, column: 30, scope: !4901)
!4903 = !DILocation(line: 4720, column: 6, scope: !4901)
!4904 = !DILocation(line: 4738, column: 30, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4878, file: !475, line: 4738, column: 8)
!4906 = !DILocation(line: 4738, column: 8, scope: !4878)
!4907 = !DILocation(line: 4741, column: 5, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4909, file: !475, line: 4741, column: 5)
!4909 = distinct !DILexicalBlock(scope: !4905, file: !475, line: 4739, column: 4)
!4910 = !DILocation(line: 4741, column: 5, scope: !4909)
!4911 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !4912)
!4912 = distinct !DILocation(line: 4741, column: 5, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4908, file: !475, line: 4741, column: 5)
!4914 = !DILocation(line: 0, scope: !3742, inlinedAt: !4912)
!4915 = !DILocation(line: 4741, column: 5, scope: !4913)
!4916 = !DILocation(line: 4741, column: 5, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4918, file: !475, line: 4741, column: 5)
!4918 = distinct !DILexicalBlock(scope: !4913, file: !475, line: 4741, column: 5)
!4919 = distinct !{!4919, !4920, !4920, !1359}
!4920 = !DILocation(line: 4741, column: 5, scope: !4918)
!4921 = !DILocation(line: 4743, column: 9, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4909, file: !475, line: 4743, column: 9)
!4923 = !DILocation(line: 4743, column: 30, scope: !4922)
!4924 = !DILocation(line: 4743, column: 9, scope: !4909)
!4925 = !DILocation(line: 4745, column: 39, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4922, file: !475, line: 4744, column: 5)
!4927 = !DILocation(line: 4745, column: 15, scope: !4926)
!4928 = !DILocation(line: 4746, column: 6, scope: !4926)
!4929 = !DILocation(line: 4747, column: 5, scope: !4926)
!4930 = !DILocation(line: 4752, column: 6, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4922, file: !475, line: 4749, column: 5)
!4932 = !DILocation(line: 4755, column: 16, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4909, file: !475, line: 4755, column: 9)
!4934 = !DILocation(line: 4755, column: 29, scope: !4933)
!4935 = !DILocation(line: 4755, column: 43, scope: !4933)
!4936 = !DILocation(line: 4755, column: 27, scope: !4933)
!4937 = !DILocation(line: 4755, column: 9, scope: !4909)
!4938 = !DILocation(line: 4759, column: 36, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4940, file: !475, line: 4759, column: 10)
!4940 = distinct !DILexicalBlock(scope: !4933, file: !475, line: 4756, column: 5)
!4941 = !DILocation(line: 4759, column: 10, scope: !4940)
!4942 = !DILocation(line: 4761, column: 34, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4939, file: !475, line: 4760, column: 6)
!4944 = !DILocation(line: 4762, column: 6, scope: !4943)
!4945 = !DILocation(line: 4768, column: 21, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4939, file: !475, line: 4764, column: 6)
!4947 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !4948, file: !44, line: 227, type: !21)
!4948 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !44, file: !44, line: 227, type: !2937, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4949)
!4949 = !{!4947}
!4950 = !DILocation(line: 0, scope: !4948, inlinedAt: !4951)
!4951 = distinct !DILocation(line: 4777, column: 3, scope: !4839)
!4952 = !DILocation(line: 229, column: 2, scope: !4948, inlinedAt: !4951)
!4953 = !{i64 472504}
!4954 = !DILocation(line: 4779, column: 3, scope: !4839)
!4955 = distinct !DISubprogram(name: "vTaskNotifyGiveFromISR", scope: !475, file: !475, line: 4787, type: !4956, scopeLine: 4788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !4958)
!4956 = !DISubroutineType(types: !4957)
!4957 = !{null, !512, !4842}
!4958 = !{!4959, !4960, !4961, !4962, !4963}
!4959 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !4955, file: !475, line: 4787, type: !512)
!4960 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 2, scope: !4955, file: !475, line: 4787, type: !4842)
!4961 = !DILocalVariable(name: "pxTCB", scope: !4955, file: !475, line: 4789, type: !486)
!4962 = !DILocalVariable(name: "ucOriginalNotifyState", scope: !4955, file: !475, line: 4790, type: !39)
!4963 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !4955, file: !475, line: 4791, type: !43)
!4964 = !DILocation(line: 0, scope: !4955)
!4965 = !DILocation(line: 4793, column: 3, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4955, file: !475, line: 4793, column: 3)
!4967 = !DILocation(line: 4793, column: 3, scope: !4955)
!4968 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !4969)
!4969 = distinct !DILocation(line: 4793, column: 3, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4966, file: !475, line: 4793, column: 3)
!4971 = !DILocation(line: 0, scope: !3742, inlinedAt: !4969)
!4972 = !DILocation(line: 4793, column: 3, scope: !4970)
!4973 = !DILocation(line: 4793, column: 3, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4975, file: !475, line: 4793, column: 3)
!4975 = distinct !DILexicalBlock(scope: !4970, file: !475, line: 4793, column: 3)
!4976 = distinct !{!4976, !4977, !4977, !1359}
!4977 = !DILocation(line: 4793, column: 3, scope: !4975)
!4978 = !DILocation(line: 4811, column: 3, scope: !4955)
!4979 = !DILocation(line: 211, column: 2, scope: !4869, inlinedAt: !4980)
!4980 = distinct !DILocation(line: 4815, column: 28, scope: !4955)
!4981 = !DILocation(line: 0, scope: !4869, inlinedAt: !4980)
!4982 = !DILocation(line: 4817, column: 35, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4955, file: !475, line: 4816, column: 3)
!4984 = !DILocation(line: 4818, column: 25, scope: !4983)
!4985 = !DILocation(line: 4822, column: 13, scope: !4983)
!4986 = !DILocation(line: 4822, column: 30, scope: !4983)
!4987 = !DILocation(line: 4828, column: 30, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4983, file: !475, line: 4828, column: 8)
!4989 = !DILocation(line: 4828, column: 8, scope: !4983)
!4990 = !DILocation(line: 4831, column: 5, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4992, file: !475, line: 4831, column: 5)
!4992 = distinct !DILexicalBlock(scope: !4988, file: !475, line: 4829, column: 4)
!4993 = !DILocation(line: 4831, column: 5, scope: !4992)
!4994 = !DILocation(line: 195, column: 2, scope: !3742, inlinedAt: !4995)
!4995 = distinct !DILocation(line: 4831, column: 5, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4991, file: !475, line: 4831, column: 5)
!4997 = !DILocation(line: 0, scope: !3742, inlinedAt: !4995)
!4998 = !DILocation(line: 4831, column: 5, scope: !4996)
!4999 = !DILocation(line: 4831, column: 5, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !5001, file: !475, line: 4831, column: 5)
!5001 = distinct !DILexicalBlock(scope: !4996, file: !475, line: 4831, column: 5)
!5002 = distinct !{!5002, !5003, !5003, !1359}
!5003 = !DILocation(line: 4831, column: 5, scope: !5001)
!5004 = !DILocation(line: 4833, column: 9, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4992, file: !475, line: 4833, column: 9)
!5006 = !DILocation(line: 4833, column: 30, scope: !5005)
!5007 = !DILocation(line: 4833, column: 9, scope: !4992)
!5008 = !DILocation(line: 4835, column: 39, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5005, file: !475, line: 4834, column: 5)
!5010 = !DILocation(line: 4835, column: 15, scope: !5009)
!5011 = !DILocation(line: 4836, column: 6, scope: !5009)
!5012 = !DILocation(line: 4837, column: 5, scope: !5009)
!5013 = !DILocation(line: 4842, column: 6, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5005, file: !475, line: 4839, column: 5)
!5015 = !DILocation(line: 4845, column: 16, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !4992, file: !475, line: 4845, column: 9)
!5017 = !DILocation(line: 4845, column: 29, scope: !5016)
!5018 = !DILocation(line: 4845, column: 43, scope: !5016)
!5019 = !DILocation(line: 4845, column: 27, scope: !5016)
!5020 = !DILocation(line: 4845, column: 9, scope: !4992)
!5021 = !DILocation(line: 4849, column: 36, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5023, file: !475, line: 4849, column: 10)
!5023 = distinct !DILexicalBlock(scope: !5016, file: !475, line: 4846, column: 5)
!5024 = !DILocation(line: 4849, column: 10, scope: !5023)
!5025 = !DILocation(line: 4851, column: 34, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5022, file: !475, line: 4850, column: 6)
!5027 = !DILocation(line: 4852, column: 6, scope: !5026)
!5028 = !DILocation(line: 4858, column: 21, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5022, file: !475, line: 4854, column: 6)
!5030 = !DILocation(line: 0, scope: !4948, inlinedAt: !5031)
!5031 = distinct !DILocation(line: 4867, column: 3, scope: !4955)
!5032 = !DILocation(line: 229, column: 2, scope: !4948, inlinedAt: !5031)
!5033 = !DILocation(line: 4868, column: 2, scope: !4955)
!5034 = distinct !DISubprogram(name: "xTaskNotifyStateClear", scope: !475, file: !475, line: 4876, type: !5035, scopeLine: 4877, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5037)
!5035 = !DISubroutineType(types: !5036)
!5036 = !{!460, !512}
!5037 = !{!5038, !5039, !5040}
!5038 = !DILocalVariable(name: "xTask", arg: 1, scope: !5034, file: !475, line: 4876, type: !512)
!5039 = !DILocalVariable(name: "pxTCB", scope: !5034, file: !475, line: 4878, type: !486)
!5040 = !DILocalVariable(name: "xReturn", scope: !5034, file: !475, line: 4879, type: !460)
!5041 = !DILocation(line: 0, scope: !5034)
!5042 = !DILocation(line: 4883, column: 11, scope: !5034)
!5043 = !DILocation(line: 4885, column: 3, scope: !5034)
!5044 = !DILocation(line: 4887, column: 15, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5046, file: !475, line: 4887, column: 8)
!5046 = distinct !DILexicalBlock(scope: !5034, file: !475, line: 4886, column: 3)
!5047 = !DILocation(line: 4887, column: 29, scope: !5045)
!5048 = !DILocation(line: 4887, column: 8, scope: !5046)
!5049 = !DILocation(line: 4889, column: 26, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5045, file: !475, line: 4888, column: 4)
!5051 = !DILocation(line: 4891, column: 4, scope: !5050)
!5052 = !DILocation(line: 0, scope: !5045)
!5053 = !DILocation(line: 4897, column: 3, scope: !5034)
!5054 = !DILocation(line: 4899, column: 3, scope: !5034)
!5055 = distinct !DISubprogram(name: "HAL_NVIC_SetPriorityGrouping", scope: !859, file: !859, line: 143, type: !2937, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !5056)
!5056 = !{!5057}
!5057 = !DILocalVariable(name: "PriorityGroup", arg: 1, scope: !5055, file: !859, line: 143, type: !21)
!5058 = !DILocation(line: 0, scope: !5055)
!5059 = !DILocation(line: 149, column: 3, scope: !5055)
!5060 = !DILocation(line: 150, column: 1, scope: !5055)
!5061 = distinct !DISubprogram(name: "__NVIC_SetPriorityGrouping", scope: !289, file: !289, line: 1480, type: !2937, scopeLine: 1481, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !5062)
!5062 = !{!5063, !5064, !5065}
!5063 = !DILocalVariable(name: "PriorityGroup", arg: 1, scope: !5061, file: !289, line: 1480, type: !21)
!5064 = !DILocalVariable(name: "reg_value", scope: !5061, file: !289, line: 1482, type: !21)
!5065 = !DILocalVariable(name: "PriorityGroupTmp", scope: !5061, file: !289, line: 1483, type: !21)
!5066 = !DILocation(line: 0, scope: !5061)
!5067 = !DILocation(line: 1485, column: 22, scope: !5061)
!5068 = !{!2453, !2443, i64 12}
!5069 = !DILocation(line: 1486, column: 13, scope: !5061)
!5070 = !DILocation(line: 1489, column: 35, scope: !5061)
!5071 = !DILocation(line: 1488, column: 62, scope: !5061)
!5072 = !DILocation(line: 1490, column: 14, scope: !5061)
!5073 = !DILocation(line: 1491, column: 1, scope: !5061)
!5074 = distinct !DISubprogram(name: "HAL_NVIC_SetPriority", scope: !859, file: !859, line: 165, type: !5075, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !5078)
!5075 = !DISubroutineType(types: !5076)
!5076 = !{null, !5077, !21, !21}
!5077 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !16, line: 126, baseType: !351)
!5078 = !{!5079, !5080, !5081, !5082}
!5079 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5074, file: !859, line: 165, type: !5077)
!5080 = !DILocalVariable(name: "PreemptPriority", arg: 2, scope: !5074, file: !859, line: 165, type: !21)
!5081 = !DILocalVariable(name: "SubPriority", arg: 3, scope: !5074, file: !859, line: 165, type: !21)
!5082 = !DILocalVariable(name: "prioritygroup", scope: !5074, file: !859, line: 167, type: !21)
!5083 = !DILocation(line: 0, scope: !5074)
!5084 = !DILocation(line: 173, column: 19, scope: !5074)
!5085 = !{i32 0, i32 8}
!5086 = !DILocation(line: 175, column: 26, scope: !5074)
!5087 = !DILocation(line: 175, column: 3, scope: !5074)
!5088 = !DILocation(line: 176, column: 1, scope: !5074)
!5089 = distinct !DISubprogram(name: "__NVIC_GetPriorityGrouping", scope: !289, file: !289, line: 1499, type: !3091, scopeLine: 1500, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !101)
!5090 = !DILocation(line: 1501, column: 28, scope: !5089)
!5091 = !DILocation(line: 1501, column: 60, scope: !5089)
!5092 = !DILocation(line: 1501, column: 3, scope: !5089)
!5093 = distinct !DISubprogram(name: "NVIC_EncodePriority", scope: !289, file: !289, line: 1686, type: !5094, scopeLine: 1687, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !5096)
!5094 = !DISubroutineType(types: !5095)
!5095 = !{!21, !21, !21, !21}
!5096 = !{!5097, !5098, !5099, !5100, !5101, !5102}
!5097 = !DILocalVariable(name: "PriorityGroup", arg: 1, scope: !5093, file: !289, line: 1686, type: !21)
!5098 = !DILocalVariable(name: "PreemptPriority", arg: 2, scope: !5093, file: !289, line: 1686, type: !21)
!5099 = !DILocalVariable(name: "SubPriority", arg: 3, scope: !5093, file: !289, line: 1686, type: !21)
!5100 = !DILocalVariable(name: "PriorityGroupTmp", scope: !5093, file: !289, line: 1688, type: !21)
!5101 = !DILocalVariable(name: "PreemptPriorityBits", scope: !5093, file: !289, line: 1689, type: !21)
!5102 = !DILocalVariable(name: "SubPriorityBits", scope: !5093, file: !289, line: 1690, type: !21)
!5103 = !DILocation(line: 0, scope: !5093)
!5104 = !DILocation(line: 1688, column: 46, scope: !5093)
!5105 = !DILocation(line: 1692, column: 31, scope: !5093)
!5106 = !DILocation(line: 1692, column: 25, scope: !5093)
!5107 = !DILocation(line: 1693, column: 25, scope: !5093)
!5108 = !DILocation(line: 1696, column: 74, scope: !5093)
!5109 = !DILocation(line: 1696, column: 30, scope: !5093)
!5110 = !DILocation(line: 1696, column: 82, scope: !5093)
!5111 = !DILocation(line: 1697, column: 74, scope: !5093)
!5112 = !DILocation(line: 1697, column: 30, scope: !5093)
!5113 = !DILocation(line: 1696, column: 102, scope: !5093)
!5114 = !DILocation(line: 1695, column: 3, scope: !5093)
!5115 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !289, file: !289, line: 1639, type: !5116, scopeLine: 1640, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !5118)
!5116 = !DISubroutineType(types: !5117)
!5117 = !{null, !5077, !21}
!5118 = !{!5119, !5120}
!5119 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5115, file: !289, line: 1639, type: !5077)
!5120 = !DILocalVariable(name: "priority", arg: 2, scope: !5115, file: !289, line: 1639, type: !21)
!5121 = !DILocation(line: 0, scope: !5115)
!5122 = !DILocation(line: 0, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5115, file: !289, line: 1641, column: 7)
!5124 = !DILocation(line: 1641, column: 7, scope: !5115)
!5125 = !DILocation(line: 1649, column: 1, scope: !5115)
!5126 = distinct !DISubprogram(name: "HAL_NVIC_EnableIRQ", scope: !859, file: !859, line: 187, type: !5127, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !5129)
!5127 = !DISubroutineType(types: !5128)
!5128 = !{null, !5077}
!5129 = !{!5130}
!5130 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5126, file: !859, line: 187, type: !5077)
!5131 = !DILocation(line: 0, scope: !5126)
!5132 = !DILocation(line: 193, column: 3, scope: !5126)
!5133 = !DILocation(line: 194, column: 1, scope: !5126)
!5134 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !289, file: !289, line: 1511, type: !5127, scopeLine: 1512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !5135)
!5135 = !{!5136}
!5136 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5134, file: !289, line: 1511, type: !5077)
!5137 = !DILocation(line: 0, scope: !5134)
!5138 = !DILocation(line: 1513, column: 23, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5134, file: !289, line: 1513, column: 7)
!5140 = !DILocation(line: 1513, column: 7, scope: !5134)
!5141 = !DILocation(line: 1515, column: 81, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5139, file: !289, line: 1514, column: 3)
!5143 = !DILocation(line: 1515, column: 60, scope: !5142)
!5144 = !DILocation(line: 1515, column: 34, scope: !5142)
!5145 = !DILocation(line: 1515, column: 5, scope: !5142)
!5146 = !DILocation(line: 1515, column: 43, scope: !5142)
!5147 = !DILocation(line: 1516, column: 3, scope: !5142)
!5148 = !DILocation(line: 1517, column: 1, scope: !5134)
!5149 = distinct !DISubprogram(name: "HAL_NVIC_DisableIRQ", scope: !859, file: !859, line: 203, type: !5127, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !5150)
!5150 = !{!5151}
!5151 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5149, file: !859, line: 203, type: !5077)
!5152 = !DILocation(line: 0, scope: !5149)
!5153 = !DILocation(line: 209, column: 3, scope: !5149)
!5154 = !DILocation(line: 210, column: 1, scope: !5149)
!5155 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !289, file: !289, line: 1547, type: !5127, scopeLine: 1548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !5156)
!5156 = !{!5157}
!5157 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5155, file: !289, line: 1547, type: !5077)
!5158 = !DILocation(line: 0, scope: !5155)
!5159 = !DILocation(line: 1549, column: 23, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5155, file: !289, line: 1549, column: 7)
!5161 = !DILocation(line: 1549, column: 7, scope: !5155)
!5162 = !DILocation(line: 1551, column: 81, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5160, file: !289, line: 1550, column: 3)
!5164 = !DILocation(line: 1551, column: 60, scope: !5163)
!5165 = !DILocation(line: 1551, column: 34, scope: !5163)
!5166 = !DILocation(line: 1551, column: 5, scope: !5163)
!5167 = !DILocation(line: 1551, column: 43, scope: !5163)
!5168 = !DILocation(line: 879, column: 3, scope: !5169, inlinedAt: !5171)
!5169 = distinct !DISubprogram(name: "__DSB", scope: !5170, file: !5170, line: 877, type: !99, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !101)
!5170 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "ba7e4770884341336138fcec9d34fc09")
!5171 = distinct !DILocation(line: 1552, column: 5, scope: !5163)
!5172 = !{i64 1222529}
!5173 = !DILocation(line: 868, column: 3, scope: !5174, inlinedAt: !5175)
!5174 = distinct !DISubprogram(name: "__ISB", scope: !5170, file: !5170, line: 866, type: !99, scopeLine: 867, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !101)
!5175 = distinct !DILocation(line: 1553, column: 5, scope: !5163)
!5176 = !{i64 1222235}
!5177 = !DILocation(line: 1554, column: 3, scope: !5163)
!5178 = !DILocation(line: 1555, column: 1, scope: !5155)
!5179 = distinct !DISubprogram(name: "HAL_NVIC_SystemReset", scope: !859, file: !859, line: 216, type: !99, scopeLine: 217, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !101)
!5180 = !DILocation(line: 219, column: 3, scope: !5179)
!5181 = distinct !DISubprogram(name: "__NVIC_SystemReset", scope: !289, file: !289, line: 1762, type: !99, scopeLine: 1763, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !101)
!5182 = !DILocation(line: 879, column: 3, scope: !5169, inlinedAt: !5183)
!5183 = distinct !DILocation(line: 1764, column: 3, scope: !5181)
!5184 = !DILocation(line: 1767, column: 34, scope: !5181)
!5185 = !DILocation(line: 1767, column: 40, scope: !5181)
!5186 = !DILocation(line: 1767, column: 66, scope: !5181)
!5187 = !DILocation(line: 1766, column: 15, scope: !5181)
!5188 = !DILocation(line: 879, column: 3, scope: !5169, inlinedAt: !5189)
!5189 = distinct !DILocation(line: 1769, column: 3, scope: !5181)
!5190 = !DILocation(line: 1771, column: 3, scope: !5181)
!5191 = !DILocation(line: 1773, column: 5, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5193, file: !289, line: 1772, column: 3)
!5193 = distinct !DILexicalBlock(scope: !5194, file: !289, line: 1771, column: 3)
!5194 = distinct !DILexicalBlock(scope: !5181, file: !289, line: 1771, column: 3)
!5195 = !{i64 2148746398}
!5196 = !DILocation(line: 1771, column: 3, scope: !5193)
!5197 = distinct !{!5197, !5198, !5199, !1359}
!5198 = !DILocation(line: 1771, column: 3, scope: !5194)
!5199 = !DILocation(line: 1774, column: 3, scope: !5194)
!5200 = distinct !DISubprogram(name: "HAL_SYSTICK_Config", scope: !859, file: !859, line: 229, type: !5201, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !5203)
!5201 = !DISubroutineType(types: !5202)
!5202 = !{!21, !21}
!5203 = !{!5204}
!5204 = !DILocalVariable(name: "TicksNumb", arg: 1, scope: !5200, file: !859, line: 229, type: !21)
!5205 = !DILocation(line: 0, scope: !5200)
!5206 = !DILocation(line: 231, column: 11, scope: !5200)
!5207 = !DILocation(line: 231, column: 4, scope: !5200)
!5208 = distinct !DISubprogram(name: "SysTick_Config", scope: !289, file: !289, line: 1834, type: !5201, scopeLine: 1835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !5209)
!5209 = !{!5210}
!5210 = !DILocalVariable(name: "ticks", arg: 1, scope: !5208, file: !289, line: 1834, type: !21)
!5211 = !DILocation(line: 0, scope: !5208)
!5212 = !DILocation(line: 1836, column: 14, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5208, file: !289, line: 1836, column: 7)
!5214 = !DILocation(line: 1836, column: 21, scope: !5213)
!5215 = !DILocation(line: 1836, column: 7, scope: !5208)
!5216 = !DILocation(line: 1841, column: 18, scope: !5208)
!5217 = !DILocation(line: 1842, column: 3, scope: !5208)
!5218 = !DILocation(line: 1843, column: 18, scope: !5208)
!5219 = !DILocation(line: 1844, column: 18, scope: !5208)
!5220 = !DILocation(line: 1847, column: 3, scope: !5208)
!5221 = !DILocation(line: 1848, column: 1, scope: !5208)
!5222 = distinct !DISubprogram(name: "HAL_NVIC_GetPriorityGrouping", scope: !859, file: !859, line: 344, type: !3091, scopeLine: 345, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !101)
!5223 = !DILocation(line: 347, column: 10, scope: !5222)
!5224 = !DILocation(line: 347, column: 3, scope: !5222)
!5225 = distinct !DISubprogram(name: "HAL_NVIC_GetPriority", scope: !859, file: !859, line: 371, type: !5226, scopeLine: 372, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !5228)
!5226 = !DISubroutineType(types: !5227)
!5227 = !{null, !5077, !21, !86, !86}
!5228 = !{!5229, !5230, !5231, !5232}
!5229 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5225, file: !859, line: 371, type: !5077)
!5230 = !DILocalVariable(name: "PriorityGroup", arg: 2, scope: !5225, file: !859, line: 371, type: !21)
!5231 = !DILocalVariable(name: "pPreemptPriority", arg: 3, scope: !5225, file: !859, line: 371, type: !86)
!5232 = !DILocalVariable(name: "pSubPriority", arg: 4, scope: !5225, file: !859, line: 371, type: !86)
!5233 = !DILocation(line: 0, scope: !5225)
!5234 = !DILocation(line: 376, column: 23, scope: !5225)
!5235 = !{i32 0, i32 16}
!5236 = !DILocation(line: 376, column: 3, scope: !5225)
!5237 = !DILocation(line: 377, column: 1, scope: !5225)
!5238 = distinct !DISubprogram(name: "__NVIC_GetPriority", scope: !289, file: !289, line: 1661, type: !5239, scopeLine: 1662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !5241)
!5239 = !DISubroutineType(types: !5240)
!5240 = !{!21, !5077}
!5241 = !{!5242}
!5242 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5238, file: !289, line: 1661, type: !5077)
!5243 = !DILocation(line: 0, scope: !5238)
!5244 = !DILocation(line: 1664, column: 7, scope: !5238)
!5245 = !DILocation(line: 0, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5238, file: !289, line: 1664, column: 7)
!5247 = !DILocation(line: 1672, column: 1, scope: !5238)
!5248 = distinct !DISubprogram(name: "NVIC_DecodePriority", scope: !289, file: !289, line: 1713, type: !5249, scopeLine: 1714, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !5252)
!5249 = !DISubroutineType(types: !5250)
!5250 = !{null, !21, !21, !5251, !5251}
!5251 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !86)
!5252 = !{!5253, !5254, !5255, !5256, !5257, !5258, !5259}
!5253 = !DILocalVariable(name: "Priority", arg: 1, scope: !5248, file: !289, line: 1713, type: !21)
!5254 = !DILocalVariable(name: "PriorityGroup", arg: 2, scope: !5248, file: !289, line: 1713, type: !21)
!5255 = !DILocalVariable(name: "pPreemptPriority", arg: 3, scope: !5248, file: !289, line: 1713, type: !5251)
!5256 = !DILocalVariable(name: "pSubPriority", arg: 4, scope: !5248, file: !289, line: 1713, type: !5251)
!5257 = !DILocalVariable(name: "PriorityGroupTmp", scope: !5248, file: !289, line: 1715, type: !21)
!5258 = !DILocalVariable(name: "PreemptPriorityBits", scope: !5248, file: !289, line: 1716, type: !21)
!5259 = !DILocalVariable(name: "SubPriorityBits", scope: !5248, file: !289, line: 1717, type: !21)
!5260 = !DILocation(line: 0, scope: !5248)
!5261 = !DILocation(line: 1715, column: 46, scope: !5248)
!5262 = !DILocation(line: 1719, column: 31, scope: !5248)
!5263 = !DILocation(line: 1719, column: 25, scope: !5248)
!5264 = !DILocation(line: 1720, column: 25, scope: !5248)
!5265 = !DILocation(line: 1722, column: 33, scope: !5248)
!5266 = !DILocation(line: 1722, column: 97, scope: !5248)
!5267 = !DILocation(line: 1722, column: 53, scope: !5248)
!5268 = !DILocation(line: 1722, column: 21, scope: !5248)
!5269 = !DILocation(line: 1723, column: 97, scope: !5248)
!5270 = !DILocation(line: 1723, column: 53, scope: !5248)
!5271 = !DILocation(line: 1723, column: 21, scope: !5248)
!5272 = !DILocation(line: 1724, column: 1, scope: !5248)
!5273 = distinct !DISubprogram(name: "HAL_NVIC_SetPendingIRQ", scope: !859, file: !859, line: 386, type: !5127, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !5274)
!5274 = !{!5275}
!5275 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5273, file: !859, line: 386, type: !5077)
!5276 = !DILocation(line: 0, scope: !5273)
!5277 = !DILocation(line: 392, column: 3, scope: !5273)
!5278 = !DILocation(line: 393, column: 1, scope: !5273)
!5279 = distinct !DISubprogram(name: "__NVIC_SetPendingIRQ", scope: !289, file: !289, line: 1585, type: !5127, scopeLine: 1586, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !5280)
!5280 = !{!5281}
!5281 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5279, file: !289, line: 1585, type: !5077)
!5282 = !DILocation(line: 0, scope: !5279)
!5283 = !DILocation(line: 1587, column: 23, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5279, file: !289, line: 1587, column: 7)
!5285 = !DILocation(line: 1587, column: 7, scope: !5279)
!5286 = !DILocation(line: 1589, column: 81, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5284, file: !289, line: 1588, column: 3)
!5288 = !DILocation(line: 1589, column: 60, scope: !5287)
!5289 = !DILocation(line: 1589, column: 34, scope: !5287)
!5290 = !DILocation(line: 1589, column: 5, scope: !5287)
!5291 = !DILocation(line: 1589, column: 43, scope: !5287)
!5292 = !DILocation(line: 1590, column: 3, scope: !5287)
!5293 = !DILocation(line: 1591, column: 1, scope: !5279)
!5294 = distinct !DISubprogram(name: "HAL_NVIC_GetPendingIRQ", scope: !859, file: !859, line: 404, type: !5239, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !5295)
!5295 = !{!5296}
!5296 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5294, file: !859, line: 404, type: !5077)
!5297 = !DILocation(line: 0, scope: !5294)
!5298 = !DILocation(line: 410, column: 10, scope: !5294)
!5299 = !DILocation(line: 410, column: 3, scope: !5294)
!5300 = distinct !DISubprogram(name: "__NVIC_GetPendingIRQ", scope: !289, file: !289, line: 1566, type: !5239, scopeLine: 1567, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !5301)
!5301 = !{!5302}
!5302 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5300, file: !289, line: 1566, type: !5077)
!5303 = !DILocation(line: 0, scope: !5300)
!5304 = !DILocation(line: 1568, column: 23, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5300, file: !289, line: 1568, column: 7)
!5306 = !DILocation(line: 1568, column: 7, scope: !5300)
!5307 = !DILocation(line: 1570, column: 54, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5305, file: !289, line: 1569, column: 3)
!5309 = !DILocation(line: 1570, column: 25, scope: !5308)
!5310 = !DILocation(line: 1570, column: 91, scope: !5308)
!5311 = !DILocation(line: 1570, column: 23, scope: !5308)
!5312 = !DILocation(line: 1570, column: 5, scope: !5308)
!5313 = !DILocation(line: 0, scope: !5305)
!5314 = !DILocation(line: 1576, column: 1, scope: !5300)
!5315 = distinct !DISubprogram(name: "HAL_NVIC_ClearPendingIRQ", scope: !859, file: !859, line: 420, type: !5127, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !5316)
!5316 = !{!5317}
!5317 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5315, file: !859, line: 420, type: !5077)
!5318 = !DILocation(line: 0, scope: !5315)
!5319 = !DILocation(line: 426, column: 3, scope: !5315)
!5320 = !DILocation(line: 427, column: 1, scope: !5315)
!5321 = distinct !DISubprogram(name: "__NVIC_ClearPendingIRQ", scope: !289, file: !289, line: 1600, type: !5127, scopeLine: 1601, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !5322)
!5322 = !{!5323}
!5323 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5321, file: !289, line: 1600, type: !5077)
!5324 = !DILocation(line: 0, scope: !5321)
!5325 = !DILocation(line: 1602, column: 23, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5321, file: !289, line: 1602, column: 7)
!5327 = !DILocation(line: 1602, column: 7, scope: !5321)
!5328 = !DILocation(line: 1604, column: 81, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5326, file: !289, line: 1603, column: 3)
!5330 = !DILocation(line: 1604, column: 60, scope: !5329)
!5331 = !DILocation(line: 1604, column: 34, scope: !5329)
!5332 = !DILocation(line: 1604, column: 5, scope: !5329)
!5333 = !DILocation(line: 1604, column: 43, scope: !5329)
!5334 = !DILocation(line: 1605, column: 3, scope: !5329)
!5335 = !DILocation(line: 1606, column: 1, scope: !5321)
!5336 = distinct !DISubprogram(name: "HAL_NVIC_GetActive", scope: !859, file: !859, line: 437, type: !5239, scopeLine: 438, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !5337)
!5337 = !{!5338}
!5338 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5336, file: !859, line: 437, type: !5077)
!5339 = !DILocation(line: 0, scope: !5336)
!5340 = !DILocation(line: 443, column: 10, scope: !5336)
!5341 = !DILocation(line: 443, column: 3, scope: !5336)
!5342 = distinct !DISubprogram(name: "__NVIC_GetActive", scope: !289, file: !289, line: 1617, type: !5239, scopeLine: 1618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !5343)
!5343 = !{!5344}
!5344 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5342, file: !289, line: 1617, type: !5077)
!5345 = !DILocation(line: 0, scope: !5342)
!5346 = !DILocation(line: 1619, column: 23, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5342, file: !289, line: 1619, column: 7)
!5348 = !DILocation(line: 1619, column: 7, scope: !5342)
!5349 = !DILocation(line: 1621, column: 54, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5347, file: !289, line: 1620, column: 3)
!5351 = !DILocation(line: 1621, column: 25, scope: !5350)
!5352 = !DILocation(line: 1621, column: 91, scope: !5350)
!5353 = !DILocation(line: 1621, column: 23, scope: !5350)
!5354 = !DILocation(line: 1621, column: 5, scope: !5350)
!5355 = !DILocation(line: 0, scope: !5347)
!5356 = !DILocation(line: 1627, column: 1, scope: !5342)
!5357 = distinct !DISubprogram(name: "HAL_SYSTICK_CLKSourceConfig", scope: !859, file: !859, line: 454, type: !2937, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !5358)
!5358 = !{!5359}
!5359 = !DILocalVariable(name: "CLKSource", arg: 1, scope: !5357, file: !859, line: 454, type: !21)
!5360 = !DILocation(line: 0, scope: !5357)
!5361 = !DILocation(line: 458, column: 17, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5357, file: !859, line: 458, column: 7)
!5363 = !DILocation(line: 0, scope: !5362)
!5364 = !DILocation(line: 458, column: 7, scope: !5357)
!5365 = !DILocation(line: 466, column: 1, scope: !5357)
!5366 = distinct !DISubprogram(name: "HAL_SYSTICK_IRQHandler", scope: !859, file: !859, line: 472, type: !99, scopeLine: 473, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !101)
!5367 = !DILocation(line: 474, column: 3, scope: !5366)
!5368 = !DILocation(line: 475, column: 1, scope: !5366)
!5369 = distinct !DISubprogram(name: "HAL_SYSTICK_Callback", scope: !859, file: !859, line: 481, type: !99, scopeLine: 482, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !101)
!5370 = !DILocation(line: 486, column: 1, scope: !5369)
!5371 = distinct !DISubprogram(name: "HAL_GPIO_Init", scope: !913, file: !913, line: 178, type: !5372, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !5382)
!5372 = !DISubroutineType(types: !5373)
!5373 = !{null, !944, !5374}
!5374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5375, size: 32)
!5375 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !916, line: 60, baseType: !5376)
!5376 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !916, line: 47, size: 128, elements: !5377)
!5377 = !{!5378, !5379, !5380, !5381}
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !5376, file: !916, line: 49, baseType: !21, size: 32)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !5376, file: !916, line: 52, baseType: !21, size: 32, offset: 32)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !5376, file: !916, line: 55, baseType: !21, size: 32, offset: 64)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !5376, file: !916, line: 58, baseType: !21, size: 32, offset: 96)
!5382 = !{!5383, !5384, !5385, !5386, !5387, !5388, !5389, !5390, !5391, !5392}
!5383 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !5371, file: !913, line: 178, type: !944)
!5384 = !DILocalVariable(name: "GPIO_Init", arg: 2, scope: !5371, file: !913, line: 178, type: !5374)
!5385 = !DILocalVariable(name: "position", scope: !5371, file: !913, line: 180, type: !21)
!5386 = !DILocalVariable(name: "ioposition", scope: !5371, file: !913, line: 181, type: !21)
!5387 = !DILocalVariable(name: "iocurrent", scope: !5371, file: !913, line: 182, type: !21)
!5388 = !DILocalVariable(name: "temp", scope: !5371, file: !913, line: 183, type: !21)
!5389 = !DILocalVariable(name: "config", scope: !5371, file: !913, line: 184, type: !21)
!5390 = !DILocalVariable(name: "configregister", scope: !5371, file: !913, line: 185, type: !459)
!5391 = !DILocalVariable(name: "registeroffset", scope: !5371, file: !913, line: 186, type: !21)
!5392 = !DILocalVariable(name: "tmpreg", scope: !5393, file: !913, line: 291, type: !20)
!5393 = distinct !DILexicalBlock(scope: !5394, file: !913, line: 291, column: 9)
!5394 = distinct !DILexicalBlock(scope: !5395, file: !913, line: 289, column: 7)
!5395 = distinct !DILexicalBlock(scope: !5396, file: !913, line: 288, column: 11)
!5396 = distinct !DILexicalBlock(scope: !5397, file: !913, line: 203, column: 5)
!5397 = distinct !DILexicalBlock(scope: !5398, file: !913, line: 202, column: 9)
!5398 = distinct !DILexicalBlock(scope: !5371, file: !913, line: 195, column: 3)
!5399 = !DILocation(line: 0, scope: !5371)
!5400 = !DILocation(line: 194, column: 23, scope: !5371)
!5401 = !DILocation(line: 194, column: 41, scope: !5371)
!5402 = !DILocation(line: 194, column: 3, scope: !5371)
!5403 = !DILocation(line: 197, column: 26, scope: !5398)
!5404 = !DILocation(line: 200, column: 44, scope: !5398)
!5405 = !DILocation(line: 202, column: 19, scope: !5397)
!5406 = !DILocation(line: 202, column: 9, scope: !5398)
!5407 = !DILocation(line: 208, column: 26, scope: !5396)
!5408 = !DILocation(line: 208, column: 7, scope: !5396)
!5409 = !DILocation(line: 214, column: 31, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5396, file: !913, line: 209, column: 7)
!5411 = !DILocation(line: 215, column: 11, scope: !5410)
!5412 = !DILocation(line: 221, column: 31, scope: !5410)
!5413 = !DILocation(line: 221, column: 37, scope: !5410)
!5414 = !DILocation(line: 222, column: 11, scope: !5410)
!5415 = !DILocation(line: 228, column: 31, scope: !5410)
!5416 = !DILocation(line: 228, column: 37, scope: !5410)
!5417 = !DILocation(line: 229, column: 11, scope: !5410)
!5418 = !DILocation(line: 235, column: 31, scope: !5410)
!5419 = !DILocation(line: 235, column: 37, scope: !5410)
!5420 = !DILocation(line: 236, column: 11, scope: !5410)
!5421 = !DILocation(line: 248, column: 26, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5410, file: !913, line: 248, column: 15)
!5423 = !DILocation(line: 248, column: 15, scope: !5410)
!5424 = !DILocation(line: 257, column: 25, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5426, file: !913, line: 253, column: 11)
!5426 = distinct !DILexicalBlock(scope: !5422, file: !913, line: 252, column: 20)
!5427 = !{!5428, !2443, i64 16}
!5428 = !{!"", !2443, i64 0, !2443, i64 4, !2443, i64 8, !2443, i64 12, !2443, i64 16, !2443, i64 20, !2443, i64 24}
!5429 = !DILocation(line: 258, column: 11, scope: !5425)
!5430 = !DILocation(line: 264, column: 24, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5426, file: !913, line: 260, column: 11)
!5432 = !{!5428, !2443, i64 20}
!5433 = !DILocation(line: 271, column: 11, scope: !5410)
!5434 = !DILocation(line: 280, column: 35, scope: !5396)
!5435 = !DILocation(line: 280, column: 24, scope: !5396)
!5436 = !DILocation(line: 281, column: 24, scope: !5396)
!5437 = !DILocation(line: 284, column: 7, scope: !5396)
!5438 = !DILocation(line: 288, column: 23, scope: !5395)
!5439 = !DILocation(line: 288, column: 28, scope: !5395)
!5440 = !DILocation(line: 288, column: 41, scope: !5395)
!5441 = !DILocation(line: 288, column: 11, scope: !5396)
!5442 = !DILocation(line: 291, column: 9, scope: !5393)
!5443 = !DILocation(line: 291, column: 9, scope: !5394)
!5444 = !DILocation(line: 292, column: 38, scope: !5394)
!5445 = !DILocation(line: 292, column: 16, scope: !5394)
!5446 = !DILocation(line: 293, column: 9, scope: !5394)
!5447 = !DILocation(line: 294, column: 9, scope: !5394)
!5448 = !DILocation(line: 295, column: 38, scope: !5394)
!5449 = !DILocation(line: 299, column: 25, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5394, file: !913, line: 299, column: 13)
!5451 = !DILocation(line: 299, column: 30, scope: !5450)
!5452 = !DILocation(line: 299, column: 46, scope: !5450)
!5453 = !DILocation(line: 299, column: 13, scope: !5394)
!5454 = !DILocation(line: 301, column: 11, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5450, file: !913, line: 300, column: 9)
!5456 = !{!5457, !2443, i64 0}
!5457 = !{!"", !2443, i64 0, !2443, i64 4, !2443, i64 8, !2443, i64 12, !2443, i64 16, !2443, i64 20}
!5458 = !DILocation(line: 302, column: 9, scope: !5455)
!5459 = !DILocation(line: 305, column: 11, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5450, file: !913, line: 304, column: 9)
!5461 = !DILocation(line: 0, scope: !5450)
!5462 = !DILocation(line: 309, column: 30, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5394, file: !913, line: 309, column: 13)
!5464 = !DILocation(line: 309, column: 47, scope: !5463)
!5465 = !DILocation(line: 309, column: 13, scope: !5394)
!5466 = !DILocation(line: 311, column: 11, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5463, file: !913, line: 310, column: 9)
!5468 = !{!5457, !2443, i64 4}
!5469 = !DILocation(line: 312, column: 9, scope: !5467)
!5470 = !DILocation(line: 315, column: 11, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5463, file: !913, line: 314, column: 9)
!5472 = !DILocation(line: 0, scope: !5463)
!5473 = !DILocation(line: 319, column: 30, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5394, file: !913, line: 319, column: 13)
!5475 = !DILocation(line: 319, column: 45, scope: !5474)
!5476 = !DILocation(line: 319, column: 13, scope: !5394)
!5477 = !DILocation(line: 321, column: 11, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5474, file: !913, line: 320, column: 9)
!5479 = !{!5457, !2443, i64 8}
!5480 = !DILocation(line: 322, column: 9, scope: !5478)
!5481 = !DILocation(line: 325, column: 11, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5474, file: !913, line: 324, column: 9)
!5483 = !DILocation(line: 0, scope: !5474)
!5484 = !DILocation(line: 329, column: 30, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5394, file: !913, line: 329, column: 13)
!5486 = !DILocation(line: 329, column: 46, scope: !5485)
!5487 = !DILocation(line: 329, column: 13, scope: !5394)
!5488 = !DILocation(line: 331, column: 11, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5485, file: !913, line: 330, column: 9)
!5490 = !{!5457, !2443, i64 12}
!5491 = !DILocation(line: 332, column: 9, scope: !5489)
!5492 = !DILocation(line: 335, column: 11, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5485, file: !913, line: 334, column: 9)
!5494 = !DILocation(line: 0, scope: !5485)
!5495 = !DILocation(line: 340, column: 10, scope: !5398)
!5496 = !DILocation(line: 184, column: 12, scope: !5371)
!5497 = !DILocation(line: 194, column: 28, scope: !5371)
!5498 = distinct !{!5498, !5402, !5499, !1358, !1359}
!5499 = !DILocation(line: 341, column: 3, scope: !5371)
!5500 = !DILocation(line: 342, column: 1, scope: !5371)
!5501 = distinct !DISubprogram(name: "HAL_GPIO_DeInit", scope: !913, file: !913, line: 351, type: !5502, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !5504)
!5502 = !DISubroutineType(types: !5503)
!5503 = !{null, !944, !21}
!5504 = !{!5505, !5506, !5507, !5508, !5509, !5510, !5511}
!5505 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !5501, file: !913, line: 351, type: !944)
!5506 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !5501, file: !913, line: 351, type: !21)
!5507 = !DILocalVariable(name: "position", scope: !5501, file: !913, line: 353, type: !21)
!5508 = !DILocalVariable(name: "iocurrent", scope: !5501, file: !913, line: 354, type: !21)
!5509 = !DILocalVariable(name: "tmp", scope: !5501, file: !913, line: 355, type: !21)
!5510 = !DILocalVariable(name: "configregister", scope: !5501, file: !913, line: 356, type: !459)
!5511 = !DILocalVariable(name: "registeroffset", scope: !5501, file: !913, line: 357, type: !21)
!5512 = !DILocation(line: 0, scope: !5501)
!5513 = !DILocation(line: 364, column: 33, scope: !5501)
!5514 = !DILocation(line: 364, column: 3, scope: !5501)
!5515 = !DILocation(line: 367, column: 35, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5501, file: !913, line: 365, column: 3)
!5517 = !DILocation(line: 367, column: 28, scope: !5516)
!5518 = !DILocation(line: 369, column: 9, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5516, file: !913, line: 369, column: 9)
!5520 = !DILocation(line: 369, column: 9, scope: !5516)
!5521 = !DILocation(line: 374, column: 35, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5519, file: !913, line: 370, column: 5)
!5523 = !DILocation(line: 374, column: 13, scope: !5522)
!5524 = !DILocation(line: 375, column: 28, scope: !5522)
!5525 = !DILocation(line: 375, column: 21, scope: !5522)
!5526 = !DILocation(line: 375, column: 11, scope: !5522)
!5527 = !DILocation(line: 376, column: 19, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5522, file: !913, line: 376, column: 11)
!5529 = !DILocation(line: 376, column: 41, scope: !5528)
!5530 = !DILocation(line: 376, column: 15, scope: !5528)
!5531 = !DILocation(line: 376, column: 11, scope: !5522)
!5532 = !DILocation(line: 379, column: 9, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5528, file: !913, line: 377, column: 7)
!5534 = !DILocation(line: 382, column: 9, scope: !5533)
!5535 = !DILocation(line: 383, column: 9, scope: !5533)
!5536 = !DILocation(line: 386, column: 9, scope: !5533)
!5537 = !DILocation(line: 387, column: 9, scope: !5533)
!5538 = !DILocation(line: 388, column: 7, scope: !5533)
!5539 = !DILocation(line: 392, column: 35, scope: !5522)
!5540 = !DILocation(line: 392, column: 24, scope: !5522)
!5541 = !DILocation(line: 393, column: 24, scope: !5522)
!5542 = !DILocation(line: 396, column: 7, scope: !5522)
!5543 = !DILocation(line: 399, column: 7, scope: !5522)
!5544 = !{!5428, !2443, i64 12}
!5545 = !DILocation(line: 400, column: 5, scope: !5522)
!5546 = !DILocation(line: 402, column: 13, scope: !5516)
!5547 = !DILocation(line: 364, column: 20, scope: !5501)
!5548 = distinct !{!5548, !5514, !5549, !1358, !1359}
!5549 = !DILocation(line: 403, column: 3, scope: !5501)
!5550 = !DILocation(line: 404, column: 1, scope: !5501)
!5551 = distinct !DISubprogram(name: "HAL_GPIO_ReadPin", scope: !913, file: !913, line: 431, type: !5552, scopeLine: 432, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !5555)
!5552 = !DISubroutineType(types: !5553)
!5553 = !{!5554, !944, !34}
!5554 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PinState", file: !916, line: 69, baseType: !915)
!5555 = !{!5556, !5557, !5558}
!5556 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !5551, file: !913, line: 431, type: !944)
!5557 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !5551, file: !913, line: 431, type: !34)
!5558 = !DILocalVariable(name: "bitstatus", scope: !5551, file: !913, line: 433, type: !5554)
!5559 = !DILocation(line: 0, scope: !5551)
!5560 = !DILocation(line: 438, column: 15, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5551, file: !913, line: 438, column: 7)
!5562 = !{!5428, !2443, i64 8}
!5563 = !DILocation(line: 438, column: 21, scope: !5561)
!5564 = !DILocation(line: 438, column: 19, scope: !5561)
!5565 = !DILocation(line: 438, column: 31, scope: !5561)
!5566 = !DILocation(line: 446, column: 3, scope: !5551)
!5567 = distinct !DISubprogram(name: "HAL_GPIO_WritePin", scope: !913, file: !913, line: 465, type: !5568, scopeLine: 466, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !5570)
!5568 = !DISubroutineType(types: !5569)
!5569 = !{null, !944, !34, !5554}
!5570 = !{!5571, !5572, !5573}
!5571 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !5567, file: !913, line: 465, type: !944)
!5572 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !5567, file: !913, line: 465, type: !34)
!5573 = !DILocalVariable(name: "PinState", arg: 3, scope: !5567, file: !913, line: 465, type: !5554)
!5574 = !DILocation(line: 0, scope: !5567)
!5575 = !DILocation(line: 471, column: 16, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5567, file: !913, line: 471, column: 7)
!5577 = !DILocation(line: 0, scope: !5576)
!5578 = !DILocation(line: 471, column: 7, scope: !5567)
!5579 = !DILocation(line: 479, column: 1, scope: !5567)
!5580 = distinct !DISubprogram(name: "HAL_GPIO_TogglePin", scope: !913, file: !913, line: 487, type: !5581, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !5583)
!5581 = !DISubroutineType(types: !5582)
!5582 = !{null, !944, !34}
!5583 = !{!5584, !5585}
!5584 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !5580, file: !913, line: 487, type: !944)
!5585 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !5580, file: !913, line: 487, type: !34)
!5586 = !DILocation(line: 0, scope: !5580)
!5587 = !DILocation(line: 492, column: 15, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5580, file: !913, line: 492, column: 7)
!5589 = !DILocation(line: 492, column: 21, scope: !5588)
!5590 = !DILocation(line: 492, column: 19, scope: !5588)
!5591 = !DILocation(line: 492, column: 31, scope: !5588)
!5592 = !DILocation(line: 492, column: 7, scope: !5580)
!5593 = !DILocation(line: 0, scope: !5588)
!5594 = !DILocation(line: 500, column: 1, scope: !5580)
!5595 = distinct !DISubprogram(name: "HAL_GPIO_LockPin", scope: !913, file: !913, line: 512, type: !5596, scopeLine: 513, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !5598)
!5596 = !DISubroutineType(types: !5597)
!5597 = !{!2497, !944, !34}
!5598 = !{!5599, !5600, !5601}
!5599 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !5595, file: !913, line: 512, type: !944)
!5600 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !5595, file: !913, line: 512, type: !34)
!5601 = !DILocalVariable(name: "tmp", scope: !5595, file: !913, line: 514, type: !20)
!5602 = !DILocation(line: 0, scope: !5595)
!5603 = !DILocation(line: 514, column: 3, scope: !5595)
!5604 = !DILocation(line: 514, column: 17, scope: !5595)
!5605 = !DILocation(line: 521, column: 3, scope: !5595)
!5606 = !DILocation(line: 523, column: 17, scope: !5595)
!5607 = !DILocation(line: 523, column: 10, scope: !5595)
!5608 = !DILocation(line: 523, column: 15, scope: !5595)
!5609 = !{!5428, !2443, i64 24}
!5610 = !DILocation(line: 525, column: 15, scope: !5595)
!5611 = !DILocation(line: 527, column: 17, scope: !5595)
!5612 = !DILocation(line: 527, column: 15, scope: !5595)
!5613 = !DILocation(line: 529, column: 16, scope: !5595)
!5614 = !DILocation(line: 529, column: 7, scope: !5595)
!5615 = !DILocation(line: 532, column: 25, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !5595, file: !913, line: 532, column: 7)
!5617 = !DILocation(line: 0, scope: !5616)
!5618 = !DILocation(line: 540, column: 1, scope: !5595)
!5619 = distinct !DISubprogram(name: "HAL_GPIO_EXTI_IRQHandler", scope: !913, file: !913, line: 547, type: !5620, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !5622)
!5620 = !DISubroutineType(types: !5621)
!5621 = !{null, !34}
!5622 = !{!5623}
!5623 = !DILocalVariable(name: "GPIO_Pin", arg: 1, scope: !5619, file: !913, line: 547, type: !34)
!5624 = !DILocation(line: 0, scope: !5619)
!5625 = !DILocation(line: 550, column: 7, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5619, file: !913, line: 550, column: 7)
!5627 = !{!5457, !2443, i64 20}
!5628 = !DILocation(line: 550, column: 40, scope: !5626)
!5629 = !DILocation(line: 550, column: 7, scope: !5619)
!5630 = !DILocation(line: 552, column: 5, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5626, file: !913, line: 551, column: 3)
!5632 = !DILocation(line: 553, column: 5, scope: !5631)
!5633 = !DILocation(line: 554, column: 3, scope: !5631)
!5634 = !DILocation(line: 555, column: 1, scope: !5619)
!5635 = distinct !DISubprogram(name: "HAL_GPIO_EXTI_Callback", scope: !913, file: !913, line: 562, type: !5620, scopeLine: 563, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !5636)
!5636 = !{!5637}
!5637 = !DILocalVariable(name: "GPIO_Pin", arg: 1, scope: !5635, file: !913, line: 562, type: !34)
!5638 = !DILocation(line: 0, scope: !5635)
!5639 = !DILocation(line: 569, column: 1, scope: !5635)
!5640 = distinct !DISubprogram(name: "vListInitialise", scope: !966, file: !966, line: 37, type: !5641, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !5644)
!5641 = !DISubroutineType(types: !5642)
!5642 = !{null, !5643}
!5643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !978)
!5644 = !{!5645}
!5645 = !DILocalVariable(name: "pxList", arg: 1, scope: !5640, file: !966, line: 37, type: !5643)
!5646 = !DILocation(line: 0, scope: !5640)
!5647 = !DILocation(line: 42, column: 48, scope: !5640)
!5648 = !DILocation(line: 42, column: 10, scope: !5640)
!5649 = !DILocation(line: 42, column: 18, scope: !5640)
!5650 = !DILocation(line: 46, column: 19, scope: !5640)
!5651 = !DILocation(line: 46, column: 30, scope: !5640)
!5652 = !{!4069, !2443, i64 8}
!5653 = !DILocation(line: 50, column: 19, scope: !5640)
!5654 = !DILocation(line: 50, column: 26, scope: !5640)
!5655 = !DILocation(line: 51, column: 19, scope: !5640)
!5656 = !DILocation(line: 51, column: 30, scope: !5640)
!5657 = !{!4069, !1600, i64 16}
!5658 = !DILocation(line: 53, column: 10, scope: !5640)
!5659 = !DILocation(line: 53, column: 26, scope: !5640)
!5660 = !DILocation(line: 59, column: 1, scope: !5640)
!5661 = distinct !DISubprogram(name: "vListInitialiseItem", scope: !966, file: !966, line: 62, type: !5662, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !5665)
!5662 = !DISubroutineType(types: !5663)
!5663 = !{null, !5664}
!5664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !968)
!5665 = !{!5666}
!5666 = !DILocalVariable(name: "pxItem", arg: 1, scope: !5661, file: !966, line: 62, type: !5664)
!5667 = !DILocation(line: 0, scope: !5661)
!5668 = !DILocation(line: 65, column: 10, scope: !5661)
!5669 = !DILocation(line: 65, column: 22, scope: !5661)
!5670 = !{!3791, !1600, i64 16}
!5671 = !DILocation(line: 71, column: 1, scope: !5661)
!5672 = distinct !DISubprogram(name: "vListInsertEnd", scope: !966, file: !966, line: 74, type: !5673, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !5675)
!5673 = !DISubroutineType(types: !5674)
!5674 = !{null, !5643, !5664}
!5675 = !{!5676, !5677, !5678}
!5676 = !DILocalVariable(name: "pxList", arg: 1, scope: !5672, file: !966, line: 74, type: !5643)
!5677 = !DILocalVariable(name: "pxNewListItem", arg: 2, scope: !5672, file: !966, line: 74, type: !5664)
!5678 = !DILocalVariable(name: "pxIndex", scope: !5672, file: !966, line: 76, type: !5664)
!5679 = !DILocation(line: 0, scope: !5672)
!5680 = !DILocation(line: 76, column: 38, scope: !5672)
!5681 = !DILocation(line: 87, column: 17, scope: !5672)
!5682 = !DILocation(line: 87, column: 24, scope: !5672)
!5683 = !DILocation(line: 88, column: 39, scope: !5672)
!5684 = !{!3791, !1600, i64 8}
!5685 = !DILocation(line: 88, column: 17, scope: !5672)
!5686 = !DILocation(line: 88, column: 28, scope: !5672)
!5687 = !DILocation(line: 93, column: 11, scope: !5672)
!5688 = !DILocation(line: 93, column: 23, scope: !5672)
!5689 = !DILocation(line: 93, column: 30, scope: !5672)
!5690 = !DILocation(line: 94, column: 22, scope: !5672)
!5691 = !DILocation(line: 97, column: 17, scope: !5672)
!5692 = !DILocation(line: 97, column: 29, scope: !5672)
!5693 = !DILocation(line: 99, column: 12, scope: !5672)
!5694 = !DILocation(line: 99, column: 29, scope: !5672)
!5695 = !DILocation(line: 100, column: 1, scope: !5672)
!5696 = distinct !DISubprogram(name: "vListInsert", scope: !966, file: !966, line: 103, type: !5673, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !5697)
!5697 = !{!5698, !5699, !5700, !5701}
!5698 = !DILocalVariable(name: "pxList", arg: 1, scope: !5696, file: !966, line: 103, type: !5643)
!5699 = !DILocalVariable(name: "pxNewListItem", arg: 2, scope: !5696, file: !966, line: 103, type: !5664)
!5700 = !DILocalVariable(name: "pxIterator", scope: !5696, file: !966, line: 105, type: !968)
!5701 = !DILocalVariable(name: "xValueOfInsertion", scope: !5696, file: !966, line: 106, type: !3951)
!5702 = !DILocation(line: 0, scope: !5696)
!5703 = !DILocation(line: 106, column: 53, scope: !5696)
!5704 = !DILocation(line: 122, column: 24, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5696, file: !966, line: 122, column: 6)
!5706 = !DILocation(line: 122, column: 6, scope: !5696)
!5707 = !DILocation(line: 124, column: 33, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5705, file: !966, line: 123, column: 2)
!5709 = !DILocation(line: 125, column: 2, scope: !5708)
!5710 = !DILocation(line: 150, column: 49, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5712, file: !966, line: 150, column: 3)
!5712 = distinct !DILexicalBlock(scope: !5705, file: !966, line: 127, column: 2)
!5713 = !DILocation(line: 150, column: 21, scope: !5711)
!5714 = !DILocation(line: 150, column: 8, scope: !5711)
!5715 = !DILocation(line: 0, scope: !5711)
!5716 = !DILocation(line: 150, column: 73, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5711, file: !966, line: 150, column: 3)
!5718 = !DILocation(line: 150, column: 81, scope: !5717)
!5719 = !DILocation(line: 150, column: 92, scope: !5717)
!5720 = !DILocation(line: 150, column: 3, scope: !5711)
!5721 = distinct !{!5721, !5720, !5722, !1358, !1359}
!5722 = !DILocation(line: 154, column: 3, scope: !5711)
!5723 = !DILocation(line: 0, scope: !5705)
!5724 = !DILocation(line: 157, column: 38, scope: !5696)
!5725 = !DILocation(line: 157, column: 17, scope: !5696)
!5726 = !DILocation(line: 157, column: 24, scope: !5696)
!5727 = !DILocation(line: 158, column: 25, scope: !5696)
!5728 = !DILocation(line: 158, column: 36, scope: !5696)
!5729 = !DILocation(line: 159, column: 17, scope: !5696)
!5730 = !DILocation(line: 159, column: 28, scope: !5696)
!5731 = !DILocation(line: 160, column: 21, scope: !5696)
!5732 = !DILocation(line: 164, column: 17, scope: !5696)
!5733 = !DILocation(line: 164, column: 29, scope: !5696)
!5734 = !DILocation(line: 166, column: 12, scope: !5696)
!5735 = !DILocation(line: 166, column: 29, scope: !5696)
!5736 = !DILocation(line: 167, column: 1, scope: !5696)
!5737 = distinct !DISubprogram(name: "uxListRemove", scope: !966, file: !966, line: 170, type: !5738, scopeLine: 171, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !5740)
!5738 = !DISubroutineType(types: !5739)
!5739 = !{!43, !5664}
!5740 = !{!5741, !5742}
!5741 = !DILocalVariable(name: "pxItemToRemove", arg: 1, scope: !5737, file: !966, line: 170, type: !5664)
!5742 = !DILocalVariable(name: "pxList", scope: !5737, file: !966, line: 174, type: !5643)
!5743 = !DILocation(line: 0, scope: !5737)
!5744 = !DILocation(line: 174, column: 54, scope: !5737)
!5745 = !DILocation(line: 176, column: 55, scope: !5737)
!5746 = !DILocation(line: 176, column: 18, scope: !5737)
!5747 = !DILocation(line: 176, column: 26, scope: !5737)
!5748 = !DILocation(line: 176, column: 37, scope: !5737)
!5749 = !DILocation(line: 177, column: 18, scope: !5737)
!5750 = !DILocation(line: 177, column: 30, scope: !5737)
!5751 = !DILocation(line: 177, column: 37, scope: !5737)
!5752 = !DILocation(line: 183, column: 14, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5737, file: !966, line: 183, column: 6)
!5754 = !DILocation(line: 183, column: 22, scope: !5753)
!5755 = !DILocation(line: 183, column: 6, scope: !5737)
!5756 = !DILocation(line: 185, column: 19, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5753, file: !966, line: 184, column: 2)
!5758 = !DILocation(line: 186, column: 2, scope: !5757)
!5759 = !DILocation(line: 192, column: 30, scope: !5737)
!5760 = !DILocation(line: 193, column: 12, scope: !5737)
!5761 = !DILocation(line: 193, column: 29, scope: !5737)
!5762 = !DILocation(line: 195, column: 17, scope: !5737)
!5763 = !DILocation(line: 195, column: 2, scope: !5737)
!5764 = distinct !DISubprogram(name: "~BufferedSerial", linkageName: "_ZN6Cicada14BufferedSerialD2Ev", scope: !994, file: !675, line: 42, type: !1173, scopeLine: 42, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !5765, retainedNodes: !5766)
!5765 = !DISubprogram(name: "~BufferedSerial", scope: !994, type: !1173, containingType: !994, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!5766 = !{!5767}
!5767 = !DILocalVariable(name: "this", arg: 1, scope: !5764, type: !5768, flags: DIFlagArtificial | DIFlagObjectPointer)
!5768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 32)
!5769 = !DILocation(line: 0, scope: !5764)
!5770 = !DILocation(line: 42, column: 7, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5764, file: !675, line: 42, column: 7)
!5772 = !DILocation(line: 42, column: 7, scope: !5764)
!5773 = distinct !DISubprogram(name: "~BufferedSerial", linkageName: "_ZN6Cicada14BufferedSerialD0Ev", scope: !994, file: !675, line: 42, type: !1173, scopeLine: 42, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !5765, retainedNodes: !5774)
!5774 = !{!5775}
!5775 = !DILocalVariable(name: "this", arg: 1, scope: !5773, type: !5768, flags: DIFlagArtificial | DIFlagObjectPointer)
!5776 = !DILocation(line: 0, scope: !5773)
!5777 = !DILocation(line: 42, column: 7, scope: !5773)
!5778 = distinct !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14BufferedSerial14bytesAvailableEv", scope: !994, file: !992, line: 39, type: !1148, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1147, retainedNodes: !5779)
!5779 = !{!5780, !5782}
!5780 = !DILocalVariable(name: "this", arg: 1, scope: !5778, type: !5781, flags: DIFlagArtificial | DIFlagObjectPointer)
!5781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 32)
!5782 = !DILocalVariable(name: "availableData", scope: !5778, file: !992, line: 42, type: !725)
!5783 = !DILocation(line: 0, scope: !5778)
!5784 = !DILocation(line: 41, column: 5, scope: !5778)
!5785 = !DILocation(line: 42, column: 26, scope: !5778)
!5786 = !DILocation(line: 42, column: 38, scope: !5778)
!5787 = !DILocation(line: 43, column: 5, scope: !5778)
!5788 = !DILocation(line: 45, column: 5, scope: !5778)
!5789 = distinct !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14BufferedSerial14spaceAvailableEv", scope: !994, file: !992, line: 48, type: !1148, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1152, retainedNodes: !5790)
!5790 = !{!5791, !5792}
!5791 = !DILocalVariable(name: "this", arg: 1, scope: !5789, type: !5781, flags: DIFlagArtificial | DIFlagObjectPointer)
!5792 = !DILocalVariable(name: "spaceAvailable", scope: !5789, file: !992, line: 51, type: !725)
!5793 = !DILocation(line: 0, scope: !5789)
!5794 = !DILocation(line: 50, column: 5, scope: !5789)
!5795 = !DILocation(line: 51, column: 27, scope: !5789)
!5796 = !DILocation(line: 51, column: 40, scope: !5789)
!5797 = !DILocation(line: 52, column: 5, scope: !5789)
!5798 = !DILocation(line: 54, column: 5, scope: !5789)
!5799 = distinct !DISubprogram(name: "read", linkageName: "_ZN6Cicada14BufferedSerial4readEPhy", scope: !994, file: !992, line: 57, type: !1154, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1153, retainedNodes: !5800)
!5800 = !{!5801, !5802, !5803, !5804, !5805}
!5801 = !DILocalVariable(name: "this", arg: 1, scope: !5799, type: !5768, flags: DIFlagArtificial | DIFlagObjectPointer)
!5802 = !DILocalVariable(name: "data", arg: 2, scope: !5799, file: !992, line: 57, type: !42)
!5803 = !DILocalVariable(name: "size", arg: 3, scope: !5799, file: !992, line: 57, type: !725)
!5804 = !DILocalVariable(name: "avail", scope: !5799, file: !992, line: 59, type: !725)
!5805 = !DILocalVariable(name: "readCount", scope: !5799, file: !992, line: 63, type: !725)
!5806 = !DILocation(line: 0, scope: !5799)
!5807 = !DILocation(line: 59, column: 18, scope: !5799)
!5808 = !DILocation(line: 60, column: 14, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5799, file: !992, line: 60, column: 9)
!5810 = !DILocation(line: 60, column: 9, scope: !5799)
!5811 = !DILocation(line: 65, column: 22, scope: !5799)
!5812 = !DILocation(line: 65, column: 5, scope: !5799)
!5813 = !DILocation(line: 66, column: 29, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5799, file: !992, line: 65, column: 30)
!5815 = !DILocation(line: 66, column: 23, scope: !5814)
!5816 = !DILocation(line: 66, column: 9, scope: !5814)
!5817 = !DILocation(line: 66, column: 27, scope: !5814)
!5818 = distinct !{!5818, !5812, !5819, !1358, !1359}
!5819 = !DILocation(line: 67, column: 5, scope: !5799)
!5820 = !DILocation(line: 69, column: 5, scope: !5799)
!5821 = distinct !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEPKhy", scope: !994, file: !992, line: 81, type: !1160, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1159, retainedNodes: !5822)
!5822 = !{!5823, !5824, !5825, !5826, !5827}
!5823 = !DILocalVariable(name: "this", arg: 1, scope: !5821, type: !5768, flags: DIFlagArtificial | DIFlagObjectPointer)
!5824 = !DILocalVariable(name: "data", arg: 2, scope: !5821, file: !992, line: 81, type: !37)
!5825 = !DILocalVariable(name: "size", arg: 3, scope: !5821, file: !992, line: 81, type: !725)
!5826 = !DILocalVariable(name: "space", scope: !5821, file: !992, line: 83, type: !725)
!5827 = !DILocalVariable(name: "writeCount", scope: !5821, file: !992, line: 87, type: !725)
!5828 = !DILocation(line: 0, scope: !5821)
!5829 = !DILocation(line: 83, column: 18, scope: !5821)
!5830 = !DILocation(line: 84, column: 14, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5821, file: !992, line: 84, column: 9)
!5832 = !DILocation(line: 84, column: 9, scope: !5821)
!5833 = !DILocation(line: 89, column: 23, scope: !5821)
!5834 = !DILocation(line: 89, column: 5, scope: !5821)
!5835 = !DILocation(line: 90, column: 37, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5821, file: !992, line: 89, column: 31)
!5837 = !DILocation(line: 90, column: 22, scope: !5836)
!5838 = !DILocation(line: 90, column: 9, scope: !5836)
!5839 = distinct !{!5839, !5834, !5840, !1358, !1359}
!5840 = !DILocation(line: 91, column: 5, scope: !5821)
!5841 = !DILocation(line: 93, column: 5, scope: !5821)
!5842 = !DILocation(line: 95, column: 5, scope: !5821)
!5843 = distinct !DISubprogram(name: "read", linkageName: "_ZN6Cicada14BufferedSerial4readEv", scope: !994, file: !992, line: 72, type: !1157, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1156, retainedNodes: !5844)
!5844 = !{!5845, !5846}
!5845 = !DILocalVariable(name: "this", arg: 1, scope: !5843, type: !5768, flags: DIFlagArtificial | DIFlagObjectPointer)
!5846 = !DILocalVariable(name: "c", scope: !5843, file: !992, line: 75, type: !39)
!5847 = !DILocation(line: 0, scope: !5843)
!5848 = !DILocation(line: 74, column: 5, scope: !5843)
!5849 = !DILocation(line: 75, column: 17, scope: !5843)
!5850 = !DILocation(line: 75, column: 29, scope: !5843)
!5851 = !DILocation(line: 76, column: 5, scope: !5843)
!5852 = !DILocation(line: 78, column: 5, scope: !5843)
!5853 = distinct !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEPKh", scope: !994, file: !992, line: 98, type: !1163, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1162, retainedNodes: !5854)
!5854 = !{!5855, !5856, !5857, !5858}
!5855 = !DILocalVariable(name: "this", arg: 1, scope: !5853, type: !5768, flags: DIFlagArtificial | DIFlagObjectPointer)
!5856 = !DILocalVariable(name: "data", arg: 2, scope: !5853, file: !992, line: 98, type: !37)
!5857 = !DILocalVariable(name: "space", scope: !5853, file: !992, line: 100, type: !725)
!5858 = !DILocalVariable(name: "writeCount", scope: !5853, file: !992, line: 102, type: !725)
!5859 = !DILocation(line: 0, scope: !5853)
!5860 = !DILocation(line: 100, column: 18, scope: !5853)
!5861 = !DILocation(line: 104, column: 12, scope: !5853)
!5862 = !DILocation(line: 104, column: 29, scope: !5853)
!5863 = !DILocation(line: 104, column: 37, scope: !5853)
!5864 = !DILocation(line: 104, column: 5, scope: !5853)
!5865 = !DILocation(line: 105, column: 37, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5853, file: !992, line: 104, column: 60)
!5867 = !DILocation(line: 105, column: 9, scope: !5866)
!5868 = distinct !{!5868, !5864, !5869, !1358, !1359}
!5869 = !DILocation(line: 106, column: 5, scope: !5853)
!5870 = !DILocation(line: 108, column: 5, scope: !5853)
!5871 = !DILocation(line: 110, column: 5, scope: !5853)
!5872 = distinct !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEh", scope: !994, file: !992, line: 113, type: !1166, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1165, retainedNodes: !5873)
!5873 = !{!5874, !5875}
!5874 = !DILocalVariable(name: "this", arg: 1, scope: !5872, type: !5768, flags: DIFlagArtificial | DIFlagObjectPointer)
!5875 = !DILocalVariable(name: "data", arg: 2, scope: !5872, file: !992, line: 113, type: !39)
!5876 = !DILocation(line: 0, scope: !5872)
!5877 = !DILocation(line: 115, column: 5, scope: !5872)
!5878 = !DILocation(line: 116, column: 5, scope: !5872)
!5879 = !DILocation(line: 117, column: 1, scope: !5872)
!5880 = distinct !DISubprogram(name: "canReadLine", linkageName: "_ZNK6Cicada14BufferedSerial11canReadLineEv", scope: !994, file: !992, line: 126, type: !1169, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1168, retainedNodes: !5881)
!5881 = !{!5882, !5883}
!5882 = !DILocalVariable(name: "this", arg: 1, scope: !5880, type: !5781, flags: DIFlagArtificial | DIFlagObjectPointer)
!5883 = !DILocalVariable(name: "lines", scope: !5880, file: !992, line: 129, type: !725)
!5884 = !DILocation(line: 0, scope: !5880)
!5885 = !DILocation(line: 128, column: 5, scope: !5880)
!5886 = !DILocation(line: 129, column: 18, scope: !5880)
!5887 = !DILocation(line: 129, column: 30, scope: !5880)
!5888 = !DILocation(line: 130, column: 5, scope: !5880)
!5889 = !DILocation(line: 132, column: 18, scope: !5880)
!5890 = !DILocation(line: 132, column: 5, scope: !5880)
!5891 = distinct !DISubprogram(name: "readLine", linkageName: "_ZN6Cicada14BufferedSerial8readLineEPhy", scope: !994, file: !992, line: 135, type: !1154, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1171, retainedNodes: !5892)
!5892 = !{!5893, !5894, !5895, !5896, !5897}
!5893 = !DILocalVariable(name: "this", arg: 1, scope: !5891, type: !5768, flags: DIFlagArtificial | DIFlagObjectPointer)
!5894 = !DILocalVariable(name: "data", arg: 2, scope: !5891, file: !992, line: 135, type: !42)
!5895 = !DILocalVariable(name: "size", arg: 3, scope: !5891, file: !992, line: 135, type: !725)
!5896 = !DILocalVariable(name: "readCount", scope: !5891, file: !992, line: 137, type: !725)
!5897 = !DILocalVariable(name: "c", scope: !5891, file: !992, line: 138, type: !39)
!5898 = !DILocation(line: 0, scope: !5891)
!5899 = !DILocation(line: 140, column: 14, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5891, file: !992, line: 140, column: 9)
!5901 = !DILocation(line: 140, column: 9, scope: !5891)
!5902 = !DILocation(line: 143, column: 12, scope: !5891)
!5903 = !DILocation(line: 143, column: 5, scope: !5891)
!5904 = !DILocation(line: 144, column: 13, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5891, file: !992, line: 143, column: 43)
!5906 = !DILocation(line: 145, column: 23, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5905, file: !992, line: 145, column: 13)
!5908 = !DILocation(line: 145, column: 13, scope: !5905)
!5909 = !DILocation(line: 146, column: 27, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5907, file: !992, line: 145, column: 35)
!5911 = !DILocation(line: 146, column: 13, scope: !5910)
!5912 = !DILocation(line: 146, column: 31, scope: !5910)
!5913 = !DILocation(line: 147, column: 9, scope: !5910)
!5914 = !DILocation(line: 143, column: 29, scope: !5891)
!5915 = distinct !{!5915, !5903, !5916, !1358, !1359}
!5916 = !DILocation(line: 148, column: 5, scope: !5891)
!5917 = !DILocation(line: 149, column: 5, scope: !5891)
!5918 = !DILocation(line: 149, column: 21, scope: !5891)
!5919 = !DILocation(line: 151, column: 5, scope: !5891)
!5920 = !DILocation(line: 152, column: 1, scope: !5891)
!5921 = distinct !DISubprogram(name: "flushReceiveBuffers", linkageName: "_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv", scope: !994, file: !992, line: 154, type: !1173, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1172, retainedNodes: !5922)
!5922 = !{!5923}
!5923 = !DILocalVariable(name: "this", arg: 1, scope: !5921, type: !5768, flags: DIFlagArtificial | DIFlagObjectPointer)
!5924 = !DILocation(line: 0, scope: !5921)
!5925 = !DILocation(line: 156, column: 5, scope: !5921)
!5926 = !DILocation(line: 157, column: 5, scope: !5921)
!5927 = !DILocation(line: 157, column: 17, scope: !5921)
!5928 = !DILocation(line: 158, column: 5, scope: !5921)
!5929 = !DILocation(line: 159, column: 1, scope: !5921)
!5930 = distinct !DISubprogram(name: "readBufferSize", linkageName: "_ZN6Cicada14BufferedSerial14readBufferSizeEv", scope: !994, file: !992, line: 161, type: !1176, scopeLine: 162, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1175, retainedNodes: !5931)
!5931 = !{!5932}
!5932 = !DILocalVariable(name: "this", arg: 1, scope: !5930, type: !5768, flags: DIFlagArtificial | DIFlagObjectPointer)
!5933 = !DILocation(line: 0, scope: !5930)
!5934 = !DILocation(line: 163, column: 12, scope: !5930)
!5935 = !DILocation(line: 163, column: 24, scope: !5930)
!5936 = !DILocation(line: 163, column: 5, scope: !5930)
!5937 = distinct !DISubprogram(name: "writeBufferSize", linkageName: "_ZN6Cicada14BufferedSerial15writeBufferSizeEv", scope: !994, file: !992, line: 166, type: !1176, scopeLine: 167, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1178, retainedNodes: !5938)
!5938 = !{!5939}
!5939 = !DILocalVariable(name: "this", arg: 1, scope: !5937, type: !5768, flags: DIFlagArtificial | DIFlagObjectPointer)
!5940 = !DILocation(line: 0, scope: !5937)
!5941 = !DILocation(line: 168, column: 12, scope: !5937)
!5942 = !DILocation(line: 168, column: 25, scope: !5937)
!5943 = !DILocation(line: 168, column: 5, scope: !5937)
!5944 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada14BufferedSerialD1Ev", scope: !675, file: !675, line: 42, type: !5945, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !101)
!5945 = !DISubroutineType(types: !101)
!5946 = !DILocation(line: 0, scope: !5944)
!5947 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada14BufferedSerialD0Ev", scope: !675, file: !675, line: 42, type: !5945, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !101)
!5948 = !DILocation(line: 0, scope: !5947)
!5949 = distinct !DISubprogram(name: "size", linkageName: "_ZNK6Cicada14CircularBufferIcE4sizeEv", scope: !1065, file: !1066, line: 190, type: !1103, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1106, retainedNodes: !5950)
!5950 = !{!5951}
!5951 = !DILocalVariable(name: "this", arg: 1, scope: !5949, type: !5952, flags: DIFlagArtificial | DIFlagObjectPointer)
!5952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 32)
!5953 = !DILocation(line: 0, scope: !5949)
!5954 = !DILocation(line: 192, column: 16, scope: !5949)
!5955 = !{!5956, !5957, i64 32}
!5956 = !{!"_ZTSN6Cicada14CircularBufferIcEE", !5957, i64 8, !5957, i64 16, !5957, i64 24, !5957, i64 32, !1468, i64 40}
!5957 = !{!"long long", !1368, i64 0}
!5958 = !DILocation(line: 192, column: 9, scope: !5949)
!5959 = distinct !DISubprogram(name: "flush", linkageName: "_ZN6Cicada18LineCircularBuffer5flushEv", scope: !1061, file: !1062, line: 123, type: !1137, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1136, retainedNodes: !5960)
!5960 = !{!5961}
!5961 = !DILocalVariable(name: "this", arg: 1, scope: !5959, type: !5962, flags: DIFlagArtificial | DIFlagObjectPointer)
!5962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 32)
!5963 = !DILocation(line: 0, scope: !5959)
!5964 = !DILocation(line: 125, column: 9, scope: !5959)
!5965 = !DILocation(line: 125, column: 24, scope: !5959)
!5966 = !{!5967, !5968, i64 44}
!5967 = !{!"_ZTSN6Cicada18LineCircularBufferE", !5968, i64 44}
!5968 = !{!"short", !1368, i64 0}
!5969 = !DILocation(line: 126, column: 25, scope: !5959)
!5970 = !DILocation(line: 127, column: 5, scope: !5959)
!5971 = distinct !DISubprogram(name: "flush", linkageName: "_ZN6Cicada14CircularBufferIcE5flushEv", scope: !1065, file: !1066, line: 148, type: !1080, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1095, retainedNodes: !5972)
!5972 = !{!5973}
!5973 = !DILocalVariable(name: "this", arg: 1, scope: !5971, type: !5974, flags: DIFlagArtificial | DIFlagObjectPointer)
!5974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 32)
!5975 = !DILocation(line: 0, scope: !5971)
!5976 = !DILocation(line: 150, column: 9, scope: !5971)
!5977 = !DILocation(line: 153, column: 5, scope: !5971)
!5978 = !DILocation(line: 151, column: 19, scope: !5971)
!5979 = distinct !DISubprogram(name: "numBufferedLines", linkageName: "_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv", scope: !1061, file: !1062, line: 97, type: !1131, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1130, retainedNodes: !5980)
!5980 = !{!5981}
!5981 = !DILocalVariable(name: "this", arg: 1, scope: !5979, type: !5982, flags: DIFlagArtificial | DIFlagObjectPointer)
!5982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 32)
!5983 = !DILocation(line: 0, scope: !5979)
!5984 = !DILocation(line: 99, column: 16, scope: !5979)
!5985 = !DILocation(line: 99, column: 9, scope: !5979)
!5986 = distinct !DISubprogram(name: "copyToBuffer", linkageName: "_ZN6Cicada14BufferedSerial12copyToBufferEh", scope: !994, file: !992, line: 119, type: !1166, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1180, retainedNodes: !5987)
!5987 = !{!5988, !5989}
!5988 = !DILocalVariable(name: "this", arg: 1, scope: !5986, type: !5768, flags: DIFlagArtificial | DIFlagObjectPointer)
!5989 = !DILocalVariable(name: "data", arg: 2, scope: !5986, file: !992, line: 119, type: !39)
!5990 = !DILocation(line: 0, scope: !5986)
!5991 = !DILocation(line: 121, column: 5, scope: !5986)
!5992 = !DILocation(line: 122, column: 5, scope: !5986)
!5993 = !DILocation(line: 122, column: 18, scope: !5986)
!5994 = !DILocation(line: 123, column: 5, scope: !5986)
!5995 = !DILocation(line: 124, column: 1, scope: !5986)
!5996 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada18LineCircularBuffer4pushEc", scope: !1061, file: !1062, line: 60, type: !1122, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1121, retainedNodes: !5997)
!5997 = !{!5998, !5999}
!5998 = !DILocalVariable(name: "this", arg: 1, scope: !5996, type: !5962, flags: DIFlagArtificial | DIFlagObjectPointer)
!5999 = !DILocalVariable(name: "data", arg: 2, scope: !5996, file: !1062, line: 60, type: !114)
!6000 = !DILocation(line: 0, scope: !5996)
!6001 = !DILocation(line: 62, column: 31, scope: !5996)
!6002 = !DILocation(line: 64, column: 18, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !5996, file: !1062, line: 64, column: 13)
!6004 = !DILocation(line: 64, column: 13, scope: !5996)
!6005 = !DILocation(line: 65, column: 13, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !6003, file: !1062, line: 64, column: 27)
!6007 = !DILocation(line: 65, column: 27, scope: !6006)
!6008 = !DILocation(line: 66, column: 9, scope: !6006)
!6009 = !DILocation(line: 67, column: 5, scope: !5996)
!6010 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIcE4pushEc", scope: !1065, file: !1066, line: 88, type: !1086, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1085, retainedNodes: !6011)
!6011 = !{!6012, !6013}
!6012 = !DILocalVariable(name: "this", arg: 1, scope: !6010, type: !5974, flags: DIFlagArtificial | DIFlagObjectPointer)
!6013 = !DILocalVariable(name: "data", arg: 2, scope: !6010, file: !1066, line: 88, type: !114)
!6014 = !DILocation(line: 0, scope: !6010)
!6015 = !DILocation(line: 90, column: 9, scope: !6010)
!6016 = !{!5956, !1468, i64 40}
!6017 = !DILocation(line: 90, column: 17, scope: !6010)
!6018 = !{!5956, !5957, i64 8}
!6019 = !DILocation(line: 90, column: 29, scope: !6010)
!6020 = !DILocation(line: 91, column: 9, scope: !6010)
!6021 = !DILocation(line: 92, column: 13, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !6010, file: !1066, line: 92, column: 13)
!6023 = !{!5956, !5957, i64 24}
!6024 = !DILocation(line: 92, column: 30, scope: !6022)
!6025 = !DILocation(line: 92, column: 28, scope: !6022)
!6026 = !DILocation(line: 92, column: 13, scope: !6010)
!6027 = !DILocation(line: 93, column: 27, scope: !6022)
!6028 = !DILocation(line: 93, column: 13, scope: !6022)
!6029 = !DILocation(line: 94, column: 5, scope: !6010)
!6030 = distinct !DISubprogram(name: "incrementOrResetHead", linkageName: "_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy", scope: !1065, file: !1066, line: 202, type: !1108, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1107, retainedNodes: !6031)
!6031 = !{!6032, !6033}
!6032 = !DILocalVariable(name: "this", arg: 1, scope: !6030, type: !5974, flags: DIFlagArtificial | DIFlagObjectPointer)
!6033 = !DILocalVariable(name: "head", arg: 2, scope: !6030, file: !1066, line: 202, type: !1110)
!6034 = !DILocation(line: 0, scope: !6030)
!6035 = !DILocation(line: 204, column: 13, scope: !6030)
!6036 = !{!5957, !5957, i64 0}
!6037 = !DILocation(line: 205, column: 21, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6030, file: !1066, line: 205, column: 13)
!6039 = !DILocation(line: 205, column: 18, scope: !6038)
!6040 = !DILocation(line: 205, column: 13, scope: !6030)
!6041 = !DILocation(line: 207, column: 5, scope: !6030)
!6042 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada18LineCircularBuffer4pullEv", scope: !1061, file: !1062, line: 83, type: !1128, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1127, retainedNodes: !6043)
!6043 = !{!6044, !6045}
!6044 = !DILocalVariable(name: "this", arg: 1, scope: !6042, type: !5962, flags: DIFlagArtificial | DIFlagObjectPointer)
!6045 = !DILocalVariable(name: "data", scope: !6042, file: !1062, line: 85, type: !114)
!6046 = !DILocation(line: 0, scope: !6042)
!6047 = !DILocation(line: 85, column: 43, scope: !6042)
!6048 = !DILocation(line: 87, column: 18, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6042, file: !1062, line: 87, column: 13)
!6050 = !DILocation(line: 87, column: 13, scope: !6042)
!6051 = !DILocation(line: 88, column: 13, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6049, file: !1062, line: 87, column: 27)
!6053 = !DILocation(line: 88, column: 27, scope: !6052)
!6054 = !DILocation(line: 89, column: 9, scope: !6052)
!6055 = !DILocation(line: 91, column: 9, scope: !6042)
!6056 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIcE4pullEv", scope: !1065, file: !1066, line: 124, type: !1092, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1091, retainedNodes: !6057)
!6057 = !{!6058, !6059}
!6058 = !DILocalVariable(name: "this", arg: 1, scope: !6056, type: !5974, flags: DIFlagArtificial | DIFlagObjectPointer)
!6059 = !DILocalVariable(name: "data", scope: !6056, file: !1066, line: 126, type: !114)
!6060 = !DILocation(line: 0, scope: !6056)
!6061 = !DILocation(line: 126, column: 18, scope: !6056)
!6062 = !DILocation(line: 126, column: 26, scope: !6056)
!6063 = !{!5956, !5957, i64 16}
!6064 = !DILocation(line: 127, column: 9, scope: !6056)
!6065 = !DILocation(line: 128, column: 13, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6056, file: !1066, line: 128, column: 13)
!6067 = !DILocation(line: 128, column: 28, scope: !6066)
!6068 = !DILocation(line: 128, column: 13, scope: !6056)
!6069 = !DILocation(line: 129, column: 27, scope: !6066)
!6070 = !DILocation(line: 129, column: 13, scope: !6066)
!6071 = !DILocation(line: 131, column: 9, scope: !6056)
!6072 = distinct !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv", scope: !1065, file: !1066, line: 182, type: !1103, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1105, retainedNodes: !6073)
!6073 = !{!6074}
!6074 = !DILocalVariable(name: "this", arg: 1, scope: !6072, type: !5952, flags: DIFlagArtificial | DIFlagObjectPointer)
!6075 = !DILocation(line: 0, scope: !6072)
!6076 = !DILocation(line: 184, column: 16, scope: !6072)
!6077 = !DILocation(line: 184, column: 30, scope: !6072)
!6078 = !DILocation(line: 184, column: 28, scope: !6072)
!6079 = !DILocation(line: 184, column: 9, scope: !6072)
!6080 = distinct !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv", scope: !1065, file: !1066, line: 174, type: !1103, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1102, retainedNodes: !6081)
!6081 = !{!6082}
!6082 = !DILocalVariable(name: "this", arg: 1, scope: !6080, type: !5952, flags: DIFlagArtificial | DIFlagObjectPointer)
!6083 = !DILocation(line: 0, scope: !6080)
!6084 = !DILocation(line: 176, column: 16, scope: !6080)
!6085 = !DILocation(line: 176, column: 9, scope: !6080)
!6086 = distinct !DISubprogram(name: "~CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIcED2Ev", scope: !1065, file: !1066, line: 56, type: !1080, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1079, retainedNodes: !6087)
!6087 = !{!6088}
!6088 = !DILocalVariable(name: "this", arg: 1, scope: !6086, type: !5974, flags: DIFlagArtificial | DIFlagObjectPointer)
!6089 = !DILocation(line: 0, scope: !6086)
!6090 = !DILocation(line: 57, column: 7, scope: !6086)
!6091 = distinct !DISubprogram(name: "~IBufferedSerial", linkageName: "_ZN6Cicada15IBufferedSerialD2Ev", scope: !997, file: !998, line: 42, type: !1031, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1030, retainedNodes: !6092)
!6092 = !{!6093}
!6093 = !DILocalVariable(name: "this", arg: 1, scope: !6091, type: !6094, flags: DIFlagArtificial | DIFlagObjectPointer)
!6094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 32)
!6095 = !DILocation(line: 0, scope: !6091)
!6096 = !DILocation(line: 42, column: 34, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6091, file: !998, line: 42, column: 32)
!6098 = !DILocation(line: 42, column: 34, scope: !6091)
!6099 = distinct !DISubprogram(name: "~ISerial", linkageName: "_ZN6Cicada7ISerialD2Ev", scope: !1002, file: !1003, line: 40, type: !1007, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1006, retainedNodes: !6100)
!6100 = !{!6101}
!6101 = !DILocalVariable(name: "this", arg: 1, scope: !6099, type: !6102, flags: DIFlagArtificial | DIFlagObjectPointer)
!6102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 32)
!6103 = !DILocation(line: 0, scope: !6099)
!6104 = !DILocation(line: 40, column: 26, scope: !6099)
!6105 = distinct !DISubprogram(name: "~ICommDevice", linkageName: "_ZN6Cicada11ICommDeviceD2Ev", scope: !776, file: !777, line: 46, type: !785, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !784, retainedNodes: !6106)
!6106 = !{!6107}
!6107 = !DILocalVariable(name: "this", arg: 1, scope: !6105, type: !6108, flags: DIFlagArtificial | DIFlagObjectPointer)
!6108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 32)
!6109 = !DILocation(line: 0, scope: !6105)
!6110 = !DILocation(line: 46, column: 30, scope: !6105)
!6111 = distinct !DISubprogram(name: "BufferedSerial", linkageName: "_ZN6Cicada14BufferedSerialC2EPcS1_yy", scope: !994, file: !992, line: 30, type: !1141, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1140, retainedNodes: !6112)
!6112 = !{!6113, !6114, !6115, !6116, !6117}
!6113 = !DILocalVariable(name: "this", arg: 1, scope: !6111, type: !5768, flags: DIFlagArtificial | DIFlagObjectPointer)
!6114 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !6111, file: !992, line: 31, type: !212)
!6115 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !6111, file: !992, line: 31, type: !212)
!6116 = !DILocalVariable(name: "readBufferSize", arg: 4, scope: !6111, file: !992, line: 31, type: !725)
!6117 = !DILocalVariable(name: "writeBufferSize", arg: 5, scope: !6111, file: !992, line: 31, type: !725)
!6118 = !DILocation(line: 0, scope: !6111)
!6119 = !DILocation(line: 33, column: 1, scope: !6111)
!6120 = !DILocation(line: 30, column: 17, scope: !6111)
!6121 = !DILocation(line: 32, column: 5, scope: !6111)
!6122 = !DILocation(line: 32, column: 46, scope: !6111)
!6123 = !DILocation(line: 33, column: 2, scope: !6111)
!6124 = distinct !DISubprogram(name: "IBufferedSerial", linkageName: "_ZN6Cicada15IBufferedSerialC2Ev", scope: !997, file: !998, line: 39, type: !1031, scopeLine: 39, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !6125, retainedNodes: !6126)
!6125 = !DISubprogram(name: "IBufferedSerial", scope: !997, type: !1031, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6126 = !{!6127}
!6127 = !DILocalVariable(name: "this", arg: 1, scope: !6124, type: !6094, flags: DIFlagArtificial | DIFlagObjectPointer)
!6128 = !DILocation(line: 0, scope: !6124)
!6129 = !DILocation(line: 39, column: 7, scope: !6124)
!6130 = distinct !DISubprogram(name: "LineCircularBuffer", linkageName: "_ZN6Cicada18LineCircularBufferC2EPcy", scope: !1061, file: !1062, line: 41, type: !1115, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1114, retainedNodes: !6131)
!6131 = !{!6132, !6133, !6134}
!6132 = !DILocalVariable(name: "this", arg: 1, scope: !6130, type: !5962, flags: DIFlagArtificial | DIFlagObjectPointer)
!6133 = !DILocalVariable(name: "buffer", arg: 2, scope: !6130, file: !1062, line: 41, type: !212)
!6134 = !DILocalVariable(name: "bufferSize", arg: 3, scope: !6130, file: !1062, line: 41, type: !725)
!6135 = !DILocation(line: 0, scope: !6130)
!6136 = !DILocation(line: 44, column: 5, scope: !6130)
!6137 = !DILocation(line: 42, column: 9, scope: !6130)
!6138 = !DILocation(line: 43, column: 9, scope: !6130)
!6139 = !DILocation(line: 44, column: 7, scope: !6130)
!6140 = distinct !DISubprogram(name: "CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIcEC2EPcy", scope: !1065, file: !1066, line: 48, type: !1076, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1075, retainedNodes: !6141)
!6141 = !{!6142, !6143, !6144}
!6142 = !DILocalVariable(name: "this", arg: 1, scope: !6140, type: !5974, flags: DIFlagArtificial | DIFlagObjectPointer)
!6143 = !DILocalVariable(name: "buffer", arg: 2, scope: !6140, file: !1066, line: 48, type: !212)
!6144 = !DILocalVariable(name: "bufferSize", arg: 3, scope: !6140, file: !1066, line: 48, type: !725)
!6145 = !DILocation(line: 0, scope: !6140)
!6146 = !DILocation(line: 54, column: 5, scope: !6140)
!6147 = !DILocation(line: 49, column: 9, scope: !6140)
!6148 = !DILocation(line: 52, column: 9, scope: !6140)
!6149 = !DILocation(line: 50, column: 9, scope: !6140)
!6150 = !DILocation(line: 53, column: 9, scope: !6140)
!6151 = !DILocation(line: 54, column: 7, scope: !6140)
!6152 = distinct !DISubprogram(name: "~LineCircularBuffer", linkageName: "_ZN6Cicada18LineCircularBufferD0Ev", scope: !1061, file: !1062, line: 38, type: !1137, scopeLine: 38, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !6153, retainedNodes: !6154)
!6153 = !DISubprogram(name: "~LineCircularBuffer", scope: !1061, type: !1137, containingType: !1061, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!6154 = !{!6155}
!6155 = !DILocalVariable(name: "this", arg: 1, scope: !6152, type: !5962, flags: DIFlagArtificial | DIFlagObjectPointer)
!6156 = !DILocation(line: 0, scope: !6152)
!6157 = !DILocation(line: 38, column: 7, scope: !6152)
!6158 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada18LineCircularBuffer4pushEPKcy", scope: !1061, file: !1062, line: 46, type: !1119, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1118, retainedNodes: !6159)
!6159 = !{!6160, !6161, !6162, !6163}
!6160 = !DILocalVariable(name: "this", arg: 1, scope: !6158, type: !5962, flags: DIFlagArtificial | DIFlagObjectPointer)
!6161 = !DILocalVariable(name: "data", arg: 2, scope: !6158, file: !1062, line: 46, type: !751)
!6162 = !DILocalVariable(name: "size", arg: 3, scope: !6158, file: !1062, line: 46, type: !725)
!6163 = !DILocalVariable(name: "writeCount", scope: !6158, file: !1062, line: 51, type: !725)
!6164 = !DILocation(line: 0, scope: !6158)
!6165 = !DILocation(line: 48, column: 42, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6158, file: !1062, line: 48, column: 13)
!6167 = !DILocation(line: 48, column: 18, scope: !6166)
!6168 = !DILocation(line: 48, column: 13, scope: !6158)
!6169 = !DILocation(line: 49, column: 42, scope: !6166)
!6170 = !DILocation(line: 49, column: 13, scope: !6166)
!6171 = !DILocation(line: 53, column: 27, scope: !6158)
!6172 = !DILocation(line: 53, column: 9, scope: !6158)
!6173 = !DILocation(line: 54, column: 33, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6158, file: !1062, line: 53, column: 35)
!6175 = !DILocation(line: 54, column: 18, scope: !6174)
!6176 = !DILocation(line: 54, column: 13, scope: !6174)
!6177 = distinct !{!6177, !6172, !6178, !1358, !1359}
!6178 = !DILocation(line: 55, column: 9, scope: !6158)
!6179 = !DILocation(line: 57, column: 9, scope: !6158)
!6180 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada18LineCircularBuffer4pullEPcy", scope: !1061, file: !1062, line: 69, type: !1125, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1124, retainedNodes: !6181)
!6181 = !{!6182, !6183, !6184, !6185}
!6182 = !DILocalVariable(name: "this", arg: 1, scope: !6180, type: !5962, flags: DIFlagArtificial | DIFlagObjectPointer)
!6183 = !DILocalVariable(name: "data", arg: 2, scope: !6180, file: !1062, line: 69, type: !212)
!6184 = !DILocalVariable(name: "size", arg: 3, scope: !6180, file: !1062, line: 69, type: !725)
!6185 = !DILocalVariable(name: "readCount", scope: !6180, file: !1062, line: 74, type: !725)
!6186 = !DILocation(line: 0, scope: !6180)
!6187 = !DILocation(line: 71, column: 42, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6180, file: !1062, line: 71, column: 13)
!6189 = !DILocation(line: 71, column: 18, scope: !6188)
!6190 = !DILocation(line: 71, column: 13, scope: !6180)
!6191 = !DILocation(line: 72, column: 42, scope: !6188)
!6192 = !DILocation(line: 72, column: 13, scope: !6188)
!6193 = !DILocation(line: 76, column: 26, scope: !6180)
!6194 = !DILocation(line: 76, column: 9, scope: !6180)
!6195 = !DILocation(line: 77, column: 33, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6180, file: !1062, line: 76, column: 34)
!6197 = !DILocation(line: 77, column: 27, scope: !6196)
!6198 = !DILocation(line: 77, column: 13, scope: !6196)
!6199 = !DILocation(line: 77, column: 31, scope: !6196)
!6200 = distinct !{!6200, !6194, !6201, !1358, !1359}
!6201 = !DILocation(line: 78, column: 9, scope: !6180)
!6202 = !DILocation(line: 80, column: 9, scope: !6180)
!6203 = distinct !DISubprogram(name: "read", linkageName: "_ZN6Cicada14CircularBufferIcE4readEv", scope: !1065, file: !1066, line: 140, type: !1092, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1094, retainedNodes: !6204)
!6204 = !{!6205}
!6205 = !DILocalVariable(name: "this", arg: 1, scope: !6203, type: !5974, flags: DIFlagArtificial | DIFlagObjectPointer)
!6206 = !DILocation(line: 0, scope: !6203)
!6207 = !DILocation(line: 142, column: 16, scope: !6203)
!6208 = !DILocation(line: 142, column: 24, scope: !6203)
!6209 = !DILocation(line: 142, column: 9, scope: !6203)
!6210 = distinct !DISubprogram(name: "isEmpty", linkageName: "_ZNK6Cicada14CircularBufferIcE7isEmptyEv", scope: !1065, file: !1066, line: 158, type: !1097, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1096, retainedNodes: !6211)
!6211 = !{!6212}
!6212 = !DILocalVariable(name: "this", arg: 1, scope: !6210, type: !5952, flags: DIFlagArtificial | DIFlagObjectPointer)
!6213 = !DILocation(line: 0, scope: !6210)
!6214 = !DILocation(line: 160, column: 16, scope: !6210)
!6215 = !DILocation(line: 160, column: 31, scope: !6210)
!6216 = !DILocation(line: 160, column: 9, scope: !6210)
!6217 = distinct !DISubprogram(name: "isFull", linkageName: "_ZNK6Cicada14CircularBufferIcE6isFullEv", scope: !1065, file: !1066, line: 166, type: !1097, scopeLine: 167, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1101, retainedNodes: !6218)
!6218 = !{!6219}
!6219 = !DILocalVariable(name: "this", arg: 1, scope: !6217, type: !5952, flags: DIFlagArtificial | DIFlagObjectPointer)
!6220 = !DILocation(line: 0, scope: !6217)
!6221 = !DILocation(line: 168, column: 16, scope: !6217)
!6222 = !DILocation(line: 168, column: 34, scope: !6217)
!6223 = !DILocation(line: 168, column: 31, scope: !6217)
!6224 = !DILocation(line: 168, column: 9, scope: !6217)
!6225 = distinct !DISubprogram(name: "~CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIcED0Ev", scope: !1065, file: !1066, line: 56, type: !1080, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1079, retainedNodes: !6226)
!6226 = !{!6227}
!6227 = !DILocalVariable(name: "this", arg: 1, scope: !6225, type: !5974, flags: DIFlagArtificial | DIFlagObjectPointer)
!6228 = !DILocation(line: 0, scope: !6225)
!6229 = !DILocation(line: 57, column: 5, scope: !6225)
!6230 = !DILocation(line: 57, column: 7, scope: !6225)
!6231 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIcE4pushEPKcy", scope: !1065, file: !1066, line: 65, type: !1083, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1082, retainedNodes: !6232)
!6232 = !{!6233, !6234, !6235, !6236}
!6233 = !DILocalVariable(name: "this", arg: 1, scope: !6231, type: !5974, flags: DIFlagArtificial | DIFlagObjectPointer)
!6234 = !DILocalVariable(name: "data", arg: 2, scope: !6231, file: !1066, line: 65, type: !751)
!6235 = !DILocalVariable(name: "size", arg: 3, scope: !6231, file: !1066, line: 65, type: !725)
!6236 = !DILocalVariable(name: "writeCount", scope: !6231, file: !1066, line: 70, type: !725)
!6237 = !DILocation(line: 0, scope: !6231)
!6238 = !DILocation(line: 67, column: 20, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6231, file: !1066, line: 67, column: 13)
!6240 = !DILocation(line: 67, column: 18, scope: !6239)
!6241 = !DILocation(line: 67, column: 13, scope: !6231)
!6242 = !DILocation(line: 68, column: 20, scope: !6239)
!6243 = !DILocation(line: 68, column: 13, scope: !6239)
!6244 = !DILocation(line: 72, column: 27, scope: !6231)
!6245 = !DILocation(line: 72, column: 9, scope: !6231)
!6246 = !DILocation(line: 73, column: 50, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6231, file: !1066, line: 72, column: 35)
!6248 = !DILocation(line: 73, column: 35, scope: !6247)
!6249 = !DILocation(line: 73, column: 13, scope: !6247)
!6250 = !DILocation(line: 73, column: 21, scope: !6247)
!6251 = !DILocation(line: 73, column: 33, scope: !6247)
!6252 = !DILocation(line: 74, column: 13, scope: !6247)
!6253 = distinct !{!6253, !6245, !6254, !1358, !1359}
!6254 = !DILocation(line: 75, column: 9, scope: !6231)
!6255 = !DILocation(line: 76, column: 9, scope: !6231)
!6256 = !DILocation(line: 76, column: 24, scope: !6231)
!6257 = !DILocation(line: 78, column: 9, scope: !6231)
!6258 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIcE4pullEPcy", scope: !1065, file: !1066, line: 102, type: !1089, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1088, retainedNodes: !6259)
!6259 = !{!6260, !6261, !6262, !6263}
!6260 = !DILocalVariable(name: "this", arg: 1, scope: !6258, type: !5974, flags: DIFlagArtificial | DIFlagObjectPointer)
!6261 = !DILocalVariable(name: "data", arg: 2, scope: !6258, file: !1066, line: 102, type: !212)
!6262 = !DILocalVariable(name: "size", arg: 3, scope: !6258, file: !1066, line: 102, type: !725)
!6263 = !DILocalVariable(name: "readCount", scope: !6258, file: !1066, line: 107, type: !725)
!6264 = !DILocation(line: 0, scope: !6258)
!6265 = !DILocation(line: 104, column: 20, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6258, file: !1066, line: 104, column: 13)
!6267 = !DILocation(line: 104, column: 18, scope: !6266)
!6268 = !DILocation(line: 104, column: 13, scope: !6258)
!6269 = !DILocation(line: 105, column: 20, scope: !6266)
!6270 = !DILocation(line: 105, column: 13, scope: !6266)
!6271 = !DILocation(line: 109, column: 26, scope: !6258)
!6272 = !DILocation(line: 109, column: 9, scope: !6258)
!6273 = !DILocation(line: 110, column: 33, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6258, file: !1066, line: 109, column: 34)
!6275 = !DILocation(line: 110, column: 41, scope: !6274)
!6276 = !DILocation(line: 110, column: 27, scope: !6274)
!6277 = !DILocation(line: 110, column: 13, scope: !6274)
!6278 = !DILocation(line: 110, column: 31, scope: !6274)
!6279 = !DILocation(line: 111, column: 13, scope: !6274)
!6280 = distinct !{!6280, !6272, !6281, !1358, !1359}
!6281 = !DILocation(line: 112, column: 9, scope: !6258)
!6282 = !DILocation(line: 113, column: 9, scope: !6258)
!6283 = !DILocation(line: 113, column: 24, scope: !6258)
!6284 = !DILocation(line: 115, column: 9, scope: !6258)
!6285 = distinct !DISubprogram(name: "ICommDevice", linkageName: "_ZN6Cicada11ICommDeviceC2Ev", scope: !776, file: !777, line: 43, type: !785, scopeLine: 43, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !6286, retainedNodes: !6287)
!6286 = !DISubprogram(name: "ICommDevice", scope: !776, type: !785, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6287 = !{!6288}
!6288 = !DILocalVariable(name: "this", arg: 1, scope: !6285, type: !6108, flags: DIFlagArtificial | DIFlagObjectPointer)
!6289 = !DILocation(line: 0, scope: !6285)
!6290 = !DILocation(line: 43, column: 7, scope: !6285)
!6291 = distinct !DISubprogram(name: "ISerial", linkageName: "_ZN6Cicada7ISerialC2Ev", scope: !1002, file: !1003, line: 37, type: !1007, scopeLine: 37, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !6292, retainedNodes: !6293)
!6292 = !DISubprogram(name: "ISerial", scope: !1002, type: !1007, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6293 = !{!6294}
!6294 = !DILocalVariable(name: "this", arg: 1, scope: !6291, type: !6102, flags: DIFlagArtificial | DIFlagObjectPointer)
!6295 = !DILocation(line: 0, scope: !6291)
!6296 = !DILocation(line: 37, column: 7, scope: !6291)
!6297 = distinct !DISubprogram(name: "~IBufferedSerial", linkageName: "_ZN6Cicada15IBufferedSerialD0Ev", scope: !997, file: !998, line: 42, type: !1031, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1030, retainedNodes: !6298)
!6298 = !{!6299}
!6299 = !DILocalVariable(name: "this", arg: 1, scope: !6297, type: !6094, flags: DIFlagArtificial | DIFlagObjectPointer)
!6300 = !DILocation(line: 0, scope: !6297)
!6301 = !DILocation(line: 42, column: 32, scope: !6297)
!6302 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada15IBufferedSerialD1Ev", scope: !998, file: !998, line: 42, type: !5945, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !101)
!6303 = !DILocation(line: 0, scope: !6302)
!6304 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada15IBufferedSerialD0Ev", scope: !998, file: !998, line: 42, type: !5945, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !101)
!6305 = !DILocation(line: 0, scope: !6304)
!6306 = distinct !DISubprogram(name: "~ISerial", linkageName: "_ZN6Cicada7ISerialD0Ev", scope: !1002, file: !1003, line: 40, type: !1007, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1006, retainedNodes: !6307)
!6307 = !{!6308}
!6308 = !DILocalVariable(name: "this", arg: 1, scope: !6306, type: !6102, flags: DIFlagArtificial | DIFlagObjectPointer)
!6309 = !DILocation(line: 0, scope: !6306)
!6310 = !DILocation(line: 40, column: 24, scope: !6306)
!6311 = distinct !DISubprogram(name: "~ICommDevice", linkageName: "_ZN6Cicada11ICommDeviceD0Ev", scope: !776, file: !777, line: 46, type: !785, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !784, retainedNodes: !6312)
!6312 = !{!6313}
!6313 = !DILocalVariable(name: "this", arg: 1, scope: !6311, type: !6108, flags: DIFlagArtificial | DIFlagObjectPointer)
!6314 = !DILocation(line: 0, scope: !6311)
!6315 = !DILocation(line: 46, column: 28, scope: !6311)
!6316 = distinct !DISubprogram(name: "BufferedSerial", linkageName: "_ZN6Cicada14BufferedSerialC2EPcS1_y", scope: !994, file: !992, line: 35, type: !1145, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1144, retainedNodes: !6317)
!6317 = !{!6318, !6319, !6320, !6321}
!6318 = !DILocalVariable(name: "this", arg: 1, scope: !6316, type: !5768, flags: DIFlagArtificial | DIFlagObjectPointer)
!6319 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !6316, file: !992, line: 35, type: !212)
!6320 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !6316, file: !992, line: 35, type: !212)
!6321 = !DILocalVariable(name: "bufferSize", arg: 4, scope: !6316, file: !992, line: 35, type: !725)
!6322 = !DILocation(line: 0, scope: !6316)
!6323 = !DILocation(line: 37, column: 1, scope: !6316)
!6324 = !DILocation(line: 35, column: 17, scope: !6316)
!6325 = !DILocation(line: 36, column: 5, scope: !6316)
!6326 = !DILocation(line: 36, column: 42, scope: !6316)
!6327 = !DILocation(line: 37, column: 2, scope: !6316)
!6328 = distinct !DISubprogram(name: "transferToAndFromBuffer", linkageName: "_ZN6Cicada14BufferedSerial23transferToAndFromBufferEv", scope: !994, file: !992, line: 171, type: !1173, scopeLine: 172, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !991, declaration: !1179, retainedNodes: !6329)
!6329 = !{!6330, !6331}
!6330 = !DILocalVariable(name: "this", arg: 1, scope: !6328, type: !5768, flags: DIFlagArtificial | DIFlagObjectPointer)
!6331 = !DILocalVariable(name: "data", scope: !6328, file: !992, line: 173, type: !39)
!6332 = !DILocation(line: 0, scope: !6328)
!6333 = !DILocation(line: 173, column: 5, scope: !6328)
!6334 = !DILocation(line: 174, column: 9, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6328, file: !992, line: 174, column: 9)
!6336 = !DILocation(line: 174, column: 23, scope: !6335)
!6337 = !DILocation(line: 174, column: 27, scope: !6335)
!6338 = !DILocation(line: 174, column: 39, scope: !6335)
!6339 = !DILocation(line: 174, column: 9, scope: !6328)
!6340 = !DILocation(line: 175, column: 26, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6335, file: !992, line: 174, column: 49)
!6342 = !DILocation(line: 175, column: 21, scope: !6341)
!6343 = !DILocation(line: 176, column: 5, scope: !6341)
!6344 = !DILocation(line: 178, column: 9, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6328, file: !992, line: 178, column: 9)
!6346 = !DILocation(line: 178, column: 22, scope: !6345)
!6347 = !DILocation(line: 178, column: 9, scope: !6328)
!6348 = !DILocation(line: 179, column: 35, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6350, file: !992, line: 179, column: 13)
!6350 = distinct !DILexicalBlock(scope: !6345, file: !992, line: 178, column: 40)
!6351 = !DILocation(line: 179, column: 13, scope: !6349)
!6352 = !DILocation(line: 179, column: 13, scope: !6350)
!6353 = !DILocation(line: 180, column: 26, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6349, file: !992, line: 179, column: 44)
!6355 = !DILocation(line: 181, column: 9, scope: !6354)
!6356 = !DILocation(line: 183, column: 1, scope: !6328)
!6357 = distinct !DISubprogram(name: "eDisableInterrupts", linkageName: "_Z18eDisableInterruptsv", scope: !1184, file: !1184, line: 27, type: !99, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !101)
!6358 = !DILocation(line: 142, column: 3, scope: !6359, inlinedAt: !6360)
!6359 = distinct !DISubprogram(name: "__disable_irq", linkageName: "_ZL13__disable_irqv", scope: !5170, file: !5170, line: 140, type: !99, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !101)
!6360 = distinct !DILocation(line: 29, column: 5, scope: !6357)
!6361 = !{i64 1184613}
!6362 = !DILocation(line: 30, column: 1, scope: !6357)
!6363 = distinct !DISubprogram(name: "eEnableInterrupts", linkageName: "_Z17eEnableInterruptsv", scope: !1184, file: !1184, line: 32, type: !99, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !101)
!6364 = !DILocation(line: 131, column: 3, scope: !6365, inlinedAt: !6366)
!6365 = distinct !DISubprogram(name: "__enable_irq", linkageName: "_ZL12__enable_irqv", scope: !5170, file: !5170, line: 129, type: !99, scopeLine: 130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !101)
!6366 = distinct !DILocation(line: 34, column: 5, scope: !6363)
!6367 = !{i64 1184341}
!6368 = !DILocation(line: 35, column: 1, scope: !6363)
!6369 = distinct !DISubprogram(name: "~Stm32Uart", linkageName: "_ZN6Cicada9Stm32UartD2Ev", scope: !671, file: !573, line: 73, type: !731, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, declaration: !730, retainedNodes: !6370)
!6370 = !{!6371}
!6371 = !DILocalVariable(name: "this", arg: 1, scope: !6369, type: !678, flags: DIFlagArtificial | DIFlagObjectPointer)
!6372 = !DILocation(line: 0, scope: !6369)
!6373 = !DILocation(line: 74, column: 1, scope: !6369)
!6374 = !DILocation(line: 75, column: 9, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6376, file: !573, line: 75, column: 9)
!6376 = distinct !DILexicalBlock(scope: !6369, file: !573, line: 74, column: 1)
!6377 = !{!6378, !1368, i64 104}
!6378 = !{!"_ZTSN6Cicada9Stm32UartE", !1368, i64 104, !6379, i64 108, !1468, i64 180, !5968, i64 184, !5968, i64 186, !6383, i64 188}
!6379 = !{!"_ZTS20__UART_HandleTypeDef", !1468, i64 0, !6380, i64 4, !1468, i64 32, !5968, i64 36, !5968, i64 38, !1468, i64 40, !5968, i64 44, !5968, i64 46, !1468, i64 48, !1468, i64 52, !6381, i64 56, !6382, i64 60, !6382, i64 64, !1429, i64 68}
!6380 = !{!"_ZTS16UART_InitTypeDef", !1429, i64 0, !1429, i64 4, !1429, i64 8, !1429, i64 12, !1429, i64 16, !1429, i64 20, !1429, i64 24}
!6381 = !{!"_ZTS15HAL_LockTypeDef", !1368, i64 0}
!6382 = !{!"_ZTS21HAL_UART_StateTypeDef", !1368, i64 0}
!6383 = !{!"_ZTS9IRQn_Type", !1368, i64 0}
!6384 = !DILocation(line: 75, column: 16, scope: !6375)
!6385 = !DILocation(line: 75, column: 9, scope: !6376)
!6386 = !DILocation(line: 76, column: 9, scope: !6375)
!6387 = !DILocation(line: 77, column: 1, scope: !6376)
!6388 = !DILocation(line: 77, column: 1, scope: !6369)
!6389 = distinct !DISubprogram(name: "~Stm32Uart", linkageName: "_ZN6Cicada9Stm32UartD0Ev", scope: !671, file: !573, line: 73, type: !731, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, declaration: !730, retainedNodes: !6390)
!6390 = !{!6391}
!6391 = !DILocalVariable(name: "this", arg: 1, scope: !6389, type: !678, flags: DIFlagArtificial | DIFlagObjectPointer)
!6392 = !DILocation(line: 0, scope: !6389)
!6393 = !DILocation(line: 74, column: 1, scope: !6389)
!6394 = !DILocation(line: 77, column: 1, scope: !6389)
!6395 = distinct !DISubprogram(name: "writeBufferProcessed", linkageName: "_ZNK6Cicada9Stm32Uart20writeBufferProcessedEv", scope: !671, file: !573, line: 251, type: !762, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, declaration: !761, retainedNodes: !6396)
!6396 = !{!6397}
!6397 = !DILocalVariable(name: "this", arg: 1, scope: !6395, type: !6398, flags: DIFlagArtificial | DIFlagObjectPointer)
!6398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 32)
!6399 = !DILocation(line: 0, scope: !6395)
!6400 = !DILocation(line: 253, column: 12, scope: !6395)
!6401 = !DILocation(line: 253, column: 25, scope: !6395)
!6402 = !DILocation(line: 253, column: 42, scope: !6395)
!6403 = !DILocation(line: 253, column: 47, scope: !6395)
!6404 = !DILocation(line: 253, column: 50, scope: !6395)
!6405 = !{!6378, !1468, i64 108}
!6406 = !{!6407, !1429, i64 0}
!6407 = !{!"_ZTS13USART_TypeDef", !1429, i64 0, !1429, i64 4, !1429, i64 8, !1429, i64 12, !1429, i64 16, !1429, i64 20, !1429, i64 24}
!6408 = !DILocation(line: 253, column: 5, scope: !6395)
!6409 = distinct !DISubprogram(name: "open", linkageName: "_ZN6Cicada9Stm32Uart4openEv", scope: !671, file: !573, line: 112, type: !737, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, declaration: !736, retainedNodes: !6410)
!6410 = !{!6411}
!6411 = !DILocalVariable(name: "this", arg: 1, scope: !6409, type: !678, flags: DIFlagArtificial | DIFlagObjectPointer)
!6412 = !DILocation(line: 0, scope: !6409)
!6413 = !DILocation(line: 114, column: 12, scope: !6409)
!6414 = !DILocation(line: 114, column: 5, scope: !6409)
!6415 = distinct !DISubprogram(name: "open", linkageName: "_ZN6Cicada9Stm32Uart4openEh", scope: !671, file: !573, line: 117, type: !741, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, declaration: !740, retainedNodes: !6416)
!6416 = !{!6417, !6418, !6419, !6423, !6425, !6429, !6433, !6437, !6441, !6445, !6449, !6453}
!6417 = !DILocalVariable(name: "this", arg: 1, scope: !6415, type: !678, flags: DIFlagArtificial | DIFlagObjectPointer)
!6418 = !DILocalVariable(name: "priority", arg: 2, scope: !6415, file: !573, line: 117, type: !39)
!6419 = !DILocalVariable(name: "tmpreg", scope: !6420, file: !573, line: 121, type: !21)
!6420 = distinct !DILexicalBlock(scope: !6421, file: !573, line: 121, column: 9)
!6421 = distinct !DILexicalBlock(scope: !6422, file: !573, line: 120, column: 37)
!6422 = distinct !DILexicalBlock(scope: !6415, file: !573, line: 120, column: 9)
!6423 = !DILocalVariable(name: "tmpreg", scope: !6424, file: !573, line: 122, type: !20)
!6424 = distinct !DILexicalBlock(scope: !6421, file: !573, line: 122, column: 9)
!6425 = !DILocalVariable(name: "tmpreg", scope: !6426, file: !573, line: 125, type: !20)
!6426 = distinct !DILexicalBlock(scope: !6427, file: !573, line: 125, column: 9)
!6427 = distinct !DILexicalBlock(scope: !6428, file: !573, line: 124, column: 44)
!6428 = distinct !DILexicalBlock(scope: !6422, file: !573, line: 124, column: 16)
!6429 = !DILocalVariable(name: "tmpreg", scope: !6430, file: !573, line: 128, type: !20)
!6430 = distinct !DILexicalBlock(scope: !6431, file: !573, line: 128, column: 9)
!6431 = distinct !DILexicalBlock(scope: !6432, file: !573, line: 127, column: 44)
!6432 = distinct !DILexicalBlock(scope: !6428, file: !573, line: 127, column: 16)
!6433 = !DILocalVariable(name: "tmpreg", scope: !6434, file: !573, line: 146, type: !20)
!6434 = distinct !DILexicalBlock(scope: !6435, file: !573, line: 146, column: 9)
!6435 = distinct !DILexicalBlock(scope: !6436, file: !573, line: 145, column: 29)
!6436 = distinct !DILexicalBlock(scope: !6415, file: !573, line: 145, column: 9)
!6437 = !DILocalVariable(name: "tmpreg", scope: !6438, file: !573, line: 148, type: !20)
!6438 = distinct !DILexicalBlock(scope: !6439, file: !573, line: 148, column: 9)
!6439 = distinct !DILexicalBlock(scope: !6440, file: !573, line: 147, column: 36)
!6440 = distinct !DILexicalBlock(scope: !6436, file: !573, line: 147, column: 16)
!6441 = !DILocalVariable(name: "tmpreg", scope: !6442, file: !573, line: 150, type: !20)
!6442 = distinct !DILexicalBlock(scope: !6443, file: !573, line: 150, column: 9)
!6443 = distinct !DILexicalBlock(scope: !6444, file: !573, line: 149, column: 36)
!6444 = distinct !DILexicalBlock(scope: !6440, file: !573, line: 149, column: 16)
!6445 = !DILocalVariable(name: "tmpreg", scope: !6446, file: !573, line: 152, type: !20)
!6446 = distinct !DILexicalBlock(scope: !6447, file: !573, line: 152, column: 9)
!6447 = distinct !DILexicalBlock(scope: !6448, file: !573, line: 151, column: 36)
!6448 = distinct !DILexicalBlock(scope: !6444, file: !573, line: 151, column: 16)
!6449 = !DILocalVariable(name: "tmpreg", scope: !6450, file: !573, line: 154, type: !20)
!6450 = distinct !DILexicalBlock(scope: !6451, file: !573, line: 154, column: 9)
!6451 = distinct !DILexicalBlock(scope: !6452, file: !573, line: 153, column: 36)
!6452 = distinct !DILexicalBlock(scope: !6448, file: !573, line: 153, column: 16)
!6453 = !DILocalVariable(name: "gpio", scope: !6415, file: !573, line: 166, type: !6454)
!6454 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !916, line: 60, baseType: !6455)
!6455 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !916, line: 47, size: 128, flags: DIFlagTypePassByValue, elements: !6456, identifier: "_ZTS16GPIO_InitTypeDef")
!6456 = !{!6457, !6458, !6459, !6460}
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !6455, file: !916, line: 49, baseType: !21, size: 32)
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !6455, file: !916, line: 52, baseType: !21, size: 32, offset: 32)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !6455, file: !916, line: 55, baseType: !21, size: 32, offset: 64)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !6455, file: !916, line: 58, baseType: !21, size: 32, offset: 96)
!6461 = !DILocation(line: 0, scope: !6415)
!6462 = !DILocation(line: 120, column: 9, scope: !6422)
!6463 = !DILocation(line: 120, column: 17, scope: !6422)
!6464 = !DILocation(line: 120, column: 9, scope: !6415)
!6465 = !DILocation(line: 121, column: 9, scope: !6420)
!6466 = !{!6467, !1429, i64 4}
!6467 = !{!"_ZTS12AFIO_TypeDef", !1429, i64 0, !1429, i64 4, !1368, i64 8, !1429, i64 24, !1429, i64 28}
!6468 = !DILocation(line: 0, scope: !6420)
!6469 = !DILocation(line: 122, column: 9, scope: !6424)
!6470 = !{!6471, !1429, i64 24}
!6471 = !{!"_ZTS11RCC_TypeDef", !1429, i64 0, !1429, i64 4, !1429, i64 8, !1429, i64 12, !1429, i64 16, !1429, i64 20, !1429, i64 24, !1429, i64 28, !1429, i64 32, !1429, i64 36}
!6472 = !DILocation(line: 122, column: 9, scope: !6421)
!6473 = !DILocation(line: 124, column: 5, scope: !6421)
!6474 = !DILocation(line: 125, column: 9, scope: !6426)
!6475 = !{!6471, !1429, i64 28}
!6476 = !DILocation(line: 125, column: 9, scope: !6427)
!6477 = !DILocation(line: 127, column: 5, scope: !6427)
!6478 = !DILocation(line: 128, column: 9, scope: !6430)
!6479 = !DILocation(line: 128, column: 9, scope: !6431)
!6480 = !DILocation(line: 0, scope: !6422)
!6481 = !{!6378, !6383, i64 188}
!6482 = !DILocation(line: 145, column: 9, scope: !6436)
!6483 = !{!6378, !1468, i64 180}
!6484 = !DILocation(line: 145, column: 9, scope: !6415)
!6485 = !DILocation(line: 146, column: 9, scope: !6434)
!6486 = !DILocation(line: 146, column: 9, scope: !6435)
!6487 = !DILocation(line: 147, column: 5, scope: !6435)
!6488 = !DILocation(line: 148, column: 9, scope: !6438)
!6489 = !DILocation(line: 148, column: 9, scope: !6439)
!6490 = !DILocation(line: 149, column: 5, scope: !6439)
!6491 = !DILocation(line: 150, column: 9, scope: !6442)
!6492 = !DILocation(line: 150, column: 9, scope: !6443)
!6493 = !DILocation(line: 151, column: 5, scope: !6443)
!6494 = !DILocation(line: 152, column: 9, scope: !6446)
!6495 = !DILocation(line: 152, column: 9, scope: !6447)
!6496 = !DILocation(line: 153, column: 5, scope: !6447)
!6497 = !DILocation(line: 154, column: 9, scope: !6450)
!6498 = !DILocation(line: 154, column: 9, scope: !6451)
!6499 = !DILocation(line: 163, column: 5, scope: !6451)
!6500 = !DILocation(line: 166, column: 5, scope: !6415)
!6501 = !DILocation(line: 166, column: 22, scope: !6415)
!6502 = !DILocation(line: 167, column: 16, scope: !6415)
!6503 = !{!6378, !5968, i64 184}
!6504 = !DILocation(line: 167, column: 10, scope: !6415)
!6505 = !DILocation(line: 167, column: 14, scope: !6415)
!6506 = !{!6507, !1429, i64 0}
!6507 = !{!"_ZTS16GPIO_InitTypeDef", !1429, i64 0, !1429, i64 4, !1429, i64 8, !1429, i64 12}
!6508 = !DILocation(line: 168, column: 10, scope: !6415)
!6509 = !DILocation(line: 168, column: 15, scope: !6415)
!6510 = !{!6507, !1429, i64 4}
!6511 = !DILocation(line: 169, column: 10, scope: !6415)
!6512 = !DILocation(line: 169, column: 15, scope: !6415)
!6513 = !{!6507, !1429, i64 8}
!6514 = !DILocation(line: 170, column: 10, scope: !6415)
!6515 = !DILocation(line: 170, column: 16, scope: !6415)
!6516 = !{!6507, !1429, i64 12}
!6517 = !DILocation(line: 171, column: 5, scope: !6415)
!6518 = !DILocation(line: 173, column: 16, scope: !6415)
!6519 = !{!6378, !5968, i64 186}
!6520 = !DILocation(line: 173, column: 14, scope: !6415)
!6521 = !DILocation(line: 174, column: 15, scope: !6415)
!6522 = !DILocation(line: 175, column: 19, scope: !6415)
!6523 = !DILocation(line: 175, column: 5, scope: !6415)
!6524 = !DILocation(line: 178, column: 18, scope: !6415)
!6525 = !DILocation(line: 178, column: 27, scope: !6415)
!6526 = !{!6378, !1429, i64 120}
!6527 = !DILocation(line: 179, column: 18, scope: !6415)
!6528 = !DILocation(line: 179, column: 25, scope: !6415)
!6529 = !{!6378, !1429, i64 124}
!6530 = !DILocation(line: 180, column: 18, scope: !6415)
!6531 = !DILocation(line: 180, column: 23, scope: !6415)
!6532 = !{!6378, !1429, i64 128}
!6533 = !DILocation(line: 181, column: 18, scope: !6415)
!6534 = !DILocation(line: 181, column: 28, scope: !6415)
!6535 = !{!6378, !1429, i64 132}
!6536 = !DILocation(line: 182, column: 18, scope: !6415)
!6537 = !DILocation(line: 182, column: 31, scope: !6415)
!6538 = !{!6378, !1429, i64 136}
!6539 = !DILocation(line: 184, column: 9, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6415, file: !573, line: 184, column: 9)
!6541 = !DILocation(line: 184, column: 33, scope: !6540)
!6542 = !DILocation(line: 184, column: 9, scope: !6415)
!6543 = !DILocation(line: 188, column: 22, scope: !6415)
!6544 = !DILocation(line: 188, column: 46, scope: !6415)
!6545 = !DILocation(line: 188, column: 5, scope: !6415)
!6546 = !DILocation(line: 189, column: 20, scope: !6415)
!6547 = !DILocation(line: 189, column: 5, scope: !6415)
!6548 = !DILocation(line: 190, column: 5, scope: !6415)
!6549 = !{!6407, !1429, i64 12}
!6550 = !DILocation(line: 192, column: 5, scope: !6415)
!6551 = !DILocation(line: 192, column: 12, scope: !6415)
!6552 = !DILocation(line: 194, column: 5, scope: !6415)
!6553 = !DILocation(line: 195, column: 1, scope: !6415)
!6554 = distinct !DISubprogram(name: "isOpen", linkageName: "_ZN6Cicada9Stm32Uart6isOpenEv", scope: !671, file: !573, line: 207, type: !737, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, declaration: !743, retainedNodes: !6555)
!6555 = !{!6556}
!6556 = !DILocalVariable(name: "this", arg: 1, scope: !6554, type: !678, flags: DIFlagArtificial | DIFlagObjectPointer)
!6557 = !DILocation(line: 0, scope: !6554)
!6558 = !DILocation(line: 209, column: 12, scope: !6554)
!6559 = !DILocation(line: 209, column: 19, scope: !6554)
!6560 = !DILocation(line: 209, column: 5, scope: !6554)
!6561 = distinct !DISubprogram(name: "setSerialConfig", linkageName: "_ZN6Cicada9Stm32Uart15setSerialConfigEjh", scope: !671, file: !573, line: 91, type: !745, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, declaration: !744, retainedNodes: !6562)
!6562 = !{!6563, !6564, !6565}
!6563 = !DILocalVariable(name: "this", arg: 1, scope: !6561, type: !678, flags: DIFlagArtificial | DIFlagObjectPointer)
!6564 = !DILocalVariable(name: "baudRate", arg: 2, scope: !6561, file: !573, line: 91, type: !21)
!6565 = !DILocalVariable(name: "dataBits", arg: 3, scope: !6561, file: !573, line: 91, type: !39)
!6566 = !DILocation(line: 0, scope: !6561)
!6567 = !DILocation(line: 93, column: 23, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6561, file: !573, line: 93, column: 9)
!6569 = !DILocation(line: 96, column: 18, scope: !6561)
!6570 = !DILocation(line: 96, column: 27, scope: !6561)
!6571 = !{!6378, !1429, i64 112}
!6572 = !DILocation(line: 98, column: 5, scope: !6561)
!6573 = !DILocation(line: 104, column: 9, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6561, file: !573, line: 98, column: 23)
!6575 = !DILocation(line: 0, scope: !6574)
!6576 = !{!6378, !1429, i64 116}
!6577 = !DILocation(line: 110, column: 1, scope: !6561)
!6578 = distinct !DISubprogram(name: "close", linkageName: "_ZN6Cicada9Stm32Uart5closeEv", scope: !671, file: !573, line: 197, type: !731, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, declaration: !747, retainedNodes: !6579)
!6579 = !{!6580}
!6580 = !DILocalVariable(name: "this", arg: 1, scope: !6578, type: !678, flags: DIFlagArtificial | DIFlagObjectPointer)
!6581 = !DILocation(line: 0, scope: !6578)
!6582 = !DILocation(line: 199, column: 21, scope: !6578)
!6583 = !DILocation(line: 199, column: 5, scope: !6578)
!6584 = !DILocation(line: 200, column: 22, scope: !6578)
!6585 = !DILocation(line: 200, column: 5, scope: !6578)
!6586 = !DILocation(line: 201, column: 21, scope: !6578)
!6587 = !DILocation(line: 201, column: 32, scope: !6578)
!6588 = !DILocation(line: 201, column: 5, scope: !6578)
!6589 = !DILocation(line: 202, column: 21, scope: !6578)
!6590 = !DILocation(line: 202, column: 32, scope: !6578)
!6591 = !DILocation(line: 202, column: 5, scope: !6578)
!6592 = !DILocation(line: 204, column: 5, scope: !6578)
!6593 = !DILocation(line: 204, column: 12, scope: !6578)
!6594 = !DILocation(line: 205, column: 1, scope: !6578)
!6595 = distinct !DISubprogram(name: "portName", linkageName: "_ZNK6Cicada9Stm32Uart8portNameEv", scope: !671, file: !573, line: 212, type: !749, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, declaration: !748, retainedNodes: !6596)
!6596 = !{!6597}
!6597 = !DILocalVariable(name: "this", arg: 1, scope: !6595, type: !6398, flags: DIFlagArtificial | DIFlagObjectPointer)
!6598 = !DILocation(line: 0, scope: !6595)
!6599 = !DILocation(line: 214, column: 5, scope: !6595)
!6600 = distinct !DISubprogram(name: "rawRead", linkageName: "_ZN6Cicada9Stm32Uart7rawReadERh", scope: !671, file: !573, line: 217, type: !756, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, declaration: !755, retainedNodes: !6601)
!6601 = !{!6602, !6603}
!6602 = !DILocalVariable(name: "this", arg: 1, scope: !6600, type: !678, flags: DIFlagArtificial | DIFlagObjectPointer)
!6603 = !DILocalVariable(name: "data", arg: 2, scope: !6600, file: !573, line: 217, type: !758)
!6604 = !DILocation(line: 0, scope: !6600)
!6605 = !DILocation(line: 219, column: 9, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6600, file: !573, line: 219, column: 9)
!6607 = !DILocation(line: 219, column: 55, scope: !6606)
!6608 = !DILocation(line: 220, column: 9, scope: !6606)
!6609 = !DILocation(line: 219, column: 9, scope: !6600)
!6610 = !DILocation(line: 221, column: 25, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6606, file: !573, line: 220, column: 55)
!6612 = !{!6407, !1429, i64 4}
!6613 = !DILocation(line: 221, column: 14, scope: !6611)
!6614 = !DILocation(line: 222, column: 9, scope: !6611)
!6615 = !DILocation(line: 226, column: 1, scope: !6600)
!6616 = distinct !DISubprogram(name: "rawWrite", linkageName: "_ZN6Cicada9Stm32Uart8rawWriteEh", scope: !671, file: !573, line: 228, type: !741, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, declaration: !759, retainedNodes: !6617)
!6617 = !{!6618, !6619}
!6618 = !DILocalVariable(name: "this", arg: 1, scope: !6616, type: !678, flags: DIFlagArtificial | DIFlagObjectPointer)
!6619 = !DILocalVariable(name: "data", arg: 2, scope: !6616, file: !573, line: 228, type: !39)
!6620 = !DILocation(line: 0, scope: !6616)
!6621 = !DILocation(line: 230, column: 9, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6616, file: !573, line: 230, column: 9)
!6623 = !DILocation(line: 230, column: 9, scope: !6616)
!6624 = !DILocation(line: 231, column: 9, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6622, file: !573, line: 230, column: 55)
!6626 = !DILocation(line: 232, column: 9, scope: !6625)
!6627 = !DILocation(line: 236, column: 1, scope: !6616)
!6628 = distinct !DISubprogram(name: "startTransmit", linkageName: "_ZN6Cicada9Stm32Uart13startTransmitEv", scope: !671, file: !573, line: 238, type: !731, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, declaration: !760, retainedNodes: !6629)
!6629 = !{!6630}
!6630 = !DILocalVariable(name: "this", arg: 1, scope: !6628, type: !678, flags: DIFlagArtificial | DIFlagObjectPointer)
!6631 = !DILocation(line: 0, scope: !6628)
!6632 = !DILocation(line: 240, column: 5, scope: !6628)
!6633 = !DILocation(line: 241, column: 1, scope: !6628)
!6634 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32UartD1Ev", scope: !573, file: !573, line: 73, type: !5945, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, retainedNodes: !101)
!6635 = !DILocation(line: 0, scope: !6634)
!6636 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32UartD0Ev", scope: !573, file: !573, line: 73, type: !5945, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, retainedNodes: !101)
!6637 = !DILocation(line: 0, scope: !6636)
!6638 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart4openEv", scope: !573, file: !573, line: 112, type: !5945, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, retainedNodes: !101)
!6639 = !DILocation(line: 0, scope: !6638)
!6640 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart6isOpenEv", scope: !573, file: !573, line: 207, type: !5945, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, retainedNodes: !101)
!6641 = !DILocation(line: 0, scope: !6640)
!6642 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart15setSerialConfigEjh", scope: !573, file: !573, line: 91, type: !5945, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, retainedNodes: !101)
!6643 = !DILocation(line: 0, scope: !6642)
!6644 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart5closeEv", scope: !573, file: !573, line: 197, type: !5945, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, retainedNodes: !101)
!6645 = !DILocation(line: 0, scope: !6644)
!6646 = distinct !DISubprogram(linkageName: "_ZThn4_NK6Cicada9Stm32Uart8portNameEv", scope: !573, file: !573, line: 212, type: !5945, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, retainedNodes: !101)
!6647 = !DILocation(line: 0, scope: !6646)
!6648 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart7rawReadERh", scope: !573, file: !573, line: 217, type: !5945, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, retainedNodes: !101)
!6649 = !DILocation(line: 0, scope: !6648)
!6650 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart8rawWriteEh", scope: !573, file: !573, line: 228, type: !5945, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, retainedNodes: !101)
!6651 = !DILocation(line: 0, scope: !6650)
!6652 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart13startTransmitEv", scope: !573, file: !573, line: 238, type: !5945, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, retainedNodes: !101)
!6653 = !DILocation(line: 0, scope: !6652)
!6654 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", linkageName: "_ZL17__NVIC_DisableIRQ9IRQn_Type", scope: !289, file: !289, line: 1547, type: !6655, scopeLine: 1548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !572, retainedNodes: !6657)
!6655 = !DISubroutineType(types: !6656)
!6656 = !{null, !720}
!6657 = !{!6658}
!6658 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6654, file: !289, line: 1547, type: !720)
!6659 = !DILocation(line: 0, scope: !6654)
!6660 = !DILocation(line: 1549, column: 23, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6654, file: !289, line: 1549, column: 7)
!6662 = !DILocation(line: 1549, column: 7, scope: !6654)
!6663 = !DILocation(line: 1551, column: 81, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6661, file: !289, line: 1550, column: 3)
!6665 = !DILocation(line: 1551, column: 60, scope: !6664)
!6666 = !DILocation(line: 1551, column: 34, scope: !6664)
!6667 = !DILocation(line: 1551, column: 5, scope: !6664)
!6668 = !DILocation(line: 1551, column: 43, scope: !6664)
!6669 = !DILocation(line: 879, column: 3, scope: !6670, inlinedAt: !6671)
!6670 = distinct !DISubprogram(name: "__DSB", linkageName: "_ZL5__DSBv", scope: !5170, file: !5170, line: 877, type: !99, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !572, retainedNodes: !101)
!6671 = distinct !DILocation(line: 1552, column: 5, scope: !6664)
!6672 = !{i64 1321711}
!6673 = !DILocation(line: 868, column: 3, scope: !6674, inlinedAt: !6675)
!6674 = distinct !DISubprogram(name: "__ISB", linkageName: "_ZL5__ISBv", scope: !5170, file: !5170, line: 866, type: !99, scopeLine: 867, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !572, retainedNodes: !101)
!6675 = distinct !DILocation(line: 1553, column: 5, scope: !6664)
!6676 = !{i64 1321417}
!6677 = !DILocation(line: 1554, column: 3, scope: !6664)
!6678 = !DILocation(line: 1555, column: 1, scope: !6654)
!6679 = distinct !DISubprogram(name: "__NVIC_SetPriority", linkageName: "_ZL18__NVIC_SetPriority9IRQn_Typej", scope: !289, file: !289, line: 1639, type: !6680, scopeLine: 1640, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !572, retainedNodes: !6682)
!6680 = !DISubroutineType(types: !6681)
!6681 = !{null, !720, !21}
!6682 = !{!6683, !6684}
!6683 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6679, file: !289, line: 1639, type: !720)
!6684 = !DILocalVariable(name: "priority", arg: 2, scope: !6679, file: !289, line: 1639, type: !21)
!6685 = !DILocation(line: 0, scope: !6679)
!6686 = !DILocation(line: 0, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6679, file: !289, line: 1641, column: 7)
!6688 = !DILocation(line: 1641, column: 7, scope: !6679)
!6689 = !DILocation(line: 1649, column: 1, scope: !6679)
!6690 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", linkageName: "_ZL16__NVIC_EnableIRQ9IRQn_Type", scope: !289, file: !289, line: 1511, type: !6655, scopeLine: 1512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !572, retainedNodes: !6691)
!6691 = !{!6692}
!6692 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6690, file: !289, line: 1511, type: !720)
!6693 = !DILocation(line: 0, scope: !6690)
!6694 = !DILocation(line: 1513, column: 23, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6690, file: !289, line: 1513, column: 7)
!6696 = !DILocation(line: 1513, column: 7, scope: !6690)
!6697 = !DILocation(line: 1515, column: 81, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6695, file: !289, line: 1514, column: 3)
!6699 = !DILocation(line: 1515, column: 60, scope: !6698)
!6700 = !DILocation(line: 1515, column: 34, scope: !6698)
!6701 = !DILocation(line: 1515, column: 5, scope: !6698)
!6702 = !DILocation(line: 1515, column: 43, scope: !6698)
!6703 = !DILocation(line: 1516, column: 3, scope: !6698)
!6704 = !DILocation(line: 1517, column: 1, scope: !6690)
!6705 = distinct !DISubprogram(name: "Stm32Uart", linkageName: "_ZN6Cicada9Stm32UartC2EPcS1_yyP13USART_TypeDefP12GPIO_TypeDeftt", scope: !671, file: !573, line: 34, type: !728, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, declaration: !727, retainedNodes: !6706)
!6706 = !{!6707, !6708, !6709, !6710, !6711, !6712, !6713, !6714, !6715}
!6707 = !DILocalVariable(name: "this", arg: 1, scope: !6705, type: !678, flags: DIFlagArtificial | DIFlagObjectPointer)
!6708 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !6705, file: !573, line: 34, type: !212)
!6709 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !6705, file: !573, line: 34, type: !212)
!6710 = !DILocalVariable(name: "readBufferSize", arg: 4, scope: !6705, file: !573, line: 34, type: !725)
!6711 = !DILocalVariable(name: "writeBufferSize", arg: 5, scope: !6705, file: !573, line: 34, type: !725)
!6712 = !DILocalVariable(name: "uartInstance", arg: 6, scope: !6705, file: !573, line: 35, type: !14)
!6713 = !DILocalVariable(name: "uartPort", arg: 7, scope: !6705, file: !573, line: 35, type: !31)
!6714 = !DILocalVariable(name: "txPin", arg: 8, scope: !6705, file: !573, line: 35, type: !34)
!6715 = !DILocalVariable(name: "rxPin", arg: 9, scope: !6705, file: !573, line: 35, type: !34)
!6716 = !DILocation(line: 0, scope: !6705)
!6717 = !DILocation(line: 43, column: 1, scope: !6705)
!6718 = !DILocation(line: 36, column: 5, scope: !6705)
!6719 = !DILocation(line: 37, column: 5, scope: !6705)
!6720 = !DILocation(line: 38, column: 5, scope: !6705)
!6721 = !DILocation(line: 39, column: 5, scope: !6705)
!6722 = !DILocation(line: 40, column: 5, scope: !6705)
!6723 = !DILocation(line: 41, column: 5, scope: !6705)
!6724 = !DILocation(line: 42, column: 5, scope: !6705)
!6725 = !DILocation(line: 44, column: 5, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6705, file: !573, line: 43, column: 1)
!6727 = !DILocation(line: 45, column: 1, scope: !6705)
!6728 = distinct !DISubprogram(name: "init", linkageName: "_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef", scope: !671, file: !573, line: 59, type: !774, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, declaration: !773, retainedNodes: !6729)
!6729 = !{!6730, !6731, !6732}
!6730 = !DILocalVariable(name: "this", arg: 1, scope: !6728, type: !678, flags: DIFlagArtificial | DIFlagObjectPointer)
!6731 = !DILocalVariable(name: "uartInstance", arg: 2, scope: !6728, file: !573, line: 59, type: !14)
!6732 = !DILocalVariable(name: "i", scope: !6733, file: !573, line: 65, type: !131)
!6733 = distinct !DILexicalBlock(scope: !6728, file: !573, line: 65, column: 5)
!6734 = !DILocation(line: 0, scope: !6728)
!6735 = !DILocation(line: 61, column: 13, scope: !6728)
!6736 = !DILocation(line: 61, column: 22, scope: !6728)
!6737 = !DILocation(line: 62, column: 18, scope: !6728)
!6738 = !DILocation(line: 62, column: 27, scope: !6728)
!6739 = !DILocation(line: 63, column: 18, scope: !6728)
!6740 = !DILocation(line: 63, column: 29, scope: !6728)
!6741 = !DILocation(line: 0, scope: !6733)
!6742 = !DILocation(line: 65, column: 5, scope: !6733)
!6743 = !DILocation(line: 65, column: 52, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6733, file: !573, line: 65, column: 5)
!6745 = !DILocation(line: 65, column: 23, scope: !6744)
!6746 = distinct !{!6746, !6742, !6747, !1358, !1359}
!6747 = !DILocation(line: 70, column: 5, scope: !6733)
!6748 = !DILocation(line: 66, column: 13, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6750, file: !573, line: 66, column: 13)
!6750 = distinct !DILexicalBlock(scope: !6744, file: !573, line: 65, column: 56)
!6751 = !DILocation(line: 66, column: 25, scope: !6749)
!6752 = !DILocation(line: 66, column: 13, scope: !6750)
!6753 = !DILocation(line: 67, column: 25, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6749, file: !573, line: 66, column: 34)
!6755 = !DILocation(line: 68, column: 13, scope: !6754)
!6756 = !DILocation(line: 71, column: 1, scope: !6728)
!6757 = distinct !DISubprogram(name: "Stm32Uart", linkageName: "_ZN6Cicada9Stm32UartC2EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt", scope: !671, file: !573, line: 46, type: !722, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, declaration: !721, retainedNodes: !6758)
!6758 = !{!6759, !6760, !6761, !6762, !6763, !6764, !6765, !6766}
!6759 = !DILocalVariable(name: "this", arg: 1, scope: !6757, type: !678, flags: DIFlagArtificial | DIFlagObjectPointer)
!6760 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !6757, file: !573, line: 46, type: !212)
!6761 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !6757, file: !573, line: 46, type: !212)
!6762 = !DILocalVariable(name: "bufferSize", arg: 4, scope: !6757, file: !573, line: 46, type: !725)
!6763 = !DILocalVariable(name: "uartInstance", arg: 5, scope: !6757, file: !573, line: 47, type: !14)
!6764 = !DILocalVariable(name: "uartPort", arg: 6, scope: !6757, file: !573, line: 47, type: !31)
!6765 = !DILocalVariable(name: "txPin", arg: 7, scope: !6757, file: !573, line: 47, type: !34)
!6766 = !DILocalVariable(name: "rxPin", arg: 8, scope: !6757, file: !573, line: 47, type: !34)
!6767 = !DILocation(line: 0, scope: !6757)
!6768 = !DILocation(line: 55, column: 1, scope: !6757)
!6769 = !DILocation(line: 48, column: 5, scope: !6757)
!6770 = !DILocation(line: 49, column: 5, scope: !6757)
!6771 = !DILocation(line: 50, column: 5, scope: !6757)
!6772 = !DILocation(line: 51, column: 5, scope: !6757)
!6773 = !DILocation(line: 52, column: 5, scope: !6757)
!6774 = !DILocation(line: 53, column: 5, scope: !6757)
!6775 = !DILocation(line: 54, column: 5, scope: !6757)
!6776 = !DILocation(line: 56, column: 5, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6757, file: !573, line: 55, column: 1)
!6778 = !DILocation(line: 57, column: 1, scope: !6757)
!6779 = distinct !DISubprogram(name: "getInstance", linkageName: "_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef", scope: !671, file: !573, line: 79, type: !734, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, declaration: !733, retainedNodes: !6780)
!6780 = !{!6781, !6782, !6784}
!6781 = !DILocalVariable(name: "uartInstance", arg: 1, scope: !6779, file: !573, line: 79, type: !14)
!6782 = !DILocalVariable(name: "i", scope: !6783, file: !573, line: 81, type: !131)
!6783 = distinct !DILexicalBlock(scope: !6779, file: !573, line: 81, column: 5)
!6784 = !DILocalVariable(name: "uart", scope: !6785, file: !573, line: 82, type: !678)
!6785 = distinct !DILexicalBlock(scope: !6786, file: !573, line: 81, column: 56)
!6786 = distinct !DILexicalBlock(scope: !6783, file: !573, line: 81, column: 5)
!6787 = !DILocation(line: 0, scope: !6779)
!6788 = !DILocation(line: 0, scope: !6783)
!6789 = !DILocation(line: 81, column: 5, scope: !6783)
!6790 = !DILocation(line: 81, column: 52, scope: !6786)
!6791 = !DILocation(line: 81, column: 23, scope: !6786)
!6792 = distinct !{!6792, !6789, !6793, !1358, !1359}
!6793 = !DILocation(line: 86, column: 5, scope: !6783)
!6794 = !DILocation(line: 82, column: 27, scope: !6785)
!6795 = !DILocation(line: 0, scope: !6785)
!6796 = !DILocation(line: 83, column: 18, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6785, file: !573, line: 83, column: 13)
!6798 = !DILocation(line: 83, column: 26, scope: !6797)
!6799 = !DILocation(line: 83, column: 43, scope: !6797)
!6800 = !DILocation(line: 83, column: 52, scope: !6797)
!6801 = !DILocation(line: 83, column: 13, scope: !6785)
!6802 = !DILocation(line: 86, column: 5, scope: !6786)
!6803 = !DILocation(line: 89, column: 1, scope: !6779)
!6804 = distinct !DISubprogram(name: "handleInterrupt", linkageName: "_ZN6Cicada9Stm32Uart15handleInterruptEv", scope: !671, file: !573, line: 243, type: !731, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !572, declaration: !764, retainedNodes: !6805)
!6805 = !{!6806}
!6806 = !DILocalVariable(name: "this", arg: 1, scope: !6804, type: !678, flags: DIFlagArtificial | DIFlagObjectPointer)
!6807 = !DILocation(line: 0, scope: !6804)
!6808 = !DILocation(line: 245, column: 5, scope: !6804)
!6809 = !DILocation(line: 247, column: 10, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6804, file: !573, line: 247, column: 9)
!6811 = !DILocation(line: 247, column: 23, scope: !6810)
!6812 = !DILocation(line: 247, column: 9, scope: !6804)
!6813 = !DILocation(line: 248, column: 9, scope: !6810)
!6814 = !DILocation(line: 249, column: 1, scope: !6804)
!6815 = distinct !DISubprogram(name: "HAL_UART_Init", scope: !1186, file: !1186, line: 314, type: !6816, scopeLine: 315, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !6818)
!6816 = !DISubroutineType(types: !6817)
!6817 = !{!2497, !1211}
!6818 = !{!6819}
!6819 = !DILocalVariable(name: "huart", arg: 1, scope: !6815, file: !1186, line: 314, type: !1211)
!6820 = !DILocation(line: 0, scope: !6815)
!6821 = !DILocation(line: 317, column: 13, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6815, file: !1186, line: 317, column: 7)
!6823 = !DILocation(line: 317, column: 7, scope: !6815)
!6824 = !DILocation(line: 338, column: 14, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6815, file: !1186, line: 338, column: 7)
!6826 = !{!6827, !1601, i64 60}
!6827 = !{!"__UART_HandleTypeDef", !1600, i64 0, !5428, i64 4, !1600, i64 32, !6828, i64 36, !6828, i64 38, !1600, i64 40, !6828, i64 44, !6828, i64 46, !1600, i64 48, !1600, i64 52, !1601, i64 56, !1601, i64 60, !1601, i64 64, !2443, i64 68}
!6828 = !{!"short", !1601, i64 0}
!6829 = !DILocation(line: 338, column: 21, scope: !6825)
!6830 = !DILocation(line: 338, column: 7, scope: !6815)
!6831 = !DILocation(line: 341, column: 12, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6825, file: !1186, line: 339, column: 3)
!6833 = !DILocation(line: 341, column: 17, scope: !6832)
!6834 = !{!6827, !1601, i64 56}
!6835 = !DILocation(line: 355, column: 5, scope: !6832)
!6836 = !DILocation(line: 357, column: 3, scope: !6832)
!6837 = !DILocation(line: 359, column: 17, scope: !6815)
!6838 = !DILocation(line: 362, column: 3, scope: !6815)
!6839 = !{!6827, !1600, i64 0}
!6840 = !DILocation(line: 365, column: 3, scope: !6815)
!6841 = !DILocation(line: 370, column: 3, scope: !6815)
!6842 = !DILocation(line: 371, column: 3, scope: !6815)
!6843 = !DILocation(line: 374, column: 3, scope: !6815)
!6844 = !DILocation(line: 377, column: 10, scope: !6815)
!6845 = !DILocation(line: 377, column: 20, scope: !6815)
!6846 = !{!6827, !2443, i64 68}
!6847 = !DILocation(line: 378, column: 17, scope: !6815)
!6848 = !DILocation(line: 379, column: 10, scope: !6815)
!6849 = !DILocation(line: 379, column: 18, scope: !6815)
!6850 = !{!6827, !1601, i64 64}
!6851 = !DILocation(line: 381, column: 3, scope: !6815)
!6852 = !DILocation(line: 382, column: 1, scope: !6815)
!6853 = distinct !DISubprogram(name: "HAL_UART_MspInit", scope: !1186, file: !1186, line: 672, type: !6854, scopeLine: 673, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !6856)
!6854 = !DISubroutineType(types: !6855)
!6855 = !{null, !1211}
!6856 = !{!6857}
!6857 = !DILocalVariable(name: "huart", arg: 1, scope: !6853, file: !1186, line: 672, type: !1211)
!6858 = !DILocation(line: 0, scope: !6853)
!6859 = !DILocation(line: 679, column: 1, scope: !6853)
!6860 = distinct !DISubprogram(name: "UART_SetConfig", scope: !1186, file: !1186, line: 3063, type: !6854, scopeLine: 3064, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !6861)
!6861 = !{!6862, !6863, !6864}
!6862 = !DILocalVariable(name: "huart", arg: 1, scope: !6860, file: !1186, line: 3063, type: !1211)
!6863 = !DILocalVariable(name: "tmpreg", scope: !6860, file: !1186, line: 3065, type: !21)
!6864 = !DILocalVariable(name: "pclk", scope: !6860, file: !1186, line: 3066, type: !21)
!6865 = !DILocation(line: 0, scope: !6860)
!6866 = !DILocation(line: 3077, column: 3, scope: !6860)
!6867 = !{!6827, !2443, i64 12}
!6868 = !DILocation(line: 3092, column: 34, scope: !6860)
!6869 = !{!6827, !2443, i64 8}
!6870 = !DILocation(line: 3092, column: 59, scope: !6860)
!6871 = !{!6827, !2443, i64 16}
!6872 = !DILocation(line: 3092, column: 45, scope: !6860)
!6873 = !DILocation(line: 3092, column: 80, scope: !6860)
!6874 = !{!6827, !2443, i64 20}
!6875 = !DILocation(line: 3092, column: 66, scope: !6860)
!6876 = !DILocation(line: 3093, column: 3, scope: !6860)
!6877 = !DILocation(line: 3100, column: 3, scope: !6860)
!6878 = !{!6827, !2443, i64 24}
!6879 = !DILocation(line: 3134, column: 22, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6860, file: !1186, line: 3134, column: 6)
!6881 = !DILocation(line: 3134, column: 6, scope: !6860)
!6882 = !DILocation(line: 3136, column: 12, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6880, file: !1186, line: 3135, column: 3)
!6884 = !DILocation(line: 3138, column: 3, scope: !6883)
!6885 = !DILocation(line: 3141, column: 12, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6880, file: !1186, line: 3140, column: 3)
!6887 = !DILocation(line: 0, scope: !6880)
!6888 = !{!6827, !2443, i64 4}
!6889 = !DILocation(line: 3145, column: 1, scope: !6860)
!6890 = distinct !DISubprogram(name: "HAL_HalfDuplex_Init", scope: !1186, file: !1186, line: 391, type: !6816, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !6891)
!6891 = !{!6892}
!6892 = !DILocalVariable(name: "huart", arg: 1, scope: !6890, file: !1186, line: 391, type: !1211)
!6893 = !DILocation(line: 0, scope: !6890)
!6894 = !DILocation(line: 394, column: 13, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6890, file: !1186, line: 394, column: 7)
!6896 = !DILocation(line: 394, column: 7, scope: !6890)
!6897 = !DILocation(line: 406, column: 14, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6890, file: !1186, line: 406, column: 7)
!6899 = !DILocation(line: 406, column: 21, scope: !6898)
!6900 = !DILocation(line: 406, column: 7, scope: !6890)
!6901 = !DILocation(line: 409, column: 12, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6898, file: !1186, line: 407, column: 3)
!6903 = !DILocation(line: 409, column: 17, scope: !6902)
!6904 = !DILocation(line: 423, column: 5, scope: !6902)
!6905 = !DILocation(line: 425, column: 3, scope: !6902)
!6906 = !DILocation(line: 427, column: 17, scope: !6890)
!6907 = !DILocation(line: 430, column: 3, scope: !6890)
!6908 = !DILocation(line: 433, column: 3, scope: !6890)
!6909 = !DILocation(line: 438, column: 3, scope: !6890)
!6910 = !DILocation(line: 439, column: 3, scope: !6890)
!6911 = !DILocation(line: 442, column: 3, scope: !6890)
!6912 = !DILocation(line: 445, column: 3, scope: !6890)
!6913 = !DILocation(line: 448, column: 10, scope: !6890)
!6914 = !DILocation(line: 448, column: 20, scope: !6890)
!6915 = !DILocation(line: 449, column: 17, scope: !6890)
!6916 = !DILocation(line: 450, column: 10, scope: !6890)
!6917 = !DILocation(line: 450, column: 18, scope: !6890)
!6918 = !DILocation(line: 452, column: 3, scope: !6890)
!6919 = !DILocation(line: 453, column: 1, scope: !6890)
!6920 = distinct !DISubprogram(name: "HAL_LIN_Init", scope: !1186, file: !1186, line: 466, type: !6921, scopeLine: 467, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !6923)
!6921 = !DISubroutineType(types: !6922)
!6922 = !{!2497, !1211, !21}
!6923 = !{!6924, !6925}
!6924 = !DILocalVariable(name: "huart", arg: 1, scope: !6920, file: !1186, line: 466, type: !1211)
!6925 = !DILocalVariable(name: "BreakDetectLength", arg: 2, scope: !6920, file: !1186, line: 466, type: !21)
!6926 = !DILocation(line: 0, scope: !6920)
!6927 = !DILocation(line: 469, column: 13, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6920, file: !1186, line: 469, column: 7)
!6929 = !DILocation(line: 469, column: 7, scope: !6920)
!6930 = !DILocation(line: 484, column: 14, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6920, file: !1186, line: 484, column: 7)
!6932 = !DILocation(line: 484, column: 21, scope: !6931)
!6933 = !DILocation(line: 484, column: 7, scope: !6920)
!6934 = !DILocation(line: 487, column: 12, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6931, file: !1186, line: 485, column: 3)
!6936 = !DILocation(line: 487, column: 17, scope: !6935)
!6937 = !DILocation(line: 501, column: 5, scope: !6935)
!6938 = !DILocation(line: 503, column: 3, scope: !6935)
!6939 = !DILocation(line: 505, column: 17, scope: !6920)
!6940 = !DILocation(line: 508, column: 3, scope: !6920)
!6941 = !DILocation(line: 511, column: 3, scope: !6920)
!6942 = !DILocation(line: 516, column: 3, scope: !6920)
!6943 = !DILocation(line: 517, column: 3, scope: !6920)
!6944 = !DILocation(line: 520, column: 3, scope: !6920)
!6945 = !DILocation(line: 523, column: 3, scope: !6920)
!6946 = !DILocation(line: 524, column: 3, scope: !6920)
!6947 = !DILocation(line: 527, column: 3, scope: !6920)
!6948 = !DILocation(line: 530, column: 10, scope: !6920)
!6949 = !DILocation(line: 530, column: 20, scope: !6920)
!6950 = !DILocation(line: 531, column: 17, scope: !6920)
!6951 = !DILocation(line: 532, column: 10, scope: !6920)
!6952 = !DILocation(line: 532, column: 18, scope: !6920)
!6953 = !DILocation(line: 534, column: 3, scope: !6920)
!6954 = !DILocation(line: 535, column: 1, scope: !6920)
!6955 = distinct !DISubprogram(name: "HAL_MultiProcessor_Init", scope: !1186, file: !1186, line: 549, type: !6956, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !6958)
!6956 = !DISubroutineType(types: !6957)
!6957 = !{!2497, !1211, !39, !21}
!6958 = !{!6959, !6960, !6961}
!6959 = !DILocalVariable(name: "huart", arg: 1, scope: !6955, file: !1186, line: 549, type: !1211)
!6960 = !DILocalVariable(name: "Address", arg: 2, scope: !6955, file: !1186, line: 549, type: !39)
!6961 = !DILocalVariable(name: "WakeUpMethod", arg: 3, scope: !6955, file: !1186, line: 549, type: !21)
!6962 = !DILocation(line: 0, scope: !6955)
!6963 = !DILocation(line: 552, column: 13, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6955, file: !1186, line: 552, column: 7)
!6965 = !DILocation(line: 552, column: 7, scope: !6955)
!6966 = !DILocation(line: 568, column: 14, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6955, file: !1186, line: 568, column: 7)
!6968 = !DILocation(line: 568, column: 21, scope: !6967)
!6969 = !DILocation(line: 568, column: 7, scope: !6955)
!6970 = !DILocation(line: 571, column: 12, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6967, file: !1186, line: 569, column: 3)
!6972 = !DILocation(line: 571, column: 17, scope: !6971)
!6973 = !DILocation(line: 585, column: 5, scope: !6971)
!6974 = !DILocation(line: 587, column: 3, scope: !6971)
!6975 = !DILocation(line: 589, column: 17, scope: !6955)
!6976 = !DILocation(line: 592, column: 3, scope: !6955)
!6977 = !DILocation(line: 595, column: 3, scope: !6955)
!6978 = !DILocation(line: 600, column: 3, scope: !6955)
!6979 = !DILocation(line: 601, column: 3, scope: !6955)
!6980 = !DILocation(line: 604, column: 3, scope: !6955)
!6981 = !DILocation(line: 605, column: 3, scope: !6955)
!6982 = !DILocation(line: 608, column: 3, scope: !6955)
!6983 = !DILocation(line: 609, column: 3, scope: !6955)
!6984 = !DILocation(line: 612, column: 3, scope: !6955)
!6985 = !DILocation(line: 615, column: 10, scope: !6955)
!6986 = !DILocation(line: 615, column: 20, scope: !6955)
!6987 = !DILocation(line: 616, column: 17, scope: !6955)
!6988 = !DILocation(line: 617, column: 10, scope: !6955)
!6989 = !DILocation(line: 617, column: 18, scope: !6955)
!6990 = !DILocation(line: 619, column: 3, scope: !6955)
!6991 = !DILocation(line: 620, column: 1, scope: !6955)
!6992 = distinct !DISubprogram(name: "HAL_UART_DeInit", scope: !1186, file: !1186, line: 628, type: !6816, scopeLine: 629, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !6993)
!6993 = !{!6994}
!6994 = !DILocalVariable(name: "huart", arg: 1, scope: !6992, file: !1186, line: 628, type: !1211)
!6995 = !DILocation(line: 0, scope: !6992)
!6996 = !DILocation(line: 631, column: 13, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6992, file: !1186, line: 631, column: 7)
!6998 = !DILocation(line: 631, column: 7, scope: !6992)
!6999 = !DILocation(line: 639, column: 10, scope: !6992)
!7000 = !DILocation(line: 639, column: 17, scope: !6992)
!7001 = !DILocation(line: 642, column: 3, scope: !6992)
!7002 = !DILocation(line: 653, column: 3, scope: !6992)
!7003 = !DILocation(line: 656, column: 10, scope: !6992)
!7004 = !DILocation(line: 656, column: 20, scope: !6992)
!7005 = !DILocation(line: 657, column: 17, scope: !6992)
!7006 = !DILocation(line: 658, column: 10, scope: !6992)
!7007 = !DILocation(line: 658, column: 18, scope: !6992)
!7008 = !DILocation(line: 661, column: 3, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !6992, file: !1186, line: 661, column: 3)
!7010 = !DILocation(line: 663, column: 3, scope: !6992)
!7011 = !DILocation(line: 664, column: 1, scope: !6992)
!7012 = distinct !DISubprogram(name: "HAL_UART_MspDeInit", scope: !1186, file: !1186, line: 687, type: !6854, scopeLine: 688, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7013)
!7013 = !{!7014}
!7014 = !DILocalVariable(name: "huart", arg: 1, scope: !7012, file: !1186, line: 687, type: !1211)
!7015 = !DILocation(line: 0, scope: !7012)
!7016 = !DILocation(line: 694, column: 1, scope: !7012)
!7017 = distinct !DISubprogram(name: "HAL_UART_Transmit", scope: !1186, file: !1186, line: 1027, type: !7018, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7020)
!7018 = !DISubroutineType(types: !7019)
!7019 = !{!2497, !1211, !42, !34, !21}
!7020 = !{!7021, !7022, !7023, !7024, !7025, !7026}
!7021 = !DILocalVariable(name: "huart", arg: 1, scope: !7017, file: !1186, line: 1027, type: !1211)
!7022 = !DILocalVariable(name: "pData", arg: 2, scope: !7017, file: !1186, line: 1027, type: !42)
!7023 = !DILocalVariable(name: "Size", arg: 3, scope: !7017, file: !1186, line: 1027, type: !34)
!7024 = !DILocalVariable(name: "Timeout", arg: 4, scope: !7017, file: !1186, line: 1027, type: !21)
!7025 = !DILocalVariable(name: "tmp", scope: !7017, file: !1186, line: 1029, type: !1209)
!7026 = !DILocalVariable(name: "tickstart", scope: !7017, file: !1186, line: 1030, type: !21)
!7027 = !DILocation(line: 0, scope: !7017)
!7028 = !DILocation(line: 1033, column: 14, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7017, file: !1186, line: 1033, column: 7)
!7030 = !DILocation(line: 1033, column: 21, scope: !7029)
!7031 = !DILocation(line: 1033, column: 7, scope: !7017)
!7032 = !DILocation(line: 1035, column: 16, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7034, file: !1186, line: 1035, column: 9)
!7034 = distinct !DILexicalBlock(scope: !7029, file: !1186, line: 1034, column: 3)
!7035 = !DILocation(line: 1035, column: 25, scope: !7033)
!7036 = !DILocation(line: 1041, column: 5, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7038, file: !1186, line: 1041, column: 5)
!7038 = distinct !DILexicalBlock(scope: !7034, file: !1186, line: 1041, column: 5)
!7039 = !DILocation(line: 1041, column: 5, scope: !7038)
!7040 = !DILocation(line: 1041, column: 5, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7037, file: !1186, line: 1041, column: 5)
!7042 = !DILocation(line: 1043, column: 12, scope: !7034)
!7043 = !DILocation(line: 1043, column: 22, scope: !7034)
!7044 = !DILocation(line: 1044, column: 19, scope: !7034)
!7045 = !DILocation(line: 1047, column: 17, scope: !7034)
!7046 = !DILocation(line: 1049, column: 12, scope: !7034)
!7047 = !DILocation(line: 1049, column: 23, scope: !7034)
!7048 = !{!6827, !6828, i64 36}
!7049 = !DILocation(line: 1050, column: 12, scope: !7034)
!7050 = !DILocation(line: 1050, column: 24, scope: !7034)
!7051 = !{!6827, !6828, i64 38}
!7052 = !DILocation(line: 1051, column: 19, scope: !7034)
!7053 = !DILocation(line: 1051, column: 31, scope: !7034)
!7054 = !DILocation(line: 1051, column: 5, scope: !7034)
!7055 = !DILocation(line: 1053, column: 25, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7034, file: !1186, line: 1052, column: 5)
!7057 = !DILocation(line: 1054, column: 23, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !7056, file: !1186, line: 1054, column: 11)
!7059 = !DILocation(line: 1054, column: 34, scope: !7058)
!7060 = !DILocation(line: 0, scope: !7058)
!7061 = !DILocation(line: 1054, column: 11, scope: !7056)
!7062 = !DILocation(line: 1056, column: 13, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7058, file: !1186, line: 1055, column: 7)
!7064 = !DILocation(line: 1060, column: 15, scope: !7063)
!7065 = !DILocation(line: 1061, column: 32, scope: !7063)
!7066 = !{!6828, !6828, i64 0}
!7067 = !DILocation(line: 1061, column: 37, scope: !7063)
!7068 = !DILocation(line: 1061, column: 16, scope: !7063)
!7069 = !DILocation(line: 1061, column: 26, scope: !7063)
!7070 = !DILocation(line: 1061, column: 29, scope: !7063)
!7071 = !{!5428, !2443, i64 4}
!7072 = !DILocation(line: 1062, column: 25, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7063, file: !1186, line: 1062, column: 13)
!7074 = !DILocation(line: 1062, column: 32, scope: !7073)
!7075 = !DILocation(line: 1062, column: 13, scope: !7063)
!7076 = !DILocation(line: 1064, column: 17, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7073, file: !1186, line: 1063, column: 9)
!7078 = !DILocation(line: 1065, column: 9, scope: !7077)
!7079 = !DILocation(line: 1068, column: 17, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7073, file: !1186, line: 1067, column: 9)
!7081 = !DILocation(line: 1073, column: 13, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7058, file: !1186, line: 1072, column: 7)
!7083 = !DILocation(line: 1077, column: 38, scope: !7082)
!7084 = !DILocation(line: 1077, column: 32, scope: !7082)
!7085 = !DILocation(line: 1077, column: 16, scope: !7082)
!7086 = !DILocation(line: 1077, column: 26, scope: !7082)
!7087 = !DILocation(line: 1077, column: 29, scope: !7082)
!7088 = distinct !{!7088, !7054, !7089, !1358, !1359}
!7089 = !DILocation(line: 1079, column: 5, scope: !7034)
!7090 = !DILocation(line: 1081, column: 9, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7034, file: !1186, line: 1081, column: 9)
!7092 = !DILocation(line: 1081, column: 85, scope: !7091)
!7093 = !DILocation(line: 1081, column: 9, scope: !7034)
!7094 = !DILocation(line: 1087, column: 19, scope: !7034)
!7095 = !DILocation(line: 1090, column: 5, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7034, file: !1186, line: 1090, column: 5)
!7097 = !DILocation(line: 1092, column: 5, scope: !7034)
!7098 = !DILocation(line: 0, scope: !7029)
!7099 = !DILocation(line: 1098, column: 1, scope: !7017)
!7100 = distinct !DISubprogram(name: "UART_WaitOnFlagUntilTimeout", scope: !1186, file: !1186, line: 2690, type: !7101, scopeLine: 2691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7103)
!7101 = !DISubroutineType(types: !7102)
!7102 = !{!2497, !1211, !21, !2595, !21, !21}
!7103 = !{!7104, !7105, !7106, !7107, !7108}
!7104 = !DILocalVariable(name: "huart", arg: 1, scope: !7100, file: !1186, line: 2690, type: !1211)
!7105 = !DILocalVariable(name: "Flag", arg: 2, scope: !7100, file: !1186, line: 2690, type: !21)
!7106 = !DILocalVariable(name: "Status", arg: 3, scope: !7100, file: !1186, line: 2690, type: !2595)
!7107 = !DILocalVariable(name: "Tickstart", arg: 4, scope: !7100, file: !1186, line: 2690, type: !21)
!7108 = !DILocalVariable(name: "Timeout", arg: 5, scope: !7100, file: !1186, line: 2690, type: !21)
!7109 = !DILocation(line: 0, scope: !7100)
!7110 = !DILocation(line: 2693, column: 11, scope: !7100)
!7111 = !{!5428, !2443, i64 0}
!7112 = !DILocation(line: 2693, column: 3, scope: !7100)
!7113 = !DILocation(line: 2696, column: 9, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7100, file: !1186, line: 2694, column: 3)
!7115 = !DILocation(line: 2698, column: 32, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7117, file: !1186, line: 2698, column: 11)
!7117 = distinct !DILexicalBlock(scope: !7118, file: !1186, line: 2697, column: 5)
!7118 = distinct !DILexicalBlock(scope: !7114, file: !1186, line: 2696, column: 9)
!7119 = !DILocation(line: 2698, column: 46, scope: !7116)
!7120 = !DILocation(line: 2698, column: 59, scope: !7116)
!7121 = !DILocation(line: 2698, column: 11, scope: !7117)
!7122 = !DILocation(line: 2701, column: 9, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7116, file: !1186, line: 2699, column: 7)
!7124 = !DILocation(line: 2702, column: 9, scope: !7123)
!7125 = !DILocation(line: 2704, column: 16, scope: !7123)
!7126 = !DILocation(line: 2704, column: 24, scope: !7123)
!7127 = !DILocation(line: 2705, column: 16, scope: !7123)
!7128 = !DILocation(line: 2705, column: 24, scope: !7123)
!7129 = !DILocation(line: 2708, column: 9, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7123, file: !1186, line: 2708, column: 9)
!7131 = !DILocation(line: 2710, column: 9, scope: !7123)
!7132 = distinct !{!7132, !7112, !7133, !1358, !1359}
!7133 = !DILocation(line: 2713, column: 3, scope: !7100)
!7134 = !DILocation(line: 2715, column: 1, scope: !7100)
!7135 = distinct !DISubprogram(name: "HAL_UART_Receive", scope: !1186, file: !1186, line: 1112, type: !7018, scopeLine: 1113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7136)
!7136 = !{!7137, !7138, !7139, !7140, !7141, !7142}
!7137 = !DILocalVariable(name: "huart", arg: 1, scope: !7135, file: !1186, line: 1112, type: !1211)
!7138 = !DILocalVariable(name: "pData", arg: 2, scope: !7135, file: !1186, line: 1112, type: !42)
!7139 = !DILocalVariable(name: "Size", arg: 3, scope: !7135, file: !1186, line: 1112, type: !34)
!7140 = !DILocalVariable(name: "Timeout", arg: 4, scope: !7135, file: !1186, line: 1112, type: !21)
!7141 = !DILocalVariable(name: "tmp", scope: !7135, file: !1186, line: 1114, type: !1209)
!7142 = !DILocalVariable(name: "tickstart", scope: !7135, file: !1186, line: 1115, type: !21)
!7143 = !DILocation(line: 0, scope: !7135)
!7144 = !DILocation(line: 1118, column: 14, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7135, file: !1186, line: 1118, column: 7)
!7146 = !DILocation(line: 1118, column: 22, scope: !7145)
!7147 = !DILocation(line: 1118, column: 7, scope: !7135)
!7148 = !DILocation(line: 1120, column: 16, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7150, file: !1186, line: 1120, column: 9)
!7150 = distinct !DILexicalBlock(scope: !7145, file: !1186, line: 1119, column: 3)
!7151 = !DILocation(line: 1120, column: 25, scope: !7149)
!7152 = !DILocation(line: 1126, column: 5, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7154, file: !1186, line: 1126, column: 5)
!7154 = distinct !DILexicalBlock(scope: !7150, file: !1186, line: 1126, column: 5)
!7155 = !DILocation(line: 1126, column: 5, scope: !7154)
!7156 = !DILocation(line: 1126, column: 5, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7153, file: !1186, line: 1126, column: 5)
!7158 = !DILocation(line: 1128, column: 12, scope: !7150)
!7159 = !DILocation(line: 1128, column: 22, scope: !7150)
!7160 = !DILocation(line: 1129, column: 20, scope: !7150)
!7161 = !DILocation(line: 1132, column: 17, scope: !7150)
!7162 = !DILocation(line: 1134, column: 12, scope: !7150)
!7163 = !DILocation(line: 1134, column: 23, scope: !7150)
!7164 = !{!6827, !6828, i64 44}
!7165 = !DILocation(line: 1135, column: 12, scope: !7150)
!7166 = !DILocation(line: 1135, column: 24, scope: !7150)
!7167 = !{!6827, !6828, i64 46}
!7168 = !DILocation(line: 1138, column: 19, scope: !7150)
!7169 = !DILocation(line: 1138, column: 31, scope: !7150)
!7170 = !DILocation(line: 1138, column: 5, scope: !7150)
!7171 = !DILocation(line: 1140, column: 25, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7150, file: !1186, line: 1139, column: 5)
!7173 = !DILocation(line: 1141, column: 23, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7172, file: !1186, line: 1141, column: 11)
!7175 = !DILocation(line: 1141, column: 34, scope: !7174)
!7176 = !DILocation(line: 0, scope: !7174)
!7177 = !DILocation(line: 1141, column: 11, scope: !7172)
!7178 = !DILocation(line: 1143, column: 13, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7174, file: !1186, line: 1142, column: 7)
!7180 = !DILocation(line: 1147, column: 15, scope: !7179)
!7181 = !DILocation(line: 1148, column: 25, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7179, file: !1186, line: 1148, column: 13)
!7183 = !DILocation(line: 1148, column: 32, scope: !7182)
!7184 = !DILocation(line: 1148, column: 13, scope: !7179)
!7185 = !DILocation(line: 1150, column: 36, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7182, file: !1186, line: 1149, column: 9)
!7187 = !DILocation(line: 1150, column: 46, scope: !7186)
!7188 = !DILocation(line: 1150, column: 18, scope: !7186)
!7189 = !DILocation(line: 1150, column: 16, scope: !7186)
!7190 = !DILocation(line: 1151, column: 17, scope: !7186)
!7191 = !DILocation(line: 1152, column: 9, scope: !7186)
!7192 = !DILocation(line: 1155, column: 36, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7182, file: !1186, line: 1154, column: 9)
!7194 = !DILocation(line: 1155, column: 46, scope: !7193)
!7195 = !DILocation(line: 1155, column: 18, scope: !7193)
!7196 = !DILocation(line: 1155, column: 16, scope: !7193)
!7197 = !DILocation(line: 1156, column: 17, scope: !7193)
!7198 = !DILocation(line: 1162, column: 13, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !7174, file: !1186, line: 1161, column: 7)
!7200 = !DILocation(line: 1166, column: 25, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7199, file: !1186, line: 1166, column: 13)
!7202 = !DILocation(line: 1166, column: 32, scope: !7201)
!7203 = !DILocation(line: 1166, column: 13, scope: !7199)
!7204 = !DILocation(line: 1168, column: 39, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7201, file: !1186, line: 1167, column: 9)
!7206 = !DILocation(line: 1168, column: 49, scope: !7205)
!7207 = !DILocation(line: 1168, column: 22, scope: !7205)
!7208 = !DILocation(line: 1168, column: 17, scope: !7205)
!7209 = !DILocation(line: 1168, column: 20, scope: !7205)
!7210 = !DILocation(line: 1169, column: 9, scope: !7205)
!7211 = !DILocation(line: 1172, column: 39, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7201, file: !1186, line: 1171, column: 9)
!7213 = !DILocation(line: 1172, column: 49, scope: !7212)
!7214 = !DILocation(line: 1172, column: 22, scope: !7212)
!7215 = !DILocation(line: 1172, column: 17, scope: !7212)
!7216 = !DILocation(line: 1172, column: 20, scope: !7212)
!7217 = distinct !{!7217, !7170, !7218, !1358, !1359}
!7218 = !DILocation(line: 1176, column: 5, scope: !7150)
!7219 = !DILocation(line: 1179, column: 20, scope: !7150)
!7220 = !DILocation(line: 1182, column: 5, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7150, file: !1186, line: 1182, column: 5)
!7222 = !DILocation(line: 1184, column: 5, scope: !7150)
!7223 = !DILocation(line: 0, scope: !7145)
!7224 = !DILocation(line: 1190, column: 1, scope: !7135)
!7225 = distinct !DISubprogram(name: "HAL_UART_Transmit_IT", scope: !1186, file: !1186, line: 1203, type: !7226, scopeLine: 1204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7228)
!7226 = !DISubroutineType(types: !7227)
!7227 = !{!2497, !1211, !42, !34}
!7228 = !{!7229, !7230, !7231}
!7229 = !DILocalVariable(name: "huart", arg: 1, scope: !7225, file: !1186, line: 1203, type: !1211)
!7230 = !DILocalVariable(name: "pData", arg: 2, scope: !7225, file: !1186, line: 1203, type: !42)
!7231 = !DILocalVariable(name: "Size", arg: 3, scope: !7225, file: !1186, line: 1203, type: !34)
!7232 = !DILocation(line: 0, scope: !7225)
!7233 = !DILocation(line: 1206, column: 14, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7225, file: !1186, line: 1206, column: 7)
!7235 = !DILocation(line: 1206, column: 21, scope: !7234)
!7236 = !DILocation(line: 1206, column: 7, scope: !7225)
!7237 = !DILocation(line: 1208, column: 16, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7239, file: !1186, line: 1208, column: 9)
!7239 = distinct !DILexicalBlock(scope: !7234, file: !1186, line: 1207, column: 3)
!7240 = !DILocation(line: 1208, column: 25, scope: !7238)
!7241 = !DILocation(line: 1214, column: 5, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7243, file: !1186, line: 1214, column: 5)
!7243 = distinct !DILexicalBlock(scope: !7239, file: !1186, line: 1214, column: 5)
!7244 = !DILocation(line: 1214, column: 5, scope: !7243)
!7245 = !DILocation(line: 1214, column: 5, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7242, file: !1186, line: 1214, column: 5)
!7247 = !DILocation(line: 1216, column: 12, scope: !7239)
!7248 = !DILocation(line: 1216, column: 23, scope: !7239)
!7249 = !{!6827, !1600, i64 32}
!7250 = !DILocation(line: 1217, column: 12, scope: !7239)
!7251 = !DILocation(line: 1217, column: 23, scope: !7239)
!7252 = !DILocation(line: 1218, column: 12, scope: !7239)
!7253 = !DILocation(line: 1218, column: 24, scope: !7239)
!7254 = !DILocation(line: 1220, column: 12, scope: !7239)
!7255 = !DILocation(line: 1220, column: 22, scope: !7239)
!7256 = !DILocation(line: 1221, column: 19, scope: !7239)
!7257 = !DILocation(line: 1224, column: 5, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7239, file: !1186, line: 1224, column: 5)
!7259 = !DILocation(line: 1227, column: 5, scope: !7239)
!7260 = !DILocation(line: 1229, column: 5, scope: !7239)
!7261 = !DILocation(line: 0, scope: !7234)
!7262 = !DILocation(line: 1235, column: 1, scope: !7225)
!7263 = distinct !DISubprogram(name: "HAL_UART_Receive_IT", scope: !1186, file: !1186, line: 1248, type: !7226, scopeLine: 1249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7264)
!7264 = !{!7265, !7266, !7267}
!7265 = !DILocalVariable(name: "huart", arg: 1, scope: !7263, file: !1186, line: 1248, type: !1211)
!7266 = !DILocalVariable(name: "pData", arg: 2, scope: !7263, file: !1186, line: 1248, type: !42)
!7267 = !DILocalVariable(name: "Size", arg: 3, scope: !7263, file: !1186, line: 1248, type: !34)
!7268 = !DILocation(line: 0, scope: !7263)
!7269 = !DILocation(line: 1251, column: 14, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7263, file: !1186, line: 1251, column: 7)
!7271 = !DILocation(line: 1251, column: 22, scope: !7270)
!7272 = !DILocation(line: 1251, column: 7, scope: !7263)
!7273 = !DILocation(line: 1253, column: 16, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7275, file: !1186, line: 1253, column: 9)
!7275 = distinct !DILexicalBlock(scope: !7270, file: !1186, line: 1252, column: 3)
!7276 = !DILocation(line: 1253, column: 25, scope: !7274)
!7277 = !DILocation(line: 1259, column: 5, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7279, file: !1186, line: 1259, column: 5)
!7279 = distinct !DILexicalBlock(scope: !7275, file: !1186, line: 1259, column: 5)
!7280 = !DILocation(line: 1259, column: 5, scope: !7279)
!7281 = !DILocation(line: 1259, column: 5, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7278, file: !1186, line: 1259, column: 5)
!7283 = !DILocation(line: 1261, column: 12, scope: !7275)
!7284 = !DILocation(line: 1261, column: 23, scope: !7275)
!7285 = !{!6827, !1600, i64 40}
!7286 = !DILocation(line: 1262, column: 12, scope: !7275)
!7287 = !DILocation(line: 1262, column: 23, scope: !7275)
!7288 = !DILocation(line: 1263, column: 12, scope: !7275)
!7289 = !DILocation(line: 1263, column: 24, scope: !7275)
!7290 = !DILocation(line: 1265, column: 12, scope: !7275)
!7291 = !DILocation(line: 1265, column: 22, scope: !7275)
!7292 = !DILocation(line: 1266, column: 20, scope: !7275)
!7293 = !DILocation(line: 1269, column: 5, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7275, file: !1186, line: 1269, column: 5)
!7295 = !DILocation(line: 1272, column: 5, scope: !7275)
!7296 = !DILocation(line: 1275, column: 5, scope: !7275)
!7297 = !DILocation(line: 1278, column: 5, scope: !7275)
!7298 = !DILocation(line: 1280, column: 5, scope: !7275)
!7299 = !DILocation(line: 0, scope: !7270)
!7300 = !DILocation(line: 1286, column: 1, scope: !7263)
!7301 = distinct !DISubprogram(name: "HAL_UART_Transmit_DMA", scope: !1186, file: !1186, line: 1299, type: !7226, scopeLine: 1300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7302)
!7302 = !{!7303, !7304, !7305, !7306}
!7303 = !DILocalVariable(name: "huart", arg: 1, scope: !7301, file: !1186, line: 1299, type: !1211)
!7304 = !DILocalVariable(name: "pData", arg: 2, scope: !7301, file: !1186, line: 1299, type: !42)
!7305 = !DILocalVariable(name: "Size", arg: 3, scope: !7301, file: !1186, line: 1299, type: !34)
!7306 = !DILocalVariable(name: "tmp", scope: !7301, file: !1186, line: 1301, type: !86)
!7307 = !DILocation(line: 0, scope: !7301)
!7308 = !DILocation(line: 1304, column: 14, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7301, file: !1186, line: 1304, column: 7)
!7310 = !DILocation(line: 1304, column: 21, scope: !7309)
!7311 = !DILocation(line: 1304, column: 7, scope: !7301)
!7312 = !DILocation(line: 1306, column: 16, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7314, file: !1186, line: 1306, column: 9)
!7314 = distinct !DILexicalBlock(scope: !7309, file: !1186, line: 1305, column: 3)
!7315 = !DILocation(line: 1306, column: 25, scope: !7313)
!7316 = !DILocation(line: 1312, column: 5, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7318, file: !1186, line: 1312, column: 5)
!7318 = distinct !DILexicalBlock(scope: !7314, file: !1186, line: 1312, column: 5)
!7319 = !DILocation(line: 1312, column: 5, scope: !7318)
!7320 = !DILocation(line: 1312, column: 5, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7317, file: !1186, line: 1312, column: 5)
!7322 = !DILocation(line: 1314, column: 12, scope: !7314)
!7323 = !DILocation(line: 1314, column: 23, scope: !7314)
!7324 = !DILocation(line: 1315, column: 12, scope: !7314)
!7325 = !DILocation(line: 1315, column: 23, scope: !7314)
!7326 = !DILocation(line: 1316, column: 12, scope: !7314)
!7327 = !DILocation(line: 1316, column: 24, scope: !7314)
!7328 = !DILocation(line: 1318, column: 12, scope: !7314)
!7329 = !DILocation(line: 1318, column: 22, scope: !7314)
!7330 = !DILocation(line: 1319, column: 19, scope: !7314)
!7331 = !DILocation(line: 1322, column: 12, scope: !7314)
!7332 = !{!6827, !1600, i64 48}
!7333 = !DILocation(line: 1322, column: 20, scope: !7314)
!7334 = !DILocation(line: 1322, column: 37, scope: !7314)
!7335 = !{!7336, !1600, i64 44}
!7336 = !{!"__DMA_HandleTypeDef", !1600, i64 0, !5428, i64 4, !1601, i64 32, !1601, i64 36, !1600, i64 40, !1600, i64 44, !1600, i64 48, !1600, i64 52, !1600, i64 56, !2443, i64 60, !1600, i64 64, !2443, i64 68}
!7337 = !DILocation(line: 1325, column: 20, scope: !7314)
!7338 = !DILocation(line: 1325, column: 41, scope: !7314)
!7339 = !{!7336, !1600, i64 48}
!7340 = !DILocation(line: 1328, column: 20, scope: !7314)
!7341 = !DILocation(line: 1328, column: 38, scope: !7314)
!7342 = !{!7336, !1600, i64 52}
!7343 = !DILocation(line: 1331, column: 20, scope: !7314)
!7344 = !DILocation(line: 1331, column: 38, scope: !7314)
!7345 = !{!7336, !1600, i64 56}
!7346 = !DILocation(line: 1335, column: 37, scope: !7314)
!7347 = !DILocation(line: 1335, column: 73, scope: !7314)
!7348 = !DILocation(line: 1335, column: 83, scope: !7314)
!7349 = !DILocation(line: 1335, column: 55, scope: !7314)
!7350 = !DILocation(line: 1335, column: 5, scope: !7314)
!7351 = !DILocation(line: 1338, column: 5, scope: !7314)
!7352 = !DILocation(line: 1341, column: 5, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7314, file: !1186, line: 1341, column: 5)
!7354 = !DILocation(line: 1345, column: 5, scope: !7314)
!7355 = !DILocation(line: 1347, column: 5, scope: !7314)
!7356 = !DILocation(line: 0, scope: !7309)
!7357 = !DILocation(line: 1353, column: 1, scope: !7301)
!7358 = distinct !DISubprogram(name: "UART_DMATransmitCplt", scope: !1186, file: !1186, line: 2542, type: !7359, scopeLine: 2543, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7361)
!7359 = !DISubroutineType(types: !7360)
!7360 = !{null, !1245}
!7361 = !{!7362, !7363}
!7362 = !DILocalVariable(name: "hdma", arg: 1, scope: !7358, file: !1186, line: 2542, type: !1245)
!7363 = !DILocalVariable(name: "huart", scope: !7358, file: !1186, line: 2544, type: !1211)
!7364 = !DILocation(line: 0, scope: !7358)
!7365 = !DILocation(line: 2544, column: 82, scope: !7358)
!7366 = !{!7336, !1600, i64 40}
!7367 = !DILocation(line: 2546, column: 14, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7358, file: !1186, line: 2546, column: 7)
!7369 = !{!7336, !1600, i64 0}
!7370 = !DILocation(line: 2546, column: 24, scope: !7368)
!7371 = !DILocation(line: 2546, column: 28, scope: !7368)
!7372 = !DILocation(line: 2546, column: 44, scope: !7368)
!7373 = !DILocation(line: 2546, column: 7, scope: !7358)
!7374 = !DILocation(line: 2548, column: 12, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7368, file: !1186, line: 2547, column: 3)
!7376 = !DILocation(line: 2548, column: 24, scope: !7375)
!7377 = !DILocation(line: 2552, column: 5, scope: !7375)
!7378 = !DILocation(line: 2555, column: 5, scope: !7375)
!7379 = !DILocation(line: 2557, column: 3, scope: !7375)
!7380 = !DILocation(line: 2566, column: 5, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7368, file: !1186, line: 2560, column: 3)
!7382 = !DILocation(line: 2569, column: 1, scope: !7358)
!7383 = distinct !DISubprogram(name: "UART_DMATxHalfCplt", scope: !1186, file: !1186, line: 2577, type: !7359, scopeLine: 2578, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7384)
!7384 = !{!7385, !7386}
!7385 = !DILocalVariable(name: "hdma", arg: 1, scope: !7383, file: !1186, line: 2577, type: !1245)
!7386 = !DILocalVariable(name: "huart", scope: !7383, file: !1186, line: 2579, type: !1211)
!7387 = !DILocation(line: 0, scope: !7383)
!7388 = !DILocation(line: 2579, column: 82, scope: !7383)
!7389 = !DILocation(line: 2586, column: 3, scope: !7383)
!7390 = !DILocation(line: 2588, column: 1, scope: !7383)
!7391 = distinct !DISubprogram(name: "UART_DMAError", scope: !1186, file: !1186, line: 2649, type: !7359, scopeLine: 2650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7392)
!7392 = !{!7393, !7394, !7395}
!7393 = !DILocalVariable(name: "hdma", arg: 1, scope: !7391, file: !1186, line: 2649, type: !1245)
!7394 = !DILocalVariable(name: "dmarequest", scope: !7391, file: !1186, line: 2651, type: !21)
!7395 = !DILocalVariable(name: "huart", scope: !7391, file: !1186, line: 2652, type: !1211)
!7396 = !DILocation(line: 0, scope: !7391)
!7397 = !DILocation(line: 2652, column: 82, scope: !7391)
!7398 = !DILocation(line: 2655, column: 16, scope: !7391)
!7399 = !DILocation(line: 2656, column: 15, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7391, file: !1186, line: 2656, column: 7)
!7401 = !DILocation(line: 2656, column: 22, scope: !7400)
!7402 = !DILocation(line: 2656, column: 49, scope: !7400)
!7403 = !DILocation(line: 2658, column: 12, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7400, file: !1186, line: 2657, column: 3)
!7405 = !DILocation(line: 2658, column: 24, scope: !7404)
!7406 = !DILocation(line: 2659, column: 5, scope: !7404)
!7407 = !DILocation(line: 2660, column: 3, scope: !7404)
!7408 = !DILocation(line: 2663, column: 16, scope: !7391)
!7409 = !DILocation(line: 2664, column: 15, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7391, file: !1186, line: 2664, column: 7)
!7411 = !DILocation(line: 2664, column: 23, scope: !7410)
!7412 = !DILocation(line: 2664, column: 50, scope: !7410)
!7413 = !DILocation(line: 2666, column: 12, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7410, file: !1186, line: 2665, column: 3)
!7415 = !DILocation(line: 2666, column: 24, scope: !7414)
!7416 = !DILocation(line: 2667, column: 5, scope: !7414)
!7417 = !DILocation(line: 2668, column: 3, scope: !7414)
!7418 = !DILocation(line: 2670, column: 10, scope: !7391)
!7419 = !DILocation(line: 2670, column: 20, scope: !7391)
!7420 = !DILocation(line: 2676, column: 3, scope: !7391)
!7421 = !DILocation(line: 2678, column: 1, scope: !7391)
!7422 = !DISubprogram(name: "HAL_DMA_Start_IT", scope: !706, file: !706, line: 378, type: !7423, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !101)
!7423 = !DISubroutineType(types: !7424)
!7424 = !{!2497, !1245, !21, !21, !21}
!7425 = distinct !DISubprogram(name: "UART_EndTxTransfer", scope: !1186, file: !1186, line: 2722, type: !6854, scopeLine: 2723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7426)
!7426 = !{!7427}
!7427 = !DILocalVariable(name: "huart", arg: 1, scope: !7425, file: !1186, line: 2722, type: !1211)
!7428 = !DILocation(line: 0, scope: !7425)
!7429 = !DILocation(line: 2725, column: 3, scope: !7425)
!7430 = !DILocation(line: 2728, column: 10, scope: !7425)
!7431 = !DILocation(line: 2728, column: 17, scope: !7425)
!7432 = !DILocation(line: 2729, column: 1, scope: !7425)
!7433 = distinct !DISubprogram(name: "UART_EndRxTransfer", scope: !1186, file: !1186, line: 2736, type: !6854, scopeLine: 2737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7434)
!7434 = !{!7435}
!7435 = !DILocalVariable(name: "huart", arg: 1, scope: !7433, file: !1186, line: 2736, type: !1211)
!7436 = !DILocation(line: 0, scope: !7433)
!7437 = !DILocation(line: 2739, column: 3, scope: !7433)
!7438 = !DILocation(line: 2740, column: 3, scope: !7433)
!7439 = !DILocation(line: 2743, column: 10, scope: !7433)
!7440 = !DILocation(line: 2743, column: 18, scope: !7433)
!7441 = !DILocation(line: 2744, column: 1, scope: !7433)
!7442 = distinct !DISubprogram(name: "HAL_UART_ErrorCallback", scope: !1186, file: !1186, line: 2227, type: !6854, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7443)
!7443 = !{!7444}
!7444 = !DILocalVariable(name: "huart", arg: 1, scope: !7442, file: !1186, line: 2227, type: !1211)
!7445 = !DILocation(line: 0, scope: !7442)
!7446 = !DILocation(line: 2234, column: 1, scope: !7442)
!7447 = distinct !DISubprogram(name: "HAL_UART_TxHalfCpltCallback", scope: !1186, file: !1186, line: 2182, type: !6854, scopeLine: 2183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7448)
!7448 = !{!7449}
!7449 = !DILocalVariable(name: "huart", arg: 1, scope: !7447, file: !1186, line: 2182, type: !1211)
!7450 = !DILocation(line: 0, scope: !7447)
!7451 = !DILocation(line: 2189, column: 1, scope: !7447)
!7452 = distinct !DISubprogram(name: "HAL_UART_TxCpltCallback", scope: !1186, file: !1186, line: 2167, type: !6854, scopeLine: 2168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7453)
!7453 = !{!7454}
!7454 = !DILocalVariable(name: "huart", arg: 1, scope: !7452, file: !1186, line: 2167, type: !1211)
!7455 = !DILocation(line: 0, scope: !7452)
!7456 = !DILocation(line: 2174, column: 1, scope: !7452)
!7457 = distinct !DISubprogram(name: "HAL_UART_Receive_DMA", scope: !1186, file: !1186, line: 1367, type: !7226, scopeLine: 1368, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7458)
!7458 = !{!7459, !7460, !7461, !7462, !7463}
!7459 = !DILocalVariable(name: "huart", arg: 1, scope: !7457, file: !1186, line: 1367, type: !1211)
!7460 = !DILocalVariable(name: "pData", arg: 2, scope: !7457, file: !1186, line: 1367, type: !42)
!7461 = !DILocalVariable(name: "Size", arg: 3, scope: !7457, file: !1186, line: 1367, type: !34)
!7462 = !DILocalVariable(name: "tmp", scope: !7457, file: !1186, line: 1369, type: !86)
!7463 = !DILocalVariable(name: "tmpreg", scope: !7464, file: !1186, line: 1405, type: !20)
!7464 = distinct !DILexicalBlock(scope: !7465, file: !1186, line: 1405, column: 5)
!7465 = distinct !DILexicalBlock(scope: !7466, file: !1186, line: 1373, column: 3)
!7466 = distinct !DILexicalBlock(scope: !7457, file: !1186, line: 1372, column: 7)
!7467 = !DILocation(line: 0, scope: !7457)
!7468 = !DILocation(line: 1372, column: 14, scope: !7466)
!7469 = !DILocation(line: 1372, column: 22, scope: !7466)
!7470 = !DILocation(line: 1372, column: 7, scope: !7457)
!7471 = !DILocation(line: 1374, column: 16, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7465, file: !1186, line: 1374, column: 9)
!7473 = !DILocation(line: 1374, column: 25, scope: !7472)
!7474 = !DILocation(line: 1380, column: 5, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7476, file: !1186, line: 1380, column: 5)
!7476 = distinct !DILexicalBlock(scope: !7465, file: !1186, line: 1380, column: 5)
!7477 = !DILocation(line: 1380, column: 5, scope: !7476)
!7478 = !DILocation(line: 1380, column: 5, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7475, file: !1186, line: 1380, column: 5)
!7480 = !DILocation(line: 1382, column: 12, scope: !7465)
!7481 = !DILocation(line: 1382, column: 23, scope: !7465)
!7482 = !DILocation(line: 1383, column: 12, scope: !7465)
!7483 = !DILocation(line: 1383, column: 23, scope: !7465)
!7484 = !DILocation(line: 1385, column: 12, scope: !7465)
!7485 = !DILocation(line: 1385, column: 22, scope: !7465)
!7486 = !DILocation(line: 1386, column: 20, scope: !7465)
!7487 = !DILocation(line: 1389, column: 12, scope: !7465)
!7488 = !{!6827, !1600, i64 52}
!7489 = !DILocation(line: 1389, column: 20, scope: !7465)
!7490 = !DILocation(line: 1389, column: 37, scope: !7465)
!7491 = !DILocation(line: 1392, column: 20, scope: !7465)
!7492 = !DILocation(line: 1392, column: 41, scope: !7465)
!7493 = !DILocation(line: 1395, column: 20, scope: !7465)
!7494 = !DILocation(line: 1395, column: 38, scope: !7465)
!7495 = !DILocation(line: 1398, column: 20, scope: !7465)
!7496 = !DILocation(line: 1398, column: 38, scope: !7465)
!7497 = !DILocation(line: 1402, column: 55, scope: !7465)
!7498 = !DILocation(line: 1402, column: 65, scope: !7465)
!7499 = !DILocation(line: 1402, column: 37, scope: !7465)
!7500 = !DILocation(line: 1402, column: 69, scope: !7465)
!7501 = !DILocation(line: 1402, column: 5, scope: !7465)
!7502 = !DILocation(line: 1405, column: 5, scope: !7464)
!7503 = !DILocation(line: 1405, column: 5, scope: !7465)
!7504 = !DILocation(line: 1408, column: 5, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7465, file: !1186, line: 1408, column: 5)
!7506 = !DILocation(line: 1411, column: 5, scope: !7465)
!7507 = !DILocation(line: 1414, column: 5, scope: !7465)
!7508 = !DILocation(line: 1418, column: 5, scope: !7465)
!7509 = !DILocation(line: 1420, column: 5, scope: !7465)
!7510 = !DILocation(line: 0, scope: !7466)
!7511 = !DILocation(line: 1426, column: 1, scope: !7457)
!7512 = distinct !DISubprogram(name: "UART_DMAReceiveCplt", scope: !1186, file: !1186, line: 2596, type: !7359, scopeLine: 2597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7513)
!7513 = !{!7514, !7515}
!7514 = !DILocalVariable(name: "hdma", arg: 1, scope: !7512, file: !1186, line: 2596, type: !1245)
!7515 = !DILocalVariable(name: "huart", scope: !7512, file: !1186, line: 2598, type: !1211)
!7516 = !DILocation(line: 0, scope: !7512)
!7517 = !DILocation(line: 2598, column: 82, scope: !7512)
!7518 = !DILocation(line: 2600, column: 14, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7512, file: !1186, line: 2600, column: 7)
!7520 = !DILocation(line: 2600, column: 24, scope: !7519)
!7521 = !DILocation(line: 2600, column: 28, scope: !7519)
!7522 = !DILocation(line: 2600, column: 44, scope: !7519)
!7523 = !DILocation(line: 2600, column: 7, scope: !7512)
!7524 = !DILocation(line: 2602, column: 12, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7519, file: !1186, line: 2601, column: 3)
!7526 = !DILocation(line: 2602, column: 24, scope: !7525)
!7527 = !DILocation(line: 2605, column: 5, scope: !7525)
!7528 = !DILocation(line: 2606, column: 5, scope: !7525)
!7529 = !DILocation(line: 2610, column: 5, scope: !7525)
!7530 = !DILocation(line: 2613, column: 12, scope: !7525)
!7531 = !DILocation(line: 2613, column: 20, scope: !7525)
!7532 = !DILocation(line: 2614, column: 3, scope: !7525)
!7533 = !DILocation(line: 2620, column: 3, scope: !7512)
!7534 = !DILocation(line: 2622, column: 1, scope: !7512)
!7535 = distinct !DISubprogram(name: "UART_DMARxHalfCplt", scope: !1186, file: !1186, line: 2630, type: !7359, scopeLine: 2631, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7536)
!7536 = !{!7537, !7538}
!7537 = !DILocalVariable(name: "hdma", arg: 1, scope: !7535, file: !1186, line: 2630, type: !1245)
!7538 = !DILocalVariable(name: "huart", scope: !7535, file: !1186, line: 2632, type: !1211)
!7539 = !DILocation(line: 0, scope: !7535)
!7540 = !DILocation(line: 2632, column: 82, scope: !7535)
!7541 = !DILocation(line: 2639, column: 3, scope: !7535)
!7542 = !DILocation(line: 2641, column: 1, scope: !7535)
!7543 = distinct !DISubprogram(name: "HAL_UART_RxHalfCpltCallback", scope: !1186, file: !1186, line: 2212, type: !6854, scopeLine: 2213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7544)
!7544 = !{!7545}
!7545 = !DILocalVariable(name: "huart", arg: 1, scope: !7543, file: !1186, line: 2212, type: !1211)
!7546 = !DILocation(line: 0, scope: !7543)
!7547 = !DILocation(line: 2219, column: 1, scope: !7543)
!7548 = distinct !DISubprogram(name: "HAL_UART_RxCpltCallback", scope: !1186, file: !1186, line: 2197, type: !6854, scopeLine: 2198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7549)
!7549 = !{!7550}
!7550 = !DILocalVariable(name: "huart", arg: 1, scope: !7548, file: !1186, line: 2197, type: !1211)
!7551 = !DILocation(line: 0, scope: !7548)
!7552 = !DILocation(line: 2204, column: 1, scope: !7548)
!7553 = distinct !DISubprogram(name: "HAL_UART_DMAPause", scope: !1186, file: !1186, line: 1434, type: !6816, scopeLine: 1435, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7554)
!7554 = !{!7555, !7556}
!7555 = !DILocalVariable(name: "huart", arg: 1, scope: !7553, file: !1186, line: 1434, type: !1211)
!7556 = !DILocalVariable(name: "dmarequest", scope: !7553, file: !1186, line: 1436, type: !21)
!7557 = !DILocation(line: 0, scope: !7553)
!7558 = !DILocation(line: 1439, column: 3, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7560, file: !1186, line: 1439, column: 3)
!7560 = distinct !DILexicalBlock(scope: !7553, file: !1186, line: 1439, column: 3)
!7561 = !DILocation(line: 1439, column: 3, scope: !7560)
!7562 = !DILocation(line: 1439, column: 3, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7559, file: !1186, line: 1439, column: 3)
!7564 = !DILocation(line: 1441, column: 16, scope: !7553)
!7565 = !DILocation(line: 1442, column: 15, scope: !7566)
!7566 = distinct !DILexicalBlock(scope: !7553, file: !1186, line: 1442, column: 7)
!7567 = !DILocation(line: 1442, column: 22, scope: !7566)
!7568 = !DILocation(line: 1442, column: 49, scope: !7566)
!7569 = !DILocation(line: 1445, column: 5, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7566, file: !1186, line: 1443, column: 3)
!7571 = !DILocation(line: 1446, column: 3, scope: !7570)
!7572 = !DILocation(line: 1448, column: 16, scope: !7553)
!7573 = !DILocation(line: 1449, column: 15, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7553, file: !1186, line: 1449, column: 7)
!7575 = !DILocation(line: 1449, column: 23, scope: !7574)
!7576 = !DILocation(line: 1449, column: 50, scope: !7574)
!7577 = !DILocation(line: 1452, column: 5, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7574, file: !1186, line: 1450, column: 3)
!7579 = !DILocation(line: 1453, column: 5, scope: !7578)
!7580 = !DILocation(line: 1456, column: 5, scope: !7578)
!7581 = !DILocation(line: 1457, column: 3, scope: !7578)
!7582 = !DILocation(line: 1460, column: 3, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7553, file: !1186, line: 1460, column: 3)
!7584 = !DILocation(line: 1462, column: 3, scope: !7553)
!7585 = !DILocation(line: 1463, column: 1, scope: !7553)
!7586 = distinct !DISubprogram(name: "HAL_UART_DMAResume", scope: !1186, file: !1186, line: 1471, type: !6816, scopeLine: 1472, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7587)
!7587 = !{!7588, !7589}
!7588 = !DILocalVariable(name: "huart", arg: 1, scope: !7586, file: !1186, line: 1471, type: !1211)
!7589 = !DILocalVariable(name: "tmpreg", scope: !7590, file: !1186, line: 1485, type: !20)
!7590 = distinct !DILexicalBlock(scope: !7591, file: !1186, line: 1485, column: 5)
!7591 = distinct !DILexicalBlock(scope: !7592, file: !1186, line: 1483, column: 3)
!7592 = distinct !DILexicalBlock(scope: !7586, file: !1186, line: 1482, column: 7)
!7593 = !DILocation(line: 0, scope: !7586)
!7594 = !DILocation(line: 1474, column: 3, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7596, file: !1186, line: 1474, column: 3)
!7596 = distinct !DILexicalBlock(scope: !7586, file: !1186, line: 1474, column: 3)
!7597 = !DILocation(line: 1474, column: 3, scope: !7596)
!7598 = !DILocation(line: 1474, column: 3, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7595, file: !1186, line: 1474, column: 3)
!7600 = !DILocation(line: 1476, column: 14, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7586, file: !1186, line: 1476, column: 7)
!7602 = !DILocation(line: 1476, column: 21, scope: !7601)
!7603 = !DILocation(line: 1476, column: 7, scope: !7586)
!7604 = !DILocation(line: 1479, column: 5, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7601, file: !1186, line: 1477, column: 3)
!7606 = !DILocation(line: 1480, column: 3, scope: !7605)
!7607 = !DILocation(line: 1482, column: 14, scope: !7592)
!7608 = !DILocation(line: 1482, column: 22, scope: !7592)
!7609 = !DILocation(line: 1482, column: 7, scope: !7586)
!7610 = !DILocation(line: 1485, column: 5, scope: !7590)
!7611 = !DILocation(line: 1485, column: 5, scope: !7591)
!7612 = !DILocation(line: 1488, column: 5, scope: !7591)
!7613 = !DILocation(line: 1489, column: 5, scope: !7591)
!7614 = !DILocation(line: 1492, column: 5, scope: !7591)
!7615 = !DILocation(line: 1493, column: 3, scope: !7591)
!7616 = !DILocation(line: 1496, column: 3, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7586, file: !1186, line: 1496, column: 3)
!7618 = !DILocation(line: 1498, column: 3, scope: !7586)
!7619 = !DILocation(line: 1499, column: 1, scope: !7586)
!7620 = distinct !DISubprogram(name: "HAL_UART_DMAStop", scope: !1186, file: !1186, line: 1507, type: !6816, scopeLine: 1508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7621)
!7621 = !{!7622, !7623}
!7622 = !DILocalVariable(name: "huart", arg: 1, scope: !7620, file: !1186, line: 1507, type: !1211)
!7623 = !DILocalVariable(name: "dmarequest", scope: !7620, file: !1186, line: 1509, type: !21)
!7624 = !DILocation(line: 0, scope: !7620)
!7625 = !DILocation(line: 1517, column: 16, scope: !7620)
!7626 = !DILocation(line: 1518, column: 15, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7620, file: !1186, line: 1518, column: 7)
!7628 = !DILocation(line: 1518, column: 22, scope: !7627)
!7629 = !DILocation(line: 1518, column: 49, scope: !7627)
!7630 = !DILocation(line: 1520, column: 5, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7627, file: !1186, line: 1519, column: 3)
!7632 = !DILocation(line: 1523, column: 16, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7631, file: !1186, line: 1523, column: 9)
!7634 = !DILocation(line: 1523, column: 23, scope: !7633)
!7635 = !DILocation(line: 1523, column: 9, scope: !7631)
!7636 = !DILocation(line: 1525, column: 7, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7633, file: !1186, line: 1524, column: 5)
!7638 = !DILocation(line: 1526, column: 5, scope: !7637)
!7639 = !DILocation(line: 1527, column: 5, scope: !7631)
!7640 = !DILocation(line: 1528, column: 3, scope: !7631)
!7641 = !DILocation(line: 1531, column: 16, scope: !7620)
!7642 = !DILocation(line: 1532, column: 15, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7620, file: !1186, line: 1532, column: 7)
!7644 = !DILocation(line: 1532, column: 23, scope: !7643)
!7645 = !DILocation(line: 1532, column: 50, scope: !7643)
!7646 = !DILocation(line: 1534, column: 5, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7643, file: !1186, line: 1533, column: 3)
!7648 = !DILocation(line: 1537, column: 16, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7647, file: !1186, line: 1537, column: 9)
!7650 = !DILocation(line: 1537, column: 23, scope: !7649)
!7651 = !DILocation(line: 1537, column: 9, scope: !7647)
!7652 = !DILocation(line: 1539, column: 7, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7649, file: !1186, line: 1538, column: 5)
!7654 = !DILocation(line: 1540, column: 5, scope: !7653)
!7655 = !DILocation(line: 1541, column: 5, scope: !7647)
!7656 = !DILocation(line: 1542, column: 3, scope: !7647)
!7657 = !DILocation(line: 1544, column: 3, scope: !7620)
!7658 = !DISubprogram(name: "HAL_DMA_Abort", scope: !706, file: !706, line: 379, type: !7659, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !101)
!7659 = !DISubroutineType(types: !7660)
!7660 = !{!2497, !1245}
!7661 = distinct !DISubprogram(name: "HAL_UART_Abort", scope: !1186, file: !1186, line: 1559, type: !6816, scopeLine: 1560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7662)
!7662 = !{!7663}
!7663 = !DILocalVariable(name: "huart", arg: 1, scope: !7661, file: !1186, line: 1559, type: !1211)
!7664 = !DILocation(line: 0, scope: !7661)
!7665 = !DILocation(line: 1562, column: 3, scope: !7661)
!7666 = !DILocation(line: 1563, column: 3, scope: !7661)
!7667 = !DILocation(line: 1566, column: 7, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7661, file: !1186, line: 1566, column: 7)
!7669 = !DILocation(line: 1566, column: 7, scope: !7661)
!7670 = !DILocation(line: 1568, column: 5, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7668, file: !1186, line: 1567, column: 3)
!7672 = !DILocation(line: 1571, column: 16, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7671, file: !1186, line: 1571, column: 9)
!7674 = !DILocation(line: 1571, column: 23, scope: !7673)
!7675 = !DILocation(line: 1571, column: 9, scope: !7671)
!7676 = !DILocation(line: 1575, column: 22, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7673, file: !1186, line: 1572, column: 5)
!7678 = !DILocation(line: 1575, column: 40, scope: !7677)
!7679 = !DILocation(line: 1577, column: 11, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7677, file: !1186, line: 1577, column: 11)
!7681 = !DILocation(line: 1577, column: 40, scope: !7680)
!7682 = !DILocation(line: 1577, column: 11, scope: !7677)
!7683 = !DILocation(line: 1579, column: 37, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7685, file: !1186, line: 1579, column: 13)
!7685 = distinct !DILexicalBlock(scope: !7680, file: !1186, line: 1578, column: 7)
!7686 = !DILocation(line: 1579, column: 13, scope: !7684)
!7687 = !DILocation(line: 1579, column: 45, scope: !7684)
!7688 = !DILocation(line: 1579, column: 13, scope: !7685)
!7689 = !DILocation(line: 1582, column: 18, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7684, file: !1186, line: 1580, column: 9)
!7691 = !DILocation(line: 1582, column: 28, scope: !7690)
!7692 = !DILocation(line: 1584, column: 11, scope: !7690)
!7693 = !DILocation(line: 1591, column: 7, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7661, file: !1186, line: 1591, column: 7)
!7695 = !DILocation(line: 1591, column: 7, scope: !7661)
!7696 = !DILocation(line: 1593, column: 5, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7694, file: !1186, line: 1592, column: 3)
!7698 = !DILocation(line: 1596, column: 16, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7697, file: !1186, line: 1596, column: 9)
!7700 = !DILocation(line: 1596, column: 23, scope: !7699)
!7701 = !DILocation(line: 1596, column: 9, scope: !7697)
!7702 = !DILocation(line: 1600, column: 22, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7699, file: !1186, line: 1597, column: 5)
!7704 = !DILocation(line: 1600, column: 40, scope: !7703)
!7705 = !DILocation(line: 1602, column: 11, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7703, file: !1186, line: 1602, column: 11)
!7707 = !DILocation(line: 1602, column: 40, scope: !7706)
!7708 = !DILocation(line: 1602, column: 11, scope: !7703)
!7709 = !DILocation(line: 1604, column: 37, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7711, file: !1186, line: 1604, column: 13)
!7711 = distinct !DILexicalBlock(scope: !7706, file: !1186, line: 1603, column: 7)
!7712 = !DILocation(line: 1604, column: 13, scope: !7710)
!7713 = !DILocation(line: 1604, column: 45, scope: !7710)
!7714 = !DILocation(line: 1604, column: 13, scope: !7711)
!7715 = !DILocation(line: 1607, column: 18, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7710, file: !1186, line: 1605, column: 9)
!7717 = !DILocation(line: 1607, column: 28, scope: !7716)
!7718 = !DILocation(line: 1609, column: 11, scope: !7716)
!7719 = !DILocation(line: 1616, column: 10, scope: !7661)
!7720 = !DILocation(line: 1616, column: 22, scope: !7661)
!7721 = !DILocation(line: 1617, column: 10, scope: !7661)
!7722 = !DILocation(line: 1617, column: 22, scope: !7661)
!7723 = !DILocation(line: 1620, column: 10, scope: !7661)
!7724 = !DILocation(line: 1620, column: 20, scope: !7661)
!7725 = !DILocation(line: 1623, column: 10, scope: !7661)
!7726 = !DILocation(line: 1623, column: 18, scope: !7661)
!7727 = !DILocation(line: 1624, column: 10, scope: !7661)
!7728 = !DILocation(line: 1624, column: 17, scope: !7661)
!7729 = !DILocation(line: 1626, column: 3, scope: !7661)
!7730 = !DILocation(line: 1627, column: 1, scope: !7661)
!7731 = !DISubprogram(name: "HAL_DMA_GetError", scope: !706, file: !706, line: 395, type: !7732, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !101)
!7732 = !DISubroutineType(types: !7733)
!7733 = !{!21, !1245}
!7734 = distinct !DISubprogram(name: "HAL_UART_AbortTransmit", scope: !1186, file: !1186, line: 1641, type: !6816, scopeLine: 1642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7735)
!7735 = !{!7736}
!7736 = !DILocalVariable(name: "huart", arg: 1, scope: !7734, file: !1186, line: 1641, type: !1211)
!7737 = !DILocation(line: 0, scope: !7734)
!7738 = !DILocation(line: 1644, column: 3, scope: !7734)
!7739 = !DILocation(line: 1647, column: 7, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7734, file: !1186, line: 1647, column: 7)
!7741 = !DILocation(line: 1647, column: 7, scope: !7734)
!7742 = !DILocation(line: 1649, column: 5, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7740, file: !1186, line: 1648, column: 3)
!7744 = !DILocation(line: 1652, column: 16, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7743, file: !1186, line: 1652, column: 9)
!7746 = !DILocation(line: 1652, column: 23, scope: !7745)
!7747 = !DILocation(line: 1652, column: 9, scope: !7743)
!7748 = !DILocation(line: 1656, column: 22, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7745, file: !1186, line: 1653, column: 5)
!7750 = !DILocation(line: 1656, column: 40, scope: !7749)
!7751 = !DILocation(line: 1658, column: 11, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7749, file: !1186, line: 1658, column: 11)
!7753 = !DILocation(line: 1658, column: 40, scope: !7752)
!7754 = !DILocation(line: 1658, column: 11, scope: !7749)
!7755 = !DILocation(line: 1660, column: 37, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7757, file: !1186, line: 1660, column: 13)
!7757 = distinct !DILexicalBlock(scope: !7752, file: !1186, line: 1659, column: 7)
!7758 = !DILocation(line: 1660, column: 13, scope: !7756)
!7759 = !DILocation(line: 1660, column: 45, scope: !7756)
!7760 = !DILocation(line: 1660, column: 13, scope: !7757)
!7761 = !DILocation(line: 1663, column: 18, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7756, file: !1186, line: 1661, column: 9)
!7763 = !DILocation(line: 1663, column: 28, scope: !7762)
!7764 = !DILocation(line: 1665, column: 11, scope: !7762)
!7765 = !DILocation(line: 1672, column: 10, scope: !7734)
!7766 = !DILocation(line: 1672, column: 22, scope: !7734)
!7767 = !DILocation(line: 1675, column: 10, scope: !7734)
!7768 = !DILocation(line: 1675, column: 17, scope: !7734)
!7769 = !DILocation(line: 1677, column: 3, scope: !7734)
!7770 = !DILocation(line: 1678, column: 1, scope: !7734)
!7771 = distinct !DISubprogram(name: "HAL_UART_AbortReceive", scope: !1186, file: !1186, line: 1692, type: !6816, scopeLine: 1693, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7772)
!7772 = !{!7773}
!7773 = !DILocalVariable(name: "huart", arg: 1, scope: !7771, file: !1186, line: 1692, type: !1211)
!7774 = !DILocation(line: 0, scope: !7771)
!7775 = !DILocation(line: 1695, column: 3, scope: !7771)
!7776 = !DILocation(line: 1696, column: 3, scope: !7771)
!7777 = !DILocation(line: 1699, column: 7, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7771, file: !1186, line: 1699, column: 7)
!7779 = !DILocation(line: 1699, column: 7, scope: !7771)
!7780 = !DILocation(line: 1701, column: 5, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7778, file: !1186, line: 1700, column: 3)
!7782 = !DILocation(line: 1704, column: 16, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7781, file: !1186, line: 1704, column: 9)
!7784 = !DILocation(line: 1704, column: 23, scope: !7783)
!7785 = !DILocation(line: 1704, column: 9, scope: !7781)
!7786 = !DILocation(line: 1708, column: 22, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7783, file: !1186, line: 1705, column: 5)
!7788 = !DILocation(line: 1708, column: 40, scope: !7787)
!7789 = !DILocation(line: 1710, column: 11, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7787, file: !1186, line: 1710, column: 11)
!7791 = !DILocation(line: 1710, column: 40, scope: !7790)
!7792 = !DILocation(line: 1710, column: 11, scope: !7787)
!7793 = !DILocation(line: 1712, column: 37, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7795, file: !1186, line: 1712, column: 13)
!7795 = distinct !DILexicalBlock(scope: !7790, file: !1186, line: 1711, column: 7)
!7796 = !DILocation(line: 1712, column: 13, scope: !7794)
!7797 = !DILocation(line: 1712, column: 45, scope: !7794)
!7798 = !DILocation(line: 1712, column: 13, scope: !7795)
!7799 = !DILocation(line: 1715, column: 18, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7794, file: !1186, line: 1713, column: 9)
!7801 = !DILocation(line: 1715, column: 28, scope: !7800)
!7802 = !DILocation(line: 1717, column: 11, scope: !7800)
!7803 = !DILocation(line: 1724, column: 10, scope: !7771)
!7804 = !DILocation(line: 1724, column: 22, scope: !7771)
!7805 = !DILocation(line: 1727, column: 10, scope: !7771)
!7806 = !DILocation(line: 1727, column: 18, scope: !7771)
!7807 = !DILocation(line: 1729, column: 3, scope: !7771)
!7808 = !DILocation(line: 1730, column: 1, scope: !7771)
!7809 = distinct !DISubprogram(name: "HAL_UART_Abort_IT", scope: !1186, file: !1186, line: 1746, type: !6816, scopeLine: 1747, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7810)
!7810 = !{!7811, !7812}
!7811 = !DILocalVariable(name: "huart", arg: 1, scope: !7809, file: !1186, line: 1746, type: !1211)
!7812 = !DILocalVariable(name: "AbortCplt", scope: !7809, file: !1186, line: 1748, type: !21)
!7813 = !DILocation(line: 0, scope: !7809)
!7814 = !DILocation(line: 1751, column: 3, scope: !7809)
!7815 = !DILocation(line: 1752, column: 3, scope: !7809)
!7816 = !DILocation(line: 1757, column: 14, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7809, file: !1186, line: 1757, column: 7)
!7818 = !DILocation(line: 1757, column: 21, scope: !7817)
!7819 = !DILocation(line: 1757, column: 7, scope: !7809)
!7820 = !DILocation(line: 1761, column: 9, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7822, file: !1186, line: 1761, column: 9)
!7822 = distinct !DILexicalBlock(scope: !7817, file: !1186, line: 1758, column: 3)
!7823 = !DILocation(line: 0, scope: !7821)
!7824 = !DILocation(line: 1771, column: 14, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7809, file: !1186, line: 1771, column: 7)
!7826 = !DILocation(line: 1771, column: 21, scope: !7825)
!7827 = !DILocation(line: 1771, column: 7, scope: !7809)
!7828 = !DILocation(line: 1775, column: 9, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7830, file: !1186, line: 1775, column: 9)
!7830 = distinct !DILexicalBlock(scope: !7825, file: !1186, line: 1772, column: 3)
!7831 = !DILocation(line: 0, scope: !7829)
!7832 = !DILocation(line: 1786, column: 7, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7809, file: !1186, line: 1786, column: 7)
!7834 = !DILocation(line: 1786, column: 7, scope: !7809)
!7835 = !DILocation(line: 1789, column: 5, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7833, file: !1186, line: 1787, column: 3)
!7837 = !DILocation(line: 1792, column: 9, scope: !7836)
!7838 = !DILocation(line: 1798, column: 11, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7840, file: !1186, line: 1798, column: 11)
!7840 = distinct !DILexicalBlock(scope: !7841, file: !1186, line: 1793, column: 5)
!7841 = distinct !DILexicalBlock(scope: !7836, file: !1186, line: 1792, column: 9)
!7842 = !DILocation(line: 1798, column: 43, scope: !7839)
!7843 = !DILocation(line: 1798, column: 11, scope: !7840)
!7844 = !DILocation(line: 1800, column: 16, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7839, file: !1186, line: 1799, column: 7)
!7846 = !DILocation(line: 1800, column: 24, scope: !7845)
!7847 = !DILocation(line: 1800, column: 42, scope: !7845)
!7848 = !DILocation(line: 1801, column: 7, scope: !7845)
!7849 = !DILocation(line: 1810, column: 7, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7809, file: !1186, line: 1810, column: 7)
!7851 = !DILocation(line: 1810, column: 7, scope: !7809)
!7852 = !DILocation(line: 1812, column: 5, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7850, file: !1186, line: 1811, column: 3)
!7854 = !DILocation(line: 1815, column: 16, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7853, file: !1186, line: 1815, column: 9)
!7856 = !DILocation(line: 1815, column: 23, scope: !7855)
!7857 = !DILocation(line: 1815, column: 9, scope: !7853)
!7858 = !DILocation(line: 1821, column: 11, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7860, file: !1186, line: 1821, column: 11)
!7860 = distinct !DILexicalBlock(scope: !7855, file: !1186, line: 1816, column: 5)
!7861 = !DILocation(line: 1821, column: 43, scope: !7859)
!7862 = !DILocation(line: 1821, column: 11, scope: !7860)
!7863 = !DILocation(line: 1823, column: 16, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7859, file: !1186, line: 1822, column: 7)
!7865 = !DILocation(line: 1823, column: 24, scope: !7864)
!7866 = !DILocation(line: 1823, column: 42, scope: !7864)
!7867 = !DILocation(line: 1825, column: 7, scope: !7864)
!7868 = !DILocation(line: 1834, column: 17, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7809, file: !1186, line: 1834, column: 7)
!7870 = !DILocation(line: 1834, column: 7, scope: !7809)
!7871 = !DILocation(line: 1837, column: 12, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7869, file: !1186, line: 1835, column: 3)
!7873 = !DILocation(line: 1837, column: 24, scope: !7872)
!7874 = !DILocation(line: 1838, column: 12, scope: !7872)
!7875 = !DILocation(line: 1838, column: 24, scope: !7872)
!7876 = !DILocation(line: 1841, column: 12, scope: !7872)
!7877 = !DILocation(line: 1841, column: 22, scope: !7872)
!7878 = !DILocation(line: 1844, column: 12, scope: !7872)
!7879 = !DILocation(line: 1844, column: 20, scope: !7872)
!7880 = !DILocation(line: 1845, column: 12, scope: !7872)
!7881 = !DILocation(line: 1845, column: 20, scope: !7872)
!7882 = !DILocation(line: 1853, column: 5, scope: !7872)
!7883 = !DILocation(line: 1855, column: 3, scope: !7872)
!7884 = !DILocation(line: 1857, column: 3, scope: !7809)
!7885 = distinct !DISubprogram(name: "UART_DMATxAbortCallback", scope: !1186, file: !1186, line: 2777, type: !7359, scopeLine: 2778, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7886)
!7886 = !{!7887, !7888}
!7887 = !DILocalVariable(name: "hdma", arg: 1, scope: !7885, file: !1186, line: 2777, type: !1245)
!7888 = !DILocalVariable(name: "huart", scope: !7885, file: !1186, line: 2779, type: !1211)
!7889 = !DILocation(line: 0, scope: !7885)
!7890 = !DILocation(line: 2779, column: 82, scope: !7885)
!7891 = !DILocation(line: 2781, column: 10, scope: !7885)
!7892 = !DILocation(line: 2781, column: 18, scope: !7885)
!7893 = !DILocation(line: 2781, column: 36, scope: !7885)
!7894 = !DILocation(line: 2784, column: 14, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7885, file: !1186, line: 2784, column: 7)
!7896 = !DILocation(line: 2784, column: 21, scope: !7895)
!7897 = !DILocation(line: 2784, column: 7, scope: !7885)
!7898 = !DILocation(line: 2786, column: 24, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7900, file: !1186, line: 2786, column: 9)
!7900 = distinct !DILexicalBlock(scope: !7895, file: !1186, line: 2785, column: 3)
!7901 = !DILocation(line: 2786, column: 42, scope: !7899)
!7902 = !DILocation(line: 2786, column: 9, scope: !7900)
!7903 = !DILocation(line: 2793, column: 10, scope: !7885)
!7904 = !DILocation(line: 2793, column: 22, scope: !7885)
!7905 = !DILocation(line: 2794, column: 10, scope: !7885)
!7906 = !DILocation(line: 2794, column: 22, scope: !7885)
!7907 = !DILocation(line: 2797, column: 10, scope: !7885)
!7908 = !DILocation(line: 2797, column: 20, scope: !7885)
!7909 = !DILocation(line: 2800, column: 10, scope: !7885)
!7910 = !DILocation(line: 2800, column: 18, scope: !7885)
!7911 = !DILocation(line: 2801, column: 10, scope: !7885)
!7912 = !DILocation(line: 2801, column: 18, scope: !7885)
!7913 = !DILocation(line: 2809, column: 3, scope: !7885)
!7914 = !DILocation(line: 2811, column: 1, scope: !7885)
!7915 = distinct !DISubprogram(name: "UART_DMARxAbortCallback", scope: !1186, file: !1186, line: 2822, type: !7359, scopeLine: 2823, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7916)
!7916 = !{!7917, !7918}
!7917 = !DILocalVariable(name: "hdma", arg: 1, scope: !7915, file: !1186, line: 2822, type: !1245)
!7918 = !DILocalVariable(name: "huart", scope: !7915, file: !1186, line: 2824, type: !1211)
!7919 = !DILocation(line: 0, scope: !7915)
!7920 = !DILocation(line: 2824, column: 82, scope: !7915)
!7921 = !DILocation(line: 2826, column: 10, scope: !7915)
!7922 = !DILocation(line: 2826, column: 18, scope: !7915)
!7923 = !DILocation(line: 2826, column: 36, scope: !7915)
!7924 = !DILocation(line: 2829, column: 14, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7915, file: !1186, line: 2829, column: 7)
!7926 = !DILocation(line: 2829, column: 21, scope: !7925)
!7927 = !DILocation(line: 2829, column: 7, scope: !7915)
!7928 = !DILocation(line: 2831, column: 24, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7930, file: !1186, line: 2831, column: 9)
!7930 = distinct !DILexicalBlock(scope: !7925, file: !1186, line: 2830, column: 3)
!7931 = !DILocation(line: 2831, column: 42, scope: !7929)
!7932 = !DILocation(line: 2831, column: 9, scope: !7930)
!7933 = !DILocation(line: 2838, column: 10, scope: !7915)
!7934 = !DILocation(line: 2838, column: 22, scope: !7915)
!7935 = !DILocation(line: 2839, column: 10, scope: !7915)
!7936 = !DILocation(line: 2839, column: 22, scope: !7915)
!7937 = !DILocation(line: 2842, column: 10, scope: !7915)
!7938 = !DILocation(line: 2842, column: 20, scope: !7915)
!7939 = !DILocation(line: 2845, column: 10, scope: !7915)
!7940 = !DILocation(line: 2845, column: 18, scope: !7915)
!7941 = !DILocation(line: 2846, column: 10, scope: !7915)
!7942 = !DILocation(line: 2846, column: 18, scope: !7915)
!7943 = !DILocation(line: 2854, column: 3, scope: !7915)
!7944 = !DILocation(line: 2856, column: 1, scope: !7915)
!7945 = !DISubprogram(name: "HAL_DMA_Abort_IT", scope: !706, file: !706, line: 380, type: !7659, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !101)
!7946 = distinct !DISubprogram(name: "HAL_UART_AbortCpltCallback", scope: !1186, file: !1186, line: 2241, type: !6854, scopeLine: 2242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7947)
!7947 = !{!7948}
!7948 = !DILocalVariable(name: "huart", arg: 1, scope: !7946, file: !1186, line: 2241, type: !1211)
!7949 = !DILocation(line: 0, scope: !7946)
!7950 = !DILocation(line: 2249, column: 1, scope: !7946)
!7951 = distinct !DISubprogram(name: "HAL_UART_AbortTransmit_IT", scope: !1186, file: !1186, line: 1874, type: !6816, scopeLine: 1875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7952)
!7952 = !{!7953}
!7953 = !DILocalVariable(name: "huart", arg: 1, scope: !7951, file: !1186, line: 1874, type: !1211)
!7954 = !DILocation(line: 0, scope: !7951)
!7955 = !DILocation(line: 1877, column: 3, scope: !7951)
!7956 = !DILocation(line: 1880, column: 7, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7951, file: !1186, line: 1880, column: 7)
!7958 = !DILocation(line: 1880, column: 7, scope: !7951)
!7959 = !DILocation(line: 1882, column: 5, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7957, file: !1186, line: 1881, column: 3)
!7961 = !DILocation(line: 1885, column: 16, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7960, file: !1186, line: 1885, column: 9)
!7963 = !DILocation(line: 1885, column: 23, scope: !7962)
!7964 = !DILocation(line: 1885, column: 9, scope: !7960)
!7965 = !DILocation(line: 1889, column: 22, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7962, file: !1186, line: 1886, column: 5)
!7967 = !DILocation(line: 1889, column: 40, scope: !7966)
!7968 = !DILocation(line: 1892, column: 11, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7966, file: !1186, line: 1892, column: 11)
!7970 = !DILocation(line: 1892, column: 43, scope: !7969)
!7971 = !DILocation(line: 1892, column: 11, scope: !7966)
!7972 = !DILocation(line: 1895, column: 16, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7969, file: !1186, line: 1893, column: 7)
!7974 = !DILocation(line: 1895, column: 24, scope: !7973)
!7975 = !DILocation(line: 1895, column: 9, scope: !7973)
!7976 = !DILocation(line: 1896, column: 7, scope: !7973)
!7977 = !DILocation(line: 1901, column: 14, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7962, file: !1186, line: 1899, column: 5)
!7979 = !DILocation(line: 1901, column: 26, scope: !7978)
!7980 = !DILocation(line: 1904, column: 14, scope: !7978)
!7981 = !DILocation(line: 1904, column: 21, scope: !7978)
!7982 = !DILocation(line: 1912, column: 7, scope: !7978)
!7983 = !DILocation(line: 1919, column: 12, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7957, file: !1186, line: 1917, column: 3)
!7985 = !DILocation(line: 1919, column: 24, scope: !7984)
!7986 = !DILocation(line: 1922, column: 12, scope: !7984)
!7987 = !DILocation(line: 1922, column: 19, scope: !7984)
!7988 = !DILocation(line: 1930, column: 5, scope: !7984)
!7989 = !DILocation(line: 1934, column: 3, scope: !7951)
!7990 = distinct !DISubprogram(name: "UART_DMATxOnlyAbortCallback", scope: !1186, file: !1186, line: 2867, type: !7359, scopeLine: 2868, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !7991)
!7991 = !{!7992, !7993}
!7992 = !DILocalVariable(name: "hdma", arg: 1, scope: !7990, file: !1186, line: 2867, type: !1245)
!7993 = !DILocalVariable(name: "huart", scope: !7990, file: !1186, line: 2869, type: !1211)
!7994 = !DILocation(line: 0, scope: !7990)
!7995 = !DILocation(line: 2869, column: 82, scope: !7990)
!7996 = !DILocation(line: 2871, column: 10, scope: !7990)
!7997 = !DILocation(line: 2871, column: 22, scope: !7990)
!7998 = !DILocation(line: 2874, column: 10, scope: !7990)
!7999 = !DILocation(line: 2874, column: 17, scope: !7990)
!8000 = !DILocation(line: 2882, column: 3, scope: !7990)
!8001 = !DILocation(line: 2884, column: 1, scope: !7990)
!8002 = distinct !DISubprogram(name: "HAL_UART_AbortTransmitCpltCallback", scope: !1186, file: !1186, line: 2256, type: !6854, scopeLine: 2257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !8003)
!8003 = !{!8004}
!8004 = !DILocalVariable(name: "huart", arg: 1, scope: !8002, file: !1186, line: 2256, type: !1211)
!8005 = !DILocation(line: 0, scope: !8002)
!8006 = !DILocation(line: 2264, column: 1, scope: !8002)
!8007 = distinct !DISubprogram(name: "HAL_UART_AbortReceive_IT", scope: !1186, file: !1186, line: 1951, type: !6816, scopeLine: 1952, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !8008)
!8008 = !{!8009}
!8009 = !DILocalVariable(name: "huart", arg: 1, scope: !8007, file: !1186, line: 1951, type: !1211)
!8010 = !DILocation(line: 0, scope: !8007)
!8011 = !DILocation(line: 1954, column: 3, scope: !8007)
!8012 = !DILocation(line: 1955, column: 3, scope: !8007)
!8013 = !DILocation(line: 1958, column: 7, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8007, file: !1186, line: 1958, column: 7)
!8015 = !DILocation(line: 1958, column: 7, scope: !8007)
!8016 = !DILocation(line: 1960, column: 5, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !8014, file: !1186, line: 1959, column: 3)
!8018 = !DILocation(line: 1963, column: 16, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8017, file: !1186, line: 1963, column: 9)
!8020 = !DILocation(line: 1963, column: 23, scope: !8019)
!8021 = !DILocation(line: 1963, column: 9, scope: !8017)
!8022 = !DILocation(line: 1967, column: 22, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !8019, file: !1186, line: 1964, column: 5)
!8024 = !DILocation(line: 1967, column: 40, scope: !8023)
!8025 = !DILocation(line: 1970, column: 11, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8023, file: !1186, line: 1970, column: 11)
!8027 = !DILocation(line: 1970, column: 43, scope: !8026)
!8028 = !DILocation(line: 1970, column: 11, scope: !8023)
!8029 = !DILocation(line: 1973, column: 16, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8026, file: !1186, line: 1971, column: 7)
!8031 = !DILocation(line: 1973, column: 24, scope: !8030)
!8032 = !DILocation(line: 1973, column: 9, scope: !8030)
!8033 = !DILocation(line: 1974, column: 7, scope: !8030)
!8034 = !DILocation(line: 1979, column: 14, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8019, file: !1186, line: 1977, column: 5)
!8036 = !DILocation(line: 1979, column: 26, scope: !8035)
!8037 = !DILocation(line: 1982, column: 14, scope: !8035)
!8038 = !DILocation(line: 1982, column: 22, scope: !8035)
!8039 = !DILocation(line: 1990, column: 7, scope: !8035)
!8040 = !DILocation(line: 1997, column: 12, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8014, file: !1186, line: 1995, column: 3)
!8042 = !DILocation(line: 1997, column: 24, scope: !8041)
!8043 = !DILocation(line: 2000, column: 12, scope: !8041)
!8044 = !DILocation(line: 2000, column: 20, scope: !8041)
!8045 = !DILocation(line: 2008, column: 5, scope: !8041)
!8046 = !DILocation(line: 2012, column: 3, scope: !8007)
!8047 = distinct !DISubprogram(name: "UART_DMARxOnlyAbortCallback", scope: !1186, file: !1186, line: 2895, type: !7359, scopeLine: 2896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !8048)
!8048 = !{!8049, !8050}
!8049 = !DILocalVariable(name: "hdma", arg: 1, scope: !8047, file: !1186, line: 2895, type: !1245)
!8050 = !DILocalVariable(name: "huart", scope: !8047, file: !1186, line: 2897, type: !1211)
!8051 = !DILocation(line: 0, scope: !8047)
!8052 = !DILocation(line: 2897, column: 82, scope: !8047)
!8053 = !DILocation(line: 2899, column: 10, scope: !8047)
!8054 = !DILocation(line: 2899, column: 22, scope: !8047)
!8055 = !DILocation(line: 2902, column: 10, scope: !8047)
!8056 = !DILocation(line: 2902, column: 18, scope: !8047)
!8057 = !DILocation(line: 2910, column: 3, scope: !8047)
!8058 = !DILocation(line: 2912, column: 1, scope: !8047)
!8059 = distinct !DISubprogram(name: "HAL_UART_AbortReceiveCpltCallback", scope: !1186, file: !1186, line: 2271, type: !6854, scopeLine: 2272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !8060)
!8060 = !{!8061}
!8061 = !DILocalVariable(name: "huart", arg: 1, scope: !8059, file: !1186, line: 2271, type: !1211)
!8062 = !DILocation(line: 0, scope: !8059)
!8063 = !DILocation(line: 2279, column: 1, scope: !8059)
!8064 = distinct !DISubprogram(name: "HAL_UART_IRQHandler", scope: !1186, file: !1186, line: 2021, type: !6854, scopeLine: 2022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !8065)
!8065 = !{!8066, !8067, !8068, !8069, !8070, !8071}
!8066 = !DILocalVariable(name: "huart", arg: 1, scope: !8064, file: !1186, line: 2021, type: !1211)
!8067 = !DILocalVariable(name: "isrflags", scope: !8064, file: !1186, line: 2023, type: !21)
!8068 = !DILocalVariable(name: "cr1its", scope: !8064, file: !1186, line: 2024, type: !21)
!8069 = !DILocalVariable(name: "cr3its", scope: !8064, file: !1186, line: 2025, type: !21)
!8070 = !DILocalVariable(name: "errorflags", scope: !8064, file: !1186, line: 2026, type: !21)
!8071 = !DILocalVariable(name: "dmarequest", scope: !8064, file: !1186, line: 2027, type: !21)
!8072 = !DILocation(line: 0, scope: !8064)
!8073 = !DILocation(line: 2023, column: 25, scope: !8064)
!8074 = !DILocation(line: 2024, column: 25, scope: !8064)
!8075 = !DILocation(line: 2025, column: 25, scope: !8064)
!8076 = !DILocation(line: 2031, column: 7, scope: !8064)
!8077 = !DILocation(line: 2036, column: 7, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8079, file: !1186, line: 2035, column: 5)
!8079 = distinct !DILexicalBlock(scope: !8080, file: !1186, line: 2034, column: 9)
!8080 = distinct !DILexicalBlock(scope: !8081, file: !1186, line: 2032, column: 3)
!8081 = distinct !DILexicalBlock(scope: !8064, file: !1186, line: 2031, column: 7)
!8082 = !DILocation(line: 2037, column: 7, scope: !8078)
!8083 = !DILocation(line: 2030, column: 26, scope: !8064)
!8084 = !DILocation(line: 2042, column: 19, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8064, file: !1186, line: 2042, column: 7)
!8086 = !DILocation(line: 2042, column: 29, scope: !8085)
!8087 = !DILocation(line: 2042, column: 42, scope: !8085)
!8088 = !DILocation(line: 2042, column: 59, scope: !8085)
!8089 = !DILocation(line: 2042, column: 69, scope: !8085)
!8090 = !DILocation(line: 2045, column: 20, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8092, file: !1186, line: 2045, column: 9)
!8092 = distinct !DILexicalBlock(scope: !8085, file: !1186, line: 2043, column: 3)
!8093 = !DILocation(line: 2045, column: 35, scope: !8091)
!8094 = !DILocation(line: 2045, column: 45, scope: !8091)
!8095 = !DILocation(line: 2047, column: 14, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8091, file: !1186, line: 2046, column: 5)
!8097 = !DILocation(line: 2047, column: 24, scope: !8096)
!8098 = !DILocation(line: 2048, column: 5, scope: !8096)
!8099 = !DILocation(line: 2051, column: 20, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8092, file: !1186, line: 2051, column: 9)
!8101 = !DILocation(line: 2051, column: 35, scope: !8100)
!8102 = !DILocation(line: 2051, column: 45, scope: !8100)
!8103 = !DILocation(line: 2053, column: 14, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8100, file: !1186, line: 2052, column: 5)
!8105 = !DILocation(line: 2053, column: 24, scope: !8104)
!8106 = !DILocation(line: 2054, column: 5, scope: !8104)
!8107 = !DILocation(line: 2057, column: 20, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8092, file: !1186, line: 2057, column: 9)
!8109 = !DILocation(line: 2057, column: 35, scope: !8108)
!8110 = !DILocation(line: 2057, column: 45, scope: !8108)
!8111 = !DILocation(line: 2059, column: 14, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8108, file: !1186, line: 2058, column: 5)
!8113 = !DILocation(line: 2059, column: 24, scope: !8112)
!8114 = !DILocation(line: 2060, column: 5, scope: !8112)
!8115 = !DILocation(line: 2063, column: 20, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8092, file: !1186, line: 2063, column: 9)
!8117 = !DILocation(line: 2063, column: 36, scope: !8116)
!8118 = !DILocation(line: 2063, column: 46, scope: !8116)
!8119 = !DILocation(line: 2065, column: 14, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8116, file: !1186, line: 2064, column: 5)
!8121 = !DILocation(line: 2065, column: 24, scope: !8120)
!8122 = !DILocation(line: 2066, column: 5, scope: !8120)
!8123 = !DILocation(line: 2069, column: 16, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8092, file: !1186, line: 2069, column: 9)
!8125 = !DILocation(line: 2069, column: 26, scope: !8124)
!8126 = !DILocation(line: 2069, column: 9, scope: !8092)
!8127 = !DILocation(line: 2072, column: 49, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8129, file: !1186, line: 2072, column: 11)
!8129 = distinct !DILexicalBlock(scope: !8124, file: !1186, line: 2070, column: 5)
!8130 = !DILocation(line: 2074, column: 9, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8128, file: !1186, line: 2073, column: 7)
!8132 = !DILocation(line: 2075, column: 7, scope: !8131)
!8133 = !DILocation(line: 2079, column: 20, scope: !8129)
!8134 = !DILocation(line: 2080, column: 20, scope: !8135)
!8135 = distinct !DILexicalBlock(scope: !8129, file: !1186, line: 2080, column: 11)
!8136 = !DILocation(line: 2080, column: 30, scope: !8135)
!8137 = !DILocation(line: 2080, column: 52, scope: !8135)
!8138 = !DILocation(line: 2080, column: 62, scope: !8135)
!8139 = !DILocation(line: 2085, column: 9, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8135, file: !1186, line: 2081, column: 7)
!8141 = !DILocation(line: 2088, column: 13, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8140, file: !1186, line: 2088, column: 13)
!8143 = !DILocation(line: 2088, column: 13, scope: !8140)
!8144 = !DILocation(line: 2090, column: 11, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !8142, file: !1186, line: 2089, column: 9)
!8146 = !DILocation(line: 2093, column: 22, scope: !8147)
!8147 = distinct !DILexicalBlock(scope: !8145, file: !1186, line: 2093, column: 15)
!8148 = !DILocation(line: 2093, column: 29, scope: !8147)
!8149 = !DILocation(line: 2093, column: 15, scope: !8145)
!8150 = !DILocation(line: 2097, column: 28, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8147, file: !1186, line: 2094, column: 11)
!8152 = !DILocation(line: 2097, column: 46, scope: !8151)
!8153 = !DILocation(line: 2098, column: 17, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8151, file: !1186, line: 2098, column: 17)
!8155 = !DILocation(line: 2098, column: 49, scope: !8154)
!8156 = !DILocation(line: 2098, column: 17, scope: !8151)
!8157 = !DILocation(line: 2101, column: 22, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8154, file: !1186, line: 2099, column: 13)
!8159 = !DILocation(line: 2101, column: 30, scope: !8158)
!8160 = !DILocation(line: 2101, column: 15, scope: !8158)
!8161 = !DILocation(line: 2102, column: 13, scope: !8158)
!8162 = !DILocation(line: 2112, column: 13, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8147, file: !1186, line: 2105, column: 11)
!8164 = !DILocation(line: 2124, column: 11, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8142, file: !1186, line: 2117, column: 9)
!8166 = !DILocation(line: 2137, column: 9, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8135, file: !1186, line: 2129, column: 7)
!8168 = !DILocation(line: 2140, column: 26, scope: !8167)
!8169 = !DILocation(line: 2147, column: 18, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8064, file: !1186, line: 2147, column: 7)
!8171 = !DILocation(line: 2147, column: 34, scope: !8170)
!8172 = !DILocation(line: 2147, column: 44, scope: !8170)
!8173 = !DILocation(line: 2149, column: 5, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8170, file: !1186, line: 2148, column: 3)
!8175 = !DILocation(line: 2150, column: 5, scope: !8174)
!8176 = !DILocation(line: 2154, column: 18, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8064, file: !1186, line: 2154, column: 7)
!8178 = !DILocation(line: 2154, column: 33, scope: !8177)
!8179 = !DILocation(line: 2154, column: 43, scope: !8177)
!8180 = !DILocation(line: 2156, column: 5, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8177, file: !1186, line: 2155, column: 3)
!8182 = !DILocation(line: 2157, column: 5, scope: !8181)
!8183 = !DILocation(line: 2159, column: 1, scope: !8064)
!8184 = distinct !DISubprogram(name: "UART_Receive_IT", scope: !1186, file: !1186, line: 2992, type: !6816, scopeLine: 2993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !8185)
!8185 = !{!8186, !8187}
!8186 = !DILocalVariable(name: "huart", arg: 1, scope: !8184, file: !1186, line: 2992, type: !1211)
!8187 = !DILocalVariable(name: "tmp", scope: !8184, file: !1186, line: 2994, type: !1209)
!8188 = !DILocation(line: 0, scope: !8184)
!8189 = !DILocation(line: 2997, column: 14, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8184, file: !1186, line: 2997, column: 7)
!8191 = !DILocation(line: 2997, column: 22, scope: !8190)
!8192 = !DILocation(line: 2997, column: 7, scope: !8184)
!8193 = !DILocation(line: 2999, column: 21, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8195, file: !1186, line: 2999, column: 9)
!8195 = distinct !DILexicalBlock(scope: !8190, file: !1186, line: 2998, column: 3)
!8196 = !DILocation(line: 2999, column: 32, scope: !8194)
!8197 = !DILocation(line: 2999, column: 9, scope: !8195)
!8198 = !DILocation(line: 3001, column: 33, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8194, file: !1186, line: 3000, column: 5)
!8200 = !DILocation(line: 3002, column: 23, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8199, file: !1186, line: 3002, column: 11)
!8202 = !DILocation(line: 3002, column: 30, scope: !8201)
!8203 = !DILocation(line: 0, scope: !8201)
!8204 = !DILocation(line: 3002, column: 11, scope: !8199)
!8205 = !DILocation(line: 3004, column: 16, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8201, file: !1186, line: 3003, column: 7)
!8207 = !DILocation(line: 3004, column: 14, scope: !8206)
!8208 = !DILocation(line: 3005, column: 27, scope: !8206)
!8209 = !DILocation(line: 3006, column: 7, scope: !8206)
!8210 = !DILocation(line: 3009, column: 16, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8201, file: !1186, line: 3008, column: 7)
!8212 = !DILocation(line: 3009, column: 14, scope: !8211)
!8213 = !DILocation(line: 3010, column: 27, scope: !8211)
!8214 = !DILocation(line: 3015, column: 23, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8216, file: !1186, line: 3015, column: 11)
!8216 = distinct !DILexicalBlock(scope: !8194, file: !1186, line: 3014, column: 5)
!8217 = !DILocation(line: 3015, column: 30, scope: !8215)
!8218 = !DILocation(line: 0, scope: !8215)
!8219 = !DILocation(line: 3015, column: 11, scope: !8216)
!8220 = !DILocation(line: 3017, column: 17, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8215, file: !1186, line: 3016, column: 7)
!8222 = !DILocation(line: 3017, column: 27, scope: !8221)
!8223 = !DILocation(line: 3017, column: 30, scope: !8221)
!8224 = !DILocation(line: 3018, column: 7, scope: !8221)
!8225 = !DILocation(line: 3021, column: 32, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8215, file: !1186, line: 3020, column: 7)
!8227 = !DILocation(line: 3021, column: 17, scope: !8226)
!8228 = !DILocation(line: 3021, column: 27, scope: !8226)
!8229 = !DILocation(line: 3021, column: 30, scope: !8226)
!8230 = !DILocation(line: 3025, column: 18, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8195, file: !1186, line: 3025, column: 9)
!8232 = !DILocation(line: 3025, column: 9, scope: !8231)
!8233 = !DILocation(line: 3025, column: 30, scope: !8231)
!8234 = !DILocation(line: 3025, column: 9, scope: !8195)
!8235 = !DILocation(line: 3028, column: 7, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8231, file: !1186, line: 3026, column: 5)
!8237 = !DILocation(line: 3031, column: 7, scope: !8236)
!8238 = !DILocation(line: 3034, column: 7, scope: !8236)
!8239 = !DILocation(line: 3037, column: 22, scope: !8236)
!8240 = !DILocation(line: 3044, column: 7, scope: !8236)
!8241 = !DILocation(line: 3047, column: 7, scope: !8236)
!8242 = !DILocation(line: 3055, column: 1, scope: !8184)
!8243 = distinct !DISubprogram(name: "UART_DMAAbortOnError", scope: !1186, file: !1186, line: 2753, type: !7359, scopeLine: 2754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !8244)
!8244 = !{!8245, !8246}
!8245 = !DILocalVariable(name: "hdma", arg: 1, scope: !8243, file: !1186, line: 2753, type: !1245)
!8246 = !DILocalVariable(name: "huart", scope: !8243, file: !1186, line: 2755, type: !1211)
!8247 = !DILocation(line: 0, scope: !8243)
!8248 = !DILocation(line: 2755, column: 82, scope: !8243)
!8249 = !DILocation(line: 2756, column: 10, scope: !8243)
!8250 = !DILocation(line: 2756, column: 22, scope: !8243)
!8251 = !DILocation(line: 2757, column: 10, scope: !8243)
!8252 = !DILocation(line: 2757, column: 22, scope: !8243)
!8253 = !DILocation(line: 2764, column: 3, scope: !8243)
!8254 = !DILocation(line: 2766, column: 1, scope: !8243)
!8255 = distinct !DISubprogram(name: "UART_Transmit_IT", scope: !1186, file: !1186, line: 2920, type: !6816, scopeLine: 2921, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !8256)
!8256 = !{!8257, !8258}
!8257 = !DILocalVariable(name: "huart", arg: 1, scope: !8255, file: !1186, line: 2920, type: !1211)
!8258 = !DILocalVariable(name: "tmp", scope: !8255, file: !1186, line: 2922, type: !1209)
!8259 = !DILocation(line: 0, scope: !8255)
!8260 = !DILocation(line: 2925, column: 14, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !8255, file: !1186, line: 2925, column: 7)
!8262 = !DILocation(line: 2925, column: 21, scope: !8261)
!8263 = !DILocation(line: 2925, column: 7, scope: !8255)
!8264 = !DILocation(line: 2927, column: 21, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !8266, file: !1186, line: 2927, column: 9)
!8266 = distinct !DILexicalBlock(scope: !8261, file: !1186, line: 2926, column: 3)
!8267 = !DILocation(line: 2927, column: 32, scope: !8265)
!8268 = !DILocation(line: 0, scope: !8265)
!8269 = !DILocation(line: 2927, column: 9, scope: !8266)
!8270 = !DILocation(line: 2929, column: 33, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8265, file: !1186, line: 2928, column: 5)
!8272 = !DILocation(line: 2930, column: 40, scope: !8271)
!8273 = !DILocation(line: 2930, column: 45, scope: !8271)
!8274 = !DILocation(line: 2930, column: 29, scope: !8271)
!8275 = !DILocation(line: 2930, column: 14, scope: !8271)
!8276 = !DILocation(line: 2930, column: 24, scope: !8271)
!8277 = !DILocation(line: 2930, column: 27, scope: !8271)
!8278 = !DILocation(line: 2931, column: 23, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8271, file: !1186, line: 2931, column: 11)
!8280 = !DILocation(line: 2931, column: 30, scope: !8279)
!8281 = !DILocation(line: 0, scope: !8279)
!8282 = !DILocation(line: 2931, column: 11, scope: !8271)
!8283 = !DILocation(line: 2933, column: 27, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8279, file: !1186, line: 2932, column: 7)
!8285 = !DILocation(line: 2934, column: 7, scope: !8284)
!8286 = !DILocation(line: 2937, column: 27, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8279, file: !1186, line: 2936, column: 7)
!8288 = !DILocation(line: 2942, column: 57, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8265, file: !1186, line: 2941, column: 5)
!8290 = !DILocation(line: 2942, column: 39, scope: !8289)
!8291 = !DILocation(line: 2942, column: 29, scope: !8289)
!8292 = !DILocation(line: 2942, column: 14, scope: !8289)
!8293 = !DILocation(line: 2942, column: 24, scope: !8289)
!8294 = !DILocation(line: 2942, column: 27, scope: !8289)
!8295 = !DILocation(line: 2945, column: 18, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8266, file: !1186, line: 2945, column: 9)
!8297 = !DILocation(line: 2945, column: 9, scope: !8296)
!8298 = !DILocation(line: 2945, column: 30, scope: !8296)
!8299 = !DILocation(line: 2945, column: 9, scope: !8266)
!8300 = !DILocation(line: 2948, column: 7, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8296, file: !1186, line: 2946, column: 5)
!8302 = !DILocation(line: 2951, column: 7, scope: !8301)
!8303 = !DILocation(line: 2952, column: 5, scope: !8301)
!8304 = !DILocation(line: 2959, column: 1, scope: !8255)
!8305 = distinct !DISubprogram(name: "UART_EndTransmit_IT", scope: !1186, file: !1186, line: 2967, type: !6816, scopeLine: 2968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !8306)
!8306 = !{!8307}
!8307 = !DILocalVariable(name: "huart", arg: 1, scope: !8305, file: !1186, line: 2967, type: !1211)
!8308 = !DILocation(line: 0, scope: !8305)
!8309 = !DILocation(line: 2970, column: 3, scope: !8305)
!8310 = !DILocation(line: 2973, column: 10, scope: !8305)
!8311 = !DILocation(line: 2973, column: 17, scope: !8305)
!8312 = !DILocation(line: 2980, column: 3, scope: !8305)
!8313 = !DILocation(line: 2983, column: 3, scope: !8305)
!8314 = distinct !DISubprogram(name: "HAL_LIN_SendBreak", scope: !1186, file: !1186, line: 2310, type: !6816, scopeLine: 2311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !8315)
!8315 = !{!8316}
!8316 = !DILocalVariable(name: "huart", arg: 1, scope: !8314, file: !1186, line: 2310, type: !1211)
!8317 = !DILocation(line: 0, scope: !8314)
!8318 = !DILocation(line: 2316, column: 3, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8320, file: !1186, line: 2316, column: 3)
!8320 = distinct !DILexicalBlock(scope: !8314, file: !1186, line: 2316, column: 3)
!8321 = !DILocation(line: 2316, column: 3, scope: !8320)
!8322 = !DILocation(line: 2316, column: 3, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8319, file: !1186, line: 2316, column: 3)
!8324 = !DILocation(line: 2318, column: 10, scope: !8314)
!8325 = !DILocation(line: 2318, column: 17, scope: !8314)
!8326 = !DILocation(line: 2321, column: 3, scope: !8314)
!8327 = !DILocation(line: 2323, column: 17, scope: !8314)
!8328 = !DILocation(line: 2326, column: 3, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8314, file: !1186, line: 2326, column: 3)
!8330 = !DILocation(line: 2328, column: 3, scope: !8314)
!8331 = !DILocation(line: 2329, column: 1, scope: !8314)
!8332 = distinct !DISubprogram(name: "HAL_MultiProcessor_EnterMuteMode", scope: !1186, file: !1186, line: 2337, type: !6816, scopeLine: 2338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !8333)
!8333 = !{!8334}
!8334 = !DILocalVariable(name: "huart", arg: 1, scope: !8332, file: !1186, line: 2337, type: !1211)
!8335 = !DILocation(line: 0, scope: !8332)
!8336 = !DILocation(line: 2343, column: 3, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8338, file: !1186, line: 2343, column: 3)
!8338 = distinct !DILexicalBlock(scope: !8332, file: !1186, line: 2343, column: 3)
!8339 = !DILocation(line: 2343, column: 3, scope: !8338)
!8340 = !DILocation(line: 2343, column: 3, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8337, file: !1186, line: 2343, column: 3)
!8342 = !DILocation(line: 2345, column: 10, scope: !8332)
!8343 = !DILocation(line: 2345, column: 17, scope: !8332)
!8344 = !DILocation(line: 2348, column: 3, scope: !8332)
!8345 = !DILocation(line: 2350, column: 17, scope: !8332)
!8346 = !DILocation(line: 2353, column: 3, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8332, file: !1186, line: 2353, column: 3)
!8348 = !DILocation(line: 2355, column: 3, scope: !8332)
!8349 = !DILocation(line: 2356, column: 1, scope: !8332)
!8350 = distinct !DISubprogram(name: "HAL_MultiProcessor_ExitMuteMode", scope: !1186, file: !1186, line: 2364, type: !6816, scopeLine: 2365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !8351)
!8351 = !{!8352}
!8352 = !DILocalVariable(name: "huart", arg: 1, scope: !8350, file: !1186, line: 2364, type: !1211)
!8353 = !DILocation(line: 0, scope: !8350)
!8354 = !DILocation(line: 2370, column: 3, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8356, file: !1186, line: 2370, column: 3)
!8356 = distinct !DILexicalBlock(scope: !8350, file: !1186, line: 2370, column: 3)
!8357 = !DILocation(line: 2370, column: 3, scope: !8356)
!8358 = !DILocation(line: 2370, column: 3, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8355, file: !1186, line: 2370, column: 3)
!8360 = !DILocation(line: 2372, column: 10, scope: !8350)
!8361 = !DILocation(line: 2372, column: 17, scope: !8350)
!8362 = !DILocation(line: 2375, column: 3, scope: !8350)
!8363 = !DILocation(line: 2377, column: 17, scope: !8350)
!8364 = !DILocation(line: 2380, column: 3, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8350, file: !1186, line: 2380, column: 3)
!8366 = !DILocation(line: 2382, column: 3, scope: !8350)
!8367 = !DILocation(line: 2383, column: 1, scope: !8350)
!8368 = distinct !DISubprogram(name: "HAL_HalfDuplex_EnableTransmitter", scope: !1186, file: !1186, line: 2391, type: !6816, scopeLine: 2392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !8369)
!8369 = !{!8370, !8371}
!8370 = !DILocalVariable(name: "huart", arg: 1, scope: !8368, file: !1186, line: 2391, type: !1211)
!8371 = !DILocalVariable(name: "tmpreg", scope: !8368, file: !1186, line: 2393, type: !21)
!8372 = !DILocation(line: 0, scope: !8368)
!8373 = !DILocation(line: 2396, column: 3, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8375, file: !1186, line: 2396, column: 3)
!8375 = distinct !DILexicalBlock(scope: !8368, file: !1186, line: 2396, column: 3)
!8376 = !DILocation(line: 2396, column: 3, scope: !8375)
!8377 = !DILocation(line: 2396, column: 3, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8374, file: !1186, line: 2396, column: 3)
!8379 = !DILocation(line: 2398, column: 10, scope: !8368)
!8380 = !DILocation(line: 2398, column: 17, scope: !8368)
!8381 = !DILocation(line: 2401, column: 19, scope: !8368)
!8382 = !DILocation(line: 2401, column: 29, scope: !8368)
!8383 = !DILocation(line: 2404, column: 10, scope: !8368)
!8384 = !DILocation(line: 2407, column: 10, scope: !8368)
!8385 = !DILocation(line: 2410, column: 3, scope: !8368)
!8386 = !DILocation(line: 2412, column: 17, scope: !8368)
!8387 = !DILocation(line: 2415, column: 3, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8368, file: !1186, line: 2415, column: 3)
!8389 = !DILocation(line: 2417, column: 3, scope: !8368)
!8390 = !DILocation(line: 2418, column: 1, scope: !8368)
!8391 = distinct !DISubprogram(name: "HAL_HalfDuplex_EnableReceiver", scope: !1186, file: !1186, line: 2426, type: !6816, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !8392)
!8392 = !{!8393, !8394}
!8393 = !DILocalVariable(name: "huart", arg: 1, scope: !8391, file: !1186, line: 2426, type: !1211)
!8394 = !DILocalVariable(name: "tmpreg", scope: !8391, file: !1186, line: 2428, type: !21)
!8395 = !DILocation(line: 0, scope: !8391)
!8396 = !DILocation(line: 2431, column: 3, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8398, file: !1186, line: 2431, column: 3)
!8398 = distinct !DILexicalBlock(scope: !8391, file: !1186, line: 2431, column: 3)
!8399 = !DILocation(line: 2431, column: 3, scope: !8398)
!8400 = !DILocation(line: 2431, column: 3, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8397, file: !1186, line: 2431, column: 3)
!8402 = !DILocation(line: 2433, column: 10, scope: !8391)
!8403 = !DILocation(line: 2433, column: 17, scope: !8391)
!8404 = !DILocation(line: 2436, column: 19, scope: !8391)
!8405 = !DILocation(line: 2436, column: 29, scope: !8391)
!8406 = !DILocation(line: 2439, column: 10, scope: !8391)
!8407 = !DILocation(line: 2442, column: 10, scope: !8391)
!8408 = !DILocation(line: 2445, column: 3, scope: !8391)
!8409 = !DILocation(line: 2447, column: 17, scope: !8391)
!8410 = !DILocation(line: 2450, column: 3, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8391, file: !1186, line: 2450, column: 3)
!8412 = !DILocation(line: 2452, column: 3, scope: !8391)
!8413 = !DILocation(line: 2453, column: 1, scope: !8391)
!8414 = distinct !DISubprogram(name: "HAL_UART_GetState", scope: !1186, file: !1186, line: 2483, type: !8415, scopeLine: 2484, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !8417)
!8415 = !DISubroutineType(types: !8416)
!8416 = !{!1210, !1211}
!8417 = !{!8418, !8419, !8420}
!8418 = !DILocalVariable(name: "huart", arg: 1, scope: !8414, file: !1186, line: 2483, type: !1211)
!8419 = !DILocalVariable(name: "temp1", scope: !8414, file: !1186, line: 2485, type: !21)
!8420 = !DILocalVariable(name: "temp2", scope: !8414, file: !1186, line: 2485, type: !21)
!8421 = !DILocation(line: 0, scope: !8414)
!8422 = !DILocation(line: 2486, column: 18, scope: !8414)
!8423 = !DILocation(line: 2487, column: 18, scope: !8414)
!8424 = !DILocation(line: 2489, column: 40, scope: !8414)
!8425 = !DILocation(line: 2489, column: 3, scope: !8414)
!8426 = distinct !DISubprogram(name: "HAL_UART_GetError", scope: !1186, file: !1186, line: 2498, type: !8427, scopeLine: 2499, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !8429)
!8427 = !DISubroutineType(types: !8428)
!8428 = !{!21, !1211}
!8429 = !{!8430}
!8430 = !DILocalVariable(name: "huart", arg: 1, scope: !8426, file: !1186, line: 2498, type: !1211)
!8431 = !DILocation(line: 0, scope: !8426)
!8432 = !DILocation(line: 2500, column: 17, scope: !8426)
!8433 = !DILocation(line: 2500, column: 3, scope: !8426)
