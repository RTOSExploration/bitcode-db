; ModuleID = './examples/ipcommdevice_freertos.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%struct.xSTATIC_TCB = type { i8*, [2 x %struct.xSTATIC_LIST_ITEM], i32, i8*, [16 x i8], i32, i8 }
%struct.xSTATIC_LIST_ITEM = type { i32, [4 x i8*] }
%"class.Cicada::Stm32Uart" = type { %"class.Cicada::BufferedSerial", i8, %struct.__UART_HandleTypeDef, %struct.USART_TypeDef*, i16, i16, i32 }
%"class.Cicada::BufferedSerial" = type { %"class.Cicada::IBufferedSerial", %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer" }
%"class.Cicada::IBufferedSerial" = type { %"class.Cicada::ICommDevice", %"class.Cicada::ICommDevice" }
%"class.Cicada::ICommDevice" = type { i32 (...)** }
%"class.Cicada::LineCircularBuffer" = type { %"class.Cicada::CircularBuffer.base", i16, [2 x i8] }
%"class.Cicada::CircularBuffer.base" = type <{ i32 (...)**, [4 x i8], i64, i64, i64, i64, i8* }>
%struct.__UART_HandleTypeDef = type { %struct.USART_TypeDef*, %struct.USART_TypeDef, i8*, i16, i16, i8*, i16, i16, %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef*, i32, i32, i32, i32 }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.__DMA_HandleTypeDef = type { %struct.DMA_Channel_TypeDef*, %struct.USART_TypeDef, i32, i32, i8*, void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)*, i32, %struct.DMA_TypeDef*, i32 }
%struct.DMA_Channel_TypeDef = type { i32, i32, i32, i32 }
%struct.DMA_TypeDef = type { i32, i32 }
%struct.tskTaskControlBlock = type { i32*, %struct.xLIST_ITEM, %struct.xLIST_ITEM, i32, i32*, [16 x i8], i32, i8 }
%struct.xLIST_ITEM = type { i32, %struct.xLIST_ITEM*, %struct.xLIST_ITEM*, i8*, i8* }
%struct.xLIST = type { i32, %struct.xLIST_ITEM*, %struct.xMINI_LIST_ITEM }
%struct.xMINI_LIST_ITEM = type { i32, %struct.xLIST_ITEM*, %struct.xLIST_ITEM* }
%"class.Cicada::Sim7x00CommDevice" = type <{ %"class.Cicada::SimCommDevice", i8*, [4 x i8] }>
%"class.Cicada::SimCommDevice" = type { %"class.Cicada::ATCommDevice", i8*, [16 x i8], [24 x i8], i8, i16 }
%"class.Cicada::ATCommDevice" = type { %"class.Cicada::IPCommDevice.base", %"class.Cicada::IBufferedSerial"*, [61 x i8], i8, i8, i8, i64, i64, i64 }
%"class.Cicada::IPCommDevice.base" = type { %"class.Cicada::IIPCommDevice", %"class.Cicada::Task", %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0", i32, i8*, i16, i8, i32, i8* }
%"class.Cicada::IIPCommDevice" = type { %"class.Cicada::IStatefulDevice" }
%"class.Cicada::IStatefulDevice" = type { %"class.Cicada::ICommDevice" }
%"class.Cicada::Task" = type { i32 (...)**, i16, i32, i8, i32 }
%"class.Cicada::CircularBuffer.0" = type <{ i32 (...)**, [4 x i8], i64, i64, i64, i64, i8*, [4 x i8] }>
%"class.Cicada::IPCommDevice" = type { %"class.Cicada::IIPCommDevice", %"class.Cicada::Task", %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0", i32, i8*, i16, i8, i32, i8*, [4 x i8] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.__va_list = type { i8* }
%struct.out_fct_wrap_type = type { void (i8, i8*)*, i8* }
%struct.xMEMORY_REGION = type { i8*, i32, i32 }

$_ZNK6Cicada4Task5delayEv = comdat any

$_ZN6Cicada12IPCommDeviceD2Ev = comdat any

$_ZN6Cicada12IPCommDeviceD0Ev = comdat any

$_ZThn4_N6Cicada12IPCommDeviceD1Ev = comdat any

$_ZThn4_N6Cicada12IPCommDeviceD0Ev = comdat any

$_ZN6Cicada14CircularBufferIhE4pushEPKhy = comdat any

$_ZN6Cicada14CircularBufferIhE20incrementOrResetHeadERy = comdat any

$_ZN6Cicada14CircularBufferIhE4pullEPhy = comdat any

$_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv = comdat any

$_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv = comdat any

$_ZN6Cicada14CircularBufferIhED2Ev = comdat any

$_ZN6Cicada4TaskD2Ev = comdat any

$_ZN6Cicada11ICommDeviceD2Ev = comdat any

$_ZN6Cicada13IIPCommDeviceC2Ev = comdat any

$_ZN6Cicada4TaskC2Et = comdat any

$_ZN6Cicada14CircularBufferIhEC2EPhy = comdat any

$_ZN6Cicada14CircularBufferIhED0Ev = comdat any

$_ZN6Cicada14CircularBufferIhE4pushEh = comdat any

$_ZN6Cicada14CircularBufferIhE4pullEv = comdat any

$_ZN6Cicada14CircularBufferIhE4readEv = comdat any

$_ZN6Cicada14CircularBufferIhE5flushEv = comdat any

$_ZNK6Cicada14CircularBufferIhE7isEmptyEv = comdat any

$_ZNK6Cicada14CircularBufferIhE6isFullEv = comdat any

$_ZNK6Cicada14CircularBufferIhE4sizeEv = comdat any

$_ZN6Cicada4TaskD0Ev = comdat any

$_ZN6Cicada15IStatefulDeviceC2Ev = comdat any

$_ZN6Cicada13IIPCommDeviceD0Ev = comdat any

$_ZN6Cicada11ICommDeviceC2Ev = comdat any

$_ZN6Cicada15IStatefulDeviceD0Ev = comdat any

$_ZN6Cicada11ICommDeviceD0Ev = comdat any

$_ZN6Cicada13SimCommDeviceD0Ev = comdat any

$_ZThn4_N6Cicada13SimCommDeviceD1Ev = comdat any

$_ZThn4_N6Cicada13SimCommDeviceD0Ev = comdat any

$_ZN6Cicada17Sim7x00CommDeviceD0Ev = comdat any

$_ZThn4_N6Cicada17Sim7x00CommDeviceD1Ev = comdat any

$_ZThn4_N6Cicada17Sim7x00CommDeviceD0Ev = comdat any

$_ZN6Cicada4Task8setDelayEt = comdat any

$_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv = comdat any

$_ZN6Cicada14BufferedSerialD2Ev = comdat any

$_ZN6Cicada14CircularBufferIcED2Ev = comdat any

$_ZN6Cicada15IBufferedSerialD2Ev = comdat any

$_ZN6Cicada7ISerialD2Ev = comdat any

$_ZN6Cicada12ATCommDeviceD0Ev = comdat any

$_ZThn4_N6Cicada12ATCommDeviceD1Ev = comdat any

$_ZThn4_N6Cicada12ATCommDeviceD0Ev = comdat any

$_ZN6Cicada14BufferedSerialD0Ev = comdat any

$_ZThn4_N6Cicada14BufferedSerialD1Ev = comdat any

$_ZThn4_N6Cicada14BufferedSerialD0Ev = comdat any

$_ZNK6Cicada14CircularBufferIcE4sizeEv = comdat any

$_ZN6Cicada18LineCircularBuffer5flushEv = comdat any

$_ZN6Cicada14CircularBufferIcE5flushEv = comdat any

$_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv = comdat any

$_ZN6Cicada18LineCircularBuffer4pushEc = comdat any

$_ZN6Cicada14CircularBufferIcE4pushEc = comdat any

$_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy = comdat any

$_ZN6Cicada18LineCircularBuffer4pullEv = comdat any

$_ZN6Cicada14CircularBufferIcE4pullEv = comdat any

$_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv = comdat any

$_ZN6Cicada15IBufferedSerialC2Ev = comdat any

$_ZN6Cicada18LineCircularBufferC2EPcy = comdat any

$_ZN6Cicada14CircularBufferIcEC2EPcy = comdat any

$_ZN6Cicada18LineCircularBufferD0Ev = comdat any

$_ZN6Cicada18LineCircularBuffer4pushEPKcy = comdat any

$_ZN6Cicada18LineCircularBuffer4pullEPcy = comdat any

$_ZN6Cicada14CircularBufferIcE4readEv = comdat any

$_ZNK6Cicada14CircularBufferIcE7isEmptyEv = comdat any

$_ZNK6Cicada14CircularBufferIcE6isFullEv = comdat any

$_ZN6Cicada14CircularBufferIcED0Ev = comdat any

$_ZN6Cicada14CircularBufferIcE4pushEPKcy = comdat any

$_ZN6Cicada14CircularBufferIcE4pullEPcy = comdat any

$_ZN6Cicada7ISerialC2Ev = comdat any

$_ZN6Cicada15IBufferedSerialD0Ev = comdat any

$_ZThn4_N6Cicada15IBufferedSerialD1Ev = comdat any

$_ZThn4_N6Cicada15IBufferedSerialD0Ev = comdat any

$_ZN6Cicada7ISerialD0Ev = comdat any

$_ZTSN6Cicada13IIPCommDeviceE = comdat any

$_ZTSN6Cicada15IStatefulDeviceE = comdat any

$_ZTIN6Cicada15IStatefulDeviceE = comdat any

$_ZTIN6Cicada13IIPCommDeviceE = comdat any

$_ZTSN6Cicada4TaskE = comdat any

$_ZTIN6Cicada4TaskE = comdat any

$_ZTVN6Cicada13IIPCommDeviceE = comdat any

$_ZTVN6Cicada15IStatefulDeviceE = comdat any

$_ZTVN6Cicada4TaskE = comdat any

$_ZTVN6Cicada14CircularBufferIhEE = comdat any

$_ZTSN6Cicada14CircularBufferIhEE = comdat any

$_ZTIN6Cicada14CircularBufferIhEE = comdat any

$_ZTSN6Cicada15IBufferedSerialE = comdat any

$_ZTSN6Cicada11ICommDeviceE = comdat any

$_ZTIN6Cicada11ICommDeviceE = comdat any

$_ZTSN6Cicada7ISerialE = comdat any

$_ZTIN6Cicada7ISerialE = comdat any

$_ZTIN6Cicada15IBufferedSerialE = comdat any

$_ZTVN6Cicada15IBufferedSerialE = comdat any

$_ZTVN6Cicada11ICommDeviceE = comdat any

$_ZTVN6Cicada7ISerialE = comdat any

$_ZTVN6Cicada18LineCircularBufferE = comdat any

$_ZTSN6Cicada18LineCircularBufferE = comdat any

$_ZTSN6Cicada14CircularBufferIcEE = comdat any

$_ZTIN6Cicada14CircularBufferIcEE = comdat any

$_ZTIN6Cicada18LineCircularBufferE = comdat any

$_ZTVN6Cicada14CircularBufferIcEE = comdat any

@xStackTask = dso_local global [3072 x i32] zeroinitializer, align 4, !dbg !0
@xStackComm = dso_local global [256 x i32] zeroinitializer, align 4, !dbg !91
@xTaskBuffer = dso_local global %struct.xSTATIC_TCB zeroinitializer, align 4, !dbg !97
@xCommBuffer = dso_local global %struct.xSTATIC_TCB zeroinitializer, align 4, !dbg !126
@.str = private unnamed_addr constant [8 x i8] c"runTask\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"Connecting ...\0D\0A\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"internet\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"wttr.in\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"*** Connected! ***\0D\0A\00", align 1
@__const._Z10ipCommTaskPv.str = private unnamed_addr constant [71 x i8] c"GET / HTTP/1.1\0D\0AHost: wttr.in\0D\0AUser-Agent: curl\0D\0AConnection: close\0D\0A\0D\0A\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"*** Disconnected ***\0D\0A\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"ipCommTask\00", align 1
@_ZZ29vApplicationGetIdleTaskMemoryE12xIdleTaskTCB = internal global %struct.xSTATIC_TCB zeroinitializer, align 4, !dbg !128
@_ZZ29vApplicationGetIdleTaskMemoryE15uxIdleTaskStack = internal global [128 x i32] zeroinitializer, align 4, !dbg !142
@_ZZ17USART1_IRQHandlerE8instance = internal unnamed_addr global %"class.Cicada::Stm32Uart"* null, align 4, !dbg !147
@_ZGVZ17USART1_IRQHandlerE8instance = internal global i32 0, align 4
@_ZZ17USART2_IRQHandlerE8instance = internal unnamed_addr global %"class.Cicada::Stm32Uart"* null, align 4, !dbg !156
@_ZGVZ17USART2_IRQHandlerE8instance = internal global i32 0, align 4
@_ZZ8_putcharE6serial = internal unnamed_addr global %"class.Cicada::Stm32Uart"* null, align 4, !dbg !159
@_ftoa.pow10 = internal unnamed_addr constant [10 x double] [double 1.000000e+00, double 1.000000e+01, double 1.000000e+02, double 1.000000e+03, double 1.000000e+04, double 1.000000e+05, double 1.000000e+06, double 1.000000e+07, double 1.000000e+08, double 1.000000e+09], align 8, !dbg !249
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !311
@__const.HAL_RCC_GetSysClockFreq.aPLLMULFactorTable = private unnamed_addr constant [16 x i8] c"\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\10", align 1
@__const.HAL_RCC_GetSysClockFreq.aPredivFactorTable = private unnamed_addr constant [2 x i8] c"\01\02", align 1
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !376
@uwTickPrio = dso_local local_unnamed_addr global i32 16, align 4, !dbg !383
@uwTickFreq = dso_local local_unnamed_addr global i32 1, align 4, !dbg !498
@uwTick = dso_local global i32 0, align 4, !dbg !501
@ucMaxSysCallPriority = internal unnamed_addr global i8 0, align 1, !dbg !503
@ulMaxPRIGROUPValue = internal unnamed_addr global i32 0, align 4, !dbg !517
@uxCriticalNesting = internal unnamed_addr global i32 -1431655766, align 4, !dbg !519
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !374
@pxCurrentTCB = dso_local global %struct.tskTaskControlBlock* null, align 4, !dbg !521
@uxSchedulerSuspended = internal global i32 0, align 4, !dbg !583
@.str.27 = private unnamed_addr constant [5 x i8] c"IDLE\00", align 1
@xIdleTaskHandle = internal unnamed_addr global i8* null, align 4, !dbg !585
@xNextTaskUnblockTime = internal global i32 0, align 4, !dbg !587
@xSchedulerRunning = internal global i32 0, align 4, !dbg !590
@xTickCount = internal global i32 0, align 4, !dbg !593
@uxCurrentNumberOfTasks = internal global i32 0, align 4, !dbg !595
@xPendingReadyList = internal global %struct.xLIST zeroinitializer, align 4, !dbg !597
@uxTopReadyPriority = internal global i32 0, align 4, !dbg !599
@pxReadyTasksLists = internal global [7 x %struct.xLIST] zeroinitializer, align 4, !dbg !601
@xYieldPending = internal global i32 0, align 4, !dbg !606
@uxPendedTicks = internal global i32 0, align 4, !dbg !608
@pxDelayedTaskList = internal global %struct.xLIST* null, align 4, !dbg !610
@pxOverflowDelayedTaskList = internal global %struct.xLIST* null, align 4, !dbg !614
@xNumOfOverflows = internal global i32 0, align 4, !dbg !616
@uxTaskNumber = internal unnamed_addr global i32 0, align 4, !dbg !581
@xDelayedTaskList1 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !563
@xDelayedTaskList2 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !579
@_ZTVN6Cicada12IPCommDeviceE = dso_local unnamed_addr constant { [15 x i8*], [5 x i8*] } { [15 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada12IPCommDeviceE to i8*), i8* bitcast (%"class.Cicada::IPCommDevice"* (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDeviceD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14spaceAvailableEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice20writeBufferProcessedEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice5writeEPKhy to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice7connectEv to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice10disconnectEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice11isConnectedEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice6isIdleEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)* @_ZN6Cicada12IPCommDevice11setHostPortEPKctNS_13IIPCommDevice14ConnectionTypeE to i8*)], [5 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada12IPCommDeviceE to i8*), i8* bitcast (%"class.Cicada::IPCommDevice"* (%"class.Cicada::IPCommDevice"*)* @_ZThn4_N6Cicada12IPCommDeviceD1Ev to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*)* @_ZThn4_N6Cicada12IPCommDeviceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 4
@_ZTSN6Cicada12IPCommDeviceE = dso_local constant [24 x i8] c"N6Cicada12IPCommDeviceE\00", align 1
@_ZTSN6Cicada13IIPCommDeviceE = linkonce_odr dso_local constant [25 x i8] c"N6Cicada13IIPCommDeviceE\00", comdat, align 1
@_ZTSN6Cicada15IStatefulDeviceE = linkonce_odr dso_local constant [27 x i8] c"N6Cicada15IStatefulDeviceE\00", comdat, align 1
@_ZTIN6Cicada15IStatefulDeviceE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @_ZTSN6Cicada15IStatefulDeviceE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada11ICommDeviceE to i8*) }, comdat, align 4
@_ZTIN6Cicada13IIPCommDeviceE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZTSN6Cicada13IIPCommDeviceE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada15IStatefulDeviceE to i8*) }, comdat, align 4
@_ZTSN6Cicada4TaskE = linkonce_odr dso_local constant [15 x i8] c"N6Cicada4TaskE\00", comdat, align 1
@_ZTIN6Cicada4TaskE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZTSN6Cicada4TaskE, i32 0, i32 0) }, comdat, align 4
@_ZTVN6Cicada13IIPCommDeviceE = linkonce_odr dso_local unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada13IIPCommDeviceE to i8*), i8* bitcast (%"class.Cicada::ICommDevice"* (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada11ICommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::IIPCommDevice"*)* @_ZN6Cicada13IIPCommDeviceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada15IStatefulDeviceE = linkonce_odr dso_local unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada15IStatefulDeviceE to i8*), i8* bitcast (%"class.Cicada::ICommDevice"* (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada11ICommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::IStatefulDevice"*)* @_ZN6Cicada15IStatefulDeviceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada4TaskE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada4TaskE to i8*), i8* bitcast (%"class.Cicada::Task"* (%"class.Cicada::Task"*)* @_ZN6Cicada4TaskD2Ev to i8*), i8* bitcast (void (%"class.Cicada::Task"*)* @_ZN6Cicada4TaskD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada14CircularBufferIhEE = linkonce_odr dso_local unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada14CircularBufferIhEE to i8*), i8* bitcast (%"class.Cicada::CircularBuffer.0"* (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIhED2Ev to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIhED0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*, i8*, i64)* @_ZN6Cicada14CircularBufferIhE4pushEPKhy to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer.0"*, i8)* @_ZN6Cicada14CircularBufferIhE4pushEh to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*, i8*, i64)* @_ZN6Cicada14CircularBufferIhE4pullEPhy to i8*), i8* bitcast (i8 (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIhE4pullEv to i8*), i8* bitcast (i8 (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIhE4readEv to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIhE5flushEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIhE7isEmptyEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIhE6isFullEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIhE4sizeEv to i8*)] }, comdat, align 4
@_ZTSN6Cicada14CircularBufferIhEE = linkonce_odr dso_local constant [29 x i8] c"N6Cicada14CircularBufferIhEE\00", comdat, align 1
@_ZTIN6Cicada14CircularBufferIhEE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN6Cicada14CircularBufferIhEE, i32 0, i32 0) }, comdat, align 4
@_ZTVN6Cicada13SimCommDeviceE = dso_local unnamed_addr constant { [20 x i8*], [5 x i8*] } { [20 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada13SimCommDeviceE to i8*), i8* bitcast (%"class.Cicada::IPCommDevice"* (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDeviceD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14spaceAvailableEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice20writeBufferProcessedEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice5writeEPKhy to i8*), i8* bitcast (i1 (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice7connectEv to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice10disconnectEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice11isConnectedEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice6isIdleEv to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice11resetStatesEv to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)* @_ZN6Cicada12IPCommDevice11setHostPortEPKctNS_13IIPCommDevice14ConnectionTypeE to i8*), i8* bitcast (i64 (%"class.Cicada::ATCommDevice"*, i8*)* @_ZN6Cicada12ATCommDevice11serialWriteEPc to i8*), i8* bitcast (i64 (%"class.Cicada::ATCommDevice"*, i8*, i64)* @_ZN6Cicada12ATCommDevice10serialReadEPcy to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*, i8*)* @_ZN6Cicada13SimCommDevice6setApnEPKc to i8*), i8* bitcast (i1 (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice10serialLockEv to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice12serialUnlockEv to i8*)], [5 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada13SimCommDeviceE to i8*), i8* bitcast (%"class.Cicada::SimCommDevice"* (%"class.Cicada::SimCommDevice"*)* @_ZThn4_N6Cicada13SimCommDeviceD1Ev to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*)* @_ZThn4_N6Cicada13SimCommDeviceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 4
@.str.66 = private unnamed_addr constant [12 x i8] c"+CDNSGIP: 1\00", align 1
@.str.1.67 = private unnamed_addr constant [12 x i8] c"+CDNSGIP: 0\00", align 1
@.str.2.68 = private unnamed_addr constant [16 x i8] c"+CIPRXGET: 4,0,\00", align 1
@.str.3.69 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.4.70 = private unnamed_addr constant [16 x i8] c"+CIPRXGET: 2,0,\00", align 1
@.str.5.71 = private unnamed_addr constant [7 x i8] c"+CSQ: \00", align 1
@.str.6.72 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"AT\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"+ICCID: \00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"AT+CDNSGIP=\22\00", align 1
@__const._ZN6Cicada13SimCommDevice13sendCiprxget2Ev.str = private unnamed_addr constant [17 x i8] c"AT+CIPRXGET=2,0,\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"+CIPRXGET: 1,0\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"AT+CGMI\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"AT+CGMM\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"AT+CGSN\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"AT+CIMI\00", align 1
@_ZTSN6Cicada13SimCommDeviceE = dso_local constant [25 x i8] c"N6Cicada13SimCommDeviceE\00", align 1
@_ZTVN6Cicada17Sim7x00CommDeviceE = dso_local unnamed_addr constant { [21 x i8*], [5 x i8*] } { [21 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada17Sim7x00CommDeviceE to i8*), i8* bitcast (%"class.Cicada::IPCommDevice"* (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::Sim7x00CommDevice"*)* @_ZN6Cicada17Sim7x00CommDeviceD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14spaceAvailableEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice20writeBufferProcessedEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice5writeEPKhy to i8*), i8* bitcast (i1 (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice7connectEv to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice10disconnectEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice11isConnectedEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice6isIdleEv to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice11resetStatesEv to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)* @_ZN6Cicada12IPCommDevice11setHostPortEPKctNS_13IIPCommDevice14ConnectionTypeE to i8*), i8* bitcast (i64 (%"class.Cicada::ATCommDevice"*, i8*)* @_ZN6Cicada12ATCommDevice11serialWriteEPc to i8*), i8* bitcast (i64 (%"class.Cicada::ATCommDevice"*, i8*, i64)* @_ZN6Cicada12ATCommDevice10serialReadEPcy to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*, i8*)* @_ZN6Cicada13SimCommDevice6setApnEPKc to i8*), i8* bitcast (i1 (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice10serialLockEv to i8*), i8* bitcast (void (%"class.Cicada::SimCommDevice"*)* @_ZN6Cicada13SimCommDevice12serialUnlockEv to i8*), i8* bitcast (void (%"class.Cicada::Sim7x00CommDevice"*)* @_ZN6Cicada17Sim7x00CommDevice3runEv to i8*)], [5 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada17Sim7x00CommDeviceE to i8*), i8* bitcast (%"class.Cicada::Sim7x00CommDevice"* (%"class.Cicada::Sim7x00CommDevice"*)* @_ZThn4_N6Cicada17Sim7x00CommDeviceD1Ev to i8*), i8* bitcast (void (%"class.Cicada::Sim7x00CommDevice"*)* @_ZThn4_N6Cicada17Sim7x00CommDeviceD0Ev to i8*), i8* bitcast (void (%"class.Cicada::Sim7x00CommDevice"*)* @_ZThn4_N6Cicada17Sim7x00CommDevice3runEv to i8*)] }, align 4
@.str.86 = private unnamed_addr constant [10 x i8] c"AT+CICCID\00", align 1
@__const._ZN6Cicada17Sim7x00CommDevice3runEv.str = private unnamed_addr constant [10 x i8] c"AT+CRESET\00", align 1
@.str.1.73 = private unnamed_addr constant [4 x i8] c"RDY\00", align 1
@.str.2.74 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@.str.3.75 = private unnamed_addr constant [12 x i8] c"+NETOPEN: 1\00", align 1
@.str.4.76 = private unnamed_addr constant [13 x i8] c"+CIPOPEN: 0,\00", align 1
@.str.5.77 = private unnamed_addr constant [13 x i8] c"+IPCLOSE: 0,\00", align 1
@.str.6.78 = private unnamed_addr constant [7 x i8] c"AT+CSQ\00", align 1
@.str.7.79 = private unnamed_addr constant [5 x i8] c"ATE0\00", align 1
@__const._ZN6Cicada17Sim7x00CommDevice3runEv.str.8 = private unnamed_addr constant [23 x i8] c"AT+CGSOCKCONT=1,\22IP\22,\22\00", align 1
@.str.9.80 = private unnamed_addr constant [16 x i8] c"AT+CSOCKSETPN=1\00", align 1
@.str.10.81 = private unnamed_addr constant [13 x i8] c"AT+CIPMODE=0\00", align 1
@.str.11.82 = private unnamed_addr constant [12 x i8] c"+NETOPEN: 0\00", align 1
@.str.12.83 = private unnamed_addr constant [11 x i8] c"AT+NETOPEN\00", align 1
@.str.13.84 = private unnamed_addr constant [14 x i8] c"AT+CIPRXGET=1\00", align 1
@.str.14.85 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"AT+CIPOPEN\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"=0,\22UDP\22,,,\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"=0,\22TCP\22,\22\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"\22,\00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c"+CIPOPEN: 0,0\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c",\22\00", align 1
@.str.21 = private unnamed_addr constant [16 x i8] c"AT+CIPRXGET=4,0\00", align 1
@.str.22 = private unnamed_addr constant [13 x i8] c"+NETCLOSE: 0\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"AT+NETCLOSE\00", align 1
@_ZTSN6Cicada17Sim7x00CommDeviceE = dso_local constant [29 x i8] c"N6Cicada17Sim7x00CommDeviceE\00", align 1
@_ZTIN6Cicada13SimCommDeviceE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZTSN6Cicada13SimCommDeviceE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada12ATCommDeviceE to i8*) }, align 4
@_ZTIN6Cicada17Sim7x00CommDeviceE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN6Cicada17Sim7x00CommDeviceE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada13SimCommDeviceE to i8*) }, align 4
@_ZN6Cicada9Stm32Uart8instanceE = dso_local local_unnamed_addr global [4 x %"class.Cicada::Stm32Uart"*] zeroinitializer, align 4, !dbg !619
@_ZTVN6Cicada9Stm32UartE = dso_local unnamed_addr constant { [26 x i8*], [12 x i8*] } { [26 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada9Stm32UartE to i8*), i8* bitcast (%"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32UartD2Ev to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32UartD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial14spaceAvailableEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZNK6Cicada9Stm32Uart20writeBufferProcessedEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial5writeEPKhy to i8*), i8* bitcast (i8 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial4readEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*)* @_ZN6Cicada14BufferedSerial5writeEPKh to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*, i8)* @_ZN6Cicada14BufferedSerial5writeEh to i8*), i8* bitcast (i1 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial11canReadLineEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial8readLineEPhy to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial14readBufferSizeEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial15writeBufferSizeEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32Uart4openEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8)* @_ZN6Cicada9Stm32Uart4openEh to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32Uart6isOpenEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i32, i8)* @_ZN6Cicada9Stm32Uart15setSerialConfigEjh to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32Uart5closeEv to i8*), i8* bitcast (i8* (%"class.Cicada::Stm32Uart"*)* @_ZNK6Cicada9Stm32Uart8portNameEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8*)* @_ZN6Cicada9Stm32Uart7rawReadERh to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8)* @_ZN6Cicada9Stm32Uart8rawWriteEh to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32Uart13startTransmitEv to i8*)], [12 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada9Stm32UartE to i8*), i8* bitcast (%"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32UartD1Ev to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32UartD0Ev to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32Uart4openEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32Uart6isOpenEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i32, i8)* @_ZThn4_N6Cicada9Stm32Uart15setSerialConfigEjh to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32Uart5closeEv to i8*), i8* bitcast (i8* (%"class.Cicada::Stm32Uart"*)* @_ZThn4_NK6Cicada9Stm32Uart8portNameEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8*)* @_ZThn4_N6Cicada9Stm32Uart7rawReadERh to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8)* @_ZThn4_N6Cicada9Stm32Uart8rawWriteEh to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32Uart13startTransmitEv to i8*)] }, align 4
@_ZTSN6Cicada9Stm32UartE = dso_local constant [20 x i8] c"N6Cicada9Stm32UartE\00", align 1
@_ZTIN6Cicada9Stm32UartE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTSN6Cicada9Stm32UartE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada14BufferedSerialE to i8*) }, align 4
@.str.99 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@_ZN6Cicada12ATCommDevice6_okStrE = dso_local local_unnamed_addr global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0), align 4, !dbg !851
@.str.1.102 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@_ZN6Cicada12ATCommDevice11_lineEndStrE = dso_local local_unnamed_addr global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.102, i32 0, i32 0), align 4, !dbg !975
@.str.2.105 = private unnamed_addr constant [4 x i8] c"\22\0D\0A\00", align 1
@_ZN6Cicada12ATCommDevice12_quoteEndStrE = dso_local local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.105, i32 0, i32 0), align 4, !dbg !977
@_ZTVN6Cicada12ATCommDeviceE = dso_local unnamed_addr constant { [17 x i8*], [5 x i8*] } { [17 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada12ATCommDeviceE to i8*), i8* bitcast (%"class.Cicada::IPCommDevice"* (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::ATCommDevice"*)* @_ZN6Cicada12ATCommDeviceD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice14spaceAvailableEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZNK6Cicada12IPCommDevice20writeBufferProcessedEv to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::IPCommDevice"*, i8*, i64)* @_ZN6Cicada12IPCommDevice5writeEPKhy to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice7connectEv to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice10disconnectEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice11isConnectedEv to i8*), i8* bitcast (i1 (%"class.Cicada::IPCommDevice"*)* @_ZN6Cicada12IPCommDevice6isIdleEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.Cicada::IPCommDevice"*, i8*, i16, i32)* @_ZN6Cicada12IPCommDevice11setHostPortEPKctNS_13IIPCommDevice14ConnectionTypeE to i8*), i8* bitcast (i64 (%"class.Cicada::ATCommDevice"*, i8*)* @_ZN6Cicada12ATCommDevice11serialWriteEPc to i8*), i8* bitcast (i64 (%"class.Cicada::ATCommDevice"*, i8*, i64)* @_ZN6Cicada12ATCommDevice10serialReadEPcy to i8*)], [5 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada12ATCommDeviceE to i8*), i8* bitcast (%"class.Cicada::ATCommDevice"* (%"class.Cicada::ATCommDevice"*)* @_ZThn4_N6Cicada12ATCommDeviceD1Ev to i8*), i8* bitcast (void (%"class.Cicada::ATCommDevice"*)* @_ZThn4_N6Cicada12ATCommDeviceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 4
@.str.3.126 = private unnamed_addr constant [12 x i8] c"AT+CIPSEND=\00", align 1
@.str.4.127 = private unnamed_addr constant [3 x i8] c"0,\00", align 1
@.str.5.128 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.6.129 = private unnamed_addr constant [2 x i8] c">\00", align 1
@_ZTSN6Cicada12ATCommDeviceE = dso_local constant [24 x i8] c"N6Cicada12ATCommDeviceE\00", align 1
@_ZTIN6Cicada12IPCommDeviceE = dso_local constant { i8*, i8*, i32, i32, i8*, i32, i8*, i32 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZTSN6Cicada12IPCommDeviceE, i32 0, i32 0), i32 0, i32 2, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada13IIPCommDeviceE to i8*), i32 2, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada4TaskE to i8*), i32 1026 }, align 4
@_ZTIN6Cicada12ATCommDeviceE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZTSN6Cicada12ATCommDeviceE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada12IPCommDeviceE to i8*) }, align 4
@_ZTVN6Cicada14BufferedSerialE = dso_local unnamed_addr constant { [17 x i8*], [12 x i8*] } { [17 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada14BufferedSerialE to i8*), i8* bitcast (%"class.Cicada::BufferedSerial"* (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerialD2Ev to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerialD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial14spaceAvailableEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial5writeEPKhy to i8*), i8* bitcast (i8 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial4readEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*)* @_ZN6Cicada14BufferedSerial5writeEPKh to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*, i8)* @_ZN6Cicada14BufferedSerial5writeEh to i8*), i8* bitcast (i1 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial11canReadLineEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial8readLineEPhy to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial14readBufferSizeEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial15writeBufferSizeEv to i8*)], [12 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada14BufferedSerialE to i8*), i8* bitcast (%"class.Cicada::BufferedSerial"* (%"class.Cicada::BufferedSerial"*)* @_ZThn4_N6Cicada14BufferedSerialD1Ev to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*)* @_ZThn4_N6Cicada14BufferedSerialD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 4
@_ZTVN10__cxxabiv120__si_class_type_infoE = external dso_local global i8*
@_ZTSN6Cicada14BufferedSerialE = dso_local constant [26 x i8] c"N6Cicada14BufferedSerialE\00", align 1
@_ZTVN10__cxxabiv121__vmi_class_type_infoE = external dso_local global i8*
@_ZTSN6Cicada15IBufferedSerialE = linkonce_odr dso_local constant [27 x i8] c"N6Cicada15IBufferedSerialE\00", comdat, align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external dso_local global i8*
@_ZTSN6Cicada11ICommDeviceE = linkonce_odr dso_local constant [23 x i8] c"N6Cicada11ICommDeviceE\00", comdat, align 1
@_ZTIN6Cicada11ICommDeviceE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @_ZTSN6Cicada11ICommDeviceE, i32 0, i32 0) }, comdat, align 4
@_ZTSN6Cicada7ISerialE = linkonce_odr dso_local constant [18 x i8] c"N6Cicada7ISerialE\00", comdat, align 1
@_ZTIN6Cicada7ISerialE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZTSN6Cicada7ISerialE, i32 0, i32 0) }, comdat, align 4
@_ZTIN6Cicada15IBufferedSerialE = linkonce_odr dso_local constant { i8*, i8*, i32, i32, i8*, i32, i8*, i32 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @_ZTSN6Cicada15IBufferedSerialE, i32 0, i32 0), i32 0, i32 2, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada11ICommDeviceE to i8*), i32 2, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada7ISerialE to i8*), i32 1026 }, comdat, align 4
@_ZTIN6Cicada14BufferedSerialE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @_ZTSN6Cicada14BufferedSerialE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada15IBufferedSerialE to i8*) }, align 4
@_ZTVN6Cicada15IBufferedSerialE = linkonce_odr dso_local unnamed_addr constant { [17 x i8*], [12 x i8*] } { [17 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada15IBufferedSerialE to i8*), i8* bitcast (%"class.Cicada::IBufferedSerial"* (%"class.Cicada::IBufferedSerial"*)* @_ZN6Cicada15IBufferedSerialD2Ev to i8*), i8* bitcast (void (%"class.Cicada::IBufferedSerial"*)* @_ZN6Cicada15IBufferedSerialD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], [12 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada15IBufferedSerialE to i8*), i8* bitcast (%"class.Cicada::IBufferedSerial"* (%"class.Cicada::IBufferedSerial"*)* @_ZThn4_N6Cicada15IBufferedSerialD1Ev to i8*), i8* bitcast (void (%"class.Cicada::IBufferedSerial"*)* @_ZThn4_N6Cicada15IBufferedSerialD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada11ICommDeviceE = linkonce_odr dso_local unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada11ICommDeviceE to i8*), i8* bitcast (%"class.Cicada::ICommDevice"* (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada11ICommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada11ICommDeviceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada7ISerialE = linkonce_odr dso_local unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada7ISerialE to i8*), i8* bitcast (%"class.Cicada::ICommDevice"* (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada7ISerialD2Ev to i8*), i8* bitcast (void (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada7ISerialD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada18LineCircularBufferE = linkonce_odr dso_local unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada18LineCircularBufferE to i8*), i8* bitcast (%"class.Cicada::CircularBuffer.0"* (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIcED2Ev to i8*), i8* bitcast (void (%"class.Cicada::LineCircularBuffer"*)* @_ZN6Cicada18LineCircularBufferD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::LineCircularBuffer"*, i8*, i64)* @_ZN6Cicada18LineCircularBuffer4pushEPKcy to i8*), i8* bitcast (void (%"class.Cicada::LineCircularBuffer"*, i8)* @_ZN6Cicada18LineCircularBuffer4pushEc to i8*), i8* bitcast (i64 (%"class.Cicada::LineCircularBuffer"*, i8*, i64)* @_ZN6Cicada18LineCircularBuffer4pullEPcy to i8*), i8* bitcast (i8 (%"class.Cicada::LineCircularBuffer"*)* @_ZN6Cicada18LineCircularBuffer4pullEv to i8*), i8* bitcast (i8 (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIcE4readEv to i8*), i8* bitcast (void (%"class.Cicada::LineCircularBuffer"*)* @_ZN6Cicada18LineCircularBuffer5flushEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE7isEmptyEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE6isFullEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE4sizeEv to i8*)] }, comdat, align 4
@_ZTSN6Cicada18LineCircularBufferE = linkonce_odr dso_local constant [30 x i8] c"N6Cicada18LineCircularBufferE\00", comdat, align 1
@_ZTSN6Cicada14CircularBufferIcEE = linkonce_odr dso_local constant [29 x i8] c"N6Cicada14CircularBufferIcEE\00", comdat, align 1
@_ZTIN6Cicada14CircularBufferIcEE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN6Cicada14CircularBufferIcEE, i32 0, i32 0) }, comdat, align 4
@_ZTIN6Cicada18LineCircularBufferE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @_ZTSN6Cicada18LineCircularBufferE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada14CircularBufferIcEE to i8*) }, comdat, align 4
@_ZTVN6Cicada14CircularBufferIcEE = linkonce_odr dso_local unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada14CircularBufferIcEE to i8*), i8* bitcast (%"class.Cicada::CircularBuffer.0"* (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIcED2Ev to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIcED0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*, i8*, i64)* @_ZN6Cicada14CircularBufferIcE4pushEPKcy to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer.0"*, i8)* @_ZN6Cicada14CircularBufferIcE4pushEc to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*, i8*, i64)* @_ZN6Cicada14CircularBufferIcE4pullEPcy to i8*), i8* bitcast (i8 (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIcE4pullEv to i8*), i8* bitcast (i8 (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIcE4readEv to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer.0"*)* @_ZN6Cicada14CircularBufferIcE5flushEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE7isEmptyEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE6isFullEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer.0"*)* @_ZNK6Cicada14CircularBufferIcE4sizeEv to i8*)] }, comdat, align 4

@_ZN6Cicada17Sim7x00CommDeviceC1ERNS_15IBufferedSerialEPhS3_y = dso_local unnamed_addr alias %"class.Cicada::Sim7x00CommDevice"* (%"class.Cicada::Sim7x00CommDevice"*, %"class.Cicada::IBufferedSerial"*, i8*, i8*, i64), %"class.Cicada::Sim7x00CommDevice"* (%"class.Cicada::Sim7x00CommDevice"*, %"class.Cicada::IBufferedSerial"*, i8*, i8*, i64)* @_ZN6Cicada17Sim7x00CommDeviceC2ERNS_15IBufferedSerialEPhS3_y
@_ZN6Cicada17Sim7x00CommDeviceC1ERNS_15IBufferedSerialEPhS3_yy = dso_local unnamed_addr alias %"class.Cicada::Sim7x00CommDevice"* (%"class.Cicada::Sim7x00CommDevice"*, %"class.Cicada::IBufferedSerial"*, i8*, i8*, i64, i64), %"class.Cicada::Sim7x00CommDevice"* (%"class.Cicada::Sim7x00CommDevice"*, %"class.Cicada::IBufferedSerial"*, i8*, i8*, i64, i64)* @_ZN6Cicada17Sim7x00CommDeviceC2ERNS_15IBufferedSerialEPhS3_yy
@_ZN6Cicada9Stm32UartC1EPcS1_yyP13USART_TypeDefP12GPIO_TypeDeftt = dso_local unnamed_addr alias %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*, i8*, i8*, i64, i64, %struct.USART_TypeDef*, %struct.USART_TypeDef*, i16, i16), %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*, i8*, i8*, i64, i64, %struct.USART_TypeDef*, %struct.USART_TypeDef*, i16, i16)* @_ZN6Cicada9Stm32UartC2EPcS1_yyP13USART_TypeDefP12GPIO_TypeDeftt
@_ZN6Cicada9Stm32UartC1EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt = dso_local unnamed_addr alias %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*, i8*, i8*, i64, %struct.USART_TypeDef*, %struct.USART_TypeDef*, i16, i16), %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*, i8*, i8*, i64, %struct.USART_TypeDef*, %struct.USART_TypeDef*, i16, i16)* @_ZN6Cicada9Stm32UartC2EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt
@_ZN6Cicada9Stm32UartD1Ev = dso_local unnamed_addr alias %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*), %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32UartD2Ev

; Function Attrs: mustprogress noinline noreturn nounwind
define dso_local void @_Z7runTaskPv(i8* noundef %0) #0 !dbg !2110 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2114, metadata !DIExpression()), !dbg !2116
  %2 = bitcast i8* %0 to %"class.Cicada::Task"*, !dbg !2117
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %2, metadata !2115, metadata !DIExpression()), !dbg !2116
  %3 = bitcast i8* %0 to void (%"class.Cicada::Task"*)***
  br label %4, !dbg !2118

4:                                                ; preds = %4, %1
  %5 = load void (%"class.Cicada::Task"*)**, void (%"class.Cicada::Task"*)*** %3, align 4, !dbg !2119, !tbaa !2121
  %6 = getelementptr inbounds void (%"class.Cicada::Task"*)*, void (%"class.Cicada::Task"*)** %5, i32 2, !dbg !2119
  %7 = load void (%"class.Cicada::Task"*)*, void (%"class.Cicada::Task"*)** %6, align 4, !dbg !2119
  call void %7(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %2) #34, !dbg !2119
  %8 = call noundef zeroext i16 @_ZNK6Cicada4Task5delayEv(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %2), !dbg !2124
  %9 = zext i16 %8 to i32, !dbg !2125
  call void @vTaskDelay(i32 noundef %9) #34, !dbg !2126
  br label %4, !dbg !2118, !llvm.loop !2127
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i16 @_ZNK6Cicada4Task5delayEv(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %0) local_unnamed_addr #2 comdat align 2 !dbg !2131 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !2133, metadata !DIExpression()), !dbg !2135
  %2 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 1, !dbg !2136
  %3 = load i16, i16* %2, align 4, !dbg !2136, !tbaa !2137
  ret i16 %3, !dbg !2143
}

; Function Attrs: mustprogress noinline noreturn nounwind
define dso_local void @_Z10ipCommTaskPv(i8* nocapture readnone %0) #0 !dbg !2144 {
  %2 = alloca [1504 x i8], align 1
  %3 = alloca [1504 x i8], align 1
  %4 = alloca %"class.Cicada::Stm32Uart", align 8
  %5 = alloca [1504 x i8], align 1
  %6 = alloca [1504 x i8], align 1
  %7 = alloca %"class.Cicada::Stm32Uart", align 8
  %8 = alloca [1200 x i8], align 1
  %9 = alloca [1200 x i8], align 1
  %10 = alloca %"class.Cicada::Sim7x00CommDevice", align 8
  %11 = alloca [71 x i8], align 1
  %12 = alloca [41 x i8], align 1
  call void @llvm.dbg.value(metadata i8* undef, metadata !2146, metadata !DIExpression()), !dbg !2182
  call void @llvm.dbg.value(metadata i16 1504, metadata !2147, metadata !DIExpression()), !dbg !2182
  %13 = getelementptr inbounds [1504 x i8], [1504 x i8]* %2, i32 0, i32 0, !dbg !2183
  call void @llvm.lifetime.start.p0i8(i64 1504, i8* nonnull %13) #34, !dbg !2183
  call void @llvm.dbg.declare(metadata [1504 x i8]* %2, metadata !2148, metadata !DIExpression()), !dbg !2184
  %14 = getelementptr inbounds [1504 x i8], [1504 x i8]* %3, i32 0, i32 0, !dbg !2185
  call void @llvm.lifetime.start.p0i8(i64 1504, i8* nonnull %14) #34, !dbg !2185
  call void @llvm.dbg.declare(metadata [1504 x i8]* %3, metadata !2152, metadata !DIExpression()), !dbg !2186
  %15 = bitcast %"class.Cicada::Stm32Uart"* %4 to i8*, !dbg !2187
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %15) #34, !dbg !2187
  call void @llvm.dbg.declare(metadata %"class.Cicada::Stm32Uart"* %4, metadata !2153, metadata !DIExpression()), !dbg !2188
  %16 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartC1EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %4, i8* noundef nonnull %13, i8* noundef nonnull %14, i64 noundef 1504, %struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073809408 to %struct.USART_TypeDef*), i16 noundef zeroext 4, i16 noundef zeroext 8) #34, !dbg !2188
  %17 = call noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %4) #34, !dbg !2189
  %18 = getelementptr inbounds [1504 x i8], [1504 x i8]* %5, i32 0, i32 0, !dbg !2190
  call void @llvm.lifetime.start.p0i8(i64 1504, i8* nonnull %18) #34, !dbg !2190
  call void @llvm.dbg.declare(metadata [1504 x i8]* %5, metadata !2154, metadata !DIExpression()), !dbg !2191
  %19 = getelementptr inbounds [1504 x i8], [1504 x i8]* %6, i32 0, i32 0, !dbg !2192
  call void @llvm.lifetime.start.p0i8(i64 1504, i8* nonnull %19) #34, !dbg !2192
  call void @llvm.dbg.declare(metadata [1504 x i8]* %6, metadata !2155, metadata !DIExpression()), !dbg !2193
  %20 = bitcast %"class.Cicada::Stm32Uart"* %7 to i8*, !dbg !2194
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %20) #34, !dbg !2194
  call void @llvm.dbg.declare(metadata %"class.Cicada::Stm32Uart"* %7, metadata !2156, metadata !DIExpression()), !dbg !2195
  %21 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartC1EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %7, i8* noundef nonnull %18, i8* noundef nonnull %19, i64 noundef 1504, %struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073821696 to %struct.USART_TypeDef*), %struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073809408 to %struct.USART_TypeDef*), i16 noundef zeroext 512, i16 noundef zeroext 1024) #34, !dbg !2195
  call void @llvm.dbg.value(metadata i16 1200, metadata !2157, metadata !DIExpression()), !dbg !2182
  %22 = getelementptr inbounds [1200 x i8], [1200 x i8]* %8, i32 0, i32 0, !dbg !2196
  call void @llvm.lifetime.start.p0i8(i64 1200, i8* nonnull %22) #34, !dbg !2196
  call void @llvm.dbg.declare(metadata [1200 x i8]* %8, metadata !2158, metadata !DIExpression()), !dbg !2197
  %23 = getelementptr inbounds [1200 x i8], [1200 x i8]* %9, i32 0, i32 0, !dbg !2198
  call void @llvm.lifetime.start.p0i8(i64 1200, i8* nonnull %23) #34, !dbg !2198
  call void @llvm.dbg.declare(metadata [1200 x i8]* %9, metadata !2162, metadata !DIExpression()), !dbg !2199
  %24 = bitcast %"class.Cicada::Sim7x00CommDevice"* %10 to i8*, !dbg !2200
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %24) #34, !dbg !2200
  call void @llvm.dbg.declare(metadata %"class.Cicada::Sim7x00CommDevice"* %10, metadata !2163, metadata !DIExpression()), !dbg !2201
  %25 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %7, i32 0, i32 0, i32 0, !dbg !2202
  %26 = call noundef %"class.Cicada::Sim7x00CommDevice"* @_ZN6Cicada17Sim7x00CommDeviceC1ERNS_15IBufferedSerialEPhS3_y(%"class.Cicada::Sim7x00CommDevice"* noundef nonnull align 8 dereferenceable(284) %10, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %25, i8* noundef nonnull %22, i8* noundef nonnull %23, i64 noundef 1200) #34, !dbg !2201
  %27 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %10, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2203
  %28 = bitcast %"class.Cicada::Task"* %27 to i8*, !dbg !2203
  %29 = call i8* @xTaskCreateStatic(void (i8*)* noundef nonnull @_Z7runTaskPv, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 noundef 256, i8* noundef nonnull %28, i32 noundef 0, i32* noundef getelementptr inbounds ([3072 x i32], [3072 x i32]* @xStackTask, i32 0, i32 0), %struct.xSTATIC_TCB* noundef nonnull @xTaskBuffer) #34, !dbg !2204
  %30 = call i32 (i8*, ...) @printf_(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0)) #34, !dbg !2205
  %31 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %10, i32 0, i32 0, !dbg !2206
  call void @_ZN6Cicada13SimCommDevice6setApnEPKc(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %31, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0)) #34, !dbg !2207
  %32 = bitcast %"class.Cicada::Sim7x00CommDevice"* %10 to %"class.Cicada::IPCommDevice"*, !dbg !2208
  call void @_ZN6Cicada12IPCommDevice11setHostPortEPKctNS_13IIPCommDevice14ConnectionTypeE(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %32, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i16 noundef zeroext 80, i32 noundef 1) #34, !dbg !2209
  %33 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice7connectEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %31) #34, !dbg !2210
  %34 = call noundef zeroext i1 @_ZN6Cicada12IPCommDevice11isConnectedEv(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %32) #34, !dbg !2211
  br i1 %34, label %37, label %35, !dbg !2212

35:                                               ; preds = %1, %35
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !2213, !tbaa !2216
  call void asm sideeffect "dsb", "~{memory}"() #34, !dbg !2213, !srcloc !2217
  call void asm sideeffect "isb", ""() #34, !dbg !2213, !srcloc !2218
  %36 = call noundef zeroext i1 @_ZN6Cicada12IPCommDevice11isConnectedEv(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %32) #34, !dbg !2211
  br i1 %36, label %37, label %35, !dbg !2212, !llvm.loop !2219

37:                                               ; preds = %35, %1
  %38 = call i32 (i8*, ...) @printf_(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i32 0, i32 0)) #34, !dbg !2221
  %39 = getelementptr inbounds [71 x i8], [71 x i8]* %11, i32 0, i32 0, !dbg !2222
  call void @llvm.lifetime.start.p0i8(i64 71, i8* nonnull %39) #34, !dbg !2222
  call void @llvm.dbg.declare(metadata [71 x i8]* %11, metadata !2165, metadata !DIExpression()), !dbg !2223
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(71) %39, i8* noundef nonnull align 1 dereferenceable(71) getelementptr inbounds ([71 x i8], [71 x i8]* @__const._Z10ipCommTaskPv.str, i32 0, i32 0), i32 71, i1 false), !dbg !2223
  %40 = call noundef i64 @_ZN6Cicada12IPCommDevice5writeEPKhy(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %32, i8* noundef nonnull %39, i64 noundef 70) #34, !dbg !2224
  %41 = call noundef i64 @_ZNK6Cicada12IPCommDevice14bytesAvailableEv(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %32) #34, !dbg !2225
  %42 = icmp eq i64 %41, 0, !dbg !2226
  br i1 %42, label %45, label %43, !dbg !2227

43:                                               ; preds = %45, %37
  call void @llvm.dbg.value(metadata i32 0, metadata !2169, metadata !DIExpression()), !dbg !2228
  %44 = getelementptr inbounds [41 x i8], [41 x i8]* %12, i32 0, i32 0
  br label %50, !dbg !2229

45:                                               ; preds = %37, %45
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !2230, !tbaa !2216
  call void asm sideeffect "dsb", "~{memory}"() #34, !dbg !2230, !srcloc !2233
  call void asm sideeffect "isb", ""() #34, !dbg !2230, !srcloc !2234
  %46 = call noundef i64 @_ZNK6Cicada12IPCommDevice14bytesAvailableEv(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %32) #34, !dbg !2225
  %47 = icmp eq i64 %46, 0, !dbg !2226
  br i1 %47, label %45, label %43, !dbg !2227, !llvm.loop !2235

48:                                               ; preds = %71
  call void @_ZN6Cicada12IPCommDevice10disconnectEv(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %32) #34, !dbg !2237
  %49 = call noundef zeroext i1 @_ZN6Cicada12IPCommDevice6isIdleEv(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %32) #34, !dbg !2238
  br i1 %49, label %76, label %74, !dbg !2239

50:                                               ; preds = %43, %71
  %51 = phi i32 [ 0, %43 ], [ %72, %71 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !2169, metadata !DIExpression()), !dbg !2228
  %52 = call noundef i64 @_ZNK6Cicada12IPCommDevice14bytesAvailableEv(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %32) #34, !dbg !2240
  %53 = icmp eq i64 %52, 0, !dbg !2241
  br i1 %53, label %70, label %54, !dbg !2242

54:                                               ; preds = %50
  call void @llvm.lifetime.start.p0i8(i64 41, i8* nonnull %44) #34, !dbg !2243
  call void @llvm.dbg.declare(metadata [41 x i8]* %12, metadata !2171, metadata !DIExpression()), !dbg !2244
  %55 = call noundef i64 @_ZN6Cicada12IPCommDevice4readEPhy(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %32, i8* noundef nonnull %44, i64 noundef 40) #34, !dbg !2245
  %56 = trunc i64 %55 to i32, !dbg !2246
  call void @llvm.dbg.value(metadata i64 %55, metadata !2179, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2247
  call void @llvm.dbg.value(metadata i32 0, metadata !2180, metadata !DIExpression()), !dbg !2248
  %57 = and i32 %56, 65535
  call void @llvm.dbg.value(metadata i32 0, metadata !2180, metadata !DIExpression()), !dbg !2248
  %58 = icmp eq i32 %57, 0, !dbg !2249
  br i1 %58, label %59, label %60, !dbg !2251

59:                                               ; preds = %66, %54
  call void @llvm.lifetime.end.p0i8(i64 41, i8* nonnull %44) #34, !dbg !2252
  br label %71, !dbg !2253

60:                                               ; preds = %54, %66
  %61 = phi i32 [ %68, %66 ], [ 0, %54 ]
  call void @llvm.dbg.value(metadata i32 %61, metadata !2180, metadata !DIExpression()), !dbg !2248
  %62 = getelementptr inbounds [41 x i8], [41 x i8]* %12, i32 0, i32 %61, !dbg !2254
  %63 = load i8, i8* %62, align 1, !dbg !2254, !tbaa !2257
  %64 = icmp eq i8 %63, 10, !dbg !2258
  br i1 %64, label %65, label %66, !dbg !2259

65:                                               ; preds = %60
  call void @_putchar(i8 noundef zeroext 13), !dbg !2260
  br label %66, !dbg !2262

66:                                               ; preds = %65, %60
  %67 = load i8, i8* %62, align 1, !dbg !2263, !tbaa !2257
  call void @_putchar(i8 noundef zeroext %67), !dbg !2264
  %68 = add nuw nsw i32 %61, 1, !dbg !2265
  call void @llvm.dbg.value(metadata i32 %68, metadata !2180, metadata !DIExpression()), !dbg !2248
  %69 = icmp eq i32 %68, %57, !dbg !2249
  br i1 %69, label %59, label %60, !dbg !2251, !llvm.loop !2266

70:                                               ; preds = %50
  call void @vTaskDelay(i32 noundef 20) #34, !dbg !2268
  br label %71

71:                                               ; preds = %59, %70
  %72 = add nuw nsw i32 %51, 1, !dbg !2270
  call void @llvm.dbg.value(metadata i32 %72, metadata !2169, metadata !DIExpression()), !dbg !2228
  %73 = icmp eq i32 %72, 400, !dbg !2271
  br i1 %73, label %48, label %50, !dbg !2229, !llvm.loop !2272

74:                                               ; preds = %48, %74
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !2274, !tbaa !2216
  call void asm sideeffect "dsb", "~{memory}"() #34, !dbg !2274, !srcloc !2277
  call void asm sideeffect "isb", ""() #34, !dbg !2274, !srcloc !2278
  %75 = call noundef zeroext i1 @_ZN6Cicada12IPCommDevice6isIdleEv(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %32) #34, !dbg !2238
  br i1 %75, label %76, label %74, !dbg !2239, !llvm.loop !2279

76:                                               ; preds = %74, %48
  %77 = call i32 (i8*, ...) @printf_(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i32 0, i32 0)) #34, !dbg !2281
  unreachable, !dbg !2282
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #4

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_putchar(i8 noundef zeroext %0) local_unnamed_addr #2 !dbg !161 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !166, metadata !DIExpression()), !dbg !2283
  %2 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** @_ZZ8_putcharE6serial, align 4, !dbg !2284, !tbaa !2286
  %3 = icmp eq %"class.Cicada::Stm32Uart"* %2, null, !dbg !2284
  br i1 %3, label %4, label %6, !dbg !2288

4:                                                ; preds = %1
  %5 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef(%struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073759232 to %struct.USART_TypeDef*)) #34, !dbg !2289
  store %"class.Cicada::Stm32Uart"* %5, %"class.Cicada::Stm32Uart"** @_ZZ8_putcharE6serial, align 4, !dbg !2291, !tbaa !2286
  br label %6, !dbg !2292

6:                                                ; preds = %4, %1
  %7 = load %"class.Cicada::BufferedSerial"*, %"class.Cicada::BufferedSerial"** bitcast (%"class.Cicada::Stm32Uart"** @_ZZ8_putcharE6serial to %"class.Cicada::BufferedSerial"**), align 4, !dbg !2293, !tbaa !2286
  %8 = bitcast %"class.Cicada::BufferedSerial"* %7 to void (%"class.Cicada::BufferedSerial"*, i8)***, !dbg !2294
  %9 = load void (%"class.Cicada::BufferedSerial"*, i8)**, void (%"class.Cicada::BufferedSerial"*, i8)*** %8, align 8, !dbg !2294, !tbaa !2121
  %10 = getelementptr inbounds void (%"class.Cicada::BufferedSerial"*, i8)*, void (%"class.Cicada::BufferedSerial"*, i8)** %9, i32 9, !dbg !2294
  %11 = load void (%"class.Cicada::BufferedSerial"*, i8)*, void (%"class.Cicada::BufferedSerial"*, i8)** %10, align 4, !dbg !2294
  call void %11(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %7, i8 noundef zeroext %0) #34, !dbg !2294
  ret void, !dbg !2295
}

; Function Attrs: mustprogress noinline norecurse nounwind
define dso_local noundef i32 @main(i32 noundef %0, i8** nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !2296 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2300, metadata !DIExpression()), !dbg !2302
  call void @llvm.dbg.value(metadata i8** %1, metadata !2301, metadata !DIExpression()), !dbg !2302
  %3 = call i32 @HAL_Init() #34, !dbg !2303
  call fastcc void @_ZL18SystemClock_Configv(), !dbg !2304
  %4 = call i8* @xTaskCreateStatic(void (i8*)* noundef nonnull @_Z10ipCommTaskPv, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i32 0, i32 0), i32 noundef 3072, i8* noundef null, i32 noundef 0, i32* noundef getelementptr inbounds ([256 x i32], [256 x i32]* @xStackComm, i32 0, i32 0), %struct.xSTATIC_TCB* noundef nonnull @xCommBuffer) #34, !dbg !2305
  call void @vTaskStartScheduler() #34, !dbg !2306
  ret i32 0, !dbg !2307
}

; Function Attrs: mustprogress noinline norecurse nounwind
define internal fastcc void @_ZL18SystemClock_Configv() unnamed_addr #5 !dbg !2308 {
  %1 = alloca %struct.RCC_OscInitTypeDef, align 4
  %2 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %3 = bitcast %struct.RCC_OscInitTypeDef* %1 to i8*, !dbg !2339
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #34, !dbg !2339
  call void @llvm.dbg.declare(metadata %struct.RCC_OscInitTypeDef* %1, metadata !2310, metadata !DIExpression()), !dbg !2340
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %3, i8 0, i32 40, i1 false), !dbg !2340
  %4 = bitcast %struct.RCC_ClkInitTypeDef* %2 to i8*, !dbg !2341
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #34, !dbg !2341
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %2, metadata !2330, metadata !DIExpression()), !dbg !2342
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(20) %4, i8 0, i32 20, i1 false), !dbg !2342
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 0, !dbg !2343
  store i32 2, i32* %5, align 4, !dbg !2344, !tbaa !2345
  %6 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 4, !dbg !2348
  store i32 1, i32* %6, align 4, !dbg !2349, !tbaa !2350
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 5, !dbg !2351
  store i32 16, i32* %7, align 4, !dbg !2352, !tbaa !2353
  %8 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 7, i32 0, !dbg !2354
  store i32 2, i32* %8, align 4, !dbg !2355, !tbaa !2356
  %9 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 7, i32 1, !dbg !2357
  store i32 0, i32* %9, align 4, !dbg !2358, !tbaa !2359
  %10 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 7, i32 2, !dbg !2360
  store i32 3670016, i32* %10, align 4, !dbg !2361, !tbaa !2362
  %11 = call i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef nonnull %1) #34, !dbg !2363
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 0, !dbg !2364
  store i32 15, i32* %12, align 4, !dbg !2365, !tbaa !2366
  %13 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 1, !dbg !2368
  store i32 2, i32* %13, align 4, !dbg !2369, !tbaa !2370
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 2, !dbg !2371
  store i32 0, i32* %14, align 4, !dbg !2372, !tbaa !2373
  %15 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 3, !dbg !2374
  store i32 1024, i32* %15, align 4, !dbg !2375, !tbaa !2376
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 4, !dbg !2377
  store i32 0, i32* %16, align 4, !dbg !2378, !tbaa !2379
  %17 = call i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef nonnull %2, i32 noundef 2) #34, !dbg !2380
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #34, !dbg !2381
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #34, !dbg !2381
  ret void, !dbg !2381
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #6

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local void @vApplicationGetIdleTaskMemory(%struct.xSTATIC_TCB** nocapture noundef writeonly %0, i32** nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #7 !dbg !130 {
  call void @llvm.dbg.value(metadata %struct.xSTATIC_TCB** %0, metadata !139, metadata !DIExpression()), !dbg !2382
  call void @llvm.dbg.value(metadata i32** %1, metadata !140, metadata !DIExpression()), !dbg !2382
  call void @llvm.dbg.value(metadata i32* %2, metadata !141, metadata !DIExpression()), !dbg !2382
  store %struct.xSTATIC_TCB* @_ZZ29vApplicationGetIdleTaskMemoryE12xIdleTaskTCB, %struct.xSTATIC_TCB** %0, align 4, !dbg !2383, !tbaa !2286
  store i32* getelementptr inbounds ([128 x i32], [128 x i32]* @_ZZ29vApplicationGetIdleTaskMemoryE15uxIdleTaskStack, i32 0, i32 0), i32** %1, align 4, !dbg !2384, !tbaa !2286
  store i32 128, i32* %2, align 4, !dbg !2385, !tbaa !2216
  ret void, !dbg !2386
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @SysTick_Handler() local_unnamed_addr #2 !dbg !2387 {
  call void @HAL_IncTick() #34, !dbg !2388
  call void @xPortSysTickHandler() #34, !dbg !2389
  ret void, !dbg !2390
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @USART1_IRQHandler() local_unnamed_addr #2 !dbg !149 {
  %1 = load atomic i8, i8* bitcast (i32* @_ZGVZ17USART1_IRQHandlerE8instance to i8*) acquire, align 4, !dbg !2391
  %2 = and i8 %1, 1, !dbg !2391
  %3 = icmp eq i8 %2, 0, !dbg !2391
  br i1 %3, label %4, label %9, !dbg !2391, !prof !2392

4:                                                ; preds = %0
  %5 = call i32 @__cxa_guard_acquire(i32* nonnull @_ZGVZ17USART1_IRQHandlerE8instance) #34, !dbg !2391
  %6 = icmp eq i32 %5, 0, !dbg !2391
  br i1 %6, label %9, label %7, !dbg !2391

7:                                                ; preds = %4
  %8 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef(%struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073821696 to %struct.USART_TypeDef*)) #34, !dbg !2393
  store %"class.Cicada::Stm32Uart"* %8, %"class.Cicada::Stm32Uart"** @_ZZ17USART1_IRQHandlerE8instance, align 4, !dbg !2391, !tbaa !2286
  call void @__cxa_guard_release(i32* nonnull @_ZGVZ17USART1_IRQHandlerE8instance) #34, !dbg !2391
  br label %9, !dbg !2391

9:                                                ; preds = %7, %4, %0
  %10 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** @_ZZ17USART1_IRQHandlerE8instance, align 4, !dbg !2394, !tbaa !2286
  call void @_ZN6Cicada9Stm32Uart15handleInterruptEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %10) #34, !dbg !2395
  ret void, !dbg !2396
}

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_guard_acquire(i32*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare dso_local void @__cxa_guard_release(i32*) local_unnamed_addr #8

; Function Attrs: mustprogress noinline nounwind
define dso_local void @USART2_IRQHandler() local_unnamed_addr #2 !dbg !158 {
  %1 = load atomic i8, i8* bitcast (i32* @_ZGVZ17USART2_IRQHandlerE8instance to i8*) acquire, align 4, !dbg !2397
  %2 = and i8 %1, 1, !dbg !2397
  %3 = icmp eq i8 %2, 0, !dbg !2397
  br i1 %3, label %4, label %9, !dbg !2397, !prof !2392

4:                                                ; preds = %0
  %5 = call i32 @__cxa_guard_acquire(i32* nonnull @_ZGVZ17USART2_IRQHandlerE8instance) #34, !dbg !2397
  %6 = icmp eq i32 %5, 0, !dbg !2397
  br i1 %6, label %9, label %7, !dbg !2397

7:                                                ; preds = %4
  %8 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef(%struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073759232 to %struct.USART_TypeDef*)) #34, !dbg !2398
  store %"class.Cicada::Stm32Uart"* %8, %"class.Cicada::Stm32Uart"** @_ZZ17USART2_IRQHandlerE8instance, align 4, !dbg !2397, !tbaa !2286
  call void @__cxa_guard_release(i32* nonnull @_ZGVZ17USART2_IRQHandlerE8instance) #34, !dbg !2397
  br label %9, !dbg !2397

9:                                                ; preds = %7, %4, %0
  %10 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** @_ZZ17USART2_IRQHandlerE8instance, align 4, !dbg !2399, !tbaa !2286
  call void @_ZN6Cicada9Stm32Uart15handleInterruptEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %10) #34, !dbg !2400
  ret void, !dbg !2401
}

; Function Attrs: noinline nounwind
define dso_local i32 @printf_(i8* noundef %0, ...) local_unnamed_addr #9 !dbg !2402 {
  %2 = alloca %struct.__va_list, align 4
  %3 = alloca [1 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !2404, metadata !DIExpression()), !dbg !2416
  %4 = bitcast %struct.__va_list* %2 to i8*, !dbg !2417
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #34, !dbg !2417
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !2405, metadata !DIExpression()), !dbg !2418
  call void @llvm.va_start(i8* nonnull %4), !dbg !2419
  %5 = getelementptr inbounds [1 x i8], [1 x i8]* %3, i32 0, i32 0, !dbg !2420
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #34, !dbg !2420
  call void @llvm.dbg.declare(metadata [1 x i8]* %3, metadata !2412, metadata !DIExpression()), !dbg !2421
  %6 = bitcast %struct.__va_list* %2 to i32*, !dbg !2422
  %7 = load i32, i32* %6, align 4, !dbg !2422
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !2422
  %9 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_char, i8* noundef nonnull %5, i32 noundef -1, i8* noundef %0, [1 x i32] %8), !dbg !2422
  call void @llvm.dbg.value(metadata i32 %9, metadata !2414, metadata !DIExpression()), !dbg !2416
  call void @llvm.va_end(i8* %4), !dbg !2423
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #34, !dbg !2424
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #34, !dbg !2424
  ret i32 %9, !dbg !2425
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #10

; Function Attrs: noinline nounwind
define internal void @_out_char(i8 noundef zeroext %0, i8* nocapture noundef readnone %1, i32 noundef %2, i32 noundef %3) #9 !dbg !2426 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2428, metadata !DIExpression()), !dbg !2432
  call void @llvm.dbg.value(metadata i8* %1, metadata !2429, metadata !DIExpression()), !dbg !2432
  call void @llvm.dbg.value(metadata i32 %2, metadata !2430, metadata !DIExpression()), !dbg !2432
  call void @llvm.dbg.value(metadata i32 %3, metadata !2431, metadata !DIExpression()), !dbg !2432
  %5 = icmp eq i8 %0, 0, !dbg !2433
  br i1 %5, label %7, label %6, !dbg !2435

6:                                                ; preds = %4
  call void @_putchar(i8 noundef zeroext %0) #34, !dbg !2436
  br label %7, !dbg !2438

7:                                                ; preds = %6, %4
  ret void, !dbg !2439
}

; Function Attrs: noinline nounwind
define internal fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) unnamed_addr #9 !dbg !2440 {
  %6 = alloca i8*, align 4
  %7 = extractvalue [1 x i32] %4, 0
  %8 = inttoptr i32 %7 to i8*
  call void @llvm.dbg.value(metadata i8* %8, metadata !2448, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !2444, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i8* %1, metadata !2445, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i32 %2, metadata !2446, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i8* %3, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %3, i8** %6, align 4, !tbaa !2495
  call void @llvm.dbg.value(metadata i32 0, metadata !2453, metadata !DIExpression()), !dbg !2494
  %9 = icmp eq i8* %1, null, !dbg !2499
  %10 = select i1 %9, void (i8, i8*, i32, i32)* @_out_null, void (i8, i8*, i32, i32)* %0, !dbg !2501
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %10, metadata !2444, metadata !DIExpression()), !dbg !2494
  br label %11, !dbg !2502

11:                                               ; preds = %354, %5
  %12 = phi i32 [ 0, %5 ], [ %355, %354 ]
  %13 = phi i8* [ %8, %5 ], [ %356, %354 ]
  br label %14, !dbg !2502

14:                                               ; preds = %11, %18
  %15 = phi i32 [ %19, %18 ], [ %12, %11 ], !dbg !2494
  call void @llvm.dbg.value(metadata i8* %13, metadata !2448, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i32 %15, metadata !2453, metadata !DIExpression()), !dbg !2494
  %16 = load i8*, i8** %6, align 4, !dbg !2503, !tbaa !2495
  call void @llvm.dbg.value(metadata i8* %16, metadata !2447, metadata !DIExpression()), !dbg !2494
  %17 = load i8, i8* %16, align 1, !dbg !2504, !tbaa !2505
  switch i8 %17, label %18 [
    i8 0, label %357
    i8 37, label %22
  ], !dbg !2502

18:                                               ; preds = %14
  %19 = add i32 %15, 1, !dbg !2506
  call void @llvm.dbg.value(metadata i32 %19, metadata !2453, metadata !DIExpression()), !dbg !2494
  call void %10(i8 noundef zeroext %17, i8* noundef %1, i32 noundef %15, i32 noundef %2) #34, !dbg !2509, !callees !2510
  %20 = load i8*, i8** %6, align 4, !dbg !2511, !tbaa !2495
  call void @llvm.dbg.value(metadata i8* %20, metadata !2447, metadata !DIExpression()), !dbg !2494
  %21 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !2511
  call void @llvm.dbg.value(metadata i8* %21, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %21, i8** %6, align 4, !dbg !2511, !tbaa !2495
  br label %14, !dbg !2512, !llvm.loop !2513

22:                                               ; preds = %14
  %23 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !2515
  call void @llvm.dbg.value(metadata i8* %23, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %23, i8** %6, align 4, !dbg !2515, !tbaa !2495
  call void @llvm.dbg.value(metadata i32 0, metadata !2449, metadata !DIExpression()), !dbg !2494
  br label %24, !dbg !2517

24:                                               ; preds = %43, %22
  %25 = phi i32 [ 0, %22 ], [ %45, %43 ], !dbg !2518
  call void @llvm.dbg.value(metadata i32 %25, metadata !2449, metadata !DIExpression()), !dbg !2494
  %26 = load i8*, i8** %6, align 4, !dbg !2519, !tbaa !2495
  call void @llvm.dbg.value(metadata i8* %26, metadata !2447, metadata !DIExpression()), !dbg !2494
  %27 = load i8, i8* %26, align 1, !dbg !2521, !tbaa !2505
  switch i8 %27, label %43 [
    i8 48, label %28
    i8 45, label %31
    i8 43, label %34
    i8 32, label %37
    i8 35, label %40
  ], !dbg !2522

28:                                               ; preds = %24
  %29 = or i32 %25, 1, !dbg !2523
  call void @llvm.dbg.value(metadata i32 %29, metadata !2449, metadata !DIExpression()), !dbg !2494
  %30 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !2525
  call void @llvm.dbg.value(metadata i8* %30, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %30, i8** %6, align 4, !dbg !2525, !tbaa !2495
  call void @llvm.dbg.value(metadata i32 1, metadata !2452, metadata !DIExpression()), !dbg !2494
  br label %43, !dbg !2526

31:                                               ; preds = %24
  %32 = or i32 %25, 2, !dbg !2527
  call void @llvm.dbg.value(metadata i32 %32, metadata !2449, metadata !DIExpression()), !dbg !2494
  %33 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !2528
  call void @llvm.dbg.value(metadata i8* %33, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %33, i8** %6, align 4, !dbg !2528, !tbaa !2495
  call void @llvm.dbg.value(metadata i32 1, metadata !2452, metadata !DIExpression()), !dbg !2494
  br label %43, !dbg !2529

34:                                               ; preds = %24
  %35 = or i32 %25, 4, !dbg !2530
  call void @llvm.dbg.value(metadata i32 %35, metadata !2449, metadata !DIExpression()), !dbg !2494
  %36 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !2531
  call void @llvm.dbg.value(metadata i8* %36, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %36, i8** %6, align 4, !dbg !2531, !tbaa !2495
  call void @llvm.dbg.value(metadata i32 1, metadata !2452, metadata !DIExpression()), !dbg !2494
  br label %43, !dbg !2532

37:                                               ; preds = %24
  %38 = or i32 %25, 8, !dbg !2533
  call void @llvm.dbg.value(metadata i32 %38, metadata !2449, metadata !DIExpression()), !dbg !2494
  %39 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !2534
  call void @llvm.dbg.value(metadata i8* %39, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %39, i8** %6, align 4, !dbg !2534, !tbaa !2495
  call void @llvm.dbg.value(metadata i32 1, metadata !2452, metadata !DIExpression()), !dbg !2494
  br label %43, !dbg !2535

40:                                               ; preds = %24
  %41 = or i32 %25, 16, !dbg !2536
  call void @llvm.dbg.value(metadata i32 %41, metadata !2449, metadata !DIExpression()), !dbg !2494
  %42 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !2537
  call void @llvm.dbg.value(metadata i8* %42, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %42, i8** %6, align 4, !dbg !2537, !tbaa !2495
  call void @llvm.dbg.value(metadata i32 1, metadata !2452, metadata !DIExpression()), !dbg !2494
  br label %43, !dbg !2538

43:                                               ; preds = %24, %28, %31, %34, %37, %40
  %44 = phi i1 [ false, %28 ], [ false, %31 ], [ false, %34 ], [ false, %37 ], [ false, %40 ], [ true, %24 ], !dbg !2539
  %45 = phi i32 [ %29, %28 ], [ %32, %31 ], [ %35, %34 ], [ %38, %37 ], [ %41, %40 ], [ %25, %24 ], !dbg !2540
  call void @llvm.dbg.value(metadata i32 %45, metadata !2449, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i32 undef, metadata !2452, metadata !DIExpression()), !dbg !2494
  br i1 %44, label %46, label %24, !dbg !2541, !llvm.loop !2542

46:                                               ; preds = %43
  call void @llvm.dbg.value(metadata i32 0, metadata !2450, metadata !DIExpression()), !dbg !2494
  %47 = load i8*, i8** %6, align 4, !dbg !2544, !tbaa !2495
  call void @llvm.dbg.value(metadata i8* %47, metadata !2447, metadata !DIExpression()), !dbg !2494
  %48 = load i8, i8* %47, align 1, !dbg !2545, !tbaa !2505
  %49 = call fastcc zeroext i1 @_is_digit(i8 noundef zeroext %48), !dbg !2546
  br i1 %49, label %50, label %52, !dbg !2547

50:                                               ; preds = %46
  call void @llvm.dbg.value(metadata i8** %6, metadata !2447, metadata !DIExpression(DW_OP_deref)), !dbg !2494
  %51 = call fastcc i32 @_atoi(i8** noundef nonnull %6), !dbg !2548
  call void @llvm.dbg.value(metadata i32 %51, metadata !2450, metadata !DIExpression()), !dbg !2494
  br label %64, !dbg !2550

52:                                               ; preds = %46
  call void @llvm.dbg.value(metadata i8* %47, metadata !2447, metadata !DIExpression()), !dbg !2494
  %53 = icmp eq i8 %48, 42, !dbg !2551
  br i1 %53, label %54, label %64, !dbg !2552

54:                                               ; preds = %52
  %55 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !2553
  call void @llvm.dbg.value(metadata i8* %55, metadata !2448, metadata !DIExpression()), !dbg !2494
  %56 = bitcast i8* %13 to i32*, !dbg !2553
  %57 = load i32, i32* %56, align 4, !dbg !2553
  call void @llvm.dbg.value(metadata i32 %57, metadata !2454, metadata !DIExpression()), !dbg !2554
  %58 = icmp slt i32 %57, 0, !dbg !2555
  %59 = or i32 %45, 2, !dbg !2557
  %60 = sub nsw i32 0, %57, !dbg !2557
  %61 = select i1 %58, i32 %60, i32 %57, !dbg !2557
  %62 = select i1 %58, i32 %59, i32 %45, !dbg !2557
  call void @llvm.dbg.value(metadata i32 %62, metadata !2449, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i32 %61, metadata !2450, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i8* %47, metadata !2447, metadata !DIExpression()), !dbg !2494
  %63 = getelementptr inbounds i8, i8* %47, i32 1, !dbg !2558
  call void @llvm.dbg.value(metadata i8* %63, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %63, i8** %6, align 4, !dbg !2558, !tbaa !2495
  br label %64, !dbg !2559

64:                                               ; preds = %52, %54, %50
  %65 = phi i32 [ %51, %50 ], [ %61, %54 ], [ 0, %52 ], !dbg !2540
  %66 = phi i32 [ %45, %50 ], [ %62, %54 ], [ %45, %52 ], !dbg !2540
  %67 = phi i8* [ %13, %50 ], [ %55, %54 ], [ %13, %52 ]
  call void @llvm.dbg.value(metadata i8* %67, metadata !2448, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i32 %66, metadata !2449, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i32 %65, metadata !2450, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i32 0, metadata !2451, metadata !DIExpression()), !dbg !2494
  %68 = load i8*, i8** %6, align 4, !dbg !2560, !tbaa !2495
  call void @llvm.dbg.value(metadata i8* %68, metadata !2447, metadata !DIExpression()), !dbg !2494
  %69 = load i8, i8* %68, align 1, !dbg !2561, !tbaa !2505
  %70 = icmp eq i8 %69, 46, !dbg !2562
  br i1 %70, label %71, label %87, !dbg !2563

71:                                               ; preds = %64
  %72 = or i32 %66, 1024, !dbg !2564
  call void @llvm.dbg.value(metadata i32 %72, metadata !2449, metadata !DIExpression()), !dbg !2494
  %73 = getelementptr inbounds i8, i8* %68, i32 1, !dbg !2565
  call void @llvm.dbg.value(metadata i8* %73, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %73, i8** %6, align 4, !dbg !2565, !tbaa !2495
  %74 = load i8, i8* %73, align 1, !dbg !2566, !tbaa !2505
  %75 = call fastcc zeroext i1 @_is_digit(i8 noundef zeroext %74), !dbg !2567
  br i1 %75, label %76, label %78, !dbg !2568

76:                                               ; preds = %71
  call void @llvm.dbg.value(metadata i8** %6, metadata !2447, metadata !DIExpression(DW_OP_deref)), !dbg !2494
  %77 = call fastcc i32 @_atoi(i8** noundef nonnull %6), !dbg !2569
  call void @llvm.dbg.value(metadata i32 %77, metadata !2451, metadata !DIExpression()), !dbg !2494
  br label %87, !dbg !2571

78:                                               ; preds = %71
  call void @llvm.dbg.value(metadata i8* %73, metadata !2447, metadata !DIExpression()), !dbg !2494
  %79 = icmp eq i8 %74, 42, !dbg !2572
  br i1 %79, label %80, label %87, !dbg !2573

80:                                               ; preds = %78
  %81 = getelementptr inbounds i8, i8* %67, i32 4, !dbg !2574
  call void @llvm.dbg.value(metadata i8* %81, metadata !2448, metadata !DIExpression()), !dbg !2494
  %82 = bitcast i8* %67 to i32*, !dbg !2574
  %83 = load i32, i32* %82, align 4, !dbg !2574
  call void @llvm.dbg.value(metadata i32 %83, metadata !2459, metadata !DIExpression()), !dbg !2575
  %84 = icmp sgt i32 %83, 0, !dbg !2576
  %85 = select i1 %84, i32 %83, i32 0, !dbg !2577
  call void @llvm.dbg.value(metadata i32 %85, metadata !2451, metadata !DIExpression()), !dbg !2494
  %86 = getelementptr inbounds i8, i8* %68, i32 2, !dbg !2578
  call void @llvm.dbg.value(metadata i8* %86, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %86, i8** %6, align 4, !dbg !2578, !tbaa !2495
  br label %87, !dbg !2579

87:                                               ; preds = %76, %80, %78, %64
  %88 = phi i32 [ %77, %76 ], [ %85, %80 ], [ 0, %78 ], [ 0, %64 ], !dbg !2540
  %89 = phi i32 [ %72, %76 ], [ %72, %80 ], [ %72, %78 ], [ %66, %64 ], !dbg !2540
  %90 = phi i8* [ %67, %76 ], [ %81, %80 ], [ %67, %78 ], [ %67, %64 ]
  call void @llvm.dbg.value(metadata i8* %90, metadata !2448, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i32 %89, metadata !2449, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i32 %88, metadata !2451, metadata !DIExpression()), !dbg !2494
  %91 = load i8*, i8** %6, align 4, !dbg !2580, !tbaa !2495
  call void @llvm.dbg.value(metadata i8* %91, metadata !2447, metadata !DIExpression()), !dbg !2494
  %92 = load i8, i8* %91, align 1, !dbg !2581, !tbaa !2505
  %93 = zext i8 %92 to i32, !dbg !2581
  %94 = add nsw i32 %93, -104, !dbg !2582
  %95 = call i32 @llvm.fshl.i32(i32 %94, i32 %94, i32 31), !dbg !2582
  switch i32 %95, label %121 [
    i32 2, label %96
    i32 0, label %104
    i32 6, label %112
    i32 1, label %115
    i32 9, label %118
  ], !dbg !2582

96:                                               ; preds = %87
  %97 = or i32 %89, 256, !dbg !2583
  call void @llvm.dbg.value(metadata i32 %97, metadata !2449, metadata !DIExpression()), !dbg !2494
  %98 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !2585
  call void @llvm.dbg.value(metadata i8* %98, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %98, i8** %6, align 4, !dbg !2585, !tbaa !2495
  %99 = load i8, i8* %98, align 1, !dbg !2586, !tbaa !2505
  %100 = icmp eq i8 %99, 108, !dbg !2588
  br i1 %100, label %101, label %121, !dbg !2589

101:                                              ; preds = %96
  %102 = or i32 %89, 768, !dbg !2590
  call void @llvm.dbg.value(metadata i32 %102, metadata !2449, metadata !DIExpression()), !dbg !2494
  %103 = getelementptr inbounds i8, i8* %91, i32 2, !dbg !2592
  call void @llvm.dbg.value(metadata i8* %103, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %103, i8** %6, align 4, !dbg !2592, !tbaa !2495
  br label %121, !dbg !2593

104:                                              ; preds = %87
  %105 = or i32 %89, 128, !dbg !2594
  call void @llvm.dbg.value(metadata i32 %105, metadata !2449, metadata !DIExpression()), !dbg !2494
  %106 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !2595
  call void @llvm.dbg.value(metadata i8* %106, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %106, i8** %6, align 4, !dbg !2595, !tbaa !2495
  %107 = load i8, i8* %106, align 1, !dbg !2596, !tbaa !2505
  %108 = icmp eq i8 %107, 104, !dbg !2598
  br i1 %108, label %109, label %121, !dbg !2599

109:                                              ; preds = %104
  %110 = or i32 %89, 192, !dbg !2600
  call void @llvm.dbg.value(metadata i32 %110, metadata !2449, metadata !DIExpression()), !dbg !2494
  %111 = getelementptr inbounds i8, i8* %91, i32 2, !dbg !2602
  call void @llvm.dbg.value(metadata i8* %111, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %111, i8** %6, align 4, !dbg !2602, !tbaa !2495
  br label %121, !dbg !2603

112:                                              ; preds = %87
  %113 = or i32 %89, 256, !dbg !2604
  call void @llvm.dbg.value(metadata i32 %113, metadata !2449, metadata !DIExpression()), !dbg !2494
  %114 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !2605
  call void @llvm.dbg.value(metadata i8* %114, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %114, i8** %6, align 4, !dbg !2605, !tbaa !2495
  br label %121, !dbg !2606

115:                                              ; preds = %87
  %116 = or i32 %89, 512, !dbg !2607
  call void @llvm.dbg.value(metadata i32 %116, metadata !2449, metadata !DIExpression()), !dbg !2494
  %117 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !2608
  call void @llvm.dbg.value(metadata i8* %117, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %117, i8** %6, align 4, !dbg !2608, !tbaa !2495
  br label %121, !dbg !2609

118:                                              ; preds = %87
  %119 = or i32 %89, 256, !dbg !2610
  call void @llvm.dbg.value(metadata i32 %119, metadata !2449, metadata !DIExpression()), !dbg !2494
  %120 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !2611
  call void @llvm.dbg.value(metadata i8* %120, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %120, i8** %6, align 4, !dbg !2611, !tbaa !2495
  br label %121, !dbg !2612

121:                                              ; preds = %87, %104, %109, %96, %101, %118, %115, %112
  %122 = phi i32 [ %89, %87 ], [ %119, %118 ], [ %116, %115 ], [ %113, %112 ], [ %110, %109 ], [ %105, %104 ], [ %102, %101 ], [ %97, %96 ], !dbg !2540
  call void @llvm.dbg.value(metadata i32 %122, metadata !2449, metadata !DIExpression()), !dbg !2494
  %123 = load i8*, i8** %6, align 4, !dbg !2613, !tbaa !2495
  call void @llvm.dbg.value(metadata i8* %123, metadata !2447, metadata !DIExpression()), !dbg !2494
  %124 = load i8, i8* %123, align 1, !dbg !2614, !tbaa !2505
  switch i8 %124, label %350 [
    i8 37, label %346
    i8 112, label %337
    i8 115, label %278
    i8 99, label %244
    i8 70, label %233
    i8 102, label %233
    i8 120, label %129
    i8 88, label %129
    i8 111, label %125
    i8 98, label %126
    i8 100, label %127
    i8 105, label %127
    i8 117, label %127
  ], !dbg !2615

125:                                              ; preds = %121
  call void @llvm.dbg.value(metadata i32 8, metadata !2465, metadata !DIExpression()), !dbg !2616
  br label %129, !dbg !2617

126:                                              ; preds = %121
  call void @llvm.dbg.value(metadata i32 2, metadata !2465, metadata !DIExpression()), !dbg !2616
  br label %129, !dbg !2621

127:                                              ; preds = %121, %121, %121
  call void @llvm.dbg.value(metadata i32 10, metadata !2465, metadata !DIExpression()), !dbg !2616
  %128 = and i32 %122, -17, !dbg !2624
  call void @llvm.dbg.value(metadata i32 %128, metadata !2449, metadata !DIExpression()), !dbg !2494
  br label %129

129:                                              ; preds = %121, %121, %125, %127, %126
  %130 = phi i32 [ 8, %125 ], [ 2, %126 ], [ 10, %127 ], [ 16, %121 ], [ 16, %121 ], !dbg !2626
  %131 = phi i32 [ %122, %125 ], [ %122, %126 ], [ %128, %127 ], [ %122, %121 ], [ %122, %121 ], !dbg !2540
  call void @llvm.dbg.value(metadata i32 %131, metadata !2449, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i32 %130, metadata !2465, metadata !DIExpression()), !dbg !2616
  call void @llvm.dbg.value(metadata i8* %123, metadata !2447, metadata !DIExpression()), !dbg !2494
  %132 = icmp eq i8 %124, 88, !dbg !2627
  %133 = or i32 %131, 32
  %134 = select i1 %132, i32 %133, i32 %131, !dbg !2629
  call void @llvm.dbg.value(metadata i32 %134, metadata !2449, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i8* %123, metadata !2447, metadata !DIExpression()), !dbg !2494
  switch i8 %124, label %135 [
    i8 105, label %137
    i8 100, label %137
  ], !dbg !2630

135:                                              ; preds = %129
  %136 = and i32 %134, -13, !dbg !2632
  call void @llvm.dbg.value(metadata i32 %136, metadata !2449, metadata !DIExpression()), !dbg !2494
  br label %137, !dbg !2634

137:                                              ; preds = %129, %129, %135
  %138 = phi i32 [ %136, %135 ], [ %134, %129 ], [ %134, %129 ], !dbg !2616
  call void @llvm.dbg.value(metadata i32 %138, metadata !2449, metadata !DIExpression()), !dbg !2494
  %139 = and i32 %138, 1024, !dbg !2635
  %140 = icmp eq i32 %139, 0, !dbg !2635
  %141 = and i32 %138, -2
  %142 = select i1 %140, i32 %138, i32 %141, !dbg !2637
  call void @llvm.dbg.value(metadata i32 %142, metadata !2449, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i8* %123, metadata !2447, metadata !DIExpression()), !dbg !2494
  switch i8 %124, label %189 [
    i8 105, label %143
    i8 100, label %143
  ], !dbg !2638

143:                                              ; preds = %137, %137
  %144 = and i32 %142, 512, !dbg !2639
  %145 = icmp eq i32 %144, 0, !dbg !2639
  br i1 %145, label %158, label %146, !dbg !2640

146:                                              ; preds = %143
  %147 = ptrtoint i8* %90 to i32, !dbg !2641
  %148 = add i32 %147, 7, !dbg !2641
  %149 = and i32 %148, -8, !dbg !2641
  %150 = inttoptr i32 %149 to i8*, !dbg !2641
  %151 = getelementptr inbounds i8, i8* %150, i32 8, !dbg !2641
  call void @llvm.dbg.value(metadata i8* %151, metadata !2448, metadata !DIExpression()), !dbg !2494
  %152 = inttoptr i32 %149 to i64*, !dbg !2641
  %153 = load i64, i64* %152, align 8, !dbg !2641
  call void @llvm.dbg.value(metadata i64 %153, metadata !2468, metadata !DIExpression()), !dbg !2642
  %154 = call i64 @llvm.abs.i64(i64 %153, i1 true), !dbg !2643
  %155 = icmp slt i64 %153, 0, !dbg !2644
  %156 = zext i32 %130 to i64, !dbg !2645
  %157 = call fastcc i32 @_ntoa_long_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i64 noundef %154, i1 noundef zeroext %155, i64 noundef %156, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !2646
  call void @llvm.dbg.value(metadata i32 %157, metadata !2453, metadata !DIExpression()), !dbg !2494
  br label %228, !dbg !2647

158:                                              ; preds = %143
  %159 = and i32 %142, 256, !dbg !2648
  %160 = icmp eq i32 %159, 0, !dbg !2648
  br i1 %160, label %168, label %161, !dbg !2649

161:                                              ; preds = %158
  %162 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !2650
  call void @llvm.dbg.value(metadata i8* %162, metadata !2448, metadata !DIExpression()), !dbg !2494
  %163 = bitcast i8* %90 to i32*, !dbg !2650
  %164 = load i32, i32* %163, align 4, !dbg !2650
  call void @llvm.dbg.value(metadata i32 %164, metadata !2474, metadata !DIExpression()), !dbg !2651
  %165 = call i32 @llvm.abs.i32(i32 %164, i1 true), !dbg !2652
  %166 = icmp slt i32 %164, 0, !dbg !2653
  %167 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %165, i1 noundef zeroext %166, i32 noundef %130, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !2654
  call void @llvm.dbg.value(metadata i32 %167, metadata !2453, metadata !DIExpression()), !dbg !2494
  br label %228, !dbg !2655

168:                                              ; preds = %158
  %169 = and i32 %142, 64, !dbg !2656
  %170 = icmp eq i32 %169, 0, !dbg !2656
  br i1 %170, label %175, label %171, !dbg !2657

171:                                              ; preds = %168
  call void @llvm.dbg.value(metadata i8* %90, metadata !2448, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !2494
  %172 = bitcast i8* %90 to i32*, !dbg !2658
  %173 = load i32, i32* %172, align 4, !dbg !2658
  %174 = and i32 %173, 255, !dbg !2659
  br label %183, !dbg !2657

175:                                              ; preds = %168
  %176 = and i32 %142, 128, !dbg !2660
  %177 = icmp eq i32 %176, 0, !dbg !2660
  call void @llvm.dbg.value(metadata i8* %90, metadata !2448, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !2494
  call void @llvm.dbg.value(metadata i8* %90, metadata !2448, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !2494
  %178 = bitcast i8* %90 to i32*, !dbg !2661
  %179 = load i32, i32* %178, align 4, !dbg !2661
  br i1 %177, label %183, label %180, !dbg !2662

180:                                              ; preds = %175
  %181 = shl i32 %179, 16, !dbg !2663
  %182 = ashr exact i32 %181, 16, !dbg !2663
  br label %183, !dbg !2662

183:                                              ; preds = %175, %180, %171
  %184 = phi i32 [ %174, %171 ], [ %182, %180 ], [ %179, %175 ], !dbg !2657
  %185 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !2661
  call void @llvm.dbg.value(metadata i8* %185, metadata !2448, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i32 %184, metadata !2478, metadata !DIExpression()), !dbg !2661
  %186 = call i32 @llvm.abs.i32(i32 %184, i1 true), !dbg !2664
  %187 = icmp slt i32 %184, 0, !dbg !2665
  %188 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %186, i1 noundef zeroext %187, i32 noundef %130, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !2666
  call void @llvm.dbg.value(metadata i32 %188, metadata !2453, metadata !DIExpression()), !dbg !2494
  br label %228

189:                                              ; preds = %137
  %190 = and i32 %142, 512, !dbg !2667
  %191 = icmp eq i32 %190, 0, !dbg !2667
  br i1 %191, label %202, label %192, !dbg !2668

192:                                              ; preds = %189
  %193 = ptrtoint i8* %90 to i32, !dbg !2669
  %194 = add i32 %193, 7, !dbg !2669
  %195 = and i32 %194, -8, !dbg !2669
  %196 = inttoptr i32 %195 to i8*, !dbg !2669
  %197 = getelementptr inbounds i8, i8* %196, i32 8, !dbg !2669
  call void @llvm.dbg.value(metadata i8* %197, metadata !2448, metadata !DIExpression()), !dbg !2494
  %198 = inttoptr i32 %195 to i64*, !dbg !2669
  %199 = load i64, i64* %198, align 8, !dbg !2669
  %200 = zext i32 %130 to i64, !dbg !2671
  %201 = call fastcc i32 @_ntoa_long_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i64 noundef %199, i1 noundef zeroext false, i64 noundef %200, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !2672
  call void @llvm.dbg.value(metadata i32 %201, metadata !2453, metadata !DIExpression()), !dbg !2494
  br label %228, !dbg !2673

202:                                              ; preds = %189
  %203 = and i32 %142, 256, !dbg !2674
  %204 = icmp eq i32 %203, 0, !dbg !2674
  br i1 %204, label %210, label %205, !dbg !2675

205:                                              ; preds = %202
  %206 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !2676
  call void @llvm.dbg.value(metadata i8* %206, metadata !2448, metadata !DIExpression()), !dbg !2494
  %207 = bitcast i8* %90 to i32*, !dbg !2676
  %208 = load i32, i32* %207, align 4, !dbg !2676
  %209 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %208, i1 noundef zeroext false, i32 noundef %130, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !2678
  call void @llvm.dbg.value(metadata i32 %209, metadata !2453, metadata !DIExpression()), !dbg !2494
  br label %228, !dbg !2679

210:                                              ; preds = %202
  %211 = and i32 %142, 64, !dbg !2680
  %212 = icmp eq i32 %211, 0, !dbg !2680
  br i1 %212, label %217, label %213, !dbg !2681

213:                                              ; preds = %210
  call void @llvm.dbg.value(metadata i8* %90, metadata !2448, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !2494
  %214 = bitcast i8* %90 to i32*, !dbg !2682
  %215 = load i32, i32* %214, align 4, !dbg !2682
  %216 = and i32 %215, 255, !dbg !2683
  br label %224, !dbg !2681

217:                                              ; preds = %210
  %218 = and i32 %142, 128, !dbg !2684
  %219 = icmp eq i32 %218, 0, !dbg !2684
  call void @llvm.dbg.value(metadata i8* %90, metadata !2448, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !2494
  call void @llvm.dbg.value(metadata i8* %90, metadata !2448, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !2494
  %220 = bitcast i8* %90 to i32*, !dbg !2685
  %221 = load i32, i32* %220, align 4, !dbg !2685
  %222 = and i32 %221, 65535
  %223 = select i1 %219, i32 %221, i32 %222, !dbg !2686
  br label %224, !dbg !2686

224:                                              ; preds = %217, %213
  %225 = phi i32 [ %216, %213 ], [ %223, %217 ], !dbg !2681
  %226 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !2685
  call void @llvm.dbg.value(metadata i8* %226, metadata !2448, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i32 %225, metadata !2480, metadata !DIExpression()), !dbg !2685
  %227 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %225, i1 noundef zeroext false, i32 noundef %130, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !2687
  call void @llvm.dbg.value(metadata i32 %227, metadata !2453, metadata !DIExpression()), !dbg !2494
  br label %228

228:                                              ; preds = %192, %224, %205, %146, %183, %161
  %229 = phi i32 [ %157, %146 ], [ %167, %161 ], [ %188, %183 ], [ %201, %192 ], [ %209, %205 ], [ %227, %224 ], !dbg !2688
  %230 = phi i8* [ %151, %146 ], [ %162, %161 ], [ %185, %183 ], [ %197, %192 ], [ %206, %205 ], [ %226, %224 ], !dbg !2688
  call void @llvm.dbg.value(metadata i8* %230, metadata !2448, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i32 %229, metadata !2453, metadata !DIExpression()), !dbg !2494
  %231 = load i8*, i8** %6, align 4, !dbg !2689, !tbaa !2495
  call void @llvm.dbg.value(metadata i8* %231, metadata !2447, metadata !DIExpression()), !dbg !2494
  %232 = getelementptr inbounds i8, i8* %231, i32 1, !dbg !2689
  call void @llvm.dbg.value(metadata i8* %232, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %232, i8** %6, align 4, !dbg !2689, !tbaa !2495
  br label %354

233:                                              ; preds = %121, %121
  %234 = ptrtoint i8* %90 to i32, !dbg !2690
  %235 = add i32 %234, 7, !dbg !2690
  %236 = and i32 %235, -8, !dbg !2690
  %237 = inttoptr i32 %236 to i8*, !dbg !2690
  %238 = getelementptr inbounds i8, i8* %237, i32 8, !dbg !2690
  call void @llvm.dbg.value(metadata i8* %238, metadata !2448, metadata !DIExpression()), !dbg !2494
  %239 = inttoptr i32 %236 to double*, !dbg !2690
  %240 = load double, double* %239, align 8, !dbg !2690
  %241 = call fastcc i32 @_ftoa(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, double noundef %240, i32 noundef %88, i32 noundef %65, i32 noundef %122), !dbg !2691
  call void @llvm.dbg.value(metadata i32 %241, metadata !2453, metadata !DIExpression()), !dbg !2494
  %242 = load i8*, i8** %6, align 4, !dbg !2692, !tbaa !2495
  call void @llvm.dbg.value(metadata i8* %242, metadata !2447, metadata !DIExpression()), !dbg !2494
  %243 = getelementptr inbounds i8, i8* %242, i32 1, !dbg !2692
  call void @llvm.dbg.value(metadata i8* %243, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %243, i8** %6, align 4, !dbg !2692, !tbaa !2495
  br label %354, !dbg !2693

244:                                              ; preds = %121
  call void @llvm.dbg.value(metadata i32 1, metadata !2486, metadata !DIExpression()), !dbg !2694
  %245 = and i32 %122, 2, !dbg !2695
  %246 = icmp eq i32 %245, 0, !dbg !2695
  br i1 %246, label %247, label %257, !dbg !2697

247:                                              ; preds = %244
  call void @llvm.dbg.value(metadata i32 1, metadata !2486, metadata !DIExpression()), !dbg !2694
  call void @llvm.dbg.value(metadata i32 %15, metadata !2453, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i32 2, metadata !2486, metadata !DIExpression()), !dbg !2694
  %248 = icmp ugt i32 %65, 1, !dbg !2698
  br i1 %248, label %249, label %257, !dbg !2700

249:                                              ; preds = %247
  %250 = add i32 %65, 1, !dbg !2700
  br label %251, !dbg !2700

251:                                              ; preds = %249, %251
  %252 = phi i32 [ %255, %251 ], [ 2, %249 ]
  %253 = phi i32 [ %254, %251 ], [ %15, %249 ]
  call void @llvm.dbg.value(metadata i32 %253, metadata !2453, metadata !DIExpression()), !dbg !2494
  %254 = add i32 %253, 1, !dbg !2701
  call void @llvm.dbg.value(metadata i32 %254, metadata !2453, metadata !DIExpression()), !dbg !2494
  call void %10(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %253, i32 noundef %2) #34, !dbg !2703, !callees !2510
  call void @llvm.dbg.value(metadata i32 %252, metadata !2486, metadata !DIExpression()), !dbg !2694
  %255 = add i32 %252, 1, !dbg !2704
  call void @llvm.dbg.value(metadata i32 %255, metadata !2486, metadata !DIExpression()), !dbg !2694
  %256 = icmp eq i32 %252, %65, !dbg !2698
  br i1 %256, label %257, label %251, !dbg !2700, !llvm.loop !2705

257:                                              ; preds = %251, %247, %244
  %258 = phi i32 [ %15, %244 ], [ %15, %247 ], [ %254, %251 ], !dbg !2707
  %259 = phi i32 [ 1, %244 ], [ 2, %247 ], [ %250, %251 ], !dbg !2694
  call void @llvm.dbg.value(metadata i32 %259, metadata !2486, metadata !DIExpression()), !dbg !2694
  call void @llvm.dbg.value(metadata i32 %258, metadata !2453, metadata !DIExpression()), !dbg !2494
  %260 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !2708
  call void @llvm.dbg.value(metadata i8* %260, metadata !2448, metadata !DIExpression()), !dbg !2494
  %261 = bitcast i8* %90 to i32*, !dbg !2708
  %262 = load i32, i32* %261, align 4, !dbg !2708
  %263 = trunc i32 %262 to i8, !dbg !2709
  %264 = add i32 %258, 1, !dbg !2710
  call void @llvm.dbg.value(metadata i32 %264, metadata !2453, metadata !DIExpression()), !dbg !2494
  call void %10(i8 noundef zeroext %263, i8* noundef %1, i32 noundef %258, i32 noundef %2) #34, !dbg !2711, !callees !2510
  %265 = xor i1 %246, true, !dbg !2712
  %266 = icmp ult i32 %259, %65
  %267 = select i1 %265, i1 %266, i1 false, !dbg !2712
  call void @llvm.dbg.value(metadata i32 %259, metadata !2486, metadata !DIExpression()), !dbg !2694
  call void @llvm.dbg.value(metadata i32 %264, metadata !2453, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i32 %259, metadata !2486, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2694
  br i1 %267, label %268, label %274, !dbg !2712

268:                                              ; preds = %257, %268
  %269 = phi i32 [ %271, %268 ], [ %259, %257 ]
  %270 = phi i32 [ %272, %268 ], [ %264, %257 ]
  call void @llvm.dbg.value(metadata i32 %269, metadata !2486, metadata !DIExpression()), !dbg !2694
  call void @llvm.dbg.value(metadata i32 %270, metadata !2453, metadata !DIExpression()), !dbg !2494
  %271 = add nuw i32 %269, 1, !dbg !2713
  call void @llvm.dbg.value(metadata i32 %271, metadata !2486, metadata !DIExpression()), !dbg !2694
  %272 = add i32 %270, 1, !dbg !2716
  call void @llvm.dbg.value(metadata i32 %272, metadata !2453, metadata !DIExpression()), !dbg !2494
  call void %10(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %270, i32 noundef %2) #34, !dbg !2718, !callees !2510
  call void @llvm.dbg.value(metadata i32 %271, metadata !2486, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2694
  %273 = icmp eq i32 %271, %65, !dbg !2719
  br i1 %273, label %274, label %268, !dbg !2720, !llvm.loop !2721

274:                                              ; preds = %268, %257
  %275 = phi i32 [ %264, %257 ], [ %272, %268 ], !dbg !2710
  call void @llvm.dbg.value(metadata i32 %275, metadata !2453, metadata !DIExpression()), !dbg !2494
  %276 = load i8*, i8** %6, align 4, !dbg !2723, !tbaa !2495
  call void @llvm.dbg.value(metadata i8* %276, metadata !2447, metadata !DIExpression()), !dbg !2494
  %277 = getelementptr inbounds i8, i8* %276, i32 1, !dbg !2723
  call void @llvm.dbg.value(metadata i8* %277, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %277, i8** %6, align 4, !dbg !2723, !tbaa !2495
  br label %354

278:                                              ; preds = %121
  %279 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !2724
  call void @llvm.dbg.value(metadata i8* %279, metadata !2448, metadata !DIExpression()), !dbg !2494
  %280 = bitcast i8* %90 to i8**, !dbg !2724
  %281 = load i8*, i8** %280, align 4, !dbg !2724
  call void @llvm.dbg.value(metadata i8* %281, metadata !2488, metadata !DIExpression()), !dbg !2725
  %282 = icmp eq i32 %88, 0, !dbg !2726
  %283 = select i1 %282, i32 -1, i32 %88, !dbg !2726
  %284 = call fastcc i32 @_strnlen_s(i8* noundef %281, i32 noundef %283), !dbg !2727
  call void @llvm.dbg.value(metadata i32 %284, metadata !2490, metadata !DIExpression()), !dbg !2725
  %285 = and i32 %122, 1024, !dbg !2728
  %286 = icmp eq i32 %285, 0, !dbg !2728
  %287 = icmp ult i32 %284, %88, !dbg !2730
  %288 = select i1 %286, i1 true, i1 %287, !dbg !2730
  %289 = select i1 %288, i32 %284, i32 %88, !dbg !2730
  call void @llvm.dbg.value(metadata i32 %289, metadata !2490, metadata !DIExpression()), !dbg !2725
  %290 = and i32 %122, 2, !dbg !2731
  %291 = icmp eq i32 %290, 0, !dbg !2731
  br i1 %291, label %292, label %303, !dbg !2733

292:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 %289, metadata !2490, metadata !DIExpression()), !dbg !2725
  call void @llvm.dbg.value(metadata i32 %15, metadata !2453, metadata !DIExpression()), !dbg !2494
  %293 = add i32 %289, 1, !dbg !2734
  call void @llvm.dbg.value(metadata i32 %293, metadata !2490, metadata !DIExpression()), !dbg !2725
  %294 = icmp ult i32 %289, %65, !dbg !2736
  br i1 %294, label %295, label %303, !dbg !2737

295:                                              ; preds = %292
  %296 = add i32 %65, 1, !dbg !2737
  br label %297, !dbg !2737

297:                                              ; preds = %295, %297
  %298 = phi i32 [ %301, %297 ], [ %293, %295 ]
  %299 = phi i32 [ %300, %297 ], [ %15, %295 ]
  call void @llvm.dbg.value(metadata i32 %299, metadata !2453, metadata !DIExpression()), !dbg !2494
  %300 = add i32 %299, 1, !dbg !2738
  call void @llvm.dbg.value(metadata i32 %300, metadata !2453, metadata !DIExpression()), !dbg !2494
  call void %10(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %299, i32 noundef %2) #34, !dbg !2740, !callees !2510
  call void @llvm.dbg.value(metadata i32 %298, metadata !2490, metadata !DIExpression()), !dbg !2725
  %301 = add i32 %298, 1, !dbg !2734
  call void @llvm.dbg.value(metadata i32 %301, metadata !2490, metadata !DIExpression()), !dbg !2725
  %302 = icmp eq i32 %298, %65, !dbg !2736
  br i1 %302, label %303, label %297, !dbg !2737, !llvm.loop !2741

303:                                              ; preds = %297, %292, %278
  %304 = phi i32 [ %15, %278 ], [ %15, %292 ], [ %300, %297 ], !dbg !2707
  %305 = phi i32 [ %289, %278 ], [ %293, %292 ], [ %296, %297 ], !dbg !2725
  call void @llvm.dbg.value(metadata i32 %305, metadata !2490, metadata !DIExpression()), !dbg !2725
  call void @llvm.dbg.value(metadata i32 %304, metadata !2453, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i8* %281, metadata !2488, metadata !DIExpression()), !dbg !2725
  call void @llvm.dbg.value(metadata i32 %88, metadata !2451, metadata !DIExpression()), !dbg !2494
  %306 = load i8, i8* %281, align 1, !dbg !2743, !tbaa !2505
  %307 = icmp eq i8 %306, 0, !dbg !2744
  br i1 %307, label %322, label %308, !dbg !2745

308:                                              ; preds = %303, %316
  %309 = phi i8 [ %320, %316 ], [ %306, %303 ]
  %310 = phi i8* [ %318, %316 ], [ %281, %303 ]
  %311 = phi i32 [ %317, %316 ], [ %88, %303 ]
  %312 = phi i32 [ %319, %316 ], [ %304, %303 ]
  call void @llvm.dbg.value(metadata i8* %310, metadata !2488, metadata !DIExpression()), !dbg !2725
  call void @llvm.dbg.value(metadata i32 %311, metadata !2451, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i32 %312, metadata !2453, metadata !DIExpression()), !dbg !2494
  br i1 %286, label %316, label %313, !dbg !2746

313:                                              ; preds = %308
  %314 = add i32 %311, -1, !dbg !2747
  call void @llvm.dbg.value(metadata i32 %314, metadata !2451, metadata !DIExpression()), !dbg !2494
  %315 = icmp eq i32 %311, 0, !dbg !2746
  br i1 %315, label %322, label %316, !dbg !2748

316:                                              ; preds = %308, %313
  %317 = phi i32 [ %314, %313 ], [ %311, %308 ], !dbg !2540
  call void @llvm.dbg.value(metadata i32 %317, metadata !2451, metadata !DIExpression()), !dbg !2494
  %318 = getelementptr inbounds i8, i8* %310, i32 1, !dbg !2749
  call void @llvm.dbg.value(metadata i8* %318, metadata !2488, metadata !DIExpression()), !dbg !2725
  %319 = add i32 %312, 1, !dbg !2751
  call void @llvm.dbg.value(metadata i32 %319, metadata !2453, metadata !DIExpression()), !dbg !2494
  call void %10(i8 noundef zeroext %309, i8* noundef %1, i32 noundef %312, i32 noundef %2) #34, !dbg !2752, !callees !2510
  %320 = load i8, i8* %318, align 1, !dbg !2743, !tbaa !2505
  %321 = icmp eq i8 %320, 0, !dbg !2744
  br i1 %321, label %322, label %308, !dbg !2745, !llvm.loop !2753

322:                                              ; preds = %313, %316, %303
  %323 = phi i32 [ %304, %303 ], [ %312, %313 ], [ %319, %316 ], !dbg !2494
  %324 = xor i1 %291, true, !dbg !2755
  %325 = icmp ult i32 %305, %65
  %326 = select i1 %324, i1 %325, i1 false, !dbg !2755
  call void @llvm.dbg.value(metadata i32 %305, metadata !2490, metadata !DIExpression()), !dbg !2725
  call void @llvm.dbg.value(metadata i32 %323, metadata !2453, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i32 %305, metadata !2490, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2725
  br i1 %326, label %327, label %333, !dbg !2755

327:                                              ; preds = %322, %327
  %328 = phi i32 [ %330, %327 ], [ %305, %322 ]
  %329 = phi i32 [ %331, %327 ], [ %323, %322 ]
  call void @llvm.dbg.value(metadata i32 %328, metadata !2490, metadata !DIExpression()), !dbg !2725
  call void @llvm.dbg.value(metadata i32 %329, metadata !2453, metadata !DIExpression()), !dbg !2494
  %330 = add nuw i32 %328, 1, !dbg !2756
  call void @llvm.dbg.value(metadata i32 %330, metadata !2490, metadata !DIExpression()), !dbg !2725
  %331 = add i32 %329, 1, !dbg !2759
  call void @llvm.dbg.value(metadata i32 %331, metadata !2453, metadata !DIExpression()), !dbg !2494
  call void %10(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %329, i32 noundef %2) #34, !dbg !2761, !callees !2510
  call void @llvm.dbg.value(metadata i32 %330, metadata !2490, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2725
  %332 = icmp eq i32 %330, %65, !dbg !2762
  br i1 %332, label %333, label %327, !dbg !2763, !llvm.loop !2764

333:                                              ; preds = %327, %322
  %334 = phi i32 [ %323, %322 ], [ %331, %327 ], !dbg !2707
  call void @llvm.dbg.value(metadata i32 %334, metadata !2453, metadata !DIExpression()), !dbg !2494
  %335 = load i8*, i8** %6, align 4, !dbg !2766, !tbaa !2495
  call void @llvm.dbg.value(metadata i8* %335, metadata !2447, metadata !DIExpression()), !dbg !2494
  %336 = getelementptr inbounds i8, i8* %335, i32 1, !dbg !2766
  call void @llvm.dbg.value(metadata i8* %336, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %336, i8** %6, align 4, !dbg !2766, !tbaa !2495
  br label %354

337:                                              ; preds = %121
  call void @llvm.dbg.value(metadata i32 8, metadata !2450, metadata !DIExpression()), !dbg !2494
  %338 = or i32 %122, 33, !dbg !2767
  call void @llvm.dbg.value(metadata i32 %338, metadata !2449, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i8 0, metadata !2491, metadata !DIExpression()), !dbg !2768
  %339 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !2769
  call void @llvm.dbg.value(metadata i8* %339, metadata !2448, metadata !DIExpression()), !dbg !2494
  %340 = bitcast i8* %90 to i8**, !dbg !2769
  %341 = load i8*, i8** %340, align 4, !dbg !2769
  %342 = ptrtoint i8* %341 to i32, !dbg !2772
  %343 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %342, i1 noundef zeroext false, i32 noundef 16, i32 noundef %88, i32 noundef 8, i32 noundef %338), !dbg !2773
  call void @llvm.dbg.value(metadata i32 %343, metadata !2453, metadata !DIExpression()), !dbg !2494
  %344 = load i8*, i8** %6, align 4, !dbg !2774, !tbaa !2495
  call void @llvm.dbg.value(metadata i8* %344, metadata !2447, metadata !DIExpression()), !dbg !2494
  %345 = getelementptr inbounds i8, i8* %344, i32 1, !dbg !2774
  call void @llvm.dbg.value(metadata i8* %345, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %345, i8** %6, align 4, !dbg !2774, !tbaa !2495
  br label %354

346:                                              ; preds = %121
  %347 = add i32 %15, 1, !dbg !2775
  call void @llvm.dbg.value(metadata i32 %347, metadata !2453, metadata !DIExpression()), !dbg !2494
  call void %10(i8 noundef zeroext 37, i8* noundef %1, i32 noundef %15, i32 noundef %2) #34, !dbg !2776, !callees !2510
  %348 = load i8*, i8** %6, align 4, !dbg !2777, !tbaa !2495
  call void @llvm.dbg.value(metadata i8* %348, metadata !2447, metadata !DIExpression()), !dbg !2494
  %349 = getelementptr inbounds i8, i8* %348, i32 1, !dbg !2777
  call void @llvm.dbg.value(metadata i8* %349, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %349, i8** %6, align 4, !dbg !2777, !tbaa !2495
  br label %354, !dbg !2778

350:                                              ; preds = %121
  %351 = add i32 %15, 1, !dbg !2779
  call void @llvm.dbg.value(metadata i32 %351, metadata !2453, metadata !DIExpression()), !dbg !2494
  call void %10(i8 noundef zeroext %124, i8* noundef %1, i32 noundef %15, i32 noundef %2) #34, !dbg !2780, !callees !2510
  %352 = load i8*, i8** %6, align 4, !dbg !2781, !tbaa !2495
  call void @llvm.dbg.value(metadata i8* %352, metadata !2447, metadata !DIExpression()), !dbg !2494
  %353 = getelementptr inbounds i8, i8* %352, i32 1, !dbg !2781
  call void @llvm.dbg.value(metadata i8* %353, metadata !2447, metadata !DIExpression()), !dbg !2494
  store i8* %353, i8** %6, align 4, !dbg !2781, !tbaa !2495
  br label %354, !dbg !2782

354:                                              ; preds = %350, %346, %337, %333, %274, %233, %228
  %355 = phi i32 [ %351, %350 ], [ %347, %346 ], [ %343, %337 ], [ %334, %333 ], [ %275, %274 ], [ %241, %233 ], [ %229, %228 ]
  %356 = phi i8* [ %90, %350 ], [ %90, %346 ], [ %339, %337 ], [ %279, %333 ], [ %260, %274 ], [ %238, %233 ], [ %230, %228 ]
  br label %11, !dbg !2502, !llvm.loop !2513

357:                                              ; preds = %14
  %358 = icmp ult i32 %15, %2, !dbg !2783
  %359 = add i32 %2, -1, !dbg !2784
  %360 = select i1 %358, i32 %15, i32 %359, !dbg !2784
  call void %10(i8 noundef zeroext 0, i8* noundef %1, i32 noundef %360, i32 noundef %2) #34, !dbg !2785, !callees !2510
  ret i32 %15, !dbg !2786
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #10

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define internal void @_out_null(i8 noundef zeroext %0, i8* nocapture noundef %1, i32 noundef %2, i32 noundef %3) #11 !dbg !2787 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2789, metadata !DIExpression()), !dbg !2793
  call void @llvm.dbg.value(metadata i8* %1, metadata !2790, metadata !DIExpression()), !dbg !2793
  call void @llvm.dbg.value(metadata i32 %2, metadata !2791, metadata !DIExpression()), !dbg !2793
  call void @llvm.dbg.value(metadata i32 %3, metadata !2792, metadata !DIExpression()), !dbg !2793
  ret void, !dbg !2794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define internal void @_out_buffer(i8 noundef zeroext %0, i8* nocapture noundef writeonly %1, i32 noundef %2, i32 noundef %3) #7 !dbg !2795 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2797, metadata !DIExpression()), !dbg !2801
  call void @llvm.dbg.value(metadata i8* %1, metadata !2798, metadata !DIExpression()), !dbg !2801
  call void @llvm.dbg.value(metadata i32 %2, metadata !2799, metadata !DIExpression()), !dbg !2801
  call void @llvm.dbg.value(metadata i32 %3, metadata !2800, metadata !DIExpression()), !dbg !2801
  %5 = icmp ult i32 %2, %3, !dbg !2802
  br i1 %5, label %6, label %8, !dbg !2804

6:                                                ; preds = %4
  %7 = getelementptr inbounds i8, i8* %1, i32 %2, !dbg !2805
  store i8 %0, i8* %7, align 1, !dbg !2807, !tbaa !2505
  br label %8, !dbg !2808

8:                                                ; preds = %6, %4
  ret void, !dbg !2809
}

; Function Attrs: noinline nounwind
define internal void @_out_fct(i8 noundef zeroext %0, i8* nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #9 !dbg !2810 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2812, metadata !DIExpression()), !dbg !2816
  call void @llvm.dbg.value(metadata i8* %1, metadata !2813, metadata !DIExpression()), !dbg !2816
  call void @llvm.dbg.value(metadata i32 %2, metadata !2814, metadata !DIExpression()), !dbg !2816
  call void @llvm.dbg.value(metadata i32 %3, metadata !2815, metadata !DIExpression()), !dbg !2816
  %5 = icmp eq i8 %0, 0, !dbg !2817
  br i1 %5, label %12, label %6, !dbg !2819

6:                                                ; preds = %4
  %7 = bitcast i8* %1 to void (i8, i8*)**, !dbg !2820
  %8 = load void (i8, i8*)*, void (i8, i8*)** %7, align 4, !dbg !2820, !tbaa !2822
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !2824
  %10 = bitcast i8* %9 to i8**, !dbg !2824
  %11 = load i8*, i8** %10, align 4, !dbg !2824, !tbaa !2825
  call void %8(i8 noundef zeroext %0, i8* noundef %11) #34, !dbg !2826
  br label %12, !dbg !2827

12:                                               ; preds = %6, %4
  ret void, !dbg !2828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define internal fastcc zeroext i1 @_is_digit(i8 noundef zeroext %0) unnamed_addr #11 !dbg !2829 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2833, metadata !DIExpression()), !dbg !2834
  %2 = add i8 %0, -48, !dbg !2835
  %3 = icmp ult i8 %2, 10, !dbg !2835
  ret i1 %3, !dbg !2836
}

; Function Attrs: nofree noinline norecurse nosync nounwind
define internal fastcc i32 @_atoi(i8** nocapture noundef %0) unnamed_addr #12 !dbg !2837 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !2842, metadata !DIExpression()), !dbg !2844
  call void @llvm.dbg.value(metadata i32 0, metadata !2843, metadata !DIExpression()), !dbg !2844
  %2 = load i8*, i8** %0, align 4, !dbg !2845, !tbaa !2495
  %3 = load i8, i8* %2, align 1, !dbg !2846, !tbaa !2505
  %4 = call fastcc zeroext i1 @_is_digit(i8 noundef zeroext %3), !dbg !2847
  br i1 %4, label %5, label %16, !dbg !2848

5:                                                ; preds = %1, %5
  %6 = phi i8* [ %9, %5 ], [ %2, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !2843, metadata !DIExpression()), !dbg !2844
  %8 = mul i32 %7, 10, !dbg !2849
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !2851
  store i8* %9, i8** %0, align 4, !dbg !2851, !tbaa !2495
  %10 = load i8, i8* %6, align 1, !dbg !2852, !tbaa !2505
  %11 = zext i8 %10 to i32, !dbg !2852
  %12 = add i32 %8, -48, !dbg !2853
  %13 = add i32 %12, %11, !dbg !2854
  call void @llvm.dbg.value(metadata i32 %13, metadata !2843, metadata !DIExpression()), !dbg !2844
  %14 = load i8, i8* %9, align 1, !dbg !2846, !tbaa !2505
  %15 = call fastcc zeroext i1 @_is_digit(i8 noundef zeroext %14), !dbg !2847
  br i1 %15, label %5, label %16, !dbg !2848, !llvm.loop !2855

16:                                               ; preds = %5, %1
  %17 = phi i32 [ 0, %1 ], [ %13, %5 ], !dbg !2844
  ret i32 %17, !dbg !2857
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.abs.i64(i64, i1 immarg) #1

; Function Attrs: noinline nounwind
define internal fastcc i32 @_ntoa_long_long(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i64 noundef %4, i1 noundef zeroext %5, i64 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %9) unnamed_addr #9 !dbg !2858 {
  %11 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !2862, metadata !DIExpression()), !dbg !2878
  call void @llvm.dbg.value(metadata i8* %1, metadata !2863, metadata !DIExpression()), !dbg !2878
  call void @llvm.dbg.value(metadata i32 %2, metadata !2864, metadata !DIExpression()), !dbg !2878
  call void @llvm.dbg.value(metadata i32 %3, metadata !2865, metadata !DIExpression()), !dbg !2878
  call void @llvm.dbg.value(metadata i64 %4, metadata !2866, metadata !DIExpression()), !dbg !2878
  call void @llvm.dbg.value(metadata i1 %5, metadata !2867, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2878
  call void @llvm.dbg.value(metadata i64 %6, metadata !2868, metadata !DIExpression()), !dbg !2878
  call void @llvm.dbg.value(metadata i32 %7, metadata !2869, metadata !DIExpression()), !dbg !2878
  call void @llvm.dbg.value(metadata i32 %8, metadata !2870, metadata !DIExpression()), !dbg !2878
  call void @llvm.dbg.value(metadata i32 %9, metadata !2871, metadata !DIExpression()), !dbg !2878
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 0, !dbg !2879
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #34, !dbg !2879
  call void @llvm.dbg.declare(metadata [32 x i8]* %11, metadata !2872, metadata !DIExpression()), !dbg !2880
  call void @llvm.dbg.value(metadata i32 0, metadata !2873, metadata !DIExpression()), !dbg !2878
  %13 = icmp ne i64 %4, 0, !dbg !2881
  %14 = and i32 %9, -17
  %15 = select i1 %13, i32 %9, i32 %14, !dbg !2883
  call void @llvm.dbg.value(metadata i32 %15, metadata !2871, metadata !DIExpression()), !dbg !2878
  %16 = and i32 %15, 1024, !dbg !2884
  %17 = icmp eq i32 %16, 0, !dbg !2884
  %18 = or i1 %13, %17, !dbg !2885
  br i1 %18, label %19, label %41, !dbg !2885

19:                                               ; preds = %10
  %20 = and i32 %15, 32
  %21 = xor i32 %20, 97
  %22 = add nuw nsw i32 %21, 246
  br label %23, !dbg !2886

23:                                               ; preds = %19, %23
  %24 = phi i32 [ %36, %23 ], [ 0, %19 ], !dbg !2878
  %25 = phi i64 [ %27, %23 ], [ %4, %19 ]
  call void @llvm.dbg.value(metadata i64 %25, metadata !2866, metadata !DIExpression()), !dbg !2878
  call void @llvm.dbg.value(metadata i32 %24, metadata !2873, metadata !DIExpression()), !dbg !2878
  %26 = freeze i64 %25
  %27 = udiv i64 %26, %6, !dbg !2887
  %28 = mul i64 %27, %6
  %29 = sub i64 %26, %28
  %30 = trunc i64 %29 to i32, !dbg !2888
  %31 = and i32 %30, 254, !dbg !2889
  call void @llvm.dbg.value(metadata i32 %30, metadata !2874, metadata !DIExpression()), !dbg !2890
  %32 = icmp ult i32 %31, 10, !dbg !2891
  %33 = select i1 %32, i32 48, i32 %22, !dbg !2889
  %34 = add i32 %33, %30, !dbg !2889
  %35 = trunc i32 %34 to i8, !dbg !2889
  %36 = add nuw nsw i32 %24, 1, !dbg !2892
  call void @llvm.dbg.value(metadata i32 %36, metadata !2873, metadata !DIExpression()), !dbg !2878
  %37 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 %24, !dbg !2893
  store i8 %35, i8* %37, align 1, !dbg !2894, !tbaa !2505
  call void @llvm.dbg.value(metadata i64 %27, metadata !2866, metadata !DIExpression()), !dbg !2878
  %38 = icmp uge i64 %25, %6, !dbg !2895
  %39 = icmp ult i32 %24, 31, !dbg !2896
  %40 = select i1 %38, i1 %39, i1 false, !dbg !2896
  br i1 %40, label %23, label %41, !dbg !2897, !llvm.loop !2898

41:                                               ; preds = %23, %10
  %42 = phi i32 [ 0, %10 ], [ %36, %23 ], !dbg !2878
  call void @llvm.dbg.value(metadata i32 %42, metadata !2873, metadata !DIExpression()), !dbg !2878
  %43 = trunc i64 %6 to i32, !dbg !2900
  %44 = call fastcc i32 @_ntoa_format(void (i8, i8*, i32, i32)* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef nonnull %12, i32 noundef %42, i1 noundef zeroext %5, i32 noundef %43, i32 noundef %7, i32 noundef %8, i32 noundef %15), !dbg !2901
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #34, !dbg !2902
  ret i32 %44, !dbg !2903
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #1

; Function Attrs: noinline nounwind
define internal fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i1 noundef zeroext %5, i32 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %9) unnamed_addr #9 !dbg !2904 {
  %11 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !2908, metadata !DIExpression()), !dbg !2924
  call void @llvm.dbg.value(metadata i8* %1, metadata !2909, metadata !DIExpression()), !dbg !2924
  call void @llvm.dbg.value(metadata i32 %2, metadata !2910, metadata !DIExpression()), !dbg !2924
  call void @llvm.dbg.value(metadata i32 %3, metadata !2911, metadata !DIExpression()), !dbg !2924
  call void @llvm.dbg.value(metadata i32 %4, metadata !2912, metadata !DIExpression()), !dbg !2924
  call void @llvm.dbg.value(metadata i1 %5, metadata !2913, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2924
  call void @llvm.dbg.value(metadata i32 %6, metadata !2914, metadata !DIExpression()), !dbg !2924
  call void @llvm.dbg.value(metadata i32 %7, metadata !2915, metadata !DIExpression()), !dbg !2924
  call void @llvm.dbg.value(metadata i32 %8, metadata !2916, metadata !DIExpression()), !dbg !2924
  call void @llvm.dbg.value(metadata i32 %9, metadata !2917, metadata !DIExpression()), !dbg !2924
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 0, !dbg !2925
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #34, !dbg !2925
  call void @llvm.dbg.declare(metadata [32 x i8]* %11, metadata !2918, metadata !DIExpression()), !dbg !2926
  call void @llvm.dbg.value(metadata i32 0, metadata !2919, metadata !DIExpression()), !dbg !2924
  %13 = icmp ne i32 %4, 0, !dbg !2927
  %14 = and i32 %9, -17
  %15 = select i1 %13, i32 %9, i32 %14, !dbg !2929
  call void @llvm.dbg.value(metadata i32 %15, metadata !2917, metadata !DIExpression()), !dbg !2924
  %16 = and i32 %15, 1024, !dbg !2930
  %17 = icmp eq i32 %16, 0, !dbg !2930
  %18 = or i1 %13, %17, !dbg !2931
  br i1 %18, label %19, label %40, !dbg !2931

19:                                               ; preds = %10
  %20 = and i32 %15, 32
  %21 = xor i32 %20, 97
  %22 = add nuw nsw i32 %21, 246
  br label %23, !dbg !2932

23:                                               ; preds = %19, %23
  %24 = phi i32 [ %35, %23 ], [ 0, %19 ], !dbg !2924
  %25 = phi i32 [ %27, %23 ], [ %4, %19 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !2912, metadata !DIExpression()), !dbg !2924
  call void @llvm.dbg.value(metadata i32 %24, metadata !2919, metadata !DIExpression()), !dbg !2924
  %26 = freeze i32 %25
  %27 = udiv i32 %26, %6, !dbg !2933
  %28 = mul i32 %27, %6
  %29 = sub i32 %26, %28
  %30 = and i32 %29, 254, !dbg !2934
  call void @llvm.dbg.value(metadata i32 %29, metadata !2920, metadata !DIExpression()), !dbg !2935
  %31 = icmp ult i32 %30, 10, !dbg !2936
  %32 = select i1 %31, i32 48, i32 %22, !dbg !2934
  %33 = add i32 %29, %32, !dbg !2934
  %34 = trunc i32 %33 to i8, !dbg !2934
  %35 = add nuw nsw i32 %24, 1, !dbg !2937
  call void @llvm.dbg.value(metadata i32 %35, metadata !2919, metadata !DIExpression()), !dbg !2924
  %36 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 %24, !dbg !2938
  store i8 %34, i8* %36, align 1, !dbg !2939, !tbaa !2505
  call void @llvm.dbg.value(metadata i32 %27, metadata !2912, metadata !DIExpression()), !dbg !2924
  %37 = icmp uge i32 %25, %6, !dbg !2940
  %38 = icmp ult i32 %24, 31, !dbg !2941
  %39 = select i1 %37, i1 %38, i1 false, !dbg !2941
  br i1 %39, label %23, label %40, !dbg !2942, !llvm.loop !2943

40:                                               ; preds = %23, %10
  %41 = phi i32 [ 0, %10 ], [ %35, %23 ], !dbg !2924
  call void @llvm.dbg.value(metadata i32 %41, metadata !2919, metadata !DIExpression()), !dbg !2924
  %42 = call fastcc i32 @_ntoa_format(void (i8, i8*, i32, i32)* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef nonnull %12, i32 noundef %41, i1 noundef zeroext %5, i32 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %15), !dbg !2945
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #34, !dbg !2946
  ret i32 %42, !dbg !2947
}

; Function Attrs: noinline nounwind
define internal fastcc i32 @_ftoa(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, double noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7) unnamed_addr #9 !dbg !251 {
  %9 = alloca [32 x i8], align 1
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 0, !dbg !2948
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !276, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i8* %1, metadata !277, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i32 %2, metadata !278, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i32 %3, metadata !279, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata double %4, metadata !280, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i32 %5, metadata !281, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i32 %6, metadata !282, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i32 %7, metadata !283, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i32 %2, metadata !284, metadata !DIExpression()), !dbg !2948
  %11 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 0, !dbg !2949
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #34, !dbg !2949
  call void @llvm.dbg.declare(metadata [32 x i8]* %9, metadata !286, metadata !DIExpression()), !dbg !2950
  call void @llvm.dbg.value(metadata i32 0, metadata !290, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !291, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata double 0x41DFFFFFFFC00000, metadata !292, metadata !DIExpression()), !dbg !2948
  %12 = fcmp uno double %4, 0.000000e+00, !dbg !2951
  br i1 %12, label %13, label %17, !dbg !2953

13:                                               ; preds = %8
  %14 = add i32 %2, 1, !dbg !2954
  call void @llvm.dbg.value(metadata i32 %14, metadata !278, metadata !DIExpression()), !dbg !2948
  call void %0(i8 noundef zeroext 110, i8* noundef %1, i32 noundef %2, i32 noundef %3) #34, !dbg !2956, !callees !2510
  %15 = add i32 %2, 2, !dbg !2957
  call void @llvm.dbg.value(metadata i32 %15, metadata !278, metadata !DIExpression()), !dbg !2948
  call void %0(i8 noundef zeroext 97, i8* noundef %1, i32 noundef %14, i32 noundef %3) #34, !dbg !2958, !callees !2510
  %16 = add i32 %2, 3, !dbg !2959
  call void @llvm.dbg.value(metadata i32 %16, metadata !278, metadata !DIExpression()), !dbg !2948
  call void %0(i8 noundef zeroext 110, i8* noundef %1, i32 noundef %15, i32 noundef %3) #34, !dbg !2960, !callees !2510
  br label %221, !dbg !2961

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i8 0, metadata !294, metadata !DIExpression()), !dbg !2948
  %18 = fcmp olt double %4, 0.000000e+00, !dbg !2962
  %19 = fsub double 0.000000e+00, %4, !dbg !2964
  %20 = select i1 %18, double %19, double %4, !dbg !2964
  call void @llvm.dbg.value(metadata i8 poison, metadata !294, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata double %20, metadata !280, metadata !DIExpression()), !dbg !2948
  %21 = and i32 %7, 1024, !dbg !2965
  %22 = icmp eq i32 %21, 0, !dbg !2965
  %23 = select i1 %22, i32 6, i32 %5, !dbg !2967
  call void @llvm.dbg.value(metadata i32 %23, metadata !281, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i32 0, metadata !290, metadata !DIExpression()), !dbg !2948
  %24 = icmp ugt i32 %23, 9, !dbg !2968
  br i1 %24, label %25, label %39, !dbg !2969

25:                                               ; preds = %17
  %26 = add i32 %23, -10, !dbg !2969
  %27 = call i32 @llvm.umin.i32(i32 %26, i32 31), !dbg !2969
  %28 = add nuw nsw i32 %27, 1, !dbg !2969
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 %10, i8 48, i32 %28, i1 false), !dbg !2970, !tbaa !2505
  %29 = call i32 @llvm.umin.i32(i32 %26, i32 31), !dbg !2969
  %30 = add nuw nsw i32 %29, 1, !dbg !2969
  br label %31, !dbg !2969

31:                                               ; preds = %25, %31
  %32 = phi i32 [ %34, %31 ], [ 0, %25 ]
  %33 = phi i32 [ %35, %31 ], [ %23, %25 ]
  call void @llvm.dbg.value(metadata i32 %32, metadata !290, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i32 %33, metadata !281, metadata !DIExpression()), !dbg !2948
  %34 = add nuw nsw i32 %32, 1, !dbg !2972
  call void @llvm.dbg.value(metadata i32 %34, metadata !290, metadata !DIExpression()), !dbg !2948
  %35 = add i32 %33, -1, !dbg !2973
  call void @llvm.dbg.value(metadata i32 %35, metadata !281, metadata !DIExpression()), !dbg !2948
  %36 = icmp eq i32 %32, %29, !dbg !2968
  br i1 %36, label %37, label %31, !dbg !2969, !llvm.loop !2974

37:                                               ; preds = %31
  %38 = icmp ult i32 %32, 31, !dbg !2976
  br label %39, !dbg !2977

39:                                               ; preds = %37, %17
  %40 = phi i32 [ %23, %17 ], [ %35, %37 ]
  %41 = phi i32 [ 0, %17 ], [ %30, %37 ], !dbg !2948
  %42 = phi i1 [ true, %17 ], [ %38, %37 ], !dbg !2976
  %43 = fptosi double %20 to i32, !dbg !2977
  call void @llvm.dbg.value(metadata i32 %43, metadata !296, metadata !DIExpression()), !dbg !2948
  %44 = sitofp i32 %43 to double, !dbg !2978
  %45 = fsub double %20, %44, !dbg !2979
  %46 = getelementptr inbounds [10 x double], [10 x double]* @_ftoa.pow10, i32 0, i32 %40, !dbg !2980
  %47 = load double, double* %46, align 8, !dbg !2980, !tbaa !2981
  %48 = fmul double %45, %47, !dbg !2983
  call void @llvm.dbg.value(metadata double %48, metadata !297, metadata !DIExpression()), !dbg !2948
  %49 = fptoui double %48 to i32, !dbg !2984
  call void @llvm.dbg.value(metadata i32 %49, metadata !298, metadata !DIExpression()), !dbg !2948
  %50 = uitofp i32 %49 to double, !dbg !2985
  %51 = fsub double %48, %50, !dbg !2986
  call void @llvm.dbg.value(metadata double %51, metadata !291, metadata !DIExpression()), !dbg !2948
  %52 = fcmp ogt double %51, 5.000000e-01, !dbg !2987
  br i1 %52, label %53, label %59, !dbg !2989

53:                                               ; preds = %39
  %54 = add i32 %49, 1, !dbg !2990
  call void @llvm.dbg.value(metadata i32 %54, metadata !298, metadata !DIExpression()), !dbg !2948
  %55 = uitofp i32 %54 to double, !dbg !2992
  %56 = fcmp ugt double %47, %55, !dbg !2994
  br i1 %56, label %68, label %57, !dbg !2995

57:                                               ; preds = %53
  call void @llvm.dbg.value(metadata i32 0, metadata !298, metadata !DIExpression()), !dbg !2948
  %58 = add nsw i32 %43, 1, !dbg !2996
  call void @llvm.dbg.value(metadata i32 %58, metadata !296, metadata !DIExpression()), !dbg !2948
  br label %68, !dbg !2998

59:                                               ; preds = %39
  %60 = fcmp olt double %51, 5.000000e-01, !dbg !2999
  br i1 %60, label %68, label %61, !dbg !3001

61:                                               ; preds = %59
  %62 = icmp eq i32 %49, 0, !dbg !3002
  %63 = and i32 %49, 1
  %64 = icmp ne i32 %63, 0
  %65 = or i1 %62, %64, !dbg !3004
  %66 = zext i1 %65 to i32, !dbg !3004
  %67 = add i32 %66, %49, !dbg !3004
  br label %68, !dbg !3004

68:                                               ; preds = %61, %59, %53, %57
  %69 = phi i32 [ %58, %57 ], [ %43, %53 ], [ %43, %59 ], [ %43, %61 ], !dbg !2948
  %70 = phi i32 [ 0, %57 ], [ %54, %53 ], [ %49, %59 ], [ %67, %61 ], !dbg !2948
  call void @llvm.dbg.value(metadata i32 %70, metadata !298, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i32 %69, metadata !296, metadata !DIExpression()), !dbg !2948
  %71 = fcmp ogt double %20, 0x41DFFFFFFFC00000, !dbg !3005
  br i1 %71, label %221, label %72, !dbg !3007

72:                                               ; preds = %68
  %73 = icmp eq i32 %40, 0, !dbg !3008
  br i1 %73, label %74, label %83, !dbg !3009

74:                                               ; preds = %72
  %75 = sitofp i32 %69 to double, !dbg !3010
  %76 = fsub double %20, %75, !dbg !3012
  call void @llvm.dbg.value(metadata double %76, metadata !291, metadata !DIExpression()), !dbg !2948
  %77 = fcmp uge double %76, 5.000000e-01, !dbg !3013
  %78 = and i32 %69, 1
  %79 = icmp ne i32 %78, 0
  %80 = select i1 %77, i1 %79, i1 false, !dbg !3013
  %81 = zext i1 %80 to i32, !dbg !3013
  %82 = add nsw i32 %69, %81, !dbg !3013
  br label %123, !dbg !3013

83:                                               ; preds = %72
  call void @llvm.dbg.value(metadata i32 %40, metadata !299, metadata !DIExpression()), !dbg !3015
  br i1 %42, label %84, label %100, !dbg !3016

84:                                               ; preds = %83, %84
  %85 = phi i32 [ %95, %84 ], [ %41, %83 ], !dbg !2948
  %86 = phi i32 [ %90, %84 ], [ %70, %83 ], !dbg !2948
  %87 = phi i32 [ %88, %84 ], [ %40, %83 ], !dbg !3015
  call void @llvm.dbg.value(metadata i32 %87, metadata !299, metadata !DIExpression()), !dbg !3015
  call void @llvm.dbg.value(metadata i32 %86, metadata !298, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i32 %85, metadata !290, metadata !DIExpression()), !dbg !2948
  %88 = add i32 %87, -1, !dbg !3017
  call void @llvm.dbg.value(metadata i32 %88, metadata !299, metadata !DIExpression()), !dbg !3015
  %89 = freeze i32 %86
  %90 = udiv i32 %89, 10, !dbg !3019
  %91 = mul i32 %90, 10
  %92 = sub i32 %89, %91
  %93 = trunc i32 %92 to i8, !dbg !3021
  %94 = or i8 %93, 48, !dbg !3021
  %95 = add nuw nsw i32 %85, 1, !dbg !3022
  call void @llvm.dbg.value(metadata i32 %95, metadata !290, metadata !DIExpression()), !dbg !2948
  %96 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %85, !dbg !3023
  store i8 %94, i8* %96, align 1, !dbg !3024, !tbaa !2505
  call void @llvm.dbg.value(metadata i32 %90, metadata !298, metadata !DIExpression()), !dbg !2948
  %97 = icmp ugt i32 %86, 9, !dbg !3019
  %98 = icmp ult i32 %85, 31
  %99 = select i1 %97, i1 %98, i1 false, !dbg !3025
  br i1 %99, label %84, label %100, !dbg !3025, !llvm.loop !3026

100:                                              ; preds = %84, %83
  %101 = phi i32 [ %41, %83 ], [ %95, %84 ], !dbg !2948
  %102 = phi i32 [ %40, %83 ], [ %88, %84 ], !dbg !3015
  call void @llvm.dbg.value(metadata i32 %102, metadata !299, metadata !DIExpression()), !dbg !3015
  call void @llvm.dbg.value(metadata i32 %101, metadata !290, metadata !DIExpression()), !dbg !2948
  %103 = icmp ult i32 %101, 32, !dbg !3028
  %104 = xor i1 %103, true, !dbg !3029
  %105 = icmp eq i32 %102, 0
  %106 = select i1 %104, i1 true, i1 %105, !dbg !3029
  call void @llvm.dbg.value(metadata i32 %102, metadata !299, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3015
  br i1 %106, label %117, label %107, !dbg !3029

107:                                              ; preds = %100, %107
  %108 = phi i32 [ %110, %107 ], [ %102, %100 ]
  %109 = phi i32 [ %111, %107 ], [ %101, %100 ]
  call void @llvm.dbg.value(metadata i32 %108, metadata !299, metadata !DIExpression()), !dbg !3015
  call void @llvm.dbg.value(metadata i32 %109, metadata !290, metadata !DIExpression()), !dbg !2948
  %110 = add i32 %108, -1, !dbg !3030
  call void @llvm.dbg.value(metadata i32 %110, metadata !299, metadata !DIExpression()), !dbg !3015
  %111 = add i32 %109, 1, !dbg !3031
  call void @llvm.dbg.value(metadata i32 %111, metadata !290, metadata !DIExpression()), !dbg !2948
  %112 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %109, !dbg !3033
  store i8 48, i8* %112, align 1, !dbg !3034, !tbaa !2505
  %113 = icmp ult i32 %111, 32, !dbg !3028
  %114 = xor i1 %113, true, !dbg !3029
  %115 = icmp eq i32 %110, 0
  %116 = select i1 %114, i1 true, i1 %115, !dbg !3029
  call void @llvm.dbg.value(metadata i32 %110, metadata !299, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3015
  br i1 %116, label %117, label %107, !dbg !3029, !llvm.loop !3035

117:                                              ; preds = %107, %100
  %118 = phi i32 [ %101, %100 ], [ %111, %107 ], !dbg !3015
  %119 = phi i1 [ %103, %100 ], [ %113, %107 ], !dbg !3028
  br i1 %119, label %120, label %123, !dbg !3038

120:                                              ; preds = %117
  %121 = add i32 %118, 1, !dbg !3039
  call void @llvm.dbg.value(metadata i32 %121, metadata !290, metadata !DIExpression()), !dbg !2948
  %122 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %118, !dbg !3042
  store i8 46, i8* %122, align 1, !dbg !3043, !tbaa !2505
  br label %123, !dbg !3044

123:                                              ; preds = %74, %117, %120
  %124 = phi i32 [ %121, %120 ], [ %118, %117 ], [ %41, %74 ], !dbg !2948
  %125 = phi i32 [ %69, %120 ], [ %69, %117 ], [ %82, %74 ], !dbg !2948
  call void @llvm.dbg.value(metadata i32 %125, metadata !296, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i32 %124, metadata !290, metadata !DIExpression()), !dbg !2948
  %126 = icmp ult i32 %124, 32, !dbg !3045
  br i1 %126, label %127, label %142, !dbg !3046

127:                                              ; preds = %123, %127
  %128 = phi i32 [ %136, %127 ], [ %124, %123 ], !dbg !2948
  %129 = phi i32 [ %131, %127 ], [ %125, %123 ], !dbg !2948
  call void @llvm.dbg.value(metadata i32 %129, metadata !296, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i32 %128, metadata !290, metadata !DIExpression()), !dbg !2948
  %130 = freeze i32 %129
  %131 = sdiv i32 %130, 10, !dbg !3047
  %132 = mul i32 %131, 10
  %133 = sub i32 %130, %132
  %134 = trunc i32 %133 to i8, !dbg !3050
  %135 = add i8 %134, 48, !dbg !3050
  %136 = add nuw nsw i32 %128, 1, !dbg !3051
  call void @llvm.dbg.value(metadata i32 %136, metadata !290, metadata !DIExpression()), !dbg !2948
  %137 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %128, !dbg !3052
  store i8 %135, i8* %137, align 1, !dbg !3053, !tbaa !2505
  call void @llvm.dbg.value(metadata i32 %131, metadata !296, metadata !DIExpression()), !dbg !2948
  %138 = add i32 %129, -10, !dbg !3047
  %139 = icmp ult i32 %138, -19, !dbg !3047
  %140 = icmp ult i32 %128, 31
  %141 = select i1 %139, i1 %140, i1 false, !dbg !3054
  br i1 %141, label %127, label %142, !dbg !3054, !llvm.loop !3055

142:                                              ; preds = %127, %123
  %143 = phi i32 [ %124, %123 ], [ %136, %127 ], !dbg !2948
  call void @llvm.dbg.value(metadata i32 %143, metadata !290, metadata !DIExpression()), !dbg !2948
  %144 = and i32 %7, 2, !dbg !3057
  %145 = icmp ne i32 %144, 0, !dbg !3057
  %146 = and i32 %7, 3, !dbg !3059
  %147 = icmp eq i32 %146, 1, !dbg !3059
  br i1 %147, label %148, label %171, !dbg !3059

148:                                              ; preds = %142
  %149 = icmp eq i32 %6, 0, !dbg !3060
  br i1 %149, label %156, label %150, !dbg !3063

150:                                              ; preds = %148
  %151 = and i32 %7, 12
  %152 = icmp ne i32 %151, 0
  %153 = or i1 %18, %152, !dbg !3064
  %154 = sext i1 %153 to i32, !dbg !3064
  %155 = add i32 %154, %6, !dbg !3064
  br label %156, !dbg !3064

156:                                              ; preds = %150, %148
  %157 = phi i32 [ 0, %148 ], [ %155, %150 ]
  call void @llvm.dbg.value(metadata i32 %157, metadata !282, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i32 %143, metadata !290, metadata !DIExpression()), !dbg !2948
  %158 = icmp ult i32 %143, %157, !dbg !3065
  %159 = icmp ult i32 %143, 32, !dbg !3066
  %160 = and i1 %158, %159, !dbg !3066
  br i1 %160, label %161, label %171, !dbg !3067

161:                                              ; preds = %156
  %162 = getelementptr [32 x i8], [32 x i8]* %9, i32 0, i32 %143, !dbg !3067
  %163 = xor i32 %143, -1, !dbg !3067
  %164 = add i32 %157, %163, !dbg !3067
  %165 = sub i32 31, %143, !dbg !3067
  %166 = call i32 @llvm.umin.i32(i32 %164, i32 %165), !dbg !3067
  %167 = add nuw i32 %166, 1, !dbg !3067
  call void @llvm.memset.p0i8.i32(i8* align 1 %162, i8 48, i32 %167, i1 false), !dbg !3068, !tbaa !2505
  %168 = call i32 @llvm.umin.i32(i32 %164, i32 %165), !dbg !3067
  %169 = add i32 %143, %168, !dbg !3067
  call void @llvm.dbg.value(metadata i32 undef, metadata !290, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i32 undef, metadata !290, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2948
  %170 = add i32 %169, 1, !dbg !3067
  br label %171, !dbg !3070

171:                                              ; preds = %161, %156, %142
  %172 = phi i32 [ %6, %142 ], [ %157, %156 ], [ %157, %161 ]
  %173 = phi i32 [ %143, %142 ], [ %143, %156 ], [ %170, %161 ], !dbg !3051
  call void @llvm.dbg.value(metadata i32 %173, metadata !290, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i32 %172, metadata !282, metadata !DIExpression()), !dbg !2948
  %174 = icmp ult i32 %173, 32, !dbg !3070
  br i1 %174, label %175, label %186, !dbg !3072

175:                                              ; preds = %171
  br i1 %18, label %182, label %176, !dbg !3073

176:                                              ; preds = %175
  %177 = and i32 %7, 4, !dbg !3075
  %178 = icmp eq i32 %177, 0, !dbg !3075
  br i1 %178, label %179, label %182, !dbg !3078

179:                                              ; preds = %176
  %180 = and i32 %7, 8, !dbg !3079
  %181 = icmp eq i32 %180, 0, !dbg !3079
  br i1 %181, label %186, label %182, !dbg !3081

182:                                              ; preds = %179, %176, %175
  %183 = phi i8 [ 45, %175 ], [ 43, %176 ], [ 32, %179 ]
  %184 = add i32 %173, 1, !dbg !3082
  %185 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %173, !dbg !3082
  store i8 %183, i8* %185, align 1, !dbg !3082, !tbaa !2505
  br label %186, !dbg !3083

186:                                              ; preds = %182, %179, %171
  %187 = phi i32 [ %173, %179 ], [ %173, %171 ], [ %184, %182 ], !dbg !2948
  call void @llvm.dbg.value(metadata i32 %187, metadata !290, metadata !DIExpression()), !dbg !2948
  %188 = and i32 %7, 3, !dbg !3083
  %189 = icmp eq i32 %188, 0, !dbg !3083
  %190 = icmp ult i32 %187, %172
  %191 = select i1 %189, i1 %190, i1 false, !dbg !3083
  call void @llvm.dbg.value(metadata i32 %187, metadata !302, metadata !DIExpression()), !dbg !3084
  call void @llvm.dbg.value(metadata i32 %2, metadata !278, metadata !DIExpression()), !dbg !2948
  br i1 %191, label %192, label %198, !dbg !3083

192:                                              ; preds = %186, %192
  %193 = phi i32 [ %196, %192 ], [ %187, %186 ]
  %194 = phi i32 [ %195, %192 ], [ %2, %186 ]
  call void @llvm.dbg.value(metadata i32 %193, metadata !302, metadata !DIExpression()), !dbg !3084
  call void @llvm.dbg.value(metadata i32 %194, metadata !278, metadata !DIExpression()), !dbg !2948
  %195 = add i32 %194, 1, !dbg !3085
  call void @llvm.dbg.value(metadata i32 %195, metadata !278, metadata !DIExpression()), !dbg !2948
  call void %0(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %194, i32 noundef %3) #34, !dbg !3088, !callees !2510
  %196 = add nuw i32 %193, 1, !dbg !3089
  call void @llvm.dbg.value(metadata i32 %196, metadata !302, metadata !DIExpression()), !dbg !3084
  %197 = icmp eq i32 %196, %172, !dbg !3090
  br i1 %197, label %198, label %192, !dbg !3091, !llvm.loop !3092

198:                                              ; preds = %192, %186
  %199 = phi i32 [ %2, %186 ], [ %195, %192 ]
  call void @llvm.dbg.value(metadata i32 %199, metadata !278, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i32 0, metadata !306, metadata !DIExpression()), !dbg !3094
  %200 = icmp eq i32 %187, 0, !dbg !3095
  br i1 %200, label %201, label %206, !dbg !3097

201:                                              ; preds = %206, %198
  %202 = phi i32 [ %199, %198 ], [ %213, %206 ]
  %203 = sub i32 %202, %2
  %204 = icmp ult i32 %203, %172
  %205 = select i1 %145, i1 %204, i1 false, !dbg !3098
  call void @llvm.dbg.value(metadata i32 %202, metadata !278, metadata !DIExpression()), !dbg !2948
  br i1 %205, label %216, label %221, !dbg !3098

206:                                              ; preds = %198, %206
  %207 = phi i32 [ %214, %206 ], [ 0, %198 ]
  %208 = phi i32 [ %213, %206 ], [ %199, %198 ]
  call void @llvm.dbg.value(metadata i32 %207, metadata !306, metadata !DIExpression()), !dbg !3094
  call void @llvm.dbg.value(metadata i32 %208, metadata !278, metadata !DIExpression()), !dbg !2948
  %209 = xor i32 %207, -1, !dbg !3099
  %210 = add i32 %187, %209, !dbg !3099
  %211 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %210, !dbg !3101
  %212 = load i8, i8* %211, align 1, !dbg !3101, !tbaa !2505
  %213 = add i32 %208, 1, !dbg !3102
  call void @llvm.dbg.value(metadata i32 %213, metadata !278, metadata !DIExpression()), !dbg !2948
  call void %0(i8 noundef zeroext %212, i8* noundef %1, i32 noundef %208, i32 noundef %3) #34, !dbg !3103, !callees !2510
  %214 = add nuw i32 %207, 1, !dbg !3104
  call void @llvm.dbg.value(metadata i32 %214, metadata !306, metadata !DIExpression()), !dbg !3094
  %215 = icmp eq i32 %214, %187, !dbg !3095
  br i1 %215, label %201, label %206, !dbg !3097, !llvm.loop !3105

216:                                              ; preds = %201, %216
  %217 = phi i32 [ %218, %216 ], [ %202, %201 ]
  call void @llvm.dbg.value(metadata i32 %217, metadata !278, metadata !DIExpression()), !dbg !2948
  %218 = add i32 %217, 1, !dbg !3107
  call void @llvm.dbg.value(metadata i32 %218, metadata !278, metadata !DIExpression()), !dbg !2948
  call void %0(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %217, i32 noundef %3) #34, !dbg !3111, !callees !2510
  %219 = sub i32 %218, %2, !dbg !3112
  %220 = icmp ult i32 %219, %172, !dbg !3113
  br i1 %220, label %216, label %221, !dbg !3114, !llvm.loop !3115

221:                                              ; preds = %216, %68, %201, %13
  %222 = phi i32 [ %16, %13 ], [ 0, %68 ], [ %202, %201 ], [ %218, %216 ], !dbg !2948
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #34, !dbg !3117
  ret i32 %222, !dbg !3117
}

; Function Attrs: nofree noinline norecurse nosync nounwind readonly
define internal fastcc i32 @_strnlen_s(i8* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !3118 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3122, metadata !DIExpression()), !dbg !3125
  call void @llvm.dbg.value(metadata i32 %1, metadata !3123, metadata !DIExpression()), !dbg !3125
  call void @llvm.dbg.value(metadata i8* %0, metadata !3124, metadata !DIExpression()), !dbg !3125
  %3 = load i8, i8* %0, align 1, !dbg !3126, !tbaa !2505
  %4 = icmp eq i8 %3, 0, !dbg !3126
  %5 = icmp eq i32 %1, 0, !dbg !3129
  %6 = or i1 %4, %5, !dbg !3129
  call void @llvm.dbg.value(metadata i32 %1, metadata !3123, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3125
  br i1 %6, label %16, label %7, !dbg !3129

7:                                                ; preds = %2, %7
  %8 = phi i8* [ %11, %7 ], [ %0, %2 ]
  %9 = phi i32 [ %10, %7 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %8, metadata !3124, metadata !DIExpression()), !dbg !3125
  call void @llvm.dbg.value(metadata i32 %9, metadata !3123, metadata !DIExpression()), !dbg !3125
  %10 = add i32 %9, -1, !dbg !3130
  call void @llvm.dbg.value(metadata i32 %10, metadata !3123, metadata !DIExpression()), !dbg !3125
  %11 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !3131
  call void @llvm.dbg.value(metadata i8* %11, metadata !3124, metadata !DIExpression()), !dbg !3125
  %12 = load i8, i8* %11, align 1, !dbg !3126, !tbaa !2505
  %13 = icmp eq i8 %12, 0, !dbg !3126
  %14 = icmp eq i32 %10, 0, !dbg !3129
  %15 = select i1 %13, i1 true, i1 %14, !dbg !3129
  call void @llvm.dbg.value(metadata i32 %10, metadata !3123, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3125
  br i1 %15, label %16, label %7, !dbg !3129, !llvm.loop !3132

16:                                               ; preds = %7, %2
  %17 = phi i8* [ %0, %2 ], [ %11, %7 ], !dbg !3135
  %18 = ptrtoint i8* %17 to i32, !dbg !3136
  %19 = ptrtoint i8* %0 to i32, !dbg !3136
  %20 = sub i32 %18, %19, !dbg !3136
  ret i32 %20, !dbg !3137
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #1

; Function Attrs: noinline nounwind
define internal fastcc i32 @_ntoa_format(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* nocapture noundef %4, i32 noundef %5, i1 noundef zeroext %6, i32 noundef %7, i32 noundef %8, i32 noundef %9, i32 noundef %10) unnamed_addr #9 !dbg !3138 {
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !3142, metadata !DIExpression()), !dbg !3160
  call void @llvm.dbg.value(metadata i8* %1, metadata !3143, metadata !DIExpression()), !dbg !3160
  call void @llvm.dbg.value(metadata i32 %2, metadata !3144, metadata !DIExpression()), !dbg !3160
  call void @llvm.dbg.value(metadata i32 %3, metadata !3145, metadata !DIExpression()), !dbg !3160
  call void @llvm.dbg.value(metadata i8* %4, metadata !3146, metadata !DIExpression()), !dbg !3160
  call void @llvm.dbg.value(metadata i32 %5, metadata !3147, metadata !DIExpression()), !dbg !3160
  call void @llvm.dbg.value(metadata i1 %6, metadata !3148, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3160
  call void @llvm.dbg.value(metadata i32 %7, metadata !3149, metadata !DIExpression()), !dbg !3160
  call void @llvm.dbg.value(metadata i32 %8, metadata !3150, metadata !DIExpression()), !dbg !3160
  call void @llvm.dbg.value(metadata i32 %9, metadata !3151, metadata !DIExpression()), !dbg !3160
  call void @llvm.dbg.value(metadata i32 %10, metadata !3152, metadata !DIExpression()), !dbg !3160
  call void @llvm.dbg.value(metadata i32 %2, metadata !3153, metadata !DIExpression()), !dbg !3160
  %12 = and i32 %10, 2, !dbg !3161
  %13 = icmp eq i32 %12, 0, !dbg !3161
  br i1 %13, label %14, label %55, !dbg !3163

14:                                               ; preds = %11
  %15 = icmp eq i32 %9, 0, !dbg !3164
  br i1 %15, label %25, label %16, !dbg !3167

16:                                               ; preds = %14
  %17 = and i32 %10, 1, !dbg !3168
  %18 = icmp eq i32 %17, 0, !dbg !3168
  br i1 %18, label %25, label %19, !dbg !3169

19:                                               ; preds = %16
  %20 = and i32 %10, 12
  %21 = icmp ne i32 %20, 0
  %22 = or i1 %21, %6, !dbg !3170
  %23 = sext i1 %22 to i32, !dbg !3170
  %24 = add i32 %23, %9, !dbg !3170
  br label %25, !dbg !3170

25:                                               ; preds = %19, %16, %14
  %26 = phi i32 [ %9, %16 ], [ 0, %14 ], [ %24, %19 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !3151, metadata !DIExpression()), !dbg !3160
  call void @llvm.dbg.value(metadata i32 %5, metadata !3147, metadata !DIExpression()), !dbg !3160
  %27 = icmp ult i32 %5, %8, !dbg !3171
  %28 = icmp ult i32 %5, 32, !dbg !3172
  %29 = and i1 %27, %28, !dbg !3172
  br i1 %29, label %30, label %40, !dbg !3173

30:                                               ; preds = %25
  %31 = getelementptr i8, i8* %4, i32 %5, !dbg !3173
  %32 = xor i32 %5, -1, !dbg !3173
  %33 = add i32 %32, %8, !dbg !3173
  %34 = sub i32 31, %5, !dbg !3173
  %35 = call i32 @llvm.umin.i32(i32 %33, i32 %34), !dbg !3173
  %36 = add nuw i32 %35, 1, !dbg !3173
  call void @llvm.memset.p0i8.i32(i8* align 1 %31, i8 48, i32 %36, i1 false), !dbg !3174, !tbaa !2505
  %37 = call i32 @llvm.umin.i32(i32 %33, i32 %34), !dbg !3173
  %38 = add i32 %37, %5, !dbg !3173
  call void @llvm.dbg.value(metadata i32 undef, metadata !3147, metadata !DIExpression()), !dbg !3160
  call void @llvm.dbg.value(metadata i32 undef, metadata !3147, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3160
  %39 = add i32 %38, 1, !dbg !3173
  br label %40

40:                                               ; preds = %30, %25
  %41 = phi i32 [ %5, %25 ], [ %39, %30 ]
  %42 = and i32 %10, 1
  %43 = icmp eq i32 %42, 0
  call void @llvm.dbg.value(metadata i32 %41, metadata !3147, metadata !DIExpression()), !dbg !3160
  br i1 %43, label %55, label %44, !dbg !3176

44:                                               ; preds = %40
  call void @llvm.dbg.value(metadata i32 %41, metadata !3147, metadata !DIExpression()), !dbg !3160
  %45 = icmp ult i32 %41, %26, !dbg !3177
  %46 = icmp ult i32 %41, 32
  %47 = and i1 %45, %46, !dbg !3178
  br i1 %47, label %48, label %55, !dbg !3178

48:                                               ; preds = %44, %48
  %49 = phi i32 [ %50, %48 ], [ %41, %44 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !3147, metadata !DIExpression()), !dbg !3160
  %50 = add i32 %49, 1, !dbg !3179
  call void @llvm.dbg.value(metadata i32 %50, metadata !3147, metadata !DIExpression()), !dbg !3160
  %51 = getelementptr inbounds i8, i8* %4, i32 %49, !dbg !3181
  store i8 48, i8* %51, align 1, !dbg !3182, !tbaa !2505
  %52 = icmp ult i32 %50, %26, !dbg !3177
  %53 = icmp ult i32 %50, 32
  %54 = and i1 %52, %53, !dbg !3178
  br i1 %54, label %48, label %55, !dbg !3178, !llvm.loop !3183

55:                                               ; preds = %48, %44, %40, %11
  %56 = phi i32 [ %9, %11 ], [ %26, %40 ], [ %26, %44 ], [ %26, %48 ]
  %57 = phi i32 [ %5, %11 ], [ %41, %40 ], [ %41, %44 ], [ %50, %48 ]
  call void @llvm.dbg.value(metadata i32 %57, metadata !3147, metadata !DIExpression()), !dbg !3160
  call void @llvm.dbg.value(metadata i32 %56, metadata !3151, metadata !DIExpression()), !dbg !3160
  %58 = and i32 %10, 16, !dbg !3186
  %59 = icmp eq i32 %58, 0, !dbg !3186
  br i1 %59, label %101, label %60, !dbg !3188

60:                                               ; preds = %55
  %61 = and i32 %10, 1024, !dbg !3189
  %62 = icmp eq i32 %61, 0, !dbg !3189
  %63 = icmp ne i32 %57, 0
  %64 = select i1 %62, i1 %63, i1 false, !dbg !3192
  br i1 %64, label %65, label %76, !dbg !3192

65:                                               ; preds = %60
  %66 = icmp eq i32 %57, %8, !dbg !3193
  %67 = icmp eq i32 %57, %56
  %68 = or i1 %66, %67, !dbg !3194
  br i1 %68, label %69, label %76, !dbg !3194

69:                                               ; preds = %65
  %70 = add i32 %57, -1, !dbg !3195
  call void @llvm.dbg.value(metadata i32 %70, metadata !3147, metadata !DIExpression()), !dbg !3160
  %71 = icmp ne i32 %70, 0, !dbg !3197
  %72 = icmp eq i32 %7, 16
  %73 = and i1 %72, %71, !dbg !3199
  %74 = add i32 %57, -2
  %75 = select i1 %73, i32 %74, i32 %70, !dbg !3199
  br label %76, !dbg !3199

76:                                               ; preds = %69, %65, %60
  %77 = phi i32 [ %57, %60 ], [ %57, %65 ], [ %75, %69 ]
  call void @llvm.dbg.value(metadata i32 %77, metadata !3147, metadata !DIExpression()), !dbg !3160
  %78 = icmp eq i32 %7, 16, !dbg !3200
  br i1 %78, label %79, label %87, !dbg !3202

79:                                               ; preds = %76
  %80 = and i32 %10, 32, !dbg !3203
  %81 = icmp eq i32 %80, 0, !dbg !3203
  %82 = icmp ult i32 %77, 32
  %83 = select i1 %81, i1 %82, i1 false, !dbg !3204
  br i1 %83, label %91, label %84, !dbg !3204

84:                                               ; preds = %79
  %85 = icmp ne i32 %80, 0, !dbg !3205
  %86 = select i1 %85, i1 %82, i1 false, !dbg !3207
  br i1 %86, label %91, label %87, !dbg !3207

87:                                               ; preds = %76, %84
  %88 = icmp eq i32 %7, 2, !dbg !3208
  %89 = icmp ult i32 %77, 32
  %90 = select i1 %88, i1 %89, i1 false, !dbg !3210
  br i1 %90, label %91, label %95, !dbg !3210

91:                                               ; preds = %87, %84, %79
  %92 = phi i8 [ 120, %79 ], [ 88, %84 ], [ 98, %87 ]
  %93 = add i32 %77, 1, !dbg !3211
  %94 = getelementptr inbounds i8, i8* %4, i32 %77, !dbg !3211
  store i8 %92, i8* %94, align 1, !dbg !3211, !tbaa !2505
  br label %95, !dbg !3212

95:                                               ; preds = %91, %87
  %96 = phi i32 [ %77, %87 ], [ %93, %91 ], !dbg !3214
  call void @llvm.dbg.value(metadata i32 %96, metadata !3147, metadata !DIExpression()), !dbg !3160
  %97 = icmp ult i32 %96, 32, !dbg !3212
  br i1 %97, label %98, label %101, !dbg !3215

98:                                               ; preds = %95
  %99 = add i32 %96, 1, !dbg !3216
  call void @llvm.dbg.value(metadata i32 %99, metadata !3147, metadata !DIExpression()), !dbg !3160
  %100 = getelementptr inbounds i8, i8* %4, i32 %96, !dbg !3218
  store i8 48, i8* %100, align 1, !dbg !3219, !tbaa !2505
  br label %101, !dbg !3220

101:                                              ; preds = %95, %98, %55
  %102 = phi i32 [ %99, %98 ], [ %96, %95 ], [ %57, %55 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !3147, metadata !DIExpression()), !dbg !3160
  %103 = icmp ult i32 %102, 32, !dbg !3221
  br i1 %103, label %104, label %115, !dbg !3223

104:                                              ; preds = %101
  br i1 %6, label %111, label %105, !dbg !3224

105:                                              ; preds = %104
  %106 = and i32 %10, 4, !dbg !3226
  %107 = icmp eq i32 %106, 0, !dbg !3226
  br i1 %107, label %108, label %111, !dbg !3229

108:                                              ; preds = %105
  %109 = and i32 %10, 8, !dbg !3230
  %110 = icmp eq i32 %109, 0, !dbg !3230
  br i1 %110, label %115, label %111, !dbg !3232

111:                                              ; preds = %108, %105, %104
  %112 = phi i8 [ 45, %104 ], [ 43, %105 ], [ 32, %108 ]
  %113 = add i32 %102, 1, !dbg !3233
  %114 = getelementptr inbounds i8, i8* %4, i32 %102, !dbg !3233
  store i8 %112, i8* %114, align 1, !dbg !3233, !tbaa !2505
  br label %115, !dbg !3234

115:                                              ; preds = %111, %108, %101
  %116 = phi i32 [ %102, %108 ], [ %102, %101 ], [ %113, %111 ], !dbg !3160
  call void @llvm.dbg.value(metadata i32 %116, metadata !3147, metadata !DIExpression()), !dbg !3160
  %117 = and i32 %10, 3, !dbg !3234
  %118 = icmp eq i32 %117, 0, !dbg !3234
  %119 = icmp ult i32 %116, %56
  %120 = select i1 %118, i1 %119, i1 false, !dbg !3234
  call void @llvm.dbg.value(metadata i32 %116, metadata !3154, metadata !DIExpression()), !dbg !3235
  call void @llvm.dbg.value(metadata i32 %2, metadata !3144, metadata !DIExpression()), !dbg !3160
  br i1 %120, label %121, label %127, !dbg !3234

121:                                              ; preds = %115, %121
  %122 = phi i32 [ %125, %121 ], [ %116, %115 ]
  %123 = phi i32 [ %124, %121 ], [ %2, %115 ]
  call void @llvm.dbg.value(metadata i32 %122, metadata !3154, metadata !DIExpression()), !dbg !3235
  call void @llvm.dbg.value(metadata i32 %123, metadata !3144, metadata !DIExpression()), !dbg !3160
  %124 = add i32 %123, 1, !dbg !3236
  call void @llvm.dbg.value(metadata i32 %124, metadata !3144, metadata !DIExpression()), !dbg !3160
  call void %0(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %123, i32 noundef %3) #34, !dbg !3239, !callees !2510
  %125 = add nuw i32 %122, 1, !dbg !3240
  call void @llvm.dbg.value(metadata i32 %125, metadata !3154, metadata !DIExpression()), !dbg !3235
  %126 = icmp eq i32 %125, %56, !dbg !3241
  br i1 %126, label %127, label %121, !dbg !3242, !llvm.loop !3243

127:                                              ; preds = %121, %115
  %128 = phi i32 [ %2, %115 ], [ %124, %121 ]
  call void @llvm.dbg.value(metadata i32 %128, metadata !3144, metadata !DIExpression()), !dbg !3160
  call void @llvm.dbg.value(metadata i32 0, metadata !3158, metadata !DIExpression()), !dbg !3245
  %129 = icmp eq i32 %116, 0, !dbg !3246
  br i1 %129, label %130, label %136, !dbg !3248

130:                                              ; preds = %136, %127
  %131 = phi i32 [ %128, %127 ], [ %143, %136 ]
  %132 = xor i1 %13, true, !dbg !3249
  %133 = sub i32 %131, %2
  %134 = icmp ult i32 %133, %56
  %135 = select i1 %132, i1 %134, i1 false, !dbg !3249
  call void @llvm.dbg.value(metadata i32 %131, metadata !3144, metadata !DIExpression()), !dbg !3160
  br i1 %135, label %146, label %151, !dbg !3249

136:                                              ; preds = %127, %136
  %137 = phi i32 [ %144, %136 ], [ 0, %127 ]
  %138 = phi i32 [ %143, %136 ], [ %128, %127 ]
  call void @llvm.dbg.value(metadata i32 %137, metadata !3158, metadata !DIExpression()), !dbg !3245
  call void @llvm.dbg.value(metadata i32 %138, metadata !3144, metadata !DIExpression()), !dbg !3160
  %139 = xor i32 %137, -1, !dbg !3250
  %140 = add i32 %116, %139, !dbg !3250
  %141 = getelementptr inbounds i8, i8* %4, i32 %140, !dbg !3252
  %142 = load i8, i8* %141, align 1, !dbg !3252, !tbaa !2505
  %143 = add i32 %138, 1, !dbg !3253
  call void @llvm.dbg.value(metadata i32 %143, metadata !3144, metadata !DIExpression()), !dbg !3160
  call void %0(i8 noundef zeroext %142, i8* noundef %1, i32 noundef %138, i32 noundef %3) #34, !dbg !3254, !callees !2510
  %144 = add nuw i32 %137, 1, !dbg !3255
  call void @llvm.dbg.value(metadata i32 %144, metadata !3158, metadata !DIExpression()), !dbg !3245
  %145 = icmp eq i32 %144, %116, !dbg !3246
  br i1 %145, label %130, label %136, !dbg !3248, !llvm.loop !3256

146:                                              ; preds = %130, %146
  %147 = phi i32 [ %148, %146 ], [ %131, %130 ]
  call void @llvm.dbg.value(metadata i32 %147, metadata !3144, metadata !DIExpression()), !dbg !3160
  %148 = add i32 %147, 1, !dbg !3258
  call void @llvm.dbg.value(metadata i32 %148, metadata !3144, metadata !DIExpression()), !dbg !3160
  call void %0(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %147, i32 noundef %3) #34, !dbg !3262, !callees !2510
  %149 = sub i32 %148, %2, !dbg !3263
  %150 = icmp ult i32 %149, %56, !dbg !3264
  br i1 %150, label %146, label %151, !dbg !3265, !llvm.loop !3266

151:                                              ; preds = %146, %130
  %152 = phi i32 [ %131, %130 ], [ %148, %146 ]
  call void @llvm.dbg.value(metadata i32 %152, metadata !3144, metadata !DIExpression()), !dbg !3160
  ret i32 %152, !dbg !3268
}

; Function Attrs: noinline nounwind
define dso_local i32 @sprintf_(i8* noundef %0, i8* noundef %1, ...) local_unnamed_addr #9 !dbg !3269 {
  %3 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3271, metadata !DIExpression()), !dbg !3275
  call void @llvm.dbg.value(metadata i8* %1, metadata !3272, metadata !DIExpression()), !dbg !3275
  %4 = bitcast %struct.__va_list* %3 to i8*, !dbg !3276
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #34, !dbg !3276
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !3273, metadata !DIExpression()), !dbg !3277
  call void @llvm.va_start(i8* nonnull %4), !dbg !3278
  %5 = bitcast %struct.__va_list* %3 to i32*, !dbg !3279
  %6 = load i32, i32* %5, align 4, !dbg !3279
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3279
  %8 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_buffer, i8* noundef %0, i32 noundef -1, i8* noundef %1, [1 x i32] %7), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %8, metadata !3274, metadata !DIExpression()), !dbg !3275
  call void @llvm.va_end(i8* %4), !dbg !3280
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #34, !dbg !3281
  ret i32 %8, !dbg !3282
}

; Function Attrs: noinline nounwind
define dso_local i32 @snprintf_(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #9 !dbg !3283 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3285, metadata !DIExpression()), !dbg !3290
  call void @llvm.dbg.value(metadata i32 %1, metadata !3286, metadata !DIExpression()), !dbg !3290
  call void @llvm.dbg.value(metadata i8* %2, metadata !3287, metadata !DIExpression()), !dbg !3290
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3291
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #34, !dbg !3291
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3288, metadata !DIExpression()), !dbg !3292
  call void @llvm.va_start(i8* nonnull %5), !dbg !3293
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3294
  %7 = load i32, i32* %6, align 4, !dbg !3294
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3294
  %9 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_buffer, i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8), !dbg !3294
  call void @llvm.dbg.value(metadata i32 %9, metadata !3289, metadata !DIExpression()), !dbg !3290
  call void @llvm.va_end(i8* %5), !dbg !3295
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #34, !dbg !3296
  ret i32 %9, !dbg !3297
}

; Function Attrs: noinline nounwind
define dso_local i32 @vsnprintf_(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #9 !dbg !3298 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3305, metadata !DIExpression()), !dbg !3306
  call void @llvm.dbg.value(metadata i8* %0, metadata !3302, metadata !DIExpression()), !dbg !3306
  call void @llvm.dbg.value(metadata i32 %1, metadata !3303, metadata !DIExpression()), !dbg !3306
  call void @llvm.dbg.value(metadata i8* %2, metadata !3304, metadata !DIExpression()), !dbg !3306
  %5 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_buffer, i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3), !dbg !3307
  ret i32 %5, !dbg !3308
}

; Function Attrs: noinline nounwind
define dso_local i32 @fctprintf(void (i8, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, ...) local_unnamed_addr #9 !dbg !3309 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca %struct.out_fct_wrap_type, align 4
  call void @llvm.dbg.value(metadata void (i8, i8*)* %0, metadata !3313, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.value(metadata i8* %1, metadata !3314, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.value(metadata i8* %2, metadata !3315, metadata !DIExpression()), !dbg !3320
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !3321
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #34, !dbg !3321
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3316, metadata !DIExpression()), !dbg !3322
  call void @llvm.va_start(i8* nonnull %6), !dbg !3323
  %7 = bitcast %struct.out_fct_wrap_type* %5 to i8*, !dbg !3324
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #34, !dbg !3324
  call void @llvm.dbg.declare(metadata %struct.out_fct_wrap_type* %5, metadata !3317, metadata !DIExpression()), !dbg !3325
  %8 = getelementptr inbounds %struct.out_fct_wrap_type, %struct.out_fct_wrap_type* %5, i32 0, i32 0, !dbg !3326
  store void (i8, i8*)* %0, void (i8, i8*)** %8, align 4, !dbg !3326, !tbaa !2822
  %9 = getelementptr inbounds %struct.out_fct_wrap_type, %struct.out_fct_wrap_type* %5, i32 0, i32 1, !dbg !3326
  store i8* %1, i8** %9, align 4, !dbg !3326, !tbaa !2825
  %10 = bitcast %struct.__va_list* %4 to i32*, !dbg !3327
  %11 = load i32, i32* %10, align 4, !dbg !3327
  %12 = insertvalue [1 x i32] poison, i32 %11, 0, !dbg !3327
  %13 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_fct, i8* noundef nonnull %7, i32 noundef -1, i8* noundef %2, [1 x i32] %12), !dbg !3327
  call void @llvm.dbg.value(metadata i32 %13, metadata !3319, metadata !DIExpression()), !dbg !3320
  call void @llvm.va_end(i8* %6), !dbg !3328
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #34, !dbg !3329
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #34, !dbg !3329
  ret i32 %13, !dbg !3330
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @SystemInit() local_unnamed_addr #14 !dbg !3331 {
  %1 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3332, !tbaa !3333
  %2 = or i32 %1, 1, !dbg !3332
  store volatile i32 %2, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3332, !tbaa !3333
  %3 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3336, !tbaa !3337
  %4 = and i32 %3, -117506048, !dbg !3336
  store volatile i32 %4, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3336, !tbaa !3337
  %5 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3338, !tbaa !3333
  %6 = and i32 %5, -17367041, !dbg !3338
  store volatile i32 %6, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3338, !tbaa !3333
  %7 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3339, !tbaa !3333
  %8 = and i32 %7, -262145, !dbg !3339
  store volatile i32 %8, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3339, !tbaa !3333
  %9 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3340, !tbaa !3337
  %10 = and i32 %9, -8323073, !dbg !3340
  store volatile i32 %10, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3340, !tbaa !3337
  store volatile i32 10420224, i32* inttoptr (i32 1073877000 to i32*), align 8, !dbg !3341, !tbaa !3342
  store volatile i32 134217728, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !3343, !tbaa !3344
  ret void, !dbg !3346
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !3347 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3349, metadata !DIExpression()), !dbg !3352
  call void @llvm.dbg.value(metadata i32 0, metadata !3350, metadata !DIExpression()), !dbg !3352
  call void @llvm.dbg.value(metadata i32 0, metadata !3351, metadata !DIExpression()), !dbg !3352
  %1 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3353, !tbaa !3337
  %2 = and i32 %1, 12, !dbg !3354
  call void @llvm.dbg.value(metadata i32 %2, metadata !3349, metadata !DIExpression()), !dbg !3352
  %3 = icmp eq i32 %2, 8, !dbg !3355
  br i1 %3, label %4, label %22, !dbg !3355

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3356, !tbaa !3337
  call void @llvm.dbg.value(metadata i32 %5, metadata !3350, metadata !DIExpression(DW_OP_constu, 3932160, DW_OP_and, DW_OP_stack_value)), !dbg !3352
  %6 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3358, !tbaa !3337
  %7 = and i32 %6, 65536, !dbg !3359
  call void @llvm.dbg.value(metadata i32 %7, metadata !3351, metadata !DIExpression()), !dbg !3352
  %8 = lshr i32 %5, 18, !dbg !3360
  %9 = and i32 %8, 15, !dbg !3360
  %10 = add nuw nsw i32 %9, 2, !dbg !3361
  call void @llvm.dbg.value(metadata i32 %10, metadata !3350, metadata !DIExpression()), !dbg !3352
  %11 = icmp eq i32 %7, 0, !dbg !3362
  br i1 %11, label %12, label %14, !dbg !3364

12:                                               ; preds = %4
  %13 = mul nuw nsw i32 %10, 4000000, !dbg !3365
  br label %22, !dbg !3367

14:                                               ; preds = %4
  %15 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3368, !tbaa !3337
  %16 = and i32 %15, 131072, !dbg !3371
  %17 = icmp eq i32 %16, 0, !dbg !3372
  br i1 %17, label %20, label %18, !dbg !3373

18:                                               ; preds = %14
  %19 = mul nuw nsw i32 %10, 4000000, !dbg !3374
  br label %22, !dbg !3376

20:                                               ; preds = %14
  %21 = mul nuw nsw i32 %10, 8000000, !dbg !3377
  br label %22

22:                                               ; preds = %0, %12, %20, %18
  %23 = phi i32 [ %13, %12 ], [ %21, %20 ], [ %19, %18 ], [ 8000000, %0 ]
  store i32 %23, i32* @SystemCoreClock, align 4, !dbg !3379, !tbaa !3380
  %24 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3381, !tbaa !3337
  %25 = lshr i32 %24, 4, !dbg !3382
  %26 = and i32 %25, 15, !dbg !3382
  %27 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %26, !dbg !3383
  %28 = load i8, i8* %27, align 1, !dbg !3383, !tbaa !2505
  %29 = zext i8 %28 to i32, !dbg !3383
  call void @llvm.dbg.value(metadata i32 %29, metadata !3349, metadata !DIExpression()), !dbg !3352
  %30 = load i32, i32* @SystemCoreClock, align 4, !dbg !3384, !tbaa !3380
  %31 = lshr i32 %30, %29, !dbg !3384
  store i32 %31, i32* @SystemCoreClock, align 4, !dbg !3384, !tbaa !3380
  ret void, !dbg !3385
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #9 !dbg !3386 {
  %1 = call i32 @HAL_GetTick() #34, !dbg !3392
  call void @llvm.dbg.value(metadata i32 %1, metadata !3391, metadata !DIExpression()), !dbg !3393
  %2 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3394, !tbaa !3333
  %3 = or i32 %2, 1, !dbg !3394
  store volatile i32 %3, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3394, !tbaa !3333
  br label %4, !dbg !3395

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3396, !tbaa !3333
  %6 = and i32 %5, 2, !dbg !3396
  %7 = icmp eq i32 %6, 0, !dbg !3397
  br i1 %7, label %8, label %12, !dbg !3395

8:                                                ; preds = %4
  %9 = call i32 @HAL_GetTick() #34, !dbg !3398
  %10 = sub i32 %9, %1, !dbg !3401
  %11 = icmp ugt i32 %10, 2, !dbg !3402
  br i1 %11, label %58, label %4, !dbg !3403, !llvm.loop !3404

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3406, !tbaa !3333
  %14 = and i32 %13, -249, !dbg !3406
  %15 = or i32 %14, 128, !dbg !3406
  store volatile i32 %15, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3406, !tbaa !3333
  %16 = call i32 @HAL_GetTick() #34, !dbg !3407
  call void @llvm.dbg.value(metadata i32 %16, metadata !3391, metadata !DIExpression()), !dbg !3393
  store volatile i32 0, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3408, !tbaa !3337
  br label %17, !dbg !3409

17:                                               ; preds = %21, %12
  %18 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3410, !tbaa !3337
  %19 = and i32 %18, 12, !dbg !3410
  %20 = icmp eq i32 %19, 0, !dbg !3411
  br i1 %20, label %25, label %21, !dbg !3409

21:                                               ; preds = %17
  %22 = call i32 @HAL_GetTick() #34, !dbg !3412
  %23 = sub i32 %22, %16, !dbg !3415
  %24 = icmp ugt i32 %23, 5000, !dbg !3416
  br i1 %24, label %58, label %17, !dbg !3417, !llvm.loop !3418

25:                                               ; preds = %17
  store i32 8000000, i32* @SystemCoreClock, align 4, !dbg !3420, !tbaa !3380
  %26 = load i32, i32* @uwTickPrio, align 4, !dbg !3421, !tbaa !3380
  %27 = call i32 @HAL_InitTick(i32 noundef %26) #34, !dbg !3423
  %28 = icmp eq i32 %27, 0, !dbg !3424
  br i1 %28, label %29, label %58, !dbg !3425

29:                                               ; preds = %25
  %30 = call i32 @HAL_GetTick() #34, !dbg !3426
  call void @llvm.dbg.value(metadata i32 %30, metadata !3391, metadata !DIExpression()), !dbg !3393
  %31 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3427, !tbaa !3333
  %32 = and i32 %31, -16777217, !dbg !3427
  store volatile i32 %32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3427, !tbaa !3333
  br label %33, !dbg !3428

33:                                               ; preds = %37, %29
  %34 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3429, !tbaa !3333
  %35 = and i32 %34, 33554432, !dbg !3429
  %36 = icmp eq i32 %35, 0, !dbg !3430
  br i1 %36, label %41, label %37, !dbg !3428

37:                                               ; preds = %33
  %38 = call i32 @HAL_GetTick() #34, !dbg !3431
  %39 = sub i32 %38, %30, !dbg !3434
  %40 = icmp ugt i32 %39, 2, !dbg !3435
  br i1 %40, label %58, label %33, !dbg !3436, !llvm.loop !3437

41:                                               ; preds = %33
  store volatile i32 0, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3439, !tbaa !3337
  %42 = call i32 @HAL_GetTick() #34, !dbg !3440
  call void @llvm.dbg.value(metadata i32 %42, metadata !3391, metadata !DIExpression()), !dbg !3393
  %43 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3441, !tbaa !3333
  %44 = and i32 %43, -589825, !dbg !3441
  store volatile i32 %44, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3441, !tbaa !3333
  br label %45, !dbg !3442

45:                                               ; preds = %49, %41
  %46 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3443, !tbaa !3333
  %47 = and i32 %46, 131072, !dbg !3443
  %48 = icmp eq i32 %47, 0, !dbg !3444
  br i1 %48, label %53, label %49, !dbg !3442

49:                                               ; preds = %45
  %50 = call i32 @HAL_GetTick() #34, !dbg !3445
  %51 = sub i32 %50, %42, !dbg !3448
  %52 = icmp ugt i32 %51, 100, !dbg !3449
  br i1 %52, label %58, label %45, !dbg !3450, !llvm.loop !3451

53:                                               ; preds = %45
  %54 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3453, !tbaa !3333
  %55 = and i32 %54, -262145, !dbg !3453
  store volatile i32 %55, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3453, !tbaa !3333
  %56 = load volatile i32, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !3454, !tbaa !3455
  %57 = or i32 %56, 16777216, !dbg !3454
  store volatile i32 %57, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !3454, !tbaa !3455
  store volatile i32 0, i32* inttoptr (i32 1073877000 to i32*), align 8, !dbg !3456, !tbaa !3342
  br label %58, !dbg !3457

58:                                               ; preds = %8, %21, %37, %49, %25, %53
  %59 = phi i32 [ 0, %53 ], [ 1, %25 ], [ 3, %49 ], [ 3, %37 ], [ 3, %21 ], [ 3, %8 ], !dbg !3393
  ret i32 %59, !dbg !3458
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #9 !dbg !3459 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !3481, metadata !DIExpression()), !dbg !3492
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !3493
  br i1 %3, label %298, label %4, !dbg !3495

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !3496
  %6 = load i32, i32* %5, align 4, !dbg !3496, !tbaa !3498
  %7 = and i32 %6, 1, !dbg !3501
  %8 = icmp eq i32 %7, 0, !dbg !3502
  br i1 %8, label %70, label %9, !dbg !3503

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3504, !tbaa !3337
  %11 = and i32 %10, 12, !dbg !3504
  %12 = icmp eq i32 %11, 4, !dbg !3507
  br i1 %12, label %21, label %13, !dbg !3508

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3509, !tbaa !3337
  %15 = and i32 %14, 12, !dbg !3509
  %16 = icmp eq i32 %15, 8, !dbg !3510
  br i1 %16, label %17, label %29, !dbg !3511

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3512, !tbaa !3337
  %19 = and i32 %18, 65536, !dbg !3512
  %20 = icmp eq i32 %19, 0, !dbg !3513
  br i1 %20, label %29, label %21, !dbg !3514

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3515, !tbaa !3333
  %23 = and i32 %22, 131072, !dbg !3515
  %24 = icmp eq i32 %23, 0, !dbg !3518
  br i1 %24, label %70, label %25, !dbg !3519

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !3520
  %27 = load i32, i32* %26, align 4, !dbg !3520, !tbaa !3521
  %28 = icmp eq i32 %27, 0, !dbg !3522
  br i1 %28, label %298, label %70, !dbg !3523

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !3524
  %31 = load i32, i32* %30, align 4, !dbg !3524, !tbaa !3521
  switch i32 %31, label %45 [
    i32 65536, label %32
    i32 0, label %35
    i32 327680, label %40
  ], !dbg !3528

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3529, !tbaa !3333
  %34 = or i32 %33, 65536, !dbg !3529
  br label %50, !dbg !3529

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3531, !tbaa !3333
  %37 = and i32 %36, -65537, !dbg !3531
  store volatile i32 %37, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3531, !tbaa !3333
  %38 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3531, !tbaa !3333
  %39 = and i32 %38, -262145, !dbg !3531
  br label %50, !dbg !3531

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3534, !tbaa !3333
  %42 = or i32 %41, 262144, !dbg !3534
  store volatile i32 %42, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3534, !tbaa !3333
  %43 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3534, !tbaa !3333
  %44 = or i32 %43, 65536, !dbg !3534
  br label %50, !dbg !3534

45:                                               ; preds = %29
  %46 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3537, !tbaa !3333
  %47 = and i32 %46, -65537, !dbg !3537
  store volatile i32 %47, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3537, !tbaa !3333
  %48 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3537, !tbaa !3333
  %49 = and i32 %48, -262145, !dbg !3537
  br label %50

50:                                               ; preds = %35, %45, %40, %32
  %51 = phi i32 [ %39, %35 ], [ %49, %45 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %51, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3539, !tbaa !3333
  %52 = icmp eq i32 %31, 0, !dbg !3540
  %53 = call i32 @HAL_GetTick() #34, !dbg !3542
  call void @llvm.dbg.value(metadata i32 %53, metadata !3482, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %53, metadata !3482, metadata !DIExpression()), !dbg !3492
  br i1 %52, label %62, label %54, !dbg !3543

54:                                               ; preds = %50, %58
  %55 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3544, !tbaa !3333
  %56 = and i32 %55, 131072, !dbg !3544
  %57 = icmp eq i32 %56, 0, !dbg !3546
  br i1 %57, label %58, label %70, !dbg !3547

58:                                               ; preds = %54
  %59 = call i32 @HAL_GetTick() #34, !dbg !3548
  %60 = sub i32 %59, %53, !dbg !3551
  %61 = icmp ugt i32 %60, 100, !dbg !3552
  br i1 %61, label %298, label %54, !dbg !3553, !llvm.loop !3554

62:                                               ; preds = %50, %66
  %63 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3556, !tbaa !3333
  %64 = and i32 %63, 131072, !dbg !3556
  %65 = icmp eq i32 %64, 0, !dbg !3558
  br i1 %65, label %70, label %66, !dbg !3559

66:                                               ; preds = %62
  %67 = call i32 @HAL_GetTick() #34, !dbg !3560
  %68 = sub i32 %67, %53, !dbg !3563
  %69 = icmp ugt i32 %68, 100, !dbg !3564
  br i1 %69, label %298, label %62, !dbg !3565, !llvm.loop !3566

70:                                               ; preds = %54, %62, %25, %21, %4
  %71 = load i32, i32* %5, align 4, !dbg !3568, !tbaa !3498
  %72 = and i32 %71, 2, !dbg !3570
  %73 = icmp eq i32 %72, 0, !dbg !3571
  br i1 %73, label %125, label %74, !dbg !3572

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3573, !tbaa !3337
  %76 = and i32 %75, 12, !dbg !3573
  %77 = icmp eq i32 %76, 0, !dbg !3576
  br i1 %77, label %86, label %78, !dbg !3577

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3578, !tbaa !3337
  %80 = and i32 %79, 12, !dbg !3578
  %81 = icmp eq i32 %80, 8, !dbg !3579
  br i1 %81, label %82, label %94, !dbg !3580

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3581, !tbaa !3337
  %84 = and i32 %83, 65536, !dbg !3581
  %85 = icmp eq i32 %84, 0, !dbg !3582
  br i1 %85, label %86, label %94, !dbg !3583

86:                                               ; preds = %82, %74
  %87 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3584, !tbaa !3333
  %88 = and i32 %87, 2, !dbg !3584
  %89 = icmp eq i32 %88, 0, !dbg !3587
  br i1 %89, label %118, label %90, !dbg !3588

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !3589
  %92 = load i32, i32* %91, align 4, !dbg !3589, !tbaa !3590
  %93 = icmp eq i32 %92, 1, !dbg !3591
  br i1 %93, label %118, label %298, !dbg !3592

94:                                               ; preds = %82, %78
  %95 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !3593
  %96 = load i32, i32* %95, align 4, !dbg !3593, !tbaa !3590
  %97 = icmp eq i32 %96, 0, !dbg !3596
  br i1 %97, label %108, label %98, !dbg !3597

98:                                               ; preds = %94
  store volatile i32 1, i32* inttoptr (i32 1111621632 to i32*), align 131072, !dbg !3598, !tbaa !3380
  %99 = call i32 @HAL_GetTick() #34, !dbg !3600
  call void @llvm.dbg.value(metadata i32 %99, metadata !3482, metadata !DIExpression()), !dbg !3492
  br label %100, !dbg !3601

100:                                              ; preds = %104, %98
  %101 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3602, !tbaa !3333
  %102 = and i32 %101, 2, !dbg !3602
  %103 = icmp eq i32 %102, 0, !dbg !3603
  br i1 %103, label %104, label %118, !dbg !3601

104:                                              ; preds = %100
  %105 = call i32 @HAL_GetTick() #34, !dbg !3604
  %106 = sub i32 %105, %99, !dbg !3607
  %107 = icmp ugt i32 %106, 2, !dbg !3608
  br i1 %107, label %298, label %100, !dbg !3609, !llvm.loop !3610

108:                                              ; preds = %94
  store volatile i32 0, i32* inttoptr (i32 1111621632 to i32*), align 131072, !dbg !3612, !tbaa !3380
  %109 = call i32 @HAL_GetTick() #34, !dbg !3614
  call void @llvm.dbg.value(metadata i32 %109, metadata !3482, metadata !DIExpression()), !dbg !3492
  br label %110, !dbg !3615

110:                                              ; preds = %114, %108
  %111 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3616, !tbaa !3333
  %112 = and i32 %111, 2, !dbg !3616
  %113 = icmp eq i32 %112, 0, !dbg !3617
  br i1 %113, label %125, label %114, !dbg !3615

114:                                              ; preds = %110
  %115 = call i32 @HAL_GetTick() #34, !dbg !3618
  %116 = sub i32 %115, %109, !dbg !3621
  %117 = icmp ugt i32 %116, 2, !dbg !3622
  br i1 %117, label %298, label %110, !dbg !3623, !llvm.loop !3624

118:                                              ; preds = %100, %86, %90
  %119 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3626, !tbaa !3333
  %120 = and i32 %119, -249, !dbg !3626
  %121 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !3626
  %122 = load i32, i32* %121, align 4, !dbg !3626, !tbaa !3627
  %123 = shl i32 %122, 3, !dbg !3626
  %124 = or i32 %123, %120, !dbg !3626
  store volatile i32 %124, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3626, !tbaa !3333
  br label %125, !dbg !3628

125:                                              ; preds = %110, %118, %70
  %126 = load i32, i32* %5, align 4, !dbg !3628, !tbaa !3498
  %127 = and i32 %126, 8, !dbg !3630
  %128 = icmp eq i32 %127, 0, !dbg !3631
  br i1 %128, label %154, label %129, !dbg !3632

129:                                              ; preds = %125
  %130 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !3633
  %131 = load i32, i32* %130, align 4, !dbg !3633, !tbaa !3636
  %132 = icmp eq i32 %131, 0, !dbg !3637
  br i1 %132, label %144, label %133, !dbg !3638

133:                                              ; preds = %129
  store volatile i32 1, i32* inttoptr (i32 1111622784 to i32*), align 128, !dbg !3639, !tbaa !3380
  %134 = call i32 @HAL_GetTick() #34, !dbg !3641
  call void @llvm.dbg.value(metadata i32 %134, metadata !3482, metadata !DIExpression()), !dbg !3492
  br label %135, !dbg !3642

135:                                              ; preds = %139, %133
  %136 = load volatile i32, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !3643, !tbaa !3455
  %137 = and i32 %136, 2, !dbg !3643
  %138 = icmp eq i32 %137, 0, !dbg !3644
  br i1 %138, label %139, label %143, !dbg !3642

139:                                              ; preds = %135
  %140 = call i32 @HAL_GetTick() #34, !dbg !3645
  %141 = sub i32 %140, %134, !dbg !3648
  %142 = icmp ugt i32 %141, 2, !dbg !3649
  br i1 %142, label %298, label %135, !dbg !3650, !llvm.loop !3651

143:                                              ; preds = %135
  call fastcc void @RCC_Delay(), !dbg !3653
  br label %154, !dbg !3654

144:                                              ; preds = %129
  store volatile i32 0, i32* inttoptr (i32 1111622784 to i32*), align 128, !dbg !3655, !tbaa !3380
  %145 = call i32 @HAL_GetTick() #34, !dbg !3657
  call void @llvm.dbg.value(metadata i32 %145, metadata !3482, metadata !DIExpression()), !dbg !3492
  br label %146, !dbg !3658

146:                                              ; preds = %150, %144
  %147 = load volatile i32, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !3659, !tbaa !3455
  %148 = and i32 %147, 2, !dbg !3659
  %149 = icmp eq i32 %148, 0, !dbg !3660
  br i1 %149, label %154, label %150, !dbg !3658

150:                                              ; preds = %146
  %151 = call i32 @HAL_GetTick() #34, !dbg !3661
  %152 = sub i32 %151, %145, !dbg !3664
  %153 = icmp ugt i32 %152, 2, !dbg !3665
  br i1 %153, label %298, label %146, !dbg !3666, !llvm.loop !3667

154:                                              ; preds = %146, %143, %125
  %155 = load i32, i32* %5, align 4, !dbg !3669, !tbaa !3498
  %156 = and i32 %155, 4, !dbg !3670
  %157 = icmp eq i32 %156, 0, !dbg !3671
  br i1 %157, label %231, label %158, !dbg !3672

158:                                              ; preds = %154
  call void @llvm.dbg.value(metadata i32 0, metadata !3484, metadata !DIExpression()), !dbg !3673
  %159 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !3674, !tbaa !3675
  %160 = and i32 %159, 268435456, !dbg !3674
  %161 = icmp eq i32 %160, 0, !dbg !3674
  br i1 %161, label %162, label %170, !dbg !3676

162:                                              ; preds = %158
  %163 = bitcast i32* %2 to i8*, !dbg !3677
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %163), !dbg !3677
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3488, metadata !DIExpression()), !dbg !3677
  %164 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !3677, !tbaa !3675
  %165 = or i32 %164, 268435456, !dbg !3677
  store volatile i32 %165, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !3677, !tbaa !3675
  %166 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !3677, !tbaa !3675
  %167 = and i32 %166, 268435456, !dbg !3677
  store volatile i32 %167, i32* %2, align 4, !dbg !3677, !tbaa !3380
  %168 = load volatile i32, i32* %2, align 4, !dbg !3677, !tbaa !3380
  %169 = bitcast i32* %2 to i8*, !dbg !3678
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %169), !dbg !3678
  call void @llvm.dbg.value(metadata i32 1, metadata !3484, metadata !DIExpression()), !dbg !3673
  br label %170, !dbg !3679

170:                                              ; preds = %162, %158
  call void @llvm.dbg.value(metadata i32 undef, metadata !3484, metadata !DIExpression()), !dbg !3673
  %171 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !3680, !tbaa !3682
  %172 = and i32 %171, 256, !dbg !3680
  %173 = icmp eq i32 %172, 0, !dbg !3680
  br i1 %173, label %174, label %186, !dbg !3684

174:                                              ; preds = %170
  %175 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !3685, !tbaa !3682
  %176 = or i32 %175, 256, !dbg !3685
  store volatile i32 %176, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !3685, !tbaa !3682
  %177 = call i32 @HAL_GetTick() #34, !dbg !3687
  call void @llvm.dbg.value(metadata i32 %177, metadata !3482, metadata !DIExpression()), !dbg !3492
  br label %178, !dbg !3688

178:                                              ; preds = %182, %174
  %179 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !3689, !tbaa !3682
  %180 = and i32 %179, 256, !dbg !3689
  %181 = icmp eq i32 %180, 0, !dbg !3689
  br i1 %181, label %182, label %186, !dbg !3688

182:                                              ; preds = %178
  %183 = call i32 @HAL_GetTick() #34, !dbg !3690
  %184 = sub i32 %183, %177, !dbg !3693
  %185 = icmp ugt i32 %184, 100, !dbg !3694
  br i1 %185, label %298, label %178, !dbg !3695, !llvm.loop !3696

186:                                              ; preds = %178, %170
  %187 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !3698
  %188 = load i32, i32* %187, align 4, !dbg !3698, !tbaa !3701
  switch i32 %188, label %202 [
    i32 1, label %189
    i32 0, label %192
    i32 5, label %197
  ], !dbg !3702

189:                                              ; preds = %186
  %190 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3703, !tbaa !3705
  %191 = or i32 %190, 1, !dbg !3703
  br label %207, !dbg !3703

192:                                              ; preds = %186
  %193 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3706, !tbaa !3705
  %194 = and i32 %193, -2, !dbg !3706
  store volatile i32 %194, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3706, !tbaa !3705
  %195 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3706, !tbaa !3705
  %196 = and i32 %195, -5, !dbg !3706
  br label %207, !dbg !3706

197:                                              ; preds = %186
  %198 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3709, !tbaa !3705
  %199 = or i32 %198, 4, !dbg !3709
  store volatile i32 %199, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3709, !tbaa !3705
  %200 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3709, !tbaa !3705
  %201 = or i32 %200, 1, !dbg !3709
  br label %207, !dbg !3709

202:                                              ; preds = %186
  %203 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3712, !tbaa !3705
  %204 = and i32 %203, -2, !dbg !3712
  store volatile i32 %204, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3712, !tbaa !3705
  %205 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3712, !tbaa !3705
  %206 = and i32 %205, -5, !dbg !3712
  br label %207

207:                                              ; preds = %192, %202, %197, %189
  %208 = phi i32 [ %196, %192 ], [ %206, %202 ], [ %201, %197 ], [ %191, %189 ]
  store volatile i32 %208, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3714, !tbaa !3705
  %209 = icmp eq i32 %188, 0, !dbg !3715
  %210 = call i32 @HAL_GetTick() #34, !dbg !3717
  call void @llvm.dbg.value(metadata i32 %210, metadata !3482, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %210, metadata !3482, metadata !DIExpression()), !dbg !3492
  br i1 %209, label %219, label %211, !dbg !3718

211:                                              ; preds = %207, %215
  %212 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3719, !tbaa !3705
  %213 = and i32 %212, 2, !dbg !3719
  %214 = icmp eq i32 %213, 0, !dbg !3721
  br i1 %214, label %215, label %227, !dbg !3722

215:                                              ; preds = %211
  %216 = call i32 @HAL_GetTick() #34, !dbg !3723
  %217 = sub i32 %216, %210, !dbg !3726
  %218 = icmp ugt i32 %217, 5000, !dbg !3727
  br i1 %218, label %298, label %211, !dbg !3728, !llvm.loop !3729

219:                                              ; preds = %207, %223
  %220 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3731, !tbaa !3705
  %221 = and i32 %220, 2, !dbg !3731
  %222 = icmp eq i32 %221, 0, !dbg !3733
  br i1 %222, label %227, label %223, !dbg !3734

223:                                              ; preds = %219
  %224 = call i32 @HAL_GetTick() #34, !dbg !3735
  %225 = sub i32 %224, %210, !dbg !3738
  %226 = icmp ugt i32 %225, 5000, !dbg !3739
  br i1 %226, label %298, label %219, !dbg !3740, !llvm.loop !3741

227:                                              ; preds = %211, %219
  br i1 %161, label %228, label %231, !dbg !3743

228:                                              ; preds = %227
  %229 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !3744, !tbaa !3675
  %230 = and i32 %229, -268435457, !dbg !3744
  store volatile i32 %230, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !3744, !tbaa !3675
  br label %231, !dbg !3747

231:                                              ; preds = %228, %227, %154
  %232 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 0, !dbg !3748
  %233 = load i32, i32* %232, align 4, !dbg !3748, !tbaa !3750
  %234 = icmp eq i32 %233, 0, !dbg !3751
  br i1 %234, label %297, label %235, !dbg !3752

235:                                              ; preds = %231
  %236 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3753, !tbaa !3337
  %237 = and i32 %236, 12, !dbg !3753
  %238 = icmp eq i32 %237, 8, !dbg !3756
  br i1 %238, label %284, label %239, !dbg !3757

239:                                              ; preds = %235
  %240 = icmp eq i32 %233, 2, !dbg !3758
  store volatile i32 0, i32* inttoptr (i32 1111621728 to i32*), align 32, !dbg !3761, !tbaa !3380
  %241 = call i32 @HAL_GetTick() #34, !dbg !3761
  call void @llvm.dbg.value(metadata i32 %241, metadata !3482, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %241, metadata !3482, metadata !DIExpression()), !dbg !3492
  br i1 %240, label %242, label %276, !dbg !3762

242:                                              ; preds = %239, %246
  %243 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3763, !tbaa !3333
  %244 = and i32 %243, 33554432, !dbg !3763
  %245 = icmp eq i32 %244, 0, !dbg !3765
  br i1 %245, label %250, label %246, !dbg !3766

246:                                              ; preds = %242
  %247 = call i32 @HAL_GetTick() #34, !dbg !3767
  %248 = sub i32 %247, %241, !dbg !3770
  %249 = icmp ugt i32 %248, 2, !dbg !3771
  br i1 %249, label %298, label %242, !dbg !3772, !llvm.loop !3773

250:                                              ; preds = %242
  %251 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 1, !dbg !3775
  %252 = load i32, i32* %251, align 4, !dbg !3775, !tbaa !3777
  %253 = icmp eq i32 %252, 65536, !dbg !3778
  br i1 %253, label %254, label %260, !dbg !3779

254:                                              ; preds = %250
  %255 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3780, !tbaa !3337
  %256 = and i32 %255, -131073, !dbg !3780
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !3780
  %258 = load i32, i32* %257, align 4, !dbg !3780, !tbaa !3782
  %259 = or i32 %256, %258, !dbg !3780
  store volatile i32 %259, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3780, !tbaa !3337
  br label %260, !dbg !3783

260:                                              ; preds = %254, %250
  %261 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3784, !tbaa !3337
  %262 = and i32 %261, -3997697, !dbg !3784
  %263 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 2, !dbg !3784
  %264 = load i32, i32* %263, align 4, !dbg !3784, !tbaa !3785
  %265 = or i32 %264, %252, !dbg !3784
  %266 = or i32 %265, %262, !dbg !3784
  store volatile i32 %266, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3784, !tbaa !3337
  store volatile i32 1, i32* inttoptr (i32 1111621728 to i32*), align 32, !dbg !3786, !tbaa !3380
  %267 = call i32 @HAL_GetTick() #34, !dbg !3787
  call void @llvm.dbg.value(metadata i32 %267, metadata !3482, metadata !DIExpression()), !dbg !3492
  br label %268, !dbg !3788

268:                                              ; preds = %272, %260
  %269 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3789, !tbaa !3333
  %270 = and i32 %269, 33554432, !dbg !3789
  %271 = icmp eq i32 %270, 0, !dbg !3790
  br i1 %271, label %272, label %297, !dbg !3788

272:                                              ; preds = %268
  %273 = call i32 @HAL_GetTick() #34, !dbg !3791
  %274 = sub i32 %273, %267, !dbg !3794
  %275 = icmp ugt i32 %274, 2, !dbg !3795
  br i1 %275, label %298, label %268, !dbg !3796, !llvm.loop !3797

276:                                              ; preds = %239, %280
  %277 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3799, !tbaa !3333
  %278 = and i32 %277, 33554432, !dbg !3799
  %279 = icmp eq i32 %278, 0, !dbg !3801
  br i1 %279, label %297, label %280, !dbg !3802

280:                                              ; preds = %276
  %281 = call i32 @HAL_GetTick() #34, !dbg !3803
  %282 = sub i32 %281, %241, !dbg !3806
  %283 = icmp ugt i32 %282, 2, !dbg !3807
  br i1 %283, label %298, label %276, !dbg !3808, !llvm.loop !3809

284:                                              ; preds = %235
  %285 = icmp eq i32 %233, 1, !dbg !3811
  br i1 %285, label %298, label %286, !dbg !3814

286:                                              ; preds = %284
  %287 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3815, !tbaa !3337
  call void @llvm.dbg.value(metadata i32 %287, metadata !3483, metadata !DIExpression()), !dbg !3492
  %288 = and i32 %287, 65536, !dbg !3817
  %289 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 1, !dbg !3819
  %290 = load i32, i32* %289, align 4, !dbg !3819, !tbaa !3777
  %291 = icmp eq i32 %288, %290, !dbg !3820
  br i1 %291, label %292, label %298, !dbg !3821

292:                                              ; preds = %286
  %293 = and i32 %287, 3932160, !dbg !3822
  %294 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 2, !dbg !3823
  %295 = load i32, i32* %294, align 4, !dbg !3823, !tbaa !3785
  %296 = icmp eq i32 %293, %295, !dbg !3824
  br i1 %296, label %297, label %298, !dbg !3825

297:                                              ; preds = %276, %268, %292, %231
  br label %298, !dbg !3826

298:                                              ; preds = %58, %66, %104, %114, %139, %150, %182, %215, %223, %280, %246, %272, %286, %292, %284, %90, %25, %1, %297
  %299 = phi i32 [ 0, %297 ], [ 1, %1 ], [ 1, %25 ], [ 1, %90 ], [ 1, %284 ], [ 1, %292 ], [ 1, %286 ], [ 3, %272 ], [ 3, %246 ], [ 3, %280 ], [ 3, %223 ], [ 3, %215 ], [ 3, %182 ], [ 3, %150 ], [ 3, %139 ], [ 3, %114 ], [ 3, %104 ], [ 3, %66 ], [ 3, %58 ], !dbg !3492
  ret i32 %299, !dbg !3827
}

; Function Attrs: noinline nounwind
define internal fastcc void @RCC_Delay() unnamed_addr #9 !dbg !3828 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !3832, metadata !DIExpression()), !dbg !3834
  %2 = bitcast i32* %1 to i8*, !dbg !3835
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !3835
  call void @llvm.dbg.declare(metadata i32* %1, metadata !3833, metadata !DIExpression()), !dbg !3836
  %3 = load i32, i32* @SystemCoreClock, align 4, !dbg !3837, !tbaa !3380
  %4 = udiv i32 %3, 8000, !dbg !3838
  store volatile i32 %4, i32* %1, align 4, !dbg !3836, !tbaa !3380
  br label %5, !dbg !3839

5:                                                ; preds = %5, %0
  call void asm sideeffect "nop", ""() #34, !dbg !3840, !srcloc !3842
  %6 = load volatile i32, i32* %1, align 4, !dbg !3843, !tbaa !3380
  %7 = add i32 %6, -1, !dbg !3843
  store volatile i32 %7, i32* %1, align 4, !dbg !3843, !tbaa !3380
  %8 = icmp eq i32 %6, 0, !dbg !3844
  br i1 %8, label %9, label %5, !dbg !3844, !llvm.loop !3845

9:                                                ; preds = %5
  %10 = bitcast i32* %1 to i8*, !dbg !3847
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !3847
  ret void, !dbg !3847
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !3848 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !3861, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata i32 %1, metadata !3862, metadata !DIExpression()), !dbg !3864
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !3865
  br i1 %3, label %113, label %4, !dbg !3867

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3868, !tbaa !3870
  %6 = and i32 %5, 7, !dbg !3868
  %7 = icmp ult i32 %6, %1, !dbg !3872
  br i1 %7, label %8, label %15, !dbg !3873

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3874, !tbaa !3870
  %10 = and i32 %9, -8, !dbg !3874
  %11 = or i32 %10, %1, !dbg !3874
  store volatile i32 %11, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3874, !tbaa !3870
  %12 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3876, !tbaa !3870
  %13 = and i32 %12, 7, !dbg !3876
  %14 = icmp eq i32 %13, %1, !dbg !3878
  br i1 %14, label %15, label %113, !dbg !3879

15:                                               ; preds = %8, %4
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !3880
  %17 = load i32, i32* %16, align 4, !dbg !3880, !tbaa !3882
  %18 = and i32 %17, 2, !dbg !3884
  %19 = icmp eq i32 %18, 0, !dbg !3885
  br i1 %19, label %38, label %20, !dbg !3886

20:                                               ; preds = %15
  %21 = and i32 %17, 4, !dbg !3887
  %22 = icmp eq i32 %21, 0, !dbg !3890
  br i1 %22, label %26, label %23, !dbg !3891

23:                                               ; preds = %20
  %24 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3892, !tbaa !3337
  %25 = or i32 %24, 1792, !dbg !3892
  store volatile i32 %25, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3892, !tbaa !3337
  br label %26, !dbg !3894

26:                                               ; preds = %23, %20
  %27 = and i32 %17, 8, !dbg !3895
  %28 = icmp eq i32 %27, 0, !dbg !3897
  br i1 %28, label %32, label %29, !dbg !3898

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3899, !tbaa !3337
  %31 = or i32 %30, 14336, !dbg !3899
  store volatile i32 %31, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3899, !tbaa !3337
  br label %32, !dbg !3901

32:                                               ; preds = %29, %26
  %33 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3902, !tbaa !3337
  %34 = and i32 %33, -241, !dbg !3902
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !3902
  %36 = load i32, i32* %35, align 4, !dbg !3902, !tbaa !3903
  %37 = or i32 %34, %36, !dbg !3902
  store volatile i32 %37, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3902, !tbaa !3337
  br label %38, !dbg !3904

38:                                               ; preds = %32, %15
  %39 = and i32 %17, 1, !dbg !3905
  %40 = icmp eq i32 %39, 0, !dbg !3907
  br i1 %40, label %71, label %41, !dbg !3908

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !3909
  %43 = load i32, i32* %42, align 4, !dbg !3909, !tbaa !3912
  switch i32 %43, label %52 [
    i32 1, label %44
    i32 2, label %48
  ], !dbg !3913

44:                                               ; preds = %41
  %45 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3914, !tbaa !3333
  %46 = and i32 %45, 131072, !dbg !3914
  %47 = icmp eq i32 %46, 0, !dbg !3917
  br i1 %47, label %113, label %56, !dbg !3918

48:                                               ; preds = %41
  %49 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3919, !tbaa !3333
  %50 = and i32 %49, 33554432, !dbg !3919
  %51 = icmp eq i32 %50, 0, !dbg !3923
  br i1 %51, label %113, label %56, !dbg !3924

52:                                               ; preds = %41
  %53 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3925, !tbaa !3333
  %54 = and i32 %53, 2, !dbg !3925
  %55 = icmp eq i32 %54, 0, !dbg !3928
  br i1 %55, label %113, label %56, !dbg !3929

56:                                               ; preds = %48, %52, %44
  %57 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3930, !tbaa !3337
  %58 = and i32 %57, -4, !dbg !3930
  %59 = or i32 %58, %43, !dbg !3930
  store volatile i32 %59, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3930, !tbaa !3337
  %60 = call i32 @HAL_GetTick() #34, !dbg !3931
  call void @llvm.dbg.value(metadata i32 %60, metadata !3863, metadata !DIExpression()), !dbg !3864
  br label %61, !dbg !3932

61:                                               ; preds = %67, %56
  %62 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3933, !tbaa !3337
  %63 = and i32 %62, 12, !dbg !3933
  %64 = load i32, i32* %42, align 4, !dbg !3934, !tbaa !3912
  %65 = shl i32 %64, 2, !dbg !3935
  %66 = icmp eq i32 %63, %65, !dbg !3936
  br i1 %66, label %71, label %67, !dbg !3932

67:                                               ; preds = %61
  %68 = call i32 @HAL_GetTick() #34, !dbg !3937
  %69 = sub i32 %68, %60, !dbg !3940
  %70 = icmp ugt i32 %69, 5000, !dbg !3941
  br i1 %70, label %113, label %61, !dbg !3942, !llvm.loop !3943

71:                                               ; preds = %61, %38
  %72 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3945, !tbaa !3870
  %73 = and i32 %72, 7, !dbg !3945
  %74 = icmp ugt i32 %73, %1, !dbg !3947
  br i1 %74, label %75, label %82, !dbg !3948

75:                                               ; preds = %71
  %76 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3949, !tbaa !3870
  %77 = and i32 %76, -8, !dbg !3949
  %78 = or i32 %77, %1, !dbg !3949
  store volatile i32 %78, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3949, !tbaa !3870
  %79 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3951, !tbaa !3870
  %80 = and i32 %79, 7, !dbg !3951
  %81 = icmp eq i32 %80, %1, !dbg !3953
  br i1 %81, label %82, label %113, !dbg !3954

82:                                               ; preds = %75, %71
  %83 = load i32, i32* %16, align 4, !dbg !3955, !tbaa !3882
  %84 = and i32 %83, 4, !dbg !3957
  %85 = icmp eq i32 %84, 0, !dbg !3958
  br i1 %85, label %92, label %86, !dbg !3959

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3960, !tbaa !3337
  %88 = and i32 %87, -1793, !dbg !3960
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !3960
  %90 = load i32, i32* %89, align 4, !dbg !3960, !tbaa !3962
  %91 = or i32 %88, %90, !dbg !3960
  store volatile i32 %91, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3960, !tbaa !3337
  br label %92, !dbg !3963

92:                                               ; preds = %86, %82
  %93 = and i32 %83, 8, !dbg !3964
  %94 = icmp eq i32 %93, 0, !dbg !3966
  br i1 %94, label %102, label %95, !dbg !3967

95:                                               ; preds = %92
  %96 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3968, !tbaa !3337
  %97 = and i32 %96, -14337, !dbg !3968
  %98 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !3968
  %99 = load i32, i32* %98, align 4, !dbg !3968, !tbaa !3970
  %100 = shl i32 %99, 3, !dbg !3968
  %101 = or i32 %100, %97, !dbg !3968
  store volatile i32 %101, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3968, !tbaa !3337
  br label %102, !dbg !3971

102:                                              ; preds = %95, %92
  %103 = call i32 @HAL_RCC_GetSysClockFreq(), !dbg !3972
  %104 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3973, !tbaa !3337
  %105 = lshr i32 %104, 4, !dbg !3974
  %106 = and i32 %105, 15, !dbg !3974
  %107 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %106, !dbg !3975
  %108 = load i8, i8* %107, align 1, !dbg !3975, !tbaa !2505
  %109 = zext i8 %108 to i32, !dbg !3975
  %110 = lshr i32 %103, %109, !dbg !3976
  store i32 %110, i32* @SystemCoreClock, align 4, !dbg !3977, !tbaa !3380
  %111 = load i32, i32* @uwTickPrio, align 4, !dbg !3978, !tbaa !3380
  %112 = call i32 @HAL_InitTick(i32 noundef %111) #34, !dbg !3979
  br label %113, !dbg !3980

113:                                              ; preds = %67, %75, %52, %48, %44, %8, %2, %102
  %114 = phi i32 [ 0, %102 ], [ 1, %2 ], [ 1, %8 ], [ 1, %44 ], [ 1, %48 ], [ 1, %52 ], [ 1, %75 ], [ 3, %67 ], !dbg !3864
  ret i32 %114, !dbg !3981
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #15 !dbg !3982 {
  call void @llvm.dbg.declare(metadata [16 x i8]* @__const.HAL_RCC_GetSysClockFreq.aPLLMULFactorTable, metadata !3986, metadata !DIExpression()), !dbg !3994
  call void @llvm.dbg.declare(metadata [2 x i8]* @__const.HAL_RCC_GetSysClockFreq.aPredivFactorTable, metadata !3987, metadata !DIExpression()), !dbg !3995
  call void @llvm.dbg.value(metadata i32 0, metadata !3989, metadata !DIExpression()), !dbg !3996
  call void @llvm.dbg.value(metadata i32 0, metadata !3990, metadata !DIExpression()), !dbg !3996
  call void @llvm.dbg.value(metadata i32 0, metadata !3991, metadata !DIExpression()), !dbg !3996
  call void @llvm.dbg.value(metadata i32 0, metadata !3992, metadata !DIExpression()), !dbg !3996
  call void @llvm.dbg.value(metadata i32 0, metadata !3993, metadata !DIExpression()), !dbg !3996
  %1 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3997, !tbaa !3337
  call void @llvm.dbg.value(metadata i32 %1, metadata !3989, metadata !DIExpression()), !dbg !3996
  %2 = and i32 %1, 12, !dbg !3998
  %3 = icmp eq i32 %2, 8, !dbg !3999
  br i1 %3, label %4, label %23, !dbg !3999

4:                                                ; preds = %0
  %5 = lshr i32 %1, 18, !dbg !4000
  %6 = and i32 %5, 15, !dbg !4000
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @__const.HAL_RCC_GetSysClockFreq.aPLLMULFactorTable, i32 0, i32 %6, !dbg !4003
  %8 = load i8, i8* %7, align 1, !dbg !4003, !tbaa !2505
  %9 = zext i8 %8 to i32, !dbg !4003
  call void @llvm.dbg.value(metadata i32 %9, metadata !3992, metadata !DIExpression()), !dbg !3996
  %10 = and i32 %1, 65536, !dbg !4004
  %11 = icmp eq i32 %10, 0, !dbg !4006
  br i1 %11, label %21, label %12, !dbg !4007

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4008, !tbaa !3337
  %14 = lshr i32 %13, 17, !dbg !4010
  %15 = and i32 %14, 1, !dbg !4010
  %16 = getelementptr inbounds [2 x i8], [2 x i8]* @__const.HAL_RCC_GetSysClockFreq.aPredivFactorTable, i32 0, i32 %15, !dbg !4011
  %17 = load i8, i8* %16, align 1, !dbg !4011, !tbaa !2505
  %18 = zext i8 %17 to i32, !dbg !4011
  call void @llvm.dbg.value(metadata i32 %18, metadata !3990, metadata !DIExpression()), !dbg !3996
  %19 = mul nuw nsw i32 %9, 8000000, !dbg !4012
  %20 = udiv i32 %19, %18, !dbg !4013
  call void @llvm.dbg.value(metadata i32 %20, metadata !3991, metadata !DIExpression()), !dbg !3996
  br label %23, !dbg !4014

21:                                               ; preds = %4
  %22 = mul nuw nsw i32 %9, 4000000, !dbg !4015
  call void @llvm.dbg.value(metadata i32 %22, metadata !3991, metadata !DIExpression()), !dbg !3996
  br label %23

23:                                               ; preds = %0, %12, %21
  %24 = phi i32 [ %20, %12 ], [ %22, %21 ], [ 8000000, %0 ], !dbg !4017
  call void @llvm.dbg.value(metadata i32 %24, metadata !3993, metadata !DIExpression()), !dbg !3996
  ret i32 %24, !dbg !4018
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #9 !dbg !4019 {
  %4 = alloca %struct.DMA_Channel_TypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4023, metadata !DIExpression()), !dbg !4036
  call void @llvm.dbg.value(metadata i32 %1, metadata !4024, metadata !DIExpression()), !dbg !4036
  call void @llvm.dbg.value(metadata i32 %2, metadata !4025, metadata !DIExpression()), !dbg !4036
  %6 = bitcast %struct.DMA_Channel_TypeDef* %4 to i8*, !dbg !4037
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #34, !dbg !4037
  call void @llvm.dbg.declare(metadata %struct.DMA_Channel_TypeDef* %4, metadata !4026, metadata !DIExpression()), !dbg !4038
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(16) %6, i8 0, i32 16, i1 false), !dbg !4038
  %7 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %4, i32 0, i32 1, !dbg !4039
  store i32 2, i32* %7, align 4, !dbg !4040, !tbaa !4041
  %8 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %4, i32 0, i32 3, !dbg !4043
  store i32 3, i32* %8, align 4, !dbg !4044, !tbaa !4045
  %9 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %4, i32 0, i32 2, !dbg !4046
  store i32 0, i32* %9, align 4, !dbg !4047, !tbaa !4048
  %10 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %4, i32 0, i32 0, !dbg !4049
  store i32 256, i32* %10, align 4, !dbg !4050, !tbaa !4051
  %11 = bitcast i32* %5 to i8*, !dbg !4052
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11), !dbg !4052
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4034, metadata !DIExpression()), !dbg !4052
  %12 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4052, !tbaa !4053
  %13 = or i32 %12, 4, !dbg !4052
  store volatile i32 %13, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4052, !tbaa !4053
  %14 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4052, !tbaa !4053
  %15 = and i32 %14, 4, !dbg !4052
  store volatile i32 %15, i32* %5, align 4, !dbg !4052, !tbaa !3380
  %16 = load volatile i32, i32* %5, align 4, !dbg !4052, !tbaa !3380
  %17 = bitcast i32* %5 to i8*, !dbg !4054
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17), !dbg !4054
  call void @HAL_GPIO_Init(%struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073809408 to %struct.USART_TypeDef*), %struct.DMA_Channel_TypeDef* noundef nonnull %4) #34, !dbg !4055
  %18 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4056, !tbaa !3337
  %19 = and i32 %18, -117440513, !dbg !4056
  %20 = or i32 %19, %1, !dbg !4056
  store volatile i32 %20, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4056, !tbaa !3337
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #34, !dbg !4057
  ret void, !dbg !4057
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #14 !dbg !4058 {
  store volatile i32 1, i32* inttoptr (i32 1111621708 to i32*), align 4, !dbg !4059, !tbaa !3380
  ret void, !dbg !4060
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #14 !dbg !4061 {
  store volatile i32 0, i32* inttoptr (i32 1111621708 to i32*), align 4, !dbg !4062, !tbaa !3380
  ret void, !dbg !4063
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #16 !dbg !4064 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !4065, !tbaa !3380
  ret i32 %1, !dbg !4066
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #15 !dbg !4067 {
  %1 = call i32 @HAL_RCC_GetHCLKFreq(), !dbg !4068
  %2 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4069, !tbaa !3337
  %3 = lshr i32 %2, 8, !dbg !4070
  %4 = and i32 %3, 7, !dbg !4070
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !4071
  %6 = load i8, i8* %5, align 1, !dbg !4071, !tbaa !2505
  %7 = zext i8 %6 to i32, !dbg !4071
  %8 = lshr i32 %1, %7, !dbg !4072
  ret i32 %8, !dbg !4073
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #15 !dbg !4074 {
  %1 = call i32 @HAL_RCC_GetHCLKFreq(), !dbg !4075
  %2 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4076, !tbaa !3337
  %3 = lshr i32 %2, 11, !dbg !4077
  %4 = and i32 %3, 7, !dbg !4077
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !4078
  %6 = load i8, i8* %5, align 1, !dbg !4078, !tbaa !2505
  %7 = zext i8 %6 to i32, !dbg !4078
  %8 = lshr i32 %1, %7, !dbg !4079
  ret i32 %8, !dbg !4080
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #15 !dbg !4081 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !4085, metadata !DIExpression()), !dbg !4086
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !4087
  store i32 15, i32* %2, align 4, !dbg !4088, !tbaa !3498
  %3 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !4089, !tbaa !3333
  %4 = and i32 %3, 262144, !dbg !4091
  %5 = icmp eq i32 %4, 0, !dbg !4092
  br i1 %5, label %8, label %6, !dbg !4093

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !4094
  store i32 327680, i32* %7, align 4, !dbg !4096, !tbaa !3521
  br label %15, !dbg !4097

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !4098, !tbaa !3333
  %10 = and i32 %9, 65536, !dbg !4100
  %11 = icmp eq i32 %10, 0, !dbg !4101
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !4102
  br i1 %11, label %14, label %13, !dbg !4103

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !4104, !tbaa !3521
  br label %15, !dbg !4106

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !4107, !tbaa !3521
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4109, !tbaa !3337
  %17 = and i32 %16, 131072, !dbg !4109
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !4110
  store i32 %17, i32* %18, align 4, !dbg !4111, !tbaa !3782
  %19 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !4112, !tbaa !3333
  %20 = and i32 %19, 1, !dbg !4114
  %21 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !4115
  store i32 %20, i32* %21, align 4, !dbg !4115, !tbaa !3590
  %22 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !4116, !tbaa !3333
  %23 = lshr i32 %22, 3, !dbg !4117
  %24 = and i32 %23, 31, !dbg !4117
  %25 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !4118
  store i32 %24, i32* %25, align 4, !dbg !4119, !tbaa !3627
  %26 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !4120, !tbaa !3705
  %27 = and i32 %26, 4, !dbg !4122
  %28 = icmp eq i32 %27, 0, !dbg !4123
  br i1 %28, label %31, label %29, !dbg !4124

29:                                               ; preds = %15
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !4125
  store i32 5, i32* %30, align 4, !dbg !4127, !tbaa !3701
  br label %38, !dbg !4128

31:                                               ; preds = %15
  %32 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !4129, !tbaa !3705
  %33 = and i32 %32, 1, !dbg !4131
  %34 = icmp eq i32 %33, 0, !dbg !4132
  %35 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !4133
  br i1 %34, label %37, label %36, !dbg !4134

36:                                               ; preds = %31
  store i32 1, i32* %35, align 4, !dbg !4135, !tbaa !3701
  br label %38, !dbg !4137

37:                                               ; preds = %31
  store i32 0, i32* %35, align 4, !dbg !4138, !tbaa !3701
  br label %38

38:                                               ; preds = %36, %37, %29
  %39 = load volatile i32, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !4140, !tbaa !3455
  %40 = and i32 %39, 1, !dbg !4142
  %41 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !4143
  store i32 %40, i32* %41, align 4, !dbg !4143, !tbaa !3636
  %42 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !4144, !tbaa !3333
  %43 = and i32 %42, 16777216, !dbg !4146
  %44 = icmp eq i32 %43, 0, !dbg !4147
  %45 = select i1 %44, i32 1, i32 2, !dbg !4148
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 0, !dbg !4149
  store i32 %45, i32* %46, align 4, !dbg !4149, !tbaa !3750
  %47 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4150, !tbaa !3337
  %48 = and i32 %47, 65536, !dbg !4151
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 1, !dbg !4152
  store i32 %48, i32* %49, align 4, !dbg !4153, !tbaa !3777
  %50 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4154, !tbaa !3337
  %51 = and i32 %50, 3932160, !dbg !4155
  %52 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 2, !dbg !4156
  store i32 %51, i32* %52, align 4, !dbg !4157, !tbaa !3785
  ret void, !dbg !4158
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #15 !dbg !4159 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !4163, metadata !DIExpression()), !dbg !4165
  call void @llvm.dbg.value(metadata i32* %1, metadata !4164, metadata !DIExpression()), !dbg !4165
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !4166
  store i32 15, i32* %3, align 4, !dbg !4167, !tbaa !3882
  %4 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4168, !tbaa !3337
  %5 = and i32 %4, 3, !dbg !4169
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !4170
  store i32 %5, i32* %6, align 4, !dbg !4171, !tbaa !3912
  %7 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4172, !tbaa !3337
  %8 = and i32 %7, 240, !dbg !4173
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !4174
  store i32 %8, i32* %9, align 4, !dbg !4175, !tbaa !3903
  %10 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4176, !tbaa !3337
  %11 = and i32 %10, 1792, !dbg !4177
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !4178
  store i32 %11, i32* %12, align 4, !dbg !4179, !tbaa !3962
  %13 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !4180, !tbaa !3337
  %14 = lshr i32 %13, 3, !dbg !4181
  %15 = and i32 %14, 1792, !dbg !4181
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !4182
  store i32 %15, i32* %16, align 4, !dbg !4183, !tbaa !3970
  %17 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !4184, !tbaa !3870
  %18 = and i32 %17, 7, !dbg !4185
  store i32 %18, i32* %1, align 4, !dbg !4186, !tbaa !3380
  ret void, !dbg !4187
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #9 !dbg !4188 {
  %1 = load volatile i32, i32* inttoptr (i32 1073877000 to i32*), align 8, !dbg !4189, !tbaa !3342
  %2 = and i32 %1, 128, !dbg !4189
  %3 = icmp eq i32 %2, 0, !dbg !4189
  br i1 %3, label %5, label %4, !dbg !4191

4:                                                ; preds = %0
  call void @HAL_RCC_CSSCallback(), !dbg !4192
  store volatile i8 -128, i8* inttoptr (i32 1073877002 to i8*), align 2, !dbg !4194, !tbaa !2505
  br label %5, !dbg !4195

5:                                                ; preds = %4, %0
  ret void, !dbg !4196
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #9 !dbg !4197 {
  ret void, !dbg !4198
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_Init() local_unnamed_addr #9 !dbg !4199 {
  %1 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !4200, !tbaa !3870
  %2 = or i32 %1, 16, !dbg !4200
  store volatile i32 %2, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !4200, !tbaa !3870
  call void @HAL_NVIC_SetPriorityGrouping(i32 noundef 3) #34, !dbg !4201
  %3 = call i32 @HAL_InitTick(i32 noundef 0), !dbg !4202
  call void @HAL_MspInit(), !dbg !4203
  ret i32 0, !dbg !4204
}

; Function Attrs: noinline nounwind
define weak dso_local i32 @HAL_InitTick(i32 noundef %0) local_unnamed_addr #9 !dbg !4205 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4209, metadata !DIExpression()), !dbg !4210
  %2 = load i32, i32* @SystemCoreClock, align 4, !dbg !4211, !tbaa !3380
  %3 = load i32, i32* @uwTickFreq, align 4, !dbg !4213, !tbaa !2505
  %4 = udiv i32 1000, %3, !dbg !4214
  %5 = udiv i32 %2, %4, !dbg !4215
  %6 = call i32 @HAL_SYSTICK_Config(i32 noundef %5) #34, !dbg !4216
  %7 = icmp eq i32 %6, 0, !dbg !4217
  %8 = icmp ult i32 %0, 16
  %9 = and i1 %8, %7, !dbg !4218
  br i1 %9, label %10, label %11, !dbg !4218

10:                                               ; preds = %1
  call void @HAL_NVIC_SetPriority(i32 noundef -1, i32 noundef %0, i32 noundef 0) #34, !dbg !4219
  store i32 %0, i32* @uwTickPrio, align 4, !dbg !4222, !tbaa !3380
  br label %11, !dbg !4223

11:                                               ; preds = %1, %10
  %12 = phi i32 [ 0, %10 ], [ 1, %1 ], !dbg !4210
  ret i32 %12, !dbg !4224
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_MspInit() local_unnamed_addr #9 !dbg !4225 {
  ret void, !dbg !4226
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_DeInit() local_unnamed_addr #9 !dbg !4227 {
  store volatile i32 -1, i32* inttoptr (i32 1073877004 to i32*), align 4, !dbg !4228, !tbaa !4229
  store volatile i32 0, i32* inttoptr (i32 1073877008 to i32*), align 16, !dbg !4230, !tbaa !4231
  store volatile i32 -1, i32* inttoptr (i32 1073877004 to i32*), align 4, !dbg !4232, !tbaa !4229
  store volatile i32 0, i32* inttoptr (i32 1073877004 to i32*), align 4, !dbg !4233, !tbaa !4229
  call void @HAL_MspDeInit(), !dbg !4234
  ret i32 0, !dbg !4235
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_MspDeInit() local_unnamed_addr #9 !dbg !4236 {
  ret void, !dbg !4237
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_IncTick() local_unnamed_addr #9 !dbg !4238 {
  %1 = load i32, i32* @uwTickFreq, align 4, !dbg !4239, !tbaa !2505
  %2 = load volatile i32, i32* @uwTick, align 4, !dbg !4240, !tbaa !3380
  %3 = add i32 %2, %1, !dbg !4240
  store volatile i32 %3, i32* @uwTick, align 4, !dbg !4240, !tbaa !3380
  ret void, !dbg !4241
}

; Function Attrs: noinline nounwind
define weak dso_local i32 @HAL_GetTick() local_unnamed_addr #9 !dbg !4242 {
  %1 = load volatile i32, i32* @uwTick, align 4, !dbg !4243, !tbaa !3380
  ret i32 %1, !dbg !4244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetTickPrio() local_unnamed_addr #16 !dbg !4245 {
  %1 = load i32, i32* @uwTickPrio, align 4, !dbg !4246, !tbaa !3380
  ret i32 %1, !dbg !4247
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_SetTickFreq(i32 noundef %0) local_unnamed_addr #9 !dbg !4248 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4252, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.value(metadata i32 0, metadata !4253, metadata !DIExpression()), !dbg !4254
  %2 = load i32, i32* @uwTickFreq, align 4, !dbg !4255, !tbaa !2505
  %3 = icmp eq i32 %2, %0, !dbg !4257
  br i1 %3, label %9, label %4, !dbg !4258

4:                                                ; preds = %1
  %5 = load i32, i32* @uwTickPrio, align 4, !dbg !4259, !tbaa !3380
  %6 = call i32 @HAL_InitTick(i32 noundef %5), !dbg !4261
  call void @llvm.dbg.value(metadata i32 %6, metadata !4253, metadata !DIExpression()), !dbg !4254
  %7 = icmp eq i32 %6, 0, !dbg !4262
  br i1 %7, label %8, label %9, !dbg !4264

8:                                                ; preds = %4
  store i32 %0, i32* @uwTickFreq, align 4, !dbg !4265, !tbaa !2505
  br label %9, !dbg !4267

9:                                                ; preds = %4, %8, %1
  %10 = phi i32 [ 0, %8 ], [ %6, %4 ], [ 0, %1 ], !dbg !4254
  call void @llvm.dbg.value(metadata i32 %10, metadata !4253, metadata !DIExpression()), !dbg !4254
  ret i32 %10, !dbg !4268
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetTickFreq() local_unnamed_addr #16 !dbg !4269 {
  %1 = load i32, i32* @uwTickFreq, align 4, !dbg !4272, !tbaa !2505
  ret i32 %1, !dbg !4273
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_Delay(i32 noundef %0) local_unnamed_addr #9 !dbg !4274 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4276, metadata !DIExpression()), !dbg !4279
  %2 = call i32 @HAL_GetTick(), !dbg !4280
  call void @llvm.dbg.value(metadata i32 %2, metadata !4277, metadata !DIExpression()), !dbg !4279
  call void @llvm.dbg.value(metadata i32 %0, metadata !4278, metadata !DIExpression()), !dbg !4279
  %3 = icmp eq i32 %0, -1, !dbg !4281
  %4 = load i32, i32* @uwTickFreq, align 4, !dbg !4283
  %5 = add i32 %4, %0, !dbg !4283
  %6 = select i1 %3, i32 -1, i32 %5, !dbg !4283
  call void @llvm.dbg.value(metadata i32 %6, metadata !4278, metadata !DIExpression()), !dbg !4279
  br label %7, !dbg !4284

7:                                                ; preds = %7, %1
  %8 = call i32 @HAL_GetTick(), !dbg !4285
  %9 = sub i32 %8, %2, !dbg !4286
  %10 = icmp ult i32 %9, %6, !dbg !4287
  br i1 %10, label %7, label %11, !dbg !4284, !llvm.loop !4288

11:                                               ; preds = %7
  ret void, !dbg !4290
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_SuspendTick() local_unnamed_addr #9 !dbg !4291 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !4292, !tbaa !4051
  %2 = and i32 %1, -3, !dbg !4292
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !4292, !tbaa !4051
  ret void, !dbg !4293
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_ResumeTick() local_unnamed_addr #9 !dbg !4294 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !4295, !tbaa !4051
  %2 = or i32 %1, 2, !dbg !4295
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !4295, !tbaa !4051
  ret void, !dbg !4296
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define dso_local i32 @HAL_GetHalVersion() local_unnamed_addr #11 !dbg !4297 {
  ret i32 16843776, !dbg !4298
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_GetREVID() local_unnamed_addr #15 !dbg !4299 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600576 to i32*), align 8192, !dbg !4300, !tbaa !3682
  %2 = lshr i32 %1, 16, !dbg !4301
  ret i32 %2, !dbg !4302
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_GetDEVID() local_unnamed_addr #15 !dbg !4303 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600576 to i32*), align 8192, !dbg !4304, !tbaa !3682
  %2 = and i32 %1, 4095, !dbg !4305
  ret i32 %2, !dbg !4306
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetUIDw0() local_unnamed_addr #16 !dbg !4307 {
  %1 = load i32, i32* inttoptr (i32 536868840 to i32*), align 8, !dbg !4308, !tbaa !3380
  ret i32 %1, !dbg !4309
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetUIDw1() local_unnamed_addr #16 !dbg !4310 {
  %1 = load i32, i32* inttoptr (i32 536868844 to i32*), align 4, !dbg !4311, !tbaa !3380
  ret i32 %1, !dbg !4312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetUIDw2() local_unnamed_addr #16 !dbg !4313 {
  %1 = load i32, i32* inttoptr (i32 536868848 to i32*), align 16, !dbg !4314, !tbaa !3380
  ret i32 %1, !dbg !4315
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_EnableDBGSleepMode() local_unnamed_addr #14 !dbg !4316 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4317, !tbaa !4318
  %2 = or i32 %1, 1, !dbg !4317
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4317, !tbaa !4318
  ret void, !dbg !4319
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_DisableDBGSleepMode() local_unnamed_addr #14 !dbg !4320 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4321, !tbaa !4318
  %2 = and i32 %1, -2, !dbg !4321
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4321, !tbaa !4318
  ret void, !dbg !4322
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_EnableDBGStopMode() local_unnamed_addr #14 !dbg !4323 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4324, !tbaa !4318
  %2 = or i32 %1, 2, !dbg !4324
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4324, !tbaa !4318
  ret void, !dbg !4325
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_DisableDBGStopMode() local_unnamed_addr #14 !dbg !4326 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4327, !tbaa !4318
  %2 = and i32 %1, -3, !dbg !4327
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4327, !tbaa !4318
  ret void, !dbg !4328
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_EnableDBGStandbyMode() local_unnamed_addr #14 !dbg !4329 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4330, !tbaa !4318
  %2 = or i32 %1, 4, !dbg !4330
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4330, !tbaa !4318
  ret void, !dbg !4331
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_DisableDBGStandbyMode() local_unnamed_addr #14 !dbg !4332 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4333, !tbaa !4318
  %2 = and i32 %1, -5, !dbg !4333
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !4333, !tbaa !4318
  ret void, !dbg !4334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local nonnull i32* @pxPortInitialiseStack(i32* noundef writeonly %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !4335 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !4342, metadata !DIExpression()), !dbg !4345
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !4343, metadata !DIExpression()), !dbg !4345
  call void @llvm.dbg.value(metadata i8* %2, metadata !4344, metadata !DIExpression()), !dbg !4345
  %4 = getelementptr inbounds i32, i32* %0, i32 -1, !dbg !4346
  call void @llvm.dbg.value(metadata i32* %4, metadata !4342, metadata !DIExpression()), !dbg !4345
  store i32 16777216, i32* %4, align 4, !dbg !4347, !tbaa !3380
  %5 = getelementptr inbounds i32, i32* %0, i32 -2, !dbg !4348
  call void @llvm.dbg.value(metadata i32* %5, metadata !4342, metadata !DIExpression()), !dbg !4345
  %6 = ptrtoint void (i8*)* %1 to i32, !dbg !4349
  %7 = and i32 %6, -2, !dbg !4350
  store i32 %7, i32* %5, align 4, !dbg !4351, !tbaa !3380
  %8 = getelementptr inbounds i32, i32* %0, i32 -3, !dbg !4352
  call void @llvm.dbg.value(metadata i32* %8, metadata !4342, metadata !DIExpression()), !dbg !4345
  store i32 ptrtoint (void ()* @prvTaskExitError to i32), i32* %8, align 4, !dbg !4353, !tbaa !3380
  %9 = getelementptr inbounds i32, i32* %0, i32 -8, !dbg !4354
  call void @llvm.dbg.value(metadata i32* %9, metadata !4342, metadata !DIExpression()), !dbg !4345
  %10 = ptrtoint i8* %2 to i32, !dbg !4355
  store i32 %10, i32* %9, align 4, !dbg !4356, !tbaa !3380
  %11 = getelementptr inbounds i32, i32* %0, i32 -16, !dbg !4357
  call void @llvm.dbg.value(metadata i32* %11, metadata !4342, metadata !DIExpression()), !dbg !4345
  ret i32* %11, !dbg !4358
}

; Function Attrs: noinline nounwind
define internal void @prvTaskExitError() #9 !dbg !4359 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4362
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4362
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4361, metadata !DIExpression()), !dbg !4363
  store volatile i32 0, i32* %1, align 4, !dbg !4363, !tbaa !3380
  %3 = load i32, i32* @uxCriticalNesting, align 4, !dbg !4364, !tbaa !4366
  %4 = icmp eq i32 %3, -1, !dbg !4364
  %5 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !4368
  br i1 %4, label %7, label %6, !dbg !4369

6:                                                ; preds = %0, %6
  br label %6, !dbg !4370, !llvm.loop !4374

7:                                                ; preds = %0, %7
  %8 = load volatile i32, i32* %1, align 4, !dbg !4376, !tbaa !3380
  %9 = icmp eq i32 %8, 0, !dbg !4377
  br i1 %9, label %7, label %10, !dbg !4378, !llvm.loop !4379

10:                                               ; preds = %7
  %11 = bitcast i32* %1 to i8*, !dbg !4381
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11), !dbg !4381
  ret void, !dbg !4381
}

; Function Attrs: naked noinline nounwind
define dso_local void @SVC_Handler() #17 !dbg !4382 {
  call void asm sideeffect "\09ldr\09r3, pxCurrentTCBConst2\09\09\0A\09ldr r1, [r3]\09\09\09\09\09\0A\09ldr r0, [r1]\09\09\09\09\09\0A\09ldmia r0!, {r4-r11}\09\09\09\09\0A\09msr psp, r0\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\0A\09mov r0, #0 \09\09\09\09\09\09\0A\09msr\09basepri, r0\09\09\09\09\09\0A\09orr r14, #0xd\09\09\09\09\09\0A\09bx r14\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\0A\09.align 4\09\09\09\09\09\09\0ApxCurrentTCBConst2: .word pxCurrentTCB\09\09\09\09\0A", ""() #34, !dbg !4383, !srcloc !4384
  unreachable, !dbg !4385
}

; Function Attrs: noinline nounwind
define dso_local i32 @xPortStartScheduler() local_unnamed_addr #9 !dbg !4386 {
  %1 = alloca i32, align 4
  %2 = alloca i8, align 1
  %3 = bitcast i32* %1 to i8*, !dbg !4395
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4395
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4390, metadata !DIExpression()), !dbg !4396
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -536812544 to i8*), metadata !4392, metadata !DIExpression()), !dbg !4397
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2), !dbg !4398
  call void @llvm.dbg.declare(metadata i8* %2, metadata !4394, metadata !DIExpression()), !dbg !4399
  %4 = load volatile i8, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !4400, !tbaa !2505
  %5 = zext i8 %4 to i32, !dbg !4400
  store volatile i32 %5, i32* %1, align 4, !dbg !4401, !tbaa !3380
  store volatile i8 -1, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !4402, !tbaa !2505
  %6 = load volatile i8, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !4403, !tbaa !2505
  store volatile i8 %6, i8* %2, align 1, !dbg !4404, !tbaa !2505
  %7 = load volatile i8, i8* %2, align 1, !dbg !4405, !tbaa !2505
  %8 = and i8 %7, 80, !dbg !4406
  store i8 %8, i8* @ucMaxSysCallPriority, align 1, !dbg !4407, !tbaa !2505
  store i32 7, i32* @ulMaxPRIGROUPValue, align 4, !dbg !4408, !tbaa !3380
  %9 = load volatile i8, i8* %2, align 1, !dbg !4409, !tbaa !2505
  %10 = icmp slt i8 %9, 0, !dbg !4410
  br i1 %10, label %11, label %18, !dbg !4411

11:                                               ; preds = %0, %11
  %12 = load i32, i32* @ulMaxPRIGROUPValue, align 4, !dbg !4412, !tbaa !3380
  %13 = add i32 %12, -1, !dbg !4412
  store i32 %13, i32* @ulMaxPRIGROUPValue, align 4, !dbg !4412, !tbaa !3380
  %14 = load volatile i8, i8* %2, align 1, !dbg !4414, !tbaa !2505
  %15 = shl i8 %14, 1, !dbg !4414
  store volatile i8 %15, i8* %2, align 1, !dbg !4414, !tbaa !2505
  %16 = load volatile i8, i8* %2, align 1, !dbg !4409, !tbaa !2505
  %17 = icmp slt i8 %16, 0, !dbg !4410
  br i1 %17, label %11, label %18, !dbg !4411, !llvm.loop !4415

18:                                               ; preds = %11, %0
  %19 = load i32, i32* @ulMaxPRIGROUPValue, align 4, !dbg !4417, !tbaa !3380
  %20 = icmp eq i32 %19, 3, !dbg !4417
  br i1 %20, label %24, label %21, !dbg !4420

21:                                               ; preds = %18
  %22 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !4421, !srcloc !4427
  call void @llvm.dbg.value(metadata i32 %22, metadata !4424, metadata !DIExpression()) #34, !dbg !4428
  br label %23, !dbg !4429

23:                                               ; preds = %23, %21
  br label %23, !dbg !4430, !llvm.loop !4433

24:                                               ; preds = %18
  %25 = shl i32 %19, 8, !dbg !4435
  %26 = and i32 %25, 1792, !dbg !4436
  store i32 %26, i32* @ulMaxPRIGROUPValue, align 4, !dbg !4436, !tbaa !3380
  %27 = load volatile i32, i32* %1, align 4, !dbg !4437, !tbaa !3380
  %28 = trunc i32 %27 to i8, !dbg !4437
  store volatile i8 %28, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !4438, !tbaa !2505
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2), !dbg !4439
  %29 = bitcast i32* %1 to i8*, !dbg !4439
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29), !dbg !4439
  %30 = load volatile i32, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !4440, !tbaa !3380
  %31 = or i32 %30, 15728640, !dbg !4440
  store volatile i32 %31, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !4440, !tbaa !3380
  %32 = load volatile i32, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !4441, !tbaa !3380
  %33 = or i32 %32, -268435456, !dbg !4441
  store volatile i32 %33, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !4441, !tbaa !3380
  call void @vPortSetupTimerInterrupt(), !dbg !4442
  store i32 0, i32* @uxCriticalNesting, align 4, !dbg !4443, !tbaa !4366
  call void @prvPortStartFirstTask(), !dbg !4444
  call void @vTaskSwitchContext() #34, !dbg !4445
  call void @prvTaskExitError(), !dbg !4446
  ret i32 0, !dbg !4447
}

; Function Attrs: noinline nounwind
define weak dso_local void @vPortSetupTimerInterrupt() local_unnamed_addr #9 !dbg !4448 {
  store volatile i32 0, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !4449, !tbaa !3380
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !4450, !tbaa !3380
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !4451, !tbaa !3380
  %2 = udiv i32 %1, 1000, !dbg !4452
  %3 = add nsw i32 %2, -1, !dbg !4453
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !4454, !tbaa !3380
  store volatile i32 7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !4455, !tbaa !3380
  ret void, !dbg !4456
}

; Function Attrs: naked noinline nounwind
define internal void @prvPortStartFirstTask() #17 !dbg !4457 {
  call void asm sideeffect " ldr r0, =0xE000ED08 \09\0A ldr r0, [r0] \09\09\09\0A ldr r0, [r0] \09\09\09\0A msr msp, r0\09\09\09\0A cpsie i\09\09\09\09\0A cpsie f\09\09\09\09\0A dsb\09\09\09\09\09\0A isb\09\09\09\09\09\0A svc 0\09\09\09\09\09\0A nop\09\09\09\09\09\0A", ""() #34, !dbg !4458, !srcloc !4459
  unreachable, !dbg !4460
}

; Function Attrs: noinline nounwind
define dso_local void @vPortEndScheduler() local_unnamed_addr #9 !dbg !4461 {
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !4462, !tbaa !4366
  %2 = icmp eq i32 %1, 1000, !dbg !4462
  br i1 %2, label %6, label %3, !dbg !4464

3:                                                ; preds = %0
  %4 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !4465, !srcloc !4427
  call void @llvm.dbg.value(metadata i32 %4, metadata !4424, metadata !DIExpression()) #34, !dbg !4468
  br label %5, !dbg !4469

5:                                                ; preds = %5, %3
  br label %5, !dbg !4470, !llvm.loop !4473

6:                                                ; preds = %0
  ret void, !dbg !4475
}

; Function Attrs: noinline nounwind
define dso_local void @vPortEnterCritical() local_unnamed_addr #9 !dbg !4476 {
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !4477, !srcloc !4427
  call void @llvm.dbg.value(metadata i32 %1, metadata !4424, metadata !DIExpression()) #34, !dbg !4479
  %2 = load i32, i32* @uxCriticalNesting, align 4, !dbg !4480, !tbaa !4366
  %3 = add i32 %2, 1, !dbg !4480
  store i32 %3, i32* @uxCriticalNesting, align 4, !dbg !4480, !tbaa !4366
  %4 = icmp eq i32 %2, 0, !dbg !4481
  br i1 %4, label %5, label %12, !dbg !4483

5:                                                ; preds = %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4484, !tbaa !3380
  %7 = and i32 %6, 255, !dbg !4484
  %8 = icmp eq i32 %7, 0, !dbg !4484
  br i1 %8, label %12, label %9, !dbg !4487

9:                                                ; preds = %5
  %10 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !4488, !srcloc !4427
  call void @llvm.dbg.value(metadata i32 %10, metadata !4424, metadata !DIExpression()) #34, !dbg !4491
  br label %11, !dbg !4492

11:                                               ; preds = %11, %9
  br label %11, !dbg !4493, !llvm.loop !4496

12:                                               ; preds = %5, %0
  ret void, !dbg !4498
}

; Function Attrs: noinline nounwind
define dso_local void @vPortExitCritical() local_unnamed_addr #9 !dbg !4499 {
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !4500, !tbaa !4366
  %2 = icmp eq i32 %1, 0, !dbg !4500
  br i1 %2, label %3, label %6, !dbg !4502

3:                                                ; preds = %0
  %4 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !4503, !srcloc !4427
  call void @llvm.dbg.value(metadata i32 %4, metadata !4424, metadata !DIExpression()) #34, !dbg !4506
  br label %5, !dbg !4507

5:                                                ; preds = %5, %3
  br label %5, !dbg !4508, !llvm.loop !4511

6:                                                ; preds = %0
  %7 = add i32 %1, -1, !dbg !4513
  store i32 %7, i32* @uxCriticalNesting, align 4, !dbg !4513, !tbaa !4366
  %8 = icmp eq i32 %7, 0, !dbg !4514
  br i1 %8, label %9, label %10, !dbg !4516

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata i32 0, metadata !4517, metadata !DIExpression()) #34, !dbg !4520
  call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 0) #34, !dbg !4523, !srcloc !4524
  br label %10, !dbg !4525

10:                                               ; preds = %9, %6
  ret void, !dbg !4526
}

; Function Attrs: naked noinline nounwind
define dso_local void @PendSV_Handler() #17 !dbg !4527 {
  call void asm sideeffect "\09mrs r0, psp\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldr\09r3, pxCurrentTCBConst\09\09\09\0A\09ldr\09r2, [r3]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09stmdb r0!, {r4-r11}\09\09\09\09\09\0A\09str r0, [r2]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09stmdb sp!, {r3, r14}\09\09\09\09\0A\09mov r0, $0\09\09\09\09\09\09\09\0A\09msr basepri, r0\09\09\09\09\09\09\0A\09bl vTaskSwitchContext\09\09\09\09\0A\09mov r0, #0\09\09\09\09\09\09\09\0A\09msr basepri, r0\09\09\09\09\09\09\0A\09ldmia sp!, {r3, r14}\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldr r1, [r3]\09\09\09\09\09\09\0A\09ldr r0, [r1]\09\09\09\09\09\09\0A\09ldmia r0!, {r4-r11}\09\09\09\09\09\0A\09msr psp, r0\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\0A\09bx r14\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09.align 4\09\09\09\09\09\09\09\0ApxCurrentTCBConst: .word pxCurrentTCB\09\0A", "i"(i32 80) #34, !dbg !4528, !srcloc !4529
  unreachable, !dbg !4530
}

; Function Attrs: noinline nounwind
define dso_local void @xPortSysTickHandler() local_unnamed_addr #9 !dbg !4531 {
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !4532, !srcloc !4427
  call void @llvm.dbg.value(metadata i32 %1, metadata !4424, metadata !DIExpression()) #34, !dbg !4534
  %2 = call i32 @xTaskIncrementTick() #34, !dbg !4535
  %3 = icmp eq i32 %2, 0, !dbg !4538
  br i1 %3, label %5, label %4, !dbg !4539

4:                                                ; preds = %0
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4540, !tbaa !3380
  br label %5, !dbg !4542

5:                                                ; preds = %4, %0
  call void @llvm.dbg.value(metadata i32 0, metadata !4517, metadata !DIExpression()) #34, !dbg !4543
  call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 0) #34, !dbg !4545, !srcloc !4524
  ret void, !dbg !4546
}

; Function Attrs: noinline nounwind
define dso_local void @vPortValidateInterruptPriority() local_unnamed_addr #9 !dbg !4547 {
  %1 = call i32 asm sideeffect "mrs $0, ipsr", "=r,~{memory}"() #34, !dbg !4551, !srcloc !4552
  call void @llvm.dbg.value(metadata i32 %1, metadata !4549, metadata !DIExpression()), !dbg !4553
  %2 = icmp ugt i32 %1, 15, !dbg !4554
  br i1 %2, label %3, label %11, !dbg !4556

3:                                                ; preds = %0
  %4 = getelementptr inbounds i8, i8* inttoptr (i32 -536812560 to i8*), i32 %1, !dbg !4557
  %5 = load volatile i8, i8* %4, align 1, !dbg !4557, !tbaa !2505
  call void @llvm.dbg.value(metadata i8 %5, metadata !4550, metadata !DIExpression()), !dbg !4553
  %6 = load i8, i8* @ucMaxSysCallPriority, align 1, !dbg !4559, !tbaa !2505
  %7 = icmp ult i8 %5, %6, !dbg !4559
  br i1 %7, label %8, label %11, !dbg !4561

8:                                                ; preds = %3
  %9 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !4562, !srcloc !4427
  call void @llvm.dbg.value(metadata i32 %9, metadata !4424, metadata !DIExpression()) #34, !dbg !4565
  br label %10, !dbg !4566

10:                                               ; preds = %10, %8
  br label %10, !dbg !4567, !llvm.loop !4570

11:                                               ; preds = %3, %0
  %12 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !4572, !tbaa !3380
  %13 = and i32 %12, 1792, !dbg !4572
  %14 = load i32, i32* @ulMaxPRIGROUPValue, align 4, !dbg !4572, !tbaa !3380
  %15 = icmp ugt i32 %13, %14, !dbg !4572
  br i1 %15, label %16, label %19, !dbg !4574

16:                                               ; preds = %11
  %17 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !4575, !srcloc !4427
  call void @llvm.dbg.value(metadata i32 %17, metadata !4424, metadata !DIExpression()) #34, !dbg !4578
  br label %18, !dbg !4579

18:                                               ; preds = %18, %16
  br label %18, !dbg !4580, !llvm.loop !4583

19:                                               ; preds = %11
  ret void, !dbg !4585
}

; Function Attrs: noinline nounwind
define dso_local i8* @xTaskCreateStatic(void (i8*)* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2, i8* noundef %3, i32 noundef %4, i32* noundef %5, %struct.xSTATIC_TCB* noundef %6) local_unnamed_addr #9 !dbg !4586 {
  %8 = alloca i8*, align 4
  %9 = alloca i32, align 4
  call void @llvm.dbg.value(metadata void (i8*)* %0, metadata !4612, metadata !DIExpression()), !dbg !4624
  call void @llvm.dbg.value(metadata i8* %1, metadata !4613, metadata !DIExpression()), !dbg !4624
  call void @llvm.dbg.value(metadata i32 %2, metadata !4614, metadata !DIExpression()), !dbg !4624
  call void @llvm.dbg.value(metadata i8* %3, metadata !4615, metadata !DIExpression()), !dbg !4624
  call void @llvm.dbg.value(metadata i32 %4, metadata !4616, metadata !DIExpression()), !dbg !4624
  call void @llvm.dbg.value(metadata i32* %5, metadata !4617, metadata !DIExpression()), !dbg !4624
  call void @llvm.dbg.value(metadata %struct.xSTATIC_TCB* %6, metadata !4618, metadata !DIExpression()), !dbg !4624
  %10 = bitcast i8** %8 to i8*, !dbg !4625
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #34, !dbg !4625
  %11 = icmp eq i32* %5, null, !dbg !4626
  br i1 %11, label %12, label %15, !dbg !4628

12:                                               ; preds = %7
  %13 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !4629, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %13, metadata !4632, metadata !DIExpression()) #34, !dbg !4636
  br label %14, !dbg !4637

14:                                               ; preds = %14, %12
  br label %14, !dbg !4638, !llvm.loop !4641

15:                                               ; preds = %7
  %16 = icmp eq %struct.xSTATIC_TCB* %6, null, !dbg !4643
  br i1 %16, label %17, label %20, !dbg !4645

17:                                               ; preds = %15
  %18 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !4646, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %18, metadata !4632, metadata !DIExpression()) #34, !dbg !4649
  br label %19, !dbg !4650

19:                                               ; preds = %19, %17
  br label %19, !dbg !4651, !llvm.loop !4654

20:                                               ; preds = %15
  %21 = bitcast i32* %9 to i8*, !dbg !4656
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !4656
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4621, metadata !DIExpression()), !dbg !4657
  store volatile i32 76, i32* %9, align 4, !dbg !4657, !tbaa !3380
  %22 = load volatile i32, i32* %9, align 4, !dbg !4658, !tbaa !3380
  %23 = icmp eq i32 %22, 76, !dbg !4658
  br i1 %23, label %27, label %24, !dbg !4660

24:                                               ; preds = %20
  %25 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !4661, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %25, metadata !4632, metadata !DIExpression()) #34, !dbg !4664
  br label %26, !dbg !4665

26:                                               ; preds = %26, %24
  br label %26, !dbg !4666, !llvm.loop !4669

27:                                               ; preds = %20
  %28 = bitcast i32* %9 to i8*, !dbg !4671
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28), !dbg !4671
  %29 = bitcast %struct.xSTATIC_TCB* %6 to %struct.tskTaskControlBlock*, !dbg !4672
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %29, metadata !4619, metadata !DIExpression()), !dbg !4624
  %30 = getelementptr inbounds %struct.xSTATIC_TCB, %struct.xSTATIC_TCB* %6, i32 0, i32 3, !dbg !4675
  %31 = bitcast i8** %30 to i32**, !dbg !4675
  store i32* %5, i32** %31, align 4, !dbg !4676, !tbaa !4677
  call void @llvm.dbg.value(metadata i8** %8, metadata !4620, metadata !DIExpression(DW_OP_deref)), !dbg !4624
  call fastcc void @prvInitialiseNewTask(void (i8*)* noundef %0, i8* noundef %1, i32 noundef %2, i8* noundef %3, i32 noundef %4, i8** noundef nonnull %8, %struct.tskTaskControlBlock* noundef nonnull %29), !dbg !4680
  call fastcc void @prvAddNewTaskToReadyList(%struct.tskTaskControlBlock* noundef nonnull %29), !dbg !4681
  %32 = load i8*, i8** %8, align 4, !dbg !4682, !tbaa !2495
  call void @llvm.dbg.value(metadata i8* %32, metadata !4620, metadata !DIExpression()), !dbg !4624
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #34, !dbg !4683
  ret i8* %32, !dbg !4684
}

; Function Attrs: noinline nounwind
define internal fastcc void @prvInitialiseNewTask(void (i8*)* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2, i8* noundef %3, i32 noundef %4, i8** noundef writeonly %5, %struct.tskTaskControlBlock* noundef %6) unnamed_addr #9 !dbg !4685 {
  call void @llvm.dbg.value(metadata void (i8*)* %0, metadata !4700, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata i8* %1, metadata !4701, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata i32 %2, metadata !4702, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata i8* %3, metadata !4703, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata i32 %4, metadata !4704, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata i8** %5, metadata !4705, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %6, metadata !4706, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata %struct.xMEMORY_REGION* undef, metadata !4707, metadata !DIExpression()), !dbg !4710
  %8 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 4, !dbg !4711
  %9 = load i32*, i32** %8, align 4, !dbg !4711, !tbaa !4677
  %10 = add i32 %2, -1, !dbg !4713
  %11 = getelementptr inbounds i32, i32* %9, i32 %10, !dbg !4714
  call void @llvm.dbg.value(metadata i32* %11, metadata !4708, metadata !DIExpression()), !dbg !4710
  %12 = ptrtoint i32* %11 to i32, !dbg !4715
  %13 = and i32 %12, -8, !dbg !4716
  call void @llvm.dbg.value(metadata i32* %25, metadata !4708, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata i32 0, metadata !4709, metadata !DIExpression()), !dbg !4710
  br label %14, !dbg !4717

14:                                               ; preds = %14, %7
  %15 = phi i32 [ 0, %7 ], [ %21, %14 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !4709, metadata !DIExpression()), !dbg !4710
  %16 = getelementptr inbounds i8, i8* %1, i32 %15, !dbg !4719
  %17 = load i8, i8* %16, align 1, !dbg !4719, !tbaa !2505
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 5, i32 %15, !dbg !4722
  store i8 %17, i8* %18, align 1, !dbg !4723, !tbaa !2505
  %19 = load i8, i8* %16, align 1, !dbg !4724, !tbaa !2505
  %20 = icmp ne i8 %19, 0, !dbg !4726
  %21 = add nuw nsw i32 %15, 1, !dbg !4727
  call void @llvm.dbg.value(metadata i32 %21, metadata !4709, metadata !DIExpression()), !dbg !4710
  %22 = icmp ult i32 %15, 15
  %23 = select i1 %20, i1 %22, i1 false, !dbg !4728
  call void @llvm.dbg.value(metadata i32 %21, metadata !4709, metadata !DIExpression()), !dbg !4710
  br i1 %23, label %14, label %24, !dbg !4728, !llvm.loop !4729

24:                                               ; preds = %14
  %25 = inttoptr i32 %13 to i32*, !dbg !4731
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 5, i32 15, !dbg !4732
  store i8 0, i8* %26, align 1, !dbg !4733, !tbaa !2505
  %27 = icmp ult i32 %4, 6, !dbg !4734
  %28 = select i1 %27, i32 %4, i32 6, !dbg !4734
  call void @llvm.dbg.value(metadata i32 %28, metadata !4704, metadata !DIExpression()), !dbg !4710
  %29 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !4735
  store i32 %28, i32* %29, align 4, !dbg !4736, !tbaa !4737
  %30 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 1, !dbg !4738
  call void @vListInitialiseItem(%struct.xLIST_ITEM* noundef nonnull %30) #34, !dbg !4739
  %31 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !4740
  call void @vListInitialiseItem(%struct.xLIST_ITEM* noundef nonnull %31) #34, !dbg !4741
  %32 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 1, i32 3, !dbg !4742
  %33 = bitcast i8** %32 to %struct.tskTaskControlBlock**, !dbg !4742
  store %struct.tskTaskControlBlock* %6, %struct.tskTaskControlBlock** %33, align 4, !dbg !4742, !tbaa !4743
  %34 = xor i32 %28, 7, !dbg !4744
  %35 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %31, i32 0, i32 0, !dbg !4744
  store i32 %34, i32* %35, align 4, !dbg !4744, !tbaa !4745
  %36 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, i32 3, !dbg !4746
  %37 = bitcast i8** %36 to %struct.tskTaskControlBlock**, !dbg !4746
  store %struct.tskTaskControlBlock* %6, %struct.tskTaskControlBlock** %37, align 4, !dbg !4746, !tbaa !4747
  %38 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 6, !dbg !4748
  store volatile i32 0, i32* %38, align 4, !dbg !4750, !tbaa !4751
  %39 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 7, !dbg !4752
  store volatile i8 0, i8* %39, align 4, !dbg !4753, !tbaa !4754
  %40 = call i32* @pxPortInitialiseStack(i32* noundef %25, void (i8*)* noundef %0, i8* noundef %3) #34, !dbg !4755
  %41 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 0, !dbg !4757
  store i32* %40, i32** %41, align 4, !dbg !4758, !tbaa !4759
  %42 = icmp eq i8** %5, null, !dbg !4760
  br i1 %42, label %45, label %43, !dbg !4762

43:                                               ; preds = %24
  %44 = bitcast i8** %5 to %struct.tskTaskControlBlock**, !dbg !4763
  store %struct.tskTaskControlBlock* %6, %struct.tskTaskControlBlock** %44, align 4, !dbg !4763, !tbaa !2495
  br label %45, !dbg !4765

45:                                               ; preds = %24, %43
  ret void, !dbg !4766
}

; Function Attrs: noinline nounwind
define internal fastcc void @prvAddNewTaskToReadyList(%struct.tskTaskControlBlock* noundef %0) unnamed_addr #9 !dbg !4767 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !4771, metadata !DIExpression()), !dbg !4772
  call void @vPortEnterCritical() #34, !dbg !4773
  %2 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !4774, !tbaa !4366
  %3 = add i32 %2, 1, !dbg !4774
  store volatile i32 %3, i32* @uxCurrentNumberOfTasks, align 4, !dbg !4774, !tbaa !4366
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4776, !tbaa !2495
  %5 = icmp eq %struct.tskTaskControlBlock* %4, null, !dbg !4778
  br i1 %5, label %6, label %10, !dbg !4779

6:                                                ; preds = %1
  store volatile %struct.tskTaskControlBlock* %0, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4780, !tbaa !2495
  %7 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !4782, !tbaa !4366
  %8 = icmp eq i32 %7, 1, !dbg !4784
  br i1 %8, label %9, label %21, !dbg !4785

9:                                                ; preds = %6
  call fastcc void @prvInitialiseTaskLists(), !dbg !4786
  br label %21, !dbg !4788

10:                                               ; preds = %1
  %11 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !4789, !tbaa !4366
  %12 = icmp eq i32 %11, 0, !dbg !4792
  br i1 %12, label %13, label %21, !dbg !4793

13:                                               ; preds = %10
  %14 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4794, !tbaa !2495
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 3, !dbg !4797
  %16 = load i32, i32* %15, align 4, !dbg !4797, !tbaa !4737
  %17 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 3, !dbg !4798
  %18 = load i32, i32* %17, align 4, !dbg !4798, !tbaa !4737
  %19 = icmp ugt i32 %16, %18, !dbg !4799
  br i1 %19, label %21, label %20, !dbg !4800

20:                                               ; preds = %13
  store volatile %struct.tskTaskControlBlock* %0, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4801, !tbaa !2495
  br label %21, !dbg !4803

21:                                               ; preds = %13, %20, %10, %9, %6
  %22 = load i32, i32* @uxTaskNumber, align 4, !dbg !4804, !tbaa !4366
  %23 = add i32 %22, 1, !dbg !4804
  store i32 %23, i32* @uxTaskNumber, align 4, !dbg !4804, !tbaa !4366
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 3, !dbg !4805
  %25 = load i32, i32* %24, align 4, !dbg !4805, !tbaa !4737
  %26 = shl i32 1, %25, !dbg !4805
  %27 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !4805, !tbaa !4366
  %28 = or i32 %27, %26, !dbg !4805
  store volatile i32 %28, i32* @uxTopReadyPriority, align 4, !dbg !4805, !tbaa !4366
  %29 = getelementptr inbounds [7 x %struct.xLIST], [7 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %25, !dbg !4805
  %30 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, !dbg !4805
  call void @vListInsertEnd(%struct.xLIST* noundef nonnull %29, %struct.xLIST_ITEM* noundef nonnull %30) #34, !dbg !4805
  call void @vPortExitCritical() #34, !dbg !4806
  %31 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !4807, !tbaa !4366
  %32 = icmp eq i32 %31, 0, !dbg !4809
  br i1 %32, label %35, label %33, !dbg !4810

33:                                               ; preds = %21
  %34 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4811, !tbaa !2495
  br label %35, !dbg !4814

35:                                               ; preds = %21, %33
  ret void, !dbg !4815
}

; Function Attrs: noinline nounwind
define internal fastcc void @prvInitialiseTaskLists() unnamed_addr #9 !dbg !4816 {
  call void @llvm.dbg.value(metadata i32 0, metadata !4818, metadata !DIExpression()), !dbg !4819
  br label %1, !dbg !4820

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !4818, metadata !DIExpression()), !dbg !4819
  %3 = getelementptr inbounds [7 x %struct.xLIST], [7 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %2, !dbg !4822
  call void @vListInitialise(%struct.xLIST* noundef nonnull %3) #34, !dbg !4825
  %4 = add nuw nsw i32 %2, 1, !dbg !4826
  call void @llvm.dbg.value(metadata i32 %4, metadata !4818, metadata !DIExpression()), !dbg !4819
  %5 = icmp eq i32 %4, 7, !dbg !4827
  br i1 %5, label %6, label %1, !dbg !4820, !llvm.loop !4828

6:                                                ; preds = %1
  call void @vListInitialise(%struct.xLIST* noundef nonnull @xDelayedTaskList1) #34, !dbg !4830
  call void @vListInitialise(%struct.xLIST* noundef nonnull @xDelayedTaskList2) #34, !dbg !4831
  call void @vListInitialise(%struct.xLIST* noundef nonnull @xPendingReadyList) #34, !dbg !4832
  store volatile %struct.xLIST* @xDelayedTaskList1, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !4833, !tbaa !2495
  store volatile %struct.xLIST* @xDelayedTaskList2, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !4834, !tbaa !2495
  ret void, !dbg !4835
}

; Function Attrs: noinline nounwind
define dso_local void @vTaskDelay(i32 noundef %0) local_unnamed_addr #9 !dbg !4836 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4841, metadata !DIExpression()), !dbg !4843
  call void @llvm.dbg.value(metadata i32 0, metadata !4842, metadata !DIExpression()), !dbg !4843
  %2 = icmp eq i32 %0, 0, !dbg !4844
  br i1 %2, label %11, label %3, !dbg !4846

3:                                                ; preds = %1
  %4 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !4847, !tbaa !4366
  %5 = icmp eq i32 %4, 0, !dbg !4847
  br i1 %5, label %9, label %6, !dbg !4850

6:                                                ; preds = %3
  %7 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !4851, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %7, metadata !4632, metadata !DIExpression()) #34, !dbg !4854
  br label %8, !dbg !4855

8:                                                ; preds = %8, %6
  br label %8, !dbg !4856, !llvm.loop !4859

9:                                                ; preds = %3
  call void @vTaskSuspendAll(), !dbg !4861
  call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %0), !dbg !4862
  %10 = call i32 @xTaskResumeAll(), !dbg !4864
  call void @llvm.dbg.value(metadata i32 0, metadata !4842, metadata !DIExpression()), !dbg !4843
  br label %11, !dbg !4865

11:                                               ; preds = %9, %1
  call void @llvm.dbg.value(metadata i32 0, metadata !4842, metadata !DIExpression()), !dbg !4843
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4866, !tbaa !3380
  call void asm sideeffect "dsb", "~{memory}"() #34, !dbg !4866, !srcloc !4870
  call void asm sideeffect "isb", ""() #34, !dbg !4866, !srcloc !4871
  ret void, !dbg !4872
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @vTaskSuspendAll() local_unnamed_addr #14 !dbg !4873 {
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !4874, !tbaa !4366
  %2 = add i32 %1, 1, !dbg !4874
  store volatile i32 %2, i32* @uxSchedulerSuspended, align 4, !dbg !4874, !tbaa !4366
  ret void, !dbg !4875
}

; Function Attrs: noinline nounwind
define internal fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %0) unnamed_addr #9 !dbg !4876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4881, metadata !DIExpression()), !dbg !4885
  call void @llvm.dbg.value(metadata i32 undef, metadata !4882, metadata !DIExpression()), !dbg !4885
  %2 = load volatile i32, i32* @xTickCount, align 4, !dbg !4886, !tbaa !3380
  call void @llvm.dbg.value(metadata i32 %2, metadata !4884, metadata !DIExpression()), !dbg !4885
  %3 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4887, !tbaa !2495
  %4 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %3, i32 0, i32 1, !dbg !4889
  %5 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %4) #34, !dbg !4890
  %6 = icmp eq i32 %5, 0, !dbg !4891
  br i1 %6, label %7, label %15, !dbg !4892

7:                                                ; preds = %1
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4893, !tbaa !2495
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 3, !dbg !4893
  %10 = load i32, i32* %9, align 4, !dbg !4893, !tbaa !4737
  %11 = shl i32 1, %10, !dbg !4893
  %12 = xor i32 %11, -1, !dbg !4893
  %13 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !4893, !tbaa !4366
  %14 = and i32 %13, %12, !dbg !4893
  store volatile i32 %14, i32* @uxTopReadyPriority, align 4, !dbg !4893, !tbaa !4366
  br label %15, !dbg !4895

15:                                               ; preds = %1, %7
  %16 = add i32 %2, %0, !dbg !4896
  call void @llvm.dbg.value(metadata i32 %16, metadata !4883, metadata !DIExpression()), !dbg !4885
  %17 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4898, !tbaa !2495
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %17, i32 0, i32 1, i32 0, !dbg !4898
  store i32 %16, i32* %18, align 4, !dbg !4898, !tbaa !4899
  %19 = icmp ult i32 %16, %2, !dbg !4900
  br i1 %19, label %20, label %24, !dbg !4902

20:                                               ; preds = %15
  %21 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !4903, !tbaa !2495
  %22 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4905, !tbaa !2495
  %23 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %22, i32 0, i32 1, !dbg !4906
  call void @vListInsert(%struct.xLIST* noundef %21, %struct.xLIST_ITEM* noundef nonnull %23) #34, !dbg !4907
  br label %31, !dbg !4908

24:                                               ; preds = %15
  %25 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !4909, !tbaa !2495
  %26 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4911, !tbaa !2495
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %26, i32 0, i32 1, !dbg !4912
  call void @vListInsert(%struct.xLIST* noundef %25, %struct.xLIST_ITEM* noundef nonnull %27) #34, !dbg !4913
  %28 = load volatile i32, i32* @xNextTaskUnblockTime, align 4, !dbg !4914, !tbaa !3380
  %29 = icmp ult i32 %16, %28, !dbg !4916
  br i1 %29, label %30, label %31, !dbg !4917

30:                                               ; preds = %24
  store volatile i32 %16, i32* @xNextTaskUnblockTime, align 4, !dbg !4918, !tbaa !3380
  br label %31, !dbg !4920

31:                                               ; preds = %30, %24, %20
  ret void, !dbg !4921
}

; Function Attrs: noinline nounwind
define dso_local i32 @xTaskResumeAll() local_unnamed_addr #9 !dbg !4922 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* null, metadata !4924, metadata !DIExpression()), !dbg !4933
  call void @llvm.dbg.value(metadata i32 0, metadata !4925, metadata !DIExpression()), !dbg !4933
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !4934, !tbaa !4366
  %2 = icmp eq i32 %1, 0, !dbg !4934
  br i1 %2, label %3, label %6, !dbg !4936

3:                                                ; preds = %0
  %4 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !4937, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %4, metadata !4632, metadata !DIExpression()) #34, !dbg !4940
  br label %5, !dbg !4941

5:                                                ; preds = %5, %3
  br label %5, !dbg !4942, !llvm.loop !4945

6:                                                ; preds = %0
  call void @vPortEnterCritical() #34, !dbg !4947
  %7 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !4948, !tbaa !4366
  %8 = add i32 %7, -1, !dbg !4948
  store volatile i32 %8, i32* @uxSchedulerSuspended, align 4, !dbg !4948, !tbaa !4366
  %9 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !4949, !tbaa !4366
  %10 = icmp eq i32 %9, 0, !dbg !4950
  br i1 %10, label %11, label %55, !dbg !4951

11:                                               ; preds = %6
  %12 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !4952, !tbaa !4366
  %13 = icmp eq i32 %12, 0, !dbg !4953
  br i1 %13, label %55, label %14, !dbg !4954

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* null, metadata !4924, metadata !DIExpression()), !dbg !4933
  %15 = load volatile i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 0), align 4, !dbg !4955, !tbaa !4956
  %16 = icmp eq i32 %15, 0, !dbg !4955
  br i1 %16, label %44, label %17, !dbg !4959

17:                                               ; preds = %14, %38
  %18 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 2, i32 1), align 4, !dbg !4960, !tbaa !4962
  %19 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %18, i32 0, i32 3, !dbg !4960
  %20 = bitcast i8** %19 to %struct.tskTaskControlBlock**, !dbg !4960
  %21 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %20, align 4, !dbg !4960, !tbaa !4963
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %21, metadata !4924, metadata !DIExpression()), !dbg !4933
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %21, i32 0, i32 2, !dbg !4964
  %23 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %22) #34, !dbg !4965
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %21, i32 0, i32 1, !dbg !4966
  %25 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %24) #34, !dbg !4967
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %21, i32 0, i32 3, !dbg !4968
  %27 = load i32, i32* %26, align 4, !dbg !4968, !tbaa !4737
  %28 = shl i32 1, %27, !dbg !4968
  %29 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !4968, !tbaa !4366
  %30 = or i32 %29, %28, !dbg !4968
  store volatile i32 %30, i32* @uxTopReadyPriority, align 4, !dbg !4968, !tbaa !4366
  %31 = getelementptr inbounds [7 x %struct.xLIST], [7 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %27, !dbg !4968
  call void @vListInsertEnd(%struct.xLIST* noundef nonnull %31, %struct.xLIST_ITEM* noundef nonnull %24) #34, !dbg !4968
  %32 = load i32, i32* %26, align 4, !dbg !4969, !tbaa !4737
  %33 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4971, !tbaa !2495
  %34 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %33, i32 0, i32 3, !dbg !4972
  %35 = load i32, i32* %34, align 4, !dbg !4972, !tbaa !4737
  %36 = icmp ult i32 %32, %35, !dbg !4973
  br i1 %36, label %38, label %37, !dbg !4974

37:                                               ; preds = %17
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !4975, !tbaa !4366
  br label %38, !dbg !4977

38:                                               ; preds = %17, %37
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %21, metadata !4924, metadata !DIExpression()), !dbg !4933
  %39 = load volatile i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 0), align 4, !dbg !4955, !tbaa !4956
  %40 = icmp eq i32 %39, 0, !dbg !4955
  br i1 %40, label %41, label %17, !dbg !4959, !llvm.loop !4978

41:                                               ; preds = %38
  %42 = icmp eq %struct.tskTaskControlBlock* %21, null, !dbg !4980
  br i1 %42, label %44, label %43, !dbg !4982

43:                                               ; preds = %41
  call fastcc void @prvResetNextTaskUnblockTime(), !dbg !4983
  br label %44, !dbg !4985

44:                                               ; preds = %14, %43, %41
  %45 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !4986, !tbaa !4366
  call void @llvm.dbg.value(metadata i32 %45, metadata !4926, metadata !DIExpression()), !dbg !4987
  %46 = icmp eq i32 %45, 0, !dbg !4988
  br i1 %46, label %53, label %47, !dbg !4990

47:                                               ; preds = %44, %47
  %48 = phi i32 [ %50, %47 ], [ %45, %44 ], !dbg !4987
  call void @llvm.dbg.value(metadata i32 %48, metadata !4926, metadata !DIExpression()), !dbg !4987
  %49 = call i32 @xTaskIncrementTick(), !dbg !4991
  %50 = add i32 %48, -1, !dbg !4995
  call void @llvm.dbg.value(metadata i32 %50, metadata !4926, metadata !DIExpression()), !dbg !4987
  %51 = icmp eq i32 %50, 0, !dbg !4996
  br i1 %51, label %52, label %47, !dbg !4997, !llvm.loop !4998

52:                                               ; preds = %47
  store volatile i32 0, i32* @uxPendedTicks, align 4, !dbg !5001, !tbaa !4366
  br label %53, !dbg !5002

53:                                               ; preds = %44, %52
  %54 = load volatile i32, i32* @xYieldPending, align 4, !dbg !5003, !tbaa !4366
  br label %55, !dbg !5005

55:                                               ; preds = %6, %11, %53
  call void @vPortExitCritical() #34, !dbg !5006
  ret i32 0, !dbg !5007
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @prvResetNextTaskUnblockTime() unnamed_addr #14 !dbg !5008 {
  %1 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !5011, !tbaa !2495
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 0, !dbg !5011
  %3 = load volatile i32, i32* %2, align 4, !dbg !5011, !tbaa !4956
  %4 = icmp eq i32 %3, 0, !dbg !5011
  br i1 %4, label %14, label %5, !dbg !5013

5:                                                ; preds = %0
  %6 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !5014, !tbaa !2495
  %7 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %6, i32 0, i32 2, i32 1, !dbg !5014
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !5014, !tbaa !4962
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 3, !dbg !5014
  %10 = bitcast i8** %9 to %struct.tskTaskControlBlock**, !dbg !5014
  %11 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %10, align 4, !dbg !5014, !tbaa !4963
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %11, metadata !5010, metadata !DIExpression()), !dbg !5016
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 1, i32 0, !dbg !5017
  %13 = load i32, i32* %12, align 4, !dbg !5017, !tbaa !4899
  br label %14

14:                                               ; preds = %0, %5
  %15 = phi i32 [ %13, %5 ], [ -1, %0 ]
  store volatile i32 %15, i32* @xNextTaskUnblockTime, align 4, !dbg !5018, !tbaa !3380
  ret void, !dbg !5019
}

; Function Attrs: noinline nounwind
define dso_local i32 @xTaskIncrementTick() local_unnamed_addr #9 !dbg !5020 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5024, metadata !DIExpression()), !dbg !5032
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !5033, !tbaa !4366
  %2 = icmp eq i32 %1, 0, !dbg !5034
  br i1 %2, label %3, label %60, !dbg !5035

3:                                                ; preds = %0
  %4 = load volatile i32, i32* @xTickCount, align 4, !dbg !5036, !tbaa !3380
  %5 = add i32 %4, 1, !dbg !5037
  call void @llvm.dbg.value(metadata i32 %5, metadata !5025, metadata !DIExpression()), !dbg !5038
  store volatile i32 %5, i32* @xTickCount, align 4, !dbg !5039, !tbaa !3380
  %6 = icmp eq i32 %5, 0, !dbg !5040
  br i1 %6, label %7, label %20, !dbg !5041

7:                                                ; preds = %3
  %8 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !5042, !tbaa !2495
  %9 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %8, i32 0, i32 0, !dbg !5042
  %10 = load volatile i32, i32* %9, align 4, !dbg !5042, !tbaa !4956
  %11 = icmp eq i32 %10, 0, !dbg !5042
  br i1 %11, label %15, label %12, !dbg !5044

12:                                               ; preds = %7
  %13 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !5045, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %13, metadata !4632, metadata !DIExpression()) #34, !dbg !5048
  br label %14, !dbg !5049

14:                                               ; preds = %14, %12
  br label %14, !dbg !5050, !llvm.loop !5053

15:                                               ; preds = %7
  %16 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !5044, !tbaa !2495
  call void @llvm.dbg.value(metadata %struct.xLIST* %16, metadata !5028, metadata !DIExpression()), !dbg !5055
  %17 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !5044, !tbaa !2495
  store volatile %struct.xLIST* %17, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !5044, !tbaa !2495
  store volatile %struct.xLIST* %16, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !5044, !tbaa !2495
  %18 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !5044, !tbaa !4366
  %19 = add nsw i32 %18, 1, !dbg !5044
  store volatile i32 %19, i32* @xNumOfOverflows, align 4, !dbg !5044, !tbaa !4366
  call fastcc void @prvResetNextTaskUnblockTime(), !dbg !5044
  br label %20, !dbg !5056

20:                                               ; preds = %3, %15
  %21 = load volatile i32, i32* @xNextTaskUnblockTime, align 4, !dbg !5057, !tbaa !3380
  %22 = icmp ult i32 %5, %21, !dbg !5059
  br i1 %22, label %63, label %23, !dbg !5060

23:                                               ; preds = %20
  %24 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !5061, !tbaa !2495
  %25 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %24, i32 0, i32 0, !dbg !5061
  %26 = load volatile i32, i32* %25, align 4, !dbg !5061, !tbaa !4956
  %27 = icmp eq i32 %26, 0, !dbg !5061
  br i1 %27, label %28, label %29, !dbg !5067

28:                                               ; preds = %49, %23
  store volatile i32 -1, i32* @xNextTaskUnblockTime, align 4, !dbg !5068, !tbaa !3380
  br label %63, !dbg !5070

29:                                               ; preds = %23, %49
  %30 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !5071, !tbaa !2495
  %31 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %30, i32 0, i32 2, i32 1, !dbg !5071
  %32 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %31, align 4, !dbg !5071, !tbaa !4962
  %33 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %32, i32 0, i32 3, !dbg !5071
  %34 = bitcast i8** %33 to %struct.tskTaskControlBlock**, !dbg !5071
  %35 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %34, align 4, !dbg !5071, !tbaa !4963
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %35, metadata !5022, metadata !DIExpression()), !dbg !5032
  %36 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %35, i32 0, i32 1, !dbg !5073
  %37 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %36, i32 0, i32 0, !dbg !5073
  %38 = load i32, i32* %37, align 4, !dbg !5073, !tbaa !4899
  call void @llvm.dbg.value(metadata i32 %38, metadata !5023, metadata !DIExpression()), !dbg !5032
  %39 = icmp ult i32 %5, %38, !dbg !5074
  br i1 %39, label %40, label %41, !dbg !5076

40:                                               ; preds = %29
  store volatile i32 %38, i32* @xNextTaskUnblockTime, align 4, !dbg !5077, !tbaa !3380
  br label %63, !dbg !5079

41:                                               ; preds = %29
  %42 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %36) #34, !dbg !5080
  %43 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %35, i32 0, i32 2, i32 4, !dbg !5081
  %44 = load i8*, i8** %43, align 4, !dbg !5081, !tbaa !5083
  %45 = icmp eq i8* %44, null, !dbg !5084
  br i1 %45, label %49, label %46, !dbg !5085

46:                                               ; preds = %41
  %47 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %35, i32 0, i32 2, !dbg !5081
  %48 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %47) #34, !dbg !5086
  br label %49, !dbg !5088

49:                                               ; preds = %41, %46
  %50 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %35, i32 0, i32 3, !dbg !5089
  %51 = load i32, i32* %50, align 4, !dbg !5089, !tbaa !4737
  %52 = shl i32 1, %51, !dbg !5089
  %53 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !5089, !tbaa !4366
  %54 = or i32 %53, %52, !dbg !5089
  store volatile i32 %54, i32* @uxTopReadyPriority, align 4, !dbg !5089, !tbaa !4366
  %55 = getelementptr inbounds [7 x %struct.xLIST], [7 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %51, !dbg !5089
  call void @vListInsertEnd(%struct.xLIST* noundef nonnull %55, %struct.xLIST_ITEM* noundef nonnull %36) #34, !dbg !5089
  %56 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !5061, !tbaa !2495
  %57 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %56, i32 0, i32 0, !dbg !5061
  %58 = load volatile i32, i32* %57, align 4, !dbg !5061, !tbaa !4956
  %59 = icmp eq i32 %58, 0, !dbg !5061
  br i1 %59, label %28, label %29, !dbg !5067, !llvm.loop !5090

60:                                               ; preds = %0
  %61 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !5093, !tbaa !4366
  %62 = add i32 %61, 1, !dbg !5093
  store volatile i32 %62, i32* @uxPendedTicks, align 4, !dbg !5093, !tbaa !4366
  br label %63

63:                                               ; preds = %20, %40, %28, %60
  ret i32 0, !dbg !5095
}

; Function Attrs: noinline nounwind
define dso_local void @vTaskStartScheduler() local_unnamed_addr #9 !dbg !5096 {
  %1 = alloca %struct.xSTATIC_TCB*, align 4
  %2 = alloca i32*, align 4
  %3 = alloca i32, align 4
  %4 = bitcast %struct.xSTATIC_TCB** %1 to i8*, !dbg !5103
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #34, !dbg !5103
  call void @llvm.dbg.value(metadata %struct.xSTATIC_TCB* null, metadata !5099, metadata !DIExpression()), !dbg !5104
  store %struct.xSTATIC_TCB* null, %struct.xSTATIC_TCB** %1, align 4, !dbg !5105, !tbaa !2495
  %5 = bitcast i32** %2 to i8*, !dbg !5106
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #34, !dbg !5106
  call void @llvm.dbg.value(metadata i32* null, metadata !5101, metadata !DIExpression()), !dbg !5104
  store i32* null, i32** %2, align 4, !dbg !5107, !tbaa !2495
  %6 = bitcast i32* %3 to i8*, !dbg !5108
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #34, !dbg !5108
  call void @llvm.dbg.value(metadata %struct.xSTATIC_TCB** %1, metadata !5099, metadata !DIExpression(DW_OP_deref)), !dbg !5104
  call void @llvm.dbg.value(metadata i32** %2, metadata !5101, metadata !DIExpression(DW_OP_deref)), !dbg !5104
  call void @llvm.dbg.value(metadata i32* %3, metadata !5102, metadata !DIExpression(DW_OP_deref)), !dbg !5104
  call void @vApplicationGetIdleTaskMemory(%struct.xSTATIC_TCB** noundef nonnull %1, i32** noundef nonnull %2, i32* noundef nonnull %3) #34, !dbg !5109
  %7 = load i32, i32* %3, align 4, !dbg !5110, !tbaa !3380
  call void @llvm.dbg.value(metadata i32 %7, metadata !5102, metadata !DIExpression()), !dbg !5104
  %8 = load i32*, i32** %2, align 4, !dbg !5111, !tbaa !2495
  call void @llvm.dbg.value(metadata i32* %8, metadata !5101, metadata !DIExpression()), !dbg !5104
  %9 = load %struct.xSTATIC_TCB*, %struct.xSTATIC_TCB** %1, align 4, !dbg !5112, !tbaa !2495
  call void @llvm.dbg.value(metadata %struct.xSTATIC_TCB* %9, metadata !5099, metadata !DIExpression()), !dbg !5104
  %10 = call i8* @xTaskCreateStatic(void (i8*)* noundef nonnull @prvIdleTask, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0), i32 noundef %7, i8* noundef null, i32 noundef 0, i32* noundef %8, %struct.xSTATIC_TCB* noundef %9), !dbg !5113
  store i8* %10, i8** @xIdleTaskHandle, align 4, !dbg !5114, !tbaa !2495
  %11 = icmp eq i8* %10, null, !dbg !5115
  call void @llvm.dbg.value(metadata i32 undef, metadata !5098, metadata !DIExpression()), !dbg !5117
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #34, !dbg !5118
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #34, !dbg !5118
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #34, !dbg !5118
  br i1 %11, label %15, label %12, !dbg !5119

12:                                               ; preds = %0
  %13 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !5120, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %13, metadata !4632, metadata !DIExpression()) #34, !dbg !5124
  store volatile i32 -1, i32* @xNextTaskUnblockTime, align 4, !dbg !5125, !tbaa !3380
  store volatile i32 1, i32* @xSchedulerRunning, align 4, !dbg !5126, !tbaa !4366
  store volatile i32 0, i32* @xTickCount, align 4, !dbg !5127, !tbaa !3380
  %14 = call i32 @xPortStartScheduler() #34, !dbg !5128
  br label %15, !dbg !5130

15:                                               ; preds = %0, %12
  ret void, !dbg !5131
}

; Function Attrs: noinline noreturn nounwind
define internal void @prvIdleTask(i8* nocapture noundef readnone %0) #18 !dbg !5132 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5134, metadata !DIExpression()), !dbg !5135
  br label %2, !dbg !5136

2:                                                ; preds = %2, %1
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5137, !tbaa !3380
  call void asm sideeffect "dsb", "~{memory}"() #34, !dbg !5137, !srcloc !5143
  call void asm sideeffect "isb", ""() #34, !dbg !5137, !srcloc !5144
  br label %2, !dbg !5145, !llvm.loop !5146
}

; Function Attrs: noinline nounwind
define dso_local void @vTaskEndScheduler() local_unnamed_addr #9 !dbg !5149 {
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !5150, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %1, metadata !4632, metadata !DIExpression()) #34, !dbg !5152
  store volatile i32 0, i32* @xSchedulerRunning, align 4, !dbg !5153, !tbaa !4366
  call void @vPortEndScheduler() #34, !dbg !5154
  ret void, !dbg !5155
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @xTaskGetTickCount() local_unnamed_addr #15 !dbg !5156 {
  %1 = load volatile i32, i32* @xTickCount, align 4, !dbg !5161, !tbaa !3380
  call void @llvm.dbg.value(metadata i32 %1, metadata !5160, metadata !DIExpression()), !dbg !5163
  ret i32 %1, !dbg !5164
}

; Function Attrs: noinline nounwind
define dso_local i32 @xTaskGetTickCountFromISR() local_unnamed_addr #9 !dbg !5165 {
  call void @vPortValidateInterruptPriority() #34, !dbg !5169
  call void @llvm.dbg.value(metadata i32 0, metadata !5168, metadata !DIExpression()), !dbg !5170
  %1 = load volatile i32, i32* @xTickCount, align 4, !dbg !5171, !tbaa !3380
  call void @llvm.dbg.value(metadata i32 %1, metadata !5167, metadata !DIExpression()), !dbg !5170
  ret i32 %1, !dbg !5173
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @uxTaskGetNumberOfTasks() local_unnamed_addr #15 !dbg !5174 {
  %1 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !5177, !tbaa !4366
  ret i32 %1, !dbg !5178
}

; Function Attrs: noinline nounwind
define dso_local i8* @pcTaskGetName(i8* noundef readnone %0) local_unnamed_addr #9 !dbg !5179 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5183, metadata !DIExpression()), !dbg !5185
  %2 = icmp eq i8* %0, null, !dbg !5186
  br i1 %2, label %3, label %5, !dbg !5186

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5186, !tbaa !2495
  br label %7, !dbg !5186

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !5186
  br label %7, !dbg !5186

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !5186
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !5184, metadata !DIExpression()), !dbg !5185
  %9 = icmp eq %struct.tskTaskControlBlock* %8, null, !dbg !5187
  br i1 %9, label %10, label %13, !dbg !5189

10:                                               ; preds = %7
  %11 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !5190, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %11, metadata !4632, metadata !DIExpression()) #34, !dbg !5193
  br label %12, !dbg !5194

12:                                               ; preds = %12, %10
  br label %12, !dbg !5195, !llvm.loop !5198

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 5, i32 0, !dbg !5200
  ret i8* %14, !dbg !5201
}

; Function Attrs: noinline nounwind
define dso_local void @vTaskSwitchContext() local_unnamed_addr #9 !dbg !5202 {
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !5211, !tbaa !4366
  %2 = icmp eq i32 %1, 0, !dbg !5212
  br i1 %2, label %4, label %3, !dbg !5213

3:                                                ; preds = %0
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !5214, !tbaa !4366
  br label %31, !dbg !5216

4:                                                ; preds = %0
  store volatile i32 0, i32* @xYieldPending, align 4, !dbg !5217, !tbaa !4366
  %5 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !5218, !tbaa !4366
  call void @llvm.dbg.value(metadata i32 %5, metadata !5219, metadata !DIExpression()) #34, !dbg !5225
  %6 = call i8 asm sideeffect "clz $0, $1", "=r,r,~{memory}"(i32 %5) #34, !dbg !5227, !srcloc !5228
  call void @llvm.dbg.value(metadata i8 %6, metadata !5224, metadata !DIExpression()) #34, !dbg !5225
  %7 = zext i8 %6 to i32, !dbg !5218
  %8 = sub nsw i32 31, %7, !dbg !5218
  call void @llvm.dbg.value(metadata i32 %8, metadata !5204, metadata !DIExpression()), !dbg !5229
  %9 = getelementptr inbounds [7 x %struct.xLIST], [7 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %8, i32 0, !dbg !5230
  %10 = load volatile i32, i32* %9, align 4, !dbg !5230, !tbaa !4956
  %11 = icmp eq i32 %10, 0, !dbg !5230
  br i1 %11, label %12, label %15, !dbg !5218

12:                                               ; preds = %4
  %13 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !5232, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %13, metadata !4632, metadata !DIExpression()) #34, !dbg !5235
  br label %14, !dbg !5236

14:                                               ; preds = %14, %12
  br label %14, !dbg !5237, !llvm.loop !5240

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata !DIArgList([7 x %struct.xLIST]* @pxReadyTasksLists, i32 %8), metadata !5208, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 20, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5242
  %16 = getelementptr inbounds [7 x %struct.xLIST], [7 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %8, i32 1, !dbg !5243
  %17 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %16, align 4, !dbg !5243, !tbaa !5244
  %18 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %17, i32 0, i32 1, !dbg !5243
  %19 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %18, align 4, !dbg !5243, !tbaa !5245
  store %struct.xLIST_ITEM* %19, %struct.xLIST_ITEM** %16, align 4, !dbg !5243, !tbaa !5244
  %20 = getelementptr inbounds [7 x %struct.xLIST], [7 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %8, i32 2, !dbg !5246
  %21 = bitcast %struct.xMINI_LIST_ITEM* %20 to %struct.xLIST_ITEM*, !dbg !5246
  %22 = icmp eq %struct.xLIST_ITEM* %19, %21, !dbg !5246
  br i1 %22, label %23, label %26, !dbg !5243

23:                                               ; preds = %15
  %24 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %19, i32 0, i32 1, !dbg !5248
  %25 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %24, align 4, !dbg !5248, !tbaa !5245
  store %struct.xLIST_ITEM* %25, %struct.xLIST_ITEM** %16, align 4, !dbg !5248, !tbaa !5244
  br label %26, !dbg !5248

26:                                               ; preds = %23, %15
  %27 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %16, align 4, !dbg !5243, !tbaa !5244
  %28 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %27, i32 0, i32 3, !dbg !5243
  %29 = bitcast i8** %28 to %struct.tskTaskControlBlock**, !dbg !5243
  %30 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %29, align 4, !dbg !5243, !tbaa !4963
  store volatile %struct.tskTaskControlBlock* %30, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5243, !tbaa !2495
  br label %31

31:                                               ; preds = %26, %3
  ret void, !dbg !5250
}

; Function Attrs: noinline nounwind
define dso_local void @vTaskPlaceOnEventList(%struct.xLIST* noundef %0, i32 noundef %1) local_unnamed_addr #9 !dbg !5251 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !5255, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.value(metadata i32 %1, metadata !5256, metadata !DIExpression()), !dbg !5257
  %3 = icmp eq %struct.xLIST* %0, null, !dbg !5258
  br i1 %3, label %4, label %7, !dbg !5260

4:                                                ; preds = %2
  %5 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !5261, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %5, metadata !4632, metadata !DIExpression()) #34, !dbg !5264
  br label %6, !dbg !5265

6:                                                ; preds = %6, %4
  br label %6, !dbg !5266, !llvm.loop !5269

7:                                                ; preds = %2
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5271, !tbaa !2495
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, !dbg !5272
  call void @vListInsert(%struct.xLIST* noundef nonnull %0, %struct.xLIST_ITEM* noundef nonnull %9) #34, !dbg !5273
  call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %1), !dbg !5274
  ret void, !dbg !5275
}

; Function Attrs: noinline nounwind
define dso_local void @vTaskPlaceOnUnorderedEventList(%struct.xLIST* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #9 !dbg !5276 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !5280, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.value(metadata i32 %1, metadata !5281, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.value(metadata i32 %2, metadata !5282, metadata !DIExpression()), !dbg !5283
  %4 = icmp eq %struct.xLIST* %0, null, !dbg !5284
  br i1 %4, label %5, label %8, !dbg !5286

5:                                                ; preds = %3
  %6 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !5287, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %6, metadata !4632, metadata !DIExpression()) #34, !dbg !5290
  br label %7, !dbg !5291

7:                                                ; preds = %7, %5
  br label %7, !dbg !5292, !llvm.loop !5295

8:                                                ; preds = %3
  %9 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !5297, !tbaa !4366
  %10 = icmp eq i32 %9, 0, !dbg !5297
  br i1 %10, label %11, label %14, !dbg !5299

11:                                               ; preds = %8
  %12 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !5300, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %12, metadata !4632, metadata !DIExpression()) #34, !dbg !5303
  br label %13, !dbg !5304

13:                                               ; preds = %13, %11
  br label %13, !dbg !5305, !llvm.loop !5308

14:                                               ; preds = %8
  %15 = or i32 %1, -2147483648, !dbg !5310
  %16 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5310, !tbaa !2495
  %17 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %16, i32 0, i32 2, i32 0, !dbg !5310
  store i32 %15, i32* %17, align 4, !dbg !5310, !tbaa !4745
  %18 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5311, !tbaa !2495
  %19 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %18, i32 0, i32 2, !dbg !5312
  call void @vListInsertEnd(%struct.xLIST* noundef nonnull %0, %struct.xLIST_ITEM* noundef nonnull %19) #34, !dbg !5313
  call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %2), !dbg !5314
  ret void, !dbg !5315
}

; Function Attrs: noinline nounwind
define dso_local i32 @xTaskRemoveFromEventList(%struct.xLIST* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !5316 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !5323, metadata !DIExpression()), !dbg !5326
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 1, !dbg !5327
  %3 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %2, align 4, !dbg !5327, !tbaa !4962
  %4 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %3, i32 0, i32 3, !dbg !5327
  %5 = bitcast i8** %4 to %struct.tskTaskControlBlock**, !dbg !5327
  %6 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %5, align 4, !dbg !5327, !tbaa !4963
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %6, metadata !5324, metadata !DIExpression()), !dbg !5326
  %7 = icmp eq %struct.tskTaskControlBlock* %6, null, !dbg !5328
  br i1 %7, label %8, label %11, !dbg !5330

8:                                                ; preds = %1
  %9 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !5331, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %9, metadata !4632, metadata !DIExpression()) #34, !dbg !5334
  br label %10, !dbg !5335

10:                                               ; preds = %10, %8
  br label %10, !dbg !5336, !llvm.loop !5339

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !5341
  %13 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %12) #34, !dbg !5342
  %14 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !5343, !tbaa !4366
  %15 = icmp eq i32 %14, 0, !dbg !5345
  br i1 %15, label %16, label %25, !dbg !5346

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 1, !dbg !5347
  %18 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %17) #34, !dbg !5349
  %19 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !5350
  %20 = load i32, i32* %19, align 4, !dbg !5350, !tbaa !4737
  %21 = shl i32 1, %20, !dbg !5350
  %22 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !5350, !tbaa !4366
  %23 = or i32 %22, %21, !dbg !5350
  store volatile i32 %23, i32* @uxTopReadyPriority, align 4, !dbg !5350, !tbaa !4366
  %24 = getelementptr inbounds [7 x %struct.xLIST], [7 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %20, !dbg !5350
  call void @vListInsertEnd(%struct.xLIST* noundef nonnull %24, %struct.xLIST_ITEM* noundef nonnull %17) #34, !dbg !5350
  br label %26, !dbg !5351

25:                                               ; preds = %11
  call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %12) #34, !dbg !5352
  br label %26

26:                                               ; preds = %25, %16
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !5354
  %28 = load i32, i32* %27, align 4, !dbg !5354, !tbaa !4737
  %29 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5356, !tbaa !2495
  %30 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %29, i32 0, i32 3, !dbg !5357
  %31 = load i32, i32* %30, align 4, !dbg !5357, !tbaa !4737
  %32 = icmp ugt i32 %28, %31, !dbg !5358
  br i1 %32, label %33, label %34, !dbg !5359

33:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 1, metadata !5325, metadata !DIExpression()), !dbg !5326
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !5360, !tbaa !4366
  br label %34, !dbg !5362

34:                                               ; preds = %26, %33
  %35 = phi i32 [ 1, %33 ], [ 0, %26 ], !dbg !5363
  call void @llvm.dbg.value(metadata i32 %35, metadata !5325, metadata !DIExpression()), !dbg !5326
  ret i32 %35, !dbg !5364
}

; Function Attrs: noinline nounwind
define dso_local void @vTaskRemoveFromUnorderedEventList(%struct.xLIST_ITEM* noundef %0, i32 noundef %1) local_unnamed_addr #9 !dbg !5365 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !5369, metadata !DIExpression()), !dbg !5372
  call void @llvm.dbg.value(metadata i32 %1, metadata !5370, metadata !DIExpression()), !dbg !5372
  %3 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !5373, !tbaa !4366
  %4 = icmp eq i32 %3, 0, !dbg !5373
  br i1 %4, label %5, label %8, !dbg !5375

5:                                                ; preds = %2
  %6 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !5376, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %6, metadata !4632, metadata !DIExpression()) #34, !dbg !5379
  br label %7, !dbg !5380

7:                                                ; preds = %7, %5
  br label %7, !dbg !5381, !llvm.loop !5384

8:                                                ; preds = %2
  %9 = or i32 %1, -2147483648, !dbg !5386
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 0, !dbg !5386
  store i32 %9, i32* %10, align 4, !dbg !5386, !tbaa !5387
  %11 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 3, !dbg !5388
  %12 = bitcast i8** %11 to %struct.tskTaskControlBlock**, !dbg !5388
  %13 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %12, align 4, !dbg !5388, !tbaa !4963
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %13, metadata !5371, metadata !DIExpression()), !dbg !5372
  %14 = icmp eq %struct.tskTaskControlBlock* %13, null, !dbg !5389
  br i1 %14, label %15, label %18, !dbg !5391

15:                                               ; preds = %8
  %16 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !5392, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %16, metadata !4632, metadata !DIExpression()) #34, !dbg !5395
  br label %17, !dbg !5396

17:                                               ; preds = %17, %15
  br label %17, !dbg !5397, !llvm.loop !5400

18:                                               ; preds = %8
  %19 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef %0) #34, !dbg !5402
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %13, i32 0, i32 1, !dbg !5403
  %21 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %20) #34, !dbg !5404
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %13, i32 0, i32 3, !dbg !5405
  %23 = load i32, i32* %22, align 4, !dbg !5405, !tbaa !4737
  %24 = shl i32 1, %23, !dbg !5405
  %25 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !5405, !tbaa !4366
  %26 = or i32 %25, %24, !dbg !5405
  store volatile i32 %26, i32* @uxTopReadyPriority, align 4, !dbg !5405, !tbaa !4366
  %27 = getelementptr inbounds [7 x %struct.xLIST], [7 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %23, !dbg !5405
  call void @vListInsertEnd(%struct.xLIST* noundef nonnull %27, %struct.xLIST_ITEM* noundef nonnull %20) #34, !dbg !5405
  %28 = load i32, i32* %22, align 4, !dbg !5406, !tbaa !4737
  %29 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5408, !tbaa !2495
  %30 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %29, i32 0, i32 3, !dbg !5409
  %31 = load i32, i32* %30, align 4, !dbg !5409, !tbaa !4737
  %32 = icmp ugt i32 %28, %31, !dbg !5410
  br i1 %32, label %33, label %34, !dbg !5411

33:                                               ; preds = %18
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !5412, !tbaa !4366
  br label %34, !dbg !5414

34:                                               ; preds = %33, %18
  ret void, !dbg !5415
}

; Function Attrs: noinline nounwind
define dso_local void @vTaskSetTimeOutState(%struct.DMA_TypeDef* noundef writeonly %0) local_unnamed_addr #9 !dbg !5416 {
  call void @llvm.dbg.value(metadata %struct.DMA_TypeDef* %0, metadata !5427, metadata !DIExpression()), !dbg !5428
  %2 = icmp eq %struct.DMA_TypeDef* %0, null, !dbg !5429
  br i1 %2, label %3, label %6, !dbg !5431

3:                                                ; preds = %1
  %4 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !5432, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %4, metadata !4632, metadata !DIExpression()) #34, !dbg !5435
  br label %5, !dbg !5436

5:                                                ; preds = %5, %3
  br label %5, !dbg !5437, !llvm.loop !5440

6:                                                ; preds = %1
  call void @vPortEnterCritical() #34, !dbg !5442
  %7 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !5443, !tbaa !4366
  %8 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 0, !dbg !5445
  store i32 %7, i32* %8, align 4, !dbg !5446, !tbaa !5447
  %9 = load volatile i32, i32* @xTickCount, align 4, !dbg !5449, !tbaa !3380
  %10 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 1, !dbg !5450
  store i32 %9, i32* %10, align 4, !dbg !5451, !tbaa !5452
  call void @vPortExitCritical() #34, !dbg !5453
  ret void, !dbg !5454
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local void @vTaskInternalSetTimeOutState(%struct.DMA_TypeDef* nocapture noundef writeonly %0) local_unnamed_addr #15 !dbg !5455 {
  call void @llvm.dbg.value(metadata %struct.DMA_TypeDef* %0, metadata !5457, metadata !DIExpression()), !dbg !5458
  %2 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !5459, !tbaa !4366
  %3 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 0, !dbg !5460
  store i32 %2, i32* %3, align 4, !dbg !5461, !tbaa !5447
  %4 = load volatile i32, i32* @xTickCount, align 4, !dbg !5462, !tbaa !3380
  %5 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 1, !dbg !5463
  store i32 %4, i32* %5, align 4, !dbg !5464, !tbaa !5452
  ret void, !dbg !5465
}

; Function Attrs: noinline nounwind
define dso_local i32 @xTaskCheckForTimeOut(%struct.DMA_TypeDef* noundef %0, i32* noundef %1) local_unnamed_addr #9 !dbg !5466 {
  call void @llvm.dbg.value(metadata %struct.DMA_TypeDef* %0, metadata !5472, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i32* %1, metadata !5473, metadata !DIExpression()), !dbg !5478
  %3 = icmp eq %struct.DMA_TypeDef* %0, null, !dbg !5479
  br i1 %3, label %4, label %7, !dbg !5481

4:                                                ; preds = %2
  %5 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !5482, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %5, metadata !4632, metadata !DIExpression()) #34, !dbg !5485
  br label %6, !dbg !5486

6:                                                ; preds = %6, %4
  br label %6, !dbg !5487, !llvm.loop !5490

7:                                                ; preds = %2
  %8 = icmp eq i32* %1, null, !dbg !5492
  br i1 %8, label %9, label %12, !dbg !5494

9:                                                ; preds = %7
  %10 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !5495, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %10, metadata !4632, metadata !DIExpression()) #34, !dbg !5498
  br label %11, !dbg !5499

11:                                               ; preds = %11, %9
  br label %11, !dbg !5500, !llvm.loop !5503

12:                                               ; preds = %7
  call void @vPortEnterCritical() #34, !dbg !5505
  %13 = load volatile i32, i32* @xTickCount, align 4, !dbg !5506, !tbaa !3380
  call void @llvm.dbg.value(metadata i32 %13, metadata !5475, metadata !DIExpression()), !dbg !5507
  %14 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 1, !dbg !5508
  %15 = load i32, i32* %14, align 4, !dbg !5508, !tbaa !5452
  %16 = sub i32 %13, %15, !dbg !5509
  call void @llvm.dbg.value(metadata i32 %16, metadata !5477, metadata !DIExpression()), !dbg !5507
  %17 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !5510, !tbaa !4366
  %18 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 0, !dbg !5512
  %19 = load i32, i32* %18, align 4, !dbg !5512, !tbaa !5447
  %20 = icmp eq i32 %17, %19, !dbg !5513
  %21 = icmp ult i32 %13, %15
  %22 = select i1 %20, i1 true, i1 %21, !dbg !5514
  br i1 %22, label %23, label %29, !dbg !5514

23:                                               ; preds = %12
  %24 = load i32, i32* %1, align 4, !dbg !5515, !tbaa !3380
  %25 = icmp ugt i32 %24, %16, !dbg !5517
  br i1 %25, label %26, label %28, !dbg !5518

26:                                               ; preds = %23
  %27 = sub i32 %24, %16, !dbg !5519
  store i32 %27, i32* %1, align 4, !dbg !5519, !tbaa !3380
  call void @vTaskInternalSetTimeOutState(%struct.DMA_TypeDef* noundef nonnull %0), !dbg !5521
  call void @llvm.dbg.value(metadata i32 0, metadata !5474, metadata !DIExpression()), !dbg !5478
  br label %29, !dbg !5522

28:                                               ; preds = %23
  store i32 0, i32* %1, align 4, !dbg !5523, !tbaa !3380
  call void @llvm.dbg.value(metadata i32 1, metadata !5474, metadata !DIExpression()), !dbg !5478
  br label %29

29:                                               ; preds = %12, %26, %28
  %30 = phi i32 [ 0, %26 ], [ 1, %28 ], [ 1, %12 ], !dbg !5525
  call void @llvm.dbg.value(metadata i32 %30, metadata !5474, metadata !DIExpression()), !dbg !5478
  call void @vPortExitCritical() #34, !dbg !5526
  ret i32 %30, !dbg !5527
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @vTaskMissedYield() local_unnamed_addr #14 !dbg !5528 {
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !5529, !tbaa !4366
  ret void, !dbg !5530
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @uxTaskResetEventItemValue() local_unnamed_addr #15 !dbg !5531 {
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5534, !tbaa !2495
  %2 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %1, i32 0, i32 2, i32 0, !dbg !5534
  %3 = load i32, i32* %2, align 4, !dbg !5534, !tbaa !4745
  call void @llvm.dbg.value(metadata i32 %3, metadata !5533, metadata !DIExpression()), !dbg !5535
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5536, !tbaa !2495
  %5 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 3, !dbg !5536
  %6 = load i32, i32* %5, align 4, !dbg !5536, !tbaa !4737
  %7 = sub i32 7, %6, !dbg !5536
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5536, !tbaa !2495
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, i32 0, !dbg !5536
  store i32 %7, i32* %9, align 4, !dbg !5536, !tbaa !4745
  ret i32 %3, !dbg !5537
}

; Function Attrs: noinline nounwind
define dso_local i32 @ulTaskNotifyTake(i32 noundef %0, i32 noundef %1) local_unnamed_addr #9 !dbg !5538 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5542, metadata !DIExpression()), !dbg !5545
  call void @llvm.dbg.value(metadata i32 %1, metadata !5543, metadata !DIExpression()), !dbg !5545
  call void @vPortEnterCritical() #34, !dbg !5546
  %3 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5547, !tbaa !2495
  %4 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %3, i32 0, i32 6, !dbg !5550
  %5 = load volatile i32, i32* %4, align 4, !dbg !5550, !tbaa !4751
  %6 = icmp eq i32 %5, 0, !dbg !5551
  br i1 %6, label %7, label %12, !dbg !5552

7:                                                ; preds = %2
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5553, !tbaa !2495
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 7, !dbg !5555
  store volatile i8 1, i8* %9, align 4, !dbg !5556, !tbaa !4754
  %10 = icmp eq i32 %1, 0, !dbg !5557
  br i1 %10, label %12, label %11, !dbg !5559

11:                                               ; preds = %7
  call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %1), !dbg !5560
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5562, !tbaa !3380
  call void asm sideeffect "dsb", "~{memory}"() #34, !dbg !5562, !srcloc !5564
  call void asm sideeffect "isb", ""() #34, !dbg !5562, !srcloc !5565
  br label %12, !dbg !5566

12:                                               ; preds = %2, %11, %7
  call void @vPortExitCritical() #34, !dbg !5567
  call void @vPortEnterCritical() #34, !dbg !5568
  %13 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5569, !tbaa !2495
  %14 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %13, i32 0, i32 6, !dbg !5571
  %15 = load volatile i32, i32* %14, align 4, !dbg !5571, !tbaa !4751
  call void @llvm.dbg.value(metadata i32 %15, metadata !5544, metadata !DIExpression()), !dbg !5545
  %16 = icmp eq i32 %15, 0, !dbg !5572
  br i1 %16, label %23, label %17, !dbg !5574

17:                                               ; preds = %12
  %18 = icmp eq i32 %0, 0, !dbg !5575
  %19 = add i32 %15, -1, !dbg !5578
  %20 = select i1 %18, i32 %19, i32 0, !dbg !5578
  %21 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5579, !tbaa !2495
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %21, i32 0, i32 6, !dbg !5579
  store volatile i32 %20, i32* %22, align 4, !dbg !5579, !tbaa !4751
  br label %23, !dbg !5580

23:                                               ; preds = %17, %12
  %24 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5580, !tbaa !2495
  %25 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %24, i32 0, i32 7, !dbg !5581
  store volatile i8 0, i8* %25, align 4, !dbg !5582, !tbaa !4754
  call void @vPortExitCritical() #34, !dbg !5583
  ret i32 %15, !dbg !5584
}

; Function Attrs: noinline nounwind
define dso_local i32 @xTaskNotifyWait(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2, i32 noundef %3) local_unnamed_addr #9 !dbg !5585 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5589, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.value(metadata i32 %1, metadata !5590, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.value(metadata i32* %2, metadata !5591, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.value(metadata i32 %3, metadata !5592, metadata !DIExpression()), !dbg !5594
  call void @vPortEnterCritical() #34, !dbg !5595
  %5 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5596, !tbaa !2495
  %6 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %5, i32 0, i32 7, !dbg !5599
  %7 = load volatile i8, i8* %6, align 4, !dbg !5599, !tbaa !4754
  %8 = icmp eq i8 %7, 2, !dbg !5600
  br i1 %8, label %19, label %9, !dbg !5601

9:                                                ; preds = %4
  %10 = xor i32 %0, -1, !dbg !5602
  %11 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5604, !tbaa !2495
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 6, !dbg !5605
  %13 = load volatile i32, i32* %12, align 4, !dbg !5606, !tbaa !4751
  %14 = and i32 %13, %10, !dbg !5606
  store volatile i32 %14, i32* %12, align 4, !dbg !5606, !tbaa !4751
  %15 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5607, !tbaa !2495
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 7, !dbg !5608
  store volatile i8 1, i8* %16, align 4, !dbg !5609, !tbaa !4754
  %17 = icmp eq i32 %3, 0, !dbg !5610
  br i1 %17, label %19, label %18, !dbg !5612

18:                                               ; preds = %9
  call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %3), !dbg !5613
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5615, !tbaa !3380
  call void asm sideeffect "dsb", "~{memory}"() #34, !dbg !5615, !srcloc !5617
  call void asm sideeffect "isb", ""() #34, !dbg !5615, !srcloc !5618
  br label %19, !dbg !5619

19:                                               ; preds = %4, %18, %9
  call void @vPortExitCritical() #34, !dbg !5620
  call void @vPortEnterCritical() #34, !dbg !5621
  %20 = icmp eq i32* %2, null, !dbg !5622
  br i1 %20, label %25, label %21, !dbg !5625

21:                                               ; preds = %19
  %22 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5626, !tbaa !2495
  %23 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %22, i32 0, i32 6, !dbg !5628
  %24 = load volatile i32, i32* %23, align 4, !dbg !5628, !tbaa !4751
  store i32 %24, i32* %2, align 4, !dbg !5629, !tbaa !3380
  br label %25, !dbg !5630

25:                                               ; preds = %21, %19
  %26 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5631, !tbaa !2495
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %26, i32 0, i32 7, !dbg !5633
  %28 = load volatile i8, i8* %27, align 4, !dbg !5633, !tbaa !4754
  %29 = icmp eq i8 %28, 2, !dbg !5634
  br i1 %29, label %30, label %36, !dbg !5635

30:                                               ; preds = %25
  %31 = xor i32 %1, -1, !dbg !5636
  %32 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5638, !tbaa !2495
  %33 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %32, i32 0, i32 6, !dbg !5639
  %34 = load volatile i32, i32* %33, align 4, !dbg !5640, !tbaa !4751
  %35 = and i32 %34, %31, !dbg !5640
  store volatile i32 %35, i32* %33, align 4, !dbg !5640, !tbaa !4751
  call void @llvm.dbg.value(metadata i32 1, metadata !5593, metadata !DIExpression()), !dbg !5594
  br label %36

36:                                               ; preds = %25, %30
  %37 = phi i32 [ 1, %30 ], [ 0, %25 ], !dbg !5641
  call void @llvm.dbg.value(metadata i32 %37, metadata !5593, metadata !DIExpression()), !dbg !5594
  %38 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5642, !tbaa !2495
  %39 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %38, i32 0, i32 7, !dbg !5643
  store volatile i8 0, i8* %39, align 4, !dbg !5644, !tbaa !4754
  call void @vPortExitCritical() #34, !dbg !5645
  ret i32 %37, !dbg !5646
}

; Function Attrs: noinline nounwind
define dso_local i32 @xTaskGenericNotify(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef writeonly %3) local_unnamed_addr #9 !dbg !5647 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5652, metadata !DIExpression()), !dbg !5659
  call void @llvm.dbg.value(metadata i32 %1, metadata !5653, metadata !DIExpression()), !dbg !5659
  call void @llvm.dbg.value(metadata i32 %2, metadata !5654, metadata !DIExpression()), !dbg !5659
  call void @llvm.dbg.value(metadata i32* %3, metadata !5655, metadata !DIExpression()), !dbg !5659
  call void @llvm.dbg.value(metadata i32 1, metadata !5657, metadata !DIExpression()), !dbg !5659
  %5 = icmp eq i8* %0, null, !dbg !5660
  br i1 %5, label %6, label %9, !dbg !5662

6:                                                ; preds = %4
  %7 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !5663, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %7, metadata !4632, metadata !DIExpression()) #34, !dbg !5666
  br label %8, !dbg !5667

8:                                                ; preds = %8, %6
  br label %8, !dbg !5668, !llvm.loop !5671

9:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5656, metadata !DIExpression()), !dbg !5659
  call void @vPortEnterCritical() #34, !dbg !5673
  %10 = icmp eq i32* %3, null, !dbg !5674
  br i1 %10, label %15, label %11, !dbg !5677

11:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i8* %0, metadata !5656, metadata !DIExpression()), !dbg !5659
  %12 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !5678
  %13 = bitcast i8* %12 to i32*, !dbg !5678
  %14 = load volatile i32, i32* %13, align 4, !dbg !5678, !tbaa !4751
  store i32 %14, i32* %3, align 4, !dbg !5680, !tbaa !3380
  br label %15, !dbg !5681

15:                                               ; preds = %11, %9
  %16 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !5682
  %17 = load volatile i8, i8* %16, align 4, !dbg !5682, !tbaa !4754
  call void @llvm.dbg.value(metadata i8 %17, metadata !5658, metadata !DIExpression()), !dbg !5659
  store volatile i8 2, i8* %16, align 4, !dbg !5683, !tbaa !4754
  switch i32 %2, label %36 [
    i32 1, label %18
    i32 2, label %23
    i32 3, label %28
    i32 4, label %31
  ], !dbg !5684

18:                                               ; preds = %15
  %19 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !5685
  %20 = bitcast i8* %19 to i32*, !dbg !5685
  %21 = load volatile i32, i32* %20, align 4, !dbg !5687, !tbaa !4751
  %22 = or i32 %21, %1, !dbg !5687
  store volatile i32 %22, i32* %20, align 4, !dbg !5687, !tbaa !4751
  br label %36, !dbg !5688

23:                                               ; preds = %15
  %24 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !5689
  %25 = bitcast i8* %24 to i32*, !dbg !5689
  %26 = load volatile i32, i32* %25, align 4, !dbg !5690, !tbaa !4751
  %27 = add i32 %26, 1, !dbg !5690
  store volatile i32 %27, i32* %25, align 4, !dbg !5690, !tbaa !4751
  br label %36, !dbg !5691

28:                                               ; preds = %15
  %29 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !5692
  %30 = bitcast i8* %29 to i32*, !dbg !5692
  store volatile i32 %1, i32* %30, align 4, !dbg !5693, !tbaa !4751
  br label %36, !dbg !5694

31:                                               ; preds = %15
  %32 = icmp eq i8 %17, 2, !dbg !5695
  br i1 %32, label %36, label %33, !dbg !5697

33:                                               ; preds = %31
  %34 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !5698
  %35 = bitcast i8* %34 to i32*, !dbg !5698
  store volatile i32 %1, i32* %35, align 4, !dbg !5700, !tbaa !4751
  br label %36, !dbg !5701

36:                                               ; preds = %31, %33, %15, %28, %23, %18
  %37 = phi i32 [ 1, %15 ], [ 1, %33 ], [ 1, %28 ], [ 1, %23 ], [ 1, %18 ], [ 0, %31 ], !dbg !5659
  call void @llvm.dbg.value(metadata i32 %37, metadata !5657, metadata !DIExpression()), !dbg !5659
  %38 = icmp eq i8 %17, 1, !dbg !5702
  br i1 %38, label %39, label %59, !dbg !5704

39:                                               ; preds = %36
  %40 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !5705
  %41 = bitcast i8* %40 to %struct.xLIST_ITEM*, !dbg !5705
  %42 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %41) #34, !dbg !5707
  %43 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !5708
  %44 = bitcast i8* %43 to i32*, !dbg !5708
  %45 = load i32, i32* %44, align 4, !dbg !5708, !tbaa !4737
  %46 = shl i32 1, %45, !dbg !5708
  %47 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !5708, !tbaa !4366
  %48 = or i32 %47, %46, !dbg !5708
  store volatile i32 %48, i32* @uxTopReadyPriority, align 4, !dbg !5708, !tbaa !4366
  %49 = getelementptr inbounds [7 x %struct.xLIST], [7 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %45, !dbg !5708
  call void @vListInsertEnd(%struct.xLIST* noundef nonnull %49, %struct.xLIST_ITEM* noundef nonnull %41) #34, !dbg !5708
  %50 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !5709
  %51 = bitcast i8* %50 to i8**, !dbg !5709
  %52 = load i8*, i8** %51, align 4, !dbg !5709, !tbaa !5083
  %53 = icmp eq i8* %52, null, !dbg !5709
  br i1 %53, label %57, label %54, !dbg !5711

54:                                               ; preds = %39
  %55 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !5712, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %55, metadata !4632, metadata !DIExpression()) #34, !dbg !5715
  br label %56, !dbg !5716

56:                                               ; preds = %56, %54
  br label %56, !dbg !5717, !llvm.loop !5720

57:                                               ; preds = %39
  %58 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5722, !tbaa !2495
  br label %59, !dbg !5724

59:                                               ; preds = %36, %57
  call void @vPortExitCritical() #34, !dbg !5725
  ret i32 %37, !dbg !5726
}

; Function Attrs: noinline nounwind
define dso_local i32 @xTaskGenericNotifyFromISR(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef writeonly %3, i32* noundef writeonly %4) local_unnamed_addr #9 !dbg !5727 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5732, metadata !DIExpression()), !dbg !5741
  call void @llvm.dbg.value(metadata i32 %1, metadata !5733, metadata !DIExpression()), !dbg !5741
  call void @llvm.dbg.value(metadata i32 %2, metadata !5734, metadata !DIExpression()), !dbg !5741
  call void @llvm.dbg.value(metadata i32* %3, metadata !5735, metadata !DIExpression()), !dbg !5741
  call void @llvm.dbg.value(metadata i32* %4, metadata !5736, metadata !DIExpression()), !dbg !5741
  call void @llvm.dbg.value(metadata i32 1, metadata !5739, metadata !DIExpression()), !dbg !5741
  %6 = icmp eq i8* %0, null, !dbg !5742
  br i1 %6, label %7, label %10, !dbg !5744

7:                                                ; preds = %5
  %8 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !5745, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %8, metadata !4632, metadata !DIExpression()) #34, !dbg !5748
  br label %9, !dbg !5749

9:                                                ; preds = %9, %7
  br label %9, !dbg !5750, !llvm.loop !5753

10:                                               ; preds = %5
  call void @vPortValidateInterruptPriority() #34, !dbg !5755
  call void @llvm.dbg.value(metadata i8* %0, metadata !5737, metadata !DIExpression()), !dbg !5741
  %11 = call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i,~{memory}"(i32 80) #34, !dbg !5756, !srcloc !5762
  call void @llvm.dbg.value(metadata i32 undef, metadata !5759, metadata !DIExpression()) #34, !dbg !5763
  call void @llvm.dbg.value(metadata i32 undef, metadata !5760, metadata !DIExpression()) #34, !dbg !5763
  call void @llvm.dbg.value(metadata i32 undef, metadata !5740, metadata !DIExpression()), !dbg !5741
  %12 = icmp eq i32* %3, null, !dbg !5764
  br i1 %12, label %17, label %13, !dbg !5767

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i8* %0, metadata !5737, metadata !DIExpression()), !dbg !5741
  %14 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !5768
  %15 = bitcast i8* %14 to i32*, !dbg !5768
  %16 = load volatile i32, i32* %15, align 4, !dbg !5768, !tbaa !4751
  store i32 %16, i32* %3, align 4, !dbg !5770, !tbaa !3380
  br label %17, !dbg !5771

17:                                               ; preds = %13, %10
  %18 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !5772
  %19 = load volatile i8, i8* %18, align 4, !dbg !5772, !tbaa !4754
  call void @llvm.dbg.value(metadata i8 %19, metadata !5738, metadata !DIExpression()), !dbg !5741
  store volatile i8 2, i8* %18, align 4, !dbg !5773, !tbaa !4754
  switch i32 %2, label %38 [
    i32 1, label %20
    i32 2, label %25
    i32 3, label %30
    i32 4, label %33
  ], !dbg !5774

20:                                               ; preds = %17
  %21 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !5775
  %22 = bitcast i8* %21 to i32*, !dbg !5775
  %23 = load volatile i32, i32* %22, align 4, !dbg !5777, !tbaa !4751
  %24 = or i32 %23, %1, !dbg !5777
  store volatile i32 %24, i32* %22, align 4, !dbg !5777, !tbaa !4751
  br label %38, !dbg !5778

25:                                               ; preds = %17
  %26 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !5779
  %27 = bitcast i8* %26 to i32*, !dbg !5779
  %28 = load volatile i32, i32* %27, align 4, !dbg !5780, !tbaa !4751
  %29 = add i32 %28, 1, !dbg !5780
  store volatile i32 %29, i32* %27, align 4, !dbg !5780, !tbaa !4751
  br label %38, !dbg !5781

30:                                               ; preds = %17
  %31 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !5782
  %32 = bitcast i8* %31 to i32*, !dbg !5782
  store volatile i32 %1, i32* %32, align 4, !dbg !5783, !tbaa !4751
  br label %38, !dbg !5784

33:                                               ; preds = %17
  %34 = icmp eq i8 %19, 2, !dbg !5785
  br i1 %34, label %38, label %35, !dbg !5787

35:                                               ; preds = %33
  %36 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !5788
  %37 = bitcast i8* %36 to i32*, !dbg !5788
  store volatile i32 %1, i32* %37, align 4, !dbg !5790, !tbaa !4751
  br label %38, !dbg !5791

38:                                               ; preds = %33, %35, %17, %30, %25, %20
  %39 = phi i32 [ 1, %17 ], [ 1, %35 ], [ 1, %30 ], [ 1, %25 ], [ 1, %20 ], [ 0, %33 ], !dbg !5741
  call void @llvm.dbg.value(metadata i32 %39, metadata !5739, metadata !DIExpression()), !dbg !5741
  %40 = icmp eq i8 %19, 1, !dbg !5792
  br i1 %40, label %41, label %78, !dbg !5794

41:                                               ; preds = %38
  %42 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !5795
  %43 = bitcast i8* %42 to %struct.xLIST_ITEM*, !dbg !5795
  %44 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !5795
  %45 = bitcast i8* %44 to i8**, !dbg !5795
  %46 = load i8*, i8** %45, align 4, !dbg !5795, !tbaa !5083
  %47 = icmp eq i8* %46, null, !dbg !5795
  br i1 %47, label %51, label %48, !dbg !5798

48:                                               ; preds = %41
  %49 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !5799, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %49, metadata !4632, metadata !DIExpression()) #34, !dbg !5802
  br label %50, !dbg !5803

50:                                               ; preds = %50, %48
  br label %50, !dbg !5804, !llvm.loop !5807

51:                                               ; preds = %41
  %52 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !5809, !tbaa !4366
  %53 = icmp eq i32 %52, 0, !dbg !5811
  br i1 %53, label %54, label %65, !dbg !5812

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !5813
  %56 = bitcast i8* %55 to %struct.xLIST_ITEM*, !dbg !5813
  %57 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %56) #34, !dbg !5815
  %58 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !5816
  %59 = bitcast i8* %58 to i32*, !dbg !5816
  %60 = load i32, i32* %59, align 4, !dbg !5816, !tbaa !4737
  %61 = shl i32 1, %60, !dbg !5816
  %62 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !5816, !tbaa !4366
  %63 = or i32 %62, %61, !dbg !5816
  store volatile i32 %63, i32* @uxTopReadyPriority, align 4, !dbg !5816, !tbaa !4366
  %64 = getelementptr inbounds [7 x %struct.xLIST], [7 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %60, !dbg !5816
  call void @vListInsertEnd(%struct.xLIST* noundef nonnull %64, %struct.xLIST_ITEM* noundef nonnull %56) #34, !dbg !5816
  br label %66, !dbg !5817

65:                                               ; preds = %51
  call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %43) #34, !dbg !5818
  br label %66

66:                                               ; preds = %65, %54
  %67 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !5820
  %68 = bitcast i8* %67 to i32*, !dbg !5820
  %69 = load i32, i32* %68, align 4, !dbg !5820, !tbaa !4737
  %70 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5822, !tbaa !2495
  %71 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %70, i32 0, i32 3, !dbg !5823
  %72 = load i32, i32* %71, align 4, !dbg !5823, !tbaa !4737
  %73 = icmp ugt i32 %69, %72, !dbg !5824
  br i1 %73, label %74, label %78, !dbg !5825

74:                                               ; preds = %66
  %75 = icmp eq i32* %4, null, !dbg !5826
  br i1 %75, label %77, label %76, !dbg !5829

76:                                               ; preds = %74
  store i32 1, i32* %4, align 4, !dbg !5830, !tbaa !4366
  br label %78, !dbg !5832

77:                                               ; preds = %74
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !5833, !tbaa !4366
  br label %78

78:                                               ; preds = %77, %76, %66, %38
  %79 = extractvalue { i32, i32 } %11, 0, !dbg !5756
  call void @llvm.dbg.value(metadata i32 %79, metadata !5759, metadata !DIExpression()) #34, !dbg !5763
  call void @llvm.dbg.value(metadata i32 %79, metadata !5740, metadata !DIExpression()), !dbg !5741
  call void @llvm.dbg.value(metadata i32 undef, metadata !5835, metadata !DIExpression()) #34, !dbg !5838
  call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 %79) #34, !dbg !5840, !srcloc !5841
  ret i32 %39, !dbg !5842
}

; Function Attrs: noinline nounwind
define dso_local void @vTaskNotifyGiveFromISR(i8* noundef %0, i32* noundef writeonly %1) local_unnamed_addr #9 !dbg !5843 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5847, metadata !DIExpression()), !dbg !5852
  call void @llvm.dbg.value(metadata i32* %1, metadata !5848, metadata !DIExpression()), !dbg !5852
  %3 = icmp eq i8* %0, null, !dbg !5853
  br i1 %3, label %4, label %7, !dbg !5855

4:                                                ; preds = %2
  %5 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !5856, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %5, metadata !4632, metadata !DIExpression()) #34, !dbg !5859
  br label %6, !dbg !5860

6:                                                ; preds = %6, %4
  br label %6, !dbg !5861, !llvm.loop !5864

7:                                                ; preds = %2
  call void @vPortValidateInterruptPriority() #34, !dbg !5866
  call void @llvm.dbg.value(metadata i8* %0, metadata !5849, metadata !DIExpression()), !dbg !5852
  %8 = call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i,~{memory}"(i32 80) #34, !dbg !5867, !srcloc !5762
  call void @llvm.dbg.value(metadata i32 undef, metadata !5759, metadata !DIExpression()) #34, !dbg !5869
  call void @llvm.dbg.value(metadata i32 undef, metadata !5760, metadata !DIExpression()) #34, !dbg !5869
  call void @llvm.dbg.value(metadata i32 undef, metadata !5851, metadata !DIExpression()), !dbg !5852
  %9 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !5870
  %10 = load volatile i8, i8* %9, align 4, !dbg !5870, !tbaa !4754
  call void @llvm.dbg.value(metadata i8 %10, metadata !5850, metadata !DIExpression()), !dbg !5852
  store volatile i8 2, i8* %9, align 4, !dbg !5872, !tbaa !4754
  %11 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !5873
  %12 = bitcast i8* %11 to i32*, !dbg !5873
  %13 = load volatile i32, i32* %12, align 4, !dbg !5874, !tbaa !4751
  %14 = add i32 %13, 1, !dbg !5874
  store volatile i32 %14, i32* %12, align 4, !dbg !5874, !tbaa !4751
  %15 = icmp eq i8 %10, 1, !dbg !5875
  br i1 %15, label %16, label %53, !dbg !5877

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !5878
  %18 = bitcast i8* %17 to %struct.xLIST_ITEM*, !dbg !5878
  %19 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !5878
  %20 = bitcast i8* %19 to i8**, !dbg !5878
  %21 = load i8*, i8** %20, align 4, !dbg !5878, !tbaa !5083
  %22 = icmp eq i8* %21, null, !dbg !5878
  br i1 %22, label %26, label %23, !dbg !5881

23:                                               ; preds = %16
  %24 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #34, !dbg !5882, !srcloc !4635
  call void @llvm.dbg.value(metadata i32 %24, metadata !4632, metadata !DIExpression()) #34, !dbg !5885
  br label %25, !dbg !5886

25:                                               ; preds = %25, %23
  br label %25, !dbg !5887, !llvm.loop !5890

26:                                               ; preds = %16
  %27 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !5892, !tbaa !4366
  %28 = icmp eq i32 %27, 0, !dbg !5894
  br i1 %28, label %29, label %40, !dbg !5895

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !5896
  %31 = bitcast i8* %30 to %struct.xLIST_ITEM*, !dbg !5896
  %32 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %31) #34, !dbg !5898
  %33 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !5899
  %34 = bitcast i8* %33 to i32*, !dbg !5899
  %35 = load i32, i32* %34, align 4, !dbg !5899, !tbaa !4737
  %36 = shl i32 1, %35, !dbg !5899
  %37 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !5899, !tbaa !4366
  %38 = or i32 %37, %36, !dbg !5899
  store volatile i32 %38, i32* @uxTopReadyPriority, align 4, !dbg !5899, !tbaa !4366
  %39 = getelementptr inbounds [7 x %struct.xLIST], [7 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %35, !dbg !5899
  call void @vListInsertEnd(%struct.xLIST* noundef nonnull %39, %struct.xLIST_ITEM* noundef nonnull %31) #34, !dbg !5899
  br label %41, !dbg !5900

40:                                               ; preds = %26
  call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %18) #34, !dbg !5901
  br label %41

41:                                               ; preds = %40, %29
  %42 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !5903
  %43 = bitcast i8* %42 to i32*, !dbg !5903
  %44 = load i32, i32* %43, align 4, !dbg !5903, !tbaa !4737
  %45 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5905, !tbaa !2495
  %46 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %45, i32 0, i32 3, !dbg !5906
  %47 = load i32, i32* %46, align 4, !dbg !5906, !tbaa !4737
  %48 = icmp ugt i32 %44, %47, !dbg !5907
  br i1 %48, label %49, label %53, !dbg !5908

49:                                               ; preds = %41
  %50 = icmp eq i32* %1, null, !dbg !5909
  br i1 %50, label %52, label %51, !dbg !5912

51:                                               ; preds = %49
  store i32 1, i32* %1, align 4, !dbg !5913, !tbaa !4366
  br label %53, !dbg !5915

52:                                               ; preds = %49
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !5916, !tbaa !4366
  br label %53

53:                                               ; preds = %52, %51, %41, %7
  %54 = extractvalue { i32, i32 } %8, 0, !dbg !5867
  call void @llvm.dbg.value(metadata i32 %54, metadata !5759, metadata !DIExpression()) #34, !dbg !5869
  call void @llvm.dbg.value(metadata i32 %54, metadata !5851, metadata !DIExpression()), !dbg !5852
  call void @llvm.dbg.value(metadata i32 undef, metadata !5835, metadata !DIExpression()) #34, !dbg !5918
  call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 %54) #34, !dbg !5920, !srcloc !5841
  ret void, !dbg !5921
}

; Function Attrs: noinline nounwind
define dso_local i32 @xTaskNotifyStateClear(i8* noundef %0) local_unnamed_addr #9 !dbg !5922 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5926, metadata !DIExpression()), !dbg !5929
  %2 = icmp eq i8* %0, null, !dbg !5930
  br i1 %2, label %3, label %5, !dbg !5930

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !5930, !tbaa !2495
  br label %7, !dbg !5930

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !5930
  br label %7, !dbg !5930

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !5930
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !5927, metadata !DIExpression()), !dbg !5929
  call void @vPortEnterCritical() #34, !dbg !5931
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 7, !dbg !5932
  %10 = load volatile i8, i8* %9, align 4, !dbg !5932, !tbaa !4754
  %11 = icmp eq i8 %10, 2, !dbg !5935
  br i1 %11, label %12, label %13, !dbg !5936

12:                                               ; preds = %7
  store volatile i8 0, i8* %9, align 4, !dbg !5937, !tbaa !4754
  call void @llvm.dbg.value(metadata i32 1, metadata !5928, metadata !DIExpression()), !dbg !5929
  br label %13, !dbg !5939

13:                                               ; preds = %7, %12
  %14 = phi i32 [ 1, %12 ], [ 0, %7 ], !dbg !5940
  call void @llvm.dbg.value(metadata i32 %14, metadata !5928, metadata !DIExpression()), !dbg !5929
  call void @vPortExitCritical() #34, !dbg !5941
  ret i32 %14, !dbg !5942
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_NVIC_SetPriorityGrouping(i32 noundef %0) local_unnamed_addr #14 !dbg !5943 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5945, metadata !DIExpression()), !dbg !5946
  call fastcc void @__NVIC_SetPriorityGrouping(i32 noundef %0), !dbg !5947
  ret void, !dbg !5948
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_SetPriorityGrouping(i32 noundef %0) unnamed_addr #14 !dbg !5949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5951, metadata !DIExpression()), !dbg !5954
  call void @llvm.dbg.value(metadata i32 %0, metadata !5953, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !5954
  %2 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !5955, !tbaa !5956
  call void @llvm.dbg.value(metadata i32 %2, metadata !5952, metadata !DIExpression()), !dbg !5954
  %3 = and i32 %2, 63743, !dbg !5957
  call void @llvm.dbg.value(metadata i32 %3, metadata !5952, metadata !DIExpression()), !dbg !5954
  %4 = shl i32 %0, 8, !dbg !5958
  %5 = and i32 %4, 1792, !dbg !5958
  %6 = or i32 %5, %3, !dbg !5959
  %7 = or i32 %6, 100270080, !dbg !5959
  call void @llvm.dbg.value(metadata i32 %7, metadata !5952, metadata !DIExpression()), !dbg !5954
  store volatile i32 %7, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !5960, !tbaa !5956
  ret void, !dbg !5961
}

; Function Attrs: nofree noinline nounwind
define dso_local void @HAL_NVIC_SetPriority(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !5962 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5967, metadata !DIExpression()), !dbg !5971
  call void @llvm.dbg.value(metadata i32 %1, metadata !5968, metadata !DIExpression()), !dbg !5971
  call void @llvm.dbg.value(metadata i32 %2, metadata !5969, metadata !DIExpression()), !dbg !5971
  call void @llvm.dbg.value(metadata i32 0, metadata !5970, metadata !DIExpression()), !dbg !5971
  %4 = call fastcc i32 @__NVIC_GetPriorityGrouping(), !dbg !5972, !range !5973
  call void @llvm.dbg.value(metadata i32 %4, metadata !5970, metadata !DIExpression()), !dbg !5971
  %5 = call fastcc i32 @NVIC_EncodePriority(i32 noundef %4, i32 noundef %1, i32 noundef %2), !dbg !5974
  call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %5), !dbg !5975
  ret void, !dbg !5976
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define internal fastcc i32 @__NVIC_GetPriorityGrouping() unnamed_addr #15 !dbg !5977 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !5978, !tbaa !5956
  %2 = lshr i32 %1, 8, !dbg !5979
  %3 = and i32 %2, 7, !dbg !5979
  ret i32 %3, !dbg !5980
}

; Function Attrs: mustprogress nofree noinline nosync nounwind readnone willreturn
define internal fastcc i32 @NVIC_EncodePriority(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #20 !dbg !5981 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5985, metadata !DIExpression()), !dbg !5991
  call void @llvm.dbg.value(metadata i32 %1, metadata !5986, metadata !DIExpression()), !dbg !5991
  call void @llvm.dbg.value(metadata i32 %2, metadata !5987, metadata !DIExpression()), !dbg !5991
  %4 = and i32 %0, 7, !dbg !5992
  call void @llvm.dbg.value(metadata i32 %4, metadata !5988, metadata !DIExpression()), !dbg !5991
  %5 = xor i32 %4, 7, !dbg !5993
  %6 = icmp ult i32 %5, 4, !dbg !5994
  %7 = select i1 %6, i32 %5, i32 4, !dbg !5994
  call void @llvm.dbg.value(metadata i32 %7, metadata !5989, metadata !DIExpression()), !dbg !5991
  %8 = call i32 @llvm.usub.sat.i32(i32 %4, i32 3), !dbg !5995
  call void @llvm.dbg.value(metadata i32 %8, metadata !5990, metadata !DIExpression()), !dbg !5991
  %9 = shl nsw i32 -1, %7, !dbg !5996
  %10 = xor i32 %9, -1, !dbg !5996
  %11 = and i32 %10, %1, !dbg !5997
  %12 = shl i32 %11, %8, !dbg !5998
  %13 = shl nsw i32 -1, %8, !dbg !5999
  %14 = xor i32 %13, -1, !dbg !5999
  %15 = and i32 %14, %2, !dbg !6000
  %16 = or i32 %12, %15, !dbg !6001
  ret i32 %16, !dbg !6002
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6003 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6007, metadata !DIExpression()), !dbg !6009
  call void @llvm.dbg.value(metadata i32 %1, metadata !6008, metadata !DIExpression()), !dbg !6009
  %3 = trunc i32 %1 to i8, !dbg !6010
  %4 = shl i8 %3, 4, !dbg !6010
  %5 = and i32 %0, 15, !dbg !6012
  %6 = add nsw i32 %5, -4, !dbg !6012
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6012
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6012
  %9 = icmp slt i32 %0, 0, !dbg !6012
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6012
  store volatile i8 %4, i8* %10, align 1, !dbg !6010, !tbaa !2505
  ret void, !dbg !6013
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_NVIC_EnableIRQ(i32 noundef %0) local_unnamed_addr #14 !dbg !6014 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6018, metadata !DIExpression()), !dbg !6019
  call fastcc void @__NVIC_EnableIRQ(i32 noundef %0), !dbg !6020
  ret void, !dbg !6021
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #14 !dbg !6022 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6024, metadata !DIExpression()), !dbg !6025
  %2 = icmp sgt i32 %0, -1, !dbg !6026
  br i1 %2, label %3, label %8, !dbg !6028

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6029
  %5 = shl i32 1, %4, !dbg !6031
  %6 = lshr i32 %0, 5, !dbg !6032
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6033
  store volatile i32 %5, i32* %7, align 4, !dbg !6034, !tbaa !3380
  br label %8, !dbg !6035

8:                                                ; preds = %3, %1
  ret void, !dbg !6036
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_NVIC_DisableIRQ(i32 noundef %0) local_unnamed_addr #9 !dbg !6037 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6039, metadata !DIExpression()), !dbg !6040
  call fastcc void @__NVIC_DisableIRQ(i32 noundef %0), !dbg !6041
  ret void, !dbg !6042
}

; Function Attrs: noinline nounwind
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #9 !dbg !6043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6045, metadata !DIExpression()), !dbg !6046
  %2 = icmp sgt i32 %0, -1, !dbg !6047
  br i1 %2, label %3, label %8, !dbg !6049

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6050
  %5 = shl i32 1, %4, !dbg !6052
  %6 = lshr i32 %0, 5, !dbg !6053
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6054
  store volatile i32 %5, i32* %7, align 4, !dbg !6055, !tbaa !3380
  call void asm sideeffect "dsb 0xF", "~{memory}"() #34, !dbg !6056, !srcloc !6060
  call void asm sideeffect "isb 0xF", "~{memory}"() #34, !dbg !6061, !srcloc !6064
  br label %8, !dbg !6065

8:                                                ; preds = %3, %1
  ret void, !dbg !6066
}

; Function Attrs: noinline noreturn nounwind
define dso_local void @HAL_NVIC_SystemReset() local_unnamed_addr #18 !dbg !6067 {
  call fastcc void @__NVIC_SystemReset() #35, !dbg !6068
  unreachable, !dbg !6068
}

; Function Attrs: noinline noreturn nounwind
define internal fastcc void @__NVIC_SystemReset() unnamed_addr #18 !dbg !6069 {
  call void asm sideeffect "dsb 0xF", "~{memory}"() #34, !dbg !6070, !srcloc !6060
  %1 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !6072, !tbaa !5956
  %2 = and i32 %1, 1792, !dbg !6073
  %3 = or i32 %2, 100270084, !dbg !6074
  store volatile i32 %3, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !6075, !tbaa !5956
  call void asm sideeffect "dsb 0xF", "~{memory}"() #34, !dbg !6076, !srcloc !6060
  br label %4, !dbg !6078

4:                                                ; preds = %4, %0
  call void asm sideeffect "nop", ""() #34, !dbg !6079, !srcloc !6083
  br label %4, !dbg !6084, !llvm.loop !6085
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_SYSTICK_Config(i32 noundef %0) local_unnamed_addr #14 !dbg !6088 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6092, metadata !DIExpression()), !dbg !6093
  %2 = call fastcc i32 @SysTick_Config(i32 noundef %0), !dbg !6094
  ret i32 %2, !dbg !6095
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc i32 @SysTick_Config(i32 noundef %0) unnamed_addr #14 !dbg !6096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6098, metadata !DIExpression()), !dbg !6099
  %2 = add i32 %0, -1, !dbg !6100
  %3 = icmp ugt i32 %2, 16777215, !dbg !6102
  br i1 %3, label %5, label %4, !dbg !6103

4:                                                ; preds = %1
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !6104, !tbaa !4041
  call fastcc void @__NVIC_SetPriority(i32 noundef -1, i32 noundef 15), !dbg !6105
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !6106, !tbaa !4048
  store volatile i32 7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !6107, !tbaa !4051
  br label %5, !dbg !6108

5:                                                ; preds = %1, %4
  %6 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !6099
  ret i32 %6, !dbg !6109
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_NVIC_GetPriorityGrouping() local_unnamed_addr #15 !dbg !6110 {
  %1 = call fastcc i32 @__NVIC_GetPriorityGrouping(), !dbg !6111
  ret i32 %1, !dbg !6112
}

; Function Attrs: mustprogress nofree noinline nounwind willreturn
define dso_local void @HAL_NVIC_GetPriority(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #21 !dbg !6113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6117, metadata !DIExpression()), !dbg !6121
  call void @llvm.dbg.value(metadata i32 %1, metadata !6118, metadata !DIExpression()), !dbg !6121
  call void @llvm.dbg.value(metadata i32* %2, metadata !6119, metadata !DIExpression()), !dbg !6121
  call void @llvm.dbg.value(metadata i32* %3, metadata !6120, metadata !DIExpression()), !dbg !6121
  %5 = call fastcc i32 @__NVIC_GetPriority(i32 noundef %0), !dbg !6122, !range !6123
  call fastcc void @NVIC_DecodePriority(i32 noundef %5, i32 noundef %1, i32* noundef %2, i32* noundef %3), !dbg !6124
  ret void, !dbg !6125
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define internal fastcc i32 @__NVIC_GetPriority(i32 noundef %0) unnamed_addr #15 !dbg !6126 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6130, metadata !DIExpression()), !dbg !6131
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6132
  %3 = and i32 %0, 15, !dbg !6132
  %4 = add nsw i32 %3, -4, !dbg !6132
  %5 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %4, !dbg !6132
  %6 = icmp slt i32 %0, 0, !dbg !6132
  %7 = select i1 %6, i8* %5, i8* %2, !dbg !6132
  %8 = load volatile i8, i8* %7, align 1, !dbg !6133, !tbaa !2505
  %9 = lshr i8 %8, 4, !dbg !6133
  %10 = zext i8 %9 to i32, !dbg !6133
  ret i32 %10, !dbg !6135
}

; Function Attrs: mustprogress nofree noinline nosync nounwind willreturn writeonly
define internal fastcc void @NVIC_DecodePriority(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2, i32* nocapture noundef writeonly %3) unnamed_addr #22 !dbg !6136 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6141, metadata !DIExpression()), !dbg !6148
  call void @llvm.dbg.value(metadata i32 %1, metadata !6142, metadata !DIExpression()), !dbg !6148
  call void @llvm.dbg.value(metadata i32* %2, metadata !6143, metadata !DIExpression()), !dbg !6148
  call void @llvm.dbg.value(metadata i32* %3, metadata !6144, metadata !DIExpression()), !dbg !6148
  %5 = and i32 %1, 7, !dbg !6149
  call void @llvm.dbg.value(metadata i32 %5, metadata !6145, metadata !DIExpression()), !dbg !6148
  %6 = xor i32 %5, 7, !dbg !6150
  %7 = icmp ult i32 %6, 4, !dbg !6151
  %8 = select i1 %7, i32 %6, i32 4, !dbg !6151
  call void @llvm.dbg.value(metadata i32 %8, metadata !6146, metadata !DIExpression()), !dbg !6148
  %9 = call i32 @llvm.usub.sat.i32(i32 %5, i32 3), !dbg !6152
  call void @llvm.dbg.value(metadata i32 %9, metadata !6147, metadata !DIExpression()), !dbg !6148
  %10 = lshr i32 %0, %9, !dbg !6153
  %11 = shl nsw i32 -1, %8, !dbg !6154
  %12 = xor i32 %11, -1, !dbg !6154
  %13 = and i32 %10, %12, !dbg !6155
  store i32 %13, i32* %2, align 4, !dbg !6156, !tbaa !3380
  %14 = shl nsw i32 -1, %9, !dbg !6157
  %15 = xor i32 %14, -1, !dbg !6157
  %16 = and i32 %15, %0, !dbg !6158
  store i32 %16, i32* %3, align 4, !dbg !6159, !tbaa !3380
  ret void, !dbg !6160
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_NVIC_SetPendingIRQ(i32 noundef %0) local_unnamed_addr #14 !dbg !6161 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6163, metadata !DIExpression()), !dbg !6164
  call fastcc void @__NVIC_SetPendingIRQ(i32 noundef %0), !dbg !6165
  ret void, !dbg !6166
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #14 !dbg !6167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6169, metadata !DIExpression()), !dbg !6170
  %2 = icmp sgt i32 %0, -1, !dbg !6171
  br i1 %2, label %3, label %8, !dbg !6173

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6174
  %5 = shl i32 1, %4, !dbg !6176
  %6 = lshr i32 %0, 5, !dbg !6177
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %6, !dbg !6178
  store volatile i32 %5, i32* %7, align 4, !dbg !6179, !tbaa !3380
  br label %8, !dbg !6180

8:                                                ; preds = %3, %1
  ret void, !dbg !6181
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_NVIC_GetPendingIRQ(i32 noundef %0) local_unnamed_addr #15 !dbg !6182 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6184, metadata !DIExpression()), !dbg !6185
  %2 = call fastcc i32 @__NVIC_GetPendingIRQ(i32 noundef %0), !dbg !6186
  ret i32 %2, !dbg !6187
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define internal fastcc i32 @__NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #15 !dbg !6188 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6190, metadata !DIExpression()), !dbg !6191
  %2 = icmp sgt i32 %0, -1, !dbg !6192
  br i1 %2, label %3, label %10, !dbg !6194

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !6195
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !6197
  %6 = load volatile i32, i32* %5, align 4, !dbg !6197, !tbaa !3380
  %7 = and i32 %0, 31, !dbg !6198
  %8 = lshr i32 %6, %7, !dbg !6199
  %9 = and i32 %8, 1, !dbg !6199
  br label %10, !dbg !6200

10:                                               ; preds = %1, %3
  %11 = phi i32 [ %9, %3 ], [ 0, %1 ], !dbg !6201
  ret i32 %11, !dbg !6202
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_NVIC_ClearPendingIRQ(i32 noundef %0) local_unnamed_addr #14 !dbg !6203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6205, metadata !DIExpression()), !dbg !6206
  call fastcc void @__NVIC_ClearPendingIRQ(i32 noundef %0), !dbg !6207
  ret void, !dbg !6208
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #14 !dbg !6209 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6211, metadata !DIExpression()), !dbg !6212
  %2 = icmp sgt i32 %0, -1, !dbg !6213
  br i1 %2, label %3, label %8, !dbg !6215

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6216
  %5 = shl i32 1, %4, !dbg !6218
  %6 = lshr i32 %0, 5, !dbg !6219
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %6, !dbg !6220
  store volatile i32 %5, i32* %7, align 4, !dbg !6221, !tbaa !3380
  br label %8, !dbg !6222

8:                                                ; preds = %3, %1
  ret void, !dbg !6223
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_NVIC_GetActive(i32 noundef %0) local_unnamed_addr #15 !dbg !6224 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6226, metadata !DIExpression()), !dbg !6227
  %2 = call fastcc i32 @__NVIC_GetActive(i32 noundef %0), !dbg !6228
  ret i32 %2, !dbg !6229
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define internal fastcc i32 @__NVIC_GetActive(i32 noundef %0) unnamed_addr #15 !dbg !6230 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6232, metadata !DIExpression()), !dbg !6233
  %2 = icmp sgt i32 %0, -1, !dbg !6234
  br i1 %2, label %3, label %10, !dbg !6236

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !6237
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812800 to [8 x i32]*), i32 0, i32 %4, !dbg !6239
  %6 = load volatile i32, i32* %5, align 4, !dbg !6239, !tbaa !3380
  %7 = and i32 %0, 31, !dbg !6240
  %8 = lshr i32 %6, %7, !dbg !6241
  %9 = and i32 %8, 1, !dbg !6241
  br label %10, !dbg !6242

10:                                               ; preds = %1, %3
  %11 = phi i32 [ %9, %3 ], [ 0, %1 ], !dbg !6243
  ret i32 %11, !dbg !6244
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_SYSTICK_CLKSourceConfig(i32 noundef %0) local_unnamed_addr #14 !dbg !6245 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6247, metadata !DIExpression()), !dbg !6248
  %2 = icmp eq i32 %0, 4, !dbg !6249
  %3 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !6251, !tbaa !4051
  %4 = and i32 %3, -5, !dbg !6252
  %5 = select i1 %2, i32 4, i32 0, !dbg !6252
  %6 = or i32 %4, %5, !dbg !6252
  store volatile i32 %6, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !6251, !tbaa !4051
  ret void, !dbg !6253
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_SYSTICK_IRQHandler() local_unnamed_addr #9 !dbg !6254 {
  call void @HAL_SYSTICK_Callback(), !dbg !6255
  ret void, !dbg !6256
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_SYSTICK_Callback() local_unnamed_addr #9 !dbg !6257 {
  ret void, !dbg !6258
}

; Function Attrs: nofree noinline nounwind
define dso_local void @HAL_GPIO_Init(%struct.USART_TypeDef* noundef %0, %struct.DMA_Channel_TypeDef* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !6259 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !6271, metadata !DIExpression()), !dbg !6287
  call void @llvm.dbg.value(metadata %struct.DMA_Channel_TypeDef* %1, metadata !6272, metadata !DIExpression()), !dbg !6287
  call void @llvm.dbg.value(metadata i32 0, metadata !6273, metadata !DIExpression()), !dbg !6287
  call void @llvm.dbg.value(metadata i32 0, metadata !6277, metadata !DIExpression()), !dbg !6287
  %4 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !6273, metadata !DIExpression()), !dbg !6287
  call void @llvm.dbg.value(metadata i32 0, metadata !6277, metadata !DIExpression()), !dbg !6287
  %5 = load i32, i32* %4, align 4, !dbg !6288, !tbaa !4051
  %6 = icmp eq i32 %5, 0, !dbg !6289
  br i1 %6, label %135, label %7, !dbg !6290

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 1
  %9 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 2
  %10 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4
  %11 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  %12 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 3
  %13 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 3
  %14 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 3
  %15 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 3
  %16 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0
  %17 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1
  %18 = ptrtoint %struct.USART_TypeDef* %0 to i32
  %19 = icmp eq %struct.USART_TypeDef* %0, inttoptr (i32 1073812480 to %struct.USART_TypeDef*)
  %20 = select i1 %19, i32 3, i32 4
  %21 = bitcast i32* %3 to i8*
  %22 = bitcast i32* %3 to i8*
  br label %23, !dbg !6290

23:                                               ; preds = %7, %129
  %24 = phi i32 [ %5, %7 ], [ %132, %129 ]
  %25 = phi i32 [ 0, %7 ], [ %131, %129 ]
  %26 = phi i32 [ 0, %7 ], [ %130, %129 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !6273, metadata !DIExpression()), !dbg !6287
  call void @llvm.dbg.value(metadata i32 %26, metadata !6277, metadata !DIExpression()), !dbg !6287
  %27 = shl i32 1, %25, !dbg !6291
  call void @llvm.dbg.value(metadata i32 %27, metadata !6274, metadata !DIExpression()), !dbg !6287
  %28 = and i32 %24, %27, !dbg !6292
  call void @llvm.dbg.value(metadata i32 %28, metadata !6275, metadata !DIExpression()), !dbg !6287
  %29 = icmp eq i32 %28, %27, !dbg !6293
  br i1 %29, label %30, label %129, !dbg !6294

30:                                               ; preds = %23
  %31 = load i32, i32* %8, align 4, !dbg !6295, !tbaa !4041
  switch i32 %31, label %48 [
    i32 1, label %32
    i32 17, label %34
    i32 2, label %37
    i32 18, label %40
    i32 0, label %43
    i32 269549568, label %43
    i32 270598144, label %43
    i32 271646720, label %43
    i32 269615104, label %43
    i32 270663680, label %43
    i32 271712256, label %43
    i32 3, label %47
  ], !dbg !6296

32:                                               ; preds = %30
  %33 = load i32, i32* %15, align 4, !dbg !6297, !tbaa !4045
  call void @llvm.dbg.value(metadata i32 %33, metadata !6277, metadata !DIExpression()), !dbg !6287
  br label %48, !dbg !6299

34:                                               ; preds = %30
  %35 = load i32, i32* %14, align 4, !dbg !6300, !tbaa !4045
  %36 = add i32 %35, 4, !dbg !6301
  call void @llvm.dbg.value(metadata i32 %36, metadata !6277, metadata !DIExpression()), !dbg !6287
  br label %48, !dbg !6302

37:                                               ; preds = %30
  %38 = load i32, i32* %13, align 4, !dbg !6303, !tbaa !4045
  %39 = add i32 %38, 8, !dbg !6304
  call void @llvm.dbg.value(metadata i32 %39, metadata !6277, metadata !DIExpression()), !dbg !6287
  br label %48, !dbg !6305

40:                                               ; preds = %30
  %41 = load i32, i32* %12, align 4, !dbg !6306, !tbaa !4045
  %42 = add i32 %41, 12, !dbg !6307
  call void @llvm.dbg.value(metadata i32 %42, metadata !6277, metadata !DIExpression()), !dbg !6287
  br label %48, !dbg !6308

43:                                               ; preds = %30, %30, %30, %30, %30, %30, %30
  %44 = load i32, i32* %9, align 4, !dbg !6309, !tbaa !4048
  switch i32 %44, label %46 [
    i32 0, label %48
    i32 1, label %45
  ], !dbg !6311

45:                                               ; preds = %43
  call void @llvm.dbg.value(metadata i32 8, metadata !6277, metadata !DIExpression()), !dbg !6287
  store volatile i32 %27, i32* %10, align 4, !dbg !6312, !tbaa !6315
  br label %48, !dbg !6317

46:                                               ; preds = %43
  call void @llvm.dbg.value(metadata i32 8, metadata !6277, metadata !DIExpression()), !dbg !6287
  store volatile i32 %27, i32* %11, align 4, !dbg !6318, !tbaa !6320
  br label %48

47:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 0, metadata !6277, metadata !DIExpression()), !dbg !6287
  br label %48, !dbg !6321

48:                                               ; preds = %43, %30, %46, %45, %47, %40, %37, %34, %32
  %49 = phi i32 [ %26, %30 ], [ 0, %47 ], [ 8, %45 ], [ 8, %46 ], [ %42, %40 ], [ %39, %37 ], [ %36, %34 ], [ %33, %32 ], [ 4, %43 ], !dbg !6287
  call void @llvm.dbg.value(metadata i32 %49, metadata !6277, metadata !DIExpression()), !dbg !6287
  %50 = icmp ult i32 %28, 256, !dbg !6322
  %51 = select i1 %50, i32* %16, i32* %17, !dbg !6323
  call void @llvm.dbg.value(metadata i32* %51, metadata !6278, metadata !DIExpression()), !dbg !6287
  %52 = shl i32 %25, 2, !dbg !6324
  %53 = add i32 %52, -32, !dbg !6324
  %54 = select i1 %50, i32 %52, i32 %53, !dbg !6324
  call void @llvm.dbg.value(metadata i32 %54, metadata !6279, metadata !DIExpression()), !dbg !6287
  %55 = load volatile i32, i32* %51, align 4, !dbg !6325, !tbaa !3380
  %56 = shl i32 15, %54, !dbg !6325
  %57 = xor i32 %56, -1, !dbg !6325
  %58 = and i32 %55, %57, !dbg !6325
  %59 = shl i32 %49, %54, !dbg !6325
  %60 = or i32 %58, %59, !dbg !6325
  store volatile i32 %60, i32* %51, align 4, !dbg !6325, !tbaa !3380
  %61 = load i32, i32* %8, align 4, !dbg !6326, !tbaa !4041
  %62 = and i32 %61, 268435456, !dbg !6327
  %63 = icmp eq i32 %62, 0, !dbg !6328
  br i1 %63, label %129, label %64, !dbg !6329

64:                                               ; preds = %48
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !6330
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6280, metadata !DIExpression()), !dbg !6330
  %65 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6330, !tbaa !4053
  %66 = or i32 %65, 1, !dbg !6330
  store volatile i32 %66, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6330, !tbaa !4053
  %67 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !6330, !tbaa !4053
  %68 = and i32 %67, 1, !dbg !6330
  store volatile i32 %68, i32* %3, align 4, !dbg !6330, !tbaa !3380
  %69 = load volatile i32, i32* %3, align 4, !dbg !6330, !tbaa !3380
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22), !dbg !6331
  %70 = lshr i32 %25, 2, !dbg !6332
  %71 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %70, !dbg !6333
  %72 = load volatile i32, i32* %71, align 4, !dbg !6333, !tbaa !3380
  call void @llvm.dbg.value(metadata i32 %72, metadata !6276, metadata !DIExpression()), !dbg !6287
  %73 = and i32 %52, 12, !dbg !6334
  %74 = shl i32 15, %73, !dbg !6334
  %75 = xor i32 %74, -1, !dbg !6334
  %76 = and i32 %72, %75, !dbg !6334
  call void @llvm.dbg.value(metadata i32 %76, metadata !6276, metadata !DIExpression()), !dbg !6287
  switch i32 %18, label %77 [
    i32 1073809408, label %80
    i32 1073810432, label %78
    i32 1073811456, label %79
  ], !dbg !6335

77:                                               ; preds = %64
  br label %80, !dbg !6335

78:                                               ; preds = %64
  br label %80, !dbg !6335

79:                                               ; preds = %64
  br label %80, !dbg !6335

80:                                               ; preds = %64, %79, %78, %77
  %81 = phi i32 [ 0, %64 ], [ %20, %77 ], [ 1, %78 ], [ 2, %79 ], !dbg !6335
  %82 = shl i32 %81, %73, !dbg !6335
  %83 = or i32 %82, %76, !dbg !6335
  call void @llvm.dbg.value(metadata i32 %83, metadata !6276, metadata !DIExpression()), !dbg !6287
  store volatile i32 %83, i32* %71, align 4, !dbg !6336, !tbaa !3380
  %84 = load i32, i32* %8, align 4, !dbg !6337, !tbaa !4041
  %85 = and i32 %84, 65536, !dbg !6339
  %86 = icmp eq i32 %85, 0, !dbg !6340
  br i1 %86, label %90, label %87, !dbg !6341

87:                                               ; preds = %80
  %88 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !6342, !tbaa !6344
  %89 = or i32 %88, %28, !dbg !6342
  br label %94, !dbg !6346

90:                                               ; preds = %80
  %91 = xor i32 %28, -1, !dbg !6347
  %92 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !6347, !tbaa !6344
  %93 = and i32 %92, %91, !dbg !6347
  br label %94

94:                                               ; preds = %90, %87
  %95 = phi i32 [ %93, %90 ], [ %89, %87 ]
  store volatile i32 %95, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !6349, !tbaa !6344
  %96 = and i32 %84, 131072, !dbg !6350
  %97 = icmp eq i32 %96, 0, !dbg !6352
  br i1 %97, label %101, label %98, !dbg !6353

98:                                               ; preds = %94
  %99 = load volatile i32, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !6354, !tbaa !6356
  %100 = or i32 %99, %28, !dbg !6354
  br label %105, !dbg !6357

101:                                              ; preds = %94
  %102 = xor i32 %28, -1, !dbg !6358
  %103 = load volatile i32, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !6358, !tbaa !6356
  %104 = and i32 %103, %102, !dbg !6358
  br label %105

105:                                              ; preds = %101, %98
  %106 = phi i32 [ %104, %101 ], [ %100, %98 ]
  store volatile i32 %106, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !6360, !tbaa !6356
  %107 = and i32 %84, 1048576, !dbg !6361
  %108 = icmp eq i32 %107, 0, !dbg !6363
  br i1 %108, label %112, label %109, !dbg !6364

109:                                              ; preds = %105
  %110 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !6365, !tbaa !6367
  %111 = or i32 %110, %28, !dbg !6365
  br label %116, !dbg !6368

112:                                              ; preds = %105
  %113 = xor i32 %28, -1, !dbg !6369
  %114 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !6369, !tbaa !6367
  %115 = and i32 %114, %113, !dbg !6369
  br label %116

116:                                              ; preds = %112, %109
  %117 = phi i32 [ %115, %112 ], [ %111, %109 ]
  store volatile i32 %117, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !6371, !tbaa !6367
  %118 = and i32 %84, 2097152, !dbg !6372
  %119 = icmp eq i32 %118, 0, !dbg !6374
  br i1 %119, label %123, label %120, !dbg !6375

120:                                              ; preds = %116
  %121 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !6376, !tbaa !6378
  %122 = or i32 %121, %28, !dbg !6376
  br label %127, !dbg !6379

123:                                              ; preds = %116
  %124 = xor i32 %28, -1, !dbg !6380
  %125 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !6380, !tbaa !6378
  %126 = and i32 %125, %124, !dbg !6380
  br label %127

127:                                              ; preds = %120, %123
  %128 = phi i32 [ %126, %123 ], [ %122, %120 ]
  store volatile i32 %128, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !6382, !tbaa !6378
  br label %129, !dbg !6383

129:                                              ; preds = %127, %48, %23
  %130 = phi i32 [ %49, %48 ], [ %26, %23 ], [ %49, %127 ], !dbg !6384
  call void @llvm.dbg.value(metadata i32 %130, metadata !6277, metadata !DIExpression()), !dbg !6287
  %131 = add i32 %25, 1, !dbg !6383
  call void @llvm.dbg.value(metadata i32 %131, metadata !6273, metadata !DIExpression()), !dbg !6287
  %132 = load i32, i32* %4, align 4, !dbg !6288, !tbaa !4051
  %133 = lshr i32 %132, %131, !dbg !6385
  %134 = icmp eq i32 %133, 0, !dbg !6289
  br i1 %134, label %135, label %23, !dbg !6290, !llvm.loop !6386

135:                                              ; preds = %129, %2
  ret void, !dbg !6388
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_GPIO_DeInit(%struct.USART_TypeDef* noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !6389 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !6393, metadata !DIExpression()), !dbg !6400
  call void @llvm.dbg.value(metadata i32 %1, metadata !6394, metadata !DIExpression()), !dbg !6400
  call void @llvm.dbg.value(metadata i32 0, metadata !6395, metadata !DIExpression()), !dbg !6400
  %3 = icmp eq i32 %1, 0, !dbg !6401
  br i1 %3, label %62, label %4, !dbg !6402

4:                                                ; preds = %2
  %5 = ptrtoint %struct.USART_TypeDef* %0 to i32
  %6 = icmp eq %struct.USART_TypeDef* %0, inttoptr (i32 1073812480 to %struct.USART_TypeDef*)
  %7 = select i1 %6, i32 3, i32 4
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1
  %10 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %11, !dbg !6402

11:                                               ; preds = %4, %58
  %12 = phi i32 [ 0, %4 ], [ %59, %58 ]
  call void @llvm.dbg.value(metadata i32 %12, metadata !6395, metadata !DIExpression()), !dbg !6400
  %13 = shl i32 1, %12, !dbg !6403
  %14 = and i32 %13, %1, !dbg !6405
  call void @llvm.dbg.value(metadata i32 %14, metadata !6396, metadata !DIExpression()), !dbg !6400
  %15 = icmp eq i32 %14, 0, !dbg !6406
  br i1 %15, label %58, label %16, !dbg !6408

16:                                               ; preds = %11
  %17 = lshr i32 %12, 2, !dbg !6409
  %18 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %17, !dbg !6411
  %19 = load volatile i32, i32* %18, align 4, !dbg !6411, !tbaa !3380
  call void @llvm.dbg.value(metadata i32 %19, metadata !6397, metadata !DIExpression()), !dbg !6400
  %20 = shl i32 %12, 2, !dbg !6412
  %21 = and i32 %20, 12, !dbg !6412
  %22 = shl i32 15, %21, !dbg !6413
  %23 = and i32 %19, %22, !dbg !6414
  call void @llvm.dbg.value(metadata i32 %23, metadata !6397, metadata !DIExpression()), !dbg !6400
  switch i32 %5, label %24 [
    i32 1073809408, label %27
    i32 1073810432, label %25
    i32 1073811456, label %26
  ], !dbg !6415

24:                                               ; preds = %16
  br label %27, !dbg !6415

25:                                               ; preds = %16
  br label %27, !dbg !6417

26:                                               ; preds = %16
  br label %27, !dbg !6417

27:                                               ; preds = %16, %26, %25, %24
  %28 = phi i32 [ 0, %16 ], [ %7, %24 ], [ 1, %25 ], [ 2, %26 ], !dbg !6415
  %29 = shl i32 %28, %21, !dbg !6417
  %30 = icmp eq i32 %23, %29, !dbg !6418
  br i1 %30, label %31, label %44, !dbg !6419

31:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %22, metadata !6397, metadata !DIExpression()), !dbg !6400
  %32 = xor i32 %22, -1, !dbg !6420
  %33 = load volatile i32, i32* %18, align 4, !dbg !6420, !tbaa !3380
  %34 = and i32 %33, %32, !dbg !6420
  store volatile i32 %34, i32* %18, align 4, !dbg !6420, !tbaa !3380
  %35 = xor i32 %14, -1, !dbg !6422
  %36 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !6422, !tbaa !6344
  %37 = and i32 %36, %35, !dbg !6422
  store volatile i32 %37, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !6422, !tbaa !6344
  %38 = load volatile i32, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !6423, !tbaa !6356
  %39 = and i32 %38, %35, !dbg !6423
  store volatile i32 %39, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !6423, !tbaa !6356
  %40 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !6424, !tbaa !6367
  %41 = and i32 %40, %35, !dbg !6424
  store volatile i32 %41, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !6424, !tbaa !6367
  %42 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !6425, !tbaa !6378
  %43 = and i32 %42, %35, !dbg !6425
  store volatile i32 %43, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !6425, !tbaa !6378
  br label %44, !dbg !6426

44:                                               ; preds = %31, %27
  %45 = icmp ult i32 %14, 256, !dbg !6427
  %46 = select i1 %45, i32* %8, i32* %9, !dbg !6428
  call void @llvm.dbg.value(metadata i32* %46, metadata !6398, metadata !DIExpression()), !dbg !6400
  %47 = add i32 %20, -32, !dbg !6429
  %48 = select i1 %45, i32 %20, i32 %47, !dbg !6429
  call void @llvm.dbg.value(metadata i32 %48, metadata !6399, metadata !DIExpression()), !dbg !6400
  %49 = load volatile i32, i32* %46, align 4, !dbg !6430, !tbaa !3380
  %50 = shl i32 15, %48, !dbg !6430
  %51 = xor i32 %50, -1, !dbg !6430
  %52 = and i32 %49, %51, !dbg !6430
  %53 = shl i32 4, %48, !dbg !6430
  %54 = or i32 %52, %53, !dbg !6430
  store volatile i32 %54, i32* %46, align 4, !dbg !6430, !tbaa !3380
  %55 = xor i32 %14, -1, !dbg !6431
  %56 = load volatile i32, i32* %10, align 4, !dbg !6431, !tbaa !6432
  %57 = and i32 %56, %55, !dbg !6431
  store volatile i32 %57, i32* %10, align 4, !dbg !6431, !tbaa !6432
  br label %58, !dbg !6433

58:                                               ; preds = %44, %11
  %59 = add i32 %12, 1, !dbg !6434
  call void @llvm.dbg.value(metadata i32 %59, metadata !6395, metadata !DIExpression()), !dbg !6400
  %60 = lshr i32 %1, %59, !dbg !6435
  %61 = icmp eq i32 %60, 0, !dbg !6401
  br i1 %61, label %62, label %11, !dbg !6402, !llvm.loop !6436

62:                                               ; preds = %58, %2
  ret void, !dbg !6438
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_GPIO_ReadPin(%struct.USART_TypeDef* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #15 !dbg !6439 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !6444, metadata !DIExpression()), !dbg !6447
  call void @llvm.dbg.value(metadata i16 %1, metadata !6445, metadata !DIExpression()), !dbg !6447
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !6448
  %4 = load volatile i32, i32* %3, align 4, !dbg !6448, !tbaa !6450
  %5 = zext i16 %1 to i32, !dbg !6451
  %6 = and i32 %4, %5, !dbg !6452
  %7 = icmp ne i32 %6, 0, !dbg !6453
  %8 = zext i1 %7 to i32
  call void @llvm.dbg.value(metadata i32 %8, metadata !6446, metadata !DIExpression()), !dbg !6447
  ret i32 %8, !dbg !6454
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_GPIO_WritePin(%struct.USART_TypeDef* noundef %0, i16 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #14 !dbg !6455 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !6459, metadata !DIExpression()), !dbg !6462
  call void @llvm.dbg.value(metadata i16 %1, metadata !6460, metadata !DIExpression()), !dbg !6462
  call void @llvm.dbg.value(metadata i32 %2, metadata !6461, metadata !DIExpression()), !dbg !6462
  %4 = icmp eq i32 %2, 0, !dbg !6463
  %5 = zext i16 %1 to i32, !dbg !6465
  %6 = shl nuw i32 %5, 16, !dbg !6466
  %7 = select i1 %4, i32 %6, i32 %5, !dbg !6466
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !6465
  store volatile i32 %7, i32* %8, align 4, !dbg !6465, !tbaa !6315
  ret void, !dbg !6467
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_GPIO_TogglePin(%struct.USART_TypeDef* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #14 !dbg !6468 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !6472, metadata !DIExpression()), !dbg !6474
  call void @llvm.dbg.value(metadata i16 %1, metadata !6473, metadata !DIExpression()), !dbg !6474
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !6475
  %4 = load volatile i32, i32* %3, align 4, !dbg !6475, !tbaa !6432
  %5 = zext i16 %1 to i32, !dbg !6477
  %6 = and i32 %4, %5, !dbg !6478
  %7 = icmp eq i32 %6, 0, !dbg !6479
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !6480
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !6480
  %10 = select i1 %7, i32* %8, i32* %9, !dbg !6480
  store volatile i32 %5, i32* %10, align 4, !dbg !6481, !tbaa !3380
  ret void, !dbg !6482
}

; Function Attrs: nofree noinline nounwind
define dso_local i32 @HAL_GPIO_LockPin(%struct.USART_TypeDef* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #19 !dbg !6483 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !6487, metadata !DIExpression()), !dbg !6490
  call void @llvm.dbg.value(metadata i16 %1, metadata !6488, metadata !DIExpression()), !dbg !6490
  %4 = bitcast i32* %3 to i8*, !dbg !6491
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !6491
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6489, metadata !DIExpression()), !dbg !6492
  store volatile i32 65536, i32* %3, align 4, !dbg !6492, !tbaa !3380
  %5 = zext i16 %1 to i32, !dbg !6493
  %6 = load volatile i32, i32* %3, align 4, !dbg !6493, !tbaa !3380
  %7 = or i32 %6, %5, !dbg !6493
  store volatile i32 %7, i32* %3, align 4, !dbg !6493, !tbaa !3380
  %8 = load volatile i32, i32* %3, align 4, !dbg !6494, !tbaa !3380
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 6, !dbg !6495
  store volatile i32 %8, i32* %9, align 4, !dbg !6496, !tbaa !6497
  store volatile i32 %5, i32* %9, align 4, !dbg !6498, !tbaa !6497
  %10 = load volatile i32, i32* %3, align 4, !dbg !6499, !tbaa !3380
  store volatile i32 %10, i32* %9, align 4, !dbg !6500, !tbaa !6497
  %11 = load volatile i32, i32* %9, align 4, !dbg !6501, !tbaa !6497
  store volatile i32 %11, i32* %3, align 4, !dbg !6502, !tbaa !3380
  %12 = load volatile i32, i32* %9, align 4, !dbg !6503, !tbaa !6497
  %13 = lshr i32 %12, 16, !dbg !6505
  %14 = and i32 %13, 1, !dbg !6505
  %15 = xor i32 %14, 1, !dbg !6505
  %16 = bitcast i32* %3 to i8*, !dbg !6506
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16), !dbg !6506
  ret i32 %15, !dbg !6506
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_GPIO_EXTI_IRQHandler(i16 noundef zeroext %0) local_unnamed_addr #9 !dbg !6507 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6511, metadata !DIExpression()), !dbg !6512
  %2 = load volatile i32, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !6513, !tbaa !6515
  %3 = zext i16 %0 to i32, !dbg !6513
  %4 = and i32 %2, %3, !dbg !6513
  %5 = icmp eq i32 %4, 0, !dbg !6516
  br i1 %5, label %7, label %6, !dbg !6517

6:                                                ; preds = %1
  store volatile i32 %3, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !6518, !tbaa !6515
  call void @HAL_GPIO_EXTI_Callback(i16 noundef zeroext %0), !dbg !6520
  br label %7, !dbg !6521

7:                                                ; preds = %6, %1
  ret void, !dbg !6522
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_GPIO_EXTI_Callback(i16 noundef zeroext %0) local_unnamed_addr #9 !dbg !6523 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6525, metadata !DIExpression()), !dbg !6526
  ret void, !dbg !6527
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @vListInitialise(%struct.xLIST* noundef %0) local_unnamed_addr #14 !dbg !6528 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !6533, metadata !DIExpression()), !dbg !6534
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, !dbg !6535
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 1, !dbg !6536
  %4 = bitcast %struct.xLIST_ITEM** %3 to %struct.xMINI_LIST_ITEM**, !dbg !6537
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %4, align 4, !dbg !6537, !tbaa !5244
  %5 = getelementptr inbounds %struct.xMINI_LIST_ITEM, %struct.xMINI_LIST_ITEM* %2, i32 0, i32 0, !dbg !6538
  store i32 -1, i32* %5, align 4, !dbg !6539, !tbaa !6540
  %6 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 1, !dbg !6541
  %7 = bitcast %struct.xLIST_ITEM** %6 to %struct.xMINI_LIST_ITEM**, !dbg !6542
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %7, align 4, !dbg !6542, !tbaa !4962
  %8 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 2, !dbg !6543
  %9 = bitcast %struct.xLIST_ITEM** %8 to %struct.xMINI_LIST_ITEM**, !dbg !6544
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %9, align 4, !dbg !6544, !tbaa !6545
  %10 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !6546
  store volatile i32 0, i32* %10, align 4, !dbg !6547, !tbaa !4956
  ret void, !dbg !6548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local void @vListInitialiseItem(%struct.xLIST_ITEM* nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !6549 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !6554, metadata !DIExpression()), !dbg !6555
  %2 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 4, !dbg !6556
  store i8* null, i8** %2, align 4, !dbg !6557, !tbaa !6558
  ret void, !dbg !6559
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @vListInsertEnd(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef %1) local_unnamed_addr #14 !dbg !6560 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !6564, metadata !DIExpression()), !dbg !6567
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %1, metadata !6565, metadata !DIExpression()), !dbg !6567
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 1, !dbg !6568
  %4 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %3, align 4, !dbg !6568, !tbaa !5244
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %4, metadata !6566, metadata !DIExpression()), !dbg !6567
  %5 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 1, !dbg !6569
  store %struct.xLIST_ITEM* %4, %struct.xLIST_ITEM** %5, align 4, !dbg !6570, !tbaa !5245
  %6 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %4, i32 0, i32 2, !dbg !6571
  %7 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %6, align 4, !dbg !6571, !tbaa !6572
  %8 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 2, !dbg !6573
  store %struct.xLIST_ITEM* %7, %struct.xLIST_ITEM** %8, align 4, !dbg !6574, !tbaa !6572
  %9 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %6, align 4, !dbg !6575, !tbaa !6572
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %9, i32 0, i32 1, !dbg !6576
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %10, align 4, !dbg !6577, !tbaa !5245
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %6, align 4, !dbg !6578, !tbaa !6572
  %11 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 4, !dbg !6579
  %12 = bitcast i8** %11 to %struct.xLIST**, !dbg !6580
  store %struct.xLIST* %0, %struct.xLIST** %12, align 4, !dbg !6580, !tbaa !6558
  %13 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !6581
  %14 = load volatile i32, i32* %13, align 4, !dbg !6582, !tbaa !4956
  %15 = add i32 %14, 1, !dbg !6582
  store volatile i32 %15, i32* %13, align 4, !dbg !6582, !tbaa !4956
  ret void, !dbg !6583
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @vListInsert(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef %1) local_unnamed_addr #14 !dbg !6584 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !6586, metadata !DIExpression()), !dbg !6590
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %1, metadata !6587, metadata !DIExpression()), !dbg !6590
  %3 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 0, !dbg !6591
  %4 = load i32, i32* %3, align 4, !dbg !6591, !tbaa !5387
  call void @llvm.dbg.value(metadata i32 %4, metadata !6589, metadata !DIExpression()), !dbg !6590
  %5 = icmp eq i32 %4, -1, !dbg !6592
  br i1 %5, label %6, label %9, !dbg !6594

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 2, !dbg !6595
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !6595, !tbaa !6545
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %8, metadata !6588, metadata !DIExpression()), !dbg !6590
  br label %19, !dbg !6597

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, !dbg !6598
  %11 = bitcast %struct.xMINI_LIST_ITEM* %10 to %struct.xLIST_ITEM*, !dbg !6601
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %11, metadata !6588, metadata !DIExpression()), !dbg !6590
  br label %12, !dbg !6602

12:                                               ; preds = %12, %9
  %13 = phi %struct.xLIST_ITEM* [ %11, %9 ], [ %15, %12 ], !dbg !6603
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %13, metadata !6588, metadata !DIExpression()), !dbg !6590
  %14 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %13, i32 0, i32 1, !dbg !6604
  %15 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %14, align 4, !dbg !6604, !tbaa !5245
  %16 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %15, i32 0, i32 0, !dbg !6606
  %17 = load i32, i32* %16, align 4, !dbg !6606, !tbaa !5387
  %18 = icmp ugt i32 %17, %4, !dbg !6607
  br i1 %18, label %19, label %12, !dbg !6608, !llvm.loop !6609

19:                                               ; preds = %12, %6
  %20 = phi %struct.xLIST_ITEM* [ %8, %6 ], [ %13, %12 ], !dbg !6611
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %20, metadata !6588, metadata !DIExpression()), !dbg !6590
  %21 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %20, i32 0, i32 1, !dbg !6612
  %22 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %21, align 4, !dbg !6612, !tbaa !5245
  %23 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 1, !dbg !6613
  store %struct.xLIST_ITEM* %22, %struct.xLIST_ITEM** %23, align 4, !dbg !6614, !tbaa !5245
  %24 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %22, i32 0, i32 2, !dbg !6615
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %24, align 4, !dbg !6616, !tbaa !6572
  %25 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 2, !dbg !6617
  store %struct.xLIST_ITEM* %20, %struct.xLIST_ITEM** %25, align 4, !dbg !6618, !tbaa !6572
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %21, align 4, !dbg !6619, !tbaa !5245
  %26 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 4, !dbg !6620
  %27 = bitcast i8** %26 to %struct.xLIST**, !dbg !6621
  store %struct.xLIST* %0, %struct.xLIST** %27, align 4, !dbg !6621, !tbaa !6558
  %28 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !6622
  %29 = load volatile i32, i32* %28, align 4, !dbg !6623, !tbaa !4956
  %30 = add i32 %29, 1, !dbg !6623
  store volatile i32 %30, i32* %28, align 4, !dbg !6623, !tbaa !4956
  ret void, !dbg !6624
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @uxListRemove(%struct.xLIST_ITEM* noundef %0) local_unnamed_addr #14 !dbg !6625 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !6629, metadata !DIExpression()), !dbg !6631
  %2 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 4, !dbg !6632
  %3 = bitcast i8** %2 to %struct.xLIST**, !dbg !6632
  %4 = load %struct.xLIST*, %struct.xLIST** %3, align 4, !dbg !6632, !tbaa !6558
  call void @llvm.dbg.value(metadata %struct.xLIST* %4, metadata !6630, metadata !DIExpression()), !dbg !6631
  %5 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 2, !dbg !6633
  %6 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %5, align 4, !dbg !6633, !tbaa !6572
  %7 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 1, !dbg !6634
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !6634, !tbaa !5245
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 2, !dbg !6635
  store %struct.xLIST_ITEM* %6, %struct.xLIST_ITEM** %9, align 4, !dbg !6636, !tbaa !6572
  %10 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %5, align 4, !dbg !6637, !tbaa !6572
  %11 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %10, i32 0, i32 1, !dbg !6638
  store %struct.xLIST_ITEM* %8, %struct.xLIST_ITEM** %11, align 4, !dbg !6639, !tbaa !5245
  %12 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %4, i32 0, i32 1, !dbg !6640
  %13 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %12, align 4, !dbg !6640, !tbaa !5244
  %14 = icmp eq %struct.xLIST_ITEM* %13, %0, !dbg !6642
  br i1 %14, label %15, label %16, !dbg !6643

15:                                               ; preds = %1
  store %struct.xLIST_ITEM* %10, %struct.xLIST_ITEM** %12, align 4, !dbg !6644, !tbaa !5244
  br label %16, !dbg !6646

16:                                               ; preds = %1, %15
  store i8* null, i8** %2, align 4, !dbg !6647, !tbaa !6558
  %17 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %4, i32 0, i32 0, !dbg !6648
  %18 = load volatile i32, i32* %17, align 4, !dbg !6649, !tbaa !4956
  %19 = add i32 %18, -1, !dbg !6649
  store volatile i32 %19, i32* %17, align 4, !dbg !6649, !tbaa !4956
  %20 = load volatile i32, i32* %17, align 4, !dbg !6650, !tbaa !4956
  ret i32 %20, !dbg !6651
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceD2Ev(%"class.Cicada::IPCommDevice"* noundef nonnull returned align 8 dereferenceable(140) %0) unnamed_addr #9 comdat align 2 !dbg !6652 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !6654, metadata !DIExpression()), !dbg !6656
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 3, !dbg !6657
  %3 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %2) #34, !dbg !6657
  %4 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 2, !dbg !6657
  %5 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %4) #34, !dbg !6657
  %6 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 1, !dbg !6657
  %7 = call noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskD2Ev(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %6) #34, !dbg !6657
  %8 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6657
  %9 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %8) #34, !dbg !6657
  ret %"class.Cicada::IPCommDevice"* %0, !dbg !6659
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada12IPCommDeviceD0Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %0) unnamed_addr #9 comdat align 2 !dbg !6660 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !6662, metadata !DIExpression()), !dbg !6663
  call void @llvm.trap() #36, !dbg !6664
  unreachable, !dbg !6664
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZNK6Cicada12IPCommDevice14bytesAvailableEv(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %0) unnamed_addr #2 align 2 !dbg !6665 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !6667, metadata !DIExpression()), !dbg !6669
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 2, !dbg !6670
  %3 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %2), !dbg !6671
  ret i64 %3, !dbg !6672
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZNK6Cicada12IPCommDevice14spaceAvailableEv(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %0) unnamed_addr #2 align 2 !dbg !6673 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !6675, metadata !DIExpression()), !dbg !6676
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 8, !dbg !6677
  %3 = load i32, i32* %2, align 4, !dbg !6677, !tbaa !6679
  %4 = icmp eq i32 %3, 2, !dbg !6685
  br i1 %4, label %5, label %8, !dbg !6686

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 3, !dbg !6687
  %7 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %6), !dbg !6688
  br label %8, !dbg !6689

8:                                                ; preds = %1, %5
  %9 = phi i64 [ %7, %5 ], [ 0, %1 ], !dbg !6676
  ret i64 %9, !dbg !6690
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZNK6Cicada12IPCommDevice20writeBufferProcessedEv(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %0) unnamed_addr #2 align 2 !dbg !6691 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !6693, metadata !DIExpression()), !dbg !6694
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 3, !dbg !6695
  %3 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %2), !dbg !6696
  %4 = icmp eq i64 %3, 0, !dbg !6697
  %5 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 8, !dbg !6698
  %6 = load i32, i32* %5, align 4, !dbg !6698
  %7 = icmp ne i32 %6, 3, !dbg !6698
  %8 = select i1 %4, i1 %7, i1 false, !dbg !6698
  ret i1 %8, !dbg !6699
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada12IPCommDevice4readEPhy(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #2 align 2 !dbg !6700 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !6702, metadata !DIExpression()), !dbg !6705
  call void @llvm.dbg.value(metadata i8* %1, metadata !6703, metadata !DIExpression()), !dbg !6705
  call void @llvm.dbg.value(metadata i64 %2, metadata !6704, metadata !DIExpression()), !dbg !6705
  %4 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 2, !dbg !6706
  %5 = call noundef i64 @_ZN6Cicada14CircularBufferIhE4pullEPhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %4, i8* noundef %1, i64 noundef %2), !dbg !6707
  ret i64 %5, !dbg !6708
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada12IPCommDevice5writeEPKhy(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #2 align 2 !dbg !6709 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !6711, metadata !DIExpression()), !dbg !6714
  call void @llvm.dbg.value(metadata i8* %1, metadata !6712, metadata !DIExpression()), !dbg !6714
  call void @llvm.dbg.value(metadata i64 %2, metadata !6713, metadata !DIExpression()), !dbg !6714
  %4 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 8, !dbg !6715
  %5 = load i32, i32* %4, align 4, !dbg !6715, !tbaa !6679
  %6 = icmp eq i32 %5, 2, !dbg !6717
  br i1 %6, label %7, label %10, !dbg !6718

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 3, !dbg !6719
  %9 = call noundef i64 @_ZN6Cicada14CircularBufferIhE4pushEPKhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %8, i8* noundef %1, i64 noundef %2), !dbg !6720
  br label %10, !dbg !6721

10:                                               ; preds = %3, %7
  %11 = phi i64 [ %9, %7 ], [ 0, %3 ], !dbg !6714
  ret i64 %11, !dbg !6722
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada12IPCommDevice7connectEv(%"class.Cicada::IPCommDevice"* nocapture noundef nonnull align 8 dereferenceable(140) %0) unnamed_addr #23 align 2 !dbg !6723 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !6725, metadata !DIExpression()), !dbg !6726
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 5, !dbg !6727
  %3 = load i8*, i8** %2, align 4, !dbg !6727, !tbaa !6729
  %4 = icmp eq i8* %3, null, !dbg !6730
  %5 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 6
  %6 = load i16, i16* %5, align 8
  %7 = icmp eq i16 %6, 0
  %8 = select i1 %4, i1 true, i1 %7, !dbg !6731
  br i1 %8, label %13, label %9, !dbg !6731

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 7, !dbg !6732
  %11 = load i8, i8* %10, align 2, !dbg !6733, !tbaa !6734
  %12 = or i8 %11, 1, !dbg !6733
  store i8 %12, i8* %10, align 2, !dbg !6733, !tbaa !6734
  br label %13, !dbg !6735

13:                                               ; preds = %1, %9
  %14 = xor i1 %8, true, !dbg !6736
  ret i1 %14, !dbg !6736
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada12IPCommDevice10disconnectEv(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %0) unnamed_addr #2 align 2 !dbg !6737 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !6739, metadata !DIExpression()), !dbg !6740
  %2 = bitcast %"class.Cicada::IPCommDevice"* %0 to i1 (%"class.Cicada::IPCommDevice"*)***, !dbg !6741
  %3 = load i1 (%"class.Cicada::IPCommDevice"*)**, i1 (%"class.Cicada::IPCommDevice"*)*** %2, align 8, !dbg !6741, !tbaa !2121
  %4 = getelementptr inbounds i1 (%"class.Cicada::IPCommDevice"*)*, i1 (%"class.Cicada::IPCommDevice"*)** %3, i32 10, !dbg !6741
  %5 = load i1 (%"class.Cicada::IPCommDevice"*)*, i1 (%"class.Cicada::IPCommDevice"*)** %4, align 4, !dbg !6741
  %6 = call noundef zeroext i1 %5(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %0) #34, !dbg !6741
  br i1 %6, label %11, label %7, !dbg !6743

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 7, !dbg !6744
  %9 = load i8, i8* %8, align 2, !dbg !6745, !tbaa !6734
  %10 = or i8 %9, 8, !dbg !6745
  store i8 %10, i8* %8, align 2, !dbg !6745, !tbaa !6734
  br label %11, !dbg !6746

11:                                               ; preds = %1, %7
  ret void, !dbg !6746
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada12IPCommDevice11isConnectedEv(%"class.Cicada::IPCommDevice"* nocapture noundef nonnull readonly align 8 dereferenceable(140) %0) unnamed_addr #16 align 2 !dbg !6747 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !6749, metadata !DIExpression()), !dbg !6750
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 8, !dbg !6751
  %3 = load i32, i32* %2, align 4, !dbg !6751, !tbaa !6679
  %4 = add i32 %3, -2, !dbg !6752
  %5 = icmp ult i32 %4, 3, !dbg !6752
  ret i1 %5, !dbg !6753
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada12IPCommDevice6isIdleEv(%"class.Cicada::IPCommDevice"* nocapture noundef nonnull readonly align 8 dereferenceable(140) %0) unnamed_addr #16 align 2 !dbg !6754 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !6756, metadata !DIExpression()), !dbg !6757
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 8, !dbg !6758
  %3 = load i32, i32* %2, align 4, !dbg !6758, !tbaa !6679
  %4 = icmp eq i32 %3, 0, !dbg !6759
  ret i1 %4, !dbg !6760
}

declare dso_local void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local void @_ZN6Cicada12IPCommDevice11setHostPortEPKctNS_13IIPCommDevice14ConnectionTypeE(%"class.Cicada::IPCommDevice"* nocapture noundef nonnull writeonly align 8 dereferenceable(140) %0, i8* noundef %1, i16 noundef zeroext %2, i32 noundef %3) unnamed_addr #7 align 2 !dbg !6761 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !6763, metadata !DIExpression()), !dbg !6767
  call void @llvm.dbg.value(metadata i8* %1, metadata !6764, metadata !DIExpression()), !dbg !6767
  call void @llvm.dbg.value(metadata i16 %2, metadata !6765, metadata !DIExpression()), !dbg !6767
  call void @llvm.dbg.value(metadata i32 %3, metadata !6766, metadata !DIExpression()), !dbg !6767
  %5 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 5, !dbg !6768
  store i8* %1, i8** %5, align 4, !dbg !6769, !tbaa !6729
  %6 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 6, !dbg !6770
  store i16 %2, i16* %6, align 8, !dbg !6771, !tbaa !6772
  %7 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 4, !dbg !6773
  store i32 %3, i32* %7, align 8, !dbg !6774, !tbaa !6775
  ret void, !dbg !6776
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IPCommDevice"* @_ZThn4_N6Cicada12IPCommDeviceD1Ev(%"class.Cicada::IPCommDevice"* noundef %0) unnamed_addr #9 comdat align 2 !dbg !6777 {
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 -1, i32 10, i32 0, !dbg !6779
  %3 = bitcast i8* %2 to %"class.Cicada::IPCommDevice"*, !dbg !6779
  %4 = tail call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceD2Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %3) #34, !dbg !6779
  ret %"class.Cicada::IPCommDevice"* undef, !dbg !6779
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada12IPCommDeviceD0Ev(%"class.Cicada::IPCommDevice"* noundef %0) unnamed_addr #9 comdat align 2 !dbg !6780 {
  %2 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 -1, i32 10, i32 0, !dbg !6781
  %3 = bitcast i8* %2 to %"class.Cicada::IPCommDevice"*, !dbg !6781
  tail call void @_ZN6Cicada12IPCommDeviceD0Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %3) #34, !dbg !6781
  ret void, !dbg !6781
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada14CircularBufferIhE4pushEPKhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #2 comdat align 2 !dbg !6782 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !6784, metadata !DIExpression()), !dbg !6789
  call void @llvm.dbg.value(metadata i8* %1, metadata !6786, metadata !DIExpression()), !dbg !6789
  call void @llvm.dbg.value(metadata i64 %2, metadata !6787, metadata !DIExpression()), !dbg !6789
  %4 = bitcast %"class.Cicada::CircularBuffer.0"* %0 to i64 (%"class.Cicada::CircularBuffer.0"*)***, !dbg !6790
  %5 = load i64 (%"class.Cicada::CircularBuffer.0"*)**, i64 (%"class.Cicada::CircularBuffer.0"*)*** %4, align 8, !dbg !6790, !tbaa !2121
  %6 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %5, i32 11, !dbg !6790
  %7 = load i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %6, align 4, !dbg !6790
  %8 = call noundef i64 %7(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #34, !dbg !6790
  %9 = icmp ult i64 %8, %2, !dbg !6792
  br i1 %9, label %10, label %15, !dbg !6793

10:                                               ; preds = %3
  %11 = load i64 (%"class.Cicada::CircularBuffer.0"*)**, i64 (%"class.Cicada::CircularBuffer.0"*)*** %4, align 8, !dbg !6794, !tbaa !2121
  %12 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %11, i32 11, !dbg !6794
  %13 = load i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %12, align 4, !dbg !6794
  %14 = call noundef i64 %13(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #34, !dbg !6794
  call void @llvm.dbg.value(metadata i64 %14, metadata !6787, metadata !DIExpression()), !dbg !6789
  br label %15, !dbg !6795

15:                                               ; preds = %10, %3
  %16 = phi i64 [ %14, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %16, metadata !6787, metadata !DIExpression()), !dbg !6789
  call void @llvm.dbg.value(metadata i64 0, metadata !6788, metadata !DIExpression()), !dbg !6789
  %17 = icmp eq i64 %16, 0, !dbg !6796
  br i1 %17, label %32, label %18, !dbg !6797

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6
  %20 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 2
  br label %21, !dbg !6797

21:                                               ; preds = %18, %21
  %22 = phi i64 [ 0, %18 ], [ %23, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !6788, metadata !DIExpression()), !dbg !6789
  %23 = add nuw i64 %22, 1, !dbg !6798
  call void @llvm.dbg.value(metadata i64 %23, metadata !6788, metadata !DIExpression()), !dbg !6789
  %24 = trunc i64 %22 to i32, !dbg !6800
  %25 = getelementptr inbounds i8, i8* %1, i32 %24, !dbg !6800
  %26 = load i8, i8* %25, align 1, !dbg !6800, !tbaa !2257
  %27 = load i8*, i8** %19, align 8, !dbg !6801, !tbaa !6802
  %28 = load i64, i64* %20, align 8, !dbg !6803, !tbaa !6804
  %29 = trunc i64 %28 to i32, !dbg !6801
  %30 = getelementptr inbounds i8, i8* %27, i32 %29, !dbg !6801
  store i8 %26, i8* %30, align 1, !dbg !6805, !tbaa !2257
  call void @_ZN6Cicada14CircularBufferIhE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %20), !dbg !6806
  %31 = icmp ult i64 %23, %16, !dbg !6796
  br i1 %31, label %21, label %32, !dbg !6797, !llvm.loop !6807

32:                                               ; preds = %21, %15
  %33 = phi i64 [ 0, %15 ], [ %16, %21 ], !dbg !6789
  %34 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !6809
  %35 = load i64, i64* %34, align 8, !dbg !6810, !tbaa !6811
  %36 = add i64 %35, %33, !dbg !6810
  store i64 %36, i64* %34, align 8, !dbg !6810, !tbaa !6811
  ret i64 %33, !dbg !6812
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIhE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #2 comdat align 2 !dbg !6813 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !6815, metadata !DIExpression()), !dbg !6817
  call void @llvm.dbg.value(metadata i64* %1, metadata !6816, metadata !DIExpression()), !dbg !6817
  %3 = load i64, i64* %1, align 8, !dbg !6818, !tbaa !6819
  %4 = add i64 %3, 1, !dbg !6818
  store i64 %4, i64* %1, align 8, !dbg !6818, !tbaa !6819
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !6820
  %6 = load i64, i64* %5, align 8, !dbg !6820, !tbaa !6822
  %7 = icmp ult i64 %4, %6, !dbg !6823
  %8 = select i1 %7, i64 %4, i64 0, !dbg !6824
  store i64 %8, i64* %1, align 8, !dbg !6817
  ret void, !dbg !6825
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada14CircularBufferIhE4pullEPhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #2 comdat align 2 !dbg !6826 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !6828, metadata !DIExpression()), !dbg !6832
  call void @llvm.dbg.value(metadata i8* %1, metadata !6829, metadata !DIExpression()), !dbg !6832
  call void @llvm.dbg.value(metadata i64 %2, metadata !6830, metadata !DIExpression()), !dbg !6832
  %4 = bitcast %"class.Cicada::CircularBuffer.0"* %0 to i64 (%"class.Cicada::CircularBuffer.0"*)***, !dbg !6833
  %5 = load i64 (%"class.Cicada::CircularBuffer.0"*)**, i64 (%"class.Cicada::CircularBuffer.0"*)*** %4, align 8, !dbg !6833, !tbaa !2121
  %6 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %5, i32 10, !dbg !6833
  %7 = load i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %6, align 4, !dbg !6833
  %8 = call noundef i64 %7(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #34, !dbg !6833
  %9 = icmp ult i64 %8, %2, !dbg !6835
  br i1 %9, label %10, label %15, !dbg !6836

10:                                               ; preds = %3
  %11 = load i64 (%"class.Cicada::CircularBuffer.0"*)**, i64 (%"class.Cicada::CircularBuffer.0"*)*** %4, align 8, !dbg !6837, !tbaa !2121
  %12 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %11, i32 10, !dbg !6837
  %13 = load i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %12, align 4, !dbg !6837
  %14 = call noundef i64 %13(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #34, !dbg !6837
  call void @llvm.dbg.value(metadata i64 %14, metadata !6830, metadata !DIExpression()), !dbg !6832
  br label %15, !dbg !6838

15:                                               ; preds = %10, %3
  %16 = phi i64 [ %14, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %16, metadata !6830, metadata !DIExpression()), !dbg !6832
  call void @llvm.dbg.value(metadata i64 0, metadata !6831, metadata !DIExpression()), !dbg !6832
  %17 = icmp eq i64 %16, 0, !dbg !6839
  br i1 %17, label %32, label %18, !dbg !6840

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6
  %20 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 3
  br label %21, !dbg !6840

21:                                               ; preds = %18, %21
  %22 = phi i64 [ 0, %18 ], [ %28, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !6831, metadata !DIExpression()), !dbg !6832
  %23 = load i8*, i8** %19, align 8, !dbg !6841, !tbaa !6802
  %24 = load i64, i64* %20, align 8, !dbg !6843, !tbaa !6844
  %25 = trunc i64 %24 to i32, !dbg !6841
  %26 = getelementptr inbounds i8, i8* %23, i32 %25, !dbg !6841
  %27 = load i8, i8* %26, align 1, !dbg !6841, !tbaa !2257
  %28 = add nuw i64 %22, 1, !dbg !6845
  call void @llvm.dbg.value(metadata i64 %28, metadata !6831, metadata !DIExpression()), !dbg !6832
  %29 = trunc i64 %22 to i32, !dbg !6846
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !6846
  store i8 %27, i8* %30, align 1, !dbg !6847, !tbaa !2257
  call void @_ZN6Cicada14CircularBufferIhE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %20), !dbg !6848
  %31 = icmp ult i64 %28, %16, !dbg !6839
  br i1 %31, label %21, label %32, !dbg !6840, !llvm.loop !6849

32:                                               ; preds = %21, %15
  %33 = phi i64 [ 0, %15 ], [ %16, %21 ], !dbg !6832
  %34 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !6851
  %35 = load i64, i64* %34, align 8, !dbg !6852, !tbaa !6811
  %36 = sub i64 %35, %33, !dbg !6852
  store i64 %36, i64* %34, align 8, !dbg !6852, !tbaa !6811
  ret i64 %33, !dbg !6853
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #2 comdat align 2 !dbg !6854 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !6856, metadata !DIExpression()), !dbg !6858
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !6859
  %3 = load i64, i64* %2, align 8, !dbg !6859, !tbaa !6811
  ret i64 %3, !dbg !6860
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #2 comdat align 2 !dbg !6861 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !6863, metadata !DIExpression()), !dbg !6864
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !6865
  %3 = load i64, i64* %2, align 8, !dbg !6865, !tbaa !6822
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !6866
  %5 = load i64, i64* %4, align 8, !dbg !6866, !tbaa !6811
  %6 = sub i64 %3, %5, !dbg !6867
  ret i64 %6, !dbg !6868
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #24

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull returned align 8 dereferenceable(44) %0) unnamed_addr #9 comdat align 2 !dbg !6869 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !6871, metadata !DIExpression()), !dbg !6872
  ret %"class.Cicada::CircularBuffer.0"* %0, !dbg !6873
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskD2Ev(%"class.Cicada::Task"* noundef nonnull returned align 4 dereferenceable(20) %0) unnamed_addr #9 comdat align 2 !dbg !6874 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !6876, metadata !DIExpression()), !dbg !6877
  ret %"class.Cicada::Task"* %0, !dbg !6878
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #9 comdat align 2 !dbg !6879 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !6881, metadata !DIExpression()), !dbg !6883
  ret %"class.Cicada::ICommDevice"* %0, !dbg !6884
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceC2EPhS1_y(%"class.Cicada::IPCommDevice"* noundef nonnull returned align 8 dereferenceable(140) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3) unnamed_addr #9 align 2 !dbg !6885 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !6887, metadata !DIExpression()), !dbg !6891
  call void @llvm.dbg.value(metadata i8* %1, metadata !6888, metadata !DIExpression()), !dbg !6891
  call void @llvm.dbg.value(metadata i8* %2, metadata !6889, metadata !DIExpression()), !dbg !6891
  call void @llvm.dbg.value(metadata i64 %3, metadata !6890, metadata !DIExpression()), !dbg !6891
  %5 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 0, !dbg !6892
  %6 = call noundef %"class.Cicada::IIPCommDevice"* @_ZN6Cicada13IIPCommDeviceC2Ev(%"class.Cicada::IIPCommDevice"* noundef nonnull align 4 dereferenceable(4) %5) #34, !dbg !6893
  %7 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 1, !dbg !6892
  %8 = call noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskC2Et(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %7, i16 noundef zeroext 0), !dbg !6893
  %9 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6892
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [5 x i8*] }, { [15 x i8*], [5 x i8*] }* @_ZTVN6Cicada12IPCommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8, !dbg !6892, !tbaa !2121
  %10 = getelementptr %"class.Cicada::Task", %"class.Cicada::Task"* %7, i32 0, i32 0, !dbg !6892
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [5 x i8*] }, { [15 x i8*], [5 x i8*] }* @_ZTVN6Cicada12IPCommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %10, align 4, !dbg !6892, !tbaa !2121
  %11 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 2, !dbg !6894
  %12 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhEC2EPhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %11, i8* noundef %1, i64 noundef %3), !dbg !6894
  %13 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 3, !dbg !6895
  %14 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhEC2EPhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %13, i8* noundef %2, i64 noundef %3), !dbg !6895
  %15 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 5, !dbg !6896
  store i8* null, i8** %15, align 4, !dbg !6896, !tbaa !6729
  %16 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 6, !dbg !6897
  store i16 0, i16* %16, align 8, !dbg !6897, !tbaa !6772
  %17 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 7, !dbg !6898
  store i8 32, i8* %17, align 2, !dbg !6898, !tbaa !6734
  %18 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 8, !dbg !6899
  store i32 0, i32* %18, align 4, !dbg !6899, !tbaa !6679
  %19 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 9, !dbg !6900
  store i8* null, i8** %19, align 8, !dbg !6900, !tbaa !6901
  ret %"class.Cicada::IPCommDevice"* %0, !dbg !6902
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IIPCommDevice"* @_ZN6Cicada13IIPCommDeviceC2Ev(%"class.Cicada::IIPCommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #9 comdat align 2 !dbg !6903 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IIPCommDevice"* %0, metadata !6906, metadata !DIExpression()), !dbg !6908
  %2 = getelementptr inbounds %"class.Cicada::IIPCommDevice", %"class.Cicada::IIPCommDevice"* %0, i32 0, i32 0, !dbg !6909
  %3 = call noundef %"class.Cicada::IStatefulDevice"* @_ZN6Cicada15IStatefulDeviceC2Ev(%"class.Cicada::IStatefulDevice"* noundef nonnull align 4 dereferenceable(4) %2) #34, !dbg !6909
  %4 = getelementptr inbounds %"class.Cicada::IIPCommDevice", %"class.Cicada::IIPCommDevice"* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6909
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6Cicada13IIPCommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 4, !dbg !6909, !tbaa !2121
  ret %"class.Cicada::IIPCommDevice"* %0, !dbg !6909
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskC2Et(%"class.Cicada::Task"* noundef nonnull returned align 4 dereferenceable(20) %0, i16 noundef zeroext %1) unnamed_addr #9 comdat align 2 !dbg !6910 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !6912, metadata !DIExpression()), !dbg !6914
  call void @llvm.dbg.value(metadata i16 %1, metadata !6913, metadata !DIExpression()), !dbg !6914
  %3 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 0, !dbg !6915
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6Cicada4TaskE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %3, align 4, !dbg !6915, !tbaa !2121
  %4 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 1, !dbg !6916
  store i16 %1, i16* %4, align 4, !dbg !6916, !tbaa !2137
  %5 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 3, !dbg !6917
  store i8 0, i8* %5, align 4, !dbg !6917, !tbaa !6918
  %6 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 4, !dbg !6919
  store i32 0, i32* %6, align 4, !dbg !6919, !tbaa !6920
  ret %"class.Cicada::Task"* %0, !dbg !6921
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhEC2EPhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull returned align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #9 comdat align 2 !dbg !6922 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !6924, metadata !DIExpression()), !dbg !6927
  call void @llvm.dbg.value(metadata i8* %1, metadata !6925, metadata !DIExpression()), !dbg !6927
  call void @llvm.dbg.value(metadata i64 %2, metadata !6926, metadata !DIExpression()), !dbg !6927
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 0, !dbg !6928
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6Cicada14CircularBufferIhEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8, !dbg !6928, !tbaa !2121
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 2, !dbg !6929
  %6 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !6930
  %7 = bitcast i64* %5 to i8*, !dbg !6930
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false), !dbg !6931
  store i64 %2, i64* %6, align 8, !dbg !6930, !tbaa !6822
  %8 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6, !dbg !6932
  store i8* %1, i8** %8, align 8, !dbg !6932, !tbaa !6802
  ret %"class.Cicada::CircularBuffer.0"* %0, !dbg !6933
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIhED0Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #9 comdat align 2 !dbg !6934 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !6936, metadata !DIExpression()), !dbg !6937
  %2 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #34, !dbg !6938
  %3 = bitcast %"class.Cicada::CircularBuffer.0"* %0 to i8*, !dbg !6938
  call void @_ZdlPv(i8* noundef %3) #37, !dbg !6938
  ret void, !dbg !6939
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIhE4pushEh(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i8 noundef zeroext %1) unnamed_addr #2 comdat align 2 !dbg !6940 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !6942, metadata !DIExpression()), !dbg !6944
  call void @llvm.dbg.value(metadata i8 %1, metadata !6943, metadata !DIExpression()), !dbg !6944
  %3 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6, !dbg !6945
  %4 = load i8*, i8** %3, align 8, !dbg !6945, !tbaa !6802
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 2, !dbg !6946
  %6 = load i64, i64* %5, align 8, !dbg !6946, !tbaa !6804
  %7 = trunc i64 %6 to i32, !dbg !6945
  %8 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !6945
  store i8 %1, i8* %8, align 1, !dbg !6947, !tbaa !2257
  call void @_ZN6Cicada14CircularBufferIhE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %5), !dbg !6948
  %9 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !6949
  %10 = load i64, i64* %9, align 8, !dbg !6949, !tbaa !6811
  %11 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !6951
  %12 = load i64, i64* %11, align 8, !dbg !6951, !tbaa !6822
  %13 = icmp ult i64 %10, %12, !dbg !6952
  br i1 %13, label %14, label %16, !dbg !6953

14:                                               ; preds = %2
  %15 = add i64 %10, 1, !dbg !6954
  store i64 %15, i64* %9, align 8, !dbg !6954, !tbaa !6811
  br label %16, !dbg !6955

16:                                               ; preds = %14, %2
  ret void, !dbg !6956
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i8 @_ZN6Cicada14CircularBufferIhE4pullEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #2 comdat align 2 !dbg !6957 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !6959, metadata !DIExpression()), !dbg !6961
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6, !dbg !6962
  %3 = load i8*, i8** %2, align 8, !dbg !6962, !tbaa !6802
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 3, !dbg !6963
  %5 = load i64, i64* %4, align 8, !dbg !6963, !tbaa !6844
  %6 = trunc i64 %5 to i32, !dbg !6962
  %7 = getelementptr inbounds i8, i8* %3, i32 %6, !dbg !6962
  %8 = load i8, i8* %7, align 1, !dbg !6962, !tbaa !2257
  call void @llvm.dbg.value(metadata i8 %8, metadata !6960, metadata !DIExpression()), !dbg !6961
  call void @_ZN6Cicada14CircularBufferIhE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %4), !dbg !6964
  %9 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !6965
  %10 = load i64, i64* %9, align 8, !dbg !6965, !tbaa !6811
  %11 = icmp eq i64 %10, 0, !dbg !6967
  br i1 %11, label %14, label %12, !dbg !6968

12:                                               ; preds = %1
  %13 = add i64 %10, -1, !dbg !6969
  store i64 %13, i64* %9, align 8, !dbg !6969, !tbaa !6811
  br label %14, !dbg !6970

14:                                               ; preds = %12, %1
  ret i8 %8, !dbg !6971
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i8 @_ZN6Cicada14CircularBufferIhE4readEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #2 comdat align 2 !dbg !6972 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !6974, metadata !DIExpression()), !dbg !6975
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6, !dbg !6976
  %3 = load i8*, i8** %2, align 8, !dbg !6976, !tbaa !6802
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 3, !dbg !6977
  %5 = load i64, i64* %4, align 8, !dbg !6977, !tbaa !6844
  %6 = trunc i64 %5 to i32, !dbg !6976
  %7 = getelementptr inbounds i8, i8* %3, i32 %6, !dbg !6976
  %8 = load i8, i8* %7, align 1, !dbg !6976, !tbaa !2257
  ret i8 %8, !dbg !6978
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIhE5flushEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #2 comdat align 2 !dbg !6979 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !6981, metadata !DIExpression()), !dbg !6982
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 2, !dbg !6983
  %3 = bitcast i64* %2 to i8*, !dbg !6984
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %3, i8 0, i64 24, i1 false), !dbg !6985
  ret void, !dbg !6984
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i1 @_ZNK6Cicada14CircularBufferIhE7isEmptyEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #2 comdat align 2 !dbg !6986 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !6988, metadata !DIExpression()), !dbg !6989
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !6990
  %3 = load i64, i64* %2, align 8, !dbg !6990, !tbaa !6811
  %4 = icmp eq i64 %3, 0, !dbg !6991
  ret i1 %4, !dbg !6992
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i1 @_ZNK6Cicada14CircularBufferIhE6isFullEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #2 comdat align 2 !dbg !6993 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !6995, metadata !DIExpression()), !dbg !6996
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !6997
  %3 = load i64, i64* %2, align 8, !dbg !6997, !tbaa !6811
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !6998
  %5 = load i64, i64* %4, align 8, !dbg !6998, !tbaa !6822
  %6 = icmp eq i64 %3, %5, !dbg !6999
  ret i1 %6, !dbg !7000
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIhE4sizeEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #2 comdat align 2 !dbg !7001 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !7003, metadata !DIExpression()), !dbg !7004
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !7005
  %3 = load i64, i64* %2, align 8, !dbg !7005, !tbaa !6822
  ret i64 %3, !dbg !7006
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8* noundef) local_unnamed_addr #25

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada4TaskD0Ev(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %0) unnamed_addr #9 comdat align 2 !dbg !7007 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !7009, metadata !DIExpression()), !dbg !7010
  call void @llvm.trap() #36, !dbg !7011
  unreachable, !dbg !7011
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IStatefulDevice"* @_ZN6Cicada15IStatefulDeviceC2Ev(%"class.Cicada::IStatefulDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #9 comdat align 2 !dbg !7012 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IStatefulDevice"* %0, metadata !7015, metadata !DIExpression()), !dbg !7017
  %2 = getelementptr inbounds %"class.Cicada::IStatefulDevice", %"class.Cicada::IStatefulDevice"* %0, i32 0, i32 0, !dbg !7018
  %3 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %2) #34, !dbg !7018
  %4 = getelementptr inbounds %"class.Cicada::IStatefulDevice", %"class.Cicada::IStatefulDevice"* %0, i32 0, i32 0, i32 0, !dbg !7018
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN6Cicada15IStatefulDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 4, !dbg !7018, !tbaa !2121
  ret %"class.Cicada::IStatefulDevice"* %0, !dbg !7018
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada13IIPCommDeviceD0Ev(%"class.Cicada::IIPCommDevice"* noundef nonnull align 4 dereferenceable(4) %0) unnamed_addr #9 comdat align 2 !dbg !7019 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IIPCommDevice"* %0, metadata !7021, metadata !DIExpression()), !dbg !7022
  call void @llvm.trap() #36, !dbg !7023
  unreachable, !dbg !7023
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #9 comdat align 2 !dbg !7024 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !7027, metadata !DIExpression()), !dbg !7028
  %2 = getelementptr inbounds %"class.Cicada::ICommDevice", %"class.Cicada::ICommDevice"* %0, i32 0, i32 0, !dbg !7029
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6Cicada11ICommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %2, align 4, !dbg !7029, !tbaa !2121
  ret %"class.Cicada::ICommDevice"* %0, !dbg !7029
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada15IStatefulDeviceD0Ev(%"class.Cicada::IStatefulDevice"* noundef nonnull align 4 dereferenceable(4) %0) unnamed_addr #9 comdat align 2 !dbg !7030 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IStatefulDevice"* %0, metadata !7032, metadata !DIExpression()), !dbg !7033
  call void @llvm.trap() #36, !dbg !7034
  unreachable, !dbg !7034
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada11ICommDeviceD0Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %0) unnamed_addr #9 comdat align 2 !dbg !7035 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !7037, metadata !DIExpression()), !dbg !7038
  call void @llvm.trap() #36, !dbg !7039
  unreachable, !dbg !7039
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceC2EPhS1_yy(%"class.Cicada::IPCommDevice"* noundef nonnull returned align 8 dereferenceable(140) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4) unnamed_addr #9 align 2 !dbg !7040 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IPCommDevice"* %0, metadata !7042, metadata !DIExpression()), !dbg !7047
  call void @llvm.dbg.value(metadata i8* %1, metadata !7043, metadata !DIExpression()), !dbg !7047
  call void @llvm.dbg.value(metadata i8* %2, metadata !7044, metadata !DIExpression()), !dbg !7047
  call void @llvm.dbg.value(metadata i64 %3, metadata !7045, metadata !DIExpression()), !dbg !7047
  call void @llvm.dbg.value(metadata i64 %4, metadata !7046, metadata !DIExpression()), !dbg !7047
  %6 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 0, !dbg !7048
  %7 = call noundef %"class.Cicada::IIPCommDevice"* @_ZN6Cicada13IIPCommDeviceC2Ev(%"class.Cicada::IIPCommDevice"* noundef nonnull align 4 dereferenceable(4) %6) #34, !dbg !7049
  %8 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 1, !dbg !7048
  %9 = call noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskC2Et(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %8, i16 noundef zeroext 0), !dbg !7049
  %10 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7048
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [5 x i8*] }, { [15 x i8*], [5 x i8*] }* @_ZTVN6Cicada12IPCommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %10, align 8, !dbg !7048, !tbaa !2121
  %11 = getelementptr %"class.Cicada::Task", %"class.Cicada::Task"* %8, i32 0, i32 0, !dbg !7048
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [5 x i8*] }, { [15 x i8*], [5 x i8*] }* @_ZTVN6Cicada12IPCommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %11, align 4, !dbg !7048, !tbaa !2121
  %12 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 2, !dbg !7050
  %13 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhEC2EPhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %12, i8* noundef %1, i64 noundef %3), !dbg !7050
  %14 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 3, !dbg !7051
  %15 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIhEC2EPhy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %14, i8* noundef %2, i64 noundef %4), !dbg !7051
  %16 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 5, !dbg !7052
  store i8* null, i8** %16, align 4, !dbg !7052, !tbaa !6729
  %17 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 6, !dbg !7053
  store i16 0, i16* %17, align 8, !dbg !7053, !tbaa !6772
  %18 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 7, !dbg !7054
  store i8 32, i8* %18, align 2, !dbg !7054, !tbaa !6734
  %19 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 8, !dbg !7055
  store i32 0, i32* %19, align 4, !dbg !7055, !tbaa !6679
  %20 = getelementptr inbounds %"class.Cicada::IPCommDevice", %"class.Cicada::IPCommDevice"* %0, i32 0, i32 9, !dbg !7056
  store i8* null, i8** %20, align 8, !dbg !7056, !tbaa !6901
  ret %"class.Cicada::IPCommDevice"* %0, !dbg !7057
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada13SimCommDeviceD0Ev(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %0) unnamed_addr #9 comdat align 2 !dbg !7058 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !7060, metadata !DIExpression()), !dbg !7062
  call void @llvm.trap() #36, !dbg !7063
  unreachable, !dbg !7063
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice7connectEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %0) unnamed_addr #2 align 2 !dbg !7064 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !7066, metadata !DIExpression()), !dbg !7067
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 1, !dbg !7068
  %3 = load i8*, i8** %2, align 8, !dbg !7068, !tbaa !7070
  %4 = icmp eq i8* %3, null, !dbg !7072
  br i1 %4, label %8, label %5, !dbg !7073

5:                                                ; preds = %1
  %6 = bitcast %"class.Cicada::SimCommDevice"* %0 to %"class.Cicada::IPCommDevice"*, !dbg !7074
  %7 = call noundef zeroext i1 @_ZN6Cicada12IPCommDevice7connectEv(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %6) #34, !dbg !7074
  br label %8, !dbg !7075

8:                                                ; preds = %1, %5
  %9 = phi i1 [ %7, %5 ], [ false, %1 ], !dbg !7067
  ret i1 %9, !dbg !7076
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada13SimCommDevice11resetStatesEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %0) unnamed_addr #2 align 2 !dbg !7077 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !7079, metadata !DIExpression()), !dbg !7080
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 1, !dbg !7081
  %3 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %2, align 4, !dbg !7081, !tbaa !7082
  %4 = bitcast %"class.Cicada::IBufferedSerial"* %3 to void (%"class.Cicada::IBufferedSerial"*)***, !dbg !7084
  %5 = load void (%"class.Cicada::IBufferedSerial"*)**, void (%"class.Cicada::IBufferedSerial"*)*** %4, align 4, !dbg !7084, !tbaa !2121
  %6 = getelementptr inbounds void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %5, i32 12, !dbg !7084
  %7 = load void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %6, align 4, !dbg !7084
  call void %7(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %3) #34, !dbg !7084
  %8 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 2, !dbg !7085
  call void @_ZN6Cicada14CircularBufferIhE5flushEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %8), !dbg !7086
  %9 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 3, !dbg !7087
  call void @_ZN6Cicada14CircularBufferIhE5flushEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %9), !dbg !7088
  %10 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 3, !dbg !7089
  %11 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 8, !dbg !7090
  store i32 0, i32* %11, align 4, !dbg !7091, !tbaa !6679
  %12 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 9, !dbg !7092
  store i8* null, i8** %12, align 8, !dbg !7093, !tbaa !6901
  %13 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !7094
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(27) %10, i8 0, i64 27, i1 false), !dbg !7095
  store i8 32, i8* %13, align 2, !dbg !7096, !tbaa !6734
  %14 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 4, !dbg !7097
  store i8 99, i8* %14, align 4, !dbg !7098, !tbaa !7099
  %15 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 0, !dbg !7100
  store i8 0, i8* %15, align 4, !dbg !7101, !tbaa !2257
  %16 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 1, !dbg !7102
  store i8 0, i8* %16, align 1, !dbg !7103, !tbaa !2257
  ret void, !dbg !7104
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local void @_ZN6Cicada13SimCommDevice6setApnEPKc(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull writeonly align 8 dereferenceable(280) %0, i8* noundef %1) unnamed_addr #7 align 2 !dbg !7105 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !7107, metadata !DIExpression()), !dbg !7109
  call void @llvm.dbg.value(metadata i8* %1, metadata !7108, metadata !DIExpression()), !dbg !7109
  %3 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 1, !dbg !7110
  store i8* %1, i8** %3, align 8, !dbg !7111, !tbaa !7070
  ret void, !dbg !7112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice10serialLockEv(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0) unnamed_addr #23 align 2 !dbg !7113 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !7115, metadata !DIExpression()), !dbg !7116
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 9, !dbg !7117
  %3 = load i8*, i8** %2, align 8, !dbg !7117, !tbaa !6901
  %4 = icmp eq i8* %3, null, !dbg !7117
  %5 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 5
  %6 = load i8, i8* %5, align 1
  %7 = icmp eq i8 %6, 0
  %8 = select i1 %4, i1 %7, i1 false, !dbg !7119
  br i1 %8, label %9, label %13, !dbg !7119

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !7120
  %11 = load i8, i8* %10, align 2, !dbg !7121, !tbaa !6734
  %12 = or i8 %11, 64, !dbg !7121
  store i8 %12, i8* %10, align 2, !dbg !7121, !tbaa !6734
  br label %13, !dbg !7122

13:                                               ; preds = %1, %9
  ret i1 %8, !dbg !7123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn
define dso_local void @_ZN6Cicada13SimCommDevice12serialUnlockEv(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0) unnamed_addr #23 align 2 !dbg !7124 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !7126, metadata !DIExpression()), !dbg !7127
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !7128
  %3 = load i8, i8* %2, align 2, !dbg !7129, !tbaa !6734
  %4 = and i8 %3, -65, !dbg !7129
  store i8 %4, i8* %2, align 2, !dbg !7129, !tbaa !6734
  ret void, !dbg !7130
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::SimCommDevice"* @_ZThn4_N6Cicada13SimCommDeviceD1Ev(%"class.Cicada::SimCommDevice"* noundef %0) unnamed_addr #9 comdat align 2 !dbg !7131 {
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 -1, i32 4, !dbg !7132
  %3 = bitcast i8* %2 to %"class.Cicada::IPCommDevice"*, !dbg !7132
  %4 = tail call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceD2Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(280) %3) #34, !dbg !7132
  ret %"class.Cicada::SimCommDevice"* undef, !dbg !7132
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada13SimCommDeviceD0Ev(%"class.Cicada::SimCommDevice"* noundef %0) unnamed_addr #9 comdat align 2 !dbg !7133 {
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 -1, i32 4, !dbg !7134
  %3 = bitcast i8* %2 to %"class.Cicada::SimCommDevice"*, !dbg !7134
  tail call void @_ZN6Cicada13SimCommDeviceD0Ev(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %3) #34, !dbg !7134
  ret void, !dbg !7134
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::SimCommDevice"* @_ZN6Cicada13SimCommDeviceC2ERNS_15IBufferedSerialEPhS3_y(%"class.Cicada::SimCommDevice"* noundef nonnull returned align 8 dereferenceable(280) %0, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4) unnamed_addr #9 align 2 !dbg !7135 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !7137, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %1, metadata !7138, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.value(metadata i8* %2, metadata !7139, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.value(metadata i8* %3, metadata !7140, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.value(metadata i64 %4, metadata !7141, metadata !DIExpression()), !dbg !7142
  %6 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, !dbg !7143
  %7 = call noundef %"class.Cicada::ATCommDevice"* @_ZN6Cicada12ATCommDeviceC2ERNS_15IBufferedSerialEPhS3_y(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4) #34, !dbg !7144
  %8 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7143
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [5 x i8*] }, { [20 x i8*], [5 x i8*] }* @_ZTVN6Cicada13SimCommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %8, align 8, !dbg !7143, !tbaa !2121
  %9 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !7143
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [5 x i8*] }, { [20 x i8*], [5 x i8*] }* @_ZTVN6Cicada13SimCommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %9, align 4, !dbg !7143, !tbaa !2121
  %10 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 1, !dbg !7145
  store i8* null, i8** %10, align 8, !dbg !7145, !tbaa !7070
  call void @_ZN6Cicada13SimCommDevice11resetStatesEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %0), !dbg !7146
  ret %"class.Cicada::SimCommDevice"* %0, !dbg !7148
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::SimCommDevice"* @_ZN6Cicada13SimCommDeviceC2ERNS_15IBufferedSerialEPhS3_yy(%"class.Cicada::SimCommDevice"* noundef nonnull returned align 8 dereferenceable(280) %0, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4, i64 noundef %5) unnamed_addr #9 align 2 !dbg !7149 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !7151, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %1, metadata !7152, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i8* %2, metadata !7153, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i8* %3, metadata !7154, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i64 %4, metadata !7155, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i64 %5, metadata !7156, metadata !DIExpression()), !dbg !7157
  %7 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, !dbg !7158
  %8 = call noundef %"class.Cicada::ATCommDevice"* @_ZN6Cicada12ATCommDeviceC2ERNS_15IBufferedSerialEPhS3_yy(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %7, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4, i64 noundef %5) #34, !dbg !7159
  %9 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7158
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [5 x i8*] }, { [20 x i8*], [5 x i8*] }* @_ZTVN6Cicada13SimCommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8, !dbg !7158, !tbaa !2121
  %10 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !7158
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [5 x i8*] }, { [20 x i8*], [5 x i8*] }* @_ZTVN6Cicada13SimCommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %10, align 4, !dbg !7158, !tbaa !2121
  %11 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 1, !dbg !7160
  store i8* null, i8** %11, align 8, !dbg !7160, !tbaa !7070
  call void @_ZN6Cicada13SimCommDevice11resetStatesEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %0), !dbg !7161
  ret %"class.Cicada::SimCommDevice"* %0, !dbg !7163
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice14fillLineBufferEv(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0) local_unnamed_addr #2 align 2 !dbg !7164 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !7166, metadata !DIExpression()), !dbg !7171
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !7172
  %3 = load i8, i8* %2, align 2, !dbg !7172, !tbaa !6734
  %4 = and i8 %3, 32, !dbg !7173
  %5 = icmp eq i8 %4, 0, !dbg !7172
  br i1 %5, label %36, label %6, !dbg !7174

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.Cicada::IBufferedSerial"** %7 to %"class.Cicada::ICommDevice"**
  %9 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 3
  br label %10, !dbg !7175

10:                                               ; preds = %6, %29
  %11 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %8, align 4, !dbg !7176, !tbaa !7082
  %12 = bitcast %"class.Cicada::ICommDevice"* %11 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !7177
  %13 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %12, align 4, !dbg !7177, !tbaa !2121
  %14 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %13, i32 2, !dbg !7177
  %15 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %14, align 4, !dbg !7177
  %16 = call noundef i64 %15(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %11) #34, !dbg !7177
  %17 = icmp eq i64 %16, 0, !dbg !7176
  br i1 %17, label %36, label %18, !dbg !7175

18:                                               ; preds = %10
  %19 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7178, !tbaa !7082
  %20 = bitcast %"class.Cicada::IBufferedSerial"* %19 to i8 (%"class.Cicada::IBufferedSerial"*)***, !dbg !7179
  %21 = load i8 (%"class.Cicada::IBufferedSerial"*)**, i8 (%"class.Cicada::IBufferedSerial"*)*** %20, align 4, !dbg !7179, !tbaa !2121
  %22 = getelementptr inbounds i8 (%"class.Cicada::IBufferedSerial"*)*, i8 (%"class.Cicada::IBufferedSerial"*)** %21, i32 7, !dbg !7179
  %23 = load i8 (%"class.Cicada::IBufferedSerial"*)*, i8 (%"class.Cicada::IBufferedSerial"*)** %22, align 4, !dbg !7179
  %24 = call noundef zeroext i8 %23(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %19) #34, !dbg !7179
  call void @llvm.dbg.value(metadata i8 %24, metadata !7167, metadata !DIExpression()), !dbg !7180
  %25 = load i8, i8* %9, align 1, !dbg !7181, !tbaa !7182
  %26 = add i8 %25, 1, !dbg !7181
  store i8 %26, i8* %9, align 1, !dbg !7181, !tbaa !7182
  %27 = zext i8 %25 to i32, !dbg !7183
  %28 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 %27, !dbg !7183
  store i8 %24, i8* %28, align 1, !dbg !7184, !tbaa !2257
  switch i8 %24, label %29 [
    i8 62, label %32
    i8 10, label %32
  ], !dbg !7185

29:                                               ; preds = %18
  %30 = load i8, i8* %9, align 1, !dbg !7187, !tbaa !7182
  %31 = icmp eq i8 %30, 60, !dbg !7188
  br i1 %31, label %32, label %10, !dbg !7189

32:                                               ; preds = %18, %18, %29
  %33 = load i8, i8* %9, align 1, !dbg !7190, !tbaa !7182
  %34 = zext i8 %33 to i32, !dbg !7192
  %35 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 %34, !dbg !7192
  store i8 0, i8* %35, align 1, !dbg !7193, !tbaa !2257
  store i8 0, i8* %9, align 1, !dbg !7194, !tbaa !7182
  br label %36

36:                                               ; preds = %10, %32, %1
  %37 = phi i1 [ false, %1 ], [ true, %32 ], [ false, %10 ], !dbg !7171
  ret i1 %37, !dbg !7195
}

; Function Attrs: mustprogress nofree noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice13parseDnsReplyEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %0) local_unnamed_addr #26 align 2 !dbg !7196 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !7198, metadata !DIExpression()), !dbg !7204
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7205
  %3 = call i32 @memcmp(i8* noundef nonnull dereferenceable(11) %2, i8* noundef nonnull dereferenceable(11) getelementptr inbounds ([12 x i8], [12 x i8]* @.str.66, i32 0, i32 0), i32 11), !dbg !7206
  %4 = icmp eq i32 %3, 0, !dbg !7207
  br i1 %4, label %5, label %55, !dbg !7208

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8 0, metadata !7203, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.value(metadata i8 0, metadata !7202, metadata !DIExpression()), !dbg !7209
  %6 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7210
  %7 = load i8, i8* %6, align 8, !dbg !7210, !tbaa !2257
  %8 = icmp eq i8 %7, 0, !dbg !7210
  br i1 %8, label %24, label %9, !dbg !7211

9:                                                ; preds = %5, %9
  %10 = phi i8 [ %19, %9 ], [ %7, %5 ]
  %11 = phi i8 [ %16, %9 ], [ 0, %5 ]
  %12 = phi i8 [ %13, %9 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !7203, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.value(metadata i8 %12, metadata !7202, metadata !DIExpression()), !dbg !7209
  %13 = add i8 %12, 1, !dbg !7212
  call void @llvm.dbg.value(metadata i8 %13, metadata !7202, metadata !DIExpression()), !dbg !7209
  %14 = icmp eq i8 %10, 34, !dbg !7215
  %15 = zext i1 %14 to i8, !dbg !7216
  %16 = add i8 %11, %15, !dbg !7216
  call void @llvm.dbg.value(metadata i8 %16, metadata !7203, metadata !DIExpression()), !dbg !7209
  %17 = zext i8 %13 to i32, !dbg !7210
  %18 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 %17, !dbg !7210
  %19 = load i8, i8* %18, align 1, !dbg !7210, !tbaa !2257
  %20 = icmp eq i8 %19, 0, !dbg !7210
  br i1 %20, label %21, label %9, !dbg !7211, !llvm.loop !7217

21:                                               ; preds = %9
  %22 = add i8 %16, -11, !dbg !7219
  %23 = icmp ult i8 %22, -7, !dbg !7219
  br label %24, !dbg !7219

24:                                               ; preds = %21, %5
  %25 = phi i1 [ true, %5 ], [ %23, %21 ]
  br i1 %25, label %26, label %28, !dbg !7219

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 8, !dbg !7221
  store i32 6, i32* %27, align 4, !dbg !7223, !tbaa !6679
  br label %53, !dbg !7224

28:                                               ; preds = %24, %28
  %29 = phi i8 [ %37, %28 ], [ 0, %24 ]
  %30 = phi i8 [ %31, %28 ], [ 0, %24 ]
  call void @llvm.dbg.value(metadata i8 %29, metadata !7203, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.value(metadata i8 %30, metadata !7202, metadata !DIExpression()), !dbg !7209
  %31 = add i8 %30, 1, !dbg !7225
  call void @llvm.dbg.value(metadata i8 %31, metadata !7202, metadata !DIExpression()), !dbg !7209
  %32 = zext i8 %30 to i32, !dbg !7227
  %33 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 %32, !dbg !7227
  %34 = load i8, i8* %33, align 1, !dbg !7227, !tbaa !2257
  %35 = icmp eq i8 %34, 34, !dbg !7228
  %36 = zext i1 %35 to i8, !dbg !7229
  %37 = add i8 %29, %36, !dbg !7229
  call void @llvm.dbg.value(metadata i8 %37, metadata !7203, metadata !DIExpression()), !dbg !7209
  %38 = icmp ult i8 %37, 3, !dbg !7230
  br i1 %38, label %28, label %39, !dbg !7231, !llvm.loop !7232

39:                                               ; preds = %28
  %40 = zext i8 %31 to i32, !dbg !7234
  call void @llvm.dbg.value(metadata i8* %50, metadata !7199, metadata !DIExpression()), !dbg !7209
  br label %41, !dbg !7235

41:                                               ; preds = %47, %39
  %42 = phi i8 [ %31, %39 ], [ %48, %47 ], !dbg !7209
  call void @llvm.dbg.value(metadata i8 %42, metadata !7202, metadata !DIExpression()), !dbg !7209
  %43 = zext i8 %42 to i32, !dbg !7236
  %44 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 %43, !dbg !7236
  %45 = load i8, i8* %44, align 1, !dbg !7236, !tbaa !2257
  switch i8 %45, label %47 [
    i8 0, label %49
    i8 34, label %46
  ], !dbg !7235

46:                                               ; preds = %41
  store i8 0, i8* %44, align 1, !dbg !7237, !tbaa !2257
  br label %47, !dbg !7240

47:                                               ; preds = %41, %46
  %48 = add i8 %42, 1, !dbg !7241
  call void @llvm.dbg.value(metadata i8 %48, metadata !7202, metadata !DIExpression()), !dbg !7209
  br label %41, !dbg !7235, !llvm.loop !7242

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 %40, !dbg !7244
  %51 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 2, i32 0, !dbg !7245
  %52 = call i8* @strcpy(i8* noundef nonnull %51, i8* noundef nonnull %50), !dbg !7246
  br label %53, !dbg !7247

53:                                               ; preds = %49, %26
  %54 = xor i1 %25, true
  br label %62

55:                                               ; preds = %1
  %56 = call i32 @memcmp(i8* noundef nonnull dereferenceable(11) %2, i8* noundef nonnull dereferenceable(11) getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.67, i32 0, i32 0), i32 11), !dbg !7248
  %57 = icmp eq i32 %56, 0, !dbg !7250
  br i1 %57, label %58, label %62, !dbg !7251

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !7252
  %60 = load i8, i8* %59, align 2, !dbg !7254, !tbaa !6734
  %61 = or i8 %60, 2, !dbg !7254
  store i8 %61, i8* %59, align 2, !dbg !7254, !tbaa !6734
  br label %62, !dbg !7255

62:                                               ; preds = %58, %55, %53
  %63 = phi i1 [ %54, %53 ], [ false, %55 ], [ false, %58 ], !dbg !7204
  ret i1 %63, !dbg !7256
}

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @memcmp(i8* nocapture, i8* nocapture, i32) local_unnamed_addr #27

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare dso_local i8* @strcpy(i8* noalias noundef returned writeonly, i8* noalias nocapture noundef readonly) local_unnamed_addr #28

; Function Attrs: mustprogress nofree noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice14parseCiprxget4Ev(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0) local_unnamed_addr #26 align 2 !dbg !7257 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !7259, metadata !DIExpression()), !dbg !7263
  %3 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7264
  %4 = call i32 @memcmp(i8* noundef nonnull dereferenceable(15) %3, i8* noundef nonnull dereferenceable(15) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.68, i32 0, i32 0), i32 15), !dbg !7265
  %5 = icmp eq i32 %4, 0, !dbg !7266
  br i1 %5, label %6, label %15, !dbg !7267

6:                                                ; preds = %1
  %7 = bitcast i32* %2 to i8*, !dbg !7268
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #34, !dbg !7268
  %8 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 15, !dbg !7269
  call void @llvm.dbg.value(metadata i32* %2, metadata !7260, metadata !DIExpression(DW_OP_deref)), !dbg !7270
  %9 = call i32 (i8*, i8*, ...) @sscanf(i8* noundef nonnull %8, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.69, i32 0, i32 0), i32* noundef nonnull %2), !dbg !7271
  %10 = load i32, i32* %2, align 4, !dbg !7272, !tbaa !2216
  call void @llvm.dbg.value(metadata i32 %10, metadata !7260, metadata !DIExpression()), !dbg !7270
  %11 = sext i32 %10 to i64, !dbg !7272
  %12 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !7273
  %13 = load i64, i64* %12, align 8, !dbg !7274, !tbaa !7275
  %14 = add i64 %13, %11, !dbg !7274
  store i64 %14, i64* %12, align 8, !dbg !7274, !tbaa !7275
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #34, !dbg !7276
  br label %15

15:                                               ; preds = %1, %6
  ret i1 %5, !dbg !7277
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @sscanf(i8* nocapture noundef readonly, i8* nocapture noundef readonly, ...) local_unnamed_addr #29

; Function Attrs: mustprogress nofree noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice14parseCiprxget2Ev(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0) local_unnamed_addr #26 align 2 !dbg !7278 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !7280, metadata !DIExpression()), !dbg !7284
  %3 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7285
  %4 = call i32 @memcmp(i8* noundef nonnull dereferenceable(15) %3, i8* noundef nonnull dereferenceable(15) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.70, i32 0, i32 0), i32 15), !dbg !7286
  %5 = icmp eq i32 %4, 0, !dbg !7287
  br i1 %5, label %6, label %21, !dbg !7288

6:                                                ; preds = %1
  %7 = bitcast i32* %2 to i8*, !dbg !7289
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #34, !dbg !7289
  %8 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 15, !dbg !7290
  call void @llvm.dbg.value(metadata i32* %2, metadata !7281, metadata !DIExpression(DW_OP_deref)), !dbg !7291
  %9 = call i32 (i8*, i8*, ...) @sscanf(i8* noundef nonnull %8, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.69, i32 0, i32 0), i32* noundef nonnull %2), !dbg !7292
  %10 = load i32, i32* %2, align 4, !dbg !7293, !tbaa !2216
  call void @llvm.dbg.value(metadata i32 %10, metadata !7281, metadata !DIExpression()), !dbg !7291
  %11 = sext i32 %10 to i64, !dbg !7293
  %12 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !7294
  %13 = load i64, i64* %12, align 8, !dbg !7295, !tbaa !7275
  %14 = sub i64 %13, %11, !dbg !7295
  store i64 %14, i64* %12, align 8, !dbg !7295, !tbaa !7275
  call void @llvm.dbg.value(metadata i32 %10, metadata !7281, metadata !DIExpression()), !dbg !7291
  %15 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 8, !dbg !7296
  %16 = load i64, i64* %15, align 8, !dbg !7297, !tbaa !7298
  %17 = add i64 %16, %11, !dbg !7297
  store i64 %17, i64* %15, align 8, !dbg !7297, !tbaa !7298
  %18 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !7299
  %19 = load i8, i8* %18, align 2, !dbg !7300, !tbaa !6734
  %20 = and i8 %19, -33, !dbg !7300
  store i8 %20, i8* %18, align 2, !dbg !7300, !tbaa !6734
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #34, !dbg !7301
  br label %21

21:                                               ; preds = %1, %6
  ret i1 %5, !dbg !7302
}

; Function Attrs: mustprogress nofree noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice8parseCsqEv(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0) local_unnamed_addr #26 align 2 !dbg !7303 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !7305, metadata !DIExpression()), !dbg !7309
  %3 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7310
  %4 = call i32 @memcmp(i8* noundef nonnull dereferenceable(6) %3, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.71, i32 0, i32 0), i32 6), !dbg !7311
  %5 = icmp eq i32 %4, 0, !dbg !7312
  br i1 %5, label %6, label %16, !dbg !7313

6:                                                ; preds = %1
  %7 = bitcast i32* %2 to i8*, !dbg !7314
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #34, !dbg !7314
  %8 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 6, !dbg !7315
  call void @llvm.dbg.value(metadata i32* %2, metadata !7306, metadata !DIExpression(DW_OP_deref)), !dbg !7317
  %9 = call i32 (i8*, i8*, ...) @sscanf(i8* noundef nonnull %8, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.72, i32 0, i32 0), i32* noundef nonnull %2), !dbg !7318
  %10 = icmp eq i32 %9, 1, !dbg !7319
  br i1 %10, label %11, label %15, !dbg !7320

11:                                               ; preds = %6
  %12 = load i32, i32* %2, align 4, !dbg !7321, !tbaa !2216
  call void @llvm.dbg.value(metadata i32 %12, metadata !7306, metadata !DIExpression()), !dbg !7317
  %13 = trunc i32 %12 to i8, !dbg !7321
  %14 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 4, !dbg !7323
  store i8 %13, i8* %14, align 4, !dbg !7324, !tbaa !7099
  br label %15, !dbg !7325

15:                                               ; preds = %11, %6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #34, !dbg !7326
  br label %16

16:                                               ; preds = %1, %15
  ret i1 %5, !dbg !7327
}

; Function Attrs: mustprogress nofree noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice12parseIDReplyEv(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0) local_unnamed_addr #26 align 2 !dbg !7328 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !7330, metadata !DIExpression()), !dbg !7333
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7334
  %3 = call i32 @memcmp(i8* noundef nonnull dereferenceable(2) %2, i8* noundef nonnull dereferenceable(2) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i32 0, i32 0), i32 2), !dbg !7336
  %4 = icmp eq i32 %3, 0, !dbg !7337
  %5 = load i8, i8* %2, align 8
  %6 = icmp eq i8 %5, 13
  %7 = select i1 %4, i1 true, i1 %6, !dbg !7338
  br i1 %7, label %29, label %8, !dbg !7338

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %2, metadata !7331, metadata !DIExpression()), !dbg !7333
  %9 = call i32 @memcmp(i8* noundef nonnull dereferenceable(8) %2, i8* noundef nonnull dereferenceable(8) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i32 0, i32 0), i32 8), !dbg !7339
  %10 = icmp eq i32 %9, 0, !dbg !7341
  %11 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 8
  %12 = select i1 %10, i8* %11, i8* %2, !dbg !7342
  call void @llvm.dbg.value(metadata i8* %12, metadata !7331, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.value(metadata i32 0, metadata !7332, metadata !DIExpression()), !dbg !7333
  %13 = load i8, i8* %12, align 8, !dbg !7343, !tbaa !2257
  %14 = icmp eq i8 %13, 13, !dbg !7344
  br i1 %14, label %26, label %15, !dbg !7345

15:                                               ; preds = %8, %15
  %16 = phi i8 [ %22, %15 ], [ %13, %8 ]
  %17 = phi i32 [ %20, %15 ], [ 0, %8 ]
  %18 = phi i8* [ %19, %15 ], [ %12, %8 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7332, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.value(metadata i8* %18, metadata !7331, metadata !DIExpression()), !dbg !7333
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7346
  call void @llvm.dbg.value(metadata i8* %19, metadata !7331, metadata !DIExpression()), !dbg !7333
  %20 = add nuw nsw i32 %17, 1, !dbg !7348
  call void @llvm.dbg.value(metadata i32 %20, metadata !7332, metadata !DIExpression()), !dbg !7333
  %21 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 %17, !dbg !7349
  store i8 %16, i8* %21, align 1, !dbg !7350, !tbaa !2257
  %22 = load i8, i8* %19, align 1, !dbg !7343, !tbaa !2257
  %23 = icmp ne i8 %22, 13, !dbg !7344
  %24 = icmp ult i32 %17, 22, !dbg !7351
  %25 = select i1 %23, i1 %24, i1 false, !dbg !7351
  br i1 %25, label %15, label %26, !dbg !7345, !llvm.loop !7352

26:                                               ; preds = %15, %8
  %27 = phi i32 [ 0, %8 ], [ %20, %15 ], !dbg !7333
  %28 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 %27, !dbg !7354
  store i8 0, i8* %28, align 1, !dbg !7355, !tbaa !2257
  br label %29

29:                                               ; preds = %1, %26
  %30 = xor i1 %7, true, !dbg !7356
  ret i1 %30, !dbg !7356
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice12sendDnsQueryEv(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull readonly align 8 dereferenceable(280) %0) local_unnamed_addr #2 align 2 !dbg !7357 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !7359, metadata !DIExpression()), !dbg !7360
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 1, !dbg !7361
  %3 = bitcast %"class.Cicada::IBufferedSerial"** %2 to %"class.Cicada::ICommDevice"**, !dbg !7361
  %4 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %3, align 4, !dbg !7361, !tbaa !7082
  %5 = bitcast %"class.Cicada::ICommDevice"* %4 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !7363
  %6 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %5, align 4, !dbg !7363, !tbaa !2121
  %7 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %6, i32 3, !dbg !7363
  %8 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %7, align 4, !dbg !7363
  %9 = call noundef i64 %8(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %4) #34, !dbg !7363
  %10 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 5, !dbg !7364
  %11 = load i8*, i8** %10, align 4, !dbg !7364, !tbaa !6729
  %12 = call i32 @strlen(i8* noundef nonnull dereferenceable(1) %11), !dbg !7365
  %13 = add i32 %12, 20, !dbg !7366
  %14 = zext i32 %13 to i64, !dbg !7365
  %15 = icmp ult i64 %9, %14, !dbg !7367
  br i1 %15, label %37, label %16, !dbg !7368

16:                                               ; preds = %1
  %17 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %2, align 4, !dbg !7369, !tbaa !7082
  %18 = bitcast %"class.Cicada::IBufferedSerial"* %17 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7370
  %19 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %18, align 4, !dbg !7370, !tbaa !2121
  %20 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %19, i32 8, !dbg !7370
  %21 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %20, align 4, !dbg !7370
  %22 = call noundef i64 %21(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %17, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i32 0, i32 0)) #34, !dbg !7370
  %23 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %2, align 4, !dbg !7371, !tbaa !7082
  %24 = load i8*, i8** %10, align 4, !dbg !7372, !tbaa !6729
  %25 = bitcast %"class.Cicada::IBufferedSerial"* %23 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7373
  %26 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %25, align 4, !dbg !7373, !tbaa !2121
  %27 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %26, i32 8, !dbg !7373
  %28 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %27, align 4, !dbg !7373
  %29 = call noundef i64 %28(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %23, i8* noundef %24) #34, !dbg !7373
  %30 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %2, align 4, !dbg !7374, !tbaa !7082
  %31 = load i8*, i8** @_ZN6Cicada12ATCommDevice12_quoteEndStrE, align 4, !dbg !7375, !tbaa !2286
  %32 = bitcast %"class.Cicada::IBufferedSerial"* %30 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7376
  %33 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %32, align 4, !dbg !7376, !tbaa !2121
  %34 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %33, i32 8, !dbg !7376
  %35 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %34, align 4, !dbg !7376
  %36 = call noundef i64 %35(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %30, i8* noundef %31) #34, !dbg !7376
  br label %37, !dbg !7377

37:                                               ; preds = %1, %16
  %38 = xor i1 %15, true, !dbg !7378
  ret i1 %38, !dbg !7378
}

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare dso_local i32 @strlen(i8* nocapture noundef) local_unnamed_addr #30

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice13sendCiprxget2Ev(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %0) local_unnamed_addr #2 align 2 !dbg !7379 {
  %2 = alloca [17 x i8], align 1
  %3 = alloca [6 x i8], align 1
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !7381, metadata !DIExpression()), !dbg !7393
  %4 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 1, !dbg !7394
  %5 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %4, align 4, !dbg !7394, !tbaa !7082
  %6 = bitcast %"class.Cicada::IBufferedSerial"* %5 to i64 (%"class.Cicada::IBufferedSerial"*)***, !dbg !7395
  %7 = load i64 (%"class.Cicada::IBufferedSerial"*)**, i64 (%"class.Cicada::IBufferedSerial"*)*** %6, align 4, !dbg !7395, !tbaa !2121
  %8 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*)*, i64 (%"class.Cicada::IBufferedSerial"*)** %7, i32 13, !dbg !7395
  %9 = load i64 (%"class.Cicada::IBufferedSerial"*)*, i64 (%"class.Cicada::IBufferedSerial"*)** %8, align 4, !dbg !7395
  %10 = call noundef i64 %9(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %5) #34, !dbg !7395
  %11 = bitcast %"class.Cicada::IBufferedSerial"** %4 to %"class.Cicada::ICommDevice"**, !dbg !7396
  %12 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %11, align 4, !dbg !7396, !tbaa !7082
  %13 = bitcast %"class.Cicada::ICommDevice"* %12 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !7397
  %14 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %13, align 4, !dbg !7397, !tbaa !2121
  %15 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %14, i32 2, !dbg !7397
  %16 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %15, align 4, !dbg !7397
  %17 = call noundef i64 %16(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %12) #34, !dbg !7397
  %18 = sub i64 %10, %17, !dbg !7398
  %19 = icmp ugt i64 %18, 8, !dbg !7399
  br i1 %19, label %20, label %78, !dbg !7400

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 2, !dbg !7401
  %22 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %21), !dbg !7402
  %23 = icmp eq i64 %22, 0, !dbg !7403
  br i1 %23, label %78, label %24, !dbg !7404

24:                                               ; preds = %20
  %25 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %4, align 4, !dbg !7405, !tbaa !7082
  %26 = bitcast %"class.Cicada::IBufferedSerial"* %25 to i64 (%"class.Cicada::IBufferedSerial"*)***, !dbg !7406
  %27 = load i64 (%"class.Cicada::IBufferedSerial"*)**, i64 (%"class.Cicada::IBufferedSerial"*)*** %26, align 4, !dbg !7406, !tbaa !2121
  %28 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*)*, i64 (%"class.Cicada::IBufferedSerial"*)** %27, i32 13, !dbg !7406
  %29 = load i64 (%"class.Cicada::IBufferedSerial"*)*, i64 (%"class.Cicada::IBufferedSerial"*)** %28, align 4, !dbg !7406
  %30 = call noundef i64 %29(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %25) #34, !dbg !7406
  %31 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %11, align 4, !dbg !7407, !tbaa !7082
  %32 = bitcast %"class.Cicada::ICommDevice"* %31 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !7408
  %33 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %32, align 4, !dbg !7408, !tbaa !2121
  %34 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %33, i32 2, !dbg !7408
  %35 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %34, align 4, !dbg !7408
  %36 = call noundef i64 %35(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %31) #34, !dbg !7408
  %37 = sub i64 %30, %36, !dbg !7409
  %38 = add i64 %37, -8, !dbg !7410
  call void @llvm.dbg.value(metadata i64 %38, metadata !7382, metadata !DIExpression()), !dbg !7411
  %39 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !7412
  %40 = load i64, i64* %39, align 8, !dbg !7412, !tbaa !7275
  %41 = icmp ugt i64 %38, %40, !dbg !7414
  %42 = select i1 %41, i64 %40, i64 %38, !dbg !7415
  call void @llvm.dbg.value(metadata i64 %42, metadata !7382, metadata !DIExpression()), !dbg !7411
  %43 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %21), !dbg !7416
  %44 = icmp ugt i64 %42, %43, !dbg !7418
  br i1 %44, label %45, label %47, !dbg !7419

45:                                               ; preds = %24
  %46 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %21), !dbg !7420
  call void @llvm.dbg.value(metadata i64 %46, metadata !7382, metadata !DIExpression()), !dbg !7411
  br label %47, !dbg !7421

47:                                               ; preds = %45, %24
  %48 = phi i64 [ %46, %45 ], [ %42, %24 ], !dbg !7411
  call void @llvm.dbg.value(metadata i64 %48, metadata !7382, metadata !DIExpression()), !dbg !7411
  %49 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 5, !dbg !7422
  %50 = load i16, i16* %49, align 2, !dbg !7422, !tbaa !7424
  %51 = zext i16 %50 to i64, !dbg !7422
  %52 = icmp ugt i64 %48, %51, !dbg !7425
  %53 = trunc i64 %48 to i32, !dbg !7426
  %54 = zext i16 %50 to i32
  %55 = select i1 %52, i32 %54, i32 %53, !dbg !7426
  call void @llvm.dbg.value(metadata i64 poison, metadata !7382, metadata !DIExpression()), !dbg !7411
  %56 = getelementptr inbounds [17 x i8], [17 x i8]* %2, i32 0, i32 0, !dbg !7427
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %56) #34, !dbg !7427
  call void @llvm.dbg.declare(metadata [17 x i8]* %2, metadata !7385, metadata !DIExpression()), !dbg !7428
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(17) %56, i8* noundef nonnull align 1 dereferenceable(17) getelementptr inbounds ([17 x i8], [17 x i8]* @__const._ZN6Cicada13SimCommDevice13sendCiprxget2Ev.str, i32 0, i32 0), i32 17, i1 false), !dbg !7428
  %57 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i32 0, i32 0, !dbg !7429
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %57) #34, !dbg !7429
  call void @llvm.dbg.declare(metadata [6 x i8]* %3, metadata !7389, metadata !DIExpression()), !dbg !7430
  %58 = call i32 (i8*, i8*, ...) @sprintf(i8* noundef nonnull %57, i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.72, i32 0, i32 0), i32 noundef %55), !dbg !7431
  %59 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %4, align 4, !dbg !7432, !tbaa !7082
  %60 = bitcast %"class.Cicada::IBufferedSerial"* %59 to i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)***, !dbg !7433
  %61 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*** %60, align 4, !dbg !7433, !tbaa !2121
  %62 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %61, i32 6, !dbg !7433
  %63 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %62, align 4, !dbg !7433
  %64 = call noundef i64 %63(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %59, i8* noundef nonnull %56, i64 noundef 16) #34, !dbg !7433
  %65 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %4, align 4, !dbg !7434, !tbaa !7082
  %66 = bitcast %"class.Cicada::IBufferedSerial"* %65 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7435
  %67 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %66, align 4, !dbg !7435, !tbaa !2121
  %68 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %67, i32 8, !dbg !7435
  %69 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %68, align 4, !dbg !7435
  %70 = call noundef i64 %69(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %65, i8* noundef nonnull %57) #34, !dbg !7435
  %71 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %4, align 4, !dbg !7436, !tbaa !7082
  %72 = load i8*, i8** @_ZN6Cicada12ATCommDevice11_lineEndStrE, align 4, !dbg !7437, !tbaa !2286
  %73 = bitcast %"class.Cicada::IBufferedSerial"* %71 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7438
  %74 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %73, align 4, !dbg !7438, !tbaa !2121
  %75 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %74, i32 8, !dbg !7438
  %76 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %75, align 4, !dbg !7438
  %77 = call noundef i64 %76(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %71, i8* noundef %72) #34, !dbg !7438
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %57) #34, !dbg !7439
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %56) #34, !dbg !7439
  br label %78

78:                                               ; preds = %1, %20, %47
  %79 = phi i1 [ true, %47 ], [ false, %20 ], [ false, %1 ], !dbg !7440
  ret i1 %79, !dbg !7441
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @sprintf(i8* noalias nocapture noundef writeonly, i8* nocapture noundef readonly, ...) local_unnamed_addr #29

; Function Attrs: mustprogress nofree noinline nounwind willreturn
define dso_local void @_ZN6Cicada13SimCommDevice20checkConnectionStateEPKc(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0, i8* nocapture noundef readonly %1) local_unnamed_addr #21 align 2 !dbg !7442 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !7444, metadata !DIExpression()), !dbg !7446
  call void @llvm.dbg.value(metadata i8* %1, metadata !7445, metadata !DIExpression()), !dbg !7446
  %3 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7447
  %4 = call i32 @memcmp(i8* noundef nonnull dereferenceable(14) %3, i8* noundef nonnull dereferenceable(14) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0), i32 14), !dbg !7449
  %5 = icmp eq i32 %4, 0, !dbg !7450
  br i1 %5, label %6, label %10, !dbg !7451

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !7452
  %8 = load i8, i8* %7, align 2, !dbg !7454, !tbaa !6734
  %9 = or i8 %8, 4, !dbg !7454
  store i8 %9, i8* %7, align 2, !dbg !7454, !tbaa !6734
  br label %19, !dbg !7455

10:                                               ; preds = %2
  %11 = call i32 @strlen(i8* noundef nonnull dereferenceable(1) %1), !dbg !7456
  %12 = call i32 @strncmp(i8* noundef nonnull %3, i8* noundef %1, i32 noundef %11), !dbg !7458
  %13 = icmp eq i32 %12, 0, !dbg !7459
  br i1 %13, label %14, label %19, !dbg !7460

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 9, !dbg !7461
  store i8* null, i8** %15, align 8, !dbg !7463, !tbaa !6901
  %16 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !7464
  %17 = load i8, i8* %16, align 2, !dbg !7465, !tbaa !6734
  %18 = and i8 %17, -17, !dbg !7465
  store i8 %18, i8* %16, align 2, !dbg !7465, !tbaa !6734
  br label %19, !dbg !7466

19:                                               ; preds = %10, %14, %6
  ret void, !dbg !7467
}

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare dso_local i32 @strncmp(i8* nocapture noundef, i8* nocapture noundef, i32 noundef) local_unnamed_addr #30

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada13SimCommDevice13sendIDRequestEPKc(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %0, i8* noundef %1) local_unnamed_addr #2 align 2 !dbg !7468 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !7470, metadata !DIExpression()), !dbg !7475
  call void @llvm.dbg.value(metadata i8* %1, metadata !7471, metadata !DIExpression()), !dbg !7475
  %3 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 1, !dbg !7476
  %4 = load i8, i8* %3, align 1, !dbg !7476, !tbaa !2257
  %5 = icmp ne i8 %4, 0, !dbg !7477
  %6 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 0
  %7 = load i8, i8* %6, align 4
  %8 = icmp eq i8 %7, 0
  %9 = select i1 %5, i1 %8, i1 false, !dbg !7478
  br i1 %9, label %10, label %23, !dbg !7478

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !7479
  %12 = load i8, i8* %11, align 2, !dbg !7479, !tbaa !6734
  %13 = and i8 %12, 32, !dbg !7480
  %14 = icmp eq i8 %13, 0, !dbg !7479
  br i1 %14, label %23, label %15, !dbg !7481

15:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i8 %4, metadata !7472, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7482
  store i8 0, i8* %3, align 1, !dbg !7483, !tbaa !2257
  switch i8 %4, label %23 [
    i8 1, label %20
    i8 2, label %16
    i8 3, label %17
    i8 4, label %18
    i8 5, label %19
  ], !dbg !7484

16:                                               ; preds = %15
  br label %20

17:                                               ; preds = %15
  br label %20

18:                                               ; preds = %15
  br label %20

19:                                               ; preds = %15
  br label %20

20:                                               ; preds = %15, %19, %18, %17, %16
  %21 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0), %16 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i32 0, i32 0), %17 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0), %18 ], [ %1, %19 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i32 0, i32 0), %15 ]
  %22 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, !dbg !7485
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %22, i8* noundef %21) #34, !dbg !7485
  br label %23, !dbg !7487

23:                                               ; preds = %20, %2, %10, %15
  %24 = phi i1 [ false, %15 ], [ false, %10 ], [ false, %2 ], [ true, %20 ]
  ret i1 %24, !dbg !7487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local void @_ZN6Cicada13SimCommDevice11requestRSSIEv(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull writeonly align 8 dereferenceable(280) %0) local_unnamed_addr #7 align 2 !dbg !7488 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !7490, metadata !DIExpression()), !dbg !7491
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 4, !dbg !7492
  store i8 -1, i8* %2, align 4, !dbg !7493, !tbaa !7099
  ret void, !dbg !7494
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef zeroext i8 @_ZN6Cicada13SimCommDevice7getRSSIEv(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull readonly align 8 dereferenceable(280) %0) local_unnamed_addr #16 align 2 !dbg !7495 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !7497, metadata !DIExpression()), !dbg !7498
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 4, !dbg !7499
  %3 = load i8, i8* %2, align 4, !dbg !7499, !tbaa !7099
  ret i8 %3, !dbg !7500
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada13SimCommDevice15requestIDStringENS0_13RequestIDTypeE(%"class.Cicada::SimCommDevice"* nocapture noundef nonnull align 8 dereferenceable(280) %0, i32 noundef %1) local_unnamed_addr #2 align 2 !dbg !7501 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !7503, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.value(metadata i32 %1, metadata !7504, metadata !DIExpression()), !dbg !7505
  %3 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 1, !dbg !7506
  %4 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %3, align 4, !dbg !7506, !tbaa !7082
  %5 = bitcast %"class.Cicada::IBufferedSerial"* %4 to void (%"class.Cicada::IBufferedSerial"*)***, !dbg !7507
  %6 = load void (%"class.Cicada::IBufferedSerial"*)**, void (%"class.Cicada::IBufferedSerial"*)*** %5, align 4, !dbg !7507, !tbaa !2121
  %7 = getelementptr inbounds void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %6, i32 12, !dbg !7507
  %8 = load void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %7, align 4, !dbg !7507
  call void %8(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %4) #34, !dbg !7507
  %9 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 0, !dbg !7508
  store i8 0, i8* %9, align 4, !dbg !7509, !tbaa !2257
  %10 = trunc i32 %1 to i8, !dbg !7510
  %11 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 1, !dbg !7511
  store i8 %10, i8* %11, align 1, !dbg !7512, !tbaa !2257
  ret void, !dbg !7513
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef i8* @_ZN6Cicada13SimCommDevice11getIDStringEv(%"class.Cicada::SimCommDevice"* noundef nonnull readonly align 8 dereferenceable(280) %0) local_unnamed_addr #16 align 2 !dbg !7514 {
  call void @llvm.dbg.value(metadata %"class.Cicada::SimCommDevice"* %0, metadata !7516, metadata !DIExpression()), !dbg !7517
  %2 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 0, i32 0, i32 9, !dbg !7518
  %3 = load i8*, i8** %2, align 8, !dbg !7518, !tbaa !6901
  %4 = icmp ne i8* %3, null, !dbg !7520
  %5 = getelementptr inbounds %"class.Cicada::SimCommDevice", %"class.Cicada::SimCommDevice"* %0, i32 0, i32 3, i32 0
  %6 = load i8, i8* %5, align 4
  %7 = icmp eq i8 %6, 0
  %8 = select i1 %4, i1 true, i1 %7, !dbg !7521
  %9 = select i1 %8, i8* null, i8* %5, !dbg !7521
  ret i8* %9, !dbg !7522
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada17Sim7x00CommDeviceD0Ev(%"class.Cicada::Sim7x00CommDevice"* noundef nonnull align 8 dereferenceable(284) %0) unnamed_addr #9 comdat align 2 !dbg !7523 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Sim7x00CommDevice"* %0, metadata !7526, metadata !DIExpression()), !dbg !7528
  %2 = bitcast %"class.Cicada::Sim7x00CommDevice"* %0 to %"class.Cicada::IPCommDevice"*, !dbg !7529
  %3 = call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceD2Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(284) %2) #34, !dbg !7529
  %4 = bitcast %"class.Cicada::Sim7x00CommDevice"* %0 to i8*, !dbg !7529
  call void @_ZdlPv(i8* noundef %4) #37, !dbg !7529
  ret void, !dbg !7529
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada17Sim7x00CommDevice3runEv(%"class.Cicada::Sim7x00CommDevice"* noundef nonnull align 8 dereferenceable(284) %0) unnamed_addr #2 align 2 !dbg !7530 {
  %2 = alloca [10 x i8], align 1
  %3 = alloca [23 x i8], align 1
  %4 = alloca [6 x i8], align 1
  %5 = alloca [6 x i8], align 1
  call void @llvm.dbg.value(metadata %"class.Cicada::Sim7x00CommDevice"* %0, metadata !7532, metadata !DIExpression()), !dbg !7553
  %6 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, !dbg !7554
  %7 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 1, !dbg !7554
  %8 = bitcast %"class.Cicada::IBufferedSerial"** %7 to i8**, !dbg !7554
  %9 = load i8*, i8** %8, align 4, !dbg !7554, !tbaa !7082
  %10 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !7554
  %11 = bitcast i8* %10 to %"class.Cicada::ICommDevice"*, !dbg !7554
  %12 = bitcast i8* %10 to i1 (%"class.Cicada::ICommDevice"*)***, !dbg !7556
  %13 = load i1 (%"class.Cicada::ICommDevice"*)**, i1 (%"class.Cicada::ICommDevice"*)*** %12, align 4, !dbg !7556, !tbaa !2121
  %14 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %13, i32 3, !dbg !7556
  %15 = load i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %14, align 4, !dbg !7556
  %16 = call noundef zeroext i1 %15(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %11) #34, !dbg !7556
  br i1 %16, label %28, label %17, !dbg !7557

17:                                               ; preds = %1
  %18 = load i8*, i8** %8, align 4, !dbg !7558, !tbaa !7082
  %19 = getelementptr inbounds i8, i8* %18, i32 4, !dbg !7558
  %20 = bitcast i8* %19 to %"class.Cicada::ICommDevice"*, !dbg !7558
  %21 = bitcast i8* %19 to i1 (%"class.Cicada::ICommDevice"*)***, !dbg !7561
  %22 = load i1 (%"class.Cicada::ICommDevice"*)**, i1 (%"class.Cicada::ICommDevice"*)*** %21, align 4, !dbg !7561, !tbaa !2121
  %23 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %22, i32 2, !dbg !7561
  %24 = load i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %23, align 4, !dbg !7561
  %25 = call noundef zeroext i1 %24(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %20) #34, !dbg !7561
  br i1 %25, label %391, label %26, !dbg !7562

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 4, !dbg !7563
  store i8 1, i8* %27, align 2, !dbg !7565, !tbaa !7566
  br label %391, !dbg !7567

28:                                               ; preds = %1
  %29 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !7568
  %30 = load i8, i8* %29, align 2, !dbg !7568, !tbaa !6734
  %31 = zext i8 %30 to i32, !dbg !7568
  %32 = and i32 %31, 64, !dbg !7570
  %33 = icmp eq i32 %32, 0, !dbg !7568
  br i1 %33, label %34, label %391, !dbg !7571

34:                                               ; preds = %28
  %35 = and i32 %31, 2, !dbg !7572
  %36 = icmp eq i32 %35, 0, !dbg !7573
  br i1 %36, label %67, label %37, !dbg !7574

37:                                               ; preds = %34
  %38 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7575, !tbaa !7082
  %39 = bitcast %"class.Cicada::IBufferedSerial"* %38 to void (%"class.Cicada::IBufferedSerial"*)***, !dbg !7576
  %40 = load void (%"class.Cicada::IBufferedSerial"*)**, void (%"class.Cicada::IBufferedSerial"*)*** %39, align 4, !dbg !7576, !tbaa !2121
  %41 = getelementptr inbounds void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %40, i32 12, !dbg !7576
  %42 = load void (%"class.Cicada::IBufferedSerial"*)*, void (%"class.Cicada::IBufferedSerial"*)** %41, align 4, !dbg !7576
  call void %42(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %38) #34, !dbg !7576
  store i8 32, i8* %29, align 2, !dbg !7577, !tbaa !6734
  %43 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 6, !dbg !7578
  %44 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 4, !dbg !7579
  %45 = bitcast i64* %43 to i8*, !dbg !7579
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %45, i8 0, i64 24, i1 false), !dbg !7581
  %46 = load i8, i8* %44, align 2, !dbg !7579, !tbaa !7566
  %47 = add i8 %46, -3, !dbg !7582
  %48 = icmp ult i8 %47, 15, !dbg !7582
  %49 = select i1 %48, i8 3, i8 0, !dbg !7582
  store i8 %49, i8* %44, align 2, !dbg !7583, !tbaa !7566
  %50 = getelementptr inbounds [10 x i8], [10 x i8]* %2, i32 0, i32 0, !dbg !7584
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %50) #34, !dbg !7584
  call void @llvm.dbg.declare(metadata [10 x i8]* %2, metadata !7533, metadata !DIExpression()), !dbg !7585
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(10) %50, i8* noundef nonnull align 1 dereferenceable(10) getelementptr inbounds ([10 x i8], [10 x i8]* @__const._ZN6Cicada17Sim7x00CommDevice3runEv.str, i32 0, i32 0), i32 10, i1 false), !dbg !7585
  %51 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7586, !tbaa !7082
  %52 = bitcast %"class.Cicada::IBufferedSerial"* %51 to i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)***, !dbg !7587
  %53 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*** %52, align 4, !dbg !7587, !tbaa !2121
  %54 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %53, i32 6, !dbg !7587
  %55 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %54, align 4, !dbg !7587
  %56 = call noundef i64 %55(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %51, i8* noundef nonnull %50, i64 noundef 9) #34, !dbg !7587
  %57 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7588, !tbaa !7082
  %58 = load i8*, i8** @_ZN6Cicada12ATCommDevice11_lineEndStrE, align 4, !dbg !7589, !tbaa !2286
  %59 = bitcast %"class.Cicada::IBufferedSerial"* %57 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7590
  %60 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %59, align 4, !dbg !7590, !tbaa !2121
  %61 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %60, i32 8, !dbg !7590
  %62 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %61, align 4, !dbg !7590
  %63 = call noundef i64 %62(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %57, i8* noundef %58) #34, !dbg !7590
  %64 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 5, !dbg !7591
  store i8 0, i8* %64, align 1, !dbg !7592, !tbaa !7593
  %65 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 9, !dbg !7594
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.73, i32 0, i32 0), i8** %65, align 8, !dbg !7595, !tbaa !6901
  %66 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7596
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %66, i16 noundef zeroext 4000), !dbg !7596
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %50) #34, !dbg !7597
  br label %391

67:                                               ; preds = %34
  %68 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, !dbg !7598
  %69 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice14fillLineBufferEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68) #34, !dbg !7598
  call void @llvm.dbg.value(metadata i1 %69, metadata !7537, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7553
  br i1 %69, label %70, label %135, !dbg !7599

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 4, !dbg !7600
  %72 = load i8, i8* %71, align 2, !dbg !7600, !tbaa !7566
  %73 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 5, !dbg !7603
  %74 = load i8, i8* %73, align 1, !dbg !7603, !tbaa !7593
  call void @_ZN6Cicada12ATCommDevice9logStatesEaa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8 noundef signext %72, i8 noundef signext %74) #34, !dbg !7604
  %75 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 9, !dbg !7605
  %76 = load i8*, i8** %75, align 8, !dbg !7605, !tbaa !6901
  %77 = icmp eq i8* %76, null, !dbg !7605
  br i1 %77, label %91, label %78, !dbg !7607

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 2, i32 0, !dbg !7608
  %80 = call i32 @strlen(i8* noundef nonnull %76), !dbg !7611
  %81 = call i32 @strncmp(i8* noundef nonnull %79, i8* noundef nonnull %76, i32 noundef %80), !dbg !7612
  %82 = icmp eq i32 %81, 0, !dbg !7613
  br i1 %82, label %83, label %84, !dbg !7614

83:                                               ; preds = %78
  store i8* null, i8** %75, align 8, !dbg !7615, !tbaa !6901
  br label %91, !dbg !7617

84:                                               ; preds = %78
  %85 = call i32 @memcmp(i8* noundef nonnull dereferenceable(5) %79, i8* noundef nonnull dereferenceable(5) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.74, i32 0, i32 0), i32 5), !dbg !7618
  %86 = icmp eq i32 %85, 0, !dbg !7620
  br i1 %86, label %87, label %91, !dbg !7621

87:                                               ; preds = %84
  %88 = load i8, i8* %29, align 2, !dbg !7622, !tbaa !6734
  %89 = or i8 %88, 2, !dbg !7622
  store i8 %89, i8* %29, align 2, !dbg !7622, !tbaa !6734
  %90 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7624
  store i32 5, i32* %90, align 4, !dbg !7625, !tbaa !6679
  store i8* null, i8** %75, align 8, !dbg !7626, !tbaa !6901
  br label %391, !dbg !7627

91:                                               ; preds = %83, %84, %70
  %92 = load i8, i8* %73, align 1, !dbg !7628, !tbaa !7593
  %93 = sext i8 %92 to i32, !dbg !7628
  switch i32 %93, label %131 [
    i32 4, label %94
    i32 5, label %104
    i32 6, label %107
    i32 7, label %119
    i32 8, label %122
    i32 1, label %125
    i32 2, label %128
  ], !dbg !7629

94:                                               ; preds = %91
  %95 = load i8*, i8** %75, align 8, !dbg !7630, !tbaa !6901
  %96 = icmp eq i8* %95, null, !dbg !7633
  br i1 %96, label %97, label %98, !dbg !7634

97:                                               ; preds = %94
  store i8 0, i8* %73, align 1, !dbg !7635, !tbaa !7593
  br label %131, !dbg !7637

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 2, i32 0, !dbg !7638
  %100 = call i32 @memcmp(i8* noundef nonnull dereferenceable(11) %99, i8* noundef nonnull dereferenceable(11) getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.75, i32 0, i32 0), i32 11), !dbg !7640
  %101 = icmp eq i32 %100, 0, !dbg !7641
  br i1 %101, label %102, label %131, !dbg !7642

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7643
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %103, i16 noundef zeroext 2000), !dbg !7643
  store i8 7, i8* %71, align 2, !dbg !7645, !tbaa !7566
  store i8* null, i8** %75, align 8, !dbg !7646, !tbaa !6901
  store i8 0, i8* %73, align 1, !dbg !7647, !tbaa !7593
  br label %391, !dbg !7648

104:                                              ; preds = %91
  %105 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice13parseDnsReplyEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68) #34, !dbg !7649
  br i1 %105, label %106, label %131, !dbg !7651

106:                                              ; preds = %104
  store i8 0, i8* %73, align 1, !dbg !7652, !tbaa !7593
  br label %131, !dbg !7654

107:                                              ; preds = %91
  %108 = load i8*, i8** %75, align 8, !dbg !7655, !tbaa !6901
  %109 = icmp eq i8* %108, null, !dbg !7657
  br i1 %109, label %110, label %111, !dbg !7658

110:                                              ; preds = %107
  store i8 0, i8* %73, align 1, !dbg !7659, !tbaa !7593
  br label %131, !dbg !7661

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 2, i32 0, !dbg !7662
  %113 = call i32 @memcmp(i8* noundef nonnull dereferenceable(12) %112, i8* noundef nonnull dereferenceable(12) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4.76, i32 0, i32 0), i32 12), !dbg !7665
  %114 = icmp eq i32 %113, 0, !dbg !7666
  br i1 %114, label %115, label %131, !dbg !7667

115:                                              ; preds = %111
  %116 = load i8, i8* %29, align 2, !dbg !7668, !tbaa !6734
  %117 = or i8 %116, 2, !dbg !7668
  store i8 %117, i8* %29, align 2, !dbg !7668, !tbaa !6734
  %118 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7670
  store i32 5, i32* %118, align 4, !dbg !7671, !tbaa !6679
  br label %131, !dbg !7672

119:                                              ; preds = %91
  %120 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice14parseCiprxget4Ev(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68) #34, !dbg !7673
  br i1 %120, label %121, label %131, !dbg !7675

121:                                              ; preds = %119
  store i8 0, i8* %73, align 1, !dbg !7676, !tbaa !7593
  br label %131, !dbg !7678

122:                                              ; preds = %91
  %123 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice14parseCiprxget2Ev(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68) #34, !dbg !7679
  br i1 %123, label %124, label %131, !dbg !7681

124:                                              ; preds = %122
  store i8 0, i8* %73, align 1, !dbg !7682, !tbaa !7593
  store i8 17, i8* %71, align 2, !dbg !7684, !tbaa !7566
  br label %131, !dbg !7685

125:                                              ; preds = %91
  %126 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice8parseCsqEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68) #34, !dbg !7686
  br i1 %126, label %127, label %131, !dbg !7688

127:                                              ; preds = %125
  store i8 0, i8* %73, align 1, !dbg !7689, !tbaa !7593
  br label %131, !dbg !7691

128:                                              ; preds = %91
  %129 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice12parseIDReplyEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68) #34, !dbg !7692
  br i1 %129, label %130, label %131, !dbg !7694

130:                                              ; preds = %128
  store i8 0, i8* %73, align 1, !dbg !7695, !tbaa !7593
  br label %131, !dbg !7697

131:                                              ; preds = %91, %128, %130, %125, %127, %122, %124, %119, %121, %110, %115, %111, %104, %106, %97, %98
  %132 = load i8, i8* %71, align 2, !dbg !7698, !tbaa !7566
  %133 = icmp sgt i8 %132, 11, !dbg !7700
  br i1 %133, label %134, label %144, !dbg !7701

134:                                              ; preds = %131
  call void @_ZN6Cicada13SimCommDevice20checkConnectionStateEPKc(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.77, i32 0, i32 0)) #34, !dbg !7702
  br label %144, !dbg !7704

135:                                              ; preds = %67
  %136 = load i8, i8* %29, align 2, !dbg !7705, !tbaa !6734
  %137 = and i8 %136, 8, !dbg !7707
  %138 = icmp ne i8 %137, 0, !dbg !7708
  %139 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 4
  %140 = load i8, i8* %139, align 2
  %141 = icmp eq i8 %140, 17
  %142 = select i1 %138, i1 %141, i1 false, !dbg !7709
  br i1 %142, label %143, label %144, !dbg !7709

143:                                              ; preds = %135
  call void @_ZN6Cicada12ATCommDevice15flushReadBufferEv(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6) #34, !dbg !7710
  br label %144, !dbg !7712

144:                                              ; preds = %135, %143, %131, %134
  %145 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 9, !dbg !7713
  %146 = load i8*, i8** %145, align 8, !dbg !7713, !tbaa !6901
  %147 = icmp eq i8* %146, null, !dbg !7713
  br i1 %147, label %148, label %391, !dbg !7715

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 5, !dbg !7716
  %150 = load i8, i8* %149, align 1, !dbg !7716, !tbaa !7593
  %151 = icmp eq i8 %150, 0, !dbg !7717
  br i1 %151, label %152, label %391, !dbg !7718

152:                                              ; preds = %148
  %153 = bitcast %"class.Cicada::IBufferedSerial"** %7 to %"class.Cicada::ICommDevice"**, !dbg !7719
  %154 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %153, align 4, !dbg !7719, !tbaa !7082
  %155 = bitcast %"class.Cicada::ICommDevice"* %154 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !7721
  %156 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %155, align 4, !dbg !7721, !tbaa !2121
  %157 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %156, i32 3, !dbg !7721
  %158 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %157, align 4, !dbg !7721
  %159 = call noundef i64 %158(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %154) #34, !dbg !7721
  %160 = icmp ult i64 %159, 20, !dbg !7722
  br i1 %160, label %391, label %161, !dbg !7723

161:                                              ; preds = %152
  %162 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 4, !dbg !7724
  %163 = load i8, i8* %162, align 4, !dbg !7724, !tbaa !7099
  %164 = icmp eq i8 %163, -1, !dbg !7726
  br i1 %164, label %165, label %171, !dbg !7727

165:                                              ; preds = %161
  %166 = load i8, i8* %29, align 2, !dbg !7728, !tbaa !6734
  %167 = and i8 %166, 32, !dbg !7729
  %168 = icmp eq i8 %167, 0, !dbg !7728
  br i1 %168, label %171, label %169, !dbg !7730

169:                                              ; preds = %165
  store i8 1, i8* %149, align 1, !dbg !7731, !tbaa !7593
  %170 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7733, !tbaa !2286
  store i8* %170, i8** %145, align 8, !dbg !7734, !tbaa !6901
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.78, i32 0, i32 0)) #34, !dbg !7735
  br label %391, !dbg !7736

171:                                              ; preds = %165, %161
  %172 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 1, !dbg !7737
  %173 = load i8*, i8** %172, align 8, !dbg !7737, !tbaa !7739
  %174 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice13sendIDRequestEPKc(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68, i8* noundef %173) #34, !dbg !7741
  br i1 %174, label %175, label %177, !dbg !7742

175:                                              ; preds = %171
  store i8 2, i8* %149, align 1, !dbg !7743, !tbaa !7593
  %176 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7745, !tbaa !2286
  store i8* %176, i8** %145, align 8, !dbg !7746, !tbaa !6901
  br label %391, !dbg !7747

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 4, !dbg !7748
  %179 = load i8, i8* %178, align 2, !dbg !7748, !tbaa !7566
  %180 = sext i8 %179 to i32, !dbg !7748
  switch i32 %180, label %391 [
    i32 0, label %181
    i32 3, label %185
    i32 4, label %191
    i32 5, label %217
    i32 6, label %219
    i32 7, label %221
    i32 8, label %225
    i32 9, label %227
    i32 10, label %231
    i32 11, label %282
    i32 12, label %287
    i32 13, label %347
    i32 14, label %349
    i32 15, label %351
    i32 20, label %387
    i32 17, label %366
    i32 18, label %380
    i32 19, label %385
  ], !dbg !7749

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7750
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %182, i16 noundef zeroext 10), !dbg !7750
  %183 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7751
  store i32 0, i32* %183, align 4, !dbg !7752, !tbaa !6679
  %184 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice13handleConnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8 noundef signext 3) #34, !dbg !7753
  br label %391, !dbg !7754

185:                                              ; preds = %177
  %186 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7755
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %186, i16 noundef zeroext 10), !dbg !7755
  %187 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7756
  store i32 1, i32* %187, align 4, !dbg !7757, !tbaa !6679
  %188 = load i8, i8* %29, align 2, !dbg !7758, !tbaa !6734
  %189 = or i8 %188, 32, !dbg !7758
  store i8 %189, i8* %29, align 2, !dbg !7758, !tbaa !6734
  %190 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7759, !tbaa !2286
  store i8* %190, i8** %145, align 8, !dbg !7760, !tbaa !6901
  store i8 4, i8* %178, align 2, !dbg !7761, !tbaa !7566
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.79, i32 0, i32 0)) #34, !dbg !7762
  br label %391, !dbg !7763

191:                                              ; preds = %177
  %192 = getelementptr inbounds [23 x i8], [23 x i8]* %3, i32 0, i32 0, !dbg !7764
  call void @llvm.lifetime.start.p0i8(i64 23, i8* nonnull %192) #34, !dbg !7764
  call void @llvm.dbg.declare(metadata [23 x i8]* %3, metadata !7538, metadata !DIExpression()), !dbg !7765
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(23) %192, i8* noundef nonnull align 1 dereferenceable(23) getelementptr inbounds ([23 x i8], [23 x i8]* @__const._ZN6Cicada17Sim7x00CommDevice3runEv.str.8, i32 0, i32 0), i32 23, i1 false), !dbg !7765
  %193 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7766, !tbaa !7082
  %194 = bitcast %"class.Cicada::IBufferedSerial"* %193 to i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)***, !dbg !7767
  %195 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*** %194, align 4, !dbg !7767, !tbaa !2121
  %196 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %195, i32 6, !dbg !7767
  %197 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %196, align 4, !dbg !7767
  %198 = call noundef i64 %197(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %193, i8* noundef nonnull %192, i64 noundef 22) #34, !dbg !7767
  %199 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7768, !tbaa !7082
  %200 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 1, !dbg !7769
  %201 = load i8*, i8** %200, align 8, !dbg !7769, !tbaa !7070
  %202 = call i32 @strlen(i8* noundef nonnull dereferenceable(1) %201), !dbg !7770
  %203 = zext i32 %202 to i64, !dbg !7770
  %204 = bitcast %"class.Cicada::IBufferedSerial"* %199 to i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)***, !dbg !7771
  %205 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*** %204, align 4, !dbg !7771, !tbaa !2121
  %206 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %205, i32 6, !dbg !7771
  %207 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %206, align 4, !dbg !7771
  %208 = call noundef i64 %207(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %199, i8* noundef %201, i64 noundef %203) #34, !dbg !7771
  %209 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7772, !tbaa !7082
  %210 = load i8*, i8** @_ZN6Cicada12ATCommDevice12_quoteEndStrE, align 4, !dbg !7773, !tbaa !2286
  %211 = bitcast %"class.Cicada::IBufferedSerial"* %209 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7774
  %212 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %211, align 4, !dbg !7774, !tbaa !2121
  %213 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %212, i32 8, !dbg !7774
  %214 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %213, align 4, !dbg !7774
  %215 = call noundef i64 %214(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %209, i8* noundef %210) #34, !dbg !7774
  %216 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7775, !tbaa !2286
  store i8* %216, i8** %145, align 8, !dbg !7776, !tbaa !6901
  store i8 5, i8* %178, align 2, !dbg !7777, !tbaa !7566
  call void @llvm.lifetime.end.p0i8(i64 23, i8* nonnull %192) #34, !dbg !7778
  br label %391

217:                                              ; preds = %177
  %218 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7779, !tbaa !2286
  store i8* %218, i8** %145, align 8, !dbg !7780, !tbaa !6901
  store i8 6, i8* %178, align 2, !dbg !7781, !tbaa !7566
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9.80, i32 0, i32 0)) #34, !dbg !7782
  br label %391, !dbg !7783

219:                                              ; preds = %177
  %220 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7784, !tbaa !2286
  store i8* %220, i8** %145, align 8, !dbg !7785, !tbaa !6901
  store i8 7, i8* %178, align 2, !dbg !7786, !tbaa !7566
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10.81, i32 0, i32 0)) #34, !dbg !7787
  br label %391, !dbg !7788

221:                                              ; preds = %177
  %222 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice16handleDisconnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8 noundef signext 20) #34, !dbg !7789
  br i1 %222, label %391, label %223, !dbg !7791

223:                                              ; preds = %221
  %224 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7792
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %224, i16 noundef zeroext 10), !dbg !7792
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11.82, i32 0, i32 0), i8** %145, align 8, !dbg !7793, !tbaa !6901
  store i8 8, i8* %178, align 2, !dbg !7794, !tbaa !7566
  store i8 4, i8* %149, align 1, !dbg !7795, !tbaa !7593
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12.83, i32 0, i32 0)) #34, !dbg !7796
  br label %391, !dbg !7797

225:                                              ; preds = %177
  %226 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7798, !tbaa !2286
  store i8* %226, i8** %145, align 8, !dbg !7799, !tbaa !6901
  store i8 9, i8* %178, align 2, !dbg !7800, !tbaa !7566
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13.84, i32 0, i32 0)) #34, !dbg !7801
  br label %391, !dbg !7802

227:                                              ; preds = %177
  %228 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice12sendDnsQueryEv(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68) #34, !dbg !7803
  br i1 %228, label %229, label %391, !dbg !7805

229:                                              ; preds = %227
  store i8 5, i8* %149, align 1, !dbg !7806, !tbaa !7593
  %230 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7808, !tbaa !2286
  store i8* %230, i8** %145, align 8, !dbg !7809, !tbaa !6901
  store i8 10, i8* %178, align 2, !dbg !7810, !tbaa !7566
  br label %391, !dbg !7811

231:                                              ; preds = %177
  %232 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0, !dbg !7812
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %232) #34, !dbg !7812
  call void @llvm.dbg.declare(metadata [6 x i8]* %4, metadata !7544, metadata !DIExpression()), !dbg !7813
  %233 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !7814
  %234 = load i16, i16* %233, align 8, !dbg !7814, !tbaa !6772
  %235 = zext i16 %234 to i32, !dbg !7814
  %236 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* noundef nonnull %232, i32 noundef 6, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14.85, i32 0, i32 0), i32 noundef %235), !dbg !7815
  %237 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7816, !tbaa !7082
  %238 = bitcast %"class.Cicada::IBufferedSerial"* %237 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7817
  %239 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %238, align 4, !dbg !7817, !tbaa !2121
  %240 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %239, i32 8, !dbg !7817
  %241 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %240, align 4, !dbg !7817
  %242 = call noundef i64 %241(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %237, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i32 0, i32 0)) #34, !dbg !7817
  %243 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7818
  %244 = load i32, i32* %243, align 8, !dbg !7818, !tbaa !6775
  %245 = icmp eq i32 %244, 0, !dbg !7820
  %246 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7821, !tbaa !7082
  %247 = bitcast %"class.Cicada::IBufferedSerial"* %246 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7821
  %248 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %247, align 4, !dbg !7821, !tbaa !2121
  %249 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %248, i32 8, !dbg !7821
  %250 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %249, align 4, !dbg !7821
  br i1 %245, label %251, label %253, !dbg !7822

251:                                              ; preds = %231
  %252 = call noundef i64 %250(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %246, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i32 0, i32 0)) #34, !dbg !7823
  br label %268, !dbg !7825

253:                                              ; preds = %231
  %254 = call noundef i64 %250(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %246, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i32 0, i32 0)) #34, !dbg !7826
  %255 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7828, !tbaa !7082
  %256 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7829
  %257 = bitcast %"class.Cicada::IBufferedSerial"* %255 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7830
  %258 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %257, align 4, !dbg !7830, !tbaa !2121
  %259 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %258, i32 8, !dbg !7830
  %260 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %259, align 4, !dbg !7830
  %261 = call noundef i64 %260(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %255, i8* noundef nonnull %256) #34, !dbg !7830
  %262 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7831, !tbaa !7082
  %263 = bitcast %"class.Cicada::IBufferedSerial"* %262 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7832
  %264 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %263, align 4, !dbg !7832, !tbaa !2121
  %265 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %264, i32 8, !dbg !7832
  %266 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %265, align 4, !dbg !7832
  %267 = call noundef i64 %266(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %262, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i32 0, i32 0)) #34, !dbg !7832
  br label %268

268:                                              ; preds = %253, %251
  %269 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7833, !tbaa !7082
  %270 = bitcast %"class.Cicada::IBufferedSerial"* %269 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7834
  %271 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %270, align 4, !dbg !7834, !tbaa !2121
  %272 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %271, i32 8, !dbg !7834
  %273 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %272, align 4, !dbg !7834
  %274 = call noundef i64 %273(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %269, i8* noundef nonnull %232) #34, !dbg !7834
  %275 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7835, !tbaa !7082
  %276 = load i8*, i8** @_ZN6Cicada12ATCommDevice11_lineEndStrE, align 4, !dbg !7836, !tbaa !2286
  %277 = bitcast %"class.Cicada::IBufferedSerial"* %275 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7837
  %278 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %277, align 4, !dbg !7837, !tbaa !2121
  %279 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %278, i32 8, !dbg !7837
  %280 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %279, align 4, !dbg !7837
  %281 = call noundef i64 %280(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %275, i8* noundef %276) #34, !dbg !7837
  store i8 6, i8* %149, align 1, !dbg !7838, !tbaa !7593
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i32 0, i32 0), i8** %145, align 8, !dbg !7839, !tbaa !6901
  store i8 11, i8* %178, align 2, !dbg !7840, !tbaa !7566
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %232) #34, !dbg !7841
  br label %391

282:                                              ; preds = %177
  %283 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7842
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %283, i16 noundef zeroext 0), !dbg !7842
  %284 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7843
  store i32 2, i32* %284, align 4, !dbg !7844, !tbaa !6679
  store i8 0, i8* %149, align 1, !dbg !7845, !tbaa !7593
  store i8 12, i8* %178, align 2, !dbg !7846, !tbaa !7566
  %285 = load i8, i8* %29, align 2, !dbg !7847, !tbaa !6734
  %286 = or i8 %285, 16, !dbg !7847
  store i8 %286, i8* %29, align 2, !dbg !7847, !tbaa !6734
  br label %391, !dbg !7848

287:                                              ; preds = %177
  %288 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7849
  %289 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %288), !dbg !7850
  %290 = icmp eq i64 %289, 0, !dbg !7849
  br i1 %290, label %337, label %291, !dbg !7851

291:                                              ; preds = %287
  %292 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice14prepareSendingEb(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i1 noundef zeroext true) #34, !dbg !7852
  br i1 %292, label %293, label %391, !dbg !7853

293:                                              ; preds = %291
  %294 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7854
  %295 = load i32, i32* %294, align 8, !dbg !7854, !tbaa !6775
  %296 = icmp eq i32 %295, 0, !dbg !7855
  br i1 %296, label %297, label %328, !dbg !7856

297:                                              ; preds = %293
  %298 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7857, !tbaa !7082
  %299 = bitcast %"class.Cicada::IBufferedSerial"* %298 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7858
  %300 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %299, align 4, !dbg !7858, !tbaa !2121
  %301 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %300, i32 8, !dbg !7858
  %302 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %301, align 4, !dbg !7858
  %303 = call noundef i64 %302(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %298, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i32 0, i32 0)) #34, !dbg !7858
  %304 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7859, !tbaa !7082
  %305 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7860
  %306 = bitcast %"class.Cicada::IBufferedSerial"* %304 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7861
  %307 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %306, align 4, !dbg !7861, !tbaa !2121
  %308 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %307, i32 8, !dbg !7861
  %309 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %308, align 4, !dbg !7861
  %310 = call noundef i64 %309(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %304, i8* noundef nonnull %305) #34, !dbg !7861
  %311 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7862, !tbaa !7082
  %312 = bitcast %"class.Cicada::IBufferedSerial"* %311 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7863
  %313 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %312, align 4, !dbg !7863, !tbaa !2121
  %314 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %313, i32 8, !dbg !7863
  %315 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %314, align 4, !dbg !7863
  %316 = call noundef i64 %315(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %311, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i32 0, i32 0)) #34, !dbg !7863
  %317 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i32 0, i32 0, !dbg !7864
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %317) #34, !dbg !7864
  call void @llvm.dbg.declare(metadata [6 x i8]* %5, metadata !7546, metadata !DIExpression()), !dbg !7865
  %318 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !7866
  %319 = load i16, i16* %318, align 8, !dbg !7866, !tbaa !6772
  %320 = zext i16 %319 to i32, !dbg !7866
  %321 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* noundef nonnull %317, i32 noundef 6, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14.85, i32 0, i32 0), i32 noundef %320), !dbg !7867
  %322 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7868, !tbaa !7082
  %323 = bitcast %"class.Cicada::IBufferedSerial"* %322 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7869
  %324 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %323, align 4, !dbg !7869, !tbaa !2121
  %325 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %324, i32 8, !dbg !7869
  %326 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %325, align 4, !dbg !7869
  %327 = call noundef i64 %326(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %322, i8* noundef nonnull %317) #34, !dbg !7869
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %317) #34, !dbg !7870
  br label %328, !dbg !7871

328:                                              ; preds = %297, %293
  %329 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !7872, !tbaa !7082
  %330 = load i8*, i8** @_ZN6Cicada12ATCommDevice11_lineEndStrE, align 4, !dbg !7873, !tbaa !2286
  %331 = bitcast %"class.Cicada::IBufferedSerial"* %329 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !7874
  %332 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %331, align 4, !dbg !7874, !tbaa !2121
  %333 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %332, i32 8, !dbg !7874
  %334 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %333, align 4, !dbg !7874
  %335 = call noundef i64 %334(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %329, i8* noundef %330) #34, !dbg !7874
  %336 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7875
  store i32 3, i32* %336, align 4, !dbg !7876, !tbaa !6679
  store i8 13, i8* %178, align 2, !dbg !7877, !tbaa !7566
  br label %391, !dbg !7878

337:                                              ; preds = %287
  %338 = load i8, i8* %29, align 2, !dbg !7879, !tbaa !6734
  %339 = and i8 %338, 4, !dbg !7881
  %340 = icmp eq i8 %339, 0, !dbg !7879
  br i1 %340, label %344, label %341, !dbg !7882

341:                                              ; preds = %337
  %342 = and i8 %338, -5, !dbg !7883
  store i8 %342, i8* %29, align 2, !dbg !7883, !tbaa !6734
  %343 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7885
  store i32 4, i32* %343, align 4, !dbg !7886, !tbaa !6679
  store i8 14, i8* %178, align 2, !dbg !7887, !tbaa !7566
  br label %391, !dbg !7888

344:                                              ; preds = %337
  %345 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7889
  store i32 2, i32* %345, align 4, !dbg !7891, !tbaa !6679
  %346 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice16handleDisconnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8 noundef signext 19) #34, !dbg !7892
  br label %391

347:                                              ; preds = %177
  call void @_ZN6Cicada12ATCommDevice8sendDataEv(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6) #34, !dbg !7893
  %348 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7894, !tbaa !2286
  store i8* %348, i8** %145, align 8, !dbg !7895, !tbaa !6901
  store i8 12, i8* %178, align 2, !dbg !7896, !tbaa !7566
  br label %391, !dbg !7897

349:                                              ; preds = %177
  %350 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7898, !tbaa !2286
  store i8* %350, i8** %145, align 8, !dbg !7899, !tbaa !6901
  store i8 15, i8* %178, align 2, !dbg !7900, !tbaa !7566
  store i8 7, i8* %149, align 1, !dbg !7901, !tbaa !7593
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i32 0, i32 0)) #34, !dbg !7902
  br label %391, !dbg !7903

351:                                              ; preds = %177
  %352 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice16handleDisconnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8 noundef signext 19) #34, !dbg !7904
  br i1 %352, label %391, label %353, !dbg !7906

353:                                              ; preds = %351
  %354 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !7907
  %355 = load i64, i64* %354, align 8, !dbg !7907, !tbaa !7275
  %356 = icmp eq i64 %355, 0, !dbg !7909
  br i1 %356, label %360, label %357, !dbg !7910

357:                                              ; preds = %353
  %358 = call noundef zeroext i1 @_ZN6Cicada13SimCommDevice13sendCiprxget2Ev(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %68) #34, !dbg !7911
  br i1 %358, label %359, label %391, !dbg !7914

359:                                              ; preds = %357
  store i8 16, i8* %178, align 2, !dbg !7915, !tbaa !7566
  store i8 8, i8* %149, align 1, !dbg !7917, !tbaa !7593
  br label %391, !dbg !7918

360:                                              ; preds = %353
  %361 = load i8, i8* %29, align 2, !dbg !7919, !tbaa !6734
  %362 = and i8 %361, 16, !dbg !7921
  %363 = icmp eq i8 %362, 0, !dbg !7919
  br i1 %363, label %365, label %364, !dbg !7922

364:                                              ; preds = %360
  store i8 12, i8* %178, align 2, !dbg !7923, !tbaa !7566
  br label %391, !dbg !7925

365:                                              ; preds = %360
  store i8 18, i8* %178, align 2, !dbg !7926, !tbaa !7566
  br label %391

366:                                              ; preds = %177
  %367 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 8, !dbg !7928
  %368 = load i64, i64* %367, align 8, !dbg !7928, !tbaa !7298
  %369 = icmp eq i64 %368, 0, !dbg !7930
  br i1 %369, label %374, label %370, !dbg !7931

370:                                              ; preds = %366
  %371 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice7receiveEv(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6) #34, !dbg !7932
  br i1 %371, label %372, label %391, !dbg !7935

372:                                              ; preds = %370
  store i8 0, i8* %149, align 1, !dbg !7936, !tbaa !7593
  %373 = load i8*, i8** @_ZN6Cicada12ATCommDevice6_okStrE, align 4, !dbg !7938, !tbaa !2286
  store i8* %373, i8** %145, align 8, !dbg !7939, !tbaa !6901
  br label %391, !dbg !7940

374:                                              ; preds = %366
  %375 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 7, !dbg !7941
  %376 = load i64, i64* %375, align 8, !dbg !7941, !tbaa !7275
  %377 = icmp eq i64 %376, 0, !dbg !7943
  br i1 %377, label %379, label %378, !dbg !7944

378:                                              ; preds = %374
  store i8 15, i8* %178, align 2, !dbg !7945, !tbaa !7566
  br label %391, !dbg !7947

379:                                              ; preds = %374
  store i8 14, i8* %178, align 2, !dbg !7948, !tbaa !7566
  br label %391

380:                                              ; preds = %177
  %381 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7950
  store i32 1, i32* %381, align 4, !dbg !7951, !tbaa !6679
  %382 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice16handleDisconnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8 noundef signext 19) #34, !dbg !7952
  br i1 %382, label %391, label %383, !dbg !7954

383:                                              ; preds = %380
  %384 = call noundef zeroext i1 @_ZN6Cicada12ATCommDevice13handleConnectEa(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8 noundef signext 10) #34, !dbg !7955
  br label %391, !dbg !7956

385:                                              ; preds = %177
  %386 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7957
  store i32 1, i32* %386, align 4, !dbg !7958, !tbaa !6679
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i32 0, i32 0), i8** %145, align 8, !dbg !7959, !tbaa !6901
  store i8 20, i8* %178, align 2, !dbg !7960, !tbaa !7566
  call void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %6, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i32 0, i32 0)) #34, !dbg !7961
  br label %391, !dbg !7962

387:                                              ; preds = %177
  %388 = load i8, i8* %29, align 2, !dbg !7963, !tbaa !6734
  %389 = and i8 %388, -17, !dbg !7963
  store i8 %389, i8* %29, align 2, !dbg !7963, !tbaa !6734
  %390 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7964
  store i32 0, i32* %390, align 4, !dbg !7965, !tbaa !6679
  store i8 0, i8* %178, align 2, !dbg !7966, !tbaa !7566
  br label %391, !dbg !7967

391:                                              ; preds = %87, %102, %169, %175, %148, %144, %152, %177, %380, %372, %370, %379, %378, %359, %357, %365, %364, %351, %328, %291, %344, %341, %227, %229, %221, %387, %385, %383, %349, %347, %282, %268, %225, %223, %219, %217, %191, %185, %181, %28, %17, %26, %37
  ret void, !dbg !7968
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::Sim7x00CommDevice"* @_ZThn4_N6Cicada17Sim7x00CommDeviceD1Ev(%"class.Cicada::Sim7x00CommDevice"* noundef %0) unnamed_addr #9 comdat align 2 !dbg !7969 {
  %2 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 -1, i32 2, i32 0, !dbg !7970
  %3 = bitcast i8* %2 to %"class.Cicada::IPCommDevice"*, !dbg !7970
  %4 = tail call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceD2Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(284) %3) #34, !dbg !7970
  ret %"class.Cicada::Sim7x00CommDevice"* undef, !dbg !7970
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada17Sim7x00CommDeviceD0Ev(%"class.Cicada::Sim7x00CommDevice"* noundef %0) unnamed_addr #9 comdat align 2 !dbg !7971 {
  %2 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 -1, i32 2, i32 0, !dbg !7972
  %3 = bitcast i8* %2 to %"class.Cicada::Sim7x00CommDevice"*, !dbg !7972
  tail call void @_ZN6Cicada17Sim7x00CommDeviceD0Ev(%"class.Cicada::Sim7x00CommDevice"* noundef nonnull align 8 dereferenceable(284) %3) #34, !dbg !7972
  ret void, !dbg !7972
}

; Function Attrs: noinline nounwind
define dso_local void @_ZThn4_N6Cicada17Sim7x00CommDevice3runEv(%"class.Cicada::Sim7x00CommDevice"* noundef %0) unnamed_addr #9 align 2 !dbg !7973 {
  %2 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 -1, i32 2, i32 0, !dbg !7974
  %3 = bitcast i8* %2 to %"class.Cicada::Sim7x00CommDevice"*, !dbg !7974
  tail call void @_ZN6Cicada17Sim7x00CommDevice3runEv(%"class.Cicada::Sim7x00CommDevice"* noundef nonnull align 8 dereferenceable(284) %3), !dbg !7974
  ret void, !dbg !7974
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %0, i16 noundef zeroext %1) local_unnamed_addr #2 comdat align 2 !dbg !7975 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !7977, metadata !DIExpression()), !dbg !7979
  call void @llvm.dbg.value(metadata i16 %1, metadata !7978, metadata !DIExpression()), !dbg !7979
  %3 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 1, !dbg !7980
  store i16 %1, i16* %3, align 4, !dbg !7981, !tbaa !2137
  ret void, !dbg !7982
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @snprintf(i8* noalias nocapture noundef writeonly, i32 noundef, i8* nocapture noundef readonly, ...) local_unnamed_addr #29

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::Sim7x00CommDevice"* @_ZN6Cicada17Sim7x00CommDeviceC2ERNS_15IBufferedSerialEPhS3_y(%"class.Cicada::Sim7x00CommDevice"* noundef nonnull returned align 8 dereferenceable(284) %0, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4) unnamed_addr #9 align 2 !dbg !7983 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Sim7x00CommDevice"* %0, metadata !7985, metadata !DIExpression()), !dbg !7990
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %1, metadata !7986, metadata !DIExpression()), !dbg !7990
  call void @llvm.dbg.value(metadata i8* %2, metadata !7987, metadata !DIExpression()), !dbg !7990
  call void @llvm.dbg.value(metadata i8* %3, metadata !7988, metadata !DIExpression()), !dbg !7990
  call void @llvm.dbg.value(metadata i64 %4, metadata !7989, metadata !DIExpression()), !dbg !7990
  %6 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, !dbg !7991
  %7 = call noundef %"class.Cicada::SimCommDevice"* @_ZN6Cicada13SimCommDeviceC2ERNS_15IBufferedSerialEPhS3_y(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %6, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4) #34, !dbg !7992
  %8 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7991
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTVN6Cicada17Sim7x00CommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %8, align 8, !dbg !7991, !tbaa !2121
  %9 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !7991
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTVN6Cicada17Sim7x00CommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %9, align 4, !dbg !7991, !tbaa !2121
  %10 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 1, !dbg !7993
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.86, i32 0, i32 0), i8** %10, align 8, !dbg !7993, !tbaa !7739
  %11 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 5, !dbg !7995
  store i16 1500, i16* %11, align 2, !dbg !7998, !tbaa !7424
  ret %"class.Cicada::Sim7x00CommDevice"* %0, !dbg !7999
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::Sim7x00CommDevice"* @_ZN6Cicada17Sim7x00CommDeviceC2ERNS_15IBufferedSerialEPhS3_yy(%"class.Cicada::Sim7x00CommDevice"* noundef nonnull returned align 8 dereferenceable(284) %0, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4, i64 noundef %5) unnamed_addr #9 align 2 !dbg !8000 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Sim7x00CommDevice"* %0, metadata !8002, metadata !DIExpression()), !dbg !8008
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %1, metadata !8003, metadata !DIExpression()), !dbg !8008
  call void @llvm.dbg.value(metadata i8* %2, metadata !8004, metadata !DIExpression()), !dbg !8008
  call void @llvm.dbg.value(metadata i8* %3, metadata !8005, metadata !DIExpression()), !dbg !8008
  call void @llvm.dbg.value(metadata i64 %4, metadata !8006, metadata !DIExpression()), !dbg !8008
  call void @llvm.dbg.value(metadata i64 %5, metadata !8007, metadata !DIExpression()), !dbg !8008
  %7 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, !dbg !8009
  %8 = call noundef %"class.Cicada::SimCommDevice"* @_ZN6Cicada13SimCommDeviceC2ERNS_15IBufferedSerialEPhS3_yy(%"class.Cicada::SimCommDevice"* noundef nonnull align 8 dereferenceable(280) %7, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4, i64 noundef %5) #34, !dbg !8010
  %9 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8009
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTVN6Cicada17Sim7x00CommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8, !dbg !8009, !tbaa !2121
  %10 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !8009
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTVN6Cicada17Sim7x00CommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %10, align 4, !dbg !8009, !tbaa !2121
  %11 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 1, !dbg !8011
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.86, i32 0, i32 0), i8** %11, align 8, !dbg !8011, !tbaa !7739
  %12 = getelementptr inbounds %"class.Cicada::Sim7x00CommDevice", %"class.Cicada::Sim7x00CommDevice"* %0, i32 0, i32 0, i32 5, !dbg !8013
  store i16 1500, i16* %12, align 2, !dbg !8016, !tbaa !7424
  ret %"class.Cicada::Sim7x00CommDevice"* %0, !dbg !8017
}

; Function Attrs: noinline nounwind
define dso_local noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD2Ev(%"class.Cicada::Stm32Uart"* noundef nonnull returned align 8 dereferenceable(192) %0) unnamed_addr #9 align 2 !dbg !8018 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !8020, metadata !DIExpression()), !dbg !8021
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8022
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %2, align 8, !dbg !8022, !tbaa !2121
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !8022
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %3, align 4, !dbg !8022, !tbaa !2121
  %4 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !8023
  %5 = load i8, i8* %4, align 8, !dbg !8023, !tbaa !8026
  %6 = and i8 %5, 1, !dbg !8033
  %7 = icmp eq i8 %6, 0, !dbg !8023
  br i1 %7, label %13, label %8, !dbg !8034

8:                                                ; preds = %1
  %9 = bitcast %"class.Cicada::Stm32Uart"* %0 to void (%"class.Cicada::Stm32Uart"*)***, !dbg !8035
  %10 = load void (%"class.Cicada::Stm32Uart"*)**, void (%"class.Cicada::Stm32Uart"*)*** %9, align 8, !dbg !8035, !tbaa !2121
  %11 = getelementptr inbounds void (%"class.Cicada::Stm32Uart"*)*, void (%"class.Cicada::Stm32Uart"*)** %10, i32 19, !dbg !8035
  %12 = load void (%"class.Cicada::Stm32Uart"*)*, void (%"class.Cicada::Stm32Uart"*)** %11, align 4, !dbg !8035
  call void %12(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) #34, !dbg !8035
  br label %13, !dbg !8035

13:                                               ; preds = %8, %1
  %14 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, !dbg !8036
  %15 = call noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialD2Ev(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %14) #34, !dbg !8036
  ret %"class.Cicada::Stm32Uart"* %0, !dbg !8037
}

; Function Attrs: noinline nounwind
define dso_local void @_ZN6Cicada9Stm32UartD0Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #9 align 2 !dbg !8038 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !8040, metadata !DIExpression()), !dbg !8041
  %2 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD2Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) #34, !dbg !8042
  %3 = bitcast %"class.Cicada::Stm32Uart"* %0 to i8*, !dbg !8042
  call void @_ZdlPv(i8* noundef %3) #37, !dbg !8042
  ret void, !dbg !8043
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZNK6Cicada9Stm32Uart20writeBufferProcessedEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #2 align 2 !dbg !8044 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !8046, metadata !DIExpression()), !dbg !8048
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 2, !dbg !8049
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer.0"*, !dbg !8049
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !8050
  %5 = icmp eq i64 %4, 0, !dbg !8051
  br i1 %5, label %6, label %13, !dbg !8052

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !8053
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !8053, !tbaa !8054
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 0, !dbg !8053
  %10 = load volatile i32, i32* %9, align 4, !dbg !8053, !tbaa !8055
  %11 = and i32 %10, 64, !dbg !8053
  %12 = icmp ne i32 %11, 0, !dbg !8053
  br label %13

13:                                               ; preds = %6, %1
  %14 = phi i1 [ false, %1 ], [ %12, %6 ], !dbg !8048
  ret i1 %14, !dbg !8057
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #2 align 2 !dbg !8058 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !8060, metadata !DIExpression()), !dbg !8061
  %2 = bitcast %"class.Cicada::Stm32Uart"* %0 to i1 (%"class.Cicada::Stm32Uart"*, i8)***, !dbg !8062
  %3 = load i1 (%"class.Cicada::Stm32Uart"*, i8)**, i1 (%"class.Cicada::Stm32Uart"*, i8)*** %2, align 8, !dbg !8062, !tbaa !2121
  %4 = getelementptr inbounds i1 (%"class.Cicada::Stm32Uart"*, i8)*, i1 (%"class.Cicada::Stm32Uart"*, i8)** %3, i32 16, !dbg !8062
  %5 = load i1 (%"class.Cicada::Stm32Uart"*, i8)*, i1 (%"class.Cicada::Stm32Uart"*, i8)** %4, align 4, !dbg !8062
  %6 = call noundef zeroext i1 %5(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, i8 noundef zeroext 15) #34, !dbg !8062
  ret i1 %6, !dbg !8063
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEh(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, i8 noundef zeroext %1) unnamed_addr #2 align 2 !dbg !8064 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.DMA_Channel_TypeDef, align 4
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !8066, metadata !DIExpression()), !dbg !8110
  call void @llvm.dbg.value(metadata i8 %1, metadata !8067, metadata !DIExpression()), !dbg !8110
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, !dbg !8111
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %12, i32 0, i32 0, !dbg !8112
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %13, align 4, !dbg !8112, !tbaa !8054
  %15 = ptrtoint %struct.USART_TypeDef* %14 to i32, !dbg !8113
  switch i32 %15, label %123 [
    i32 1073821696, label %16
    i32 1073759232, label %26
    i32 1073760256, label %34
  ], !dbg !8113

16:                                               ; preds = %2
  %17 = load volatile i32, i32* inttoptr (i32 1073807364 to i32*), align 4, !dbg !8114, !tbaa !8115
  call void @llvm.dbg.value(metadata i32 %17, metadata !8068, metadata !DIExpression()), !dbg !8117
  call void @llvm.dbg.value(metadata i32 %17, metadata !8068, metadata !DIExpression(DW_OP_constu, 117440512, DW_OP_or, DW_OP_stack_value)), !dbg !8117
  %18 = or i32 %17, 117440516, !dbg !8114
  call void @llvm.dbg.value(metadata i32 %18, metadata !8068, metadata !DIExpression()), !dbg !8117
  store volatile i32 %18, i32* inttoptr (i32 1073807364 to i32*), align 4, !dbg !8114, !tbaa !8115
  %19 = bitcast i32* %3 to i8*, !dbg !8118
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19), !dbg !8118
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8072, metadata !DIExpression()), !dbg !8118
  %20 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !8118, !tbaa !8119
  %21 = or i32 %20, 16384, !dbg !8118
  store volatile i32 %21, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !8118, !tbaa !8119
  %22 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !8118, !tbaa !8119
  %23 = and i32 %22, 16384, !dbg !8118
  store volatile i32 %23, i32* %3, align 4, !dbg !8118, !tbaa !2216
  %24 = load volatile i32, i32* %3, align 4, !dbg !8118, !tbaa !2216
  %25 = bitcast i32* %3 to i8*, !dbg !8121
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25), !dbg !8121
  br label %42, !dbg !8122

26:                                               ; preds = %2
  %27 = bitcast i32* %4 to i8*, !dbg !8123
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27), !dbg !8123
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8074, metadata !DIExpression()), !dbg !8123
  %28 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !8123, !tbaa !8124
  %29 = or i32 %28, 131072, !dbg !8123
  store volatile i32 %29, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !8123, !tbaa !8124
  %30 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !8123, !tbaa !8124
  %31 = and i32 %30, 131072, !dbg !8123
  store volatile i32 %31, i32* %4, align 4, !dbg !8123, !tbaa !2216
  %32 = load volatile i32, i32* %4, align 4, !dbg !8123, !tbaa !2216
  %33 = bitcast i32* %4 to i8*, !dbg !8125
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33), !dbg !8125
  br label %42, !dbg !8126

34:                                               ; preds = %2
  %35 = bitcast i32* %5 to i8*, !dbg !8127
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35), !dbg !8127
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8078, metadata !DIExpression()), !dbg !8127
  %36 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !8127, !tbaa !8124
  %37 = or i32 %36, 262144, !dbg !8127
  store volatile i32 %37, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !8127, !tbaa !8124
  %38 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !8127, !tbaa !8124
  %39 = and i32 %38, 262144, !dbg !8127
  store volatile i32 %39, i32* %5, align 4, !dbg !8127, !tbaa !2216
  %40 = load volatile i32, i32* %5, align 4, !dbg !8127, !tbaa !2216
  %41 = bitcast i32* %5 to i8*, !dbg !8128
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41), !dbg !8128
  br label %42

42:                                               ; preds = %26, %34, %16
  %43 = phi i32 [ 38, %26 ], [ 39, %34 ], [ 37, %16 ]
  %44 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !8129
  store i32 %43, i32* %44, align 4, !dbg !8129, !tbaa !8130
  %45 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 3, !dbg !8131
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %45, align 4, !dbg !8131, !tbaa !8132
  %47 = ptrtoint %struct.USART_TypeDef* %46 to i32, !dbg !8133
  %48 = add i32 %47, -1073809408, !dbg !8133
  %49 = call i32 @llvm.fshl.i32(i32 %48, i32 %48, i32 22), !dbg !8133
  switch i32 %49, label %90 [
    i32 0, label %50
    i32 1, label %58
    i32 2, label %66
    i32 3, label %74
    i32 4, label %82
  ], !dbg !8133

50:                                               ; preds = %42
  %51 = bitcast i32* %6 to i8*, !dbg !8134
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51), !dbg !8134
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8082, metadata !DIExpression()), !dbg !8134
  %52 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !8134, !tbaa !8119
  %53 = or i32 %52, 4, !dbg !8134
  store volatile i32 %53, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !8134, !tbaa !8119
  %54 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !8134, !tbaa !8119
  %55 = and i32 %54, 4, !dbg !8134
  store volatile i32 %55, i32* %6, align 4, !dbg !8134, !tbaa !2216
  %56 = load volatile i32, i32* %6, align 4, !dbg !8134, !tbaa !2216
  %57 = bitcast i32* %6 to i8*, !dbg !8135
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57), !dbg !8135
  br label %90, !dbg !8136

58:                                               ; preds = %42
  %59 = bitcast i32* %7 to i8*, !dbg !8137
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59), !dbg !8137
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8086, metadata !DIExpression()), !dbg !8137
  %60 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !8137, !tbaa !8119
  %61 = or i32 %60, 8, !dbg !8137
  store volatile i32 %61, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !8137, !tbaa !8119
  %62 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !8137, !tbaa !8119
  %63 = and i32 %62, 8, !dbg !8137
  store volatile i32 %63, i32* %7, align 4, !dbg !8137, !tbaa !2216
  %64 = load volatile i32, i32* %7, align 4, !dbg !8137, !tbaa !2216
  %65 = bitcast i32* %7 to i8*, !dbg !8138
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65), !dbg !8138
  br label %90, !dbg !8139

66:                                               ; preds = %42
  %67 = bitcast i32* %8 to i8*, !dbg !8140
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67), !dbg !8140
  call void @llvm.dbg.declare(metadata i32* %8, metadata !8090, metadata !DIExpression()), !dbg !8140
  %68 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !8140, !tbaa !8119
  %69 = or i32 %68, 16, !dbg !8140
  store volatile i32 %69, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !8140, !tbaa !8119
  %70 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !8140, !tbaa !8119
  %71 = and i32 %70, 16, !dbg !8140
  store volatile i32 %71, i32* %8, align 4, !dbg !8140, !tbaa !2216
  %72 = load volatile i32, i32* %8, align 4, !dbg !8140, !tbaa !2216
  %73 = bitcast i32* %8 to i8*, !dbg !8141
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73), !dbg !8141
  br label %90, !dbg !8142

74:                                               ; preds = %42
  %75 = bitcast i32* %9 to i8*, !dbg !8143
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75), !dbg !8143
  call void @llvm.dbg.declare(metadata i32* %9, metadata !8094, metadata !DIExpression()), !dbg !8143
  %76 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !8143, !tbaa !8119
  %77 = or i32 %76, 32, !dbg !8143
  store volatile i32 %77, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !8143, !tbaa !8119
  %78 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !8143, !tbaa !8119
  %79 = and i32 %78, 32, !dbg !8143
  store volatile i32 %79, i32* %9, align 4, !dbg !8143, !tbaa !2216
  %80 = load volatile i32, i32* %9, align 4, !dbg !8143, !tbaa !2216
  %81 = bitcast i32* %9 to i8*, !dbg !8144
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %81), !dbg !8144
  br label %90, !dbg !8145

82:                                               ; preds = %42
  %83 = bitcast i32* %10 to i8*, !dbg !8146
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83), !dbg !8146
  call void @llvm.dbg.declare(metadata i32* %10, metadata !8098, metadata !DIExpression()), !dbg !8146
  %84 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !8146, !tbaa !8119
  %85 = or i32 %84, 64, !dbg !8146
  store volatile i32 %85, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !8146, !tbaa !8119
  %86 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !8146, !tbaa !8119
  %87 = and i32 %86, 64, !dbg !8146
  store volatile i32 %87, i32* %10, align 4, !dbg !8146, !tbaa !2216
  %88 = load volatile i32, i32* %10, align 4, !dbg !8146, !tbaa !2216
  %89 = bitcast i32* %10 to i8*, !dbg !8147
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89), !dbg !8147
  br label %90, !dbg !8148

90:                                               ; preds = %42, %58, %74, %82, %66, %50
  %91 = bitcast %struct.DMA_Channel_TypeDef* %11 to i8*, !dbg !8149
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #34, !dbg !8149
  call void @llvm.dbg.declare(metadata %struct.DMA_Channel_TypeDef* %11, metadata !8102, metadata !DIExpression()), !dbg !8150
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(16) %91, i8 0, i32 16, i1 false), !dbg !8150
  %92 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 4, !dbg !8151
  %93 = load i16, i16* %92, align 8, !dbg !8151, !tbaa !8152
  %94 = zext i16 %93 to i32, !dbg !8151
  %95 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %11, i32 0, i32 0, !dbg !8153
  store i32 %94, i32* %95, align 4, !dbg !8154, !tbaa !8155
  %96 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %11, i32 0, i32 1, !dbg !8157
  store i32 2, i32* %96, align 4, !dbg !8158, !tbaa !8159
  %97 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %11, i32 0, i32 2, !dbg !8160
  store i32 0, i32* %97, align 4, !dbg !8161, !tbaa !8162
  %98 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %11, i32 0, i32 3, !dbg !8163
  store i32 3, i32* %98, align 4, !dbg !8164, !tbaa !8165
  call void @HAL_GPIO_Init(%struct.USART_TypeDef* noundef %46, %struct.DMA_Channel_TypeDef* noundef nonnull %11) #34, !dbg !8166
  %99 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 5, !dbg !8167
  %100 = load i16, i16* %99, align 2, !dbg !8167, !tbaa !8168
  %101 = zext i16 %100 to i32, !dbg !8167
  store i32 %101, i32* %95, align 4, !dbg !8169, !tbaa !8155
  store i32 0, i32* %96, align 4, !dbg !8170, !tbaa !8159
  %102 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %45, align 4, !dbg !8171, !tbaa !8132
  call void @HAL_GPIO_Init(%struct.USART_TypeDef* noundef %102, %struct.DMA_Channel_TypeDef* noundef nonnull %11) #34, !dbg !8172
  %103 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 2, !dbg !8173
  store i32 0, i32* %103, align 8, !dbg !8174, !tbaa !8175
  %104 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 3, !dbg !8176
  store i32 0, i32* %104, align 4, !dbg !8177, !tbaa !8178
  %105 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 4, !dbg !8179
  store i32 12, i32* %105, align 8, !dbg !8180, !tbaa !8181
  %106 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 5, !dbg !8182
  store i32 0, i32* %106, align 4, !dbg !8183, !tbaa !8184
  %107 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 6, !dbg !8185
  store i32 0, i32* %107, align 8, !dbg !8186, !tbaa !8187
  %108 = call i32 @HAL_UART_Init(%struct.__UART_HandleTypeDef* noundef nonnull %12) #34, !dbg !8188
  %109 = icmp eq i32 %108, 0, !dbg !8190
  br i1 %109, label %110, label %122, !dbg !8191

110:                                              ; preds = %90
  %111 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !8192
  %112 = load i32, i32* %111, align 4, !dbg !8192, !tbaa !8130
  %113 = zext i8 %1 to i32, !dbg !8193
  call fastcc void @_ZL18__NVIC_SetPriority9IRQn_Typej(i32 noundef %112, i32 noundef %113), !dbg !8194
  %114 = load i32, i32* %111, align 4, !dbg !8195, !tbaa !8130
  call fastcc void @_ZL16__NVIC_EnableIRQ9IRQn_Type(i32 noundef %114), !dbg !8196
  %115 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %13, align 4, !dbg !8197, !tbaa !8054
  %116 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %115, i32 0, i32 3, !dbg !8197
  %117 = load volatile i32, i32* %116, align 4, !dbg !8197, !tbaa !8198
  %118 = or i32 %117, 32, !dbg !8197
  store volatile i32 %118, i32* %116, align 4, !dbg !8197, !tbaa !8198
  %119 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !8199
  %120 = load i8, i8* %119, align 8, !dbg !8200, !tbaa !8026
  %121 = or i8 %120, 1, !dbg !8200
  store i8 %121, i8* %119, align 8, !dbg !8200, !tbaa !8026
  br label %122, !dbg !8201

122:                                              ; preds = %90, %110
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #34, !dbg !8202
  br label %123

123:                                              ; preds = %2, %122
  %124 = phi i1 [ %109, %122 ], [ false, %2 ], !dbg !8110
  ret i1 %124, !dbg !8202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart6isOpenEv(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull readonly align 8 dereferenceable(192) %0) unnamed_addr #16 align 2 !dbg !8203 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !8205, metadata !DIExpression()), !dbg !8206
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !8207
  %3 = load i8, i8* %2, align 8, !dbg !8207, !tbaa !8026
  %4 = and i8 %3, 1, !dbg !8208
  %5 = icmp ne i8 %4, 0, !dbg !8207
  ret i1 %5, !dbg !8209
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart15setSerialConfigEjh(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull writeonly align 8 dereferenceable(192) %0, i32 noundef %1, i8 noundef zeroext %2) unnamed_addr #7 align 2 !dbg !8210 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !8212, metadata !DIExpression()), !dbg !8215
  call void @llvm.dbg.value(metadata i32 %1, metadata !8213, metadata !DIExpression()), !dbg !8215
  call void @llvm.dbg.value(metadata i8 %2, metadata !8214, metadata !DIExpression()), !dbg !8215
  %4 = add i32 %1, -4500001, !dbg !8216
  %5 = icmp ult i32 %4, -4499951, !dbg !8216
  br i1 %5, label %12, label %6, !dbg !8216

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 0, !dbg !8218
  store i32 %1, i32* %7, align 8, !dbg !8219, !tbaa !8220
  switch i8 %2, label %12 [
    i8 8, label %9
    i8 9, label %8
  ], !dbg !8221

8:                                                ; preds = %6
  br label %9, !dbg !8222

9:                                                ; preds = %6, %8
  %10 = phi i32 [ 4096, %8 ], [ 0, %6 ]
  %11 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 1, !dbg !8224
  store i32 %10, i32* %11, align 4, !dbg !8224, !tbaa !8225
  br label %12, !dbg !8226

12:                                               ; preds = %9, %6, %3
  %13 = phi i1 [ false, %3 ], [ false, %6 ], [ true, %9 ], !dbg !8215
  ret i1 %13, !dbg !8226
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada9Stm32Uart5closeEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #2 align 2 !dbg !8227 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !8229, metadata !DIExpression()), !dbg !8230
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !8231
  %3 = load i32, i32* %2, align 4, !dbg !8231, !tbaa !8130
  call fastcc void @_ZL17__NVIC_DisableIRQ9IRQn_Type(i32 noundef %3), !dbg !8232
  %4 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, !dbg !8233
  %5 = call i32 @HAL_UART_DeInit(%struct.__UART_HandleTypeDef* noundef nonnull %4) #34, !dbg !8234
  %6 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 3, !dbg !8235
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8235, !tbaa !8132
  %8 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 4, !dbg !8236
  %9 = load i16, i16* %8, align 8, !dbg !8236, !tbaa !8152
  %10 = zext i16 %9 to i32, !dbg !8236
  call void @HAL_GPIO_DeInit(%struct.USART_TypeDef* noundef %7, i32 noundef %10) #34, !dbg !8237
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8238, !tbaa !8132
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 5, !dbg !8239
  %13 = load i16, i16* %12, align 2, !dbg !8239, !tbaa !8168
  %14 = zext i16 %13 to i32, !dbg !8239
  call void @HAL_GPIO_DeInit(%struct.USART_TypeDef* noundef %11, i32 noundef %14) #34, !dbg !8240
  %15 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !8241
  %16 = load i8, i8* %15, align 8, !dbg !8242, !tbaa !8026
  %17 = and i8 %16, -2, !dbg !8242
  store i8 %17, i8* %15, align 8, !dbg !8242, !tbaa !8026
  ret void, !dbg !8243
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define dso_local noalias noundef i8* @_ZNK6Cicada9Stm32Uart8portNameEv(%"class.Cicada::Stm32Uart"* nocapture nonnull readnone align 8 %0) unnamed_addr #11 align 2 !dbg !8244 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* undef, metadata !8246, metadata !DIExpression()), !dbg !8247
  ret i8* null, !dbg !8248
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart7rawReadERh(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull readonly align 8 dereferenceable(192) %0, i8* nocapture noundef nonnull writeonly align 1 dereferenceable(1) %1) unnamed_addr #15 align 2 !dbg !8249 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !8251, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.value(metadata i8* %1, metadata !8252, metadata !DIExpression()), !dbg !8253
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !8254
  %4 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %3, align 4, !dbg !8254, !tbaa !8054
  %5 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %4, i32 0, i32 0, !dbg !8254
  %6 = load volatile i32, i32* %5, align 4, !dbg !8254, !tbaa !8055
  %7 = and i32 %6, 32, !dbg !8254
  %8 = icmp eq i32 %7, 0, !dbg !8254
  br i1 %8, label %9, label %13, !dbg !8256

9:                                                ; preds = %2
  %10 = load volatile i32, i32* %5, align 4, !dbg !8257, !tbaa !8055
  %11 = and i32 %10, 8, !dbg !8257
  %12 = icmp eq i32 %11, 0, !dbg !8257
  br i1 %12, label %17, label %13, !dbg !8258

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %4, i32 0, i32 1, !dbg !8259
  %15 = load volatile i32, i32* %14, align 4, !dbg !8259, !tbaa !8261
  %16 = trunc i32 %15 to i8, !dbg !8259
  store i8 %16, i8* %1, align 1, !dbg !8262, !tbaa !2257
  br label %17, !dbg !8263

17:                                               ; preds = %9, %13
  %18 = phi i1 [ true, %13 ], [ false, %9 ], !dbg !8253
  ret i1 %18, !dbg !8264
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart8rawWriteEh(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull readonly align 8 dereferenceable(192) %0, i8 noundef zeroext %1) unnamed_addr #31 align 2 !dbg !8265 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !8267, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.value(metadata i8 %1, metadata !8268, metadata !DIExpression()), !dbg !8269
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !8270
  %4 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %3, align 4, !dbg !8270, !tbaa !8054
  %5 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %4, i32 0, i32 0, !dbg !8270
  %6 = load volatile i32, i32* %5, align 4, !dbg !8270, !tbaa !8055
  %7 = and i32 %6, 128, !dbg !8270
  %8 = icmp eq i32 %7, 0, !dbg !8270
  br i1 %8, label %12, label %9, !dbg !8272

9:                                                ; preds = %2
  %10 = zext i8 %1 to i32, !dbg !8273
  %11 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %4, i32 0, i32 1, !dbg !8273
  store volatile i32 %10, i32* %11, align 4, !dbg !8273, !tbaa !8261
  br label %12, !dbg !8275

12:                                               ; preds = %2, %9
  %13 = xor i1 %8, true, !dbg !8276
  ret i1 %13, !dbg !8276
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind
define dso_local void @_ZN6Cicada9Stm32Uart13startTransmitEv(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull readonly align 8 dereferenceable(192) %0) unnamed_addr #31 align 2 !dbg !8277 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !8279, metadata !DIExpression()), !dbg !8280
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !8281
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !8281, !tbaa !8054
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !8281
  %5 = load volatile i32, i32* %4, align 4, !dbg !8281, !tbaa !8198
  %6 = or i32 %5, 128, !dbg !8281
  store volatile i32 %6, i32* %4, align 4, !dbg !8281, !tbaa !8198
  ret void, !dbg !8282
}

; Function Attrs: noinline nounwind
define dso_local noalias noundef %"class.Cicada::Stm32Uart"* @_ZThn4_N6Cicada9Stm32UartD1Ev(%"class.Cicada::Stm32Uart"* noundef %0) unnamed_addr #9 align 2 !dbg !8283 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !8284
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !8284
  %4 = tail call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD2Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3) #34, !dbg !8284
  ret %"class.Cicada::Stm32Uart"* undef, !dbg !8284
}

; Function Attrs: noinline nounwind
define dso_local void @_ZThn4_N6Cicada9Stm32UartD0Ev(%"class.Cicada::Stm32Uart"* noundef %0) unnamed_addr #9 align 2 !dbg !8285 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !8286
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !8286
  tail call void @_ZN6Cicada9Stm32UartD0Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3) #34, !dbg !8286
  ret void, !dbg !8286
}

; Function Attrs: noinline nounwind
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef %0) unnamed_addr #9 align 2 !dbg !8287 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !8288
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !8288
  %4 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3), !dbg !8288
  ret i1 %4, !dbg !8288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart6isOpenEv(%"class.Cicada::Stm32Uart"* nocapture noundef readonly %0) unnamed_addr #16 align 2 !dbg !8289 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !8290
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !8290
  %4 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart6isOpenEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3), !dbg !8290
  ret i1 %4, !dbg !8290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart15setSerialConfigEjh(%"class.Cicada::Stm32Uart"* nocapture noundef writeonly %0, i32 noundef %1, i8 noundef zeroext %2) unnamed_addr #7 align 2 !dbg !8291 {
  %4 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !8292
  %5 = bitcast i32* %4 to %"class.Cicada::Stm32Uart"*, !dbg !8292
  %6 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart15setSerialConfigEjh(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %5, i32 noundef %1, i8 noundef zeroext %2), !dbg !8292
  ret i1 %6, !dbg !8292
}

; Function Attrs: noinline nounwind
define dso_local void @_ZThn4_N6Cicada9Stm32Uart5closeEv(%"class.Cicada::Stm32Uart"* noundef %0) unnamed_addr #9 align 2 !dbg !8293 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !8294
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !8294
  tail call void @_ZN6Cicada9Stm32Uart5closeEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3), !dbg !8294
  ret void, !dbg !8294
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define dso_local noalias noundef i8* @_ZThn4_NK6Cicada9Stm32Uart8portNameEv(%"class.Cicada::Stm32Uart"* nocapture noundef readnone %0) unnamed_addr #11 align 2 !dbg !8295 {
  ret i8* null, !dbg !8296
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart7rawReadERh(%"class.Cicada::Stm32Uart"* nocapture noundef readonly %0, i8* nocapture noundef nonnull writeonly align 1 dereferenceable(1) %1) unnamed_addr #15 align 2 !dbg !8297 {
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !8298
  %4 = bitcast i32* %3 to %"class.Cicada::Stm32Uart"*, !dbg !8298
  %5 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart7rawReadERh(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %4, i8* noundef nonnull align 1 dereferenceable(1) %1), !dbg !8298
  ret i1 %5, !dbg !8298
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart8rawWriteEh(%"class.Cicada::Stm32Uart"* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #14 align 2 !dbg !8299 {
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !8300
  %4 = bitcast i32* %3 to %"class.Cicada::Stm32Uart"*, !dbg !8300
  %5 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart8rawWriteEh(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %4, i8 noundef zeroext %1), !dbg !8300
  ret i1 %5, !dbg !8300
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @_ZThn4_N6Cicada9Stm32Uart13startTransmitEv(%"class.Cicada::Stm32Uart"* nocapture noundef readonly %0) unnamed_addr #14 align 2 !dbg !8301 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !8302
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !8302
  tail call void @_ZN6Cicada9Stm32Uart13startTransmitEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3), !dbg !8302
  ret void, !dbg !8302
}

; Function Attrs: mustprogress noinline nounwind
define internal fastcc void @_ZL17__NVIC_DisableIRQ9IRQn_Type(i32 noundef %0) unnamed_addr #2 !dbg !8303 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8307, metadata !DIExpression()), !dbg !8308
  %2 = icmp sgt i32 %0, -1, !dbg !8309
  br i1 %2, label %3, label %8, !dbg !8311

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !8312
  %5 = shl i32 1, %4, !dbg !8314
  %6 = lshr i32 %0, 5, !dbg !8315
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !8316
  store volatile i32 %5, i32* %7, align 4, !dbg !8317, !tbaa !2216
  call void asm sideeffect "dsb 0xF", "~{memory}"() #34, !dbg !8318, !srcloc !8321
  call void asm sideeffect "isb 0xF", "~{memory}"() #34, !dbg !8322, !srcloc !8325
  br label %8, !dbg !8326

8:                                                ; preds = %3, %1
  ret void, !dbg !8327
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind
define internal fastcc void @_ZL18__NVIC_SetPriority9IRQn_Typej(i32 noundef %0, i32 noundef %1) unnamed_addr #31 !dbg !8328 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8332, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.value(metadata i32 %1, metadata !8333, metadata !DIExpression()), !dbg !8334
  %3 = trunc i32 %1 to i8, !dbg !8335
  %4 = shl i8 %3, 4, !dbg !8335
  %5 = and i32 %0, 15, !dbg !8337
  %6 = add nsw i32 %5, -4, !dbg !8337
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !8337
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8337
  %9 = icmp slt i32 %0, 0, !dbg !8337
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !8337
  store volatile i8 %4, i8* %10, align 1, !dbg !8335, !tbaa !2257
  ret void, !dbg !8338
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind
define internal fastcc void @_ZL16__NVIC_EnableIRQ9IRQn_Type(i32 noundef %0) unnamed_addr #31 !dbg !8339 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8341, metadata !DIExpression()), !dbg !8342
  %2 = icmp sgt i32 %0, -1, !dbg !8343
  br i1 %2, label %3, label %8, !dbg !8345

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !8346
  %5 = shl i32 1, %4, !dbg !8348
  %6 = lshr i32 %0, 5, !dbg !8349
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !8350
  store volatile i32 %5, i32* %7, align 4, !dbg !8351, !tbaa !2216
  br label %8, !dbg !8352

8:                                                ; preds = %3, %1
  ret void, !dbg !8353
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #2 comdat align 2 !dbg !8354 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !8356, metadata !DIExpression()), !dbg !8358
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !8359
  %3 = load i64, i64* %2, align 8, !dbg !8359, !tbaa !8360
  ret i64 %3, !dbg !8362
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialD2Ev(%"class.Cicada::BufferedSerial"* noundef nonnull returned align 8 dereferenceable(104) %0) unnamed_addr #9 comdat align 2 !dbg !8363 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8369, metadata !DIExpression()), !dbg !8371
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !8372
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer.0"*, !dbg !8372
  %4 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(46) %3) #34, !dbg !8372
  %5 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !8372
  %6 = bitcast %"class.Cicada::LineCircularBuffer"* %5 to %"class.Cicada::CircularBuffer.0"*, !dbg !8372
  %7 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(46) %6) #34, !dbg !8372
  %8 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, !dbg !8372
  %9 = call noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialD2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %8) #34, !dbg !8372
  ret %"class.Cicada::BufferedSerial"* %0, !dbg !8374
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull returned align 8 dereferenceable(44) %0) unnamed_addr #9 comdat align 2 !dbg !8375 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !8377, metadata !DIExpression()), !dbg !8379
  ret %"class.Cicada::CircularBuffer.0"* %0, !dbg !8380
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialD2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull returned align 4 dereferenceable(8) %0) unnamed_addr #9 comdat align 2 !dbg !8381 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %0, metadata !8383, metadata !DIExpression()), !dbg !8385
  %2 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 1, !dbg !8386
  %3 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada7ISerialD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %2) #34, !dbg !8386
  %4 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 0, !dbg !8386
  %5 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %4) #34, !dbg !8386
  ret %"class.Cicada::IBufferedSerial"* %0, !dbg !8388
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada7ISerialD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #9 comdat align 2 !dbg !8389 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !8391, metadata !DIExpression()), !dbg !8393
  ret %"class.Cicada::ICommDevice"* %0, !dbg !8394
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartC2EPcS1_yyP13USART_TypeDefP12GPIO_TypeDeftt(%"class.Cicada::Stm32Uart"* noundef nonnull returned align 8 dereferenceable(192) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4, %struct.USART_TypeDef* noundef %5, %struct.USART_TypeDef* noundef %6, i16 noundef zeroext %7, i16 noundef zeroext %8) unnamed_addr #9 align 2 !dbg !8395 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !8397, metadata !DIExpression()), !dbg !8406
  call void @llvm.dbg.value(metadata i8* %1, metadata !8398, metadata !DIExpression()), !dbg !8406
  call void @llvm.dbg.value(metadata i8* %2, metadata !8399, metadata !DIExpression()), !dbg !8406
  call void @llvm.dbg.value(metadata i64 %3, metadata !8400, metadata !DIExpression()), !dbg !8406
  call void @llvm.dbg.value(metadata i64 %4, metadata !8401, metadata !DIExpression()), !dbg !8406
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %5, metadata !8402, metadata !DIExpression()), !dbg !8406
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %6, metadata !8403, metadata !DIExpression()), !dbg !8406
  call void @llvm.dbg.value(metadata i16 %7, metadata !8404, metadata !DIExpression()), !dbg !8406
  call void @llvm.dbg.value(metadata i16 %8, metadata !8405, metadata !DIExpression()), !dbg !8406
  %10 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, !dbg !8407
  %11 = call noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialC2EPcS1_yy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %10, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4) #34, !dbg !8408
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8407
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %12, align 8, !dbg !8407, !tbaa !2121
  %13 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !8407
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %13, align 4, !dbg !8407, !tbaa !2121
  %14 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !8409
  store i8 0, i8* %14, align 8, !dbg !8409, !tbaa !8026
  %15 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, !dbg !8410
  %16 = bitcast %struct.__UART_HandleTypeDef* %15 to i8*, !dbg !8410
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(72) %16, i8 0, i32 72, i1 false), !dbg !8410
  %17 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 3, !dbg !8411
  store %struct.USART_TypeDef* %6, %struct.USART_TypeDef** %17, align 4, !dbg !8411, !tbaa !8132
  %18 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 4, !dbg !8412
  store i16 %7, i16* %18, align 8, !dbg !8412, !tbaa !8152
  %19 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 5, !dbg !8413
  store i16 %8, i16* %19, align 2, !dbg !8413, !tbaa !8168
  %20 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !8414
  store i32 0, i32* %20, align 4, !dbg !8414, !tbaa !8130
  call void @_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, %struct.USART_TypeDef* noundef %5), !dbg !8415
  ret %"class.Cicada::Stm32Uart"* %0, !dbg !8417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind
define dso_local void @_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, %struct.USART_TypeDef* noundef %1) local_unnamed_addr #32 align 2 !dbg !8418 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !8420, metadata !DIExpression()), !dbg !8424
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %1, metadata !8421, metadata !DIExpression()), !dbg !8424
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !8425
  store %struct.USART_TypeDef* %1, %struct.USART_TypeDef** %3, align 4, !dbg !8426, !tbaa !8054
  %4 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 0, !dbg !8427
  store i32 115200, i32* %4, align 8, !dbg !8428, !tbaa !8220
  %5 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 1, !dbg !8429
  store i32 0, i32* %5, align 4, !dbg !8430, !tbaa !8225
  call void @llvm.dbg.value(metadata i32 0, metadata !8422, metadata !DIExpression()), !dbg !8431
  br label %9, !dbg !8432

6:                                                ; preds = %9
  %7 = add nuw nsw i32 %10, 1, !dbg !8433
  call void @llvm.dbg.value(metadata i32 %7, metadata !8422, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.value(metadata i32 %10, metadata !8422, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8431
  %8 = icmp eq i32 %7, 4, !dbg !8435
  br i1 %8, label %15, label %9, !dbg !8432, !llvm.loop !8436

9:                                                ; preds = %2, %6
  %10 = phi i32 [ 0, %2 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !8422, metadata !DIExpression()), !dbg !8431
  %11 = getelementptr inbounds [4 x %"class.Cicada::Stm32Uart"*], [4 x %"class.Cicada::Stm32Uart"*]* @_ZN6Cicada9Stm32Uart8instanceE, i32 0, i32 %10, !dbg !8438
  %12 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** %11, align 4, !dbg !8438, !tbaa !2286
  %13 = icmp eq %"class.Cicada::Stm32Uart"* %12, null, !dbg !8441
  call void @llvm.dbg.value(metadata i32 %10, metadata !8422, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8431
  br i1 %13, label %14, label %6, !dbg !8442

14:                                               ; preds = %9
  store %"class.Cicada::Stm32Uart"* %0, %"class.Cicada::Stm32Uart"** %11, align 4, !dbg !8443, !tbaa !2286
  br label %15, !dbg !8445

15:                                               ; preds = %6, %14
  ret void, !dbg !8446
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartC2EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt(%"class.Cicada::Stm32Uart"* noundef nonnull returned align 8 dereferenceable(192) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, %struct.USART_TypeDef* noundef %4, %struct.USART_TypeDef* noundef %5, i16 noundef zeroext %6, i16 noundef zeroext %7) unnamed_addr #9 align 2 !dbg !8447 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !8449, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.value(metadata i8* %1, metadata !8450, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.value(metadata i8* %2, metadata !8451, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.value(metadata i64 %3, metadata !8452, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %4, metadata !8453, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %5, metadata !8454, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.value(metadata i16 %6, metadata !8455, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.value(metadata i16 %7, metadata !8456, metadata !DIExpression()), !dbg !8457
  %9 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, !dbg !8458
  %10 = call noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialC2EPcS1_y(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %9, i8* noundef %1, i8* noundef %2, i64 noundef %3) #34, !dbg !8459
  %11 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8458
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %11, align 8, !dbg !8458, !tbaa !2121
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !8458
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %12, align 4, !dbg !8458, !tbaa !2121
  %13 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !8460
  store i8 0, i8* %13, align 8, !dbg !8460, !tbaa !8026
  %14 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, !dbg !8461
  %15 = bitcast %struct.__UART_HandleTypeDef* %14 to i8*, !dbg !8461
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(72) %15, i8 0, i32 72, i1 false), !dbg !8461
  %16 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 3, !dbg !8462
  store %struct.USART_TypeDef* %5, %struct.USART_TypeDef** %16, align 4, !dbg !8462, !tbaa !8132
  %17 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 4, !dbg !8463
  store i16 %6, i16* %17, align 8, !dbg !8463, !tbaa !8152
  %18 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 5, !dbg !8464
  store i16 %7, i16* %18, align 2, !dbg !8464, !tbaa !8168
  %19 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !8465
  store i32 0, i32* %19, align 4, !dbg !8465, !tbaa !8130
  call void @_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, %struct.USART_TypeDef* noundef %4), !dbg !8466
  ret %"class.Cicada::Stm32Uart"* %0, !dbg !8468
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef(%struct.USART_TypeDef* noundef readnone %0) local_unnamed_addr #16 align 2 !dbg !8469 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8471, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.value(metadata i32 0, metadata !8472, metadata !DIExpression()), !dbg !8478
  br label %5, !dbg !8479

2:                                                ; preds = %16
  %3 = add nuw nsw i32 %7, 1, !dbg !8480
  call void @llvm.dbg.value(metadata i32 %3, metadata !8472, metadata !DIExpression()), !dbg !8478
  call void @llvm.dbg.value(metadata i32 %7, metadata !8472, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8478
  %4 = icmp eq i32 %3, 4, !dbg !8481
  br i1 %4, label %19, label %5, !dbg !8479, !llvm.loop !8482

5:                                                ; preds = %1, %2
  %6 = phi %"class.Cicada::Stm32Uart"* [ undef, %1 ], [ %18, %2 ]
  %7 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8472, metadata !DIExpression()), !dbg !8478
  %8 = getelementptr inbounds [4 x %"class.Cicada::Stm32Uart"*], [4 x %"class.Cicada::Stm32Uart"*]* @_ZN6Cicada9Stm32Uart8instanceE, i32 0, i32 %7, !dbg !8484
  %9 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** %8, align 4, !dbg !8484, !tbaa !2286
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %9, metadata !8474, metadata !DIExpression()), !dbg !8485
  %10 = icmp eq %"class.Cicada::Stm32Uart"* %9, null, !dbg !8486
  br i1 %10, label %15, label %11, !dbg !8488

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %9, i32 0, i32 2, i32 0, !dbg !8489
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %12, align 4, !dbg !8489, !tbaa !8054
  %14 = icmp eq %struct.USART_TypeDef* %13, %0, !dbg !8490
  br i1 %14, label %16, label %15, !dbg !8491

15:                                               ; preds = %11, %5
  br label %16, !dbg !8492

16:                                               ; preds = %11, %15
  %17 = phi i1 [ true, %15 ], [ false, %11 ]
  %18 = phi %"class.Cicada::Stm32Uart"* [ %6, %15 ], [ %9, %11 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8472, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8478
  br i1 %17, label %2, label %19

19:                                               ; preds = %2, %16
  %20 = phi %"class.Cicada::Stm32Uart"* [ null, %2 ], [ %18, %16 ]
  ret %"class.Cicada::Stm32Uart"* %20, !dbg !8493
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada9Stm32Uart15handleInterruptEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) local_unnamed_addr #2 align 2 !dbg !8494 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !8496, metadata !DIExpression()), !dbg !8497
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, !dbg !8498
  call void @_ZN6Cicada14BufferedSerial23transferToAndFromBufferEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %2) #34, !dbg !8498
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 2, !dbg !8499
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %3 to %"class.Cicada::CircularBuffer.0"*, !dbg !8499
  %5 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !8501
  %6 = icmp eq i64 %5, 0, !dbg !8499
  br i1 %6, label %7, label %13, !dbg !8502

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !8503
  %9 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %8, align 4, !dbg !8503, !tbaa !8054
  %10 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %9, i32 0, i32 3, !dbg !8503
  %11 = load volatile i32, i32* %10, align 4, !dbg !8503, !tbaa !8198
  %12 = and i32 %11, -129, !dbg !8503
  store volatile i32 %12, i32* %10, align 4, !dbg !8503, !tbaa !8198
  br label %13, !dbg !8503

13:                                               ; preds = %7, %1
  ret void, !dbg !8504
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada12ATCommDeviceD0Ev(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %0) unnamed_addr #9 comdat align 2 !dbg !8505 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !8507, metadata !DIExpression()), !dbg !8509
  call void @llvm.trap() #36, !dbg !8510
  unreachable, !dbg !8510
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada12ATCommDevice11serialWriteEPc(%"class.Cicada::ATCommDevice"* nocapture noundef nonnull readonly align 8 dereferenceable(232) %0, i8* noundef %1) unnamed_addr #2 align 2 !dbg !8511 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !8513, metadata !DIExpression()), !dbg !8515
  call void @llvm.dbg.value(metadata i8* %1, metadata !8514, metadata !DIExpression()), !dbg !8515
  %3 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !8516
  %4 = load i8, i8* %3, align 2, !dbg !8516, !tbaa !6734
  %5 = and i8 %4, 64, !dbg !8518
  %6 = icmp eq i8 %5, 0, !dbg !8516
  br i1 %6, label %15, label %7, !dbg !8519

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1, !dbg !8520
  %9 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %8, align 4, !dbg !8520, !tbaa !7082
  %10 = bitcast %"class.Cicada::IBufferedSerial"* %9 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !8522
  %11 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %10, align 4, !dbg !8522, !tbaa !2121
  %12 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %11, i32 8, !dbg !8522
  %13 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %12, align 4, !dbg !8522
  %14 = call noundef i64 %13(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %9, i8* noundef %1) #34, !dbg !8522
  br label %15, !dbg !8523

15:                                               ; preds = %2, %7
  %16 = phi i64 [ %14, %7 ], [ 0, %2 ], !dbg !8515
  ret i64 %16, !dbg !8524
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada12ATCommDevice10serialReadEPcy(%"class.Cicada::ATCommDevice"* nocapture noundef nonnull readonly align 8 dereferenceable(232) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #2 align 2 !dbg !8525 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !8527, metadata !DIExpression()), !dbg !8530
  call void @llvm.dbg.value(metadata i8* %1, metadata !8528, metadata !DIExpression()), !dbg !8530
  call void @llvm.dbg.value(metadata i64 %2, metadata !8529, metadata !DIExpression()), !dbg !8530
  %4 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !8531
  %5 = load i8, i8* %4, align 2, !dbg !8531, !tbaa !6734
  %6 = and i8 %5, 64, !dbg !8533
  %7 = icmp eq i8 %6, 0, !dbg !8531
  br i1 %7, label %16, label %8, !dbg !8534

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1, !dbg !8535
  %10 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %9, align 4, !dbg !8535, !tbaa !7082
  %11 = bitcast %"class.Cicada::IBufferedSerial"* %10 to i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)***, !dbg !8537
  %12 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*** %11, align 4, !dbg !8537, !tbaa !2121
  %13 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %12, i32 5, !dbg !8537
  %14 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*, i64)** %13, align 4, !dbg !8537
  %15 = call noundef i64 %14(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %10, i8* noundef %1, i64 noundef %2) #34, !dbg !8537
  br label %16, !dbg !8538

16:                                               ; preds = %3, %8
  %17 = phi i64 [ %15, %8 ], [ 0, %3 ], !dbg !8530
  ret i64 %17, !dbg !8539
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ATCommDevice"* @_ZThn4_N6Cicada12ATCommDeviceD1Ev(%"class.Cicada::ATCommDevice"* noundef %0) unnamed_addr #9 comdat align 2 !dbg !8540 {
  %2 = bitcast %"class.Cicada::ATCommDevice"* %0 to i8*, !dbg !8541
  %3 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !8541
  %4 = bitcast i8* %3 to %"class.Cicada::IPCommDevice"*, !dbg !8541
  %5 = tail call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceD2Ev(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(232) %4) #34, !dbg !8541
  ret %"class.Cicada::ATCommDevice"* undef, !dbg !8541
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada12ATCommDeviceD0Ev(%"class.Cicada::ATCommDevice"* noundef %0) unnamed_addr #9 comdat align 2 !dbg !8542 {
  %2 = bitcast %"class.Cicada::ATCommDevice"* %0 to i8*, !dbg !8543
  %3 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !8543
  %4 = bitcast i8* %3 to %"class.Cicada::ATCommDevice"*, !dbg !8543
  tail call void @_ZN6Cicada12ATCommDeviceD0Ev(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %4) #34, !dbg !8543
  ret void, !dbg !8543
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::ATCommDevice"* @_ZN6Cicada12ATCommDeviceC2ERNS_15IBufferedSerialEPhS3_y(%"class.Cicada::ATCommDevice"* noundef nonnull returned align 8 dereferenceable(232) %0, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4) unnamed_addr #9 align 2 !dbg !8544 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !8546, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %1, metadata !8547, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.value(metadata i8* %2, metadata !8548, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.value(metadata i8* %3, metadata !8549, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.value(metadata i64 %4, metadata !8550, metadata !DIExpression()), !dbg !8551
  %6 = bitcast %"class.Cicada::ATCommDevice"* %0 to %"class.Cicada::IPCommDevice"*, !dbg !8552
  %7 = call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceC2EPhS1_y(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %6, i8* noundef %2, i8* noundef %3, i64 noundef %4) #34, !dbg !8553
  %8 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8552
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [5 x i8*] }, { [17 x i8*], [5 x i8*] }* @_ZTVN6Cicada12ATCommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %8, align 8, !dbg !8552, !tbaa !2121
  %9 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 1, i32 0, !dbg !8552
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [5 x i8*] }, { [17 x i8*], [5 x i8*] }* @_ZTVN6Cicada12ATCommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %9, align 4, !dbg !8552, !tbaa !2121
  %10 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1, !dbg !8554
  store %"class.Cicada::IBufferedSerial"* %1, %"class.Cicada::IBufferedSerial"** %10, align 4, !dbg !8554, !tbaa !2286
  ret %"class.Cicada::ATCommDevice"* %0, !dbg !8555
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::ATCommDevice"* @_ZN6Cicada12ATCommDeviceC2ERNS_15IBufferedSerialEPhS3_yy(%"class.Cicada::ATCommDevice"* noundef nonnull returned align 8 dereferenceable(232) %0, %"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %1, i8* noundef %2, i8* noundef %3, i64 noundef %4, i64 noundef %5) unnamed_addr #9 align 2 !dbg !8556 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !8558, metadata !DIExpression()), !dbg !8564
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %1, metadata !8559, metadata !DIExpression()), !dbg !8564
  call void @llvm.dbg.value(metadata i8* %2, metadata !8560, metadata !DIExpression()), !dbg !8564
  call void @llvm.dbg.value(metadata i8* %3, metadata !8561, metadata !DIExpression()), !dbg !8564
  call void @llvm.dbg.value(metadata i64 %4, metadata !8562, metadata !DIExpression()), !dbg !8564
  call void @llvm.dbg.value(metadata i64 %5, metadata !8563, metadata !DIExpression()), !dbg !8564
  %7 = bitcast %"class.Cicada::ATCommDevice"* %0 to %"class.Cicada::IPCommDevice"*, !dbg !8565
  %8 = call noundef %"class.Cicada::IPCommDevice"* @_ZN6Cicada12IPCommDeviceC2EPhS1_yy(%"class.Cicada::IPCommDevice"* noundef nonnull align 8 dereferenceable(140) %7, i8* noundef %2, i8* noundef %3, i64 noundef %4, i64 noundef %5) #34, !dbg !8566
  %9 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8565
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [5 x i8*] }, { [17 x i8*], [5 x i8*] }* @_ZTVN6Cicada12ATCommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8, !dbg !8565, !tbaa !2121
  %10 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 1, i32 0, !dbg !8565
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [5 x i8*] }, { [17 x i8*], [5 x i8*] }* @_ZTVN6Cicada12ATCommDeviceE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %10, align 4, !dbg !8565, !tbaa !2121
  %11 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1, !dbg !8567
  store %"class.Cicada::IBufferedSerial"* %1, %"class.Cicada::IBufferedSerial"** %11, align 4, !dbg !8567, !tbaa !2286
  ret %"class.Cicada::ATCommDevice"* %0, !dbg !8568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define dso_local void @_ZN6Cicada12ATCommDevice9logStatesEaa(%"class.Cicada::ATCommDevice"* nocapture noundef nonnull align 8 dereferenceable(232) %0, i8 noundef signext %1, i8 noundef signext %2) local_unnamed_addr #11 align 2 !dbg !8569 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !8571, metadata !DIExpression()), !dbg !8574
  call void @llvm.dbg.value(metadata i8 %1, metadata !8572, metadata !DIExpression()), !dbg !8574
  call void @llvm.dbg.value(metadata i8 %2, metadata !8573, metadata !DIExpression()), !dbg !8574
  ret void, !dbg !8575
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada12ATCommDevice15flushReadBufferEv(%"class.Cicada::ATCommDevice"* nocapture noundef nonnull align 8 dereferenceable(232) %0) local_unnamed_addr #2 align 2 !dbg !8576 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !8578, metadata !DIExpression()), !dbg !8579
  %2 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1, !dbg !8580
  %3 = bitcast %"class.Cicada::IBufferedSerial"** %2 to %"class.Cicada::ICommDevice"**, !dbg !8580
  %4 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 8
  %5 = load i64, i64* %4, align 8, !dbg !8581, !tbaa !7298
  %6 = icmp eq i64 %5, 0, !dbg !8581
  br i1 %6, label %25, label %7, !dbg !8582

7:                                                ; preds = %1, %15
  %8 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %3, align 4, !dbg !8580, !tbaa !7082
  %9 = bitcast %"class.Cicada::ICommDevice"* %8 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !8583
  %10 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %9, align 4, !dbg !8583, !tbaa !2121
  %11 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %10, i32 2, !dbg !8583
  %12 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %11, align 4, !dbg !8583
  %13 = call noundef i64 %12(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %8) #34, !dbg !8583
  %14 = icmp eq i64 %13, 0, !dbg !8580
  br i1 %14, label %25, label %15, !dbg !8584

15:                                               ; preds = %7
  %16 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %2, align 4, !dbg !8585, !tbaa !7082
  %17 = bitcast %"class.Cicada::IBufferedSerial"* %16 to i8 (%"class.Cicada::IBufferedSerial"*)***, !dbg !8587
  %18 = load i8 (%"class.Cicada::IBufferedSerial"*)**, i8 (%"class.Cicada::IBufferedSerial"*)*** %17, align 4, !dbg !8587, !tbaa !2121
  %19 = getelementptr inbounds i8 (%"class.Cicada::IBufferedSerial"*)*, i8 (%"class.Cicada::IBufferedSerial"*)** %18, i32 7, !dbg !8587
  %20 = load i8 (%"class.Cicada::IBufferedSerial"*)*, i8 (%"class.Cicada::IBufferedSerial"*)** %19, align 4, !dbg !8587
  %21 = call noundef zeroext i8 %20(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %16) #34, !dbg !8587
  %22 = load i64, i64* %4, align 8, !dbg !8588, !tbaa !7298
  %23 = add i64 %22, -1, !dbg !8588
  store i64 %23, i64* %4, align 8, !dbg !8588, !tbaa !7298
  %24 = icmp eq i64 %23, 0, !dbg !8581
  br i1 %24, label %25, label %7, !dbg !8582, !llvm.loop !8589

25:                                               ; preds = %7, %15, %1
  %26 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 7, !dbg !8591
  store i64 0, i64* %26, align 8, !dbg !8592, !tbaa !7275
  %27 = load i64, i64* %4, align 8, !dbg !8593, !tbaa !7298
  %28 = icmp eq i64 %27, 0, !dbg !8595
  br i1 %28, label %29, label %33, !dbg !8596

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !8597
  %31 = load i8, i8* %30, align 2, !dbg !8599, !tbaa !6734
  %32 = or i8 %31, 32, !dbg !8599
  store i8 %32, i8* %30, align 2, !dbg !8599, !tbaa !6734
  br label %33, !dbg !8600

33:                                               ; preds = %29, %25
  ret void, !dbg !8601
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada12ATCommDevice16handleDisconnectEa(%"class.Cicada::ATCommDevice"* nocapture noundef nonnull align 8 dereferenceable(232) %0, i8 noundef signext %1) local_unnamed_addr #23 align 2 !dbg !8602 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !8604, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata i8 %1, metadata !8605, metadata !DIExpression()), !dbg !8606
  %3 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !8607
  %4 = load i8, i8* %3, align 2, !dbg !8607, !tbaa !6734
  %5 = and i8 %4, 8, !dbg !8609
  %6 = icmp eq i8 %5, 0, !dbg !8607
  br i1 %6, label %10, label %7, !dbg !8610

7:                                                ; preds = %2
  %8 = and i8 %4, -9, !dbg !8611
  store i8 %8, i8* %3, align 2, !dbg !8611, !tbaa !6734
  %9 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 4, !dbg !8613
  store i8 %1, i8* %9, align 2, !dbg !8614, !tbaa !7566
  br label %10, !dbg !8615

10:                                               ; preds = %2, %7
  %11 = xor i1 %6, true, !dbg !8616
  ret i1 %11, !dbg !8616
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada12ATCommDevice13handleConnectEa(%"class.Cicada::ATCommDevice"* nocapture noundef nonnull align 8 dereferenceable(232) %0, i8 noundef signext %1) local_unnamed_addr #23 align 2 !dbg !8617 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !8619, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata i8 %1, metadata !8620, metadata !DIExpression()), !dbg !8621
  %3 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !8622
  %4 = load i8, i8* %3, align 2, !dbg !8622, !tbaa !6734
  %5 = and i8 %4, 1, !dbg !8624
  %6 = icmp eq i8 %5, 0, !dbg !8622
  br i1 %6, label %10, label %7, !dbg !8625

7:                                                ; preds = %2
  %8 = and i8 %4, -2, !dbg !8626
  store i8 %8, i8* %3, align 2, !dbg !8626, !tbaa !6734
  %9 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 4, !dbg !8628
  store i8 %1, i8* %9, align 2, !dbg !8629, !tbaa !7566
  br label %10, !dbg !8630

10:                                               ; preds = %2, %7
  %11 = xor i1 %6, true, !dbg !8631
  ret i1 %11, !dbg !8631
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada12ATCommDevice14prepareSendingEb(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %0, i1 noundef zeroext %1) local_unnamed_addr #2 align 2 !dbg !8632 {
  %3 = alloca [6 x i8], align 1
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !8634, metadata !DIExpression()), !dbg !8637
  call void @llvm.dbg.value(metadata i1 %1, metadata !8635, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8637
  %4 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1, !dbg !8638
  %5 = bitcast %"class.Cicada::IBufferedSerial"** %4 to %"class.Cicada::ICommDevice"**, !dbg !8638
  %6 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %5, align 4, !dbg !8638, !tbaa !7082
  %7 = bitcast %"class.Cicada::ICommDevice"* %6 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !8640
  %8 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %7, align 4, !dbg !8640, !tbaa !2121
  %9 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %8, i32 3, !dbg !8640
  %10 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %9, align 4, !dbg !8640
  %11 = call noundef i64 %10(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %6) #34, !dbg !8640
  %12 = icmp ult i64 %11, 22, !dbg !8641
  br i1 %12, label %59, label %13, !dbg !8642

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 3, !dbg !8643
  %15 = call noundef i64 @_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %14), !dbg !8644
  %16 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 6, !dbg !8645
  store i64 %15, i64* %16, align 8, !dbg !8646, !tbaa !8647
  %17 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %5, align 4, !dbg !8648, !tbaa !7082
  %18 = bitcast %"class.Cicada::ICommDevice"* %17 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !8650
  %19 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %18, align 4, !dbg !8650, !tbaa !2121
  %20 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %19, i32 3, !dbg !8650
  %21 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %20, align 4, !dbg !8650
  %22 = call noundef i64 %21(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %17) #34, !dbg !8650
  %23 = add i64 %22, -22, !dbg !8651
  %24 = icmp ugt i64 %15, %23, !dbg !8652
  br i1 %24, label %25, label %33, !dbg !8653

25:                                               ; preds = %13
  %26 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %5, align 4, !dbg !8654, !tbaa !7082
  %27 = bitcast %"class.Cicada::ICommDevice"* %26 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !8656
  %28 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %27, align 4, !dbg !8656, !tbaa !2121
  %29 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %28, i32 3, !dbg !8656
  %30 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %29, align 4, !dbg !8656
  %31 = call noundef i64 %30(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %26) #34, !dbg !8656
  %32 = add i64 %31, -22, !dbg !8657
  store i64 %32, i64* %16, align 8, !dbg !8658, !tbaa !8647
  br label %33, !dbg !8659

33:                                               ; preds = %25, %13
  %34 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %4, align 4, !dbg !8660, !tbaa !7082
  %35 = bitcast %"class.Cicada::IBufferedSerial"* %34 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !8661
  %36 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %35, align 4, !dbg !8661, !tbaa !2121
  %37 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %36, i32 8, !dbg !8661
  %38 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %37, align 4, !dbg !8661
  %39 = call noundef i64 %38(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %34, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.126, i32 0, i32 0)) #34, !dbg !8661
  br i1 %1, label %40, label %47, !dbg !8662

40:                                               ; preds = %33
  %41 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %4, align 4, !dbg !8663, !tbaa !7082
  %42 = bitcast %"class.Cicada::IBufferedSerial"* %41 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !8666
  %43 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %42, align 4, !dbg !8666, !tbaa !2121
  %44 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %43, i32 8, !dbg !8666
  %45 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %44, align 4, !dbg !8666
  %46 = call noundef i64 %45(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %41, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.127, i32 0, i32 0)) #34, !dbg !8666
  br label %47, !dbg !8667

47:                                               ; preds = %40, %33
  %48 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i32 0, i32 0, !dbg !8668
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %48) #34, !dbg !8668
  call void @llvm.dbg.declare(metadata [6 x i8]* %3, metadata !8636, metadata !DIExpression()), !dbg !8669
  %49 = load i64, i64* %16, align 8, !dbg !8670, !tbaa !8647
  %50 = trunc i64 %49 to i32, !dbg !8670
  %51 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* noundef nonnull %48, i32 noundef 6, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.128, i32 0, i32 0), i32 noundef %50), !dbg !8671
  %52 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %4, align 4, !dbg !8672, !tbaa !7082
  %53 = bitcast %"class.Cicada::IBufferedSerial"* %52 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !8673
  %54 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %53, align 4, !dbg !8673, !tbaa !2121
  %55 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %54, i32 8, !dbg !8673
  %56 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %55, align 4, !dbg !8673
  %57 = call noundef i64 %56(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %52, i8* noundef nonnull %48) #34, !dbg !8673
  %58 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 9, !dbg !8674
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.129, i32 0, i32 0), i8** %58, align 8, !dbg !8675, !tbaa !6901
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %48) #34, !dbg !8676
  br label %59

59:                                               ; preds = %2, %47
  %60 = xor i1 %12, true, !dbg !8676
  ret i1 %60, !dbg !8676
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada12ATCommDevice8sendDataEv(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %0) local_unnamed_addr #2 align 2 !dbg !8677 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !8679, metadata !DIExpression()), !dbg !8680
  %2 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 6
  %3 = load i64, i64* %2, align 8, !dbg !8681, !tbaa !8647
  %4 = add i64 %3, -1, !dbg !8681
  store i64 %4, i64* %2, align 8, !dbg !8681, !tbaa !8647
  %5 = icmp eq i64 %3, 0, !dbg !8682
  br i1 %5, label %19, label %6, !dbg !8683

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 3
  br label %9, !dbg !8683

9:                                                ; preds = %6, %9
  %10 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %7, align 4, !dbg !8684, !tbaa !7082
  %11 = call noundef zeroext i8 @_ZN6Cicada14CircularBufferIhE4pullEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %8), !dbg !8686
  %12 = bitcast %"class.Cicada::IBufferedSerial"* %10 to void (%"class.Cicada::IBufferedSerial"*, i8)***, !dbg !8687
  %13 = load void (%"class.Cicada::IBufferedSerial"*, i8)**, void (%"class.Cicada::IBufferedSerial"*, i8)*** %12, align 4, !dbg !8687, !tbaa !2121
  %14 = getelementptr inbounds void (%"class.Cicada::IBufferedSerial"*, i8)*, void (%"class.Cicada::IBufferedSerial"*, i8)** %13, i32 9, !dbg !8687
  %15 = load void (%"class.Cicada::IBufferedSerial"*, i8)*, void (%"class.Cicada::IBufferedSerial"*, i8)** %14, align 4, !dbg !8687
  call void %15(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %10, i8 noundef zeroext %11) #34, !dbg !8687
  %16 = load i64, i64* %2, align 8, !dbg !8681, !tbaa !8647
  %17 = add i64 %16, -1, !dbg !8681
  store i64 %17, i64* %2, align 8, !dbg !8681, !tbaa !8647
  %18 = icmp eq i64 %16, 0, !dbg !8682
  br i1 %18, label %19, label %9, !dbg !8683, !llvm.loop !8688

19:                                               ; preds = %9, %1
  ret void, !dbg !8690
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada12ATCommDevice7receiveEv(%"class.Cicada::ATCommDevice"* noundef nonnull align 8 dereferenceable(232) %0) local_unnamed_addr #2 align 2 !dbg !8691 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !8693, metadata !DIExpression()), !dbg !8694
  %2 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1, !dbg !8695
  %3 = bitcast %"class.Cicada::IBufferedSerial"** %2 to %"class.Cicada::ICommDevice"**, !dbg !8695
  %4 = load %"class.Cicada::ICommDevice"*, %"class.Cicada::ICommDevice"** %3, align 4, !dbg !8695, !tbaa !7082
  %5 = bitcast %"class.Cicada::ICommDevice"* %4 to i64 (%"class.Cicada::ICommDevice"*)***, !dbg !8697
  %6 = load i64 (%"class.Cicada::ICommDevice"*)**, i64 (%"class.Cicada::ICommDevice"*)*** %5, align 4, !dbg !8697, !tbaa !2121
  %7 = getelementptr inbounds i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %6, i32 2, !dbg !8697
  %8 = load i64 (%"class.Cicada::ICommDevice"*)*, i64 (%"class.Cicada::ICommDevice"*)** %7, align 4, !dbg !8697
  %9 = call noundef i64 %8(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %4) #34, !dbg !8697
  %10 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 8, !dbg !8698
  %11 = load i64, i64* %10, align 8, !dbg !8698, !tbaa !7298
  %12 = icmp ult i64 %9, %11, !dbg !8699
  br i1 %12, label %32, label %13, !dbg !8700

13:                                               ; preds = %1
  %14 = load i64, i64* %10, align 8, !dbg !8701, !tbaa !7298
  %15 = icmp eq i64 %14, 0, !dbg !8701
  br i1 %15, label %28, label %16, !dbg !8703

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 2
  br label %18, !dbg !8703

18:                                               ; preds = %16, %18
  %19 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %2, align 4, !dbg !8704, !tbaa !7082
  %20 = bitcast %"class.Cicada::IBufferedSerial"* %19 to i8 (%"class.Cicada::IBufferedSerial"*)***, !dbg !8706
  %21 = load i8 (%"class.Cicada::IBufferedSerial"*)**, i8 (%"class.Cicada::IBufferedSerial"*)*** %20, align 4, !dbg !8706, !tbaa !2121
  %22 = getelementptr inbounds i8 (%"class.Cicada::IBufferedSerial"*)*, i8 (%"class.Cicada::IBufferedSerial"*)** %21, i32 7, !dbg !8706
  %23 = load i8 (%"class.Cicada::IBufferedSerial"*)*, i8 (%"class.Cicada::IBufferedSerial"*)** %22, align 4, !dbg !8706
  %24 = call noundef zeroext i8 %23(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %19) #34, !dbg !8706
  call void @_ZN6Cicada14CircularBufferIhE4pushEh(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %17, i8 noundef zeroext %24), !dbg !8707
  %25 = load i64, i64* %10, align 8, !dbg !8708, !tbaa !7298
  %26 = add i64 %25, -1, !dbg !8708
  store i64 %26, i64* %10, align 8, !dbg !8708, !tbaa !7298
  %27 = icmp eq i64 %26, 0, !dbg !8701
  br i1 %27, label %28, label %18, !dbg !8703, !llvm.loop !8709

28:                                               ; preds = %18, %13
  %29 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 0, i32 7, !dbg !8711
  %30 = load i8, i8* %29, align 2, !dbg !8712, !tbaa !6734
  %31 = or i8 %30, 32, !dbg !8712
  store i8 %31, i8* %29, align 2, !dbg !8712, !tbaa !6734
  br label %32, !dbg !8713

32:                                               ; preds = %1, %28
  %33 = xor i1 %12, true, !dbg !8714
  ret i1 %33, !dbg !8714
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada12ATCommDevice11sendCommandEPKc(%"class.Cicada::ATCommDevice"* nocapture noundef nonnull readonly align 8 dereferenceable(232) %0, i8* noundef %1) local_unnamed_addr #2 align 2 !dbg !8715 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ATCommDevice"* %0, metadata !8717, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata i8* %1, metadata !8718, metadata !DIExpression()), !dbg !8719
  %3 = getelementptr inbounds %"class.Cicada::ATCommDevice", %"class.Cicada::ATCommDevice"* %0, i32 0, i32 1, !dbg !8720
  %4 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %3, align 4, !dbg !8720, !tbaa !7082
  %5 = bitcast %"class.Cicada::IBufferedSerial"* %4 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !8721
  %6 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %5, align 4, !dbg !8721, !tbaa !2121
  %7 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %6, i32 8, !dbg !8721
  %8 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %7, align 4, !dbg !8721
  %9 = call noundef i64 %8(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %4, i8* noundef %1) #34, !dbg !8721
  %10 = load %"class.Cicada::IBufferedSerial"*, %"class.Cicada::IBufferedSerial"** %3, align 4, !dbg !8722, !tbaa !7082
  %11 = load i8*, i8** @_ZN6Cicada12ATCommDevice11_lineEndStrE, align 4, !dbg !8723, !tbaa !2286
  %12 = bitcast %"class.Cicada::IBufferedSerial"* %10 to i64 (%"class.Cicada::IBufferedSerial"*, i8*)***, !dbg !8724
  %13 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)**, i64 (%"class.Cicada::IBufferedSerial"*, i8*)*** %12, align 4, !dbg !8724, !tbaa !2121
  %14 = getelementptr inbounds i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %13, i32 8, !dbg !8724
  %15 = load i64 (%"class.Cicada::IBufferedSerial"*, i8*)*, i64 (%"class.Cicada::IBufferedSerial"*, i8*)** %14, align 4, !dbg !8724
  %16 = call noundef i64 %15(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %10, i8* noundef %11) #34, !dbg !8724
  ret void, !dbg !8725
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14BufferedSerialD0Ev(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #9 comdat align 2 !dbg !8726 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8729, metadata !DIExpression()), !dbg !8731
  call void @llvm.trap() #36, !dbg !8732
  unreachable, !dbg !8732
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZNK6Cicada14BufferedSerial14bytesAvailableEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #2 align 2 !dbg !8733 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8735, metadata !DIExpression()), !dbg !8738
  call void @_Z18eDisableInterruptsv() #34, !dbg !8739
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !8740
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer.0"*, !dbg !8740
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !8741
  call void @llvm.dbg.value(metadata i64 %4, metadata !8737, metadata !DIExpression()), !dbg !8738
  call void @_Z17eEnableInterruptsv() #34, !dbg !8742
  ret i64 %4, !dbg !8743
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZNK6Cicada14BufferedSerial14spaceAvailableEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #2 align 2 !dbg !8744 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8746, metadata !DIExpression()), !dbg !8748
  call void @_Z18eDisableInterruptsv() #34, !dbg !8749
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !8750
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer.0"*, !dbg !8750
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !8751
  call void @llvm.dbg.value(metadata i64 %4, metadata !8747, metadata !DIExpression()), !dbg !8748
  call void @_Z17eEnableInterruptsv() #34, !dbg !8752
  ret i64 %4, !dbg !8753
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial4readEPhy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8* nocapture noundef writeonly %1, i64 noundef %2) unnamed_addr #2 align 2 !dbg !8754 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8756, metadata !DIExpression()), !dbg !8761
  call void @llvm.dbg.value(metadata i8* %1, metadata !8757, metadata !DIExpression()), !dbg !8761
  call void @llvm.dbg.value(metadata i64 %2, metadata !8758, metadata !DIExpression()), !dbg !8761
  %4 = bitcast %"class.Cicada::BufferedSerial"* %0 to i64 (%"class.Cicada::BufferedSerial"*)***, !dbg !8762
  %5 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %4, align 8, !dbg !8762, !tbaa !2121
  %6 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %5, i32 2, !dbg !8762
  %7 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %6, align 4, !dbg !8762
  %8 = call noundef i64 %7(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #34, !dbg !8762
  call void @llvm.dbg.value(metadata i64 %8, metadata !8759, metadata !DIExpression()), !dbg !8761
  %9 = icmp ult i64 %8, %2, !dbg !8763
  %10 = select i1 %9, i64 %8, i64 %2, !dbg !8765
  call void @llvm.dbg.value(metadata i64 %10, metadata !8758, metadata !DIExpression()), !dbg !8761
  call void @llvm.dbg.value(metadata i64 0, metadata !8760, metadata !DIExpression()), !dbg !8761
  %11 = icmp eq i64 %10, 0, !dbg !8766
  br i1 %11, label %24, label %12, !dbg !8767

12:                                               ; preds = %3
  %13 = bitcast %"class.Cicada::BufferedSerial"* %0 to i8 (%"class.Cicada::BufferedSerial"*)***
  br label %14, !dbg !8767

14:                                               ; preds = %12, %14
  %15 = phi i64 [ 0, %12 ], [ %20, %14 ]
  call void @llvm.dbg.value(metadata i64 %15, metadata !8760, metadata !DIExpression()), !dbg !8761
  %16 = load i8 (%"class.Cicada::BufferedSerial"*)**, i8 (%"class.Cicada::BufferedSerial"*)*** %13, align 8, !dbg !8768, !tbaa !2121
  %17 = getelementptr inbounds i8 (%"class.Cicada::BufferedSerial"*)*, i8 (%"class.Cicada::BufferedSerial"*)** %16, i32 7, !dbg !8768
  %18 = load i8 (%"class.Cicada::BufferedSerial"*)*, i8 (%"class.Cicada::BufferedSerial"*)** %17, align 4, !dbg !8768
  %19 = call noundef zeroext i8 %18(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #34, !dbg !8768
  %20 = add nuw i64 %15, 1, !dbg !8770
  call void @llvm.dbg.value(metadata i64 %20, metadata !8760, metadata !DIExpression()), !dbg !8761
  %21 = trunc i64 %15 to i32, !dbg !8771
  %22 = getelementptr inbounds i8, i8* %1, i32 %21, !dbg !8771
  store i8 %19, i8* %22, align 1, !dbg !8772, !tbaa !2257
  %23 = icmp ult i64 %20, %10, !dbg !8766
  br i1 %23, label %14, label %24, !dbg !8767, !llvm.loop !8773

24:                                               ; preds = %14, %3
  %25 = phi i64 [ 0, %3 ], [ %20, %14 ], !dbg !8761
  ret i64 %25, !dbg !8775
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial5writeEPKhy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8* nocapture noundef readonly %1, i64 noundef %2) unnamed_addr #2 align 2 !dbg !8776 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8778, metadata !DIExpression()), !dbg !8783
  call void @llvm.dbg.value(metadata i8* %1, metadata !8779, metadata !DIExpression()), !dbg !8783
  call void @llvm.dbg.value(metadata i64 %2, metadata !8780, metadata !DIExpression()), !dbg !8783
  %4 = bitcast %"class.Cicada::BufferedSerial"* %0 to i64 (%"class.Cicada::BufferedSerial"*)***, !dbg !8784
  %5 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %4, align 8, !dbg !8784, !tbaa !2121
  %6 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %5, i32 3, !dbg !8784
  %7 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %6, align 4, !dbg !8784
  %8 = call noundef i64 %7(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #34, !dbg !8784
  call void @llvm.dbg.value(metadata i64 %8, metadata !8781, metadata !DIExpression()), !dbg !8783
  %9 = icmp ult i64 %8, %2, !dbg !8785
  %10 = select i1 %9, i64 %8, i64 %2, !dbg !8787
  call void @llvm.dbg.value(metadata i64 %10, metadata !8780, metadata !DIExpression()), !dbg !8783
  call void @llvm.dbg.value(metadata i64 0, metadata !8782, metadata !DIExpression()), !dbg !8783
  %11 = icmp eq i64 %10, 0, !dbg !8788
  br i1 %11, label %19, label %12, !dbg !8789

12:                                               ; preds = %3, %12
  %13 = phi i64 [ %14, %12 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i64 %13, metadata !8782, metadata !DIExpression()), !dbg !8783
  %14 = add nuw i64 %13, 1, !dbg !8790
  call void @llvm.dbg.value(metadata i64 %14, metadata !8782, metadata !DIExpression()), !dbg !8783
  %15 = trunc i64 %13 to i32, !dbg !8792
  %16 = getelementptr inbounds i8, i8* %1, i32 %15, !dbg !8792
  %17 = load i8, i8* %16, align 1, !dbg !8792, !tbaa !2257
  call void @_ZN6Cicada14BufferedSerial12copyToBufferEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %17), !dbg !8793
  %18 = icmp ult i64 %14, %10, !dbg !8788
  br i1 %18, label %12, label %19, !dbg !8789, !llvm.loop !8794

19:                                               ; preds = %12, %3
  %20 = phi i64 [ 0, %3 ], [ %14, %12 ], !dbg !8783
  %21 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, !dbg !8796
  %22 = bitcast %"class.Cicada::ICommDevice"* %21 to void (%"class.Cicada::ICommDevice"*)***, !dbg !8796
  %23 = load void (%"class.Cicada::ICommDevice"*)**, void (%"class.Cicada::ICommDevice"*)*** %22, align 4, !dbg !8796, !tbaa !2121
  %24 = getelementptr inbounds void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %23, i32 9, !dbg !8796
  %25 = load void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %24, align 4, !dbg !8796
  call void %25(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %21) #34, !dbg !8796
  ret i64 %20, !dbg !8797
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i8 @_ZN6Cicada14BufferedSerial4readEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #2 align 2 !dbg !8798 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8800, metadata !DIExpression()), !dbg !8802
  call void @_Z18eDisableInterruptsv() #34, !dbg !8803
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !8804
  %3 = call noundef zeroext i8 @_ZN6Cicada18LineCircularBuffer4pullEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %2), !dbg !8805
  call void @llvm.dbg.value(metadata i8 %3, metadata !8801, metadata !DIExpression()), !dbg !8802
  call void @_Z17eEnableInterruptsv() #34, !dbg !8806
  ret i8 %3, !dbg !8807
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial5writeEPKh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8* nocapture noundef readonly %1) unnamed_addr #2 align 2 !dbg !8808 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8810, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.value(metadata i8* %1, metadata !8811, metadata !DIExpression()), !dbg !8814
  %3 = bitcast %"class.Cicada::BufferedSerial"* %0 to i64 (%"class.Cicada::BufferedSerial"*)***, !dbg !8815
  %4 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %3, align 8, !dbg !8815, !tbaa !2121
  %5 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %4, i32 3, !dbg !8815
  %6 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %5, align 4, !dbg !8815
  %7 = call noundef i64 %6(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #34, !dbg !8815
  call void @llvm.dbg.value(metadata i64 %7, metadata !8812, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.value(metadata i64 0, metadata !8813, metadata !DIExpression()), !dbg !8814
  %8 = load i8, i8* %1, align 1, !dbg !8816, !tbaa !2257
  %9 = icmp ne i8 %8, 0, !dbg !8817
  %10 = icmp ne i64 %7, 0, !dbg !8818
  %11 = and i1 %9, %10, !dbg !8818
  br i1 %11, label %12, label %22, !dbg !8819

12:                                               ; preds = %2, %12
  %13 = phi i8 [ %18, %12 ], [ %8, %2 ]
  %14 = phi i64 [ %15, %12 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i64 %14, metadata !8813, metadata !DIExpression()), !dbg !8814
  %15 = add nuw i64 %14, 1, !dbg !8820
  call void @llvm.dbg.value(metadata i64 %15, metadata !8813, metadata !DIExpression()), !dbg !8814
  call void @_ZN6Cicada14BufferedSerial12copyToBufferEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %13), !dbg !8822
  %16 = trunc i64 %15 to i32, !dbg !8816
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !8816
  %18 = load i8, i8* %17, align 1, !dbg !8816, !tbaa !2257
  %19 = icmp ne i8 %18, 0, !dbg !8817
  %20 = icmp ult i64 %15, %7, !dbg !8818
  %21 = select i1 %19, i1 %20, i1 false, !dbg !8818
  br i1 %21, label %12, label %22, !dbg !8819, !llvm.loop !8823

22:                                               ; preds = %12, %2
  %23 = phi i64 [ 0, %2 ], [ %15, %12 ], !dbg !8814
  %24 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, !dbg !8825
  %25 = bitcast %"class.Cicada::ICommDevice"* %24 to void (%"class.Cicada::ICommDevice"*)***, !dbg !8825
  %26 = load void (%"class.Cicada::ICommDevice"*)**, void (%"class.Cicada::ICommDevice"*)*** %25, align 4, !dbg !8825, !tbaa !2121
  %27 = getelementptr inbounds void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %26, i32 9, !dbg !8825
  %28 = load void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %27, align 4, !dbg !8825
  call void %28(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %24) #34, !dbg !8825
  ret i64 %23, !dbg !8826
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada14BufferedSerial5writeEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %1) unnamed_addr #2 align 2 !dbg !8827 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8829, metadata !DIExpression()), !dbg !8831
  call void @llvm.dbg.value(metadata i8 %1, metadata !8830, metadata !DIExpression()), !dbg !8831
  call void @_ZN6Cicada14BufferedSerial12copyToBufferEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %1), !dbg !8832
  %3 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, !dbg !8833
  %4 = bitcast %"class.Cicada::ICommDevice"* %3 to void (%"class.Cicada::ICommDevice"*)***, !dbg !8833
  %5 = load void (%"class.Cicada::ICommDevice"*)**, void (%"class.Cicada::ICommDevice"*)*** %4, align 4, !dbg !8833, !tbaa !2121
  %6 = getelementptr inbounds void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %5, i32 9, !dbg !8833
  %7 = load void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %6, align 4, !dbg !8833
  call void %7(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %3) #34, !dbg !8833
  ret void, !dbg !8834
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZNK6Cicada14BufferedSerial11canReadLineEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #2 align 2 !dbg !8835 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8837, metadata !DIExpression()), !dbg !8839
  call void @_Z18eDisableInterruptsv() #34, !dbg !8840
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !8841
  %3 = call noundef zeroext i16 @_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %2), !dbg !8842
  call void @llvm.dbg.value(metadata i16 %3, metadata !8838, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8839
  call void @_Z17eEnableInterruptsv() #34, !dbg !8843
  %4 = icmp ne i16 %3, 0, !dbg !8844
  ret i1 %4, !dbg !8845
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial8readLineEPhy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8* nocapture noundef writeonly %1, i64 noundef %2) unnamed_addr #2 align 2 !dbg !8846 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8848, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata i8* %1, metadata !8849, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata i64 %2, metadata !8850, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata i64 0, metadata !8851, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata i8 0, metadata !8852, metadata !DIExpression()), !dbg !8853
  %4 = icmp eq i64 %2, 0, !dbg !8854
  br i1 %4, label %39, label %5, !dbg !8856

5:                                                ; preds = %3
  %6 = bitcast %"class.Cicada::BufferedSerial"* %0 to i64 (%"class.Cicada::BufferedSerial"*)***
  call void @llvm.dbg.value(metadata i8 0, metadata !8852, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata i64 0, metadata !8851, metadata !DIExpression()), !dbg !8853
  %7 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %6, align 8, !dbg !8857, !tbaa !2121
  %8 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %7, i32 2, !dbg !8857
  %9 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %8, align 4, !dbg !8857
  %10 = call noundef i64 %9(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #34, !dbg !8857
  %11 = icmp eq i64 %10, 0, !dbg !8857
  br i1 %11, label %35, label %12, !dbg !8858

12:                                               ; preds = %5
  %13 = bitcast %"class.Cicada::BufferedSerial"* %0 to i8 (%"class.Cicada::BufferedSerial"*)***
  %14 = add i64 %2, -1
  br label %15, !dbg !8858

15:                                               ; preds = %12, %26
  %16 = phi i64 [ 0, %12 ], [ %27, %26 ]
  call void @llvm.dbg.value(metadata i64 %16, metadata !8851, metadata !DIExpression()), !dbg !8853
  %17 = load i8 (%"class.Cicada::BufferedSerial"*)**, i8 (%"class.Cicada::BufferedSerial"*)*** %13, align 8, !dbg !8859, !tbaa !2121
  %18 = getelementptr inbounds i8 (%"class.Cicada::BufferedSerial"*)*, i8 (%"class.Cicada::BufferedSerial"*)** %17, i32 7, !dbg !8859
  %19 = load i8 (%"class.Cicada::BufferedSerial"*)*, i8 (%"class.Cicada::BufferedSerial"*)** %18, align 4, !dbg !8859
  %20 = call noundef zeroext i8 %19(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #34, !dbg !8859
  call void @llvm.dbg.value(metadata i8 %20, metadata !8852, metadata !DIExpression()), !dbg !8853
  %21 = icmp ult i64 %16, %14, !dbg !8861
  br i1 %21, label %22, label %26, !dbg !8863

22:                                               ; preds = %15
  %23 = add i64 %16, 1, !dbg !8864
  call void @llvm.dbg.value(metadata i64 %23, metadata !8851, metadata !DIExpression()), !dbg !8853
  %24 = trunc i64 %16 to i32, !dbg !8866
  %25 = getelementptr inbounds i8, i8* %1, i32 %24, !dbg !8866
  store i8 %20, i8* %25, align 1, !dbg !8867, !tbaa !2257
  br label %26, !dbg !8868

26:                                               ; preds = %22, %15
  %27 = phi i64 [ %23, %22 ], [ %16, %15 ], !dbg !8853
  call void @llvm.dbg.value(metadata i8 %20, metadata !8852, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata i64 %27, metadata !8851, metadata !DIExpression()), !dbg !8853
  %28 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %6, align 8, !dbg !8857, !tbaa !2121
  %29 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %28, i32 2, !dbg !8857
  %30 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %29, align 4, !dbg !8857
  %31 = call noundef i64 %30(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #34, !dbg !8857
  %32 = icmp ne i64 %31, 0, !dbg !8857
  %33 = icmp ne i8 %20, 10, !dbg !8869
  %34 = and i1 %33, %32, !dbg !8869
  br i1 %34, label %15, label %35, !dbg !8858, !llvm.loop !8870

35:                                               ; preds = %26, %5
  %36 = phi i64 [ 0, %5 ], [ %27, %26 ], !dbg !8853
  %37 = trunc i64 %36 to i32, !dbg !8872
  %38 = getelementptr inbounds i8, i8* %1, i32 %37, !dbg !8872
  store i8 0, i8* %38, align 1, !dbg !8873, !tbaa !2257
  br label %39, !dbg !8874

39:                                               ; preds = %3, %35
  %40 = phi i64 [ %36, %35 ], [ 0, %3 ], !dbg !8853
  ret i64 %40, !dbg !8875
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #2 align 2 !dbg !8876 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8878, metadata !DIExpression()), !dbg !8879
  call void @_Z18eDisableInterruptsv() #34, !dbg !8880
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !8881
  call void @_ZN6Cicada18LineCircularBuffer5flushEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %2), !dbg !8882
  call void @_Z17eEnableInterruptsv() #34, !dbg !8883
  ret void, !dbg !8884
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial14readBufferSizeEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #2 align 2 !dbg !8885 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8887, metadata !DIExpression()), !dbg !8888
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !8889
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer.0"*, !dbg !8889
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE4sizeEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !8890
  ret i64 %4, !dbg !8891
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial15writeBufferSizeEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #2 align 2 !dbg !8892 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8894, metadata !DIExpression()), !dbg !8895
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !8896
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer.0"*, !dbg !8896
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE4sizeEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !8897
  ret i64 %4, !dbg !8898
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::BufferedSerial"* @_ZThn4_N6Cicada14BufferedSerialD1Ev(%"class.Cicada::BufferedSerial"* noundef %0) unnamed_addr #9 comdat align 2 !dbg !8899 {
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 -1, i32 2, i32 1, !dbg !8900
  %3 = bitcast i16* %2 to %"class.Cicada::BufferedSerial"*, !dbg !8900
  %4 = tail call noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialD2Ev(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %3) #34, !dbg !8900
  ret %"class.Cicada::BufferedSerial"* undef, !dbg !8900
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada14BufferedSerialD0Ev(%"class.Cicada::BufferedSerial"* noundef %0) unnamed_addr #9 comdat align 2 !dbg !8901 {
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 -1, i32 2, i32 1, !dbg !8902
  %3 = bitcast i16* %2 to %"class.Cicada::BufferedSerial"*, !dbg !8902
  tail call void @_ZN6Cicada14BufferedSerialD0Ev(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %3) #34, !dbg !8902
  ret void, !dbg !8902
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIcE4sizeEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #2 comdat align 2 !dbg !8903 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !8905, metadata !DIExpression()), !dbg !8906
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !8907
  %3 = load i64, i64* %2, align 8, !dbg !8907, !tbaa !8908
  ret i64 %3, !dbg !8909
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada18LineCircularBuffer5flushEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) unnamed_addr #2 comdat align 2 !dbg !8910 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !8912, metadata !DIExpression()), !dbg !8914
  %2 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !8915
  store i16 0, i16* %2, align 4, !dbg !8916, !tbaa !8917
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer.0"*, !dbg !8919
  call void @_ZN6Cicada14CircularBufferIcE5flushEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !8919
  ret void, !dbg !8920
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIcE5flushEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #2 comdat align 2 !dbg !8921 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !8923, metadata !DIExpression()), !dbg !8924
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 2, !dbg !8925
  %3 = bitcast i64* %2 to i8*, !dbg !8926
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %3, i8 0, i64 24, i1 false), !dbg !8927
  ret void, !dbg !8926
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i16 @_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) local_unnamed_addr #2 comdat align 2 !dbg !8928 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !8930, metadata !DIExpression()), !dbg !8932
  %2 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !8933
  %3 = load i16, i16* %2, align 4, !dbg !8933, !tbaa !8917
  ret i16 %3, !dbg !8934
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada14BufferedSerial12copyToBufferEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %1) local_unnamed_addr #2 align 2 !dbg !8935 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !8937, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata i8 %1, metadata !8938, metadata !DIExpression()), !dbg !8939
  call void @_Z18eDisableInterruptsv() #34, !dbg !8940
  %3 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !8941
  call void @_ZN6Cicada18LineCircularBuffer4pushEc(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %3, i8 noundef zeroext %1), !dbg !8942
  call void @_Z17eEnableInterruptsv() #34, !dbg !8943
  ret void, !dbg !8944
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada18LineCircularBuffer4pushEc(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0, i8 noundef zeroext %1) unnamed_addr #2 comdat align 2 !dbg !8945 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !8947, metadata !DIExpression()), !dbg !8949
  call void @llvm.dbg.value(metadata i8 %1, metadata !8948, metadata !DIExpression()), !dbg !8949
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer.0"*, !dbg !8950
  call void @_ZN6Cicada14CircularBufferIcE4pushEc(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %3, i8 noundef zeroext %1), !dbg !8950
  %4 = icmp eq i8 %1, 10, !dbg !8951
  br i1 %4, label %5, label %9, !dbg !8953

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !8954
  %7 = load i16, i16* %6, align 4, !dbg !8956, !tbaa !8917
  %8 = add i16 %7, 1, !dbg !8956
  store i16 %8, i16* %6, align 4, !dbg !8956, !tbaa !8917
  br label %9, !dbg !8957

9:                                                ; preds = %5, %2
  ret void, !dbg !8958
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIcE4pushEc(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i8 noundef zeroext %1) unnamed_addr #2 comdat align 2 !dbg !8959 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !8961, metadata !DIExpression()), !dbg !8963
  call void @llvm.dbg.value(metadata i8 %1, metadata !8962, metadata !DIExpression()), !dbg !8963
  %3 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6, !dbg !8964
  %4 = load i8*, i8** %3, align 8, !dbg !8964, !tbaa !8965
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 2, !dbg !8966
  %6 = load i64, i64* %5, align 8, !dbg !8966, !tbaa !8967
  %7 = trunc i64 %6 to i32, !dbg !8964
  %8 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !8964
  store i8 %1, i8* %8, align 1, !dbg !8968, !tbaa !2257
  call void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %5), !dbg !8969
  %9 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !8970
  %10 = load i64, i64* %9, align 8, !dbg !8970, !tbaa !8360
  %11 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !8972
  %12 = load i64, i64* %11, align 8, !dbg !8972, !tbaa !8908
  %13 = icmp ult i64 %10, %12, !dbg !8973
  br i1 %13, label %14, label %16, !dbg !8974

14:                                               ; preds = %2
  %15 = add i64 %10, 1, !dbg !8975
  store i64 %15, i64* %9, align 8, !dbg !8975, !tbaa !8360
  br label %16, !dbg !8976

16:                                               ; preds = %14, %2
  ret void, !dbg !8977
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #2 comdat align 2 !dbg !8978 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !8980, metadata !DIExpression()), !dbg !8982
  call void @llvm.dbg.value(metadata i64* %1, metadata !8981, metadata !DIExpression()), !dbg !8982
  %3 = load i64, i64* %1, align 8, !dbg !8983, !tbaa !6819
  %4 = add i64 %3, 1, !dbg !8983
  store i64 %4, i64* %1, align 8, !dbg !8983, !tbaa !6819
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !8984
  %6 = load i64, i64* %5, align 8, !dbg !8984, !tbaa !8908
  %7 = icmp ult i64 %4, %6, !dbg !8986
  %8 = select i1 %7, i64 %4, i64 0, !dbg !8987
  store i64 %8, i64* %1, align 8, !dbg !8982
  ret void, !dbg !8988
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i8 @_ZN6Cicada18LineCircularBuffer4pullEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) unnamed_addr #2 comdat align 2 !dbg !8989 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !8991, metadata !DIExpression()), !dbg !8993
  %2 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer.0"*, !dbg !8994
  %3 = call noundef zeroext i8 @_ZN6Cicada14CircularBufferIcE4pullEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %2), !dbg !8994
  call void @llvm.dbg.value(metadata i8 %3, metadata !8992, metadata !DIExpression()), !dbg !8993
  %4 = icmp eq i8 %3, 10, !dbg !8995
  br i1 %4, label %5, label %9, !dbg !8997

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !8998
  %7 = load i16, i16* %6, align 4, !dbg !9000, !tbaa !8917
  %8 = add i16 %7, -1, !dbg !9000
  store i16 %8, i16* %6, align 4, !dbg !9000, !tbaa !8917
  br label %9, !dbg !9001

9:                                                ; preds = %5, %1
  ret i8 %3, !dbg !9002
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i8 @_ZN6Cicada14CircularBufferIcE4pullEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #2 comdat align 2 !dbg !9003 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !9005, metadata !DIExpression()), !dbg !9007
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6, !dbg !9008
  %3 = load i8*, i8** %2, align 8, !dbg !9008, !tbaa !8965
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 3, !dbg !9009
  %5 = load i64, i64* %4, align 8, !dbg !9009, !tbaa !9010
  %6 = trunc i64 %5 to i32, !dbg !9008
  %7 = getelementptr inbounds i8, i8* %3, i32 %6, !dbg !9008
  %8 = load i8, i8* %7, align 1, !dbg !9008, !tbaa !2257
  call void @llvm.dbg.value(metadata i8 %8, metadata !9006, metadata !DIExpression()), !dbg !9007
  call void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %4), !dbg !9011
  %9 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !9012
  %10 = load i64, i64* %9, align 8, !dbg !9012, !tbaa !8360
  %11 = icmp eq i64 %10, 0, !dbg !9014
  br i1 %11, label %14, label %12, !dbg !9015

12:                                               ; preds = %1
  %13 = add i64 %10, -1, !dbg !9016
  store i64 %13, i64* %9, align 8, !dbg !9016, !tbaa !8360
  br label %14, !dbg !9017

14:                                               ; preds = %12, %1
  ret i8 %8, !dbg !9018
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #2 comdat align 2 !dbg !9019 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !9021, metadata !DIExpression()), !dbg !9022
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !9023
  %3 = load i64, i64* %2, align 8, !dbg !9023, !tbaa !8908
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !9024
  %5 = load i64, i64* %4, align 8, !dbg !9024, !tbaa !8360
  %6 = sub i64 %3, %5, !dbg !9025
  ret i64 %6, !dbg !9026
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialC2EPcS1_yy(%"class.Cicada::BufferedSerial"* noundef nonnull returned align 8 dereferenceable(104) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4) unnamed_addr #9 align 2 !dbg !9027 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !9029, metadata !DIExpression()), !dbg !9034
  call void @llvm.dbg.value(metadata i8* %1, metadata !9030, metadata !DIExpression()), !dbg !9034
  call void @llvm.dbg.value(metadata i8* %2, metadata !9031, metadata !DIExpression()), !dbg !9034
  call void @llvm.dbg.value(metadata i64 %3, metadata !9032, metadata !DIExpression()), !dbg !9034
  call void @llvm.dbg.value(metadata i64 %4, metadata !9033, metadata !DIExpression()), !dbg !9034
  %6 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, !dbg !9035
  %7 = call noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialC2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %6) #34, !dbg !9036
  %8 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 0, i32 0, !dbg !9035
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada14BufferedSerialE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %8, align 8, !dbg !9035, !tbaa !2121
  %9 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, i32 0, !dbg !9035
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada14BufferedSerialE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %9, align 4, !dbg !9035, !tbaa !2121
  %10 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !9037
  %11 = call noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %10, i8* noundef %1, i64 noundef %3), !dbg !9037
  %12 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !9038
  %13 = call noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %12, i8* noundef %2, i64 noundef %4), !dbg !9038
  ret %"class.Cicada::BufferedSerial"* %0, !dbg !9039
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialC2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull returned align 4 dereferenceable(8) %0) unnamed_addr #9 comdat align 2 !dbg !9040 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %0, metadata !9043, metadata !DIExpression()), !dbg !9044
  %2 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 0, !dbg !9045
  %3 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %2) #34, !dbg !9045
  %4 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 1, !dbg !9045
  %5 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada7ISerialC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %4) #34, !dbg !9045
  %6 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 0, i32 0, !dbg !9045
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada15IBufferedSerialE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 4, !dbg !9045, !tbaa !2121
  %7 = getelementptr %"class.Cicada::ICommDevice", %"class.Cicada::ICommDevice"* %4, i32 0, i32 0, !dbg !9045
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada15IBufferedSerialE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %7, align 4, !dbg !9045, !tbaa !2121
  ret %"class.Cicada::IBufferedSerial"* %0, !dbg !9045
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull returned align 8 dereferenceable(46) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #9 comdat align 2 !dbg !9046 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !9048, metadata !DIExpression()), !dbg !9051
  call void @llvm.dbg.value(metadata i8* %1, metadata !9049, metadata !DIExpression()), !dbg !9051
  call void @llvm.dbg.value(metadata i64 %2, metadata !9050, metadata !DIExpression()), !dbg !9051
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer.0"*, !dbg !9052
  %5 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIcEC2EPcy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %4, i8* noundef %1, i64 noundef %2), !dbg !9053
  %6 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 0, i32 0, !dbg !9052
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6Cicada18LineCircularBufferE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 8, !dbg !9052, !tbaa !2121
  %7 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !9054
  store i16 0, i16* %7, align 4, !dbg !9054, !tbaa !8917
  ret %"class.Cicada::LineCircularBuffer"* %0, !dbg !9055
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIcEC2EPcy(%"class.Cicada::CircularBuffer.0"* noundef nonnull returned align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #9 comdat align 2 !dbg !9056 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !9058, metadata !DIExpression()), !dbg !9061
  call void @llvm.dbg.value(metadata i8* %1, metadata !9059, metadata !DIExpression()), !dbg !9061
  call void @llvm.dbg.value(metadata i64 %2, metadata !9060, metadata !DIExpression()), !dbg !9061
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 0, !dbg !9062
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6Cicada14CircularBufferIcEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8, !dbg !9062, !tbaa !2121
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 2, !dbg !9063
  %6 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !9064
  %7 = bitcast i64* %5 to i8*, !dbg !9064
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false), !dbg !9065
  store i64 %2, i64* %6, align 8, !dbg !9064, !tbaa !8908
  %8 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6, !dbg !9066
  store i8* %1, i8** %8, align 8, !dbg !9066, !tbaa !8965
  ret %"class.Cicada::CircularBuffer.0"* %0, !dbg !9067
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada18LineCircularBufferD0Ev(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) unnamed_addr #9 comdat align 2 !dbg !9068 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !9071, metadata !DIExpression()), !dbg !9072
  %2 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer.0"*, !dbg !9073
  %3 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(46) %2) #34, !dbg !9073
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to i8*, !dbg !9073
  call void @_ZdlPv(i8* noundef %4) #37, !dbg !9073
  ret void, !dbg !9073
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada18LineCircularBuffer4pushEPKcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #2 comdat align 2 !dbg !9074 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !9076, metadata !DIExpression()), !dbg !9080
  call void @llvm.dbg.value(metadata i8* %1, metadata !9077, metadata !DIExpression()), !dbg !9080
  call void @llvm.dbg.value(metadata i64 %2, metadata !9078, metadata !DIExpression()), !dbg !9080
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer.0"*, !dbg !9081
  %5 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !9081
  %6 = icmp ult i64 %5, %2, !dbg !9083
  br i1 %6, label %7, label %9, !dbg !9084

7:                                                ; preds = %3
  %8 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !9085
  call void @llvm.dbg.value(metadata i64 %8, metadata !9078, metadata !DIExpression()), !dbg !9080
  br label %9, !dbg !9086

9:                                                ; preds = %7, %3
  %10 = phi i64 [ %8, %7 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %10, metadata !9078, metadata !DIExpression()), !dbg !9080
  call void @llvm.dbg.value(metadata i64 0, metadata !9079, metadata !DIExpression()), !dbg !9080
  %11 = icmp eq i64 %10, 0, !dbg !9087
  br i1 %11, label %24, label %12, !dbg !9088

12:                                               ; preds = %9
  %13 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to void (%"class.Cicada::LineCircularBuffer"*, i8)***
  br label %14, !dbg !9088

14:                                               ; preds = %12, %14
  %15 = phi i64 [ 0, %12 ], [ %16, %14 ]
  call void @llvm.dbg.value(metadata i64 %15, metadata !9079, metadata !DIExpression()), !dbg !9080
  %16 = add nuw i64 %15, 1, !dbg !9089
  call void @llvm.dbg.value(metadata i64 %16, metadata !9079, metadata !DIExpression()), !dbg !9080
  %17 = trunc i64 %15 to i32, !dbg !9091
  %18 = getelementptr inbounds i8, i8* %1, i32 %17, !dbg !9091
  %19 = load i8, i8* %18, align 1, !dbg !9091, !tbaa !2257
  %20 = load void (%"class.Cicada::LineCircularBuffer"*, i8)**, void (%"class.Cicada::LineCircularBuffer"*, i8)*** %13, align 8, !dbg !9092, !tbaa !2121
  %21 = getelementptr inbounds void (%"class.Cicada::LineCircularBuffer"*, i8)*, void (%"class.Cicada::LineCircularBuffer"*, i8)** %20, i32 3, !dbg !9092
  %22 = load void (%"class.Cicada::LineCircularBuffer"*, i8)*, void (%"class.Cicada::LineCircularBuffer"*, i8)** %21, align 4, !dbg !9092
  call void %22(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0, i8 noundef zeroext %19) #34, !dbg !9092
  %23 = icmp ult i64 %16, %10, !dbg !9087
  br i1 %23, label %14, label %24, !dbg !9088, !llvm.loop !9093

24:                                               ; preds = %14, %9
  %25 = phi i64 [ 0, %9 ], [ %10, %14 ], !dbg !9080
  ret i64 %25, !dbg !9095
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada18LineCircularBuffer4pullEPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #2 comdat align 2 !dbg !9096 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !9098, metadata !DIExpression()), !dbg !9102
  call void @llvm.dbg.value(metadata i8* %1, metadata !9099, metadata !DIExpression()), !dbg !9102
  call void @llvm.dbg.value(metadata i64 %2, metadata !9100, metadata !DIExpression()), !dbg !9102
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer.0"*, !dbg !9103
  %5 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !9103
  %6 = icmp ult i64 %5, %2, !dbg !9105
  br i1 %6, label %7, label %9, !dbg !9106

7:                                                ; preds = %3
  %8 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !9107
  call void @llvm.dbg.value(metadata i64 %8, metadata !9100, metadata !DIExpression()), !dbg !9102
  br label %9, !dbg !9108

9:                                                ; preds = %7, %3
  %10 = phi i64 [ %8, %7 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %10, metadata !9100, metadata !DIExpression()), !dbg !9102
  call void @llvm.dbg.value(metadata i64 0, metadata !9101, metadata !DIExpression()), !dbg !9102
  %11 = icmp eq i64 %10, 0, !dbg !9109
  br i1 %11, label %24, label %12, !dbg !9110

12:                                               ; preds = %9
  %13 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to i8 (%"class.Cicada::LineCircularBuffer"*)***
  br label %14, !dbg !9110

14:                                               ; preds = %12, %14
  %15 = phi i64 [ 0, %12 ], [ %20, %14 ]
  call void @llvm.dbg.value(metadata i64 %15, metadata !9101, metadata !DIExpression()), !dbg !9102
  %16 = load i8 (%"class.Cicada::LineCircularBuffer"*)**, i8 (%"class.Cicada::LineCircularBuffer"*)*** %13, align 8, !dbg !9111, !tbaa !2121
  %17 = getelementptr inbounds i8 (%"class.Cicada::LineCircularBuffer"*)*, i8 (%"class.Cicada::LineCircularBuffer"*)** %16, i32 5, !dbg !9111
  %18 = load i8 (%"class.Cicada::LineCircularBuffer"*)*, i8 (%"class.Cicada::LineCircularBuffer"*)** %17, align 4, !dbg !9111
  %19 = call noundef zeroext i8 %18(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) #34, !dbg !9111
  %20 = add nuw i64 %15, 1, !dbg !9113
  call void @llvm.dbg.value(metadata i64 %20, metadata !9101, metadata !DIExpression()), !dbg !9102
  %21 = trunc i64 %15 to i32, !dbg !9114
  %22 = getelementptr inbounds i8, i8* %1, i32 %21, !dbg !9114
  store i8 %19, i8* %22, align 1, !dbg !9115, !tbaa !2257
  %23 = icmp ult i64 %20, %10, !dbg !9109
  br i1 %23, label %14, label %24, !dbg !9110, !llvm.loop !9116

24:                                               ; preds = %14, %9
  %25 = phi i64 [ 0, %9 ], [ %10, %14 ], !dbg !9102
  ret i64 %25, !dbg !9118
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i8 @_ZN6Cicada14CircularBufferIcE4readEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #2 comdat align 2 !dbg !9119 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !9121, metadata !DIExpression()), !dbg !9122
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6, !dbg !9123
  %3 = load i8*, i8** %2, align 8, !dbg !9123, !tbaa !8965
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 3, !dbg !9124
  %5 = load i64, i64* %4, align 8, !dbg !9124, !tbaa !9010
  %6 = trunc i64 %5 to i32, !dbg !9123
  %7 = getelementptr inbounds i8, i8* %3, i32 %6, !dbg !9123
  %8 = load i8, i8* %7, align 1, !dbg !9123, !tbaa !2257
  ret i8 %8, !dbg !9125
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i1 @_ZNK6Cicada14CircularBufferIcE7isEmptyEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #2 comdat align 2 !dbg !9126 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !9128, metadata !DIExpression()), !dbg !9129
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !9130
  %3 = load i64, i64* %2, align 8, !dbg !9130, !tbaa !8360
  %4 = icmp eq i64 %3, 0, !dbg !9131
  ret i1 %4, !dbg !9132
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i1 @_ZNK6Cicada14CircularBufferIcE6isFullEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #2 comdat align 2 !dbg !9133 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !9135, metadata !DIExpression()), !dbg !9136
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !9137
  %3 = load i64, i64* %2, align 8, !dbg !9137, !tbaa !8360
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 5, !dbg !9138
  %5 = load i64, i64* %4, align 8, !dbg !9138, !tbaa !8908
  %6 = icmp eq i64 %3, %5, !dbg !9139
  ret i1 %6, !dbg !9140
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIcED0Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #9 comdat align 2 !dbg !9141 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !9143, metadata !DIExpression()), !dbg !9144
  %2 = call noundef %"class.Cicada::CircularBuffer.0"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #34, !dbg !9145
  %3 = bitcast %"class.Cicada::CircularBuffer.0"* %0 to i8*, !dbg !9145
  call void @_ZdlPv(i8* noundef %3) #37, !dbg !9145
  ret void, !dbg !9146
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada14CircularBufferIcE4pushEPKcy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #2 comdat align 2 !dbg !9147 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !9149, metadata !DIExpression()), !dbg !9153
  call void @llvm.dbg.value(metadata i8* %1, metadata !9150, metadata !DIExpression()), !dbg !9153
  call void @llvm.dbg.value(metadata i64 %2, metadata !9151, metadata !DIExpression()), !dbg !9153
  %4 = bitcast %"class.Cicada::CircularBuffer.0"* %0 to i64 (%"class.Cicada::CircularBuffer.0"*)***, !dbg !9154
  %5 = load i64 (%"class.Cicada::CircularBuffer.0"*)**, i64 (%"class.Cicada::CircularBuffer.0"*)*** %4, align 8, !dbg !9154, !tbaa !2121
  %6 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %5, i32 11, !dbg !9154
  %7 = load i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %6, align 4, !dbg !9154
  %8 = call noundef i64 %7(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #34, !dbg !9154
  %9 = icmp ult i64 %8, %2, !dbg !9156
  br i1 %9, label %10, label %15, !dbg !9157

10:                                               ; preds = %3
  %11 = load i64 (%"class.Cicada::CircularBuffer.0"*)**, i64 (%"class.Cicada::CircularBuffer.0"*)*** %4, align 8, !dbg !9158, !tbaa !2121
  %12 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %11, i32 11, !dbg !9158
  %13 = load i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %12, align 4, !dbg !9158
  %14 = call noundef i64 %13(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #34, !dbg !9158
  call void @llvm.dbg.value(metadata i64 %14, metadata !9151, metadata !DIExpression()), !dbg !9153
  br label %15, !dbg !9159

15:                                               ; preds = %10, %3
  %16 = phi i64 [ %14, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %16, metadata !9151, metadata !DIExpression()), !dbg !9153
  call void @llvm.dbg.value(metadata i64 0, metadata !9152, metadata !DIExpression()), !dbg !9153
  %17 = icmp eq i64 %16, 0, !dbg !9160
  br i1 %17, label %32, label %18, !dbg !9161

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6
  %20 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 2
  br label %21, !dbg !9161

21:                                               ; preds = %18, %21
  %22 = phi i64 [ 0, %18 ], [ %23, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !9152, metadata !DIExpression()), !dbg !9153
  %23 = add nuw i64 %22, 1, !dbg !9162
  call void @llvm.dbg.value(metadata i64 %23, metadata !9152, metadata !DIExpression()), !dbg !9153
  %24 = trunc i64 %22 to i32, !dbg !9164
  %25 = getelementptr inbounds i8, i8* %1, i32 %24, !dbg !9164
  %26 = load i8, i8* %25, align 1, !dbg !9164, !tbaa !2257
  %27 = load i8*, i8** %19, align 8, !dbg !9165, !tbaa !8965
  %28 = load i64, i64* %20, align 8, !dbg !9166, !tbaa !8967
  %29 = trunc i64 %28 to i32, !dbg !9165
  %30 = getelementptr inbounds i8, i8* %27, i32 %29, !dbg !9165
  store i8 %26, i8* %30, align 1, !dbg !9167, !tbaa !2257
  call void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %20), !dbg !9168
  %31 = icmp ult i64 %23, %16, !dbg !9160
  br i1 %31, label %21, label %32, !dbg !9161, !llvm.loop !9169

32:                                               ; preds = %21, %15
  %33 = phi i64 [ 0, %15 ], [ %16, %21 ], !dbg !9153
  %34 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !9171
  %35 = load i64, i64* %34, align 8, !dbg !9172, !tbaa !8360
  %36 = add i64 %35, %33, !dbg !9172
  store i64 %36, i64* %34, align 8, !dbg !9172, !tbaa !8360
  ret i64 %33, !dbg !9173
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada14CircularBufferIcE4pullEPcy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #2 comdat align 2 !dbg !9174 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer.0"* %0, metadata !9176, metadata !DIExpression()), !dbg !9180
  call void @llvm.dbg.value(metadata i8* %1, metadata !9177, metadata !DIExpression()), !dbg !9180
  call void @llvm.dbg.value(metadata i64 %2, metadata !9178, metadata !DIExpression()), !dbg !9180
  %4 = bitcast %"class.Cicada::CircularBuffer.0"* %0 to i64 (%"class.Cicada::CircularBuffer.0"*)***, !dbg !9181
  %5 = load i64 (%"class.Cicada::CircularBuffer.0"*)**, i64 (%"class.Cicada::CircularBuffer.0"*)*** %4, align 8, !dbg !9181, !tbaa !2121
  %6 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %5, i32 10, !dbg !9181
  %7 = load i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %6, align 4, !dbg !9181
  %8 = call noundef i64 %7(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #34, !dbg !9181
  %9 = icmp ult i64 %8, %2, !dbg !9183
  br i1 %9, label %10, label %15, !dbg !9184

10:                                               ; preds = %3
  %11 = load i64 (%"class.Cicada::CircularBuffer.0"*)**, i64 (%"class.Cicada::CircularBuffer.0"*)*** %4, align 8, !dbg !9185, !tbaa !2121
  %12 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %11, i32 10, !dbg !9185
  %13 = load i64 (%"class.Cicada::CircularBuffer.0"*)*, i64 (%"class.Cicada::CircularBuffer.0"*)** %12, align 4, !dbg !9185
  %14 = call noundef i64 %13(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0) #34, !dbg !9185
  call void @llvm.dbg.value(metadata i64 %14, metadata !9178, metadata !DIExpression()), !dbg !9180
  br label %15, !dbg !9186

15:                                               ; preds = %10, %3
  %16 = phi i64 [ %14, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %16, metadata !9178, metadata !DIExpression()), !dbg !9180
  call void @llvm.dbg.value(metadata i64 0, metadata !9179, metadata !DIExpression()), !dbg !9180
  %17 = icmp eq i64 %16, 0, !dbg !9187
  br i1 %17, label %32, label %18, !dbg !9188

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 6
  %20 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 3
  br label %21, !dbg !9188

21:                                               ; preds = %18, %21
  %22 = phi i64 [ 0, %18 ], [ %28, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !9179, metadata !DIExpression()), !dbg !9180
  %23 = load i8*, i8** %19, align 8, !dbg !9189, !tbaa !8965
  %24 = load i64, i64* %20, align 8, !dbg !9191, !tbaa !9010
  %25 = trunc i64 %24 to i32, !dbg !9189
  %26 = getelementptr inbounds i8, i8* %23, i32 %25, !dbg !9189
  %27 = load i8, i8* %26, align 1, !dbg !9189, !tbaa !2257
  %28 = add nuw i64 %22, 1, !dbg !9192
  call void @llvm.dbg.value(metadata i64 %28, metadata !9179, metadata !DIExpression()), !dbg !9180
  %29 = trunc i64 %22 to i32, !dbg !9193
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !9193
  store i8 %27, i8* %30, align 1, !dbg !9194, !tbaa !2257
  call void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %20), !dbg !9195
  %31 = icmp ult i64 %28, %16, !dbg !9187
  br i1 %31, label %21, label %32, !dbg !9188, !llvm.loop !9196

32:                                               ; preds = %21, %15
  %33 = phi i64 [ 0, %15 ], [ %16, %21 ], !dbg !9180
  %34 = getelementptr inbounds %"class.Cicada::CircularBuffer.0", %"class.Cicada::CircularBuffer.0"* %0, i32 0, i32 4, !dbg !9198
  %35 = load i64, i64* %34, align 8, !dbg !9199, !tbaa !8360
  %36 = sub i64 %35, %33, !dbg !9199
  store i64 %36, i64* %34, align 8, !dbg !9199, !tbaa !8360
  ret i64 %33, !dbg !9200
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada7ISerialC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #9 comdat align 2 !dbg !9201 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !9204, metadata !DIExpression()), !dbg !9205
  %2 = getelementptr inbounds %"class.Cicada::ICommDevice", %"class.Cicada::ICommDevice"* %0, i32 0, i32 0, !dbg !9206
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN6Cicada7ISerialE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %2, align 4, !dbg !9206, !tbaa !2121
  ret %"class.Cicada::ICommDevice"* %0, !dbg !9206
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada15IBufferedSerialD0Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %0) unnamed_addr #9 comdat align 2 !dbg !9207 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %0, metadata !9209, metadata !DIExpression()), !dbg !9210
  call void @llvm.trap() #36, !dbg !9211
  unreachable, !dbg !9211
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IBufferedSerial"* @_ZThn4_N6Cicada15IBufferedSerialD1Ev(%"class.Cicada::IBufferedSerial"* noundef %0) unnamed_addr #9 comdat align 2 !dbg !9212 {
  %2 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 -1, i32 1, !dbg !9213
  %3 = bitcast %"class.Cicada::ICommDevice"* %2 to %"class.Cicada::IBufferedSerial"*, !dbg !9213
  %4 = tail call noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialD2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %3) #34, !dbg !9213
  ret %"class.Cicada::IBufferedSerial"* undef, !dbg !9213
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada15IBufferedSerialD0Ev(%"class.Cicada::IBufferedSerial"* noundef %0) unnamed_addr #9 comdat align 2 !dbg !9214 {
  %2 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 -1, i32 1, !dbg !9215
  %3 = bitcast %"class.Cicada::ICommDevice"* %2 to %"class.Cicada::IBufferedSerial"*, !dbg !9215
  tail call void @_ZN6Cicada15IBufferedSerialD0Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %3) #34, !dbg !9215
  ret void, !dbg !9215
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada7ISerialD0Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %0) unnamed_addr #9 comdat align 2 !dbg !9216 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !9218, metadata !DIExpression()), !dbg !9219
  call void @llvm.trap() #36, !dbg !9220
  unreachable, !dbg !9220
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialC2EPcS1_y(%"class.Cicada::BufferedSerial"* noundef nonnull returned align 8 dereferenceable(104) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3) unnamed_addr #9 align 2 !dbg !9221 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !9223, metadata !DIExpression()), !dbg !9227
  call void @llvm.dbg.value(metadata i8* %1, metadata !9224, metadata !DIExpression()), !dbg !9227
  call void @llvm.dbg.value(metadata i8* %2, metadata !9225, metadata !DIExpression()), !dbg !9227
  call void @llvm.dbg.value(metadata i64 %3, metadata !9226, metadata !DIExpression()), !dbg !9227
  %5 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, !dbg !9228
  %6 = call noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialC2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %5) #34, !dbg !9229
  %7 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 0, i32 0, !dbg !9228
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada14BufferedSerialE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %7, align 8, !dbg !9228, !tbaa !2121
  %8 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, i32 0, !dbg !9228
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada14BufferedSerialE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %8, align 4, !dbg !9228, !tbaa !2121
  %9 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !9230
  %10 = call noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %9, i8* noundef %1, i64 noundef %3), !dbg !9230
  %11 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !9231
  %12 = call noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %11, i8* noundef %2, i64 noundef %3), !dbg !9231
  ret %"class.Cicada::BufferedSerial"* %0, !dbg !9232
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada14BufferedSerial23transferToAndFromBufferEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) local_unnamed_addr #2 align 2 !dbg !9233 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !9235, metadata !DIExpression()), !dbg !9237
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #34, !dbg !9238
  %3 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, !dbg !9239
  %4 = bitcast %"class.Cicada::ICommDevice"* %3 to i1 (%"class.Cicada::ICommDevice"*, i8*)***, !dbg !9239
  %5 = load i1 (%"class.Cicada::ICommDevice"*, i8*)**, i1 (%"class.Cicada::ICommDevice"*, i8*)*** %4, align 4, !dbg !9239, !tbaa !2121
  %6 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*, i8*)*, i1 (%"class.Cicada::ICommDevice"*, i8*)** %5, i32 7, !dbg !9239
  %7 = load i1 (%"class.Cicada::ICommDevice"*, i8*)*, i1 (%"class.Cicada::ICommDevice"*, i8*)** %6, align 4, !dbg !9239
  call void @llvm.dbg.value(metadata i8* %2, metadata !9236, metadata !DIExpression(DW_OP_deref)), !dbg !9237
  %8 = call noundef zeroext i1 %7(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %3, i8* noundef nonnull align 1 dereferenceable(1) %2) #34, !dbg !9239
  br i1 %8, label %9, label %15, !dbg !9241

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !9242
  %11 = bitcast %"class.Cicada::LineCircularBuffer"* %10 to %"class.Cicada::CircularBuffer.0"*, !dbg !9242
  %12 = call noundef zeroext i1 @_ZNK6Cicada14CircularBufferIcE6isFullEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %11), !dbg !9243
  br i1 %12, label %15, label %13, !dbg !9244

13:                                               ; preds = %9
  %14 = load i8, i8* %2, align 1, !dbg !9245, !tbaa !2257
  call void @llvm.dbg.value(metadata i8 %14, metadata !9236, metadata !DIExpression()), !dbg !9237
  call void @_ZN6Cicada18LineCircularBuffer4pushEc(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %10, i8 noundef zeroext %14), !dbg !9247
  br label %15, !dbg !9248

15:                                               ; preds = %13, %9, %1
  %16 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !9249
  %17 = bitcast %"class.Cicada::LineCircularBuffer"* %16 to %"class.Cicada::CircularBuffer.0"*, !dbg !9249
  %18 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %17), !dbg !9251
  %19 = icmp eq i64 %18, 0, !dbg !9249
  br i1 %19, label %29, label %20, !dbg !9252

20:                                               ; preds = %15
  %21 = call noundef zeroext i8 @_ZN6Cicada14CircularBufferIcE4readEv(%"class.Cicada::CircularBuffer.0"* noundef nonnull align 8 dereferenceable(44) %17), !dbg !9253
  %22 = bitcast %"class.Cicada::ICommDevice"* %3 to i1 (%"class.Cicada::ICommDevice"*, i8)***, !dbg !9256
  %23 = load i1 (%"class.Cicada::ICommDevice"*, i8)**, i1 (%"class.Cicada::ICommDevice"*, i8)*** %22, align 4, !dbg !9256, !tbaa !2121
  %24 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*, i8)*, i1 (%"class.Cicada::ICommDevice"*, i8)** %23, i32 8, !dbg !9256
  %25 = load i1 (%"class.Cicada::ICommDevice"*, i8)*, i1 (%"class.Cicada::ICommDevice"*, i8)** %24, align 4, !dbg !9256
  %26 = call noundef zeroext i1 %25(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %3, i8 noundef zeroext %21) #34, !dbg !9256
  br i1 %26, label %27, label %29, !dbg !9257

27:                                               ; preds = %20
  %28 = call noundef zeroext i8 @_ZN6Cicada18LineCircularBuffer4pullEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %16), !dbg !9258
  br label %29, !dbg !9260

29:                                               ; preds = %20, %27, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #34, !dbg !9261
  ret void, !dbg !9261
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_Z18eDisableInterruptsv() local_unnamed_addr #2 !dbg !9262 {
  call void asm sideeffect "cpsid i", "~{memory}"() #34, !dbg !9263, !srcloc !9266
  ret void, !dbg !9267
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_Z17eEnableInterruptsv() local_unnamed_addr #2 !dbg !9268 {
  call void asm sideeffect "cpsie i", "~{memory}"() #34, !dbg !9269, !srcloc !9272
  ret void, !dbg !9273
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Init(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #9 !dbg !9274 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9278, metadata !DIExpression()), !dbg !9279
  %2 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !9280
  br i1 %2, label %27, label %3, !dbg !9282

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9283
  %5 = load volatile i32, i32* %4, align 4, !dbg !9283, !tbaa !9285
  %6 = icmp eq i32 %5, 0, !dbg !9288
  br i1 %6, label %7, label %9, !dbg !9289

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9290
  store i32 0, i32* %8, align 4, !dbg !9292, !tbaa !9293
  call void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !9294
  br label %9, !dbg !9295

9:                                                ; preds = %7, %3
  store volatile i32 36, i32* %4, align 4, !dbg !9296, !tbaa !9285
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9297
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %10, align 4, !dbg !9297, !tbaa !9298
  %12 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %11, i32 0, i32 3, !dbg !9297
  %13 = load volatile i32, i32* %12, align 4, !dbg !9297, !tbaa !6432
  %14 = and i32 %13, -8193, !dbg !9297
  store volatile i32 %14, i32* %12, align 4, !dbg !9297, !tbaa !6432
  call fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !9299
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %10, align 4, !dbg !9300, !tbaa !9298
  %16 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 4, !dbg !9300
  %17 = load volatile i32, i32* %16, align 4, !dbg !9300, !tbaa !6315
  %18 = and i32 %17, -18433, !dbg !9300
  store volatile i32 %18, i32* %16, align 4, !dbg !9300, !tbaa !6315
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 5, !dbg !9301
  %20 = load volatile i32, i32* %19, align 4, !dbg !9301, !tbaa !6320
  %21 = and i32 %20, -43, !dbg !9301
  store volatile i32 %21, i32* %19, align 4, !dbg !9301, !tbaa !6320
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 3, !dbg !9302
  %23 = load volatile i32, i32* %22, align 4, !dbg !9302, !tbaa !6432
  %24 = or i32 %23, 8192, !dbg !9302
  store volatile i32 %24, i32* %22, align 4, !dbg !9302, !tbaa !6432
  %25 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !9303
  store volatile i32 0, i32* %25, align 4, !dbg !9304, !tbaa !9305
  store volatile i32 32, i32* %4, align 4, !dbg !9306, !tbaa !9285
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !9307
  store volatile i32 32, i32* %26, align 4, !dbg !9308, !tbaa !9309
  br label %27, !dbg !9310

27:                                               ; preds = %1, %9
  %28 = phi i32 [ 0, %9 ], [ 1, %1 ], !dbg !9279
  ret i32 %28, !dbg !9311
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #9 !dbg !9312 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9316, metadata !DIExpression()), !dbg !9317
  ret void, !dbg !9318
}

; Function Attrs: noinline nounwind
define internal fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* nocapture noundef readonly %0) unnamed_addr #9 !dbg !9319 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9321, metadata !DIExpression()), !dbg !9324
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9325
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !9325, !tbaa !9298
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 4, !dbg !9325
  %5 = load volatile i32, i32* %4, align 4, !dbg !9325, !tbaa !6315
  %6 = and i32 %5, -12289, !dbg !9325
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 2, !dbg !9325
  %8 = load i32, i32* %7, align 4, !dbg !9325, !tbaa !9326
  %9 = or i32 %6, %8, !dbg !9325
  store volatile i32 %9, i32* %4, align 4, !dbg !9325, !tbaa !6315
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9327
  %11 = load i32, i32* %10, align 4, !dbg !9327, !tbaa !9328
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3, !dbg !9329
  %13 = load i32, i32* %12, align 4, !dbg !9329, !tbaa !9330
  %14 = or i32 %13, %11, !dbg !9331
  %15 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 4, !dbg !9332
  %16 = load i32, i32* %15, align 4, !dbg !9332, !tbaa !9333
  %17 = or i32 %14, %16, !dbg !9334
  call void @llvm.dbg.value(metadata i32 %17, metadata !9322, metadata !DIExpression()), !dbg !9324
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !9335
  %19 = load volatile i32, i32* %18, align 4, !dbg !9335, !tbaa !6432
  %20 = and i32 %19, -5645, !dbg !9335
  %21 = or i32 %17, %20, !dbg !9335
  store volatile i32 %21, i32* %18, align 4, !dbg !9335, !tbaa !6432
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !9336
  %23 = load volatile i32, i32* %22, align 4, !dbg !9336, !tbaa !6320
  %24 = and i32 %23, -769, !dbg !9336
  %25 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 5, !dbg !9336
  %26 = load i32, i32* %25, align 4, !dbg !9336, !tbaa !9337
  %27 = or i32 %24, %26, !dbg !9336
  store volatile i32 %27, i32* %22, align 4, !dbg !9336, !tbaa !6320
  %28 = icmp eq %struct.USART_TypeDef* %3, inttoptr (i32 1073821696 to %struct.USART_TypeDef*), !dbg !9338
  br i1 %28, label %29, label %31, !dbg !9340

29:                                               ; preds = %1
  %30 = call i32 @HAL_RCC_GetPCLK2Freq() #34, !dbg !9341
  call void @llvm.dbg.value(metadata i32 %30, metadata !9323, metadata !DIExpression()), !dbg !9324
  br label %33, !dbg !9343

31:                                               ; preds = %1
  %32 = call i32 @HAL_RCC_GetPCLK1Freq() #34, !dbg !9344
  call void @llvm.dbg.value(metadata i32 %32, metadata !9323, metadata !DIExpression()), !dbg !9324
  br label %33

33:                                               ; preds = %31, %29
  %34 = phi i32 [ %32, %31 ], [ %30, %29 ]
  %35 = mul i32 %34, 25, !dbg !9346
  %36 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9346
  %37 = load i32, i32* %36, align 4, !dbg !9346, !tbaa !9347
  %38 = shl i32 %37, 2, !dbg !9346
  %39 = udiv i32 %35, %38, !dbg !9346
  %40 = udiv i32 %39, 100, !dbg !9346
  %41 = shl nuw nsw i32 %40, 4, !dbg !9346
  %42 = mul i32 %40, -100, !dbg !9346
  %43 = add i32 %42, %39, !dbg !9346
  %44 = shl i32 %43, 4, !dbg !9346
  %45 = add i32 %44, 50, !dbg !9346
  %46 = udiv i32 %45, 100, !dbg !9346
  %47 = and i32 %46, 240, !dbg !9346
  %48 = add nuw nsw i32 %47, %41, !dbg !9346
  %49 = and i32 %46, 15, !dbg !9346
  %50 = or i32 %48, %49, !dbg !9346
  %51 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !9346, !tbaa !9298
  %52 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %51, i32 0, i32 2, !dbg !9346
  store volatile i32 %50, i32* %52, align 4, !dbg !9346, !tbaa !6450
  ret void, !dbg !9348
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_HalfDuplex_Init(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #9 !dbg !9349 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9351, metadata !DIExpression()), !dbg !9352
  %2 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !9353
  br i1 %2, label %29, label %3, !dbg !9355

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9356
  %5 = load volatile i32, i32* %4, align 4, !dbg !9356, !tbaa !9285
  %6 = icmp eq i32 %5, 0, !dbg !9358
  br i1 %6, label %7, label %9, !dbg !9359

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9360
  store i32 0, i32* %8, align 4, !dbg !9362, !tbaa !9293
  call void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !9363
  br label %9, !dbg !9364

9:                                                ; preds = %7, %3
  store volatile i32 36, i32* %4, align 4, !dbg !9365, !tbaa !9285
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9366
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %10, align 4, !dbg !9366, !tbaa !9298
  %12 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %11, i32 0, i32 3, !dbg !9366
  %13 = load volatile i32, i32* %12, align 4, !dbg !9366, !tbaa !6432
  %14 = and i32 %13, -8193, !dbg !9366
  store volatile i32 %14, i32* %12, align 4, !dbg !9366, !tbaa !6432
  call fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !9367
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %10, align 4, !dbg !9368, !tbaa !9298
  %16 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 4, !dbg !9368
  %17 = load volatile i32, i32* %16, align 4, !dbg !9368, !tbaa !6315
  %18 = and i32 %17, -18433, !dbg !9368
  store volatile i32 %18, i32* %16, align 4, !dbg !9368, !tbaa !6315
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 5, !dbg !9369
  %20 = load volatile i32, i32* %19, align 4, !dbg !9369, !tbaa !6320
  %21 = and i32 %20, -35, !dbg !9369
  store volatile i32 %21, i32* %19, align 4, !dbg !9369, !tbaa !6320
  %22 = load volatile i32, i32* %19, align 4, !dbg !9370, !tbaa !6320
  %23 = or i32 %22, 8, !dbg !9370
  store volatile i32 %23, i32* %19, align 4, !dbg !9370, !tbaa !6320
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 3, !dbg !9371
  %25 = load volatile i32, i32* %24, align 4, !dbg !9371, !tbaa !6432
  %26 = or i32 %25, 8192, !dbg !9371
  store volatile i32 %26, i32* %24, align 4, !dbg !9371, !tbaa !6432
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !9372
  store volatile i32 0, i32* %27, align 4, !dbg !9373, !tbaa !9305
  store volatile i32 32, i32* %4, align 4, !dbg !9374, !tbaa !9285
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !9375
  store volatile i32 32, i32* %28, align 4, !dbg !9376, !tbaa !9309
  br label %29, !dbg !9377

29:                                               ; preds = %1, %9
  %30 = phi i32 [ 0, %9 ], [ 1, %1 ], !dbg !9352
  ret i32 %30, !dbg !9378
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_LIN_Init(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef %1) local_unnamed_addr #9 !dbg !9379 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9383, metadata !DIExpression()), !dbg !9385
  call void @llvm.dbg.value(metadata i32 %1, metadata !9384, metadata !DIExpression()), !dbg !9385
  %3 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !9386
  br i1 %3, label %34, label %4, !dbg !9388

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9389
  %6 = load volatile i32, i32* %5, align 4, !dbg !9389, !tbaa !9285
  %7 = icmp eq i32 %6, 0, !dbg !9391
  br i1 %7, label %8, label %10, !dbg !9392

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9393
  store i32 0, i32* %9, align 4, !dbg !9395, !tbaa !9293
  call void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !9396
  br label %10, !dbg !9397

10:                                               ; preds = %8, %4
  store volatile i32 36, i32* %5, align 4, !dbg !9398, !tbaa !9285
  %11 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9399
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %11, align 4, !dbg !9399, !tbaa !9298
  %13 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %12, i32 0, i32 3, !dbg !9399
  %14 = load volatile i32, i32* %13, align 4, !dbg !9399, !tbaa !6432
  %15 = and i32 %14, -8193, !dbg !9399
  store volatile i32 %15, i32* %13, align 4, !dbg !9399, !tbaa !6432
  call fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !9400
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %11, align 4, !dbg !9401, !tbaa !9298
  %17 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %16, i32 0, i32 4, !dbg !9401
  %18 = load volatile i32, i32* %17, align 4, !dbg !9401, !tbaa !6315
  %19 = and i32 %18, -2049, !dbg !9401
  store volatile i32 %19, i32* %17, align 4, !dbg !9401, !tbaa !6315
  %20 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %16, i32 0, i32 5, !dbg !9402
  %21 = load volatile i32, i32* %20, align 4, !dbg !9402, !tbaa !6320
  %22 = and i32 %21, -43, !dbg !9402
  store volatile i32 %22, i32* %20, align 4, !dbg !9402, !tbaa !6320
  %23 = load volatile i32, i32* %17, align 4, !dbg !9403, !tbaa !6315
  %24 = or i32 %23, 16384, !dbg !9403
  store volatile i32 %24, i32* %17, align 4, !dbg !9403, !tbaa !6315
  %25 = load volatile i32, i32* %17, align 4, !dbg !9404, !tbaa !6315
  %26 = and i32 %25, -33, !dbg !9404
  store volatile i32 %26, i32* %17, align 4, !dbg !9404, !tbaa !6315
  %27 = load volatile i32, i32* %17, align 4, !dbg !9405, !tbaa !6315
  %28 = or i32 %27, %1, !dbg !9405
  store volatile i32 %28, i32* %17, align 4, !dbg !9405, !tbaa !6315
  %29 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %16, i32 0, i32 3, !dbg !9406
  %30 = load volatile i32, i32* %29, align 4, !dbg !9406, !tbaa !6432
  %31 = or i32 %30, 8192, !dbg !9406
  store volatile i32 %31, i32* %29, align 4, !dbg !9406, !tbaa !6432
  %32 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !9407
  store volatile i32 0, i32* %32, align 4, !dbg !9408, !tbaa !9305
  store volatile i32 32, i32* %5, align 4, !dbg !9409, !tbaa !9285
  %33 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !9410
  store volatile i32 32, i32* %33, align 4, !dbg !9411, !tbaa !9309
  br label %34, !dbg !9412

34:                                               ; preds = %2, %10
  %35 = phi i32 [ 0, %10 ], [ 1, %2 ], !dbg !9385
  ret i32 %35, !dbg !9413
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_MultiProcessor_Init(%struct.__UART_HandleTypeDef* noundef %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #9 !dbg !9414 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9418, metadata !DIExpression()), !dbg !9421
  call void @llvm.dbg.value(metadata i8 %1, metadata !9419, metadata !DIExpression()), !dbg !9421
  call void @llvm.dbg.value(metadata i32 %2, metadata !9420, metadata !DIExpression()), !dbg !9421
  %4 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !9422
  br i1 %4, label %38, label %5, !dbg !9424

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9425
  %7 = load volatile i32, i32* %6, align 4, !dbg !9425, !tbaa !9285
  %8 = icmp eq i32 %7, 0, !dbg !9427
  br i1 %8, label %9, label %11, !dbg !9428

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9429
  store i32 0, i32* %10, align 4, !dbg !9431, !tbaa !9293
  call void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !9432
  br label %11, !dbg !9433

11:                                               ; preds = %9, %5
  store volatile i32 36, i32* %6, align 4, !dbg !9434, !tbaa !9285
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9435
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %12, align 4, !dbg !9435, !tbaa !9298
  %14 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %13, i32 0, i32 3, !dbg !9435
  %15 = load volatile i32, i32* %14, align 4, !dbg !9435, !tbaa !6432
  %16 = and i32 %15, -8193, !dbg !9435
  store volatile i32 %16, i32* %14, align 4, !dbg !9435, !tbaa !6432
  call fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !9436
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %12, align 4, !dbg !9437, !tbaa !9298
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 4, !dbg !9437
  %19 = load volatile i32, i32* %18, align 4, !dbg !9437, !tbaa !6315
  %20 = and i32 %19, -18433, !dbg !9437
  store volatile i32 %20, i32* %18, align 4, !dbg !9437, !tbaa !6315
  %21 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 5, !dbg !9438
  %22 = load volatile i32, i32* %21, align 4, !dbg !9438, !tbaa !6320
  %23 = and i32 %22, -43, !dbg !9438
  store volatile i32 %23, i32* %21, align 4, !dbg !9438, !tbaa !6320
  %24 = load volatile i32, i32* %18, align 4, !dbg !9439, !tbaa !6315
  %25 = and i32 %24, -16, !dbg !9439
  store volatile i32 %25, i32* %18, align 4, !dbg !9439, !tbaa !6315
  %26 = zext i8 %1 to i32, !dbg !9440
  %27 = load volatile i32, i32* %18, align 4, !dbg !9440, !tbaa !6315
  %28 = or i32 %27, %26, !dbg !9440
  store volatile i32 %28, i32* %18, align 4, !dbg !9440, !tbaa !6315
  %29 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 3, !dbg !9441
  %30 = load volatile i32, i32* %29, align 4, !dbg !9441, !tbaa !6432
  %31 = and i32 %30, -2049, !dbg !9441
  store volatile i32 %31, i32* %29, align 4, !dbg !9441, !tbaa !6432
  %32 = load volatile i32, i32* %29, align 4, !dbg !9442, !tbaa !6432
  %33 = or i32 %32, %2, !dbg !9442
  store volatile i32 %33, i32* %29, align 4, !dbg !9442, !tbaa !6432
  %34 = load volatile i32, i32* %29, align 4, !dbg !9443, !tbaa !6432
  %35 = or i32 %34, 8192, !dbg !9443
  store volatile i32 %35, i32* %29, align 4, !dbg !9443, !tbaa !6432
  %36 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !9444
  store volatile i32 0, i32* %36, align 4, !dbg !9445, !tbaa !9305
  store volatile i32 32, i32* %6, align 4, !dbg !9446, !tbaa !9285
  %37 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !9447
  store volatile i32 32, i32* %37, align 4, !dbg !9448, !tbaa !9309
  br label %38, !dbg !9449

38:                                               ; preds = %3, %11
  %39 = phi i32 [ 0, %11 ], [ 1, %3 ], !dbg !9421
  ret i32 %39, !dbg !9450
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_DeInit(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #9 !dbg !9451 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9453, metadata !DIExpression()), !dbg !9454
  %2 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !9455
  br i1 %2, label %13, label %3, !dbg !9457

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9458
  store volatile i32 36, i32* %4, align 4, !dbg !9459, !tbaa !9285
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9460
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9460, !tbaa !9298
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %6, i32 0, i32 3, !dbg !9460
  %8 = load volatile i32, i32* %7, align 4, !dbg !9460, !tbaa !6432
  %9 = and i32 %8, -8193, !dbg !9460
  store volatile i32 %9, i32* %7, align 4, !dbg !9460, !tbaa !6432
  call void @HAL_UART_MspDeInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !9461
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !9462
  store volatile i32 0, i32* %10, align 4, !dbg !9463, !tbaa !9305
  store volatile i32 0, i32* %4, align 4, !dbg !9464, !tbaa !9285
  %11 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !9465
  store volatile i32 0, i32* %11, align 4, !dbg !9466, !tbaa !9309
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9467
  store i32 0, i32* %12, align 4, !dbg !9467, !tbaa !9293
  br label %13, !dbg !9469

13:                                               ; preds = %1, %3
  %14 = phi i32 [ 0, %3 ], [ 1, %1 ], !dbg !9454
  ret i32 %14, !dbg !9470
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_MspDeInit(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #9 !dbg !9471 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9473, metadata !DIExpression()), !dbg !9474
  ret void, !dbg !9475
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Transmit(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef readonly %1, i16 noundef zeroext %2, i32 noundef %3) local_unnamed_addr #9 !dbg !9476 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9480, metadata !DIExpression()), !dbg !9486
  call void @llvm.dbg.value(metadata i8* %1, metadata !9481, metadata !DIExpression()), !dbg !9486
  call void @llvm.dbg.value(metadata i16 %2, metadata !9482, metadata !DIExpression()), !dbg !9486
  call void @llvm.dbg.value(metadata i32 %3, metadata !9483, metadata !DIExpression()), !dbg !9486
  call void @llvm.dbg.value(metadata i32 0, metadata !9485, metadata !DIExpression()), !dbg !9486
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9487
  %6 = load volatile i32, i32* %5, align 4, !dbg !9487, !tbaa !9285
  %7 = icmp eq i32 %6, 32, !dbg !9489
  br i1 %7, label %8, label %65, !dbg !9490

8:                                                ; preds = %4
  %9 = icmp eq i8* %1, null, !dbg !9491
  %10 = icmp eq i16 %2, 0
  %11 = or i1 %9, %10, !dbg !9494
  br i1 %11, label %65, label %12, !dbg !9494

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9495
  %14 = load i32, i32* %13, align 4, !dbg !9495, !tbaa !9293
  %15 = icmp eq i32 %14, 1, !dbg !9495
  br i1 %15, label %65, label %16, !dbg !9498

16:                                               ; preds = %12
  store i32 1, i32* %13, align 4, !dbg !9499, !tbaa !9293
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !9501
  store volatile i32 0, i32* %17, align 4, !dbg !9502, !tbaa !9305
  store volatile i32 33, i32* %5, align 4, !dbg !9503, !tbaa !9285
  %18 = call i32 @HAL_GetTick() #34, !dbg !9504
  call void @llvm.dbg.value(metadata i32 %18, metadata !9485, metadata !DIExpression()), !dbg !9486
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 3, !dbg !9505
  store i16 %2, i16* %19, align 4, !dbg !9506, !tbaa !9507
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !9508
  store volatile i16 %2, i16* %20, align 2, !dbg !9509, !tbaa !9510
  call void @llvm.dbg.value(metadata i8* %1, metadata !9481, metadata !DIExpression()), !dbg !9486
  %21 = load volatile i16, i16* %20, align 2, !dbg !9511, !tbaa !9510
  %22 = icmp eq i16 %21, 0, !dbg !9512
  br i1 %22, label %61, label %23, !dbg !9513

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1
  %25 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3
  br label %28, !dbg !9513

28:                                               ; preds = %23, %57
  %29 = phi i8* [ %1, %23 ], [ %58, %57 ]
  call void @llvm.dbg.value(metadata i8* %29, metadata !9481, metadata !DIExpression()), !dbg !9486
  %30 = load volatile i16, i16* %20, align 2, !dbg !9514, !tbaa !9510
  %31 = add i16 %30, -1, !dbg !9514
  store volatile i16 %31, i16* %20, align 2, !dbg !9514, !tbaa !9510
  %32 = load i32, i32* %24, align 4, !dbg !9516, !tbaa !9328
  %33 = icmp eq i32 %32, 4096, !dbg !9518
  %34 = call fastcc i32 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef 128, i32 noundef %18, i32 noundef %3), !dbg !9519
  %35 = icmp eq i32 %34, 0, !dbg !9519
  br i1 %33, label %36, label %50, !dbg !9520

36:                                               ; preds = %28
  br i1 %35, label %37, label %65, !dbg !9521

37:                                               ; preds = %36
  %38 = bitcast i8* %29 to i16*, !dbg !9523
  call void @llvm.dbg.value(metadata i16* %38, metadata !9484, metadata !DIExpression()), !dbg !9486
  %39 = load i16, i16* %38, align 2, !dbg !9524, !tbaa !9525
  %40 = and i16 %39, 511, !dbg !9526
  %41 = zext i16 %40 to i32, !dbg !9526
  %42 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %26, align 4, !dbg !9527, !tbaa !9298
  %43 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %42, i32 0, i32 1, !dbg !9528
  store volatile i32 %41, i32* %43, align 4, !dbg !9529, !tbaa !9530
  %44 = load i32, i32* %27, align 4, !dbg !9531, !tbaa !9330
  %45 = icmp eq i32 %44, 0, !dbg !9533
  br i1 %45, label %46, label %48, !dbg !9534

46:                                               ; preds = %37
  %47 = getelementptr inbounds i8, i8* %29, i32 2, !dbg !9535
  call void @llvm.dbg.value(metadata i8* %47, metadata !9481, metadata !DIExpression()), !dbg !9486
  br label %57, !dbg !9537

48:                                               ; preds = %37
  %49 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !9538
  call void @llvm.dbg.value(metadata i8* %49, metadata !9481, metadata !DIExpression()), !dbg !9486
  br label %57

50:                                               ; preds = %28
  br i1 %35, label %51, label %65, !dbg !9540

51:                                               ; preds = %50
  %52 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !9542
  call void @llvm.dbg.value(metadata i8* %52, metadata !9481, metadata !DIExpression()), !dbg !9486
  %53 = load i8, i8* %29, align 1, !dbg !9543, !tbaa !2505
  %54 = zext i8 %53 to i32, !dbg !9543
  %55 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %25, align 4, !dbg !9544, !tbaa !9298
  %56 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %55, i32 0, i32 1, !dbg !9545
  store volatile i32 %54, i32* %56, align 4, !dbg !9546, !tbaa !9530
  br label %57

57:                                               ; preds = %46, %48, %51
  %58 = phi i8* [ %47, %46 ], [ %49, %48 ], [ %52, %51 ], !dbg !9519
  call void @llvm.dbg.value(metadata i8* %58, metadata !9481, metadata !DIExpression()), !dbg !9486
  %59 = load volatile i16, i16* %20, align 2, !dbg !9511, !tbaa !9510
  %60 = icmp eq i16 %59, 0, !dbg !9512
  br i1 %60, label %61, label %28, !dbg !9513, !llvm.loop !9547

61:                                               ; preds = %57, %16
  %62 = call fastcc i32 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef 64, i32 noundef %18, i32 noundef %3), !dbg !9549
  %63 = icmp eq i32 %62, 0, !dbg !9551
  br i1 %63, label %64, label %65, !dbg !9552

64:                                               ; preds = %61
  store volatile i32 32, i32* %5, align 4, !dbg !9553, !tbaa !9285
  store i32 0, i32* %13, align 4, !dbg !9554, !tbaa !9293
  br label %65, !dbg !9556

65:                                               ; preds = %50, %36, %4, %61, %12, %8, %64
  %66 = phi i32 [ 0, %64 ], [ 1, %8 ], [ 2, %12 ], [ 3, %61 ], [ 2, %4 ], [ 3, %36 ], [ 3, %50 ], !dbg !9557
  ret i32 %66, !dbg !9558
}

; Function Attrs: noinline nounwind
define internal fastcc i32 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #9 !dbg !9559 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9563, metadata !DIExpression()), !dbg !9568
  call void @llvm.dbg.value(metadata i32 %1, metadata !9564, metadata !DIExpression()), !dbg !9568
  call void @llvm.dbg.value(metadata i32 0, metadata !9565, metadata !DIExpression()), !dbg !9568
  call void @llvm.dbg.value(metadata i32 %2, metadata !9566, metadata !DIExpression()), !dbg !9568
  call void @llvm.dbg.value(metadata i32 %3, metadata !9567, metadata !DIExpression()), !dbg !9568
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9569, !tbaa !9298
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %6, i32 0, i32 0, !dbg !9569
  %8 = load volatile i32, i32* %7, align 4, !dbg !9569, !tbaa !9570
  %9 = and i32 %8, %1, !dbg !9569
  %10 = icmp eq i32 %9, %1, !dbg !9569
  br i1 %10, label %37, label %11, !dbg !9571

11:                                               ; preds = %4
  switch i32 %3, label %17 [
    i32 0, label %21
    i32 -1, label %12
  ]

12:                                               ; preds = %17, %11
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !tbaa !9298
  %14 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %13, i32 0, i32 0
  %15 = icmp eq i32 %3, -1
  br label %33, !dbg !9571

16:                                               ; preds = %33
  br i1 %15, label %33, label %17, !dbg !9572

17:                                               ; preds = %16, %11
  %18 = call i32 @HAL_GetTick() #34, !dbg !9574
  %19 = sub i32 %18, %2, !dbg !9578
  %20 = icmp ugt i32 %19, %3, !dbg !9579
  br i1 %20, label %21, label %12, !dbg !9580

21:                                               ; preds = %17, %11
  %22 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9569
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !9581, !tbaa !9298
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 3, !dbg !9581
  %25 = load volatile i32, i32* %24, align 4, !dbg !9581, !tbaa !6432
  %26 = and i32 %25, -417, !dbg !9581
  store volatile i32 %26, i32* %24, align 4, !dbg !9581, !tbaa !6432
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 5, !dbg !9583
  %28 = load volatile i32, i32* %27, align 4, !dbg !9583, !tbaa !6320
  %29 = and i32 %28, -2, !dbg !9583
  store volatile i32 %29, i32* %27, align 4, !dbg !9583, !tbaa !6320
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9584
  store volatile i32 32, i32* %30, align 4, !dbg !9585, !tbaa !9285
  %31 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !9586
  store volatile i32 32, i32* %31, align 4, !dbg !9587, !tbaa !9309
  %32 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9588
  store i32 0, i32* %32, align 4, !dbg !9588, !tbaa !9293
  br label %37, !dbg !9590

33:                                               ; preds = %12, %16
  %34 = load volatile i32, i32* %14, align 4, !dbg !9569, !tbaa !9570
  %35 = and i32 %34, %1, !dbg !9569
  %36 = icmp eq i32 %35, %1, !dbg !9569
  br i1 %36, label %37, label %16, !dbg !9571, !llvm.loop !9591

37:                                               ; preds = %33, %4, %21
  %38 = phi i32 [ 3, %21 ], [ 0, %4 ], [ 0, %33 ], !dbg !9568
  ret i32 %38, !dbg !9593
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Receive(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef writeonly %1, i16 noundef zeroext %2, i32 noundef %3) local_unnamed_addr #9 !dbg !9594 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9596, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata i8* %1, metadata !9597, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata i16 %2, metadata !9598, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata i32 %3, metadata !9599, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata i32 0, metadata !9601, metadata !DIExpression()), !dbg !9602
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !9603
  %6 = load volatile i32, i32* %5, align 4, !dbg !9603, !tbaa !9309
  %7 = icmp eq i32 %6, 32, !dbg !9605
  br i1 %7, label %8, label %80, !dbg !9606

8:                                                ; preds = %4
  %9 = icmp eq i8* %1, null, !dbg !9607
  %10 = icmp eq i16 %2, 0
  %11 = or i1 %9, %10, !dbg !9610
  br i1 %11, label %80, label %12, !dbg !9610

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9611
  %14 = load i32, i32* %13, align 4, !dbg !9611, !tbaa !9293
  %15 = icmp eq i32 %14, 1, !dbg !9611
  br i1 %15, label %80, label %16, !dbg !9614

16:                                               ; preds = %12
  store i32 1, i32* %13, align 4, !dbg !9615, !tbaa !9293
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !9617
  store volatile i32 0, i32* %17, align 4, !dbg !9618, !tbaa !9305
  store volatile i32 34, i32* %5, align 4, !dbg !9619, !tbaa !9309
  %18 = call i32 @HAL_GetTick() #34, !dbg !9620
  call void @llvm.dbg.value(metadata i32 %18, metadata !9601, metadata !DIExpression()), !dbg !9602
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 6, !dbg !9621
  store i16 %2, i16* %19, align 4, !dbg !9622, !tbaa !9623
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !9624
  store volatile i16 %2, i16* %20, align 2, !dbg !9625, !tbaa !9626
  call void @llvm.dbg.value(metadata i8* %1, metadata !9597, metadata !DIExpression()), !dbg !9602
  %21 = load volatile i16, i16* %20, align 2, !dbg !9627, !tbaa !9626
  %22 = icmp eq i16 %21, 0, !dbg !9628
  br i1 %22, label %79, label %23, !dbg !9629

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1
  %25 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3
  %29 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  br label %31, !dbg !9629

31:                                               ; preds = %23, %75
  %32 = phi i8* [ %1, %23 ], [ %76, %75 ]
  call void @llvm.dbg.value(metadata i8* %32, metadata !9597, metadata !DIExpression()), !dbg !9602
  %33 = load volatile i16, i16* %20, align 2, !dbg !9630, !tbaa !9626
  %34 = add i16 %33, -1, !dbg !9630
  store volatile i16 %34, i16* %20, align 2, !dbg !9630, !tbaa !9626
  %35 = load i32, i32* %24, align 4, !dbg !9632, !tbaa !9328
  %36 = icmp eq i32 %35, 4096, !dbg !9634
  %37 = call fastcc i32 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef 32, i32 noundef %18, i32 noundef %3), !dbg !9635
  %38 = icmp eq i32 %37, 0, !dbg !9635
  br i1 %36, label %39, label %58, !dbg !9636

39:                                               ; preds = %31
  br i1 %38, label %40, label %80, !dbg !9637

40:                                               ; preds = %39
  %41 = bitcast i8* %32 to i16*, !dbg !9639
  call void @llvm.dbg.value(metadata i16* %41, metadata !9600, metadata !DIExpression()), !dbg !9602
  %42 = load i32, i32* %28, align 4, !dbg !9640, !tbaa !9330
  %43 = icmp eq i32 %42, 0, !dbg !9642
  br i1 %43, label %44, label %51, !dbg !9643

44:                                               ; preds = %40
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !9644, !tbaa !9298
  %46 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %45, i32 0, i32 1, !dbg !9646
  %47 = load volatile i32, i32* %46, align 4, !dbg !9646, !tbaa !9530
  %48 = trunc i32 %47 to i16, !dbg !9647
  %49 = and i16 %48, 511, !dbg !9647
  store i16 %49, i16* %41, align 2, !dbg !9648, !tbaa !9525
  %50 = getelementptr inbounds i8, i8* %32, i32 2, !dbg !9649
  call void @llvm.dbg.value(metadata i8* %50, metadata !9597, metadata !DIExpression()), !dbg !9602
  br label %75, !dbg !9650

51:                                               ; preds = %40
  %52 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %29, align 4, !dbg !9651, !tbaa !9298
  %53 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %52, i32 0, i32 1, !dbg !9653
  %54 = load volatile i32, i32* %53, align 4, !dbg !9653, !tbaa !9530
  %55 = trunc i32 %54 to i16, !dbg !9654
  %56 = and i16 %55, 255, !dbg !9654
  store i16 %56, i16* %41, align 2, !dbg !9655, !tbaa !9525
  %57 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !9656
  call void @llvm.dbg.value(metadata i8* %57, metadata !9597, metadata !DIExpression()), !dbg !9602
  br label %75

58:                                               ; preds = %31
  br i1 %38, label %59, label %80, !dbg !9657

59:                                               ; preds = %58
  %60 = load i32, i32* %25, align 4, !dbg !9659, !tbaa !9330
  %61 = icmp eq i32 %60, 0, !dbg !9661
  br i1 %61, label %62, label %68, !dbg !9662

62:                                               ; preds = %59
  %63 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %27, align 4, !dbg !9663, !tbaa !9298
  %64 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %63, i32 0, i32 1, !dbg !9665
  %65 = load volatile i32, i32* %64, align 4, !dbg !9665, !tbaa !9530
  %66 = trunc i32 %65 to i8, !dbg !9666
  %67 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !9667
  call void @llvm.dbg.value(metadata i8* %67, metadata !9597, metadata !DIExpression()), !dbg !9602
  store i8 %66, i8* %32, align 1, !dbg !9668, !tbaa !2505
  br label %75, !dbg !9669

68:                                               ; preds = %59
  %69 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %26, align 4, !dbg !9670, !tbaa !9298
  %70 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %69, i32 0, i32 1, !dbg !9672
  %71 = load volatile i32, i32* %70, align 4, !dbg !9672, !tbaa !9530
  %72 = trunc i32 %71 to i8, !dbg !9673
  %73 = and i8 %72, 127, !dbg !9673
  %74 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !9674
  call void @llvm.dbg.value(metadata i8* %74, metadata !9597, metadata !DIExpression()), !dbg !9602
  store i8 %73, i8* %32, align 1, !dbg !9675, !tbaa !2505
  br label %75

75:                                               ; preds = %62, %68, %44, %51
  %76 = phi i8* [ %50, %44 ], [ %57, %51 ], [ %67, %62 ], [ %74, %68 ], !dbg !9635
  call void @llvm.dbg.value(metadata i8* %76, metadata !9597, metadata !DIExpression()), !dbg !9602
  %77 = load volatile i16, i16* %20, align 2, !dbg !9627, !tbaa !9626
  %78 = icmp eq i16 %77, 0, !dbg !9628
  br i1 %78, label %79, label %31, !dbg !9629, !llvm.loop !9676

79:                                               ; preds = %75, %16
  store volatile i32 32, i32* %5, align 4, !dbg !9678, !tbaa !9309
  store i32 0, i32* %13, align 4, !dbg !9679, !tbaa !9293
  br label %80, !dbg !9681

80:                                               ; preds = %58, %39, %4, %12, %8, %79
  %81 = phi i32 [ 0, %79 ], [ 1, %8 ], [ 2, %12 ], [ 2, %4 ], [ 3, %39 ], [ 3, %58 ], !dbg !9682
  ret i32 %81, !dbg !9683
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_UART_Transmit_IT(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #14 !dbg !9684 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9688, metadata !DIExpression()), !dbg !9691
  call void @llvm.dbg.value(metadata i8* %1, metadata !9689, metadata !DIExpression()), !dbg !9691
  call void @llvm.dbg.value(metadata i16 %2, metadata !9690, metadata !DIExpression()), !dbg !9691
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9692
  %5 = load volatile i32, i32* %4, align 4, !dbg !9692, !tbaa !9285
  %6 = icmp eq i32 %5, 32, !dbg !9694
  br i1 %6, label %7, label %25, !dbg !9695

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !9696
  %9 = icmp eq i16 %2, 0
  %10 = or i1 %8, %9, !dbg !9699
  br i1 %10, label %25, label %11, !dbg !9699

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9700
  %13 = load i32, i32* %12, align 4, !dbg !9700, !tbaa !9293
  %14 = icmp eq i32 %13, 1, !dbg !9700
  br i1 %14, label %25, label %15, !dbg !9703

15:                                               ; preds = %11
  store i32 1, i32* %12, align 4, !dbg !9704, !tbaa !9293
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 2, !dbg !9706
  store i8* %1, i8** %16, align 4, !dbg !9707, !tbaa !9708
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 3, !dbg !9709
  store i16 %2, i16* %17, align 4, !dbg !9710, !tbaa !9507
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !9711
  store volatile i16 %2, i16* %18, align 2, !dbg !9712, !tbaa !9510
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !9713
  store volatile i32 0, i32* %19, align 4, !dbg !9714, !tbaa !9305
  store volatile i32 33, i32* %4, align 4, !dbg !9715, !tbaa !9285
  store i32 0, i32* %12, align 4, !dbg !9716, !tbaa !9293
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9718
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %20, align 4, !dbg !9718, !tbaa !9298
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %21, i32 0, i32 3, !dbg !9718
  %23 = load volatile i32, i32* %22, align 4, !dbg !9718, !tbaa !6432
  %24 = or i32 %23, 128, !dbg !9718
  store volatile i32 %24, i32* %22, align 4, !dbg !9718, !tbaa !6432
  br label %25, !dbg !9719

25:                                               ; preds = %3, %11, %7, %15
  %26 = phi i32 [ 0, %15 ], [ 1, %7 ], [ 2, %11 ], [ 2, %3 ], !dbg !9720
  ret i32 %26, !dbg !9721
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_UART_Receive_IT(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #14 !dbg !9722 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9724, metadata !DIExpression()), !dbg !9727
  call void @llvm.dbg.value(metadata i8* %1, metadata !9725, metadata !DIExpression()), !dbg !9727
  call void @llvm.dbg.value(metadata i16 %2, metadata !9726, metadata !DIExpression()), !dbg !9727
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !9728
  %5 = load volatile i32, i32* %4, align 4, !dbg !9728, !tbaa !9309
  %6 = icmp eq i32 %5, 32, !dbg !9730
  br i1 %6, label %7, label %30, !dbg !9731

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !9732
  %9 = icmp eq i16 %2, 0
  %10 = or i1 %8, %9, !dbg !9735
  br i1 %10, label %30, label %11, !dbg !9735

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9736
  %13 = load i32, i32* %12, align 4, !dbg !9736, !tbaa !9293
  %14 = icmp eq i32 %13, 1, !dbg !9736
  br i1 %14, label %30, label %15, !dbg !9739

15:                                               ; preds = %11
  store i32 1, i32* %12, align 4, !dbg !9740, !tbaa !9293
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !9742
  store i8* %1, i8** %16, align 4, !dbg !9743, !tbaa !9744
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 6, !dbg !9745
  store i16 %2, i16* %17, align 4, !dbg !9746, !tbaa !9623
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !9747
  store volatile i16 %2, i16* %18, align 2, !dbg !9748, !tbaa !9626
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !9749
  store volatile i32 0, i32* %19, align 4, !dbg !9750, !tbaa !9305
  store volatile i32 34, i32* %4, align 4, !dbg !9751, !tbaa !9309
  store i32 0, i32* %12, align 4, !dbg !9752, !tbaa !9293
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9754
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %20, align 4, !dbg !9754, !tbaa !9298
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %21, i32 0, i32 3, !dbg !9754
  %23 = load volatile i32, i32* %22, align 4, !dbg !9754, !tbaa !6432
  %24 = or i32 %23, 256, !dbg !9754
  store volatile i32 %24, i32* %22, align 4, !dbg !9754, !tbaa !6432
  %25 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %21, i32 0, i32 5, !dbg !9755
  %26 = load volatile i32, i32* %25, align 4, !dbg !9755, !tbaa !6320
  %27 = or i32 %26, 1, !dbg !9755
  store volatile i32 %27, i32* %25, align 4, !dbg !9755, !tbaa !6320
  %28 = load volatile i32, i32* %22, align 4, !dbg !9756, !tbaa !6432
  %29 = or i32 %28, 32, !dbg !9756
  store volatile i32 %29, i32* %22, align 4, !dbg !9756, !tbaa !6432
  br label %30, !dbg !9757

30:                                               ; preds = %3, %11, %7, %15
  %31 = phi i32 [ 0, %15 ], [ 1, %7 ], [ 2, %11 ], [ 2, %3 ], !dbg !9758
  ret i32 %31, !dbg !9759
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Transmit_DMA(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #9 !dbg !9760 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9762, metadata !DIExpression()), !dbg !9766
  call void @llvm.dbg.value(metadata i8* %1, metadata !9763, metadata !DIExpression()), !dbg !9766
  call void @llvm.dbg.value(metadata i16 %2, metadata !9764, metadata !DIExpression()), !dbg !9766
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9767
  %5 = load volatile i32, i32* %4, align 4, !dbg !9767, !tbaa !9285
  %6 = icmp eq i32 %5, 32, !dbg !9769
  br i1 %6, label %7, label %38, !dbg !9770

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !9771
  %9 = zext i16 %2 to i32
  %10 = icmp eq i16 %2, 0
  %11 = or i1 %8, %10, !dbg !9774
  br i1 %11, label %38, label %12, !dbg !9774

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9775
  %14 = load i32, i32* %13, align 4, !dbg !9775, !tbaa !9293
  %15 = icmp eq i32 %14, 1, !dbg !9775
  br i1 %15, label %38, label %16, !dbg !9778

16:                                               ; preds = %12
  store i32 1, i32* %13, align 4, !dbg !9779, !tbaa !9293
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 2, !dbg !9781
  store i8* %1, i8** %17, align 4, !dbg !9782, !tbaa !9708
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 3, !dbg !9783
  store i16 %2, i16* %18, align 4, !dbg !9784, !tbaa !9507
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !9785
  store volatile i16 %2, i16* %19, align 2, !dbg !9786, !tbaa !9510
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !9787
  store volatile i32 0, i32* %20, align 4, !dbg !9788, !tbaa !9305
  store volatile i32 33, i32* %4, align 4, !dbg !9789, !tbaa !9285
  %21 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !9790
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %21, align 4, !dbg !9790, !tbaa !9791
  %23 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 5, !dbg !9792
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMATransmitCplt, void (%struct.__DMA_HandleTypeDef*)** %23, align 4, !dbg !9793, !tbaa !9794
  %24 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 6, !dbg !9796
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMATxHalfCplt, void (%struct.__DMA_HandleTypeDef*)** %24, align 4, !dbg !9797, !tbaa !9798
  %25 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 7, !dbg !9799
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMAError, void (%struct.__DMA_HandleTypeDef*)** %25, align 4, !dbg !9800, !tbaa !9801
  %26 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 8, !dbg !9802
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %26, align 4, !dbg !9803, !tbaa !9804
  call void @llvm.dbg.value(metadata i32* undef, metadata !9765, metadata !DIExpression()), !dbg !9766
  %27 = ptrtoint i8* %1 to i32, !dbg !9805
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9806
  %29 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %28, align 4, !dbg !9806, !tbaa !9298
  %30 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %29, i32 0, i32 1, !dbg !9807
  %31 = ptrtoint i32* %30 to i32, !dbg !9808
  %32 = call i32 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* noundef %22, i32 noundef %27, i32 noundef %31, i32 noundef %9) #34, !dbg !9809
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %28, align 4, !dbg !9810, !tbaa !9298
  %34 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %33, i32 0, i32 0, !dbg !9810
  store volatile i32 -65, i32* %34, align 4, !dbg !9810, !tbaa !9570
  store i32 0, i32* %13, align 4, !dbg !9811, !tbaa !9293
  %35 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %33, i32 0, i32 5, !dbg !9813
  %36 = load volatile i32, i32* %35, align 4, !dbg !9813, !tbaa !6320
  %37 = or i32 %36, 128, !dbg !9813
  store volatile i32 %37, i32* %35, align 4, !dbg !9813, !tbaa !6320
  br label %38, !dbg !9814

38:                                               ; preds = %3, %12, %7, %16
  %39 = phi i32 [ 0, %16 ], [ 1, %7 ], [ 2, %12 ], [ 2, %3 ], !dbg !9815
  ret i32 %39, !dbg !9816
}

; Function Attrs: noinline nounwind
define internal void @UART_DMATransmitCplt(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #9 !dbg !9817 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !9821, metadata !DIExpression()), !dbg !9823
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !9824
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !9824
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !9824, !tbaa !9825
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !9822, metadata !DIExpression()), !dbg !9823
  %5 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 0, !dbg !9826
  %6 = load %struct.DMA_Channel_TypeDef*, %struct.DMA_Channel_TypeDef** %5, align 4, !dbg !9826, !tbaa !9828
  %7 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %6, i32 0, i32 0, !dbg !9829
  %8 = load volatile i32, i32* %7, align 4, !dbg !9829, !tbaa !4051
  %9 = and i32 %8, 32, !dbg !9830
  %10 = icmp eq i32 %9, 0, !dbg !9831
  br i1 %10, label %11, label %21, !dbg !9832

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !9833
  store volatile i16 0, i16* %12, align 2, !dbg !9835, !tbaa !9510
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 0, !dbg !9836
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %13, align 4, !dbg !9836, !tbaa !9298
  %15 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %14, i32 0, i32 5, !dbg !9836
  %16 = load volatile i32, i32* %15, align 4, !dbg !9836, !tbaa !6320
  %17 = and i32 %16, -129, !dbg !9836
  store volatile i32 %17, i32* %15, align 4, !dbg !9836, !tbaa !6320
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %14, i32 0, i32 3, !dbg !9837
  %19 = load volatile i32, i32* %18, align 4, !dbg !9837, !tbaa !6432
  %20 = or i32 %19, 64, !dbg !9837
  store volatile i32 %20, i32* %18, align 4, !dbg !9837, !tbaa !6432
  br label %22, !dbg !9838

21:                                               ; preds = %1
  call void @HAL_UART_TxCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !9839
  br label %22

22:                                               ; preds = %21, %11
  ret void, !dbg !9841
}

; Function Attrs: noinline nounwind
define internal void @UART_DMATxHalfCplt(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #9 !dbg !9842 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !9844, metadata !DIExpression()), !dbg !9846
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !9847
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !9847
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !9847, !tbaa !9825
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !9845, metadata !DIExpression()), !dbg !9846
  call void @HAL_UART_TxHalfCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !9848
  ret void, !dbg !9849
}

; Function Attrs: noinline nounwind
define internal void @UART_DMAError(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #9 !dbg !9850 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !9852, metadata !DIExpression()), !dbg !9855
  call void @llvm.dbg.value(metadata i32 0, metadata !9853, metadata !DIExpression()), !dbg !9855
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !9856
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !9856
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !9856, !tbaa !9825
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !9854, metadata !DIExpression()), !dbg !9855
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 0, !dbg !9857
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9857, !tbaa !9298
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %6, i32 0, i32 5, !dbg !9857
  %8 = load volatile i32, i32* %7, align 4, !dbg !9857, !tbaa !6320
  %9 = and i32 %8, 128, !dbg !9857
  %10 = icmp ne i32 %9, 0, !dbg !9857
  call void @llvm.dbg.value(metadata i1 %10, metadata !9853, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9855
  %11 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 11, !dbg !9858
  %12 = load volatile i32, i32* %11, align 4, !dbg !9858, !tbaa !9285
  %13 = icmp eq i32 %12, 33, !dbg !9860
  %14 = select i1 %13, i1 %10, i1 false, !dbg !9861
  br i1 %14, label %15, label %17, !dbg !9861

15:                                               ; preds = %1
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !9862
  store volatile i16 0, i16* %16, align 2, !dbg !9864, !tbaa !9510
  call fastcc void @UART_EndTxTransfer(%struct.__UART_HandleTypeDef* noundef %4), !dbg !9865
  br label %17, !dbg !9866

17:                                               ; preds = %15, %1
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9867, !tbaa !9298
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %18, i32 0, i32 5, !dbg !9867
  %20 = load volatile i32, i32* %19, align 4, !dbg !9867, !tbaa !6320
  %21 = and i32 %20, 64, !dbg !9867
  %22 = icmp ne i32 %21, 0, !dbg !9867
  call void @llvm.dbg.value(metadata i1 %22, metadata !9853, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9855
  %23 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !9868
  %24 = load volatile i32, i32* %23, align 4, !dbg !9868, !tbaa !9309
  %25 = icmp eq i32 %24, 34, !dbg !9870
  %26 = select i1 %25, i1 %22, i1 false, !dbg !9871
  br i1 %26, label %27, label %29, !dbg !9871

27:                                               ; preds = %17
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !9872
  store volatile i16 0, i16* %28, align 2, !dbg !9874, !tbaa !9626
  call fastcc void @UART_EndRxTransfer(%struct.__UART_HandleTypeDef* noundef %4), !dbg !9875
  br label %29, !dbg !9876

29:                                               ; preds = %27, %17
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 13, !dbg !9877
  %31 = load volatile i32, i32* %30, align 4, !dbg !9878, !tbaa !9305
  %32 = or i32 %31, 16, !dbg !9878
  store volatile i32 %32, i32* %30, align 4, !dbg !9878, !tbaa !9305
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !9879
  ret void, !dbg !9880
}

declare !dbg !9881 dso_local i32 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #33

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @UART_EndTxTransfer(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #14 !dbg !9884 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9886, metadata !DIExpression()), !dbg !9887
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9888
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !9888, !tbaa !9298
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !9888
  %5 = load volatile i32, i32* %4, align 4, !dbg !9888, !tbaa !6432
  %6 = and i32 %5, -193, !dbg !9888
  store volatile i32 %6, i32* %4, align 4, !dbg !9888, !tbaa !6432
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !9889
  store volatile i32 32, i32* %7, align 4, !dbg !9890, !tbaa !9285
  ret void, !dbg !9891
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @UART_EndRxTransfer(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #14 !dbg !9892 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9894, metadata !DIExpression()), !dbg !9895
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9896
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !9896, !tbaa !9298
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !9896
  %5 = load volatile i32, i32* %4, align 4, !dbg !9896, !tbaa !6432
  %6 = and i32 %5, -289, !dbg !9896
  store volatile i32 %6, i32* %4, align 4, !dbg !9896, !tbaa !6432
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !9897
  %8 = load volatile i32, i32* %7, align 4, !dbg !9897, !tbaa !6320
  %9 = and i32 %8, -2, !dbg !9897
  store volatile i32 %9, i32* %7, align 4, !dbg !9897, !tbaa !6320
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !9898
  store volatile i32 32, i32* %10, align 4, !dbg !9899, !tbaa !9309
  ret void, !dbg !9900
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #9 !dbg !9901 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9903, metadata !DIExpression()), !dbg !9904
  ret void, !dbg !9905
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_TxHalfCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #9 !dbg !9906 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9908, metadata !DIExpression()), !dbg !9909
  ret void, !dbg !9910
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_TxCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #9 !dbg !9911 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9913, metadata !DIExpression()), !dbg !9914
  ret void, !dbg !9915
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Receive_DMA(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #9 !dbg !9916 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !9918, metadata !DIExpression()), !dbg !9926
  call void @llvm.dbg.value(metadata i8* %1, metadata !9919, metadata !DIExpression()), !dbg !9926
  call void @llvm.dbg.value(metadata i16 %2, metadata !9920, metadata !DIExpression()), !dbg !9926
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !9927
  %6 = load volatile i32, i32* %5, align 4, !dbg !9927, !tbaa !9309
  %7 = icmp eq i32 %6, 32, !dbg !9928
  br i1 %7, label %8, label %49, !dbg !9929

8:                                                ; preds = %3
  %9 = icmp eq i8* %1, null, !dbg !9930
  %10 = zext i16 %2 to i32
  %11 = icmp eq i16 %2, 0
  %12 = or i1 %9, %11, !dbg !9932
  br i1 %12, label %49, label %13, !dbg !9932

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !9933
  %15 = load i32, i32* %14, align 4, !dbg !9933, !tbaa !9293
  %16 = icmp eq i32 %15, 1, !dbg !9933
  br i1 %16, label %49, label %17, !dbg !9936

17:                                               ; preds = %13
  store i32 1, i32* %14, align 4, !dbg !9937, !tbaa !9293
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !9939
  store i8* %1, i8** %18, align 4, !dbg !9940, !tbaa !9744
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 6, !dbg !9941
  store i16 %2, i16* %19, align 4, !dbg !9942, !tbaa !9623
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !9943
  store volatile i32 0, i32* %20, align 4, !dbg !9944, !tbaa !9305
  store volatile i32 34, i32* %5, align 4, !dbg !9945, !tbaa !9309
  %21 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !9946
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %21, align 4, !dbg !9946, !tbaa !9947
  %23 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 5, !dbg !9948
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMAReceiveCplt, void (%struct.__DMA_HandleTypeDef*)** %23, align 4, !dbg !9949, !tbaa !9794
  %24 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 6, !dbg !9950
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMARxHalfCplt, void (%struct.__DMA_HandleTypeDef*)** %24, align 4, !dbg !9951, !tbaa !9798
  %25 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 7, !dbg !9952
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMAError, void (%struct.__DMA_HandleTypeDef*)** %25, align 4, !dbg !9953, !tbaa !9801
  %26 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 8, !dbg !9954
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %26, align 4, !dbg !9955, !tbaa !9804
  call void @llvm.dbg.value(metadata i32* undef, metadata !9921, metadata !DIExpression()), !dbg !9926
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !9956
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %27, align 4, !dbg !9956, !tbaa !9298
  %29 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %28, i32 0, i32 1, !dbg !9957
  %30 = ptrtoint i32* %29 to i32, !dbg !9958
  %31 = ptrtoint i8* %1 to i32, !dbg !9959
  %32 = call i32 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* noundef %22, i32 noundef %30, i32 noundef %31, i32 noundef %10) #34, !dbg !9960
  %33 = bitcast i32* %4 to i8*, !dbg !9961
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33), !dbg !9961
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9922, metadata !DIExpression()), !dbg !9961
  store volatile i32 0, i32* %4, align 4, !dbg !9961, !tbaa !3380
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %27, align 4, !dbg !9961, !tbaa !9298
  %35 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 0, !dbg !9961
  %36 = load volatile i32, i32* %35, align 4, !dbg !9961, !tbaa !9570
  store volatile i32 %36, i32* %4, align 4, !dbg !9961, !tbaa !3380
  %37 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 1, !dbg !9961
  %38 = load volatile i32, i32* %37, align 4, !dbg !9961, !tbaa !9530
  store volatile i32 %38, i32* %4, align 4, !dbg !9961, !tbaa !3380
  %39 = load volatile i32, i32* %4, align 4, !dbg !9961, !tbaa !3380
  %40 = bitcast i32* %4 to i8*, !dbg !9962
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40), !dbg !9962
  store i32 0, i32* %14, align 4, !dbg !9963, !tbaa !9293
  %41 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 3, !dbg !9965
  %42 = load volatile i32, i32* %41, align 4, !dbg !9965, !tbaa !6432
  %43 = or i32 %42, 256, !dbg !9965
  store volatile i32 %43, i32* %41, align 4, !dbg !9965, !tbaa !6432
  %44 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 5, !dbg !9966
  %45 = load volatile i32, i32* %44, align 4, !dbg !9966, !tbaa !6320
  %46 = or i32 %45, 1, !dbg !9966
  store volatile i32 %46, i32* %44, align 4, !dbg !9966, !tbaa !6320
  %47 = load volatile i32, i32* %44, align 4, !dbg !9967, !tbaa !6320
  %48 = or i32 %47, 64, !dbg !9967
  store volatile i32 %48, i32* %44, align 4, !dbg !9967, !tbaa !6320
  br label %49, !dbg !9968

49:                                               ; preds = %3, %13, %8, %17
  %50 = phi i32 [ 0, %17 ], [ 1, %8 ], [ 2, %13 ], [ 2, %3 ], !dbg !9969
  ret i32 %50, !dbg !9970
}

; Function Attrs: noinline nounwind
define internal void @UART_DMAReceiveCplt(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #9 !dbg !9971 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !9973, metadata !DIExpression()), !dbg !9975
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !9976
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !9976
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !9976, !tbaa !9825
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !9974, metadata !DIExpression()), !dbg !9975
  %5 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 0, !dbg !9977
  %6 = load %struct.DMA_Channel_TypeDef*, %struct.DMA_Channel_TypeDef** %5, align 4, !dbg !9977, !tbaa !9828
  %7 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %6, i32 0, i32 0, !dbg !9979
  %8 = load volatile i32, i32* %7, align 4, !dbg !9979, !tbaa !4051
  %9 = and i32 %8, 32, !dbg !9980
  %10 = icmp eq i32 %9, 0, !dbg !9981
  br i1 %10, label %11, label %24, !dbg !9982

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !9983
  store volatile i16 0, i16* %12, align 2, !dbg !9985, !tbaa !9626
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 0, !dbg !9986
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %13, align 4, !dbg !9986, !tbaa !9298
  %15 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %14, i32 0, i32 3, !dbg !9986
  %16 = load volatile i32, i32* %15, align 4, !dbg !9986, !tbaa !6432
  %17 = and i32 %16, -257, !dbg !9986
  store volatile i32 %17, i32* %15, align 4, !dbg !9986, !tbaa !6432
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %14, i32 0, i32 5, !dbg !9987
  %19 = load volatile i32, i32* %18, align 4, !dbg !9987, !tbaa !6320
  %20 = and i32 %19, -2, !dbg !9987
  store volatile i32 %20, i32* %18, align 4, !dbg !9987, !tbaa !6320
  %21 = load volatile i32, i32* %18, align 4, !dbg !9988, !tbaa !6320
  %22 = and i32 %21, -65, !dbg !9988
  store volatile i32 %22, i32* %18, align 4, !dbg !9988, !tbaa !6320
  %23 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !9989
  store volatile i32 32, i32* %23, align 4, !dbg !9990, !tbaa !9309
  br label %24, !dbg !9991

24:                                               ; preds = %11, %1
  call void @HAL_UART_RxCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !9992
  ret void, !dbg !9993
}

; Function Attrs: noinline nounwind
define internal void @UART_DMARxHalfCplt(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #9 !dbg !9994 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !9996, metadata !DIExpression()), !dbg !9998
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !9999
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !9999
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !9999, !tbaa !9825
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !9997, metadata !DIExpression()), !dbg !9998
  call void @HAL_UART_RxHalfCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !10000
  ret void, !dbg !10001
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_RxHalfCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #9 !dbg !10002 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10004, metadata !DIExpression()), !dbg !10005
  ret void, !dbg !10006
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_RxCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #9 !dbg !10007 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10009, metadata !DIExpression()), !dbg !10010
  ret void, !dbg !10011
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_UART_DMAPause(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #14 !dbg !10012 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10014, metadata !DIExpression()), !dbg !10016
  call void @llvm.dbg.value(metadata i32 0, metadata !10015, metadata !DIExpression()), !dbg !10016
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !10017
  %3 = load i32, i32* %2, align 4, !dbg !10017, !tbaa !9293
  %4 = icmp eq i32 %3, 1, !dbg !10017
  br i1 %4, label %36, label %5, !dbg !10020

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !10021, !tbaa !9293
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10023
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10023, !tbaa !9298
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %7, i32 0, i32 5, !dbg !10023
  %9 = load volatile i32, i32* %8, align 4, !dbg !10023, !tbaa !6320
  %10 = and i32 %9, 128, !dbg !10023
  %11 = icmp ne i32 %10, 0, !dbg !10023
  call void @llvm.dbg.value(metadata i1 %11, metadata !10015, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10016
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10024
  %13 = load volatile i32, i32* %12, align 4, !dbg !10024, !tbaa !9285
  %14 = icmp eq i32 %13, 33, !dbg !10026
  %15 = select i1 %14, i1 %11, i1 false, !dbg !10027
  br i1 %15, label %16, label %19, !dbg !10027

16:                                               ; preds = %5
  %17 = load volatile i32, i32* %8, align 4, !dbg !10028, !tbaa !6320
  %18 = and i32 %17, -129, !dbg !10028
  store volatile i32 %18, i32* %8, align 4, !dbg !10028, !tbaa !6320
  br label %19, !dbg !10030

19:                                               ; preds = %16, %5
  %20 = load volatile i32, i32* %8, align 4, !dbg !10031, !tbaa !6320
  %21 = and i32 %20, 64, !dbg !10031
  %22 = icmp ne i32 %21, 0, !dbg !10031
  call void @llvm.dbg.value(metadata i1 %22, metadata !10015, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10016
  %23 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !10032
  %24 = load volatile i32, i32* %23, align 4, !dbg !10032, !tbaa !9309
  %25 = icmp eq i32 %24, 34, !dbg !10034
  %26 = select i1 %25, i1 %22, i1 false, !dbg !10035
  br i1 %26, label %27, label %35, !dbg !10035

27:                                               ; preds = %19
  %28 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %7, i32 0, i32 3, !dbg !10036
  %29 = load volatile i32, i32* %28, align 4, !dbg !10036, !tbaa !6432
  %30 = and i32 %29, -257, !dbg !10036
  store volatile i32 %30, i32* %28, align 4, !dbg !10036, !tbaa !6432
  %31 = load volatile i32, i32* %8, align 4, !dbg !10038, !tbaa !6320
  %32 = and i32 %31, -2, !dbg !10038
  store volatile i32 %32, i32* %8, align 4, !dbg !10038, !tbaa !6320
  %33 = load volatile i32, i32* %8, align 4, !dbg !10039, !tbaa !6320
  %34 = and i32 %33, -65, !dbg !10039
  store volatile i32 %34, i32* %8, align 4, !dbg !10039, !tbaa !6320
  br label %35, !dbg !10040

35:                                               ; preds = %19, %27
  store i32 0, i32* %2, align 4, !dbg !10041, !tbaa !9293
  br label %36, !dbg !10043

36:                                               ; preds = %1, %35
  %37 = phi i32 [ 0, %35 ], [ 2, %1 ], !dbg !10016
  ret i32 %37, !dbg !10044
}

; Function Attrs: nofree noinline nounwind
define dso_local i32 @HAL_UART_DMAResume(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #19 !dbg !10045 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10047, metadata !DIExpression()), !dbg !10052
  %3 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !10053
  %4 = load i32, i32* %3, align 4, !dbg !10053, !tbaa !9293
  %5 = icmp eq i32 %4, 1, !dbg !10053
  br i1 %5, label %39, label %6, !dbg !10056

6:                                                ; preds = %1
  store i32 1, i32* %3, align 4, !dbg !10057, !tbaa !9293
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10059
  %8 = load volatile i32, i32* %7, align 4, !dbg !10059, !tbaa !9285
  %9 = icmp eq i32 %8, 33, !dbg !10061
  br i1 %9, label %10, label %16, !dbg !10062

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10063
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %11, align 4, !dbg !10063, !tbaa !9298
  %13 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %12, i32 0, i32 5, !dbg !10063
  %14 = load volatile i32, i32* %13, align 4, !dbg !10063, !tbaa !6320
  %15 = or i32 %14, 128, !dbg !10063
  store volatile i32 %15, i32* %13, align 4, !dbg !10063, !tbaa !6320
  br label %16, !dbg !10065

16:                                               ; preds = %10, %6
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !10066
  %18 = load volatile i32, i32* %17, align 4, !dbg !10066, !tbaa !9309
  %19 = icmp eq i32 %18, 34, !dbg !10067
  br i1 %19, label %20, label %38, !dbg !10068

20:                                               ; preds = %16
  %21 = bitcast i32* %2 to i8*, !dbg !10069
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !10069
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10048, metadata !DIExpression()), !dbg !10069
  store volatile i32 0, i32* %2, align 4, !dbg !10069, !tbaa !3380
  %22 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10069
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10069, !tbaa !9298
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 0, !dbg !10069
  %25 = load volatile i32, i32* %24, align 4, !dbg !10069, !tbaa !9570
  store volatile i32 %25, i32* %2, align 4, !dbg !10069, !tbaa !3380
  %26 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 1, !dbg !10069
  %27 = load volatile i32, i32* %26, align 4, !dbg !10069, !tbaa !9530
  store volatile i32 %27, i32* %2, align 4, !dbg !10069, !tbaa !3380
  %28 = load volatile i32, i32* %2, align 4, !dbg !10069, !tbaa !3380
  %29 = bitcast i32* %2 to i8*, !dbg !10070
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29), !dbg !10070
  %30 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 3, !dbg !10071
  %31 = load volatile i32, i32* %30, align 4, !dbg !10071, !tbaa !6432
  %32 = or i32 %31, 256, !dbg !10071
  store volatile i32 %32, i32* %30, align 4, !dbg !10071, !tbaa !6432
  %33 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 5, !dbg !10072
  %34 = load volatile i32, i32* %33, align 4, !dbg !10072, !tbaa !6320
  %35 = or i32 %34, 1, !dbg !10072
  store volatile i32 %35, i32* %33, align 4, !dbg !10072, !tbaa !6320
  %36 = load volatile i32, i32* %33, align 4, !dbg !10073, !tbaa !6320
  %37 = or i32 %36, 64, !dbg !10073
  store volatile i32 %37, i32* %33, align 4, !dbg !10073, !tbaa !6320
  br label %38, !dbg !10074

38:                                               ; preds = %16, %20
  store i32 0, i32* %3, align 4, !dbg !10075, !tbaa !9293
  br label %39, !dbg !10077

39:                                               ; preds = %1, %38
  %40 = phi i32 [ 0, %38 ], [ 2, %1 ], !dbg !10052
  ret i32 %40, !dbg !10078
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_DMAStop(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #9 !dbg !10079 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10081, metadata !DIExpression()), !dbg !10083
  call void @llvm.dbg.value(metadata i32 0, metadata !10082, metadata !DIExpression()), !dbg !10083
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10084
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10084, !tbaa !9298
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !10084
  %5 = load volatile i32, i32* %4, align 4, !dbg !10084, !tbaa !6320
  %6 = and i32 %5, 128, !dbg !10084
  %7 = icmp ne i32 %6, 0, !dbg !10084
  call void @llvm.dbg.value(metadata i1 %7, metadata !10082, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10083
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10085
  %9 = load volatile i32, i32* %8, align 4, !dbg !10085, !tbaa !9285
  %10 = icmp eq i32 %9, 33, !dbg !10087
  %11 = select i1 %10, i1 %7, i1 false, !dbg !10088
  br i1 %11, label %12, label %21, !dbg !10088

12:                                               ; preds = %1
  %13 = load volatile i32, i32* %4, align 4, !dbg !10089, !tbaa !6320
  %14 = and i32 %13, -129, !dbg !10089
  store volatile i32 %14, i32* %4, align 4, !dbg !10089, !tbaa !6320
  %15 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !10091
  %16 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %15, align 4, !dbg !10091, !tbaa !9791
  %17 = icmp eq %struct.__DMA_HandleTypeDef* %16, null, !dbg !10093
  br i1 %17, label %20, label %18, !dbg !10094

18:                                               ; preds = %12
  %19 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %16) #34, !dbg !10095
  br label %20, !dbg !10097

20:                                               ; preds = %18, %12
  call fastcc void @UART_EndTxTransfer(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10098
  br label %21, !dbg !10099

21:                                               ; preds = %20, %1
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10100, !tbaa !9298
  %23 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %22, i32 0, i32 5, !dbg !10100
  %24 = load volatile i32, i32* %23, align 4, !dbg !10100, !tbaa !6320
  %25 = and i32 %24, 64, !dbg !10100
  %26 = icmp ne i32 %25, 0, !dbg !10100
  call void @llvm.dbg.value(metadata i1 %26, metadata !10082, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10083
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !10101
  %28 = load volatile i32, i32* %27, align 4, !dbg !10101, !tbaa !9309
  %29 = icmp eq i32 %28, 34, !dbg !10103
  %30 = select i1 %29, i1 %26, i1 false, !dbg !10104
  br i1 %30, label %31, label %40, !dbg !10104

31:                                               ; preds = %21
  %32 = load volatile i32, i32* %23, align 4, !dbg !10105, !tbaa !6320
  %33 = and i32 %32, -65, !dbg !10105
  store volatile i32 %33, i32* %23, align 4, !dbg !10105, !tbaa !6320
  %34 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !10107
  %35 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %34, align 4, !dbg !10107, !tbaa !9947
  %36 = icmp eq %struct.__DMA_HandleTypeDef* %35, null, !dbg !10109
  br i1 %36, label %39, label %37, !dbg !10110

37:                                               ; preds = %31
  %38 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %35) #34, !dbg !10111
  br label %39, !dbg !10113

39:                                               ; preds = %37, %31
  call fastcc void @UART_EndRxTransfer(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10114
  br label %40, !dbg !10115

40:                                               ; preds = %39, %21
  ret i32 0, !dbg !10116
}

declare !dbg !10117 dso_local i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef) local_unnamed_addr #33

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Abort(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #9 !dbg !10120 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10122, metadata !DIExpression()), !dbg !10123
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10124
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10124, !tbaa !9298
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !10124
  %5 = load volatile i32, i32* %4, align 4, !dbg !10124, !tbaa !6432
  %6 = and i32 %5, -481, !dbg !10124
  store volatile i32 %6, i32* %4, align 4, !dbg !10124, !tbaa !6432
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !10125
  %8 = load volatile i32, i32* %7, align 4, !dbg !10125, !tbaa !6320
  %9 = and i32 %8, -2, !dbg !10125
  store volatile i32 %9, i32* %7, align 4, !dbg !10125, !tbaa !6320
  %10 = load volatile i32, i32* %7, align 4, !dbg !10126, !tbaa !6320
  %11 = and i32 %10, 128, !dbg !10126
  %12 = icmp eq i32 %11, 0, !dbg !10126
  br i1 %12, label %29, label %13, !dbg !10128

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %7, align 4, !dbg !10129, !tbaa !6320
  %15 = and i32 %14, -129, !dbg !10129
  store volatile i32 %15, i32* %7, align 4, !dbg !10129, !tbaa !6320
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !10131
  %17 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !10131, !tbaa !9791
  %18 = icmp eq %struct.__DMA_HandleTypeDef* %17, null, !dbg !10133
  br i1 %18, label %29, label %19, !dbg !10134

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %17, i32 0, i32 8, !dbg !10135
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %20, align 4, !dbg !10137, !tbaa !9804
  %21 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %17) #34, !dbg !10138
  %22 = icmp eq i32 %21, 0, !dbg !10140
  br i1 %22, label %29, label %23, !dbg !10141

23:                                               ; preds = %19
  %24 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !10142, !tbaa !9791
  %25 = call i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef %24) #34, !dbg !10145
  %26 = icmp eq i32 %25, 32, !dbg !10146
  br i1 %26, label %27, label %29, !dbg !10147

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !10148
  store volatile i32 16, i32* %28, align 4, !dbg !10150, !tbaa !9305
  br label %57, !dbg !10151

29:                                               ; preds = %13, %23, %19, %1
  %30 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10152, !tbaa !9298
  %31 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %30, i32 0, i32 5, !dbg !10152
  %32 = load volatile i32, i32* %31, align 4, !dbg !10152, !tbaa !6320
  %33 = and i32 %32, 64, !dbg !10152
  %34 = icmp eq i32 %33, 0, !dbg !10152
  br i1 %34, label %51, label %35, !dbg !10154

35:                                               ; preds = %29
  %36 = load volatile i32, i32* %31, align 4, !dbg !10155, !tbaa !6320
  %37 = and i32 %36, -65, !dbg !10155
  store volatile i32 %37, i32* %31, align 4, !dbg !10155, !tbaa !6320
  %38 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !10157
  %39 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %38, align 4, !dbg !10157, !tbaa !9947
  %40 = icmp eq %struct.__DMA_HandleTypeDef* %39, null, !dbg !10159
  br i1 %40, label %51, label %41, !dbg !10160

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %39, i32 0, i32 8, !dbg !10161
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %42, align 4, !dbg !10163, !tbaa !9804
  %43 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %39) #34, !dbg !10164
  %44 = icmp eq i32 %43, 0, !dbg !10166
  br i1 %44, label %51, label %45, !dbg !10167

45:                                               ; preds = %41
  %46 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %38, align 4, !dbg !10168, !tbaa !9947
  %47 = call i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef %46) #34, !dbg !10171
  %48 = icmp eq i32 %47, 32, !dbg !10172
  br i1 %48, label %49, label %51, !dbg !10173

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !10174
  store volatile i32 16, i32* %50, align 4, !dbg !10176, !tbaa !9305
  br label %57, !dbg !10177

51:                                               ; preds = %35, %45, %41, %29
  %52 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !10178
  store volatile i16 0, i16* %52, align 2, !dbg !10179, !tbaa !9510
  %53 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !10180
  store volatile i16 0, i16* %53, align 2, !dbg !10181, !tbaa !9626
  %54 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !10182
  store volatile i32 0, i32* %54, align 4, !dbg !10183, !tbaa !9305
  %55 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !10184
  store volatile i32 32, i32* %55, align 4, !dbg !10185, !tbaa !9309
  %56 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10186
  store volatile i32 32, i32* %56, align 4, !dbg !10187, !tbaa !9285
  br label %57, !dbg !10188

57:                                               ; preds = %51, %49, %27
  %58 = phi i32 [ 3, %27 ], [ 3, %49 ], [ 0, %51 ], !dbg !10123
  ret i32 %58, !dbg !10189
}

declare !dbg !10190 dso_local i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef) local_unnamed_addr #33

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_AbortTransmit(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #9 !dbg !10193 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10195, metadata !DIExpression()), !dbg !10196
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10197
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10197, !tbaa !9298
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !10197
  %5 = load volatile i32, i32* %4, align 4, !dbg !10197, !tbaa !6432
  %6 = and i32 %5, -193, !dbg !10197
  store volatile i32 %6, i32* %4, align 4, !dbg !10197, !tbaa !6432
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !10198
  %8 = load volatile i32, i32* %7, align 4, !dbg !10198, !tbaa !6320
  %9 = and i32 %8, 128, !dbg !10198
  %10 = icmp eq i32 %9, 0, !dbg !10198
  br i1 %10, label %27, label %11, !dbg !10200

11:                                               ; preds = %1
  %12 = load volatile i32, i32* %7, align 4, !dbg !10201, !tbaa !6320
  %13 = and i32 %12, -129, !dbg !10201
  store volatile i32 %13, i32* %7, align 4, !dbg !10201, !tbaa !6320
  %14 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !10203
  %15 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %14, align 4, !dbg !10203, !tbaa !9791
  %16 = icmp eq %struct.__DMA_HandleTypeDef* %15, null, !dbg !10205
  br i1 %16, label %27, label %17, !dbg !10206

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %15, i32 0, i32 8, !dbg !10207
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %18, align 4, !dbg !10209, !tbaa !9804
  %19 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %15) #34, !dbg !10210
  %20 = icmp eq i32 %19, 0, !dbg !10212
  br i1 %20, label %27, label %21, !dbg !10213

21:                                               ; preds = %17
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %14, align 4, !dbg !10214, !tbaa !9791
  %23 = call i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef %22) #34, !dbg !10217
  %24 = icmp eq i32 %23, 32, !dbg !10218
  br i1 %24, label %25, label %27, !dbg !10219

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !10220
  store volatile i32 16, i32* %26, align 4, !dbg !10222, !tbaa !9305
  br label %30, !dbg !10223

27:                                               ; preds = %11, %21, %17, %1
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !10224
  store volatile i16 0, i16* %28, align 2, !dbg !10225, !tbaa !9510
  %29 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10226
  store volatile i32 32, i32* %29, align 4, !dbg !10227, !tbaa !9285
  br label %30, !dbg !10228

30:                                               ; preds = %27, %25
  %31 = phi i32 [ 3, %25 ], [ 0, %27 ], !dbg !10196
  ret i32 %31, !dbg !10229
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_AbortReceive(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #9 !dbg !10230 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10232, metadata !DIExpression()), !dbg !10233
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10234
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10234, !tbaa !9298
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !10234
  %5 = load volatile i32, i32* %4, align 4, !dbg !10234, !tbaa !6432
  %6 = and i32 %5, -289, !dbg !10234
  store volatile i32 %6, i32* %4, align 4, !dbg !10234, !tbaa !6432
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !10235
  %8 = load volatile i32, i32* %7, align 4, !dbg !10235, !tbaa !6320
  %9 = and i32 %8, -2, !dbg !10235
  store volatile i32 %9, i32* %7, align 4, !dbg !10235, !tbaa !6320
  %10 = load volatile i32, i32* %7, align 4, !dbg !10236, !tbaa !6320
  %11 = and i32 %10, 64, !dbg !10236
  %12 = icmp eq i32 %11, 0, !dbg !10236
  br i1 %12, label %29, label %13, !dbg !10238

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %7, align 4, !dbg !10239, !tbaa !6320
  %15 = and i32 %14, -65, !dbg !10239
  store volatile i32 %15, i32* %7, align 4, !dbg !10239, !tbaa !6320
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !10241
  %17 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !10241, !tbaa !9947
  %18 = icmp eq %struct.__DMA_HandleTypeDef* %17, null, !dbg !10243
  br i1 %18, label %29, label %19, !dbg !10244

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %17, i32 0, i32 8, !dbg !10245
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %20, align 4, !dbg !10247, !tbaa !9804
  %21 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %17) #34, !dbg !10248
  %22 = icmp eq i32 %21, 0, !dbg !10250
  br i1 %22, label %29, label %23, !dbg !10251

23:                                               ; preds = %19
  %24 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !10252, !tbaa !9947
  %25 = call i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef %24) #34, !dbg !10255
  %26 = icmp eq i32 %25, 32, !dbg !10256
  br i1 %26, label %27, label %29, !dbg !10257

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !10258
  store volatile i32 16, i32* %28, align 4, !dbg !10260, !tbaa !9305
  br label %32, !dbg !10261

29:                                               ; preds = %13, %23, %19, %1
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !10262
  store volatile i16 0, i16* %30, align 2, !dbg !10263, !tbaa !9626
  %31 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !10264
  store volatile i32 32, i32* %31, align 4, !dbg !10265, !tbaa !9309
  br label %32, !dbg !10266

32:                                               ; preds = %29, %27
  %33 = phi i32 [ 3, %27 ], [ 0, %29 ], !dbg !10233
  ret i32 %33, !dbg !10267
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Abort_IT(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #9 !dbg !10268 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10270, metadata !DIExpression()), !dbg !10272
  call void @llvm.dbg.value(metadata i32 1, metadata !10271, metadata !DIExpression()), !dbg !10272
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10273
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10273, !tbaa !9298
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !10273
  %5 = load volatile i32, i32* %4, align 4, !dbg !10273, !tbaa !6432
  %6 = and i32 %5, -481, !dbg !10273
  store volatile i32 %6, i32* %4, align 4, !dbg !10273, !tbaa !6432
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !10274
  %8 = load volatile i32, i32* %7, align 4, !dbg !10274, !tbaa !6320
  %9 = and i32 %8, -2, !dbg !10274
  store volatile i32 %9, i32* %7, align 4, !dbg !10274, !tbaa !6320
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !10275
  %11 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %10, align 4, !dbg !10275, !tbaa !9791
  %12 = icmp eq %struct.__DMA_HandleTypeDef* %11, null, !dbg !10277
  br i1 %12, label %19, label %13, !dbg !10278

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %7, align 4, !dbg !10279, !tbaa !6320
  %15 = and i32 %14, 128, !dbg !10279
  %16 = icmp eq i32 %15, 0, !dbg !10279
  %17 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %11, i32 0, i32 8, !dbg !10282
  %18 = select i1 %16, void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)* @UART_DMATxAbortCallback
  store void (%struct.__DMA_HandleTypeDef*)* %18, void (%struct.__DMA_HandleTypeDef*)** %17, align 4, !dbg !10282, !tbaa !9804
  br label %19, !dbg !10283

19:                                               ; preds = %13, %1
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !10283
  %21 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %20, align 4, !dbg !10283, !tbaa !9947
  %22 = icmp eq %struct.__DMA_HandleTypeDef* %21, null, !dbg !10285
  br i1 %22, label %29, label %23, !dbg !10286

23:                                               ; preds = %19
  %24 = load volatile i32, i32* %7, align 4, !dbg !10287, !tbaa !6320
  %25 = and i32 %24, 64, !dbg !10287
  %26 = icmp eq i32 %25, 0, !dbg !10287
  %27 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %21, i32 0, i32 8, !dbg !10290
  %28 = select i1 %26, void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)* @UART_DMARxAbortCallback
  store void (%struct.__DMA_HandleTypeDef*)* %28, void (%struct.__DMA_HandleTypeDef*)** %27, align 4, !dbg !10290, !tbaa !9804
  br label %29, !dbg !10291

29:                                               ; preds = %23, %19
  %30 = load volatile i32, i32* %7, align 4, !dbg !10291, !tbaa !6320
  %31 = and i32 %30, 128, !dbg !10291
  %32 = icmp eq i32 %31, 0, !dbg !10291
  br i1 %32, label %42, label %33, !dbg !10293

33:                                               ; preds = %29
  %34 = load volatile i32, i32* %7, align 4, !dbg !10294, !tbaa !6320
  %35 = and i32 %34, -129, !dbg !10294
  store volatile i32 %35, i32* %7, align 4, !dbg !10294, !tbaa !6320
  br i1 %12, label %42, label %36, !dbg !10296

36:                                               ; preds = %33
  %37 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %11) #34, !dbg !10297
  %38 = icmp eq i32 %37, 0, !dbg !10301
  br i1 %38, label %42, label %39, !dbg !10302

39:                                               ; preds = %36
  %40 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %10, align 4, !dbg !10303, !tbaa !9791
  %41 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %40, i32 0, i32 8, !dbg !10305
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %41, align 4, !dbg !10306, !tbaa !9804
  br label %42, !dbg !10307

42:                                               ; preds = %36, %33, %39, %29
  %43 = phi i32 [ 1, %39 ], [ 1, %33 ], [ 1, %29 ], [ 0, %36 ], !dbg !10272
  call void @llvm.dbg.value(metadata i32 %43, metadata !10271, metadata !DIExpression()), !dbg !10272
  %44 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10308, !tbaa !9298
  %45 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %44, i32 0, i32 5, !dbg !10308
  %46 = load volatile i32, i32* %45, align 4, !dbg !10308, !tbaa !6320
  %47 = and i32 %46, 64, !dbg !10308
  %48 = icmp eq i32 %47, 0, !dbg !10308
  br i1 %48, label %60, label %49, !dbg !10310

49:                                               ; preds = %42
  %50 = load volatile i32, i32* %45, align 4, !dbg !10311, !tbaa !6320
  %51 = and i32 %50, -65, !dbg !10311
  store volatile i32 %51, i32* %45, align 4, !dbg !10311, !tbaa !6320
  %52 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %20, align 4, !dbg !10313, !tbaa !9947
  %53 = icmp eq %struct.__DMA_HandleTypeDef* %52, null, !dbg !10315
  br i1 %53, label %60, label %54, !dbg !10316

54:                                               ; preds = %49
  %55 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %52) #34, !dbg !10317
  %56 = icmp eq i32 %55, 0, !dbg !10320
  br i1 %56, label %60, label %57, !dbg !10321

57:                                               ; preds = %54
  %58 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %20, align 4, !dbg !10322, !tbaa !9947
  %59 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %58, i32 0, i32 8, !dbg !10324
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %59, align 4, !dbg !10325, !tbaa !9804
  call void @llvm.dbg.value(metadata i32 1, metadata !10271, metadata !DIExpression()), !dbg !10272
  br label %60, !dbg !10326

60:                                               ; preds = %54, %49, %57, %42
  %61 = phi i32 [ 1, %57 ], [ %43, %49 ], [ %43, %42 ], [ 0, %54 ], !dbg !10272
  call void @llvm.dbg.value(metadata i32 %61, metadata !10271, metadata !DIExpression()), !dbg !10272
  %62 = icmp eq i32 %61, 1, !dbg !10327
  br i1 %62, label %63, label %69, !dbg !10329

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !10330
  store volatile i16 0, i16* %64, align 2, !dbg !10332, !tbaa !9510
  %65 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !10333
  store volatile i16 0, i16* %65, align 2, !dbg !10334, !tbaa !9626
  %66 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !10335
  store volatile i32 0, i32* %66, align 4, !dbg !10336, !tbaa !9305
  %67 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10337
  store volatile i32 32, i32* %67, align 4, !dbg !10338, !tbaa !9285
  %68 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !10339
  store volatile i32 32, i32* %68, align 4, !dbg !10340, !tbaa !9309
  call void @HAL_UART_AbortCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10341
  br label %69, !dbg !10342

69:                                               ; preds = %63, %60
  ret i32 0, !dbg !10343
}

; Function Attrs: noinline nounwind
define internal void @UART_DMATxAbortCallback(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #9 !dbg !10344 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !10346, metadata !DIExpression()), !dbg !10348
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !10349
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !10349
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !10349, !tbaa !9825
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !10347, metadata !DIExpression()), !dbg !10348
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 8, !dbg !10350
  %6 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %5, align 4, !dbg !10350, !tbaa !9791
  %7 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %6, i32 0, i32 8, !dbg !10351
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %7, align 4, !dbg !10352, !tbaa !9804
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 9, !dbg !10353
  %9 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %8, align 4, !dbg !10353, !tbaa !9947
  %10 = icmp eq %struct.__DMA_HandleTypeDef* %9, null, !dbg !10355
  br i1 %10, label %15, label %11, !dbg !10356

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %9, i32 0, i32 8, !dbg !10357
  %13 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %12, align 4, !dbg !10357, !tbaa !9804
  %14 = icmp eq void (%struct.__DMA_HandleTypeDef*)* %13, null, !dbg !10360
  br i1 %14, label %15, label %21, !dbg !10361

15:                                               ; preds = %11, %1
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !10362
  store volatile i16 0, i16* %16, align 2, !dbg !10363, !tbaa !9510
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !10364
  store volatile i16 0, i16* %17, align 2, !dbg !10365, !tbaa !9626
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 13, !dbg !10366
  store volatile i32 0, i32* %18, align 4, !dbg !10367, !tbaa !9305
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 11, !dbg !10368
  store volatile i32 32, i32* %19, align 4, !dbg !10369, !tbaa !9285
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !10370
  store volatile i32 32, i32* %20, align 4, !dbg !10371, !tbaa !9309
  call void @HAL_UART_AbortCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !10372
  br label %21, !dbg !10373

21:                                               ; preds = %11, %15
  ret void, !dbg !10373
}

; Function Attrs: noinline nounwind
define internal void @UART_DMARxAbortCallback(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #9 !dbg !10374 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !10376, metadata !DIExpression()), !dbg !10378
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !10379
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !10379
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !10379, !tbaa !9825
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !10377, metadata !DIExpression()), !dbg !10378
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 9, !dbg !10380
  %6 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %5, align 4, !dbg !10380, !tbaa !9947
  %7 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %6, i32 0, i32 8, !dbg !10381
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %7, align 4, !dbg !10382, !tbaa !9804
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 8, !dbg !10383
  %9 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %8, align 4, !dbg !10383, !tbaa !9791
  %10 = icmp eq %struct.__DMA_HandleTypeDef* %9, null, !dbg !10385
  br i1 %10, label %15, label %11, !dbg !10386

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %9, i32 0, i32 8, !dbg !10387
  %13 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %12, align 4, !dbg !10387, !tbaa !9804
  %14 = icmp eq void (%struct.__DMA_HandleTypeDef*)* %13, null, !dbg !10390
  br i1 %14, label %15, label %21, !dbg !10391

15:                                               ; preds = %11, %1
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !10392
  store volatile i16 0, i16* %16, align 2, !dbg !10393, !tbaa !9510
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !10394
  store volatile i16 0, i16* %17, align 2, !dbg !10395, !tbaa !9626
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 13, !dbg !10396
  store volatile i32 0, i32* %18, align 4, !dbg !10397, !tbaa !9305
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 11, !dbg !10398
  store volatile i32 32, i32* %19, align 4, !dbg !10399, !tbaa !9285
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !10400
  store volatile i32 32, i32* %20, align 4, !dbg !10401, !tbaa !9309
  call void @HAL_UART_AbortCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !10402
  br label %21, !dbg !10403

21:                                               ; preds = %11, %15
  ret void, !dbg !10403
}

declare !dbg !10404 dso_local i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef) local_unnamed_addr #33

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_AbortCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #9 !dbg !10405 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10407, metadata !DIExpression()), !dbg !10408
  ret void, !dbg !10409
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_AbortTransmit_IT(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #9 !dbg !10410 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10412, metadata !DIExpression()), !dbg !10413
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10414
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10414, !tbaa !9298
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !10414
  %5 = load volatile i32, i32* %4, align 4, !dbg !10414, !tbaa !6432
  %6 = and i32 %5, -193, !dbg !10414
  store volatile i32 %6, i32* %4, align 4, !dbg !10414, !tbaa !6432
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !10415
  %8 = load volatile i32, i32* %7, align 4, !dbg !10415, !tbaa !6320
  %9 = and i32 %8, 128, !dbg !10415
  %10 = icmp eq i32 %9, 0, !dbg !10415
  br i1 %10, label %28, label %11, !dbg !10417

11:                                               ; preds = %1
  %12 = load volatile i32, i32* %7, align 4, !dbg !10418, !tbaa !6320
  %13 = and i32 %12, -129, !dbg !10418
  store volatile i32 %13, i32* %7, align 4, !dbg !10418, !tbaa !6320
  %14 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !10420
  %15 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %14, align 4, !dbg !10420, !tbaa !9791
  %16 = icmp eq %struct.__DMA_HandleTypeDef* %15, null, !dbg !10422
  br i1 %16, label %25, label %17, !dbg !10423

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %15, i32 0, i32 8, !dbg !10424
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMATxOnlyAbortCallback, void (%struct.__DMA_HandleTypeDef*)** %18, align 4, !dbg !10426, !tbaa !9804
  %19 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %15) #34, !dbg !10427
  %20 = icmp eq i32 %19, 0, !dbg !10429
  br i1 %20, label %31, label %21, !dbg !10430

21:                                               ; preds = %17
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %14, align 4, !dbg !10431, !tbaa !9791
  %23 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 8, !dbg !10433
  %24 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %23, align 4, !dbg !10433, !tbaa !9804
  call void %24(%struct.__DMA_HandleTypeDef* noundef %22) #34, !dbg !10434
  br label %31, !dbg !10435

25:                                               ; preds = %11
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !10436
  store volatile i16 0, i16* %26, align 2, !dbg !10438, !tbaa !9510
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10439
  store volatile i32 32, i32* %27, align 4, !dbg !10440, !tbaa !9285
  call void @HAL_UART_AbortTransmitCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10441
  br label %31

28:                                               ; preds = %1
  %29 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !10442
  store volatile i16 0, i16* %29, align 2, !dbg !10444, !tbaa !9510
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10445
  store volatile i32 32, i32* %30, align 4, !dbg !10446, !tbaa !9285
  call void @HAL_UART_AbortTransmitCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10447
  br label %31

31:                                               ; preds = %25, %21, %17, %28
  ret i32 0, !dbg !10448
}

; Function Attrs: noinline nounwind
define internal void @UART_DMATxOnlyAbortCallback(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #9 !dbg !10449 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !10451, metadata !DIExpression()), !dbg !10453
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !10454
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !10454
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !10454, !tbaa !9825
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !10452, metadata !DIExpression()), !dbg !10453
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !10455
  store volatile i16 0, i16* %5, align 2, !dbg !10456, !tbaa !9510
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 11, !dbg !10457
  store volatile i32 32, i32* %6, align 4, !dbg !10458, !tbaa !9285
  call void @HAL_UART_AbortTransmitCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !10459
  ret void, !dbg !10460
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_AbortTransmitCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #9 !dbg !10461 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10463, metadata !DIExpression()), !dbg !10464
  ret void, !dbg !10465
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_AbortReceive_IT(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #9 !dbg !10466 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10468, metadata !DIExpression()), !dbg !10469
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10470
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10470, !tbaa !9298
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !10470
  %5 = load volatile i32, i32* %4, align 4, !dbg !10470, !tbaa !6432
  %6 = and i32 %5, -289, !dbg !10470
  store volatile i32 %6, i32* %4, align 4, !dbg !10470, !tbaa !6432
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !10471
  %8 = load volatile i32, i32* %7, align 4, !dbg !10471, !tbaa !6320
  %9 = and i32 %8, -2, !dbg !10471
  store volatile i32 %9, i32* %7, align 4, !dbg !10471, !tbaa !6320
  %10 = load volatile i32, i32* %7, align 4, !dbg !10472, !tbaa !6320
  %11 = and i32 %10, 64, !dbg !10472
  %12 = icmp eq i32 %11, 0, !dbg !10472
  br i1 %12, label %30, label %13, !dbg !10474

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %7, align 4, !dbg !10475, !tbaa !6320
  %15 = and i32 %14, -65, !dbg !10475
  store volatile i32 %15, i32* %7, align 4, !dbg !10475, !tbaa !6320
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !10477
  %17 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !10477, !tbaa !9947
  %18 = icmp eq %struct.__DMA_HandleTypeDef* %17, null, !dbg !10479
  br i1 %18, label %27, label %19, !dbg !10480

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %17, i32 0, i32 8, !dbg !10481
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMARxOnlyAbortCallback, void (%struct.__DMA_HandleTypeDef*)** %20, align 4, !dbg !10483, !tbaa !9804
  %21 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %17) #34, !dbg !10484
  %22 = icmp eq i32 %21, 0, !dbg !10486
  br i1 %22, label %33, label %23, !dbg !10487

23:                                               ; preds = %19
  %24 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !10488, !tbaa !9947
  %25 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %24, i32 0, i32 8, !dbg !10490
  %26 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %25, align 4, !dbg !10490, !tbaa !9804
  call void %26(%struct.__DMA_HandleTypeDef* noundef %24) #34, !dbg !10491
  br label %33, !dbg !10492

27:                                               ; preds = %13
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !10493
  store volatile i16 0, i16* %28, align 2, !dbg !10495, !tbaa !9626
  %29 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !10496
  store volatile i32 32, i32* %29, align 4, !dbg !10497, !tbaa !9309
  call void @HAL_UART_AbortReceiveCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10498
  br label %33

30:                                               ; preds = %1
  %31 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !10499
  store volatile i16 0, i16* %31, align 2, !dbg !10501, !tbaa !9626
  %32 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !10502
  store volatile i32 32, i32* %32, align 4, !dbg !10503, !tbaa !9309
  call void @HAL_UART_AbortReceiveCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10504
  br label %33

33:                                               ; preds = %27, %23, %19, %30
  ret i32 0, !dbg !10505
}

; Function Attrs: noinline nounwind
define internal void @UART_DMARxOnlyAbortCallback(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #9 !dbg !10506 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !10508, metadata !DIExpression()), !dbg !10510
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !10511
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !10511
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !10511, !tbaa !9825
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !10509, metadata !DIExpression()), !dbg !10510
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !10512
  store volatile i16 0, i16* %5, align 2, !dbg !10513, !tbaa !9626
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !10514
  store volatile i32 32, i32* %6, align 4, !dbg !10515, !tbaa !9309
  call void @HAL_UART_AbortReceiveCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !10516
  ret void, !dbg !10517
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_AbortReceiveCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #9 !dbg !10518 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10520, metadata !DIExpression()), !dbg !10521
  ret void, !dbg !10522
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_UART_IRQHandler(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #9 !dbg !10523 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10525, metadata !DIExpression()), !dbg !10531
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10532
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10532, !tbaa !9298
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 0, !dbg !10532
  %5 = load volatile i32, i32* %4, align 4, !dbg !10532, !tbaa !9570
  call void @llvm.dbg.value(metadata i32 %5, metadata !10526, metadata !DIExpression()), !dbg !10531
  %6 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !10533
  %7 = load volatile i32, i32* %6, align 4, !dbg !10533, !tbaa !6432
  call void @llvm.dbg.value(metadata i32 %7, metadata !10527, metadata !DIExpression()), !dbg !10531
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !10534
  %9 = load volatile i32, i32* %8, align 4, !dbg !10534, !tbaa !6320
  call void @llvm.dbg.value(metadata i32 %9, metadata !10528, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.value(metadata i32 0, metadata !10529, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.value(metadata i32 0, metadata !10530, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.value(metadata i32 %5, metadata !10529, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !10531
  %10 = and i32 %5, 32
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %5, 47, !dbg !10535
  %13 = icmp ne i32 %12, 32, !dbg !10535
  %14 = and i32 %7, 32
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %13, i1 true, i1 %15, !dbg !10535
  br i1 %16, label %18, label %17, !dbg !10535

17:                                               ; preds = %1
  call fastcc void @UART_Receive_IT(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10536
  br label %115, !dbg !10541

18:                                               ; preds = %1
  %19 = and i32 %5, 15, !dbg !10542
  call void @llvm.dbg.value(metadata i32 %19, metadata !10529, metadata !DIExpression()), !dbg !10531
  %20 = icmp eq i32 %19, 0, !dbg !10543
  br i1 %20, label %101, label %21, !dbg !10545

21:                                               ; preds = %18
  %22 = and i32 %9, 1, !dbg !10546
  %23 = icmp eq i32 %22, 0, !dbg !10547
  %24 = and i32 %7, 288
  %25 = icmp eq i32 %24, 0
  %26 = select i1 %23, i1 %25, i1 false, !dbg !10548
  br i1 %26, label %101, label %27, !dbg !10548

27:                                               ; preds = %21
  %28 = and i32 %5, 1, !dbg !10549
  %29 = icmp eq i32 %28, 0, !dbg !10552
  %30 = and i32 %7, 256
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %29, i1 true, i1 %31, !dbg !10553
  br i1 %32, label %37, label %33, !dbg !10553

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !10554
  %35 = load volatile i32, i32* %34, align 4, !dbg !10556, !tbaa !9305
  %36 = or i32 %35, 1, !dbg !10556
  store volatile i32 %36, i32* %34, align 4, !dbg !10556, !tbaa !9305
  br label %37, !dbg !10557

37:                                               ; preds = %33, %27
  %38 = and i32 %5, 4, !dbg !10558
  %39 = icmp eq i32 %38, 0, !dbg !10560
  %40 = select i1 %39, i1 true, i1 %23, !dbg !10561
  br i1 %40, label %45, label %41, !dbg !10561

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !10562
  %43 = load volatile i32, i32* %42, align 4, !dbg !10564, !tbaa !9305
  %44 = or i32 %43, 2, !dbg !10564
  store volatile i32 %44, i32* %42, align 4, !dbg !10564, !tbaa !9305
  br label %45, !dbg !10565

45:                                               ; preds = %37, %41
  %46 = and i32 %5, 2, !dbg !10566
  %47 = icmp eq i32 %46, 0, !dbg !10568
  %48 = select i1 %47, i1 true, i1 %23, !dbg !10569
  br i1 %48, label %53, label %49, !dbg !10569

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !10570
  %51 = load volatile i32, i32* %50, align 4, !dbg !10572, !tbaa !9305
  %52 = or i32 %51, 4, !dbg !10572
  store volatile i32 %52, i32* %50, align 4, !dbg !10572, !tbaa !9305
  br label %53, !dbg !10573

53:                                               ; preds = %45, %49
  %54 = and i32 %5, 8, !dbg !10574
  %55 = icmp eq i32 %54, 0, !dbg !10576
  %56 = select i1 %55, i1 true, i1 %23, !dbg !10577
  br i1 %56, label %61, label %57, !dbg !10577

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !10578
  %59 = load volatile i32, i32* %58, align 4, !dbg !10580, !tbaa !9305
  %60 = or i32 %59, 8, !dbg !10580
  store volatile i32 %60, i32* %58, align 4, !dbg !10580, !tbaa !9305
  br label %61, !dbg !10581

61:                                               ; preds = %53, %57
  %62 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !10582
  %63 = load volatile i32, i32* %62, align 4, !dbg !10582, !tbaa !9305
  %64 = icmp eq i32 %63, 0, !dbg !10584
  br i1 %64, label %115, label %65, !dbg !10585

65:                                               ; preds = %61
  %66 = select i1 %11, i1 true, i1 %15, !dbg !10586
  br i1 %66, label %68, label %67, !dbg !10586

67:                                               ; preds = %65
  call fastcc void @UART_Receive_IT(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10589
  br label %68, !dbg !10591

68:                                               ; preds = %67, %65
  %69 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10592, !tbaa !9298
  %70 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %69, i32 0, i32 5, !dbg !10592
  %71 = load volatile i32, i32* %70, align 4, !dbg !10592, !tbaa !6320
  %72 = and i32 %71, 64, !dbg !10592
  %73 = icmp ne i32 %72, 0, !dbg !10592
  call void @llvm.dbg.value(metadata i1 %73, metadata !10530, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10531
  %74 = load volatile i32, i32* %62, align 4, !dbg !10593, !tbaa !9305
  %75 = and i32 %74, 8, !dbg !10595
  %76 = icmp ne i32 %75, 0, !dbg !10596
  %77 = select i1 %76, i1 true, i1 %73, !dbg !10597
  br i1 %77, label %78, label %100, !dbg !10597

78:                                               ; preds = %68
  call fastcc void @UART_EndRxTransfer(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10598
  %79 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10600, !tbaa !9298
  %80 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %79, i32 0, i32 5, !dbg !10600
  %81 = load volatile i32, i32* %80, align 4, !dbg !10600, !tbaa !6320
  %82 = and i32 %81, 64, !dbg !10600
  %83 = icmp eq i32 %82, 0, !dbg !10600
  br i1 %83, label %99, label %84, !dbg !10602

84:                                               ; preds = %78
  %85 = load volatile i32, i32* %80, align 4, !dbg !10603, !tbaa !6320
  %86 = and i32 %85, -65, !dbg !10603
  store volatile i32 %86, i32* %80, align 4, !dbg !10603, !tbaa !6320
  %87 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !10605
  %88 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %87, align 4, !dbg !10605, !tbaa !9947
  %89 = icmp eq %struct.__DMA_HandleTypeDef* %88, null, !dbg !10607
  br i1 %89, label %98, label %90, !dbg !10608

90:                                               ; preds = %84
  %91 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %88, i32 0, i32 8, !dbg !10609
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMAAbortOnError, void (%struct.__DMA_HandleTypeDef*)** %91, align 4, !dbg !10611, !tbaa !9804
  %92 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %88) #34, !dbg !10612
  %93 = icmp eq i32 %92, 0, !dbg !10614
  br i1 %93, label %115, label %94, !dbg !10615

94:                                               ; preds = %90
  %95 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %87, align 4, !dbg !10616, !tbaa !9947
  %96 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %95, i32 0, i32 8, !dbg !10618
  %97 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %96, align 4, !dbg !10618, !tbaa !9804
  call void %97(%struct.__DMA_HandleTypeDef* noundef %95) #34, !dbg !10619
  br label %115, !dbg !10620

98:                                               ; preds = %84
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10621
  br label %115

99:                                               ; preds = %78
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10623
  br label %115

100:                                              ; preds = %68
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10625
  store volatile i32 0, i32* %62, align 4, !dbg !10627, !tbaa !9305
  br label %115

101:                                              ; preds = %21, %18
  %102 = and i32 %5, 128, !dbg !10628
  %103 = icmp eq i32 %102, 0, !dbg !10630
  %104 = and i32 %7, 128
  %105 = icmp eq i32 %104, 0
  %106 = select i1 %103, i1 true, i1 %105, !dbg !10631
  br i1 %106, label %108, label %107, !dbg !10631

107:                                              ; preds = %101
  call fastcc void @UART_Transmit_IT(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10632
  br label %115, !dbg !10634

108:                                              ; preds = %101
  %109 = and i32 %5, 64, !dbg !10635
  %110 = icmp eq i32 %109, 0, !dbg !10637
  %111 = and i32 %7, 64
  %112 = icmp eq i32 %111, 0
  %113 = select i1 %110, i1 true, i1 %112, !dbg !10638
  br i1 %113, label %115, label %114, !dbg !10638

114:                                              ; preds = %108
  call fastcc void @UART_EndTransmit_IT(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10639
  br label %115, !dbg !10641

115:                                              ; preds = %108, %61, %99, %90, %94, %98, %100, %114, %107, %17
  ret void, !dbg !10642
}

; Function Attrs: noinline nounwind
define internal fastcc void @UART_Receive_IT(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #9 !dbg !10643 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10645, metadata !DIExpression()), !dbg !10647
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !10648
  %3 = load volatile i32, i32* %2, align 4, !dbg !10648, !tbaa !9309
  %4 = icmp eq i32 %3, 34, !dbg !10650
  br i1 %4, label %5, label %63, !dbg !10651

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1, !dbg !10652
  %7 = load i32, i32* %6, align 4, !dbg !10652, !tbaa !9328
  %8 = icmp eq i32 %7, 4096, !dbg !10655
  br i1 %8, label %9, label %29, !dbg !10656

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !10657
  %11 = bitcast i8** %10 to i16**, !dbg !10657
  %12 = load i16*, i16** %11, align 4, !dbg !10657, !tbaa !9744
  call void @llvm.dbg.value(metadata i16* %12, metadata !10646, metadata !DIExpression()), !dbg !10647
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3, !dbg !10659
  %14 = load i32, i32* %13, align 4, !dbg !10659, !tbaa !9330
  %15 = icmp eq i32 %14, 0, !dbg !10661
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10662
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %16, align 4, !dbg !10662, !tbaa !9298
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 1, !dbg !10662
  %19 = load volatile i32, i32* %18, align 4, !dbg !10662, !tbaa !9530
  %20 = trunc i32 %19 to i16, !dbg !10662
  br i1 %15, label %21, label %25, !dbg !10663

21:                                               ; preds = %9
  %22 = and i16 %20, 511, !dbg !10664
  store i16 %22, i16* %12, align 2, !dbg !10666, !tbaa !9525
  %23 = load i8*, i8** %10, align 4, !dbg !10667, !tbaa !9744
  %24 = getelementptr inbounds i8, i8* %23, i32 2, !dbg !10667
  store i8* %24, i8** %10, align 4, !dbg !10667, !tbaa !9744
  br label %47, !dbg !10668

25:                                               ; preds = %9
  %26 = and i16 %20, 255, !dbg !10669
  store i16 %26, i16* %12, align 2, !dbg !10671, !tbaa !9525
  %27 = load i8*, i8** %10, align 4, !dbg !10672, !tbaa !9744
  %28 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !10672
  store i8* %28, i8** %10, align 4, !dbg !10672, !tbaa !9744
  br label %47

29:                                               ; preds = %5
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3, !dbg !10673
  %31 = load i32, i32* %30, align 4, !dbg !10673, !tbaa !9330
  %32 = icmp eq i32 %31, 0, !dbg !10676
  %33 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10677
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %33, align 4, !dbg !10677, !tbaa !9298
  %35 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 1, !dbg !10677
  %36 = load volatile i32, i32* %35, align 4, !dbg !10677, !tbaa !9530
  %37 = trunc i32 %36 to i8, !dbg !10677
  br i1 %32, label %38, label %42, !dbg !10678

38:                                               ; preds = %29
  %39 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !10679
  %40 = load i8*, i8** %39, align 4, !dbg !10681, !tbaa !9744
  %41 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !10681
  store i8* %41, i8** %39, align 4, !dbg !10681, !tbaa !9744
  store i8 %37, i8* %40, align 1, !dbg !10682, !tbaa !2505
  br label %47, !dbg !10683

42:                                               ; preds = %29
  %43 = and i8 %37, 127, !dbg !10684
  %44 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !10686
  %45 = load i8*, i8** %44, align 4, !dbg !10687, !tbaa !9744
  %46 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !10687
  store i8* %46, i8** %44, align 4, !dbg !10687, !tbaa !9744
  store i8 %43, i8* %45, align 1, !dbg !10688, !tbaa !2505
  br label %47

47:                                               ; preds = %38, %42, %21, %25
  %48 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !10689
  %49 = load volatile i16, i16* %48, align 2, !dbg !10691, !tbaa !9626
  %50 = add i16 %49, -1, !dbg !10691
  store volatile i16 %50, i16* %48, align 2, !dbg !10691, !tbaa !9626
  %51 = icmp eq i16 %50, 0, !dbg !10692
  br i1 %51, label %52, label %63, !dbg !10693

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10694
  %54 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %53, align 4, !dbg !10694, !tbaa !9298
  %55 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %54, i32 0, i32 3, !dbg !10694
  %56 = load volatile i32, i32* %55, align 4, !dbg !10694, !tbaa !6432
  %57 = and i32 %56, -33, !dbg !10694
  store volatile i32 %57, i32* %55, align 4, !dbg !10694, !tbaa !6432
  %58 = load volatile i32, i32* %55, align 4, !dbg !10696, !tbaa !6432
  %59 = and i32 %58, -257, !dbg !10696
  store volatile i32 %59, i32* %55, align 4, !dbg !10696, !tbaa !6432
  %60 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %54, i32 0, i32 5, !dbg !10697
  %61 = load volatile i32, i32* %60, align 4, !dbg !10697, !tbaa !6320
  %62 = and i32 %61, -2, !dbg !10697
  store volatile i32 %62, i32* %60, align 4, !dbg !10697, !tbaa !6320
  store volatile i32 32, i32* %2, align 4, !dbg !10698, !tbaa !9309
  call void @HAL_UART_RxCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10699
  br label %63, !dbg !10700

63:                                               ; preds = %1, %47, %52
  ret void, !dbg !10701
}

; Function Attrs: noinline nounwind
define internal void @UART_DMAAbortOnError(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #9 !dbg !10702 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !10704, metadata !DIExpression()), !dbg !10706
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !10707
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !10707
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !10707, !tbaa !9825
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !10705, metadata !DIExpression()), !dbg !10706
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !10708
  store volatile i16 0, i16* %5, align 2, !dbg !10709, !tbaa !9626
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !10710
  store volatile i16 0, i16* %6, align 2, !dbg !10711, !tbaa !9510
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !10712
  ret void, !dbg !10713
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @UART_Transmit_IT(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #14 !dbg !10714 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10716, metadata !DIExpression()), !dbg !10718
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10719
  %3 = load volatile i32, i32* %2, align 4, !dbg !10719, !tbaa !9285
  %4 = icmp eq i32 %3, 33, !dbg !10721
  br i1 %4, label %5, label %48, !dbg !10722

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1, !dbg !10723
  %7 = load i32, i32* %6, align 4, !dbg !10723, !tbaa !9328
  %8 = icmp eq i32 %7, 4096, !dbg !10726
  %9 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 2, !dbg !10727
  br i1 %8, label %10, label %27, !dbg !10728

10:                                               ; preds = %5
  %11 = bitcast i8** %9 to i16**, !dbg !10729
  %12 = load i16*, i16** %11, align 4, !dbg !10729, !tbaa !9708
  call void @llvm.dbg.value(metadata i16* %12, metadata !10717, metadata !DIExpression()), !dbg !10718
  %13 = load i16, i16* %12, align 2, !dbg !10731, !tbaa !9525
  %14 = and i16 %13, 511, !dbg !10732
  %15 = zext i16 %14 to i32, !dbg !10733
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10734
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %16, align 4, !dbg !10734, !tbaa !9298
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 1, !dbg !10735
  store volatile i32 %15, i32* %18, align 4, !dbg !10736, !tbaa !9530
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3, !dbg !10737
  %20 = load i32, i32* %19, align 4, !dbg !10737, !tbaa !9330
  %21 = icmp eq i32 %20, 0, !dbg !10739
  %22 = load i8*, i8** %9, align 4, !dbg !10740, !tbaa !9708
  br i1 %21, label %23, label %25, !dbg !10741

23:                                               ; preds = %10
  %24 = getelementptr inbounds i8, i8* %22, i32 2, !dbg !10742
  store i8* %24, i8** %9, align 4, !dbg !10742, !tbaa !9708
  br label %35, !dbg !10744

25:                                               ; preds = %10
  %26 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !10745
  store i8* %26, i8** %9, align 4, !dbg !10745, !tbaa !9708
  br label %35

27:                                               ; preds = %5
  %28 = load i8*, i8** %9, align 4, !dbg !10747, !tbaa !9708
  %29 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !10747
  store i8* %29, i8** %9, align 4, !dbg !10747, !tbaa !9708
  %30 = load i8, i8* %28, align 1, !dbg !10749, !tbaa !2505
  %31 = zext i8 %30 to i32, !dbg !10750
  %32 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10751
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10751, !tbaa !9298
  %34 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %33, i32 0, i32 1, !dbg !10752
  store volatile i32 %31, i32* %34, align 4, !dbg !10753, !tbaa !9530
  br label %35

35:                                               ; preds = %23, %25, %27
  %36 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !10754
  %37 = load volatile i16, i16* %36, align 2, !dbg !10756, !tbaa !9510
  %38 = add i16 %37, -1, !dbg !10756
  store volatile i16 %38, i16* %36, align 2, !dbg !10756, !tbaa !9510
  %39 = icmp eq i16 %38, 0, !dbg !10757
  br i1 %39, label %40, label %48, !dbg !10758

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10759
  %42 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %41, align 4, !dbg !10759, !tbaa !9298
  %43 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %42, i32 0, i32 3, !dbg !10759
  %44 = load volatile i32, i32* %43, align 4, !dbg !10759, !tbaa !6432
  %45 = and i32 %44, -129, !dbg !10759
  store volatile i32 %45, i32* %43, align 4, !dbg !10759, !tbaa !6432
  %46 = load volatile i32, i32* %43, align 4, !dbg !10761, !tbaa !6432
  %47 = or i32 %46, 64, !dbg !10761
  store volatile i32 %47, i32* %43, align 4, !dbg !10761, !tbaa !6432
  br label %48, !dbg !10762

48:                                               ; preds = %1, %35, %40
  ret void, !dbg !10763
}

; Function Attrs: noinline nounwind
define internal fastcc void @UART_EndTransmit_IT(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #9 !dbg !10764 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10766, metadata !DIExpression()), !dbg !10767
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10768
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !10768, !tbaa !9298
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !10768
  %5 = load volatile i32, i32* %4, align 4, !dbg !10768, !tbaa !6432
  %6 = and i32 %5, -65, !dbg !10768
  store volatile i32 %6, i32* %4, align 4, !dbg !10768, !tbaa !6432
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10769
  store volatile i32 32, i32* %7, align 4, !dbg !10770, !tbaa !9285
  call void @HAL_UART_TxCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !10771
  ret void, !dbg !10772
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_LIN_SendBreak(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #14 !dbg !10773 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10775, metadata !DIExpression()), !dbg !10776
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !10777
  %3 = load i32, i32* %2, align 4, !dbg !10777, !tbaa !9293
  %4 = icmp eq i32 %3, 1, !dbg !10777
  br i1 %4, label %12, label %5, !dbg !10780

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !10781, !tbaa !9293
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10783
  store volatile i32 36, i32* %6, align 4, !dbg !10784, !tbaa !9285
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10785
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10785, !tbaa !9298
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !10785
  %10 = load volatile i32, i32* %9, align 4, !dbg !10785, !tbaa !6432
  %11 = or i32 %10, 1, !dbg !10785
  store volatile i32 %11, i32* %9, align 4, !dbg !10785, !tbaa !6432
  store volatile i32 32, i32* %6, align 4, !dbg !10786, !tbaa !9285
  store i32 0, i32* %2, align 4, !dbg !10787, !tbaa !9293
  br label %12, !dbg !10789

12:                                               ; preds = %1, %5
  %13 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !10776
  ret i32 %13, !dbg !10790
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_MultiProcessor_EnterMuteMode(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #14 !dbg !10791 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10793, metadata !DIExpression()), !dbg !10794
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !10795
  %3 = load i32, i32* %2, align 4, !dbg !10795, !tbaa !9293
  %4 = icmp eq i32 %3, 1, !dbg !10795
  br i1 %4, label %12, label %5, !dbg !10798

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !10799, !tbaa !9293
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10801
  store volatile i32 36, i32* %6, align 4, !dbg !10802, !tbaa !9285
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10803
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10803, !tbaa !9298
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !10803
  %10 = load volatile i32, i32* %9, align 4, !dbg !10803, !tbaa !6432
  %11 = or i32 %10, 2, !dbg !10803
  store volatile i32 %11, i32* %9, align 4, !dbg !10803, !tbaa !6432
  store volatile i32 32, i32* %6, align 4, !dbg !10804, !tbaa !9285
  store i32 0, i32* %2, align 4, !dbg !10805, !tbaa !9293
  br label %12, !dbg !10807

12:                                               ; preds = %1, %5
  %13 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !10794
  ret i32 %13, !dbg !10808
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_MultiProcessor_ExitMuteMode(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #14 !dbg !10809 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10811, metadata !DIExpression()), !dbg !10812
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !10813
  %3 = load i32, i32* %2, align 4, !dbg !10813, !tbaa !9293
  %4 = icmp eq i32 %3, 1, !dbg !10813
  br i1 %4, label %12, label %5, !dbg !10816

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !10817, !tbaa !9293
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10819
  store volatile i32 36, i32* %6, align 4, !dbg !10820, !tbaa !9285
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10821
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10821, !tbaa !9298
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !10821
  %10 = load volatile i32, i32* %9, align 4, !dbg !10821, !tbaa !6432
  %11 = and i32 %10, -3, !dbg !10821
  store volatile i32 %11, i32* %9, align 4, !dbg !10821, !tbaa !6432
  store volatile i32 32, i32* %6, align 4, !dbg !10822, !tbaa !9285
  store i32 0, i32* %2, align 4, !dbg !10823, !tbaa !9293
  br label %12, !dbg !10825

12:                                               ; preds = %1, %5
  %13 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !10812
  ret i32 %13, !dbg !10826
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_HalfDuplex_EnableTransmitter(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #14 !dbg !10827 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10829, metadata !DIExpression()), !dbg !10831
  call void @llvm.dbg.value(metadata i32 0, metadata !10830, metadata !DIExpression()), !dbg !10831
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !10832
  %3 = load i32, i32* %2, align 4, !dbg !10832, !tbaa !9293
  %4 = icmp eq i32 %3, 1, !dbg !10832
  br i1 %4, label %13, label %5, !dbg !10835

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !10836, !tbaa !9293
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10838
  store volatile i32 36, i32* %6, align 4, !dbg !10839, !tbaa !9285
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10840
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10840, !tbaa !9298
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !10841
  %10 = load volatile i32, i32* %9, align 4, !dbg !10841, !tbaa !6432
  call void @llvm.dbg.value(metadata i32 %10, metadata !10830, metadata !DIExpression()), !dbg !10831
  %11 = and i32 %10, -13, !dbg !10842
  call void @llvm.dbg.value(metadata i32 %11, metadata !10830, metadata !DIExpression()), !dbg !10831
  %12 = or i32 %11, 8, !dbg !10843
  call void @llvm.dbg.value(metadata i32 %12, metadata !10830, metadata !DIExpression()), !dbg !10831
  store volatile i32 %12, i32* %9, align 4, !dbg !10844, !tbaa !6432
  store volatile i32 32, i32* %6, align 4, !dbg !10845, !tbaa !9285
  store i32 0, i32* %2, align 4, !dbg !10846, !tbaa !9293
  br label %13, !dbg !10848

13:                                               ; preds = %1, %5
  %14 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !10831
  ret i32 %14, !dbg !10849
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_HalfDuplex_EnableReceiver(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #14 !dbg !10850 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10852, metadata !DIExpression()), !dbg !10854
  call void @llvm.dbg.value(metadata i32 0, metadata !10853, metadata !DIExpression()), !dbg !10854
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !10855
  %3 = load i32, i32* %2, align 4, !dbg !10855, !tbaa !9293
  %4 = icmp eq i32 %3, 1, !dbg !10855
  br i1 %4, label %13, label %5, !dbg !10858

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !10859, !tbaa !9293
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10861
  store volatile i32 36, i32* %6, align 4, !dbg !10862, !tbaa !9285
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !10863
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10863, !tbaa !9298
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !10864
  %10 = load volatile i32, i32* %9, align 4, !dbg !10864, !tbaa !6432
  call void @llvm.dbg.value(metadata i32 %10, metadata !10853, metadata !DIExpression()), !dbg !10854
  %11 = and i32 %10, -13, !dbg !10865
  call void @llvm.dbg.value(metadata i32 %11, metadata !10853, metadata !DIExpression()), !dbg !10854
  %12 = or i32 %11, 4, !dbg !10866
  call void @llvm.dbg.value(metadata i32 %12, metadata !10853, metadata !DIExpression()), !dbg !10854
  store volatile i32 %12, i32* %9, align 4, !dbg !10867, !tbaa !6432
  store volatile i32 32, i32* %6, align 4, !dbg !10868, !tbaa !9285
  store i32 0, i32* %2, align 4, !dbg !10869, !tbaa !9293
  br label %13, !dbg !10871

13:                                               ; preds = %1, %5
  %14 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !10854
  ret i32 %14, !dbg !10872
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_UART_GetState(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #15 !dbg !10873 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10877, metadata !DIExpression()), !dbg !10880
  call void @llvm.dbg.value(metadata i32 0, metadata !10878, metadata !DIExpression()), !dbg !10880
  call void @llvm.dbg.value(metadata i32 0, metadata !10879, metadata !DIExpression()), !dbg !10880
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !10881
  %3 = load volatile i32, i32* %2, align 4, !dbg !10881, !tbaa !9285
  call void @llvm.dbg.value(metadata i32 %3, metadata !10878, metadata !DIExpression()), !dbg !10880
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !10882
  %5 = load volatile i32, i32* %4, align 4, !dbg !10882, !tbaa !9309
  call void @llvm.dbg.value(metadata i32 %5, metadata !10879, metadata !DIExpression()), !dbg !10880
  %6 = or i32 %5, %3, !dbg !10883
  ret i32 %6, !dbg !10884
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_UART_GetError(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #15 !dbg !10885 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !10889, metadata !DIExpression()), !dbg !10890
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !10891
  %3 = load volatile i32, i32* %2, align 4, !dbg !10891, !tbaa !9305
  ret i32 %3, !dbg !10892
}

attributes #0 = { mustprogress noinline noreturn nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { mustprogress noinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { argmemonly nofree nounwind willreturn }
attributes #5 = { mustprogress noinline norecurse nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nounwind willreturn writeonly }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { nofree nounwind }
attributes #9 = { noinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { nofree nosync nounwind willreturn }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline norecurse nosync nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nosync nounwind readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nosync nounwind readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { naked noinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { noinline noreturn nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nosync nounwind readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nosync nounwind willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { mustprogress nofree noinline norecurse nosync nounwind willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { cold noreturn nounwind }
attributes #25 = { nobuiltin nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #26 = { mustprogress nofree noinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #27 = { argmemonly nofree nounwind readonly willreturn }
attributes #28 = { argmemonly mustprogress nofree nounwind willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #29 = { nofree nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #30 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #31 = { mustprogress nofree noinline norecurse nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #32 = { mustprogress nofree noinline norecurse nosync nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #33 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #34 = { nounwind }
attributes #35 = { noreturn }
attributes #36 = { noreturn nounwind }
attributes #37 = { builtin nounwind }

!llvm.dbg.cu = !{!2, !263, !313, !1348, !385, !505, !523, !1400, !1454, !1507, !1533, !1674, !1771, !621, !853, !1861, !1986, !1988}
!llvm.ident = !{!2100, !2100, !2100, !2100, !2100, !2100, !2100, !2100, !2100, !2100, !2100, !2100, !2100, !2100, !2100, !2100, !2100, !2100}
!llvm.module.flags = !{!2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "xStackTask", scope: !2, file: !3, line: 21, type: !246, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !13, globals: !90, imports: !167, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../examples/stm32f1/ipcommdevice_freertos.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "5122a0170262942b15fb1aecc535a5a6")
!4 = !{!5}
!5 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 41, baseType: !7, size: 32, elements: !8, identifier: "_ZTS17HAL_StatusTypeDef")
!6 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "4d6e0bbb91efacee14a68a416f506def")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "HAL_OK", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "HAL_ERROR", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "HAL_BUSY", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3, isUnsigned: true)
!13 = !{!14, !66, !79, !26, !82, !85, !86}
!14 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 32)
!15 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Task", scope: !17, file: !16, line: 193, size: 160, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !18, vtableHolder: !15, identifier: "_ZTSN6Cicada4TaskE")
!16 = !DIFile(filename: "../cicada/task.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "c2aeaca9a01dbc0caa84f135ef9fda2b")
!17 = !DINamespace(name: "Cicada", scope: null)
!18 = !{!19, !25, !31, !34, !36, !37, !41, !44, !49, !50, !53, !56, !57, !58, !59, !62}
!19 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$Task", scope: !16, file: !16, baseType: !20, size: 32, flags: DIFlagArtificial)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 32)
!21 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "__vtbl_ptr_type", baseType: !22, size: 32)
!22 = !DISubroutineType(types: !23)
!23 = !{!24}
!24 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "_delay", scope: !15, file: !16, line: 283, baseType: !26, size: 16, offset: 32)
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !27, line: 36, baseType: !28)
!27 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "ab914e287601b2385e57880e6599aa6b")
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !29, line: 57, baseType: !30)
!29 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "f7024d0682a918b41f94e8be9cd90461")
!30 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "_timeout", scope: !15, file: !16, line: 284, baseType: !32, size: 32, offset: 64)
!32 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !27, line: 48, baseType: !33)
!33 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !29, line: 79, baseType: !7)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "_isTimeoutRunning", scope: !15, file: !16, line: 285, baseType: !35, size: 8, offset: 96)
!35 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "_lastRun", scope: !15, file: !16, line: 286, baseType: !32, size: 32, offset: 128)
!37 = !DISubprogram(name: "Task", scope: !15, file: !16, line: 196, type: !38, scopeLine: 196, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!38 = !DISubroutineType(types: !39)
!39 = !{null, !40, !26}
!40 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!41 = !DISubprogram(name: "~Task", scope: !15, file: !16, line: 198, type: !42, scopeLine: 198, containingType: !15, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!42 = !DISubroutineType(types: !43)
!43 = !{null, !40}
!44 = !DISubprogram(name: "delay", linkageName: "_ZNK6Cicada4Task5delayEv", scope: !15, file: !16, line: 203, type: !45, scopeLine: 203, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!45 = !DISubroutineType(types: !46)
!46 = !{!26, !47}
!47 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!48 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15)
!49 = !DISubprogram(name: "setDelay", linkageName: "_ZN6Cicada4Task8setDelayEt", scope: !15, file: !16, line: 212, type: !38, scopeLine: 212, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!50 = !DISubprogram(name: "lastRun", linkageName: "_ZN6Cicada4Task7lastRunEv", scope: !15, file: !16, line: 222, type: !51, scopeLine: 222, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!51 = !DISubroutineType(types: !52)
!52 = !{!32, !40}
!53 = !DISubprogram(name: "setLastRun", linkageName: "_ZN6Cicada4Task10setLastRunEj", scope: !15, file: !16, line: 230, type: !54, scopeLine: 230, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!54 = !DISubroutineType(types: !55)
!55 = !{null, !40, !32}
!56 = !DISubprogram(name: "run", linkageName: "_ZN6Cicada4Task3runEv", scope: !15, file: !16, line: 245, type: !42, scopeLine: 245, containingType: !15, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!57 = !DISubprogram(name: "startTimeout", linkageName: "_ZN6Cicada4Task12startTimeoutEv", scope: !15, file: !16, line: 251, type: !42, scopeLine: 251, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!58 = !DISubprogram(name: "resetTimeout", linkageName: "_ZN6Cicada4Task12resetTimeoutEv", scope: !15, file: !16, line: 262, type: !42, scopeLine: 262, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!59 = !DISubprogram(name: "isTimeout", linkageName: "_ZN6Cicada4Task9isTimeoutEj", scope: !15, file: !16, line: 272, type: !60, scopeLine: 272, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!60 = !DISubroutineType(types: !61)
!61 = !{!35, !40, !32}
!62 = !DISubprogram(name: "Task", scope: !15, file: !16, line: 281, type: !63, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!63 = !DISubroutineType(types: !64)
!64 = !{null, !40, !65}
!65 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !48, size: 32)
!66 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 32)
!67 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !68, line: 516, baseType: !69)
!68 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "d2562af6d7239ab46ca8ba238a43c848")
!69 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !68, line: 507, size: 224, flags: DIFlagTypePassByValue, elements: !70, identifier: "_ZTS13USART_TypeDef")
!70 = !{!71, !73, !74, !75, !76, !77, !78}
!71 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !69, file: !68, line: 509, baseType: !72, size: 32)
!72 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !32)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !69, file: !68, line: 510, baseType: !72, size: 32, offset: 32)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !69, file: !68, line: 511, baseType: !72, size: 32, offset: 64)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !69, file: !68, line: 512, baseType: !72, size: 32, offset: 96)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !69, file: !68, line: 513, baseType: !72, size: 32, offset: 128)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !69, file: !68, line: 514, baseType: !72, size: 32, offset: 160)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !69, file: !68, line: 515, baseType: !72, size: 32, offset: 192)
!79 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !80, size: 32)
!80 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !68, line: 367, baseType: !81)
!81 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !68, line: 358, size: 224, flags: DIFlagFwdDecl, identifier: "_ZTS12GPIO_TypeDef")
!82 = !DIDerivedType(tag: DW_TAG_typedef, name: "UBaseType_t", file: !83, line: 57, baseType: !84)
!83 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "5fd77bad595782d66ff9acd907773be8")
!84 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !72, size: 32)
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !87, size: 32)
!87 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !27, line: 24, baseType: !88)
!88 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !29, line: 43, baseType: !89)
!89 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!90 = !{!0, !91, !97, !126, !128, !142, !147, !156, !159}
!91 = !DIGlobalVariableExpression(var: !92, expr: !DIExpression())
!92 = distinct !DIGlobalVariable(name: "xStackComm", scope: !2, file: !3, line: 22, type: !93, isLocal: false, isDefinition: true)
!93 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 8192, elements: !95)
!94 = !DIDerivedType(tag: DW_TAG_typedef, name: "StackType_t", file: !83, line: 55, baseType: !32)
!95 = !{!96}
!96 = !DISubrange(count: 256)
!97 = !DIGlobalVariableExpression(var: !98, expr: !DIExpression())
!98 = distinct !DIGlobalVariable(name: "xTaskBuffer", scope: !2, file: !3, line: 23, type: !99, isLocal: false, isDefinition: true)
!99 = !DIDerivedType(tag: DW_TAG_typedef, name: "StaticTask_t", file: !100, line: 1030, baseType: !101)
!100 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "35901dd1e618d03882fd7fe7e54fee1a")
!101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xSTATIC_TCB", file: !100, line: 984, size: 608, flags: DIFlagTypePassByValue, elements: !102, identifier: "_ZTS11xSTATIC_TCB")
!102 = !{!103, !105, !118, !119, !120, !124, !125}
!103 = !DIDerivedType(tag: DW_TAG_member, name: "pxDummy1", scope: !101, file: !100, line: 986, baseType: !104, size: 32)
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "xDummy3", scope: !101, file: !100, line: 990, baseType: !106, size: 320, offset: 32)
!106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 320, elements: !116)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "StaticListItem_t", file: !100, line: 953, baseType: !108)
!108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xSTATIC_LIST_ITEM", file: !100, line: 948, size: 160, flags: DIFlagTypePassByValue, elements: !109, identifier: "_ZTS17xSTATIC_LIST_ITEM")
!109 = !{!110, !112}
!110 = !DIDerivedType(tag: DW_TAG_member, name: "xDummy1", scope: !108, file: !100, line: 950, baseType: !111, size: 32)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "TickType_t", file: !83, line: 63, baseType: !32)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "pvDummy2", scope: !108, file: !100, line: 951, baseType: !113, size: 128, offset: 32)
!113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !104, size: 128, elements: !114)
!114 = !{!115}
!115 = !DISubrange(count: 4)
!116 = !{!117}
!117 = !DISubrange(count: 2)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "uxDummy5", scope: !101, file: !100, line: 991, baseType: !82, size: 32, offset: 352)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "pxDummy6", scope: !101, file: !100, line: 992, baseType: !104, size: 32, offset: 384)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "ucDummy7", scope: !101, file: !100, line: 993, baseType: !121, size: 128, offset: 416)
!121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !87, size: 128, elements: !122)
!122 = !{!123}
!123 = !DISubrange(count: 16)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "ulDummy18", scope: !101, file: !100, line: 1019, baseType: !32, size: 32, offset: 544)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "ucDummy19", scope: !101, file: !100, line: 1020, baseType: !87, size: 8, offset: 576)
!126 = !DIGlobalVariableExpression(var: !127, expr: !DIExpression())
!127 = distinct !DIGlobalVariable(name: "xCommBuffer", scope: !2, file: !3, line: 24, type: !99, isLocal: false, isDefinition: true)
!128 = !DIGlobalVariableExpression(var: !129, expr: !DIExpression())
!129 = distinct !DIGlobalVariable(name: "xIdleTaskTCB", scope: !130, file: !3, line: 158, type: !99, isLocal: true, isDefinition: true)
!130 = distinct !DISubprogram(name: "vApplicationGetIdleTaskMemory", scope: !3, file: !3, line: 155, type: !131, scopeLine: 157, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !138)
!131 = !DISubroutineType(types: !132)
!132 = !{null, !133, !135, !137}
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !99, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !94, size: 32)
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 32)
!138 = !{!139, !140, !141}
!139 = !DILocalVariable(name: "ppxIdleTaskTCBBuffer", arg: 1, scope: !130, file: !3, line: 155, type: !133)
!140 = !DILocalVariable(name: "ppxIdleTaskStackBuffer", arg: 2, scope: !130, file: !3, line: 156, type: !135)
!141 = !DILocalVariable(name: "pulIdleTaskStackSize", arg: 3, scope: !130, file: !3, line: 156, type: !137)
!142 = !DIGlobalVariableExpression(var: !143, expr: !DIExpression())
!143 = distinct !DIGlobalVariable(name: "uxIdleTaskStack", scope: !130, file: !3, line: 159, type: !144, isLocal: true, isDefinition: true)
!144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 4096, elements: !145)
!145 = !{!146}
!146 = !DISubrange(count: 128)
!147 = !DIGlobalVariableExpression(var: !148, expr: !DIExpression())
!148 = distinct !DIGlobalVariable(name: "instance", scope: !149, file: !3, line: 174, type: !153, isLocal: true, isDefinition: true)
!149 = distinct !DISubprogram(name: "USART1_IRQHandler", scope: !3, file: !3, line: 172, type: !150, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !152)
!150 = !DISubroutineType(types: !151)
!151 = !{null}
!152 = !{}
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!154 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Stm32Uart", scope: !17, file: !155, line: 51, size: 1536, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada9Stm32UartE")
!155 = !DIFile(filename: "../cicada/platform/stm32f1/stm32uart.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "f1205a68111afe9a0868ac35ca31b4e6")
!156 = !DIGlobalVariableExpression(var: !157, expr: !DIExpression())
!157 = distinct !DIGlobalVariable(name: "instance", scope: !158, file: !3, line: 180, type: !153, isLocal: true, isDefinition: true)
!158 = distinct !DISubprogram(name: "USART2_IRQHandler", scope: !3, file: !3, line: 178, type: !150, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !152)
!159 = !DIGlobalVariableExpression(var: !160, expr: !DIExpression())
!160 = distinct !DIGlobalVariable(name: "serial", scope: !161, file: !3, line: 186, type: !153, isLocal: true, isDefinition: true)
!161 = distinct !DISubprogram(name: "_putchar", scope: !3, file: !3, line: 184, type: !162, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !165)
!162 = !DISubroutineType(types: !163)
!163 = !{null, !164}
!164 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!165 = !{!166}
!166 = !DILocalVariable(name: "c", arg: 1, scope: !161, file: !3, line: 184, type: !164)
!167 = !{!168, !174, !178, !181, !185, !188, !190, !192, !194, !197, !200, !203, !206, !209, !212, !213, !214, !215, !219, !221, !223, !225, !227, !230, !233, !236, !239, !242, !245}
!168 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !170, file: !173, line: 47)
!169 = !DINamespace(name: "std", scope: null)
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !27, line: 20, baseType: !171)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !29, line: 41, baseType: !172)
!172 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!173 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/cstdint", directory: "/home/mjshen/RTOSExploration")
!174 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !175, file: !173, line: 48)
!175 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !27, line: 32, baseType: !176)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int16_t", file: !29, line: 55, baseType: !177)
!177 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!178 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !179, file: !173, line: 49)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !27, line: 44, baseType: !180)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !29, line: 77, baseType: !24)
!181 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !182, file: !173, line: 50)
!182 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !27, line: 56, baseType: !183)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !29, line: 103, baseType: !184)
!184 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!185 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !186, file: !173, line: 52)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast8_t", file: !187, line: 51, baseType: !172)
!187 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdint.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "a169a1d650067906a9e00519a9405ebb")
!188 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !189, file: !173, line: 53)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast16_t", file: !187, line: 61, baseType: !177)
!190 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !191, file: !173, line: 54)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast32_t", file: !187, line: 71, baseType: !24)
!192 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !193, file: !173, line: 55)
!193 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast64_t", file: !187, line: 81, baseType: !184)
!194 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !195, file: !173, line: 57)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least8_t", file: !187, line: 21, baseType: !196)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least8_t", file: !29, line: 134, baseType: !172)
!197 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !198, file: !173, line: 58)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least16_t", file: !187, line: 27, baseType: !199)
!199 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least16_t", file: !29, line: 160, baseType: !177)
!200 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !201, file: !173, line: 59)
!201 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least32_t", file: !187, line: 33, baseType: !202)
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least32_t", file: !29, line: 182, baseType: !24)
!203 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !204, file: !173, line: 60)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least64_t", file: !187, line: 39, baseType: !205)
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !29, line: 200, baseType: !184)
!206 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !207, file: !173, line: 62)
!207 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !27, line: 67, baseType: !208)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !29, line: 214, baseType: !184)
!209 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !210, file: !173, line: 63)
!210 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !27, line: 77, baseType: !211)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intptr_t", file: !29, line: 230, baseType: !24)
!212 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !87, file: !173, line: 65)
!213 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !26, file: !173, line: 66)
!214 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !32, file: !173, line: 67)
!215 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !216, file: !173, line: 68)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !27, line: 60, baseType: !217)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !29, line: 105, baseType: !218)
!218 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!219 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !220, file: !173, line: 70)
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast8_t", file: !187, line: 52, baseType: !89)
!221 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !222, file: !173, line: 71)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast16_t", file: !187, line: 62, baseType: !30)
!223 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !224, file: !173, line: 72)
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast32_t", file: !187, line: 72, baseType: !7)
!225 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !226, file: !173, line: 73)
!226 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast64_t", file: !187, line: 82, baseType: !218)
!227 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !228, file: !173, line: 75)
!228 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least8_t", file: !187, line: 22, baseType: !229)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least8_t", file: !29, line: 136, baseType: !89)
!230 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !231, file: !173, line: 76)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least16_t", file: !187, line: 28, baseType: !232)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least16_t", file: !29, line: 162, baseType: !30)
!233 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !234, file: !173, line: 77)
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least32_t", file: !187, line: 34, baseType: !235)
!235 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least32_t", file: !29, line: 184, baseType: !7)
!236 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !237, file: !173, line: 78)
!237 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !187, line: 40, baseType: !238)
!238 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least64_t", file: !29, line: 202, baseType: !218)
!239 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !240, file: !173, line: 80)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !27, line: 72, baseType: !241)
!241 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !29, line: 222, baseType: !218)
!242 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !243, file: !173, line: 81)
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !27, line: 82, baseType: !244)
!244 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintptr_t", file: !29, line: 232, baseType: !7)
!245 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !2, entity: !17, file: !3, line: 18)
!246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 98304, elements: !247)
!247 = !{!248}
!248 = !DISubrange(count: 3072)
!249 = !DIGlobalVariableExpression(var: !250, expr: !DIExpression())
!250 = distinct !DIGlobalVariable(name: "pow10", scope: !251, file: !252, line: 311, type: !308, isLocal: true, isDefinition: true)
!251 = distinct !DISubprogram(name: "_ftoa", scope: !252, file: !252, line: 299, type: !253, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !275)
!252 = !DIFile(filename: "../dep/printf/src/printf.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "7383fa86adf0d25d8eda174a9b330d6a")
!253 = !DISubroutineType(types: !254)
!254 = !{!255, !257, !261, !255, !255, !262, !7, !7, !7}
!255 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !256, line: 46, baseType: !7)
!256 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "", checksumkind: CSK_MD5, checksum: "2499dd2361b915724b073282bea3a7bc")
!257 = !DIDerivedType(tag: DW_TAG_typedef, name: "out_fct_type", file: !252, line: 97, baseType: !258)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 32)
!259 = !DISubroutineType(types: !260)
!260 = !{null, !164, !104, !255, !255}
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!262 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!263 = distinct !DICompileUnit(language: DW_LANG_C99, file: !252, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !264, globals: !274, splitDebugInlining: false, nameTableKind: None)
!264 = !{!255, !261, !243, !7, !24, !218, !84, !164, !177, !89, !30, !262, !265}
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 32)
!266 = !DIDerivedType(tag: DW_TAG_typedef, name: "out_fct_wrap_type", file: !252, line: 104, baseType: !267)
!267 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !252, line: 101, size: 64, elements: !268)
!268 = !{!269, !273}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "fct", scope: !267, file: !252, line: 102, baseType: !270, size: 32)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 32)
!271 = !DISubroutineType(types: !272)
!272 = !{null, !164, !104}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !267, file: !252, line: 103, baseType: !104, size: 32, offset: 32)
!274 = !{!249}
!275 = !{!276, !277, !278, !279, !280, !281, !282, !283, !284, !286, !290, !291, !292, !294, !296, !297, !298, !299, !302, !306}
!276 = !DILocalVariable(name: "out", arg: 1, scope: !251, file: !252, line: 299, type: !257)
!277 = !DILocalVariable(name: "buffer", arg: 2, scope: !251, file: !252, line: 299, type: !261)
!278 = !DILocalVariable(name: "idx", arg: 3, scope: !251, file: !252, line: 299, type: !255)
!279 = !DILocalVariable(name: "maxlen", arg: 4, scope: !251, file: !252, line: 299, type: !255)
!280 = !DILocalVariable(name: "value", arg: 5, scope: !251, file: !252, line: 299, type: !262)
!281 = !DILocalVariable(name: "prec", arg: 6, scope: !251, file: !252, line: 299, type: !7)
!282 = !DILocalVariable(name: "width", arg: 7, scope: !251, file: !252, line: 299, type: !7)
!283 = !DILocalVariable(name: "flags", arg: 8, scope: !251, file: !252, line: 299, type: !7)
!284 = !DILocalVariable(name: "start_idx", scope: !251, file: !252, line: 301, type: !285)
!285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !255)
!286 = !DILocalVariable(name: "buf", scope: !251, file: !252, line: 303, type: !287)
!287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 256, elements: !288)
!288 = !{!289}
!289 = !DISubrange(count: 32)
!290 = !DILocalVariable(name: "len", scope: !251, file: !252, line: 304, type: !255)
!291 = !DILocalVariable(name: "diff", scope: !251, file: !252, line: 305, type: !262)
!292 = !DILocalVariable(name: "thres_max", scope: !251, file: !252, line: 308, type: !293)
!293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!294 = !DILocalVariable(name: "negative", scope: !251, file: !252, line: 322, type: !295)
!295 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!296 = !DILocalVariable(name: "whole", scope: !251, file: !252, line: 338, type: !24)
!297 = !DILocalVariable(name: "tmp", scope: !251, file: !252, line: 339, type: !262)
!298 = !DILocalVariable(name: "frac", scope: !251, file: !252, line: 340, type: !84)
!299 = !DILocalVariable(name: "count", scope: !300, file: !252, line: 373, type: !7)
!300 = distinct !DILexicalBlock(scope: !301, file: !252, line: 372, column: 8)
!301 = distinct !DILexicalBlock(scope: !251, file: !252, line: 364, column: 7)
!302 = !DILocalVariable(name: "i", scope: !303, file: !252, line: 424, type: !255)
!303 = distinct !DILexicalBlock(scope: !304, file: !252, line: 424, column: 5)
!304 = distinct !DILexicalBlock(scope: !305, file: !252, line: 423, column: 58)
!305 = distinct !DILexicalBlock(scope: !251, file: !252, line: 423, column: 7)
!306 = !DILocalVariable(name: "i", scope: !307, file: !252, line: 430, type: !255)
!307 = distinct !DILexicalBlock(scope: !251, file: !252, line: 430, column: 3)
!308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 640, elements: !309)
!309 = !{!310}
!310 = !DISubrange(count: 10)
!311 = !DIGlobalVariableExpression(var: !312, expr: !DIExpression())
!312 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !313, file: !314, line: 124, type: !382, isLocal: false, isDefinition: true)
!313 = distinct !DICompileUnit(language: DW_LANG_C99, file: !314, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !315, retainedTypes: !321, globals: !373, splitDebugInlining: false, nameTableKind: None)
!314 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/system_stm32f1xx.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "2e873de3002e5d783190a46ff1c7da2d")
!315 = !{!316}
!316 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !317, line: 151, baseType: !7, size: 32, elements: !318)
!317 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "dc4ed8bdf8589b30d30d93eb6ee6ca27")
!318 = !{!319, !320}
!319 = !DIEnumerator(name: "RESET", value: 0)
!320 = !DIEnumerator(name: "SET", value: 1)
!321 = !{!322, !336, !32}
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 32)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !68, line: 438, baseType: !324)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !68, line: 424, size: 320, elements: !325)
!325 = !{!326, !327, !328, !329, !330, !331, !332, !333, !334, !335}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !324, file: !68, line: 426, baseType: !72, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !324, file: !68, line: 427, baseType: !72, size: 32, offset: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !324, file: !68, line: 428, baseType: !72, size: 32, offset: 64)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !324, file: !68, line: 429, baseType: !72, size: 32, offset: 96)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !324, file: !68, line: 430, baseType: !72, size: 32, offset: 128)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !324, file: !68, line: 431, baseType: !72, size: 32, offset: 160)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !324, file: !68, line: 432, baseType: !72, size: 32, offset: 192)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !324, file: !68, line: 433, baseType: !72, size: 32, offset: 224)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !324, file: !68, line: 434, baseType: !72, size: 32, offset: 256)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !324, file: !68, line: 435, baseType: !72, size: 32, offset: 288)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 32)
!337 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !338, line: 397, baseType: !339)
!338 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build")
!339 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !338, line: 374, size: 1120, elements: !340)
!340 = !{!341, !343, !344, !345, !346, !347, !348, !353, !354, !355, !356, !357, !358, !359, !360, !362, !363, !364, !366, !370, !372}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !339, file: !338, line: 376, baseType: !342, size: 32)
!342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !72)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !339, file: !338, line: 377, baseType: !72, size: 32, offset: 32)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !339, file: !338, line: 378, baseType: !72, size: 32, offset: 64)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !339, file: !338, line: 379, baseType: !72, size: 32, offset: 96)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !339, file: !338, line: 380, baseType: !72, size: 32, offset: 128)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !339, file: !338, line: 381, baseType: !72, size: 32, offset: 160)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !339, file: !338, line: 382, baseType: !349, size: 96, offset: 192)
!349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, size: 96, elements: !351)
!350 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !87)
!351 = !{!352}
!352 = !DISubrange(count: 12)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !339, file: !338, line: 383, baseType: !72, size: 32, offset: 288)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !339, file: !338, line: 384, baseType: !72, size: 32, offset: 320)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !339, file: !338, line: 385, baseType: !72, size: 32, offset: 352)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !339, file: !338, line: 386, baseType: !72, size: 32, offset: 384)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !339, file: !338, line: 387, baseType: !72, size: 32, offset: 416)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !339, file: !338, line: 388, baseType: !72, size: 32, offset: 448)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !339, file: !338, line: 389, baseType: !72, size: 32, offset: 480)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !339, file: !338, line: 390, baseType: !361, size: 64, offset: 512)
!361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 64, elements: !116)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !339, file: !338, line: 391, baseType: !342, size: 32, offset: 576)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !339, file: !338, line: 392, baseType: !342, size: 32, offset: 608)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !339, file: !338, line: 393, baseType: !365, size: 128, offset: 640)
!365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 128, elements: !114)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !339, file: !338, line: 394, baseType: !367, size: 160, offset: 768)
!367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 160, elements: !368)
!368 = !{!369}
!369 = !DISubrange(count: 5)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !339, file: !338, line: 395, baseType: !371, size: 160, offset: 928)
!371 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 160, elements: !368)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !339, file: !338, line: 396, baseType: !72, size: 32, offset: 1088)
!373 = !{!374, !311, !376}
!374 = !DIGlobalVariableExpression(var: !375, expr: !DIExpression())
!375 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !313, file: !314, line: 123, type: !32, isLocal: false, isDefinition: true)
!376 = !DIGlobalVariableExpression(var: !377, expr: !DIExpression())
!377 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !313, file: !314, line: 125, type: !378, isLocal: false, isDefinition: true)
!378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !379, size: 64, elements: !380)
!379 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !87)
!380 = !{!381}
!381 = !DISubrange(count: 8)
!382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !379, size: 128, elements: !122)
!383 = !DIGlobalVariableExpression(var: !384, expr: !DIExpression())
!384 = distinct !DIGlobalVariable(name: "uwTickPrio", scope: !385, file: !386, line: 80, type: !32, isLocal: false, isDefinition: true)
!385 = distinct !DICompileUnit(language: DW_LANG_C99, file: !386, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !387, retainedTypes: !455, globals: !497, splitDebugInlining: false, nameTableKind: None)
!386 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "1a5fa7b79e9e470cf817b81d791a6ccb")
!387 = !{!388, !395, !401}
!388 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !389, line: 49, baseType: !7, size: 32, elements: !390)
!389 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "5eab64b252ccd159497a11d87d26bc0b")
!390 = !{!391, !392, !393, !394}
!391 = !DIEnumerator(name: "HAL_TICK_FREQ_10HZ", value: 100)
!392 = !DIEnumerator(name: "HAL_TICK_FREQ_100HZ", value: 10)
!393 = !DIEnumerator(name: "HAL_TICK_FREQ_1KHZ", value: 1)
!394 = !DIEnumerator(name: "HAL_TICK_FREQ_DEFAULT", value: 1)
!395 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 41, baseType: !7, size: 32, elements: !396)
!396 = !{!397, !398, !399, !400}
!397 = !DIEnumerator(name: "HAL_OK", value: 0)
!398 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!399 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!400 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!401 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !68, line: 69, baseType: !24, size: 32, elements: !402)
!402 = !{!403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454}
!403 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!404 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!405 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!406 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!407 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!408 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!409 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!410 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!411 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!412 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!413 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!414 = !DIEnumerator(name: "TAMPER_IRQn", value: 2)
!415 = !DIEnumerator(name: "RTC_IRQn", value: 3)
!416 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!417 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!418 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!419 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!420 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!421 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!422 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!423 = !DIEnumerator(name: "DMA1_Channel1_IRQn", value: 11)
!424 = !DIEnumerator(name: "DMA1_Channel2_IRQn", value: 12)
!425 = !DIEnumerator(name: "DMA1_Channel3_IRQn", value: 13)
!426 = !DIEnumerator(name: "DMA1_Channel4_IRQn", value: 14)
!427 = !DIEnumerator(name: "DMA1_Channel5_IRQn", value: 15)
!428 = !DIEnumerator(name: "DMA1_Channel6_IRQn", value: 16)
!429 = !DIEnumerator(name: "DMA1_Channel7_IRQn", value: 17)
!430 = !DIEnumerator(name: "ADC1_2_IRQn", value: 18)
!431 = !DIEnumerator(name: "USB_HP_CAN1_TX_IRQn", value: 19)
!432 = !DIEnumerator(name: "USB_LP_CAN1_RX0_IRQn", value: 20)
!433 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!434 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!435 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!436 = !DIEnumerator(name: "TIM1_BRK_IRQn", value: 24)
!437 = !DIEnumerator(name: "TIM1_UP_IRQn", value: 25)
!438 = !DIEnumerator(name: "TIM1_TRG_COM_IRQn", value: 26)
!439 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!440 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!441 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!442 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!443 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!444 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!445 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!446 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!447 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!448 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!449 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!450 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!451 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!452 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!453 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!454 = !DIEnumerator(name: "USBWakeUp_IRQn", value: 42)
!455 = !{!456, !32, !469, !483, !491, !137}
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !68, line: 336, baseType: !458)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !68, line: 325, size: 288, elements: !459)
!459 = !{!460, !461, !462, !463, !464, !465, !466, !467, !468}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !458, file: !68, line: 327, baseType: !72, size: 32)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !458, file: !68, line: 328, baseType: !72, size: 32, offset: 32)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !458, file: !68, line: 329, baseType: !72, size: 32, offset: 64)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !458, file: !68, line: 330, baseType: !72, size: 32, offset: 96)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !458, file: !68, line: 331, baseType: !72, size: 32, offset: 128)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "AR", scope: !458, file: !68, line: 332, baseType: !72, size: 32, offset: 160)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !458, file: !68, line: 333, baseType: !72, size: 32, offset: 192)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !458, file: !68, line: 334, baseType: !72, size: 32, offset: 224)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR", scope: !458, file: !68, line: 335, baseType: !72, size: 32, offset: 256)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !68, line: 438, baseType: !471)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !68, line: 424, size: 320, elements: !472)
!472 = !{!473, !474, !475, !476, !477, !478, !479, !480, !481, !482}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !471, file: !68, line: 426, baseType: !72, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !471, file: !68, line: 427, baseType: !72, size: 32, offset: 32)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !471, file: !68, line: 428, baseType: !72, size: 32, offset: 64)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !471, file: !68, line: 429, baseType: !72, size: 32, offset: 96)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !471, file: !68, line: 430, baseType: !72, size: 32, offset: 128)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !471, file: !68, line: 431, baseType: !72, size: 32, offset: 160)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !471, file: !68, line: 432, baseType: !72, size: 32, offset: 192)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !471, file: !68, line: 433, baseType: !72, size: 32, offset: 224)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !471, file: !68, line: 434, baseType: !72, size: 32, offset: 256)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !471, file: !68, line: 435, baseType: !72, size: 32, offset: 288)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !338, line: 700, baseType: !485)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !338, line: 694, size: 128, elements: !486)
!486 = !{!487, !488, !489, !490}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !485, file: !338, line: 696, baseType: !72, size: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !485, file: !338, line: 697, baseType: !72, size: 32, offset: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !485, file: !338, line: 698, baseType: !72, size: 32, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !485, file: !338, line: 699, baseType: !342, size: 32, offset: 96)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 32)
!492 = !DIDerivedType(tag: DW_TAG_typedef, name: "DBGMCU_TypeDef", file: !68, line: 285, baseType: !493)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !68, line: 281, size: 64, elements: !494)
!494 = !{!495, !496}
!495 = !DIDerivedType(tag: DW_TAG_member, name: "IDCODE", scope: !493, file: !68, line: 283, baseType: !72, size: 32)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !493, file: !68, line: 284, baseType: !72, size: 32, offset: 32)
!497 = !{!383, !498, !501}
!498 = !DIGlobalVariableExpression(var: !499, expr: !DIExpression())
!499 = distinct !DIGlobalVariable(name: "uwTickFreq", scope: !385, file: !386, line: 81, type: !500, isLocal: false, isDefinition: true)
!500 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_TickFreqTypeDef", file: !389, line: 55, baseType: !388)
!501 = !DIGlobalVariableExpression(var: !502, expr: !DIExpression())
!502 = distinct !DIGlobalVariable(name: "uwTick", scope: !385, file: !386, line: 79, type: !72, isLocal: false, isDefinition: true)
!503 = !DIGlobalVariableExpression(var: !504, expr: !DIExpression())
!504 = distinct !DIGlobalVariable(name: "ucMaxSysCallPriority", scope: !505, file: !506, line: 164, type: !87, isLocal: true, isDefinition: true)
!505 = distinct !DICompileUnit(language: DW_LANG_C99, file: !506, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !507, globals: !511, splitDebugInlining: false, nameTableKind: None)
!506 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/port.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "3134ad912cd7b4d155d138db3d2b3f77")
!507 = !{!94, !508, !87, !32, !85, !509, !111}
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 32)
!509 = !DIDerivedType(tag: DW_TAG_typedef, name: "BaseType_t", file: !83, line: 56, baseType: !510)
!510 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!511 = !{!512, !503, !517, !519}
!512 = !DIGlobalVariableExpression(var: !513, expr: !DIExpression())
!513 = distinct !DIGlobalVariable(name: "pcInterruptPriorityRegisters", scope: !505, file: !506, line: 166, type: !514, isLocal: true, isDefinition: true)
!514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !515)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !350)
!517 = !DIGlobalVariableExpression(var: !518, expr: !DIExpression())
!518 = distinct !DIGlobalVariable(name: "ulMaxPRIGROUPValue", scope: !505, file: !506, line: 165, type: !32, isLocal: true, isDefinition: true)
!519 = !DIGlobalVariableExpression(var: !520, expr: !DIExpression())
!520 = distinct !DIGlobalVariable(name: "uxCriticalNesting", scope: !505, file: !506, line: 133, type: !82, isLocal: true, isDefinition: true)
!521 = !DIGlobalVariableExpression(var: !522, expr: !DIExpression())
!522 = distinct !DIGlobalVariable(name: "pxCurrentTCB", scope: !523, file: !524, line: 348, type: !618, isLocal: false, isDefinition: true)
!523 = distinct !DICompileUnit(language: DW_LANG_C99, file: !524, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !525, retainedTypes: !534, globals: !562, splitDebugInlining: false, nameTableKind: None)
!524 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "4c78d8e6db8748ab90199895767857f2")
!525 = !{!526}
!526 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !527, line: 81, baseType: !7, size: 32, elements: !528)
!527 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Middlewares/Third_Party/FreeRTOS/Source/include/task.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "d024d745131a960c5ab0e9fb4124ba87")
!528 = !{!529, !530, !531, !532, !533}
!529 = !DIEnumerator(name: "eNoAction", value: 0)
!530 = !DIEnumerator(name: "eSetBits", value: 1)
!531 = !DIEnumerator(name: "eIncrement", value: 2)
!532 = !DIEnumerator(name: "eSetValueWithOverwrite", value: 3)
!533 = !DIEnumerator(name: "eSetValueWithoutOverwrite", value: 4)
!534 = !{!104, !535, !136, !509, !111, !85, !82, !32, !87, !561}
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 32)
!536 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCB_t", file: !524, line: 343, baseType: !537)
!537 = !DIDerivedType(tag: DW_TAG_typedef, name: "tskTCB", file: !524, line: 339, baseType: !538)
!538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tskTaskControlBlock", file: !524, line: 269, size: 608, elements: !539)
!539 = !{!540, !543, !554, !555, !556, !557, !559, !560}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "pxTopOfStack", scope: !538, file: !524, line: 271, baseType: !541, size: 32)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 32)
!542 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !94)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "xStateListItem", scope: !538, file: !524, line: 277, baseType: !544, size: 160, offset: 32)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !545, line: 149, baseType: !546)
!545 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Middlewares/Third_Party/FreeRTOS/Source/include/list.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "da6acc022f4d62328dbc603eb4dcc0f5")
!546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !545, line: 139, size: 160, elements: !547)
!547 = !{!548, !549, !551, !552, !553}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !546, file: !545, line: 142, baseType: !111, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !546, file: !545, line: 143, baseType: !550, size: 32, offset: 32)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 32)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !546, file: !545, line: 144, baseType: !550, size: 32, offset: 64)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !546, file: !545, line: 145, baseType: !104, size: 32, offset: 96)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !546, file: !545, line: 146, baseType: !104, size: 32, offset: 128)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "xEventListItem", scope: !538, file: !524, line: 278, baseType: !544, size: 160, offset: 192)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "uxPriority", scope: !538, file: !524, line: 279, baseType: !82, size: 32, offset: 352)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "pxStack", scope: !538, file: !524, line: 280, baseType: !136, size: 32, offset: 384)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "pcTaskName", scope: !538, file: !524, line: 281, baseType: !558, size: 128, offset: 416)
!558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 128, elements: !122)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "ulNotifiedValue", scope: !538, file: !524, line: 325, baseType: !72, size: 32, offset: 544)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "ucNotifyState", scope: !538, file: !524, line: 326, baseType: !350, size: 8, offset: 576)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskHandle_t", file: !527, line: 61, baseType: !104)
!562 = !{!521, !563, !579, !581, !583, !585, !587, !590, !593, !595, !597, !599, !601, !606, !608, !610, !614, !616}
!563 = !DIGlobalVariableExpression(var: !564, expr: !DIExpression())
!564 = distinct !DIGlobalVariable(name: "xDelayedTaskList1", scope: !523, file: !524, line: 352, type: !565, isLocal: true, isDefinition: true)
!565 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !545, line: 170, baseType: !566)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !545, line: 163, size: 160, elements: !567)
!567 = !{!568, !570, !572}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !566, file: !545, line: 166, baseType: !569, size: 32)
!569 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !82)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !566, file: !545, line: 167, baseType: !571, size: 32, offset: 32)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !566, file: !545, line: 168, baseType: !573, size: 96, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !545, line: 158, baseType: !574)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !545, line: 151, size: 96, elements: !575)
!575 = !{!576, !577, !578}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !574, file: !545, line: 154, baseType: !111, size: 32)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !574, file: !545, line: 155, baseType: !550, size: 32, offset: 32)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !574, file: !545, line: 156, baseType: !550, size: 32, offset: 64)
!579 = !DIGlobalVariableExpression(var: !580, expr: !DIExpression())
!580 = distinct !DIGlobalVariable(name: "xDelayedTaskList2", scope: !523, file: !524, line: 353, type: !565, isLocal: true, isDefinition: true)
!581 = !DIGlobalVariableExpression(var: !582, expr: !DIExpression())
!582 = distinct !DIGlobalVariable(name: "uxTaskNumber", scope: !523, file: !524, line: 379, type: !82, isLocal: true, isDefinition: true)
!583 = !DIGlobalVariableExpression(var: !584, expr: !DIExpression())
!584 = distinct !DIGlobalVariable(name: "uxSchedulerSuspended", scope: !523, file: !524, line: 391, type: !569, isLocal: true, isDefinition: true)
!585 = !DIGlobalVariableExpression(var: !586, expr: !DIExpression())
!586 = distinct !DIGlobalVariable(name: "xIdleTaskHandle", scope: !523, file: !524, line: 381, type: !561, isLocal: true, isDefinition: true)
!587 = !DIGlobalVariableExpression(var: !588, expr: !DIExpression())
!588 = distinct !DIGlobalVariable(name: "xNextTaskUnblockTime", scope: !523, file: !524, line: 380, type: !589, isLocal: true, isDefinition: true)
!589 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !111)
!590 = !DIGlobalVariableExpression(var: !591, expr: !DIExpression())
!591 = distinct !DIGlobalVariable(name: "xSchedulerRunning", scope: !523, file: !524, line: 375, type: !592, isLocal: true, isDefinition: true)
!592 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !509)
!593 = !DIGlobalVariableExpression(var: !594, expr: !DIExpression())
!594 = distinct !DIGlobalVariable(name: "xTickCount", scope: !523, file: !524, line: 373, type: !589, isLocal: true, isDefinition: true)
!595 = !DIGlobalVariableExpression(var: !596, expr: !DIExpression())
!596 = distinct !DIGlobalVariable(name: "uxCurrentNumberOfTasks", scope: !523, file: !524, line: 372, type: !569, isLocal: true, isDefinition: true)
!597 = !DIGlobalVariableExpression(var: !598, expr: !DIExpression())
!598 = distinct !DIGlobalVariable(name: "xPendingReadyList", scope: !523, file: !524, line: 356, type: !565, isLocal: true, isDefinition: true)
!599 = !DIGlobalVariableExpression(var: !600, expr: !DIExpression())
!600 = distinct !DIGlobalVariable(name: "uxTopReadyPriority", scope: !523, file: !524, line: 374, type: !569, isLocal: true, isDefinition: true)
!601 = !DIGlobalVariableExpression(var: !602, expr: !DIExpression())
!602 = distinct !DIGlobalVariable(name: "pxReadyTasksLists", scope: !523, file: !524, line: 351, type: !603, isLocal: true, isDefinition: true)
!603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !565, size: 1120, elements: !604)
!604 = !{!605}
!605 = !DISubrange(count: 7)
!606 = !DIGlobalVariableExpression(var: !607, expr: !DIExpression())
!607 = distinct !DIGlobalVariable(name: "xYieldPending", scope: !523, file: !524, line: 377, type: !592, isLocal: true, isDefinition: true)
!608 = !DIGlobalVariableExpression(var: !609, expr: !DIExpression())
!609 = distinct !DIGlobalVariable(name: "uxPendedTicks", scope: !523, file: !524, line: 376, type: !569, isLocal: true, isDefinition: true)
!610 = !DIGlobalVariableExpression(var: !611, expr: !DIExpression())
!611 = distinct !DIGlobalVariable(name: "pxDelayedTaskList", scope: !523, file: !524, line: 354, type: !612, isLocal: true, isDefinition: true)
!612 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !613)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 32)
!614 = !DIGlobalVariableExpression(var: !615, expr: !DIExpression())
!615 = distinct !DIGlobalVariable(name: "pxOverflowDelayedTaskList", scope: !523, file: !524, line: 355, type: !612, isLocal: true, isDefinition: true)
!616 = !DIGlobalVariableExpression(var: !617, expr: !DIExpression())
!617 = distinct !DIGlobalVariable(name: "xNumOfOverflows", scope: !523, file: !524, line: 378, type: !592, isLocal: true, isDefinition: true)
!618 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !535)
!619 = !DIGlobalVariableExpression(var: !620, expr: !DIExpression())
!620 = distinct !DIGlobalVariable(name: "instance", linkageName: "_ZN6Cicada9Stm32Uart8instanceE", scope: !621, file: !622, line: 32, type: !726, isLocal: false, isDefinition: true, declaration: !725)
!621 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !622, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !623, retainedTypes: !640, globals: !848, imports: !849, splitDebugInlining: false, nameTableKind: None)
!622 = !DIFile(filename: "../cicada/platform/stm32f1/stm32uart.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "3cfb26aba75e1df83974cb6e4fff6457")
!623 = !{!624, !5, !625, !629}
!624 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, file: !68, line: 69, baseType: !24, size: 32, elements: !402, identifier: "_ZTS9IRQn_Type")
!625 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 52, baseType: !7, size: 32, elements: !626, identifier: "_ZTS15HAL_LockTypeDef")
!626 = !{!627, !628}
!627 = !DIEnumerator(name: "HAL_UNLOCKED", value: 0, isUnsigned: true)
!628 = !DIEnumerator(name: "HAL_LOCKED", value: 1, isUnsigned: true)
!629 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, file: !630, line: 117, baseType: !7, size: 32, elements: !631, identifier: "_ZTS21HAL_UART_StateTypeDef")
!630 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "74469f61b271b78e5ff5784cb5eb97d1")
!631 = !{!632, !633, !634, !635, !636, !637, !638, !639}
!632 = !DIEnumerator(name: "HAL_UART_STATE_RESET", value: 0, isUnsigned: true)
!633 = !DIEnumerator(name: "HAL_UART_STATE_READY", value: 32, isUnsigned: true)
!634 = !DIEnumerator(name: "HAL_UART_STATE_BUSY", value: 36, isUnsigned: true)
!635 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_TX", value: 33, isUnsigned: true)
!636 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_RX", value: 34, isUnsigned: true)
!637 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_TX_RX", value: 35, isUnsigned: true)
!638 = !DIEnumerator(name: "HAL_UART_STATE_TIMEOUT", value: 160, isUnsigned: true)
!639 = !DIEnumerator(name: "HAL_UART_STATE_ERROR", value: 224, isUnsigned: true)
!640 = !{!32, !66, !641, !651, !79, !87, !26, !179, !665, !695, !720}
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 32)
!642 = !DIDerivedType(tag: DW_TAG_typedef, name: "AFIO_TypeDef", file: !68, line: 380, baseType: !643)
!643 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !68, line: 373, size: 256, flags: DIFlagTypePassByValue, elements: !644, identifier: "_ZTS12AFIO_TypeDef")
!644 = !{!645, !646, !647, !649, !650}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "EVCR", scope: !643, file: !68, line: 375, baseType: !72, size: 32)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "MAPR", scope: !643, file: !68, line: 376, baseType: !72, size: 32, offset: 32)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !643, file: !68, line: 377, baseType: !648, size: 128, offset: 64)
!648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !72, size: 128, elements: !114)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !643, file: !68, line: 378, baseType: !32, size: 32, offset: 192)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "MAPR2", scope: !643, file: !68, line: 379, baseType: !72, size: 32, offset: 224)
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 32)
!652 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !68, line: 438, baseType: !653)
!653 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !68, line: 424, size: 320, flags: DIFlagTypePassByValue, elements: !654, identifier: "_ZTS11RCC_TypeDef")
!654 = !{!655, !656, !657, !658, !659, !660, !661, !662, !663, !664}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !653, file: !68, line: 426, baseType: !72, size: 32)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !653, file: !68, line: 427, baseType: !72, size: 32, offset: 32)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !653, file: !68, line: 428, baseType: !72, size: 32, offset: 64)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !653, file: !68, line: 429, baseType: !72, size: 32, offset: 96)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !653, file: !68, line: 430, baseType: !72, size: 32, offset: 128)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !653, file: !68, line: 431, baseType: !72, size: 32, offset: 160)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !653, file: !68, line: 432, baseType: !72, size: 32, offset: 192)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !653, file: !68, line: 433, baseType: !72, size: 32, offset: 224)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !653, file: !68, line: 434, baseType: !72, size: 32, offset: 256)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !653, file: !68, line: 435, baseType: !72, size: 32, offset: 288)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 32)
!666 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !338, line: 355, baseType: !667)
!667 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !338, line: 340, size: 28704, flags: DIFlagTypePassByValue, elements: !668, identifier: "_ZTS9NVIC_Type")
!668 = !{!669, !671, !675, !676, !677, !678, !679, !680, !681, !682, !686, !690, !694}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !667, file: !338, line: 342, baseType: !670, size: 256)
!670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !72, size: 256, elements: !380)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !667, file: !338, line: 343, baseType: !672, size: 768, offset: 256)
!672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 768, elements: !673)
!673 = !{!674}
!674 = !DISubrange(count: 24)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !667, file: !338, line: 344, baseType: !670, size: 256, offset: 1024)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !667, file: !338, line: 345, baseType: !672, size: 768, offset: 1280)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !667, file: !338, line: 346, baseType: !670, size: 256, offset: 2048)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !667, file: !338, line: 347, baseType: !672, size: 768, offset: 2304)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !667, file: !338, line: 348, baseType: !670, size: 256, offset: 3072)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !667, file: !338, line: 349, baseType: !672, size: 768, offset: 3328)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !667, file: !338, line: 350, baseType: !670, size: 256, offset: 4096)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !667, file: !338, line: 351, baseType: !683, size: 1792, offset: 4352)
!683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 1792, elements: !684)
!684 = !{!685}
!685 = !DISubrange(count: 56)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !667, file: !338, line: 352, baseType: !687, size: 1920, offset: 6144)
!687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, size: 1920, elements: !688)
!688 = !{!689}
!689 = !DISubrange(count: 240)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !667, file: !338, line: 353, baseType: !691, size: 20608, offset: 8064)
!691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 20608, elements: !692)
!692 = !{!693}
!693 = !DISubrange(count: 644)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !667, file: !338, line: 354, baseType: !72, size: 32, offset: 28672)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 32)
!696 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !338, line: 397, baseType: !697)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !338, line: 374, size: 1120, flags: DIFlagTypePassByValue, elements: !698, identifier: "_ZTS8SCB_Type")
!698 = !{!699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !697, file: !338, line: 376, baseType: !342, size: 32)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !697, file: !338, line: 377, baseType: !72, size: 32, offset: 32)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !697, file: !338, line: 378, baseType: !72, size: 32, offset: 64)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !697, file: !338, line: 379, baseType: !72, size: 32, offset: 96)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !697, file: !338, line: 380, baseType: !72, size: 32, offset: 128)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !697, file: !338, line: 381, baseType: !72, size: 32, offset: 160)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !697, file: !338, line: 382, baseType: !349, size: 96, offset: 192)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !697, file: !338, line: 383, baseType: !72, size: 32, offset: 288)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !697, file: !338, line: 384, baseType: !72, size: 32, offset: 320)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !697, file: !338, line: 385, baseType: !72, size: 32, offset: 352)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !697, file: !338, line: 386, baseType: !72, size: 32, offset: 384)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !697, file: !338, line: 387, baseType: !72, size: 32, offset: 416)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !697, file: !338, line: 388, baseType: !72, size: 32, offset: 448)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !697, file: !338, line: 389, baseType: !72, size: 32, offset: 480)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !697, file: !338, line: 390, baseType: !361, size: 64, offset: 512)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !697, file: !338, line: 391, baseType: !342, size: 32, offset: 576)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !697, file: !338, line: 392, baseType: !342, size: 32, offset: 608)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !697, file: !338, line: 393, baseType: !365, size: 128, offset: 640)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !697, file: !338, line: 394, baseType: !367, size: 160, offset: 768)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !697, file: !338, line: 395, baseType: !371, size: 160, offset: 928)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !697, file: !338, line: 396, baseType: !72, size: 32, offset: 1088)
!720 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Stm32Uart", scope: !17, file: !155, line: 51, size: 1536, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !721, vtableHolder: !824)
!721 = !{!722, !725, !728, !729, !765, !766, !767, !768, !770, !776, !779, !782, !785, !788, !791, !792, !795, !796, !803, !807, !808, !809, !812, !813, !817, !821}
!722 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !720, baseType: !723, flags: DIFlagPublic, extraData: i32 0)
!723 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "BufferedSerial", scope: !17, file: !724, line: 42, size: 832, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada14BufferedSerialE")
!724 = !DIFile(filename: "../cicada/bufferedserial.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "b9c9871d742db1af5ee8abb5df52fc59")
!725 = !DIDerivedType(tag: DW_TAG_member, name: "instance", scope: !720, file: !155, line: 120, baseType: !726, flags: DIFlagStaticMember)
!726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !727, size: 128, elements: !114)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 32)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !720, file: !155, line: 122, baseType: !87, size: 8, offset: 832)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "_handle", scope: !720, file: !155, line: 123, baseType: !730, size: 576, offset: 864)
!730 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_HandleTypeDef", file: !630, line: 189, baseType: !731)
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__UART_HandleTypeDef", file: !630, line: 141, size: 576, flags: DIFlagTypePassByValue, elements: !732, identifier: "_ZTS20__UART_HandleTypeDef")
!732 = !{!733, !734, !745, !746, !747, !749, !750, !751, !752, !757, !758, !760, !763, !764}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "Instance", scope: !731, file: !630, line: 143, baseType: !66, size: 32)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "Init", scope: !731, file: !630, line: 145, baseType: !735, size: 224, offset: 32)
!735 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_InitTypeDef", file: !630, line: 76, baseType: !736)
!736 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !630, line: 47, size: 224, flags: DIFlagTypePassByValue, elements: !737, identifier: "_ZTS16UART_InitTypeDef")
!737 = !{!738, !739, !740, !741, !742, !743, !744}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "BaudRate", scope: !736, file: !630, line: 49, baseType: !32, size: 32)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "WordLength", scope: !736, file: !630, line: 54, baseType: !32, size: 32, offset: 32)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "StopBits", scope: !736, file: !630, line: 57, baseType: !32, size: 32, offset: 64)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "Parity", scope: !736, file: !630, line: 60, baseType: !32, size: 32, offset: 96)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !736, file: !630, line: 67, baseType: !32, size: 32, offset: 128)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "HwFlowCtl", scope: !736, file: !630, line: 70, baseType: !32, size: 32, offset: 160)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "OverSampling", scope: !736, file: !630, line: 73, baseType: !32, size: 32, offset: 192)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "pTxBuffPtr", scope: !731, file: !630, line: 147, baseType: !86, size: 32, offset: 256)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "TxXferSize", scope: !731, file: !630, line: 149, baseType: !26, size: 16, offset: 288)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "TxXferCount", scope: !731, file: !630, line: 151, baseType: !748, size: 16, offset: 304)
!748 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !26)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "pRxBuffPtr", scope: !731, file: !630, line: 153, baseType: !86, size: 32, offset: 320)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "RxXferSize", scope: !731, file: !630, line: 155, baseType: !26, size: 16, offset: 352)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "RxXferCount", scope: !731, file: !630, line: 157, baseType: !748, size: 16, offset: 368)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "hdmatx", scope: !731, file: !630, line: 159, baseType: !753, size: 32, offset: 384)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 32)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_HandleTypeDef", file: !755, line: 137, baseType: !756)
!755 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "dd8e7645a79a80f8166404bb078b3d4e")
!756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__DMA_HandleTypeDef", file: !755, line: 111, size: 576, flags: DIFlagFwdDecl, identifier: "_ZTS19__DMA_HandleTypeDef")
!757 = !DIDerivedType(tag: DW_TAG_member, name: "hdmarx", scope: !731, file: !630, line: 161, baseType: !753, size: 32, offset: 416)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "Lock", scope: !731, file: !630, line: 163, baseType: !759, size: 32, offset: 448)
!759 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_LockTypeDef", file: !6, line: 56, baseType: !625)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "gState", scope: !731, file: !630, line: 165, baseType: !761, size: 32, offset: 480)
!761 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !762)
!762 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_UART_StateTypeDef", file: !630, line: 136, baseType: !629)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "RxState", scope: !731, file: !630, line: 169, baseType: !761, size: 32, offset: 512)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "ErrorCode", scope: !731, file: !630, line: 172, baseType: !72, size: 32, offset: 544)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "_uartPort", scope: !720, file: !155, line: 124, baseType: !79, size: 32, offset: 1440)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "_txPin", scope: !720, file: !155, line: 125, baseType: !26, size: 16, offset: 1472)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "_rxPin", scope: !720, file: !155, line: 126, baseType: !26, size: 16, offset: 1488)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "_uartInterruptInstance", scope: !720, file: !155, line: 127, baseType: !769, size: 32, offset: 1504)
!769 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !68, line: 126, baseType: !624)
!770 = !DISubprogram(name: "Stm32Uart", scope: !720, file: !155, line: 66, type: !771, scopeLine: 66, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!771 = !DISubroutineType(types: !772)
!772 = !{null, !773, !261, !261, !774, !66, !79, !26, !26}
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!774 = !DIDerivedType(tag: DW_TAG_typedef, name: "Size", scope: !17, file: !775, line: 32, baseType: !216)
!775 = !DIFile(filename: "../cicada/types.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "6dfa4c2c933d4c520c13fa7638528c51")
!776 = !DISubprogram(name: "Stm32Uart", scope: !720, file: !155, line: 83, type: !777, scopeLine: 83, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!777 = !DISubroutineType(types: !778)
!778 = !{null, !773, !261, !261, !774, !774, !66, !79, !26, !26}
!779 = !DISubprogram(name: "~Stm32Uart", scope: !720, file: !155, line: 86, type: !780, scopeLine: 86, containingType: !720, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!780 = !DISubroutineType(types: !781)
!781 = !{null, !773}
!782 = !DISubprogram(name: "getInstance", linkageName: "_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef", scope: !720, file: !155, line: 88, type: !783, scopeLine: 88, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!783 = !DISubroutineType(types: !784)
!784 = !{!727, !66}
!785 = !DISubprogram(name: "open", linkageName: "_ZN6Cicada9Stm32Uart4openEv", scope: !720, file: !155, line: 93, type: !786, scopeLine: 93, containingType: !720, virtualIndex: 15, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!786 = !DISubroutineType(types: !787)
!787 = !{!35, !773}
!788 = !DISubprogram(name: "open", linkageName: "_ZN6Cicada9Stm32Uart4openEh", scope: !720, file: !155, line: 100, type: !789, scopeLine: 100, containingType: !720, virtualIndex: 16, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!789 = !DISubroutineType(types: !790)
!790 = !{!35, !773, !87}
!791 = !DISubprogram(name: "isOpen", linkageName: "_ZN6Cicada9Stm32Uart6isOpenEv", scope: !720, file: !155, line: 102, type: !786, scopeLine: 102, containingType: !720, virtualIndex: 17, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!792 = !DISubprogram(name: "setSerialConfig", linkageName: "_ZN6Cicada9Stm32Uart15setSerialConfigEjh", scope: !720, file: !155, line: 103, type: !793, scopeLine: 103, containingType: !720, virtualIndex: 18, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!793 = !DISubroutineType(types: !794)
!794 = !{!35, !773, !32, !87}
!795 = !DISubprogram(name: "close", linkageName: "_ZN6Cicada9Stm32Uart5closeEv", scope: !720, file: !155, line: 104, type: !780, scopeLine: 104, containingType: !720, virtualIndex: 19, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!796 = !DISubprogram(name: "portName", linkageName: "_ZNK6Cicada9Stm32Uart8portNameEv", scope: !720, file: !155, line: 105, type: !797, scopeLine: 105, containingType: !720, virtualIndex: 20, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!797 = !DISubroutineType(types: !798)
!798 = !{!799, !801}
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 32)
!800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !164)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !720)
!803 = !DISubprogram(name: "rawRead", linkageName: "_ZN6Cicada9Stm32Uart7rawReadERh", scope: !720, file: !155, line: 106, type: !804, scopeLine: 106, containingType: !720, virtualIndex: 21, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!804 = !DISubroutineType(types: !805)
!805 = !{!35, !773, !806}
!806 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !87, size: 32)
!807 = !DISubprogram(name: "rawWrite", linkageName: "_ZN6Cicada9Stm32Uart8rawWriteEh", scope: !720, file: !155, line: 107, type: !789, scopeLine: 107, containingType: !720, virtualIndex: 22, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!808 = !DISubprogram(name: "startTransmit", linkageName: "_ZN6Cicada9Stm32Uart13startTransmitEv", scope: !720, file: !155, line: 108, type: !780, scopeLine: 108, containingType: !720, virtualIndex: 23, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!809 = !DISubprogram(name: "writeBufferProcessed", linkageName: "_ZNK6Cicada9Stm32Uart20writeBufferProcessedEv", scope: !720, file: !155, line: 109, type: !810, scopeLine: 109, containingType: !720, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!810 = !DISubroutineType(types: !811)
!811 = !{!35, !801}
!812 = !DISubprogram(name: "handleInterrupt", linkageName: "_ZN6Cicada9Stm32Uart15handleInterruptEv", scope: !720, file: !155, line: 111, type: !780, scopeLine: 111, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!813 = !DISubprogram(name: "Stm32Uart", scope: !720, file: !155, line: 115, type: !814, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!814 = !DISubroutineType(types: !815)
!815 = !{null, !773, !816}
!816 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !802, size: 32)
!817 = !DISubprogram(name: "operator=", linkageName: "_ZN6Cicada9Stm32UartaSERKS0_", scope: !720, file: !155, line: 116, type: !818, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!818 = !DISubroutineType(types: !819)
!819 = !{!820, !773, !816}
!820 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !720, size: 32)
!821 = !DISubprogram(name: "init", linkageName: "_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef", scope: !720, file: !155, line: 118, type: !822, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!822 = !DISubroutineType(types: !823)
!823 = !{null, !773, !66}
!824 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "ICommDevice", scope: !17, file: !825, line: 43, size: 32, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !826, vtableHolder: !824, identifier: "_ZTSN6Cicada11ICommDeviceE")
!825 = !DIFile(filename: "../cicada/icommdevice.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e83d2959922f5020d303a6315b56c6e9")
!826 = !{!827, !828, !832, !837, !838, !841, !844}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$ICommDevice", scope: !825, file: !825, baseType: !20, size: 32, flags: DIFlagArtificial)
!828 = !DISubprogram(name: "~ICommDevice", scope: !824, file: !825, line: 46, type: !829, scopeLine: 46, containingType: !824, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!829 = !DISubroutineType(types: !830)
!830 = !{null, !831}
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!832 = !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada11ICommDevice14bytesAvailableEv", scope: !824, file: !825, line: 52, type: !833, scopeLine: 52, containingType: !824, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!833 = !DISubroutineType(types: !834)
!834 = !{!774, !835}
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !824)
!837 = !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada11ICommDevice14spaceAvailableEv", scope: !824, file: !825, line: 60, type: !833, scopeLine: 60, containingType: !824, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!838 = !DISubprogram(name: "writeBufferProcessed", linkageName: "_ZNK6Cicada11ICommDevice20writeBufferProcessedEv", scope: !824, file: !825, line: 71, type: !839, scopeLine: 71, containingType: !824, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!839 = !DISubroutineType(types: !840)
!840 = !{!35, !835}
!841 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada11ICommDevice4readEPhy", scope: !824, file: !825, line: 85, type: !842, scopeLine: 85, containingType: !824, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!842 = !DISubroutineType(types: !843)
!843 = !{!774, !831, !86, !774}
!844 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada11ICommDevice5writeEPKhy", scope: !824, file: !825, line: 98, type: !845, scopeLine: 98, containingType: !824, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!845 = !DISubroutineType(types: !846)
!846 = !{!774, !831, !847, !774}
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 32)
!848 = !{!619}
!849 = !{!168, !174, !178, !181, !185, !188, !190, !192, !194, !197, !200, !203, !206, !209, !212, !213, !214, !215, !219, !221, !223, !225, !227, !230, !233, !236, !239, !242, !850}
!850 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !621, entity: !17, file: !622, line: 28)
!851 = !DIGlobalVariableExpression(var: !852, expr: !DIExpression())
!852 = distinct !DIGlobalVariable(name: "_okStr", linkageName: "_ZN6Cicada12ATCommDevice6_okStrE", scope: !853, file: !854, line: 34, type: !799, isLocal: false, isDefinition: true, declaration: !937)
!853 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !854, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !855, globals: !974, imports: !979, splitDebugInlining: false, nameTableKind: None)
!854 = !DIFile(filename: "../cicada/commdevices/atcommdevice.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "2c00a0b2c5bf95afd2d356500bb68c03")
!855 = !{!847, !24, !86, !856}
!856 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "ATCommDevice", scope: !17, file: !857, line: 39, size: 1856, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !858, vtableHolder: !824)
!857 = !DIFile(filename: "../cicada/commdevices/atcommdevice.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "533b96ced66a81acd2797c3eeacc1c13")
!858 = !{!859, !862, !927, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !944, !947, !950, !953, !956, !959, !962, !963, !966, !969, !970, !971}
!859 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !856, baseType: !860, flags: DIFlagPublic, extraData: i32 0)
!860 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "IPCommDevice", scope: !17, file: !861, line: 42, size: 1152, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada12IPCommDeviceE")
!861 = !DIFile(filename: "../cicada/commdevices/ipcommdevice.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "5231d389687db9c7b4a2dc5416c977bf")
!862 = !DIDerivedType(tag: DW_TAG_member, name: "_serial", scope: !856, file: !857, line: 83, baseType: !863, size: 32, offset: 1120, flags: DIFlagProtected)
!863 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !864, size: 32)
!864 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "IBufferedSerial", scope: !17, file: !865, line: 39, size: 64, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !866, vtableHolder: !824, identifier: "_ZTSN6Cicada15IBufferedSerialE")
!865 = !DIFile(filename: "../cicada/ibufferedserial.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "0e5db7c0b86651abb573e233dc791166")
!866 = !{!867, !868, !897, !901, !904, !907, !910, !913, !916, !921, !922, !923, !926}
!867 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !864, baseType: !824, flags: DIFlagPublic, extraData: i32 0)
!868 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !864, baseType: !869, offset: 32, flags: DIFlagPublic, extraData: i32 0)
!869 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "ISerial", scope: !17, file: !870, line: 37, size: 32, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !871, vtableHolder: !869, identifier: "_ZTSN6Cicada7ISerialE")
!870 = !DIFile(filename: "../cicada/iserial.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e3dc53a2acd15a8e90c357a32168f40f")
!871 = !{!872, !873, !877, !880, !881, !884, !885, !890, !893, !896}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$ISerial", scope: !870, file: !870, baseType: !20, size: 32, flags: DIFlagArtificial)
!873 = !DISubprogram(name: "~ISerial", scope: !869, file: !870, line: 40, type: !874, scopeLine: 40, containingType: !869, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!874 = !DISubroutineType(types: !875)
!875 = !{null, !876}
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!877 = !DISubprogram(name: "open", linkageName: "_ZN6Cicada7ISerial4openEv", scope: !869, file: !870, line: 46, type: !878, scopeLine: 46, containingType: !869, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!878 = !DISubroutineType(types: !879)
!879 = !{!35, !876}
!880 = !DISubprogram(name: "isOpen", linkageName: "_ZN6Cicada7ISerial6isOpenEv", scope: !869, file: !870, line: 52, type: !878, scopeLine: 52, containingType: !869, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!881 = !DISubprogram(name: "setSerialConfig", linkageName: "_ZN6Cicada7ISerial15setSerialConfigEjh", scope: !869, file: !870, line: 60, type: !882, scopeLine: 60, containingType: !869, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!882 = !DISubroutineType(types: !883)
!883 = !{!35, !876, !32, !87}
!884 = !DISubprogram(name: "close", linkageName: "_ZN6Cicada7ISerial5closeEv", scope: !869, file: !870, line: 65, type: !874, scopeLine: 65, containingType: !869, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!885 = !DISubprogram(name: "portName", linkageName: "_ZNK6Cicada7ISerial8portNameEv", scope: !869, file: !870, line: 71, type: !886, scopeLine: 71, containingType: !869, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!886 = !DISubroutineType(types: !887)
!887 = !{!799, !888}
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !869)
!890 = !DISubprogram(name: "rawRead", linkageName: "_ZN6Cicada7ISerial7rawReadERh", scope: !869, file: !870, line: 80, type: !891, scopeLine: 80, containingType: !869, virtualIndex: 7, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!891 = !DISubroutineType(types: !892)
!892 = !{!35, !876, !806}
!893 = !DISubprogram(name: "rawWrite", linkageName: "_ZN6Cicada7ISerial8rawWriteEh", scope: !869, file: !870, line: 87, type: !894, scopeLine: 87, containingType: !869, virtualIndex: 8, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!894 = !DISubroutineType(types: !895)
!895 = !{!35, !876, !87}
!896 = !DISubprogram(name: "startTransmit", linkageName: "_ZN6Cicada7ISerial13startTransmitEv", scope: !869, file: !870, line: 93, type: !874, scopeLine: 93, containingType: !869, virtualIndex: 9, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!897 = !DISubprogram(name: "~IBufferedSerial", scope: !864, file: !865, line: 42, type: !898, scopeLine: 42, containingType: !864, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!898 = !DISubroutineType(types: !899)
!899 = !{null, !900}
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!901 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada15IBufferedSerial4readEPhy", scope: !864, file: !865, line: 44, type: !902, scopeLine: 44, containingType: !864, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!902 = !DISubroutineType(types: !903)
!903 = !{!774, !900, !86, !774}
!904 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada15IBufferedSerial5writeEPKhy", scope: !864, file: !865, line: 45, type: !905, scopeLine: 45, containingType: !864, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!905 = !DISubroutineType(types: !906)
!906 = !{!774, !900, !847, !774}
!907 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada15IBufferedSerial4readEv", scope: !864, file: !865, line: 51, type: !908, scopeLine: 51, containingType: !864, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!908 = !DISubroutineType(types: !909)
!909 = !{!87, !900}
!910 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada15IBufferedSerial5writeEPKh", scope: !864, file: !865, line: 62, type: !911, scopeLine: 62, containingType: !864, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!911 = !DISubroutineType(types: !912)
!912 = !{!774, !900, !847}
!913 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada15IBufferedSerial5writeEh", scope: !864, file: !865, line: 68, type: !914, scopeLine: 68, containingType: !864, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!914 = !DISubroutineType(types: !915)
!915 = !{null, !900, !87}
!916 = !DISubprogram(name: "canReadLine", linkageName: "_ZNK6Cicada15IBufferedSerial11canReadLineEv", scope: !864, file: !865, line: 73, type: !917, scopeLine: 73, containingType: !864, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!917 = !DISubroutineType(types: !918)
!918 = !{!35, !919}
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!920 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !864)
!921 = !DISubprogram(name: "readLine", linkageName: "_ZN6Cicada15IBufferedSerial8readLineEPhy", scope: !864, file: !865, line: 85, type: !902, scopeLine: 85, containingType: !864, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!922 = !DISubprogram(name: "flushReceiveBuffers", linkageName: "_ZN6Cicada15IBufferedSerial19flushReceiveBuffersEv", scope: !864, file: !865, line: 90, type: !898, scopeLine: 90, containingType: !864, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!923 = !DISubprogram(name: "readBufferSize", linkageName: "_ZN6Cicada15IBufferedSerial14readBufferSizeEv", scope: !864, file: !865, line: 95, type: !924, scopeLine: 95, containingType: !864, virtualIndex: 13, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!924 = !DISubroutineType(types: !925)
!925 = !{!774, !900}
!926 = !DISubprogram(name: "writeBufferSize", linkageName: "_ZN6Cicada15IBufferedSerial15writeBufferSizeEv", scope: !864, file: !865, line: 96, type: !924, scopeLine: 96, containingType: !864, virtualIndex: 14, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "_lineBuffer", scope: !856, file: !857, line: 85, baseType: !928, size: 488, offset: 1152, flags: DIFlagProtected)
!928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 488, elements: !929)
!929 = !{!930}
!930 = !DISubrange(count: 61)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "_lbFill", scope: !856, file: !857, line: 86, baseType: !87, size: 8, offset: 1640, flags: DIFlagProtected)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "_sendState", scope: !856, file: !857, line: 88, baseType: !170, size: 8, offset: 1648, flags: DIFlagProtected)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "_replyState", scope: !856, file: !857, line: 89, baseType: !170, size: 8, offset: 1656, flags: DIFlagProtected)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "_bytesToWrite", scope: !856, file: !857, line: 90, baseType: !774, size: 64, offset: 1664, flags: DIFlagProtected)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "_bytesToReceive", scope: !856, file: !857, line: 91, baseType: !774, size: 64, offset: 1728, flags: DIFlagProtected)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "_bytesToRead", scope: !856, file: !857, line: 92, baseType: !774, size: 64, offset: 1792, flags: DIFlagProtected)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "_okStr", scope: !856, file: !857, line: 94, baseType: !799, flags: DIFlagProtected | DIFlagStaticMember)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "_lineEndStr", scope: !856, file: !857, line: 95, baseType: !799, flags: DIFlagProtected | DIFlagStaticMember)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "_quoteEndStr", scope: !856, file: !857, line: 96, baseType: !799, flags: DIFlagProtected | DIFlagStaticMember)
!940 = !DISubprogram(name: "ATCommDevice", scope: !856, file: !857, line: 42, type: !941, scopeLine: 42, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!941 = !DISubroutineType(types: !942)
!942 = !{null, !943, !863, !86, !86, !774}
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!944 = !DISubprogram(name: "ATCommDevice", scope: !856, file: !857, line: 44, type: !945, scopeLine: 44, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!945 = !DISubroutineType(types: !946)
!946 = !{null, !943, !863, !86, !86, !774, !774}
!947 = !DISubprogram(name: "~ATCommDevice", scope: !856, file: !857, line: 46, type: !948, scopeLine: 46, containingType: !856, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!948 = !DISubroutineType(types: !949)
!949 = !{null, !943}
!950 = !DISubprogram(name: "serialWrite", linkageName: "_ZN6Cicada12ATCommDevice11serialWriteEPc", scope: !856, file: !857, line: 59, type: !951, scopeLine: 59, containingType: !856, virtualIndex: 13, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!951 = !DISubroutineType(types: !952)
!952 = !{!774, !943, !261}
!953 = !DISubprogram(name: "serialRead", linkageName: "_ZN6Cicada12ATCommDevice10serialReadEPcy", scope: !856, file: !857, line: 71, type: !954, scopeLine: 71, containingType: !856, virtualIndex: 14, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!954 = !DISubroutineType(types: !955)
!955 = !{!774, !943, !261, !774}
!956 = !DISubprogram(name: "logStates", linkageName: "_ZN6Cicada12ATCommDevice9logStatesEaa", scope: !856, file: !857, line: 74, type: !957, scopeLine: 74, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!957 = !DISubroutineType(types: !958)
!958 = !{null, !943, !170, !170}
!959 = !DISubprogram(name: "handleDisconnect", linkageName: "_ZN6Cicada12ATCommDevice16handleDisconnectEa", scope: !856, file: !857, line: 75, type: !960, scopeLine: 75, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!960 = !DISubroutineType(types: !961)
!961 = !{!35, !943, !170}
!962 = !DISubprogram(name: "handleConnect", linkageName: "_ZN6Cicada12ATCommDevice13handleConnectEa", scope: !856, file: !857, line: 76, type: !960, scopeLine: 76, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!963 = !DISubprogram(name: "sendCommand", linkageName: "_ZN6Cicada12ATCommDevice11sendCommandEPKc", scope: !856, file: !857, line: 77, type: !964, scopeLine: 77, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!964 = !DISubroutineType(types: !965)
!965 = !{null, !943, !799}
!966 = !DISubprogram(name: "prepareSending", linkageName: "_ZN6Cicada12ATCommDevice14prepareSendingEb", scope: !856, file: !857, line: 78, type: !967, scopeLine: 78, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!967 = !DISubroutineType(types: !968)
!968 = !{!35, !943, !35}
!969 = !DISubprogram(name: "sendData", linkageName: "_ZN6Cicada12ATCommDevice8sendDataEv", scope: !856, file: !857, line: 79, type: !948, scopeLine: 79, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!970 = !DISubprogram(name: "flushReadBuffer", linkageName: "_ZN6Cicada12ATCommDevice15flushReadBufferEv", scope: !856, file: !857, line: 80, type: !948, scopeLine: 80, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!971 = !DISubprogram(name: "receive", linkageName: "_ZN6Cicada12ATCommDevice7receiveEv", scope: !856, file: !857, line: 81, type: !972, scopeLine: 81, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!972 = !DISubroutineType(types: !973)
!973 = !{!35, !943}
!974 = !{!851, !975, !977}
!975 = !DIGlobalVariableExpression(var: !976, expr: !DIExpression())
!976 = distinct !DIGlobalVariable(name: "_lineEndStr", linkageName: "_ZN6Cicada12ATCommDevice11_lineEndStrE", scope: !853, file: !854, line: 35, type: !799, isLocal: false, isDefinition: true, declaration: !938)
!977 = !DIGlobalVariableExpression(var: !978, expr: !DIExpression())
!978 = distinct !DIGlobalVariable(name: "_quoteEndStr", linkageName: "_ZN6Cicada12ATCommDevice12_quoteEndStrE", scope: !853, file: !854, line: 36, type: !799, isLocal: false, isDefinition: true, declaration: !939)
!979 = !{!168, !174, !178, !181, !185, !188, !190, !192, !194, !197, !200, !203, !206, !209, !212, !213, !214, !215, !219, !221, !223, !225, !227, !230, !233, !236, !239, !242, !980, !985, !989, !993, !1000, !1004, !1015, !1019, !1024, !1100, !1102, !1107, !1111, !1113, !1115, !1117, !1119, !1124, !1128, !1132, !1136, !1140, !1144, !1148, !1152, !1154, !1158, !1164, !1168, !1174, !1176, !1178, !1182, !1186, !1188, !1192, !1196, !1198, !1202, !1204, !1206, !1210, !1214, !1218, !1222, !1226, !1230, !1232, !1242, !1246, !1250, !1255, !1257, !1259, !1263, !1267, !1268, !1269, !1270, !1271, !1272, !1281, !1285, !1289, !1291, !1295, !1299, !1301, !1303, !1305, !1309, !1313, !1317, !1321, !1325, !1327, !1329, !1331, !1335, !1339, !1343, !1345, !1347}
!980 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !981, file: !984, line: 58)
!981 = !DIDerivedType(tag: DW_TAG_typedef, name: "imaxdiv_t", file: !982, line: 315, baseType: !983)
!982 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/inttypes.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "1342af5b7f05910ff6fa824a20b79245")
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !982, line: 312, size: 128, flags: DIFlagFwdDecl, identifier: "_ZTS9imaxdiv_t")
!984 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/cinttypes", directory: "/home/mjshen/RTOSExploration")
!985 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !986, file: !984, line: 61)
!986 = !DISubprogram(name: "imaxabs", scope: !982, file: !982, line: 323, type: !987, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!987 = !DISubroutineType(types: !988)
!988 = !{!207, !207}
!989 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !990, file: !984, line: 62)
!990 = !DISubprogram(name: "imaxdiv", scope: !982, file: !982, line: 324, type: !991, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!991 = !DISubroutineType(types: !992)
!992 = !{!981, !207, !207}
!993 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !994, file: !984, line: 68)
!994 = !DISubprogram(name: "strtoimax", scope: !982, file: !982, line: 325, type: !995, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!995 = !DISubroutineType(types: !996)
!996 = !{!207, !997, !998, !24}
!997 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !799)
!998 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !999)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 32)
!1000 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1001, file: !984, line: 69)
!1001 = !DISubprogram(name: "strtoumax", scope: !982, file: !982, line: 327, type: !1002, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{!240, !997, !998, !24}
!1004 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1005, file: !984, line: 72)
!1005 = !DISubprogram(name: "wcstoimax", scope: !982, file: !982, line: 329, type: !1006, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{!207, !1008, !1012, !24}
!1008 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1009)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 32)
!1010 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1011)
!1011 = !DIBasicType(name: "wchar_t", size: 32, encoding: DW_ATE_unsigned)
!1012 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1013)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 32)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 32)
!1015 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1016, file: !984, line: 73)
!1016 = !DISubprogram(name: "wcstoumax", scope: !982, file: !982, line: 331, type: !1017, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!240, !1008, !1012, !24}
!1019 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1020, file: !1023, line: 58)
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "max_align_t", file: !1021, line: 24, baseType: !1022)
!1021 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/__stddef_max_align_t.h", directory: "", checksumkind: CSK_MD5, checksum: "48e8e2456f77e6cda35d245130fa7259")
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1021, line: 19, size: 128, flags: DIFlagFwdDecl, identifier: "_ZTS11max_align_t")
!1023 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/cstddef", directory: "/home/mjshen/RTOSExploration")
!1024 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1025, file: !1099, line: 98)
!1025 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1026, line: 66, baseType: !1027)
!1026 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "f9fec3134fbe599333115bffe9fa8133")
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !1028, line: 292, baseType: !1029)
!1028 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "c7a2657565d7077fe3d3f464b271e0ba")
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !1028, line: 186, size: 832, flags: DIFlagTypePassByValue, elements: !1030, identifier: "_ZTS7__sFILE")
!1030 = !{!1031, !1033, !1034, !1035, !1036, !1037, !1042, !1043, !1044, !1050, !1054, !1060, !1064, !1065, !1066, !1067, !1071, !1075, !1076, !1077, !1079, !1080, !1086, !1098}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !1029, file: !1028, line: 187, baseType: !1032, size: 32)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !89, size: 32)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !1029, file: !1028, line: 188, baseType: !24, size: 32, offset: 32)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !1029, file: !1028, line: 189, baseType: !24, size: 32, offset: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1029, file: !1028, line: 190, baseType: !177, size: 16, offset: 96)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !1029, file: !1028, line: 191, baseType: !177, size: 16, offset: 112)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !1029, file: !1028, line: 192, baseType: !1038, size: 64, offset: 128)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !1028, line: 122, size: 64, flags: DIFlagTypePassByValue, elements: !1039, identifier: "_ZTS6__sbuf")
!1039 = !{!1040, !1041}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !1038, file: !1028, line: 123, baseType: !1032, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !1038, file: !1028, line: 124, baseType: !24, size: 32, offset: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !1029, file: !1028, line: 193, baseType: !24, size: 32, offset: 192)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !1029, file: !1028, line: 200, baseType: !104, size: 32, offset: 224)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !1029, file: !1028, line: 202, baseType: !1045, size: 32, offset: 256)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 32)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!24, !1048, !104, !261, !24}
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 32)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !1028, line: 613, size: 8512, flags: DIFlagFwdDecl, identifier: "_ZTS6_reent")
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !1029, file: !1028, line: 204, baseType: !1051, size: 32, offset: 288)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 32)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!24, !1048, !104, !799, !24}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !1029, file: !1028, line: 207, baseType: !1055, size: 32, offset: 320)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 32)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!1058, !1048, !104, !1058, !24}
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !1059, line: 116, baseType: !510)
!1059 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "b45aad52ebaa1042158f2766af29f8e2")
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !1029, file: !1028, line: 208, baseType: !1061, size: 32, offset: 352)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 32)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!24, !1048, !104}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !1029, file: !1028, line: 211, baseType: !1038, size: 64, offset: 384)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !1029, file: !1028, line: 212, baseType: !1032, size: 32, offset: 448)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !1029, file: !1028, line: 213, baseType: !24, size: 32, offset: 480)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !1029, file: !1028, line: 216, baseType: !1068, size: 24, offset: 512)
!1068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 24, elements: !1069)
!1069 = !{!1070}
!1070 = !DISubrange(count: 3)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !1029, file: !1028, line: 217, baseType: !1072, size: 8, offset: 536)
!1072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 8, elements: !1073)
!1073 = !{!1074}
!1074 = !DISubrange(count: 1)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !1029, file: !1028, line: 220, baseType: !1038, size: 64, offset: 544)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !1029, file: !1028, line: 223, baseType: !24, size: 32, offset: 608)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1029, file: !1028, line: 224, baseType: !1078, size: 32, offset: 640)
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !1059, line: 46, baseType: !510)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !1029, file: !1028, line: 227, baseType: !1048, size: 32, offset: 672)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1029, file: !1028, line: 231, baseType: !1081, size: 32, offset: 704)
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !1028, line: 35, baseType: !1082)
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !1083, line: 34, baseType: !1084)
!1083 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "9390f2fa4a45b9ec624c9a037c5d6ca9")
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !1083, line: 33, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTS6__lock")
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !1029, file: !1028, line: 233, baseType: !1087, size: 64, offset: 736)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !1059, line: 170, baseType: !1088)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1059, line: 162, size: 64, flags: DIFlagTypePassByValue, elements: !1089, identifier: "_ZTS10_mbstate_t")
!1089 = !{!1090, !1091}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1088, file: !1059, line: 164, baseType: !24, size: 32)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1088, file: !1059, line: 169, baseType: !1092, size: 32, offset: 32)
!1092 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1088, file: !1059, line: 165, size: 32, flags: DIFlagTypePassByValue, elements: !1093, identifier: "_ZTSN10_mbstate_tUt_E")
!1093 = !{!1094, !1096}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1092, file: !1059, line: 167, baseType: !1095, size: 32)
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !256, line: 116, baseType: !24)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1092, file: !1059, line: 168, baseType: !1097, size: 32)
!1097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 32, elements: !114)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1029, file: !1028, line: 234, baseType: !24, size: 32, offset: 800)
!1099 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/cstdio", directory: "/home/mjshen/RTOSExploration")
!1100 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1101, file: !1099, line: 99)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "fpos_t", file: !1026, line: 73, baseType: !1058)
!1102 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1103, file: !1099, line: 101)
!1103 = !DISubprogram(name: "clearerr", scope: !1026, file: !1026, line: 238, type: !1104, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{null, !1106}
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 32)
!1107 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1108, file: !1099, line: 102)
!1108 = !DISubprogram(name: "fclose", scope: !1026, file: !1026, line: 191, type: !1109, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1109 = !DISubroutineType(types: !1110)
!1110 = !{!24, !1106}
!1111 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1112, file: !1099, line: 103)
!1112 = !DISubprogram(name: "feof", scope: !1026, file: !1026, line: 239, type: !1109, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1113 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1114, file: !1099, line: 104)
!1114 = !DISubprogram(name: "ferror", scope: !1026, file: !1026, line: 240, type: !1109, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1115 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1116, file: !1099, line: 105)
!1116 = !DISubprogram(name: "fflush", scope: !1026, file: !1026, line: 192, type: !1109, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1117 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1118, file: !1099, line: 106)
!1118 = !DISubprogram(name: "fgetc", scope: !1026, file: !1026, line: 212, type: !1109, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1119 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1120, file: !1099, line: 107)
!1120 = !DISubprogram(name: "fgetpos", scope: !1026, file: !1026, line: 228, type: !1121, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!24, !1106, !1123}
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 32)
!1124 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1125, file: !1099, line: 108)
!1125 = !DISubprogram(name: "fgets", scope: !1026, file: !1026, line: 213, type: !1126, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!261, !261, !24, !1106}
!1128 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1129, file: !1099, line: 109)
!1129 = !DISubprogram(name: "fopen", scope: !1026, file: !1026, line: 243, type: !1130, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1130 = !DISubroutineType(types: !1131)
!1131 = !{!1106, !799, !799}
!1132 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1133, file: !1099, line: 110)
!1133 = !DISubprogram(name: "fprintf", scope: !1026, file: !1026, line: 196, type: !1134, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1134 = !DISubroutineType(types: !1135)
!1135 = !{!24, !1106, !799, null}
!1136 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1137, file: !1099, line: 111)
!1137 = !DISubprogram(name: "fputc", scope: !1026, file: !1026, line: 214, type: !1138, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1138 = !DISubroutineType(types: !1139)
!1139 = !{!24, !24, !1106}
!1140 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1141, file: !1099, line: 112)
!1141 = !DISubprogram(name: "fputs", scope: !1026, file: !1026, line: 215, type: !1142, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{!24, !799, !1106}
!1144 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1145, file: !1099, line: 113)
!1145 = !DISubprogram(name: "fread", scope: !1026, file: !1026, line: 223, type: !1146, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1146 = !DISubroutineType(types: !1147)
!1147 = !{!255, !104, !255, !255, !1106}
!1148 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1149, file: !1099, line: 114)
!1149 = !DISubprogram(name: "freopen", scope: !1026, file: !1026, line: 193, type: !1150, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1150 = !DISubroutineType(types: !1151)
!1151 = !{!1106, !799, !799, !1106}
!1152 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1153, file: !1099, line: 115)
!1153 = !DISubprogram(name: "fscanf", scope: !1026, file: !1026, line: 198, type: !1134, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1154 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1155, file: !1099, line: 116)
!1155 = !DISubprogram(name: "fseek", scope: !1026, file: !1026, line: 230, type: !1156, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1156 = !DISubroutineType(types: !1157)
!1157 = !{!24, !1106, !510, !24}
!1158 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1159, file: !1099, line: 117)
!1159 = !DISubprogram(name: "fsetpos", scope: !1026, file: !1026, line: 234, type: !1160, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1160 = !DISubroutineType(types: !1161)
!1161 = !{!24, !1106, !1162}
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 32)
!1163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1101)
!1164 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1165, file: !1099, line: 118)
!1165 = !DISubprogram(name: "ftell", scope: !1026, file: !1026, line: 236, type: !1166, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1166 = !DISubroutineType(types: !1167)
!1167 = !{!510, !1106}
!1168 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1169, file: !1099, line: 119)
!1169 = !DISubprogram(name: "fwrite", scope: !1026, file: !1026, line: 224, type: !1170, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1170 = !DISubroutineType(types: !1171)
!1171 = !{!255, !1172, !255, !255, !1106}
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 32)
!1173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1174 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1175, file: !1099, line: 120)
!1175 = !DISubprogram(name: "getc", scope: !1026, file: !1026, line: 216, type: !1109, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1176 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1177, file: !1099, line: 121)
!1177 = !DISubprogram(name: "getchar", scope: !1026, file: !1026, line: 217, type: !22, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1178 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1179, file: !1099, line: 126)
!1179 = !DISubprogram(name: "perror", scope: !1026, file: !1026, line: 241, type: !1180, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1180 = !DISubroutineType(types: !1181)
!1181 = !{null, !799}
!1182 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1183, file: !1099, line: 127)
!1183 = !DISubprogram(name: "printf", scope: !1026, file: !1026, line: 200, type: !1184, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1184 = !DISubroutineType(types: !1185)
!1185 = !{!24, !799, null}
!1186 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1187, file: !1099, line: 128)
!1187 = !DISubprogram(name: "putc", scope: !1026, file: !1026, line: 219, type: !1138, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1188 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1189, file: !1099, line: 129)
!1189 = !DISubprogram(name: "putchar", scope: !1026, file: !1026, line: 220, type: !1190, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1190 = !DISubroutineType(types: !1191)
!1191 = !{!24, !24}
!1192 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1193, file: !1099, line: 130)
!1193 = !DISubprogram(name: "puts", scope: !1026, file: !1026, line: 221, type: !1194, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!24, !799}
!1196 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1197, file: !1099, line: 131)
!1197 = !DISubprogram(name: "remove", scope: !1026, file: !1026, line: 246, type: !1194, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1198 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1199, file: !1099, line: 132)
!1199 = !DISubprogram(name: "rename", scope: !1026, file: !1026, line: 247, type: !1200, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!24, !799, !799}
!1202 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1203, file: !1099, line: 133)
!1203 = !DISubprogram(name: "rewind", scope: !1026, file: !1026, line: 237, type: !1104, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1204 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1205, file: !1099, line: 134)
!1205 = !DISubprogram(name: "scanf", scope: !1026, file: !1026, line: 202, type: !1184, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1206 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1207, file: !1099, line: 135)
!1207 = !DISubprogram(name: "setbuf", scope: !1026, file: !1026, line: 194, type: !1208, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1208 = !DISubroutineType(types: !1209)
!1209 = !{null, !1106, !261}
!1210 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1211, file: !1099, line: 136)
!1211 = !DISubprogram(name: "setvbuf", scope: !1026, file: !1026, line: 195, type: !1212, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1212 = !DISubroutineType(types: !1213)
!1213 = !{!24, !1106, !261, !24, !255}
!1214 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1215, file: !1099, line: 137)
!1215 = !DISubprogram(name: "sprintf", scope: !1026, file: !1026, line: 244, type: !1216, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1216 = !DISubroutineType(types: !1217)
!1217 = !{!24, !261, !799, null}
!1218 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1219, file: !1099, line: 138)
!1219 = !DISubprogram(name: "sscanf", scope: !1026, file: !1026, line: 204, type: !1220, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1220 = !DISubroutineType(types: !1221)
!1221 = !{!24, !799, !799, null}
!1222 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1223, file: !1099, line: 139)
!1223 = !DISubprogram(name: "tmpfile", scope: !1026, file: !1026, line: 186, type: !1224, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1224 = !DISubroutineType(types: !1225)
!1225 = !{!1106}
!1226 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1227, file: !1099, line: 141)
!1227 = !DISubprogram(name: "tmpnam", scope: !1026, file: !1026, line: 187, type: !1228, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!261, !261}
!1230 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1231, file: !1099, line: 143)
!1231 = !DISubprogram(name: "ungetc", scope: !1026, file: !1026, line: 222, type: !1138, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1232 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1233, file: !1099, line: 144)
!1233 = !DISubprogram(name: "vfprintf", scope: !1026, file: !1026, line: 206, type: !1234, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1234 = !DISubroutineType(types: !1235)
!1235 = !{!24, !1106, !799, !1236}
!1236 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1237, line: 32, baseType: !1238)
!1237 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "", checksumkind: CSK_MD5, checksum: "4de3cbd931b589d291e5c39387aecf82")
!1238 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1239, baseType: !1240)
!1239 = !DIFile(filename: "../cicada/commdevices/atcommdevice.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build")
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", scope: !169, file: !1241, size: 32, flags: DIFlagFwdDecl, identifier: "_ZTSSt9__va_list")
!1241 = !DIFile(filename: "../cicada/commdevices/simcommdevice.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build")
!1242 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1243, file: !1099, line: 145)
!1243 = !DISubprogram(name: "vprintf", scope: !1026, file: !1026, line: 208, type: !1244, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1244 = !DISubroutineType(types: !1245)
!1245 = !{!24, !799, !1236}
!1246 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1247, file: !1099, line: 146)
!1247 = !DISubprogram(name: "vsprintf", scope: !1026, file: !1026, line: 210, type: !1248, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1248 = !DISubroutineType(types: !1249)
!1249 = !{!24, !261, !799, !1236}
!1250 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1251, entity: !1252, file: !1099, line: 175)
!1251 = !DINamespace(name: "__gnu_cxx", scope: null)
!1252 = !DISubprogram(name: "snprintf", scope: !1026, file: !1026, line: 266, type: !1253, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{!24, !261, !255, !799, null}
!1255 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1251, entity: !1256, file: !1099, line: 176)
!1256 = !DISubprogram(name: "vfscanf", scope: !1026, file: !1026, line: 270, type: !1234, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1257 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1251, entity: !1258, file: !1099, line: 177)
!1258 = !DISubprogram(name: "vscanf", scope: !1026, file: !1026, line: 272, type: !1244, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1259 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1251, entity: !1260, file: !1099, line: 178)
!1260 = !DISubprogram(name: "vsnprintf", scope: !1026, file: !1026, line: 268, type: !1261, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1261 = !DISubroutineType(types: !1262)
!1262 = !{!24, !261, !255, !799, !1236}
!1263 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1251, entity: !1264, file: !1099, line: 179)
!1264 = !DISubprogram(name: "vsscanf", scope: !1026, file: !1026, line: 274, type: !1265, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1265 = !DISubroutineType(types: !1266)
!1266 = !{!24, !799, !799, !1236}
!1267 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1252, file: !1099, line: 185)
!1268 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1256, file: !1099, line: 186)
!1269 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1258, file: !1099, line: 187)
!1270 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1260, file: !1099, line: 188)
!1271 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1264, file: !1099, line: 189)
!1272 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1273, file: !1280, line: 77)
!1273 = !DISubprogram(name: "memchr", scope: !1274, file: !1274, line: 29, type: !1275, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1274 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/string.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "00b3471f69c722645cab66876c511e27")
!1275 = !DISubroutineType(types: !1276)
!1276 = !{!104, !1172, !24, !1277}
!1277 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1278, line: 40, baseType: !1279)
!1278 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/strings.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "dceb1b71cd72987b246237af8552faba")
!1279 = !DIDerivedType(tag: DW_TAG_typedef, name: "__size_t", file: !1059, line: 131, baseType: !7)
!1280 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/cstring", directory: "/home/mjshen/RTOSExploration")
!1281 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1282, file: !1280, line: 78)
!1282 = !DISubprogram(name: "memcmp", scope: !1274, file: !1274, line: 30, type: !1283, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1283 = !DISubroutineType(types: !1284)
!1284 = !{!24, !1172, !1172, !1277}
!1285 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1286, file: !1280, line: 79)
!1286 = !DISubprogram(name: "memcpy", scope: !1274, file: !1274, line: 31, type: !1287, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1287 = !DISubroutineType(types: !1288)
!1288 = !{!104, !104, !1172, !1277}
!1289 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1290, file: !1280, line: 80)
!1290 = !DISubprogram(name: "memmove", scope: !1274, file: !1274, line: 32, type: !1287, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1291 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1292, file: !1280, line: 81)
!1292 = !DISubprogram(name: "memset", scope: !1274, file: !1274, line: 33, type: !1293, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1293 = !DISubroutineType(types: !1294)
!1294 = !{!104, !104, !24, !1277}
!1295 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1296, file: !1280, line: 82)
!1296 = !DISubprogram(name: "strcat", scope: !1274, file: !1274, line: 34, type: !1297, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1297 = !DISubroutineType(types: !1298)
!1298 = !{!261, !261, !799}
!1299 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1300, file: !1280, line: 83)
!1300 = !DISubprogram(name: "strcmp", scope: !1274, file: !1274, line: 36, type: !1200, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1301 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1302, file: !1280, line: 84)
!1302 = !DISubprogram(name: "strcoll", scope: !1274, file: !1274, line: 37, type: !1200, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1303 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1304, file: !1280, line: 85)
!1304 = !DISubprogram(name: "strcpy", scope: !1274, file: !1274, line: 38, type: !1297, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1305 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1306, file: !1280, line: 86)
!1306 = !DISubprogram(name: "strcspn", scope: !1274, file: !1274, line: 39, type: !1307, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1307 = !DISubroutineType(types: !1308)
!1308 = !{!1277, !799, !799}
!1309 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1310, file: !1280, line: 87)
!1310 = !DISubprogram(name: "strerror", scope: !1274, file: !1274, line: 40, type: !1311, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1311 = !DISubroutineType(types: !1312)
!1312 = !{!261, !24}
!1313 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1314, file: !1280, line: 88)
!1314 = !DISubprogram(name: "strlen", scope: !1274, file: !1274, line: 41, type: !1315, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1315 = !DISubroutineType(types: !1316)
!1316 = !{!1277, !799}
!1317 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1318, file: !1280, line: 89)
!1318 = !DISubprogram(name: "strncat", scope: !1274, file: !1274, line: 42, type: !1319, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{!261, !261, !799, !1277}
!1321 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1322, file: !1280, line: 90)
!1322 = !DISubprogram(name: "strncmp", scope: !1274, file: !1274, line: 43, type: !1323, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1323 = !DISubroutineType(types: !1324)
!1324 = !{!24, !799, !799, !1277}
!1325 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1326, file: !1280, line: 91)
!1326 = !DISubprogram(name: "strncpy", scope: !1274, file: !1274, line: 44, type: !1319, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1327 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1328, file: !1280, line: 92)
!1328 = !DISubprogram(name: "strspn", scope: !1274, file: !1274, line: 47, type: !1307, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1329 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1330, file: !1280, line: 93)
!1330 = !DISubprogram(name: "strtok", scope: !1274, file: !1274, line: 50, type: !1297, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1331 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1332, file: !1280, line: 94)
!1332 = !DISubprogram(name: "strxfrm", scope: !1274, file: !1274, line: 52, type: !1333, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1333 = !DISubroutineType(types: !1334)
!1334 = !{!1277, !261, !799, !1277}
!1335 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1336, file: !1280, line: 95)
!1336 = !DISubprogram(name: "strchr", scope: !1274, file: !1274, line: 35, type: !1337, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1337 = !DISubroutineType(types: !1338)
!1338 = !{!261, !799, !24}
!1339 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1340, file: !1280, line: 96)
!1340 = !DISubprogram(name: "strpbrk", scope: !1274, file: !1274, line: 45, type: !1341, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1341 = !DISubroutineType(types: !1342)
!1342 = !{!261, !799, !799}
!1343 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1344, file: !1280, line: 97)
!1344 = !DISubprogram(name: "strrchr", scope: !1274, file: !1274, line: 46, type: !1337, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1345 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1346, file: !1280, line: 98)
!1346 = !DISubprogram(name: "strstr", scope: !1274, file: !1274, line: 48, type: !1341, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1347 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !853, entity: !17, file: !854, line: 32)
!1348 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1349, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1350, retainedTypes: !1355, splitDebugInlining: false, nameTableKind: None)
!1349 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "bf5d5e021854d33cea3d58ed6b9d5087")
!1350 = !{!395, !316, !1351}
!1351 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !317, line: 157, baseType: !7, size: 32, elements: !1352)
!1352 = !{!1353, !1354}
!1353 = !DIEnumerator(name: "DISABLE", value: 0)
!1354 = !DIEnumerator(name: "ENABLE", value: 1)
!1355 = !{!1356, !32, !104, !87, !85, !1370, !1376, !26, !1389, !508}
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 32)
!1357 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !68, line: 438, baseType: !1358)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !68, line: 424, size: 320, elements: !1359)
!1359 = !{!1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1358, file: !68, line: 426, baseType: !72, size: 32)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1358, file: !68, line: 427, baseType: !72, size: 32, offset: 32)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1358, file: !68, line: 428, baseType: !72, size: 32, offset: 64)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1358, file: !68, line: 429, baseType: !72, size: 32, offset: 96)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1358, file: !68, line: 430, baseType: !72, size: 32, offset: 128)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1358, file: !68, line: 431, baseType: !72, size: 32, offset: 160)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1358, file: !68, line: 432, baseType: !72, size: 32, offset: 192)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1358, file: !68, line: 433, baseType: !72, size: 32, offset: 224)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1358, file: !68, line: 434, baseType: !72, size: 32, offset: 256)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1358, file: !68, line: 435, baseType: !72, size: 32, offset: 288)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !68, line: 418, baseType: !1372)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !68, line: 414, size: 64, elements: !1373)
!1373 = !{!1374, !1375}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1372, file: !68, line: 416, baseType: !72, size: 32)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1372, file: !68, line: 417, baseType: !72, size: 32, offset: 32)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 32)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !68, line: 336, baseType: !1378)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !68, line: 325, size: 288, elements: !1379)
!1379 = !{!1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !1378, file: !68, line: 327, baseType: !72, size: 32)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !1378, file: !68, line: 328, baseType: !72, size: 32, offset: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !1378, file: !68, line: 329, baseType: !72, size: 32, offset: 64)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1378, file: !68, line: 330, baseType: !72, size: 32, offset: 96)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1378, file: !68, line: 331, baseType: !72, size: 32, offset: 128)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "AR", scope: !1378, file: !68, line: 332, baseType: !72, size: 32, offset: 160)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1378, file: !68, line: 333, baseType: !72, size: 32, offset: 192)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !1378, file: !68, line: 334, baseType: !72, size: 32, offset: 224)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR", scope: !1378, file: !68, line: 335, baseType: !72, size: 32, offset: 256)
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 32)
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !68, line: 367, baseType: !1391)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !68, line: 358, size: 224, elements: !1392)
!1392 = !{!1393, !1394, !1395, !1396, !1397, !1398, !1399}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "CRL", scope: !1391, file: !68, line: 360, baseType: !72, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "CRH", scope: !1391, file: !68, line: 361, baseType: !72, size: 32, offset: 32)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1391, file: !68, line: 362, baseType: !72, size: 32, offset: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1391, file: !68, line: 363, baseType: !72, size: 32, offset: 96)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1391, file: !68, line: 364, baseType: !72, size: 32, offset: 128)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1391, file: !68, line: 365, baseType: !72, size: 32, offset: 160)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1391, file: !68, line: 366, baseType: !72, size: 32, offset: 192)
!1400 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1401, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1402, retainedTypes: !1403, splitDebugInlining: false, nameTableKind: None)
!1401 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "83cb8d6817603f64d73dca2a0b01efa1")
!1402 = !{!401}
!1403 = !{!1404, !32, !1412, !179, !87, !1437}
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 32)
!1405 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !338, line: 700, baseType: !1406)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !338, line: 694, size: 128, elements: !1407)
!1407 = !{!1408, !1409, !1410, !1411}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1406, file: !338, line: 696, baseType: !72, size: 32)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1406, file: !338, line: 697, baseType: !72, size: 32, offset: 32)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1406, file: !338, line: 698, baseType: !72, size: 32, offset: 64)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1406, file: !338, line: 699, baseType: !342, size: 32, offset: 96)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 32)
!1413 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !338, line: 397, baseType: !1414)
!1414 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !338, line: 374, size: 1120, elements: !1415)
!1415 = !{!1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1414, file: !338, line: 376, baseType: !342, size: 32)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1414, file: !338, line: 377, baseType: !72, size: 32, offset: 32)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1414, file: !338, line: 378, baseType: !72, size: 32, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1414, file: !338, line: 379, baseType: !72, size: 32, offset: 96)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1414, file: !338, line: 380, baseType: !72, size: 32, offset: 128)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1414, file: !338, line: 381, baseType: !72, size: 32, offset: 160)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1414, file: !338, line: 382, baseType: !349, size: 96, offset: 192)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1414, file: !338, line: 383, baseType: !72, size: 32, offset: 288)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1414, file: !338, line: 384, baseType: !72, size: 32, offset: 320)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1414, file: !338, line: 385, baseType: !72, size: 32, offset: 352)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1414, file: !338, line: 386, baseType: !72, size: 32, offset: 384)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1414, file: !338, line: 387, baseType: !72, size: 32, offset: 416)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1414, file: !338, line: 388, baseType: !72, size: 32, offset: 448)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1414, file: !338, line: 389, baseType: !72, size: 32, offset: 480)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1414, file: !338, line: 390, baseType: !361, size: 64, offset: 512)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1414, file: !338, line: 391, baseType: !342, size: 32, offset: 576)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1414, file: !338, line: 392, baseType: !342, size: 32, offset: 608)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1414, file: !338, line: 393, baseType: !365, size: 128, offset: 640)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1414, file: !338, line: 394, baseType: !367, size: 160, offset: 768)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1414, file: !338, line: 395, baseType: !371, size: 160, offset: 928)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1414, file: !338, line: 396, baseType: !72, size: 32, offset: 1088)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 32)
!1438 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !338, line: 355, baseType: !1439)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !338, line: 340, size: 28704, elements: !1440)
!1440 = !{!1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1439, file: !338, line: 342, baseType: !670, size: 256)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1439, file: !338, line: 343, baseType: !672, size: 768, offset: 256)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1439, file: !338, line: 344, baseType: !670, size: 256, offset: 1024)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !1439, file: !338, line: 345, baseType: !672, size: 768, offset: 1280)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1439, file: !338, line: 346, baseType: !670, size: 256, offset: 2048)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1439, file: !338, line: 347, baseType: !672, size: 768, offset: 2304)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1439, file: !338, line: 348, baseType: !670, size: 256, offset: 3072)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1439, file: !338, line: 349, baseType: !672, size: 768, offset: 3328)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1439, file: !338, line: 350, baseType: !670, size: 256, offset: 4096)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1439, file: !338, line: 351, baseType: !683, size: 1792, offset: 4352)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1439, file: !338, line: 352, baseType: !687, size: 1920, offset: 6144)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1439, file: !338, line: 353, baseType: !691, size: 20608, offset: 8064)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1439, file: !338, line: 354, baseType: !72, size: 32, offset: 28672)
!1454 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1455, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1456, retainedTypes: !1462, splitDebugInlining: false, nameTableKind: None)
!1455 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "de98d9c05272efa2ca465428751dd1b5")
!1456 = !{!1457, !395}
!1457 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1458, line: 65, baseType: !7, size: 32, elements: !1459)
!1458 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "b5ff32b0624c591654a3e02ee400cffe")
!1459 = !{!1460, !1461}
!1460 = !DIEnumerator(name: "GPIO_PIN_RESET", value: 0)
!1461 = !DIEnumerator(name: "GPIO_PIN_SET", value: 1)
!1462 = !{!32, !26, !1463, !1477, !1486, !1497}
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 32)
!1464 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !68, line: 438, baseType: !1465)
!1465 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !68, line: 424, size: 320, elements: !1466)
!1466 = !{!1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1465, file: !68, line: 426, baseType: !72, size: 32)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1465, file: !68, line: 427, baseType: !72, size: 32, offset: 32)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1465, file: !68, line: 428, baseType: !72, size: 32, offset: 64)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1465, file: !68, line: 429, baseType: !72, size: 32, offset: 96)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1465, file: !68, line: 430, baseType: !72, size: 32, offset: 128)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1465, file: !68, line: 431, baseType: !72, size: 32, offset: 160)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1465, file: !68, line: 432, baseType: !72, size: 32, offset: 192)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1465, file: !68, line: 433, baseType: !72, size: 32, offset: 224)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1465, file: !68, line: 434, baseType: !72, size: 32, offset: 256)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1465, file: !68, line: 435, baseType: !72, size: 32, offset: 288)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 32)
!1478 = !DIDerivedType(tag: DW_TAG_typedef, name: "AFIO_TypeDef", file: !68, line: 380, baseType: !1479)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !68, line: 373, size: 256, elements: !1480)
!1480 = !{!1481, !1482, !1483, !1484, !1485}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "EVCR", scope: !1479, file: !68, line: 375, baseType: !72, size: 32)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "MAPR", scope: !1479, file: !68, line: 376, baseType: !72, size: 32, offset: 32)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1479, file: !68, line: 377, baseType: !648, size: 128, offset: 64)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1479, file: !68, line: 378, baseType: !32, size: 32, offset: 192)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "MAPR2", scope: !1479, file: !68, line: 379, baseType: !72, size: 32, offset: 224)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 32)
!1487 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !68, line: 367, baseType: !1488)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !68, line: 358, size: 224, elements: !1489)
!1489 = !{!1490, !1491, !1492, !1493, !1494, !1495, !1496}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "CRL", scope: !1488, file: !68, line: 360, baseType: !72, size: 32)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "CRH", scope: !1488, file: !68, line: 361, baseType: !72, size: 32, offset: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1488, file: !68, line: 362, baseType: !72, size: 32, offset: 64)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1488, file: !68, line: 363, baseType: !72, size: 32, offset: 96)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1488, file: !68, line: 364, baseType: !72, size: 32, offset: 128)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1488, file: !68, line: 365, baseType: !72, size: 32, offset: 160)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1488, file: !68, line: 366, baseType: !72, size: 32, offset: 192)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 32)
!1498 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !68, line: 319, baseType: !1499)
!1499 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !68, line: 311, size: 192, elements: !1500)
!1500 = !{!1501, !1502, !1503, !1504, !1505, !1506}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1499, file: !68, line: 313, baseType: !72, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !1499, file: !68, line: 314, baseType: !72, size: 32, offset: 32)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !1499, file: !68, line: 315, baseType: !72, size: 32, offset: 64)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !1499, file: !68, line: 316, baseType: !72, size: 32, offset: 96)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !1499, file: !68, line: 317, baseType: !72, size: 32, offset: 128)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !1499, file: !68, line: 318, baseType: !72, size: 32, offset: 160)
!1507 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1508, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1509, splitDebugInlining: false, nameTableKind: None)
!1508 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Middlewares/Third_Party/FreeRTOS/Source/list.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "07241db0e76b259c6ede584bfdc291d6")
!1509 = !{!1510, !111, !82, !104, !1520}
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 32)
!1511 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !545, line: 149, baseType: !1512)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !545, line: 139, size: 160, elements: !1513)
!1513 = !{!1514, !1515, !1517, !1518, !1519}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1512, file: !545, line: 142, baseType: !111, size: 32)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1512, file: !545, line: 143, baseType: !1516, size: 32, offset: 32)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 32)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1512, file: !545, line: 144, baseType: !1516, size: 32, offset: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !1512, file: !545, line: 145, baseType: !104, size: 32, offset: 96)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !1512, file: !545, line: 146, baseType: !104, size: 32, offset: 128)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 32)
!1521 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !545, line: 170, baseType: !1522)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !545, line: 163, size: 160, elements: !1523)
!1523 = !{!1524, !1525, !1526}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !1522, file: !545, line: 166, baseType: !569, size: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !1522, file: !545, line: 167, baseType: !1510, size: 32, offset: 32)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !1522, file: !545, line: 168, baseType: !1527, size: 96, offset: 64)
!1527 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !545, line: 158, baseType: !1528)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !545, line: 151, size: 96, elements: !1529)
!1529 = !{!1530, !1531, !1532}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1528, file: !545, line: 154, baseType: !111, size: 32)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1528, file: !545, line: 155, baseType: !1516, size: 32, offset: 32)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1528, file: !545, line: 156, baseType: !1516, size: 32, offset: 64)
!1533 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1534, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1535, retainedTypes: !1671, imports: !1672, splitDebugInlining: false, nameTableKind: None)
!1534 = !DIFile(filename: "../cicada/commdevices/ipcommdevice.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "c1f12208d19013c4901343b372e157b9")
!1535 = !{!1536, !1566}
!1536 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "ConnectState", scope: !1537, file: !861, line: 68, baseType: !7, size: 32, elements: !1663, identifier: "_ZTSN6Cicada12IPCommDevice12ConnectStateE")
!1537 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "IPCommDevice", scope: !17, file: !861, line: 42, size: 1152, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1538, vtableHolder: !824)
!1538 = !{!1539, !1570, !1571, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1633, !1636, !1639, !1642, !1645, !1646, !1647, !1648, !1653, !1654, !1657, !1660}
!1539 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1537, baseType: !1540, flags: DIFlagPublic, extraData: i32 0)
!1540 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "IIPCommDevice", scope: !17, file: !1541, line: 32, size: 32, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1542, vtableHolder: !824, identifier: "_ZTSN6Cicada13IIPCommDeviceE")
!1541 = !DIFile(filename: "../cicada/commdevices/iipcommdevice.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "5bf8a05cddb71511a58831ad901c2c26")
!1542 = !{!1543, !1559, !1563}
!1543 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1540, baseType: !1544, flags: DIFlagPublic, extraData: i32 0)
!1544 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "IStatefulDevice", scope: !17, file: !1545, line: 38, size: 32, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1546, vtableHolder: !824, identifier: "_ZTSN6Cicada15IStatefulDeviceE")
!1545 = !DIFile(filename: "../cicada/istatefuldevice.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "712993ae5fefe5852fb5c94951a13de4")
!1546 = !{!1547, !1548, !1552, !1555, !1556, !1557, !1558}
!1547 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1544, baseType: !824, flags: DIFlagPublic, extraData: i32 0)
!1548 = !DISubprogram(name: "~IStatefulDevice", scope: !1544, file: !1545, line: 41, type: !1549, scopeLine: 41, containingType: !1544, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1549 = !DISubroutineType(types: !1550)
!1550 = !{null, !1551}
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1552 = !DISubprogram(name: "connect", linkageName: "_ZN6Cicada15IStatefulDevice7connectEv", scope: !1544, file: !1545, line: 46, type: !1553, scopeLine: 46, containingType: !1544, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1553 = !DISubroutineType(types: !1554)
!1554 = !{!35, !1551}
!1555 = !DISubprogram(name: "disconnect", linkageName: "_ZN6Cicada15IStatefulDevice10disconnectEv", scope: !1544, file: !1545, line: 51, type: !1549, scopeLine: 51, containingType: !1544, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1556 = !DISubprogram(name: "isConnected", linkageName: "_ZN6Cicada15IStatefulDevice11isConnectedEv", scope: !1544, file: !1545, line: 58, type: !1553, scopeLine: 58, containingType: !1544, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1557 = !DISubprogram(name: "isIdle", linkageName: "_ZN6Cicada15IStatefulDevice6isIdleEv", scope: !1544, file: !1545, line: 65, type: !1553, scopeLine: 65, containingType: !1544, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1558 = !DISubprogram(name: "resetStates", linkageName: "_ZN6Cicada15IStatefulDevice11resetStatesEv", scope: !1544, file: !1545, line: 70, type: !1549, scopeLine: 70, containingType: !1544, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1559 = !DISubprogram(name: "~IIPCommDevice", scope: !1540, file: !1541, line: 35, type: !1560, scopeLine: 35, containingType: !1540, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1560 = !DISubroutineType(types: !1561)
!1561 = !{null, !1562}
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1563 = !DISubprogram(name: "setHostPort", linkageName: "_ZN6Cicada13IIPCommDevice11setHostPortEPKctNS0_14ConnectionTypeE", scope: !1540, file: !1541, line: 47, type: !1564, scopeLine: 47, containingType: !1540, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1564 = !DISubroutineType(types: !1565)
!1565 = !{null, !1562, !799, !26, !1566}
!1566 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "ConnectionType", scope: !1540, file: !1541, line: 37, baseType: !7, size: 32, elements: !1567, identifier: "_ZTSN6Cicada13IIPCommDevice14ConnectionTypeE")
!1567 = !{!1568, !1569}
!1568 = !DIEnumerator(name: "UDP", value: 0, isUnsigned: true)
!1569 = !DIEnumerator(name: "TCP", value: 1, isUnsigned: true)
!1570 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1537, baseType: !15, offset: 32, flags: DIFlagPublic, extraData: i32 0)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "_readBuffer", scope: !1537, file: !861, line: 78, baseType: !1572, size: 384, offset: 192, flags: DIFlagProtected)
!1572 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "CircularBuffer<unsigned char>", scope: !17, file: !1573, line: 39, size: 384, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1574, vtableHolder: !1572, templateParams: !1620, identifier: "_ZTSN6Cicada14CircularBufferIhEE")
!1573 = !DIFile(filename: "../cicada/circularbuffer.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "eefa34d28a75acab61b1e5f45f9ba1dd")
!1574 = !{!1575, !1576, !1577, !1578, !1579, !1581, !1582, !1586, !1589, !1594, !1597, !1600, !1603, !1604, !1605, !1610, !1611, !1614, !1615, !1616}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$CircularBuffer", scope: !1573, file: !1573, baseType: !20, size: 32, flags: DIFlagArtificial)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "_writeHead", scope: !1572, file: !1573, line: 196, baseType: !774, size: 64, offset: 64)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "_readHead", scope: !1572, file: !1573, line: 197, baseType: !774, size: 64, offset: 128)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "_availableData", scope: !1572, file: !1573, line: 198, baseType: !774, size: 64, offset: 192)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "_bufferSize", scope: !1572, file: !1573, line: 199, baseType: !1580, size: 64, offset: 256)
!1580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !774)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "_buffer", scope: !1572, file: !1573, line: 200, baseType: !1032, size: 32, offset: 320)
!1582 = !DISubprogram(name: "CircularBuffer", scope: !1572, file: !1573, line: 48, type: !1583, scopeLine: 48, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1583 = !DISubroutineType(types: !1584)
!1584 = !{null, !1585, !1032, !774}
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1586 = !DISubprogram(name: "~CircularBuffer", scope: !1572, file: !1573, line: 56, type: !1587, scopeLine: 56, containingType: !1572, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1587 = !DISubroutineType(types: !1588)
!1588 = !{null, !1585}
!1589 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIhE4pushEPKhy", scope: !1572, file: !1573, line: 65, type: !1590, scopeLine: 65, containingType: !1572, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1590 = !DISubroutineType(types: !1591)
!1591 = !{!774, !1585, !1592, !774}
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 32)
!1593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !89)
!1594 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIhE4pushEh", scope: !1572, file: !1573, line: 88, type: !1595, scopeLine: 88, containingType: !1572, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1595 = !DISubroutineType(types: !1596)
!1596 = !{null, !1585, !89}
!1597 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIhE4pullEPhy", scope: !1572, file: !1573, line: 102, type: !1598, scopeLine: 102, containingType: !1572, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1598 = !DISubroutineType(types: !1599)
!1599 = !{!774, !1585, !1032, !774}
!1600 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIhE4pullEv", scope: !1572, file: !1573, line: 124, type: !1601, scopeLine: 124, containingType: !1572, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1601 = !DISubroutineType(types: !1602)
!1602 = !{!89, !1585}
!1603 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada14CircularBufferIhE4readEv", scope: !1572, file: !1573, line: 140, type: !1601, scopeLine: 140, containingType: !1572, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1604 = !DISubprogram(name: "flush", linkageName: "_ZN6Cicada14CircularBufferIhE5flushEv", scope: !1572, file: !1573, line: 148, type: !1587, scopeLine: 148, containingType: !1572, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1605 = !DISubprogram(name: "isEmpty", linkageName: "_ZNK6Cicada14CircularBufferIhE7isEmptyEv", scope: !1572, file: !1573, line: 158, type: !1606, scopeLine: 158, containingType: !1572, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1606 = !DISubroutineType(types: !1607)
!1607 = !{!35, !1608}
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1572)
!1610 = !DISubprogram(name: "isFull", linkageName: "_ZNK6Cicada14CircularBufferIhE6isFullEv", scope: !1572, file: !1573, line: 166, type: !1606, scopeLine: 166, containingType: !1572, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1611 = !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv", scope: !1572, file: !1573, line: 174, type: !1612, scopeLine: 174, containingType: !1572, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1612 = !DISubroutineType(types: !1613)
!1613 = !{!774, !1608}
!1614 = !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv", scope: !1572, file: !1573, line: 182, type: !1612, scopeLine: 182, containingType: !1572, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1615 = !DISubprogram(name: "size", linkageName: "_ZNK6Cicada14CircularBufferIhE4sizeEv", scope: !1572, file: !1573, line: 190, type: !1612, scopeLine: 190, containingType: !1572, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1616 = !DISubprogram(name: "incrementOrResetHead", linkageName: "_ZN6Cicada14CircularBufferIhE20incrementOrResetHeadERy", scope: !1572, file: !1573, line: 202, type: !1617, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{null, !1585, !1619}
!1619 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !774, size: 32)
!1620 = !{!1621}
!1621 = !DITemplateTypeParameter(name: "T", type: !89)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "_writeBuffer", scope: !1537, file: !861, line: 79, baseType: !1572, size: 384, offset: 576, flags: DIFlagProtected)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "_type", scope: !1537, file: !861, line: 80, baseType: !1566, size: 32, offset: 960, flags: DIFlagProtected)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "_host", scope: !1537, file: !861, line: 81, baseType: !799, size: 32, offset: 992, flags: DIFlagProtected)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "_port", scope: !1537, file: !861, line: 82, baseType: !26, size: 16, offset: 1024, flags: DIFlagProtected)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "_stateBooleans", scope: !1537, file: !861, line: 83, baseType: !87, size: 8, offset: 1040, flags: DIFlagProtected)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "_connectState", scope: !1537, file: !861, line: 84, baseType: !1536, size: 32, offset: 1056, flags: DIFlagProtected)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "_waitForReply", scope: !1537, file: !861, line: 85, baseType: !799, size: 32, offset: 1088, flags: DIFlagProtected)
!1629 = !DISubprogram(name: "IPCommDevice", scope: !1537, file: !861, line: 51, type: !1630, scopeLine: 51, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1630 = !DISubroutineType(types: !1631)
!1631 = !{null, !1632, !86, !86, !774}
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1633 = !DISubprogram(name: "IPCommDevice", scope: !1537, file: !861, line: 52, type: !1634, scopeLine: 52, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1634 = !DISubroutineType(types: !1635)
!1635 = !{null, !1632, !86, !86, !774, !774}
!1636 = !DISubprogram(name: "~IPCommDevice", scope: !1537, file: !861, line: 54, type: !1637, scopeLine: 54, containingType: !1537, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1637 = !DISubroutineType(types: !1638)
!1638 = !{null, !1632}
!1639 = !DISubprogram(name: "setHostPort", linkageName: "_ZN6Cicada12IPCommDevice11setHostPortEPKctNS_13IIPCommDevice14ConnectionTypeE", scope: !1537, file: !861, line: 56, type: !1640, scopeLine: 56, containingType: !1537, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{null, !1632, !799, !26, !1566}
!1642 = !DISubprogram(name: "connect", linkageName: "_ZN6Cicada12IPCommDevice7connectEv", scope: !1537, file: !861, line: 57, type: !1643, scopeLine: 57, containingType: !1537, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1643 = !DISubroutineType(types: !1644)
!1644 = !{!35, !1632}
!1645 = !DISubprogram(name: "disconnect", linkageName: "_ZN6Cicada12IPCommDevice10disconnectEv", scope: !1537, file: !861, line: 58, type: !1637, scopeLine: 58, containingType: !1537, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1646 = !DISubprogram(name: "isConnected", linkageName: "_ZN6Cicada12IPCommDevice11isConnectedEv", scope: !1537, file: !861, line: 59, type: !1643, scopeLine: 59, containingType: !1537, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1647 = !DISubprogram(name: "isIdle", linkageName: "_ZN6Cicada12IPCommDevice6isIdleEv", scope: !1537, file: !861, line: 60, type: !1643, scopeLine: 60, containingType: !1537, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1648 = !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada12IPCommDevice14bytesAvailableEv", scope: !1537, file: !861, line: 61, type: !1649, scopeLine: 61, containingType: !1537, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1649 = !DISubroutineType(types: !1650)
!1650 = !{!774, !1651}
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1537)
!1653 = !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada12IPCommDevice14spaceAvailableEv", scope: !1537, file: !861, line: 62, type: !1649, scopeLine: 62, containingType: !1537, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1654 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada12IPCommDevice4readEPhy", scope: !1537, file: !861, line: 63, type: !1655, scopeLine: 63, containingType: !1537, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1655 = !DISubroutineType(types: !1656)
!1656 = !{!774, !1632, !86, !774}
!1657 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada12IPCommDevice5writeEPKhy", scope: !1537, file: !861, line: 64, type: !1658, scopeLine: 64, containingType: !1537, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1658 = !DISubroutineType(types: !1659)
!1659 = !{!774, !1632, !847, !774}
!1660 = !DISubprogram(name: "writeBufferProcessed", linkageName: "_ZNK6Cicada12IPCommDevice20writeBufferProcessedEv", scope: !1537, file: !861, line: 65, type: !1661, scopeLine: 65, containingType: !1537, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1661 = !DISubroutineType(types: !1662)
!1662 = !{!35, !1651}
!1663 = !{!1664, !1665, !1666, !1667, !1668, !1669, !1670}
!1664 = !DIEnumerator(name: "notConnected", value: 0, isUnsigned: true)
!1665 = !DIEnumerator(name: "intermediate", value: 1, isUnsigned: true)
!1666 = !DIEnumerator(name: "connected", value: 2, isUnsigned: true)
!1667 = !DIEnumerator(name: "transmitting", value: 3, isUnsigned: true)
!1668 = !DIEnumerator(name: "receiving", value: 4, isUnsigned: true)
!1669 = !DIEnumerator(name: "generalError", value: 5, isUnsigned: true)
!1670 = !DIEnumerator(name: "dnsError", value: 6, isUnsigned: true)
!1671 = !{!1537, !1540, !1544, !824, !15, !1572}
!1672 = !{!168, !174, !178, !181, !185, !188, !190, !192, !194, !197, !200, !203, !206, !209, !212, !213, !214, !215, !219, !221, !223, !225, !227, !230, !233, !236, !239, !242, !1019, !1673}
!1673 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1533, entity: !17, file: !1534, line: 27)
!1674 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1675, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1676, retainedTypes: !1738, imports: !1739, splitDebugInlining: false, nameTableKind: None)
!1675 = !DIFile(filename: "../cicada/commdevices/simcommdevice.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "604b608b821a2670d76d7b839c3273cc")
!1676 = !{!1536, !1677}
!1677 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "RequestIDType", scope: !1679, file: !1678, line: 88, baseType: !7, size: 32, elements: !1731, identifier: "_ZTSN6Cicada13SimCommDevice13RequestIDTypeE")
!1678 = !DIFile(filename: "../cicada/commdevices/simcommdevice.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "a544398dc40a994ae47c8561fb84bc57")
!1679 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "SimCommDevice", scope: !17, file: !1678, line: 33, size: 2240, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1680, vtableHolder: !824)
!1680 = !{!1681, !1683, !1684, !1685, !1687, !1688, !1689, !1693, !1696, !1699, !1700, !1703, !1706, !1707, !1708, !1709, !1712, !1715, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728}
!1681 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1679, baseType: !1682, flags: DIFlagPublic, extraData: i32 0)
!1682 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "ATCommDevice", scope: !17, file: !857, line: 39, size: 1856, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada12ATCommDeviceE")
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "_apn", scope: !1679, file: !1678, line: 120, baseType: !799, size: 32, offset: 1856, flags: DIFlagProtected)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "_ip", scope: !1679, file: !1678, line: 122, baseType: !558, size: 128, offset: 1888, flags: DIFlagProtected)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "_idStringBuffer", scope: !1679, file: !1678, line: 124, baseType: !1686, size: 192, offset: 2016, flags: DIFlagProtected)
!1686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 192, elements: !673)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "_rssi", scope: !1679, file: !1678, line: 126, baseType: !87, size: 8, offset: 2208, flags: DIFlagProtected)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "_modemMaxReceiveSize", scope: !1679, file: !1678, line: 128, baseType: !26, size: 16, offset: 2224, flags: DIFlagProtected)
!1689 = !DISubprogram(name: "SimCommDevice", scope: !1679, file: !1678, line: 36, type: !1690, scopeLine: 36, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1690 = !DISubroutineType(types: !1691)
!1691 = !{null, !1692, !863, !86, !86, !774}
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1693 = !DISubprogram(name: "SimCommDevice", scope: !1679, file: !1678, line: 38, type: !1694, scopeLine: 38, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1694 = !DISubroutineType(types: !1695)
!1695 = !{null, !1692, !863, !86, !86, !774, !774}
!1696 = !DISubprogram(name: "~SimCommDevice", scope: !1679, file: !1678, line: 40, type: !1697, scopeLine: 40, containingType: !1679, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1697 = !DISubroutineType(types: !1698)
!1698 = !{null, !1692}
!1699 = !DISubprogram(name: "resetStates", linkageName: "_ZN6Cicada13SimCommDevice11resetStatesEv", scope: !1679, file: !1678, line: 48, type: !1697, scopeLine: 48, containingType: !1679, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1700 = !DISubprogram(name: "setApn", linkageName: "_ZN6Cicada13SimCommDevice6setApnEPKc", scope: !1679, file: !1678, line: 54, type: !1701, scopeLine: 54, containingType: !1679, virtualIndex: 15, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1701 = !DISubroutineType(types: !1702)
!1702 = !{null, !1692, !799}
!1703 = !DISubprogram(name: "connect", linkageName: "_ZN6Cicada13SimCommDevice7connectEv", scope: !1679, file: !1678, line: 56, type: !1704, scopeLine: 56, containingType: !1679, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1704 = !DISubroutineType(types: !1705)
!1705 = !{!35, !1692}
!1706 = !DISubprogram(name: "serialLock", linkageName: "_ZN6Cicada13SimCommDevice10serialLockEv", scope: !1679, file: !1678, line: 64, type: !1704, scopeLine: 64, containingType: !1679, virtualIndex: 16, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1707 = !DISubprogram(name: "serialUnlock", linkageName: "_ZN6Cicada13SimCommDevice12serialUnlockEv", scope: !1679, file: !1678, line: 69, type: !1697, scopeLine: 69, containingType: !1679, virtualIndex: 17, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1708 = !DISubprogram(name: "requestRSSI", linkageName: "_ZN6Cicada13SimCommDevice11requestRSSIEv", scope: !1679, file: !1678, line: 75, type: !1697, scopeLine: 75, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1709 = !DISubprogram(name: "getRSSI", linkageName: "_ZN6Cicada13SimCommDevice7getRSSIEv", scope: !1679, file: !1678, line: 86, type: !1710, scopeLine: 86, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1710 = !DISubroutineType(types: !1711)
!1711 = !{!87, !1692}
!1712 = !DISubprogram(name: "requestIDString", linkageName: "_ZN6Cicada13SimCommDevice15requestIDStringENS0_13RequestIDTypeE", scope: !1679, file: !1678, line: 95, type: !1713, scopeLine: 95, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1713 = !DISubroutineType(types: !1714)
!1714 = !{null, !1692, !1677}
!1715 = !DISubprogram(name: "getIDString", linkageName: "_ZN6Cicada13SimCommDevice11getIDStringEv", scope: !1679, file: !1678, line: 105, type: !1716, scopeLine: 105, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1716 = !DISubroutineType(types: !1717)
!1717 = !{!261, !1692}
!1718 = !DISubprogram(name: "fillLineBuffer", linkageName: "_ZN6Cicada13SimCommDevice14fillLineBufferEv", scope: !1679, file: !1678, line: 108, type: !1704, scopeLine: 108, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1719 = !DISubprogram(name: "parseDnsReply", linkageName: "_ZN6Cicada13SimCommDevice13parseDnsReplyEv", scope: !1679, file: !1678, line: 109, type: !1704, scopeLine: 109, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1720 = !DISubprogram(name: "parseCiprxget4", linkageName: "_ZN6Cicada13SimCommDevice14parseCiprxget4Ev", scope: !1679, file: !1678, line: 110, type: !1704, scopeLine: 110, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1721 = !DISubprogram(name: "parseCiprxget2", linkageName: "_ZN6Cicada13SimCommDevice14parseCiprxget2Ev", scope: !1679, file: !1678, line: 111, type: !1704, scopeLine: 111, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1722 = !DISubprogram(name: "parseCsq", linkageName: "_ZN6Cicada13SimCommDevice8parseCsqEv", scope: !1679, file: !1678, line: 112, type: !1704, scopeLine: 112, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1723 = !DISubprogram(name: "parseIDReply", linkageName: "_ZN6Cicada13SimCommDevice12parseIDReplyEv", scope: !1679, file: !1678, line: 113, type: !1704, scopeLine: 113, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1724 = !DISubprogram(name: "checkConnectionState", linkageName: "_ZN6Cicada13SimCommDevice20checkConnectionStateEPKc", scope: !1679, file: !1678, line: 114, type: !1701, scopeLine: 114, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1725 = !DISubprogram(name: "sendDnsQuery", linkageName: "_ZN6Cicada13SimCommDevice12sendDnsQueryEv", scope: !1679, file: !1678, line: 115, type: !1704, scopeLine: 115, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1726 = !DISubprogram(name: "sendCipstart", linkageName: "_ZN6Cicada13SimCommDevice12sendCipstartEPKc", scope: !1679, file: !1678, line: 116, type: !1701, scopeLine: 116, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1727 = !DISubprogram(name: "sendCiprxget2", linkageName: "_ZN6Cicada13SimCommDevice13sendCiprxget2Ev", scope: !1679, file: !1678, line: 117, type: !1704, scopeLine: 117, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1728 = !DISubprogram(name: "sendIDRequest", linkageName: "_ZN6Cicada13SimCommDevice13sendIDRequestEPKc", scope: !1679, file: !1678, line: 118, type: !1729, scopeLine: 118, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1729 = !DISubroutineType(types: !1730)
!1730 = !{!35, !1692, !799}
!1731 = !{!1732, !1733, !1734, !1735, !1736, !1737}
!1732 = !DIEnumerator(name: "noRequest", value: 0, isUnsigned: true)
!1733 = !DIEnumerator(name: "manufacturer", value: 1, isUnsigned: true)
!1734 = !DIEnumerator(name: "model", value: 2, isUnsigned: true)
!1735 = !DIEnumerator(name: "imei", value: 3, isUnsigned: true)
!1736 = !DIEnumerator(name: "imsi", value: 4, isUnsigned: true)
!1737 = !DIEnumerator(name: "iccid", value: 5, isUnsigned: true)
!1738 = !{!847, !7, !1677, !1679}
!1739 = !{!168, !174, !178, !181, !185, !188, !190, !192, !194, !197, !200, !203, !206, !209, !212, !213, !214, !215, !219, !221, !223, !225, !227, !230, !233, !236, !239, !242, !980, !985, !989, !993, !1000, !1004, !1015, !1019, !1024, !1100, !1102, !1107, !1111, !1113, !1115, !1117, !1119, !1124, !1128, !1132, !1136, !1140, !1144, !1148, !1152, !1154, !1158, !1164, !1168, !1174, !1176, !1178, !1182, !1186, !1188, !1192, !1196, !1198, !1202, !1204, !1206, !1210, !1214, !1218, !1222, !1226, !1230, !1740, !1746, !1750, !1250, !1754, !1756, !1758, !1762, !1267, !1766, !1767, !1768, !1769, !1272, !1281, !1285, !1289, !1291, !1295, !1299, !1301, !1303, !1305, !1309, !1313, !1317, !1321, !1325, !1327, !1329, !1331, !1335, !1339, !1343, !1345, !1770}
!1740 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1741, file: !1099, line: 144)
!1741 = !DISubprogram(name: "vfprintf", scope: !1026, file: !1026, line: 206, type: !1742, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1742 = !DISubroutineType(types: !1743)
!1743 = !{!24, !1106, !799, !1744}
!1744 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1237, line: 32, baseType: !1745)
!1745 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1241, baseType: !1240)
!1746 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1747, file: !1099, line: 145)
!1747 = !DISubprogram(name: "vprintf", scope: !1026, file: !1026, line: 208, type: !1748, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1748 = !DISubroutineType(types: !1749)
!1749 = !{!24, !799, !1744}
!1750 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1751, file: !1099, line: 146)
!1751 = !DISubprogram(name: "vsprintf", scope: !1026, file: !1026, line: 210, type: !1752, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1752 = !DISubroutineType(types: !1753)
!1753 = !{!24, !261, !799, !1744}
!1754 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1251, entity: !1755, file: !1099, line: 176)
!1755 = !DISubprogram(name: "vfscanf", scope: !1026, file: !1026, line: 270, type: !1742, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1756 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1251, entity: !1757, file: !1099, line: 177)
!1757 = !DISubprogram(name: "vscanf", scope: !1026, file: !1026, line: 272, type: !1748, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1758 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1251, entity: !1759, file: !1099, line: 178)
!1759 = !DISubprogram(name: "vsnprintf", scope: !1026, file: !1026, line: 268, type: !1760, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1760 = !DISubroutineType(types: !1761)
!1761 = !{!24, !261, !255, !799, !1744}
!1762 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1251, entity: !1763, file: !1099, line: 179)
!1763 = !DISubprogram(name: "vsscanf", scope: !1026, file: !1026, line: 274, type: !1764, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{!24, !799, !799, !1744}
!1766 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1755, file: !1099, line: 186)
!1767 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1757, file: !1099, line: 187)
!1768 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1759, file: !1099, line: 188)
!1769 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1763, file: !1099, line: 189)
!1770 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1674, entity: !17, file: !1675, line: 30)
!1771 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1772, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1773, retainedTypes: !1823, globals: !1824, imports: !1828, splitDebugInlining: false, nameTableKind: None)
!1772 = !DIFile(filename: "../cicada/commdevices/sim7x00.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e3a1f48206d5866dbd909de4a725c52c")
!1773 = !{!1774, !1812, !1536, !1566}
!1774 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "SendState", scope: !1776, file: !1775, line: 124, baseType: !7, size: 32, elements: !1791, identifier: "_ZTSN6Cicada17Sim7x00CommDevice9SendStateE")
!1775 = !DIFile(filename: "../cicada/commdevices/sim7x00.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "30d5ae4b8933cfe435d43c0ed0910d29")
!1776 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Sim7x00CommDevice", scope: !17, file: !1775, line: 37, size: 2304, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1777, vtableHolder: !824)
!1777 = !{!1778, !1780, !1781, !1785, !1788}
!1778 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1776, baseType: !1779, flags: DIFlagPublic, extraData: i32 0)
!1779 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "SimCommDevice", scope: !17, file: !1678, line: 33, size: 2240, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada13SimCommDeviceE")
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "iccidCommand", scope: !1776, file: !1775, line: 148, baseType: !799, size: 32, offset: 2240)
!1781 = !DISubprogram(name: "Sim7x00CommDevice", scope: !1776, file: !1775, line: 43, type: !1782, scopeLine: 43, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1782 = !DISubroutineType(types: !1783)
!1783 = !{null, !1784, !863, !86, !86, !774}
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1785 = !DISubprogram(name: "Sim7x00CommDevice", scope: !1776, file: !1775, line: 46, type: !1786, scopeLine: 46, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1786 = !DISubroutineType(types: !1787)
!1787 = !{null, !1784, !863, !86, !86, !774, !774}
!1788 = !DISubprogram(name: "run", linkageName: "_ZN6Cicada17Sim7x00CommDevice3runEv", scope: !1776, file: !1775, line: 109, type: !1789, scopeLine: 109, containingType: !1776, virtualIndex: 18, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1789 = !DISubroutineType(types: !1790)
!1790 = !{null, !1784}
!1791 = !{!1664, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811}
!1792 = !DIEnumerator(name: "serialError", value: 1, isUnsigned: true)
!1793 = !DIEnumerator(name: "dnsError", value: 2, isUnsigned: true)
!1794 = !DIEnumerator(name: "connecting", value: 3, isUnsigned: true)
!1795 = !DIEnumerator(name: "sendCgsockcont", value: 4, isUnsigned: true)
!1796 = !DIEnumerator(name: "sendCsocksetpn", value: 5, isUnsigned: true)
!1797 = !DIEnumerator(name: "sendCipmode", value: 6, isUnsigned: true)
!1798 = !DIEnumerator(name: "sendNetopen", value: 7, isUnsigned: true)
!1799 = !DIEnumerator(name: "sendCiprxget", value: 8, isUnsigned: true)
!1800 = !DIEnumerator(name: "sendDnsQuery", value: 9, isUnsigned: true)
!1801 = !DIEnumerator(name: "sendCipopen", value: 10, isUnsigned: true)
!1802 = !DIEnumerator(name: "finalizeConnect", value: 11, isUnsigned: true)
!1803 = !DIEnumerator(name: "connected", value: 12, isUnsigned: true)
!1804 = !DIEnumerator(name: "sendData", value: 13, isUnsigned: true)
!1805 = !DIEnumerator(name: "sendCiprxget4", value: 14, isUnsigned: true)
!1806 = !DIEnumerator(name: "sendCiprxget2", value: 15, isUnsigned: true)
!1807 = !DIEnumerator(name: "waitReceive", value: 16, isUnsigned: true)
!1808 = !DIEnumerator(name: "receiving", value: 17, isUnsigned: true)
!1809 = !DIEnumerator(name: "ipUnconnected", value: 18, isUnsigned: true)
!1810 = !DIEnumerator(name: "sendNetclose", value: 19, isUnsigned: true)
!1811 = !DIEnumerator(name: "finalizeDisconnect", value: 20, isUnsigned: true)
!1812 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReplyState", scope: !1776, file: !1775, line: 112, baseType: !7, size: 32, elements: !1813, identifier: "_ZTSN6Cicada17Sim7x00CommDevice10ReplyStateE")
!1813 = !{!1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822}
!1814 = !DIEnumerator(name: "okReply", value: 0, isUnsigned: true)
!1815 = !DIEnumerator(name: "csq", value: 1, isUnsigned: true)
!1816 = !DIEnumerator(name: "requestID", value: 2, isUnsigned: true)
!1817 = !DIEnumerator(name: "expectConnect", value: 3, isUnsigned: true)
!1818 = !DIEnumerator(name: "netopen", value: 4, isUnsigned: true)
!1819 = !DIEnumerator(name: "cdnsgip", value: 5, isUnsigned: true)
!1820 = !DIEnumerator(name: "cipopen", value: 6, isUnsigned: true)
!1821 = !DIEnumerator(name: "ciprxget4", value: 7, isUnsigned: true)
!1822 = !DIEnumerator(name: "ciprxget2", value: 8, isUnsigned: true)
!1823 = !{!847, !1776}
!1824 = !{!1825}
!1825 = !DIGlobalVariableExpression(var: !1826, expr: !DIExpression(DW_OP_constu, 1500, DW_OP_stack_value))
!1826 = distinct !DIGlobalVariable(name: "SIM7x00_MAX_RX", scope: !1771, file: !1772, line: 33, type: !1827, isLocal: true, isDefinition: true)
!1827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !26)
!1828 = !{!168, !174, !178, !181, !185, !188, !190, !192, !194, !197, !200, !203, !206, !209, !212, !213, !214, !215, !219, !221, !223, !225, !227, !230, !233, !236, !239, !242, !1019, !1024, !1100, !1102, !1107, !1111, !1113, !1115, !1117, !1119, !1124, !1128, !1132, !1136, !1140, !1144, !1148, !1152, !1154, !1158, !1164, !1168, !1174, !1176, !1178, !1182, !1186, !1188, !1192, !1196, !1198, !1202, !1204, !1206, !1210, !1214, !1218, !1222, !1226, !1230, !1829, !1836, !1840, !1250, !1844, !1846, !1848, !1852, !1267, !1856, !1857, !1858, !1859, !1272, !1281, !1285, !1289, !1291, !1295, !1299, !1301, !1303, !1305, !1309, !1313, !1317, !1321, !1325, !1327, !1329, !1331, !1335, !1339, !1343, !1345, !1860}
!1829 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1830, file: !1099, line: 144)
!1830 = !DISubprogram(name: "vfprintf", scope: !1026, file: !1026, line: 206, type: !1831, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1831 = !DISubroutineType(types: !1832)
!1832 = !{!24, !1106, !799, !1833}
!1833 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1237, line: 32, baseType: !1834)
!1834 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1835, baseType: !1240)
!1835 = !DIFile(filename: "../cicada/commdevices/sim7x00.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build")
!1836 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1837, file: !1099, line: 145)
!1837 = !DISubprogram(name: "vprintf", scope: !1026, file: !1026, line: 208, type: !1838, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1838 = !DISubroutineType(types: !1839)
!1839 = !{!24, !799, !1833}
!1840 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1841, file: !1099, line: 146)
!1841 = !DISubprogram(name: "vsprintf", scope: !1026, file: !1026, line: 210, type: !1842, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1842 = !DISubroutineType(types: !1843)
!1843 = !{!24, !261, !799, !1833}
!1844 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1251, entity: !1845, file: !1099, line: 176)
!1845 = !DISubprogram(name: "vfscanf", scope: !1026, file: !1026, line: 270, type: !1831, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1846 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1251, entity: !1847, file: !1099, line: 177)
!1847 = !DISubprogram(name: "vscanf", scope: !1026, file: !1026, line: 272, type: !1838, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1848 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1251, entity: !1849, file: !1099, line: 178)
!1849 = !DISubprogram(name: "vsnprintf", scope: !1026, file: !1026, line: 268, type: !1850, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1850 = !DISubroutineType(types: !1851)
!1851 = !{!24, !261, !255, !799, !1833}
!1852 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1251, entity: !1853, file: !1099, line: 179)
!1853 = !DISubprogram(name: "vsscanf", scope: !1026, file: !1026, line: 274, type: !1854, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1854 = !DISubroutineType(types: !1855)
!1855 = !{!24, !799, !799, !1833}
!1856 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1845, file: !1099, line: 186)
!1857 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1847, file: !1099, line: 187)
!1858 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1849, file: !1099, line: 188)
!1859 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !169, entity: !1853, file: !1099, line: 189)
!1860 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1771, entity: !17, file: !1772, line: 31)
!1861 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1862, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1863, imports: !1984, splitDebugInlining: false, nameTableKind: None)
!1862 = !DIFile(filename: "../cicada/bufferedserial.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "0c50e54046b616f386000f55e6143c47")
!1863 = !{!1864, !864, !824, !869, !1868, !1872}
!1864 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "BufferedSerial", scope: !17, file: !724, line: 42, size: 832, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1865, vtableHolder: !824)
!1865 = !{!1866, !1867, !1942, !1943, !1947, !1950, !1955, !1956, !1959, !1962, !1965, !1968, !1971, !1974, !1975, !1978, !1981, !1982, !1983}
!1866 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1864, baseType: !864, flags: DIFlagPublic, extraData: i32 0)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "_readBuffer", scope: !1864, file: !724, line: 105, baseType: !1868, size: 384, offset: 64, flags: DIFlagProtected)
!1868 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "LineCircularBuffer", scope: !17, file: !1869, line: 38, size: 384, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1870, vtableHolder: !1872, identifier: "_ZTSN6Cicada18LineCircularBufferE")
!1869 = !DIFile(filename: "../cicada/linecircularbuffer.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "7c64ede70efe975ae69caea246f4ce64")
!1870 = !{!1871, !1916, !1917, !1921, !1924, !1927, !1930, !1933, !1938, !1939}
!1871 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1868, baseType: !1872, flags: DIFlagPublic, extraData: i32 0)
!1872 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "CircularBuffer<char>", scope: !17, file: !1573, line: 39, size: 384, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1873, vtableHolder: !1872, templateParams: !1914, identifier: "_ZTSN6Cicada14CircularBufferIcEE")
!1873 = !{!1575, !1874, !1875, !1876, !1877, !1878, !1879, !1883, !1886, !1889, !1892, !1895, !1898, !1899, !1900, !1905, !1906, !1909, !1910, !1911}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "_writeHead", scope: !1872, file: !1573, line: 196, baseType: !774, size: 64, offset: 64)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "_readHead", scope: !1872, file: !1573, line: 197, baseType: !774, size: 64, offset: 128)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "_availableData", scope: !1872, file: !1573, line: 198, baseType: !774, size: 64, offset: 192)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "_bufferSize", scope: !1872, file: !1573, line: 199, baseType: !1580, size: 64, offset: 256)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "_buffer", scope: !1872, file: !1573, line: 200, baseType: !261, size: 32, offset: 320)
!1879 = !DISubprogram(name: "CircularBuffer", scope: !1872, file: !1573, line: 48, type: !1880, scopeLine: 48, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1880 = !DISubroutineType(types: !1881)
!1881 = !{null, !1882, !261, !774}
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1883 = !DISubprogram(name: "~CircularBuffer", scope: !1872, file: !1573, line: 56, type: !1884, scopeLine: 56, containingType: !1872, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1884 = !DISubroutineType(types: !1885)
!1885 = !{null, !1882}
!1886 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIcE4pushEPKcy", scope: !1872, file: !1573, line: 65, type: !1887, scopeLine: 65, containingType: !1872, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1887 = !DISubroutineType(types: !1888)
!1888 = !{!774, !1882, !799, !774}
!1889 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIcE4pushEc", scope: !1872, file: !1573, line: 88, type: !1890, scopeLine: 88, containingType: !1872, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1890 = !DISubroutineType(types: !1891)
!1891 = !{null, !1882, !164}
!1892 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIcE4pullEPcy", scope: !1872, file: !1573, line: 102, type: !1893, scopeLine: 102, containingType: !1872, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1893 = !DISubroutineType(types: !1894)
!1894 = !{!774, !1882, !261, !774}
!1895 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIcE4pullEv", scope: !1872, file: !1573, line: 124, type: !1896, scopeLine: 124, containingType: !1872, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1896 = !DISubroutineType(types: !1897)
!1897 = !{!164, !1882}
!1898 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada14CircularBufferIcE4readEv", scope: !1872, file: !1573, line: 140, type: !1896, scopeLine: 140, containingType: !1872, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1899 = !DISubprogram(name: "flush", linkageName: "_ZN6Cicada14CircularBufferIcE5flushEv", scope: !1872, file: !1573, line: 148, type: !1884, scopeLine: 148, containingType: !1872, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1900 = !DISubprogram(name: "isEmpty", linkageName: "_ZNK6Cicada14CircularBufferIcE7isEmptyEv", scope: !1872, file: !1573, line: 158, type: !1901, scopeLine: 158, containingType: !1872, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1901 = !DISubroutineType(types: !1902)
!1902 = !{!35, !1903}
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1872)
!1905 = !DISubprogram(name: "isFull", linkageName: "_ZNK6Cicada14CircularBufferIcE6isFullEv", scope: !1872, file: !1573, line: 166, type: !1901, scopeLine: 166, containingType: !1872, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1906 = !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv", scope: !1872, file: !1573, line: 174, type: !1907, scopeLine: 174, containingType: !1872, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1907 = !DISubroutineType(types: !1908)
!1908 = !{!774, !1903}
!1909 = !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv", scope: !1872, file: !1573, line: 182, type: !1907, scopeLine: 182, containingType: !1872, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1910 = !DISubprogram(name: "size", linkageName: "_ZNK6Cicada14CircularBufferIcE4sizeEv", scope: !1872, file: !1573, line: 190, type: !1907, scopeLine: 190, containingType: !1872, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1911 = !DISubprogram(name: "incrementOrResetHead", linkageName: "_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy", scope: !1872, file: !1573, line: 202, type: !1912, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1912 = !DISubroutineType(types: !1913)
!1913 = !{null, !1882, !1619}
!1914 = !{!1915}
!1915 = !DITemplateTypeParameter(name: "T", type: !164)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "_bufferedLines", scope: !1868, file: !1869, line: 130, baseType: !26, size: 16, offset: 352)
!1917 = !DISubprogram(name: "LineCircularBuffer", scope: !1868, file: !1869, line: 41, type: !1918, scopeLine: 41, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1918 = !DISubroutineType(types: !1919)
!1919 = !{null, !1920, !261, !774}
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1921 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada18LineCircularBuffer4pushEPKcy", scope: !1868, file: !1869, line: 46, type: !1922, scopeLine: 46, containingType: !1868, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1922 = !DISubroutineType(types: !1923)
!1923 = !{!774, !1920, !799, !774}
!1924 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada18LineCircularBuffer4pushEc", scope: !1868, file: !1869, line: 60, type: !1925, scopeLine: 60, containingType: !1868, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1925 = !DISubroutineType(types: !1926)
!1926 = !{null, !1920, !164}
!1927 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada18LineCircularBuffer4pullEPcy", scope: !1868, file: !1869, line: 69, type: !1928, scopeLine: 69, containingType: !1868, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1928 = !DISubroutineType(types: !1929)
!1929 = !{!774, !1920, !261, !774}
!1930 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada18LineCircularBuffer4pullEv", scope: !1868, file: !1869, line: 83, type: !1931, scopeLine: 83, containingType: !1868, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1931 = !DISubroutineType(types: !1932)
!1932 = !{!164, !1920}
!1933 = !DISubprogram(name: "numBufferedLines", linkageName: "_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv", scope: !1868, file: !1869, line: 97, type: !1934, scopeLine: 97, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1934 = !DISubroutineType(types: !1935)
!1935 = !{!26, !1936}
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1937 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1868)
!1938 = !DISubprogram(name: "readLine", linkageName: "_ZN6Cicada18LineCircularBuffer8readLineEPcy", scope: !1868, file: !1869, line: 108, type: !1928, scopeLine: 108, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1939 = !DISubprogram(name: "flush", linkageName: "_ZN6Cicada18LineCircularBuffer5flushEv", scope: !1868, file: !1869, line: 123, type: !1940, scopeLine: 123, containingType: !1868, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1940 = !DISubroutineType(types: !1941)
!1941 = !{null, !1920}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "_writeBuffer", scope: !1864, file: !724, line: 106, baseType: !1868, size: 384, offset: 448, flags: DIFlagProtected)
!1943 = !DISubprogram(name: "BufferedSerial", scope: !1864, file: !724, line: 54, type: !1944, scopeLine: 54, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1944 = !DISubroutineType(types: !1945)
!1945 = !{null, !1946, !261, !261, !774, !774}
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1947 = !DISubprogram(name: "BufferedSerial", scope: !1864, file: !724, line: 64, type: !1948, scopeLine: 64, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1948 = !DISubroutineType(types: !1949)
!1949 = !{null, !1946, !261, !261, !774}
!1950 = !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14BufferedSerial14bytesAvailableEv", scope: !1864, file: !724, line: 66, type: !1951, scopeLine: 66, containingType: !1864, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1951 = !DISubroutineType(types: !1952)
!1952 = !{!774, !1953}
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1864)
!1955 = !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14BufferedSerial14spaceAvailableEv", scope: !1864, file: !724, line: 68, type: !1951, scopeLine: 68, containingType: !1864, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1956 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada14BufferedSerial4readEPhy", scope: !1864, file: !724, line: 70, type: !1957, scopeLine: 70, containingType: !1864, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1957 = !DISubroutineType(types: !1958)
!1958 = !{!774, !1946, !86, !774}
!1959 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada14BufferedSerial4readEv", scope: !1864, file: !724, line: 72, type: !1960, scopeLine: 72, containingType: !1864, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1960 = !DISubroutineType(types: !1961)
!1961 = !{!87, !1946}
!1962 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEPKhy", scope: !1864, file: !724, line: 74, type: !1963, scopeLine: 74, containingType: !1864, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1963 = !DISubroutineType(types: !1964)
!1964 = !{!774, !1946, !847, !774}
!1965 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEPKh", scope: !1864, file: !724, line: 76, type: !1966, scopeLine: 76, containingType: !1864, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1966 = !DISubroutineType(types: !1967)
!1967 = !{!774, !1946, !847}
!1968 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEh", scope: !1864, file: !724, line: 78, type: !1969, scopeLine: 78, containingType: !1864, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1969 = !DISubroutineType(types: !1970)
!1970 = !{null, !1946, !87}
!1971 = !DISubprogram(name: "canReadLine", linkageName: "_ZNK6Cicada14BufferedSerial11canReadLineEv", scope: !1864, file: !724, line: 80, type: !1972, scopeLine: 80, containingType: !1864, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1972 = !DISubroutineType(types: !1973)
!1973 = !{!35, !1953}
!1974 = !DISubprogram(name: "readLine", linkageName: "_ZN6Cicada14BufferedSerial8readLineEPhy", scope: !1864, file: !724, line: 91, type: !1957, scopeLine: 91, containingType: !1864, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1975 = !DISubprogram(name: "flushReceiveBuffers", linkageName: "_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv", scope: !1864, file: !724, line: 93, type: !1976, scopeLine: 93, containingType: !1864, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1976 = !DISubroutineType(types: !1977)
!1977 = !{null, !1946}
!1978 = !DISubprogram(name: "readBufferSize", linkageName: "_ZN6Cicada14BufferedSerial14readBufferSizeEv", scope: !1864, file: !724, line: 95, type: !1979, scopeLine: 95, containingType: !1864, virtualIndex: 13, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1979 = !DISubroutineType(types: !1980)
!1980 = !{!774, !1946}
!1981 = !DISubprogram(name: "writeBufferSize", linkageName: "_ZN6Cicada14BufferedSerial15writeBufferSizeEv", scope: !1864, file: !724, line: 96, type: !1979, scopeLine: 96, containingType: !1864, virtualIndex: 14, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1982 = !DISubprogram(name: "transferToAndFromBuffer", linkageName: "_ZN6Cicada14BufferedSerial23transferToAndFromBufferEv", scope: !1864, file: !724, line: 102, type: !1976, scopeLine: 102, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1983 = !DISubprogram(name: "copyToBuffer", linkageName: "_ZN6Cicada14BufferedSerial12copyToBufferEh", scope: !1864, file: !724, line: 109, type: !1969, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1984 = !{!168, !174, !178, !181, !185, !188, !190, !192, !194, !197, !200, !203, !206, !209, !212, !213, !214, !215, !219, !221, !223, !225, !227, !230, !233, !236, !239, !242, !1985}
!1985 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1861, entity: !17, file: !1862, line: 28)
!1986 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1987, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1987 = !DIFile(filename: "../cicada/platform/stm32f1/irq_stm32.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e34a510e3cc4f838fcfeb73936339393")
!1988 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1989, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1990, retainedTypes: !2011, splitDebugInlining: false, nameTableKind: None)
!1989 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "16c165b28ca3d4a5c8d7d66f2c899e26")
!1990 = !{!395, !1991, !1995, !2001, !316}
!1991 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 52, baseType: !7, size: 32, elements: !1992)
!1992 = !{!1993, !1994}
!1993 = !DIEnumerator(name: "HAL_UNLOCKED", value: 0)
!1994 = !DIEnumerator(name: "HAL_LOCKED", value: 1)
!1995 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !755, line: 78, baseType: !7, size: 32, elements: !1996)
!1996 = !{!1997, !1998, !1999, !2000}
!1997 = !DIEnumerator(name: "HAL_DMA_STATE_RESET", value: 0)
!1998 = !DIEnumerator(name: "HAL_DMA_STATE_READY", value: 1)
!1999 = !DIEnumerator(name: "HAL_DMA_STATE_BUSY", value: 2)
!2000 = !DIEnumerator(name: "HAL_DMA_STATE_TIMEOUT", value: 3)
!2001 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !630, line: 117, baseType: !7, size: 32, elements: !2002)
!2002 = !{!2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010}
!2003 = !DIEnumerator(name: "HAL_UART_STATE_RESET", value: 0)
!2004 = !DIEnumerator(name: "HAL_UART_STATE_READY", value: 32)
!2005 = !DIEnumerator(name: "HAL_UART_STATE_BUSY", value: 36)
!2006 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_TX", value: 33)
!2007 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_RX", value: 34)
!2008 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_TX_RX", value: 35)
!2009 = !DIEnumerator(name: "HAL_UART_STATE_TIMEOUT", value: 160)
!2010 = !DIEnumerator(name: "HAL_UART_STATE_ERROR", value: 224)
!2011 = !{!104, !32, !2012, !26, !87, !137, !2013, !2014, !2048, !2019}
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_UART_StateTypeDef", file: !630, line: 136, baseType: !2001)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 32)
!2015 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_HandleTypeDef", file: !630, line: 189, baseType: !2016)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__UART_HandleTypeDef", file: !630, line: 141, size: 576, elements: !2017)
!2017 = !{!2018, !2030, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2094, !2095, !2096, !2098, !2099}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "Instance", scope: !2016, file: !630, line: 143, baseType: !2019, size: 32)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 32)
!2020 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !68, line: 516, baseType: !2021)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !68, line: 507, size: 224, elements: !2022)
!2022 = !{!2023, !2024, !2025, !2026, !2027, !2028, !2029}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2021, file: !68, line: 509, baseType: !72, size: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !2021, file: !68, line: 510, baseType: !72, size: 32, offset: 32)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !2021, file: !68, line: 511, baseType: !72, size: 32, offset: 64)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !2021, file: !68, line: 512, baseType: !72, size: 32, offset: 96)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !2021, file: !68, line: 513, baseType: !72, size: 32, offset: 128)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !2021, file: !68, line: 514, baseType: !72, size: 32, offset: 160)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !2021, file: !68, line: 515, baseType: !72, size: 32, offset: 192)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "Init", scope: !2016, file: !630, line: 145, baseType: !2031, size: 224, offset: 32)
!2031 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_InitTypeDef", file: !630, line: 76, baseType: !2032)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !630, line: 47, size: 224, elements: !2033)
!2033 = !{!2034, !2035, !2036, !2037, !2038, !2039, !2040}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "BaudRate", scope: !2032, file: !630, line: 49, baseType: !32, size: 32)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "WordLength", scope: !2032, file: !630, line: 54, baseType: !32, size: 32, offset: 32)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "StopBits", scope: !2032, file: !630, line: 57, baseType: !32, size: 32, offset: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "Parity", scope: !2032, file: !630, line: 60, baseType: !32, size: 32, offset: 96)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !2032, file: !630, line: 67, baseType: !32, size: 32, offset: 128)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "HwFlowCtl", scope: !2032, file: !630, line: 70, baseType: !32, size: 32, offset: 160)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "OverSampling", scope: !2032, file: !630, line: 73, baseType: !32, size: 32, offset: 192)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "pTxBuffPtr", scope: !2016, file: !630, line: 147, baseType: !86, size: 32, offset: 256)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "TxXferSize", scope: !2016, file: !630, line: 149, baseType: !26, size: 16, offset: 288)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "TxXferCount", scope: !2016, file: !630, line: 151, baseType: !748, size: 16, offset: 304)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "pRxBuffPtr", scope: !2016, file: !630, line: 153, baseType: !86, size: 32, offset: 320)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "RxXferSize", scope: !2016, file: !630, line: 155, baseType: !26, size: 16, offset: 352)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "RxXferCount", scope: !2016, file: !630, line: 157, baseType: !748, size: 16, offset: 368)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "hdmatx", scope: !2016, file: !630, line: 159, baseType: !2048, size: 32, offset: 384)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 32)
!2049 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_HandleTypeDef", file: !755, line: 137, baseType: !2050)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__DMA_HandleTypeDef", file: !755, line: 111, size: 576, elements: !2051)
!2051 = !{!2052, !2061, !2072, !2074, !2076, !2077, !2082, !2083, !2084, !2085, !2086, !2093}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "Instance", scope: !2050, file: !755, line: 113, baseType: !2053, size: 32)
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 32)
!2054 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_Channel_TypeDef", file: !68, line: 297, baseType: !2055)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !68, line: 291, size: 128, elements: !2056)
!2056 = !{!2057, !2058, !2059, !2060}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2055, file: !68, line: 293, baseType: !72, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "CNDTR", scope: !2055, file: !68, line: 294, baseType: !72, size: 32, offset: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "CPAR", scope: !2055, file: !68, line: 295, baseType: !72, size: 32, offset: 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "CMAR", scope: !2055, file: !68, line: 296, baseType: !72, size: 32, offset: 96)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "Init", scope: !2050, file: !755, line: 115, baseType: !2062, size: 224, offset: 32)
!2062 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_InitTypeDef", file: !755, line: 73, baseType: !2063)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !755, line: 48, size: 224, elements: !2064)
!2064 = !{!2065, !2066, !2067, !2068, !2069, !2070, !2071}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "Direction", scope: !2063, file: !755, line: 50, baseType: !32, size: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphInc", scope: !2063, file: !755, line: 54, baseType: !32, size: 32, offset: 32)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "MemInc", scope: !2063, file: !755, line: 57, baseType: !32, size: 32, offset: 64)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphDataAlignment", scope: !2063, file: !755, line: 60, baseType: !32, size: 32, offset: 96)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "MemDataAlignment", scope: !2063, file: !755, line: 63, baseType: !32, size: 32, offset: 128)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !2063, file: !755, line: 66, baseType: !32, size: 32, offset: 160)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "Priority", scope: !2063, file: !755, line: 71, baseType: !32, size: 32, offset: 192)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "Lock", scope: !2050, file: !755, line: 117, baseType: !2073, size: 32, offset: 256)
!2073 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_LockTypeDef", file: !6, line: 56, baseType: !1991)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "State", scope: !2050, file: !755, line: 119, baseType: !2075, size: 32, offset: 288)
!2075 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_DMA_StateTypeDef", file: !755, line: 84, baseType: !1995)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "Parent", scope: !2050, file: !755, line: 121, baseType: !104, size: 32, offset: 320)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "XferCpltCallback", scope: !2050, file: !755, line: 123, baseType: !2078, size: 32, offset: 352)
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 32)
!2079 = !DISubroutineType(types: !2080)
!2080 = !{null, !2081}
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 32)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "XferHalfCpltCallback", scope: !2050, file: !755, line: 125, baseType: !2078, size: 32, offset: 384)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "XferErrorCallback", scope: !2050, file: !755, line: 127, baseType: !2078, size: 32, offset: 416)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "XferAbortCallback", scope: !2050, file: !755, line: 129, baseType: !2078, size: 32, offset: 448)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "ErrorCode", scope: !2050, file: !755, line: 131, baseType: !72, size: 32, offset: 480)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "DmaBaseAddress", scope: !2050, file: !755, line: 133, baseType: !2087, size: 32, offset: 512)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_TypeDef", file: !68, line: 303, baseType: !2089)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !68, line: 299, size: 64, elements: !2090)
!2090 = !{!2091, !2092}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !2089, file: !68, line: 301, baseType: !72, size: 32)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "IFCR", scope: !2089, file: !68, line: 302, baseType: !72, size: 32, offset: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "ChannelIndex", scope: !2050, file: !755, line: 135, baseType: !32, size: 32, offset: 544)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "hdmarx", scope: !2016, file: !630, line: 161, baseType: !2048, size: 32, offset: 416)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "Lock", scope: !2016, file: !630, line: 163, baseType: !2073, size: 32, offset: 448)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "gState", scope: !2016, file: !630, line: 165, baseType: !2097, size: 32, offset: 480)
!2097 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2013)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "RxState", scope: !2016, file: !630, line: 169, baseType: !2097, size: 32, offset: 512)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "ErrorCode", scope: !2016, file: !630, line: 172, baseType: !72, size: 32, offset: 544)
!2100 = !{!"Ubuntu clang version 14.0.6"}
!2101 = !{i32 7, !"Dwarf Version", i32 5}
!2102 = !{i32 2, !"Debug Info Version", i32 3}
!2103 = !{i32 1, !"wchar_size", i32 4}
!2104 = !{i32 1, !"min_enum_size", i32 4}
!2105 = !{i32 1, !"branch-target-enforcement", i32 0}
!2106 = !{i32 1, !"sign-return-address", i32 0}
!2107 = !{i32 1, !"sign-return-address-all", i32 0}
!2108 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2109 = !{i32 7, !"frame-pointer", i32 2}
!2110 = distinct !DISubprogram(name: "runTask", linkageName: "_Z7runTaskPv", scope: !3, file: !3, line: 30, type: !2111, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2113)
!2111 = !DISubroutineType(types: !2112)
!2112 = !{null, !104}
!2113 = !{!2114, !2115}
!2114 = !DILocalVariable(name: "parameters", arg: 1, scope: !2110, file: !3, line: 30, type: !104)
!2115 = !DILocalVariable(name: "t", scope: !2110, file: !3, line: 32, type: !14)
!2116 = !DILocation(line: 0, scope: !2110)
!2117 = !DILocation(line: 32, column: 15, scope: !2110)
!2118 = !DILocation(line: 34, column: 5, scope: !2110)
!2119 = !DILocation(line: 35, column: 12, scope: !2120)
!2120 = distinct !DILexicalBlock(scope: !2110, file: !3, line: 34, column: 18)
!2121 = !{!2122, !2122, i64 0}
!2122 = !{!"vtable pointer", !2123, i64 0}
!2123 = !{!"Simple C++ TBAA"}
!2124 = !DILocation(line: 36, column: 23, scope: !2120)
!2125 = !DILocation(line: 36, column: 20, scope: !2120)
!2126 = !DILocation(line: 36, column: 9, scope: !2120)
!2127 = distinct !{!2127, !2118, !2128, !2129, !2130}
!2128 = !DILocation(line: 37, column: 5, scope: !2110)
!2129 = !{!"llvm.loop.mustprogress"}
!2130 = !{!"llvm.loop.unroll.disable"}
!2131 = distinct !DISubprogram(name: "delay", linkageName: "_ZNK6Cicada4Task5delayEv", scope: !15, file: !16, line: 203, type: !45, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, declaration: !44, retainedNodes: !2132)
!2132 = !{!2133}
!2133 = !DILocalVariable(name: "this", arg: 1, scope: !2131, type: !2134, flags: DIFlagArtificial | DIFlagObjectPointer)
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 32)
!2135 = !DILocation(line: 0, scope: !2131)
!2136 = !DILocation(line: 205, column: 16, scope: !2131)
!2137 = !{!2138, !2139, i64 4}
!2138 = !{!"_ZTSN6Cicada4TaskE", !2139, i64 4, !2141, i64 8, !2142, i64 12, !2141, i64 16}
!2139 = !{!"short", !2140, i64 0}
!2140 = !{!"omnipotent char", !2123, i64 0}
!2141 = !{!"int", !2140, i64 0}
!2142 = !{!"bool", !2140, i64 0}
!2143 = !DILocation(line: 205, column: 9, scope: !2131)
!2144 = distinct !DISubprogram(name: "ipCommTask", linkageName: "_Z10ipCommTaskPv", scope: !3, file: !3, line: 40, type: !2111, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2145)
!2145 = !{!2146, !2147, !2148, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2162, !2163, !2165, !2169, !2171, !2179, !2180}
!2146 = !DILocalVariable(name: "parameters", arg: 1, scope: !2144, file: !3, line: 40, type: !104)
!2147 = !DILocalVariable(name: "serialBufferSize", scope: !2144, file: !3, line: 42, type: !1827)
!2148 = !DILocalVariable(name: "readBufferDebug", scope: !2144, file: !3, line: 43, type: !2149)
!2149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 12032, elements: !2150)
!2150 = !{!2151}
!2151 = !DISubrange(count: 1504)
!2152 = !DILocalVariable(name: "writeBufferDebug", scope: !2144, file: !3, line: 44, type: !2149)
!2153 = !DILocalVariable(name: "debug", scope: !2144, file: !3, line: 45, type: !154)
!2154 = !DILocalVariable(name: "readBufferSerial", scope: !2144, file: !3, line: 48, type: !2149)
!2155 = !DILocalVariable(name: "writeBufferSerial", scope: !2144, file: !3, line: 49, type: !2149)
!2156 = !DILocalVariable(name: "serial", scope: !2144, file: !3, line: 50, type: !154)
!2157 = !DILocalVariable(name: "commBufferSize", scope: !2144, file: !3, line: 53, type: !1827)
!2158 = !DILocalVariable(name: "commReadBuffer", scope: !2144, file: !3, line: 54, type: !2159)
!2159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !87, size: 9600, elements: !2160)
!2160 = !{!2161}
!2161 = !DISubrange(count: 1200)
!2162 = !DILocalVariable(name: "commWriteBuffer", scope: !2144, file: !3, line: 55, type: !2159)
!2163 = !DILocalVariable(name: "commDev", scope: !2144, file: !3, line: 57, type: !2164)
!2164 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Sim7x00CommDevice", scope: !17, file: !1775, line: 37, size: 2304, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada17Sim7x00CommDeviceE")
!2165 = !DILocalVariable(name: "str", scope: !2144, file: !3, line: 75, type: !2166)
!2166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !800, size: 568, elements: !2167)
!2167 = !{!2168}
!2168 = !DISubrange(count: 71)
!2169 = !DILocalVariable(name: "i", scope: !2170, file: !3, line: 85, type: !24)
!2170 = distinct !DILexicalBlock(scope: !2144, file: !3, line: 85, column: 5)
!2171 = !DILocalVariable(name: "buf", scope: !2172, file: !3, line: 87, type: !2176)
!2172 = distinct !DILexicalBlock(scope: !2173, file: !3, line: 86, column: 39)
!2173 = distinct !DILexicalBlock(scope: !2174, file: !3, line: 86, column: 13)
!2174 = distinct !DILexicalBlock(scope: !2175, file: !3, line: 85, column: 35)
!2175 = distinct !DILexicalBlock(scope: !2170, file: !3, line: 85, column: 5)
!2176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 328, elements: !2177)
!2177 = !{!2178}
!2178 = !DISubrange(count: 41)
!2179 = !DILocalVariable(name: "bytesRead", scope: !2172, file: !3, line: 88, type: !26)
!2180 = !DILocalVariable(name: "i", scope: !2181, file: !3, line: 89, type: !24)
!2181 = distinct !DILexicalBlock(scope: !2172, file: !3, line: 89, column: 13)
!2182 = !DILocation(line: 0, scope: !2144)
!2183 = !DILocation(line: 43, column: 5, scope: !2144)
!2184 = !DILocation(line: 43, column: 10, scope: !2144)
!2185 = !DILocation(line: 44, column: 5, scope: !2144)
!2186 = !DILocation(line: 44, column: 10, scope: !2144)
!2187 = !DILocation(line: 45, column: 5, scope: !2144)
!2188 = !DILocation(line: 45, column: 15, scope: !2144)
!2189 = !DILocation(line: 46, column: 11, scope: !2144)
!2190 = !DILocation(line: 48, column: 5, scope: !2144)
!2191 = !DILocation(line: 48, column: 10, scope: !2144)
!2192 = !DILocation(line: 49, column: 5, scope: !2144)
!2193 = !DILocation(line: 49, column: 10, scope: !2144)
!2194 = !DILocation(line: 50, column: 5, scope: !2144)
!2195 = !DILocation(line: 50, column: 15, scope: !2144)
!2196 = !DILocation(line: 54, column: 5, scope: !2144)
!2197 = !DILocation(line: 54, column: 13, scope: !2144)
!2198 = !DILocation(line: 55, column: 5, scope: !2144)
!2199 = !DILocation(line: 55, column: 13, scope: !2144)
!2200 = !DILocation(line: 57, column: 5, scope: !2144)
!2201 = !DILocation(line: 57, column: 23, scope: !2144)
!2202 = !DILocation(line: 57, column: 31, scope: !2144)
!2203 = !DILocation(line: 60, column: 82, scope: !2144)
!2204 = !DILocation(line: 60, column: 5, scope: !2144)
!2205 = !DILocation(line: 63, column: 5, scope: !2144)
!2206 = !DILocation(line: 65, column: 5, scope: !2144)
!2207 = !DILocation(line: 65, column: 13, scope: !2144)
!2208 = !DILocation(line: 66, column: 5, scope: !2144)
!2209 = !DILocation(line: 66, column: 13, scope: !2144)
!2210 = !DILocation(line: 67, column: 13, scope: !2144)
!2211 = !DILocation(line: 69, column: 21, scope: !2144)
!2212 = !DILocation(line: 69, column: 5, scope: !2144)
!2213 = !DILocation(line: 70, column: 9, scope: !2214)
!2214 = distinct !DILexicalBlock(scope: !2215, file: !3, line: 70, column: 9)
!2215 = distinct !DILexicalBlock(scope: !2144, file: !3, line: 69, column: 36)
!2216 = !{!2141, !2141, i64 0}
!2217 = !{i64 2149726088}
!2218 = !{i64 2149726139}
!2219 = distinct !{!2219, !2212, !2220, !2129, !2130}
!2220 = !DILocation(line: 71, column: 5, scope: !2144)
!2221 = !DILocation(line: 73, column: 5, scope: !2144)
!2222 = !DILocation(line: 75, column: 5, scope: !2144)
!2223 = !DILocation(line: 75, column: 16, scope: !2144)
!2224 = !DILocation(line: 79, column: 13, scope: !2144)
!2225 = !DILocation(line: 81, column: 21, scope: !2144)
!2226 = !DILocation(line: 81, column: 13, scope: !2144)
!2227 = !DILocation(line: 81, column: 5, scope: !2144)
!2228 = !DILocation(line: 0, scope: !2170)
!2229 = !DILocation(line: 85, column: 5, scope: !2170)
!2230 = !DILocation(line: 82, column: 9, scope: !2231)
!2231 = distinct !DILexicalBlock(scope: !2232, file: !3, line: 82, column: 9)
!2232 = distinct !DILexicalBlock(scope: !2144, file: !3, line: 81, column: 39)
!2233 = !{i64 2149726575}
!2234 = !{i64 2149726626}
!2235 = distinct !{!2235, !2227, !2236, !2129, !2130}
!2236 = !DILocation(line: 83, column: 5, scope: !2144)
!2237 = !DILocation(line: 100, column: 13, scope: !2144)
!2238 = !DILocation(line: 101, column: 21, scope: !2144)
!2239 = !DILocation(line: 101, column: 5, scope: !2144)
!2240 = !DILocation(line: 86, column: 21, scope: !2173)
!2241 = !DILocation(line: 86, column: 13, scope: !2173)
!2242 = !DILocation(line: 86, column: 13, scope: !2174)
!2243 = !DILocation(line: 87, column: 13, scope: !2172)
!2244 = !DILocation(line: 87, column: 18, scope: !2172)
!2245 = !DILocation(line: 88, column: 42, scope: !2172)
!2246 = !DILocation(line: 88, column: 34, scope: !2172)
!2247 = !DILocation(line: 0, scope: !2172)
!2248 = !DILocation(line: 0, scope: !2181)
!2249 = !DILocation(line: 89, column: 31, scope: !2250)
!2250 = distinct !DILexicalBlock(scope: !2181, file: !3, line: 89, column: 13)
!2251 = !DILocation(line: 89, column: 13, scope: !2181)
!2252 = !DILocation(line: 95, column: 9, scope: !2173)
!2253 = !DILocation(line: 95, column: 9, scope: !2172)
!2254 = !DILocation(line: 90, column: 21, scope: !2255)
!2255 = distinct !DILexicalBlock(scope: !2256, file: !3, line: 90, column: 21)
!2256 = distinct !DILexicalBlock(scope: !2250, file: !3, line: 89, column: 49)
!2257 = !{!2140, !2140, i64 0}
!2258 = !DILocation(line: 90, column: 28, scope: !2255)
!2259 = !DILocation(line: 90, column: 21, scope: !2256)
!2260 = !DILocation(line: 91, column: 21, scope: !2261)
!2261 = distinct !DILexicalBlock(scope: !2255, file: !3, line: 90, column: 37)
!2262 = !DILocation(line: 92, column: 17, scope: !2261)
!2263 = !DILocation(line: 93, column: 26, scope: !2256)
!2264 = !DILocation(line: 93, column: 17, scope: !2256)
!2265 = !DILocation(line: 89, column: 45, scope: !2250)
!2266 = distinct !{!2266, !2251, !2267, !2129, !2130}
!2267 = !DILocation(line: 94, column: 13, scope: !2181)
!2268 = !DILocation(line: 96, column: 13, scope: !2269)
!2269 = distinct !DILexicalBlock(scope: !2173, file: !3, line: 95, column: 16)
!2270 = !DILocation(line: 85, column: 31, scope: !2175)
!2271 = !DILocation(line: 85, column: 23, scope: !2175)
!2272 = distinct !{!2272, !2229, !2273, !2129, !2130}
!2273 = !DILocation(line: 98, column: 5, scope: !2170)
!2274 = !DILocation(line: 102, column: 9, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !2276, file: !3, line: 102, column: 9)
!2276 = distinct !DILexicalBlock(scope: !2144, file: !3, line: 101, column: 31)
!2277 = !{i64 2149727054}
!2278 = !{i64 2149727105}
!2279 = distinct !{!2279, !2239, !2280, !2129, !2130}
!2280 = !DILocation(line: 103, column: 5, scope: !2144)
!2281 = !DILocation(line: 105, column: 5, scope: !2144)
!2282 = !DILocation(line: 107, column: 5, scope: !2144)
!2283 = !DILocation(line: 0, scope: !161)
!2284 = !DILocation(line: 187, column: 10, scope: !2285)
!2285 = distinct !DILexicalBlock(scope: !161, file: !3, line: 187, column: 9)
!2286 = !{!2287, !2287, i64 0}
!2287 = !{!"any pointer", !2140, i64 0}
!2288 = !DILocation(line: 187, column: 9, scope: !161)
!2289 = !DILocation(line: 188, column: 18, scope: !2290)
!2290 = distinct !DILexicalBlock(scope: !2285, file: !3, line: 187, column: 18)
!2291 = !DILocation(line: 188, column: 16, scope: !2290)
!2292 = !DILocation(line: 189, column: 5, scope: !2290)
!2293 = !DILocation(line: 190, column: 5, scope: !161)
!2294 = !DILocation(line: 190, column: 13, scope: !161)
!2295 = !DILocation(line: 191, column: 1, scope: !161)
!2296 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 111, type: !2297, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2299)
!2297 = !DISubroutineType(types: !2298)
!2298 = !{!24, !24, !999}
!2299 = !{!2300, !2301}
!2300 = !DILocalVariable(name: "argc", arg: 1, scope: !2296, file: !3, line: 111, type: !24)
!2301 = !DILocalVariable(name: "argv", arg: 2, scope: !2296, file: !3, line: 111, type: !999)
!2302 = !DILocation(line: 0, scope: !2296)
!2303 = !DILocation(line: 114, column: 5, scope: !2296)
!2304 = !DILocation(line: 115, column: 5, scope: !2296)
!2305 = !DILocation(line: 118, column: 5, scope: !2296)
!2306 = !DILocation(line: 121, column: 5, scope: !2296)
!2307 = !DILocation(line: 122, column: 1, scope: !2296)
!2308 = distinct !DISubprogram(name: "SystemClock_Config", linkageName: "_ZL18SystemClock_Configv", scope: !3, file: !3, line: 124, type: !150, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2309)
!2309 = !{!2310, !2330}
!2310 = !DILocalVariable(name: "RCC_OscInitStruct", scope: !2308, file: !3, line: 126, type: !2311)
!2311 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !2312, line: 261, baseType: !2313)
!2312 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "49bf7e29630a7d603739687645591a41")
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2312, line: 228, size: 320, flags: DIFlagTypePassByValue, elements: !2314, identifier: "_ZTS18RCC_OscInitTypeDef")
!2314 = !{!2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !2313, file: !2312, line: 230, baseType: !32, size: 32)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !2313, file: !2312, line: 238, baseType: !32, size: 32, offset: 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "HSEPredivValue", scope: !2313, file: !2312, line: 241, baseType: !32, size: 32, offset: 64)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !2313, file: !2312, line: 244, baseType: !32, size: 32, offset: 96)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !2313, file: !2312, line: 247, baseType: !32, size: 32, offset: 128)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !2313, file: !2312, line: 250, baseType: !32, size: 32, offset: 160)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !2313, file: !2312, line: 253, baseType: !32, size: 32, offset: 192)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !2313, file: !2312, line: 256, baseType: !2323, size: 96, offset: 224)
!2323 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !2324, line: 59, baseType: !2325)
!2324 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "3e0cb02f236e8f5a4c479e8d7b418957")
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2324, line: 49, size: 96, flags: DIFlagTypePassByValue, elements: !2326, identifier: "_ZTS18RCC_PLLInitTypeDef")
!2326 = !{!2327, !2328, !2329}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !2325, file: !2324, line: 51, baseType: !32, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !2325, file: !2324, line: 54, baseType: !32, size: 32, offset: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !2325, file: !2324, line: 57, baseType: !32, size: 32, offset: 64)
!2330 = !DILocalVariable(name: "RCC_ClkInitStruct", scope: !2308, file: !3, line: 127, type: !2331)
!2331 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !2324, line: 80, baseType: !2332)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2324, line: 64, size: 160, flags: DIFlagTypePassByValue, elements: !2333, identifier: "_ZTS18RCC_ClkInitTypeDef")
!2333 = !{!2334, !2335, !2336, !2337, !2338}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !2332, file: !2324, line: 66, baseType: !32, size: 32)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !2332, file: !2324, line: 69, baseType: !32, size: 32, offset: 32)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !2332, file: !2324, line: 72, baseType: !32, size: 32, offset: 64)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !2332, file: !2324, line: 75, baseType: !32, size: 32, offset: 96)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !2332, file: !2324, line: 78, baseType: !32, size: 32, offset: 128)
!2339 = !DILocation(line: 126, column: 5, scope: !2308)
!2340 = !DILocation(line: 126, column: 24, scope: !2308)
!2341 = !DILocation(line: 127, column: 5, scope: !2308)
!2342 = !DILocation(line: 127, column: 24, scope: !2308)
!2343 = !DILocation(line: 131, column: 23, scope: !2308)
!2344 = !DILocation(line: 131, column: 38, scope: !2308)
!2345 = !{!2346, !2141, i64 0}
!2346 = !{!"_ZTS18RCC_OscInitTypeDef", !2141, i64 0, !2141, i64 4, !2141, i64 8, !2141, i64 12, !2141, i64 16, !2141, i64 20, !2141, i64 24, !2347, i64 28}
!2347 = !{!"_ZTS18RCC_PLLInitTypeDef", !2141, i64 0, !2141, i64 4, !2141, i64 8}
!2348 = !DILocation(line: 132, column: 23, scope: !2308)
!2349 = !DILocation(line: 132, column: 32, scope: !2308)
!2350 = !{!2346, !2141, i64 16}
!2351 = !DILocation(line: 133, column: 23, scope: !2308)
!2352 = !DILocation(line: 133, column: 43, scope: !2308)
!2353 = !{!2346, !2141, i64 20}
!2354 = !DILocation(line: 134, column: 27, scope: !2308)
!2355 = !DILocation(line: 134, column: 36, scope: !2308)
!2356 = !{!2346, !2141, i64 28}
!2357 = !DILocation(line: 135, column: 27, scope: !2308)
!2358 = !DILocation(line: 135, column: 37, scope: !2308)
!2359 = !{!2346, !2141, i64 32}
!2360 = !DILocation(line: 136, column: 27, scope: !2308)
!2361 = !DILocation(line: 136, column: 34, scope: !2308)
!2362 = !{!2346, !2141, i64 36}
!2363 = !DILocation(line: 137, column: 5, scope: !2308)
!2364 = !DILocation(line: 141, column: 23, scope: !2308)
!2365 = !DILocation(line: 142, column: 9, scope: !2308)
!2366 = !{!2367, !2141, i64 0}
!2367 = !{!"_ZTS18RCC_ClkInitTypeDef", !2141, i64 0, !2141, i64 4, !2141, i64 8, !2141, i64 12, !2141, i64 16}
!2368 = !DILocation(line: 143, column: 23, scope: !2308)
!2369 = !DILocation(line: 143, column: 36, scope: !2308)
!2370 = !{!2367, !2141, i64 4}
!2371 = !DILocation(line: 144, column: 23, scope: !2308)
!2372 = !DILocation(line: 144, column: 37, scope: !2308)
!2373 = !{!2367, !2141, i64 8}
!2374 = !DILocation(line: 145, column: 23, scope: !2308)
!2375 = !DILocation(line: 145, column: 38, scope: !2308)
!2376 = !{!2367, !2141, i64 12}
!2377 = !DILocation(line: 146, column: 23, scope: !2308)
!2378 = !DILocation(line: 146, column: 38, scope: !2308)
!2379 = !{!2367, !2141, i64 16}
!2380 = !DILocation(line: 148, column: 5, scope: !2308)
!2381 = !DILocation(line: 149, column: 1, scope: !2308)
!2382 = !DILocation(line: 0, scope: !130)
!2383 = !DILocation(line: 160, column: 27, scope: !130)
!2384 = !DILocation(line: 161, column: 29, scope: !130)
!2385 = !DILocation(line: 162, column: 27, scope: !130)
!2386 = !DILocation(line: 163, column: 1, scope: !130)
!2387 = distinct !DISubprogram(name: "SysTick_Handler", scope: !3, file: !3, line: 166, type: !150, scopeLine: 167, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !152)
!2388 = !DILocation(line: 168, column: 5, scope: !2387)
!2389 = !DILocation(line: 169, column: 5, scope: !2387)
!2390 = !DILocation(line: 170, column: 1, scope: !2387)
!2391 = !DILocation(line: 174, column: 5, scope: !149)
!2392 = !{!"branch_weights", i32 1, i32 1048575}
!2393 = !DILocation(line: 174, column: 34, scope: !149)
!2394 = !DILocation(line: 175, column: 5, scope: !149)
!2395 = !DILocation(line: 175, column: 15, scope: !149)
!2396 = !DILocation(line: 176, column: 1, scope: !149)
!2397 = !DILocation(line: 180, column: 5, scope: !158)
!2398 = !DILocation(line: 180, column: 34, scope: !158)
!2399 = !DILocation(line: 181, column: 5, scope: !158)
!2400 = !DILocation(line: 181, column: 15, scope: !158)
!2401 = !DILocation(line: 182, column: 1, scope: !158)
!2402 = distinct !DISubprogram(name: "printf_", scope: !252, file: !252, line: 720, type: !1184, scopeLine: 721, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !2403)
!2403 = !{!2404, !2405, !2412, !2414}
!2404 = !DILocalVariable(name: "format", arg: 1, scope: !2402, file: !252, line: 720, type: !799)
!2405 = !DILocalVariable(name: "va", scope: !2402, file: !252, line: 722, type: !2406)
!2406 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1237, line: 14, baseType: !2407)
!2407 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2408, baseType: !2409)
!2408 = !DIFile(filename: "../dep/printf/src/printf.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build")
!2409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !2410)
!2410 = !{!2411}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !2409, file: !2408, line: 722, baseType: !104, size: 32)
!2412 = !DILocalVariable(name: "buffer", scope: !2402, file: !252, line: 724, type: !2413)
!2413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 8, elements: !1073)
!2414 = !DILocalVariable(name: "ret", scope: !2402, file: !252, line: 725, type: !2415)
!2415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !24)
!2416 = !DILocation(line: 0, scope: !2402)
!2417 = !DILocation(line: 722, column: 3, scope: !2402)
!2418 = !DILocation(line: 722, column: 11, scope: !2402)
!2419 = !DILocation(line: 723, column: 3, scope: !2402)
!2420 = !DILocation(line: 724, column: 3, scope: !2402)
!2421 = !DILocation(line: 724, column: 8, scope: !2402)
!2422 = !DILocation(line: 725, column: 19, scope: !2402)
!2423 = !DILocation(line: 726, column: 3, scope: !2402)
!2424 = !DILocation(line: 728, column: 1, scope: !2402)
!2425 = !DILocation(line: 727, column: 3, scope: !2402)
!2426 = distinct !DISubprogram(name: "_out_char", scope: !252, file: !252, line: 124, type: !259, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !2427)
!2427 = !{!2428, !2429, !2430, !2431}
!2428 = !DILocalVariable(name: "character", arg: 1, scope: !2426, file: !252, line: 124, type: !164)
!2429 = !DILocalVariable(name: "buffer", arg: 2, scope: !2426, file: !252, line: 124, type: !104)
!2430 = !DILocalVariable(name: "idx", arg: 3, scope: !2426, file: !252, line: 124, type: !255)
!2431 = !DILocalVariable(name: "maxlen", arg: 4, scope: !2426, file: !252, line: 124, type: !255)
!2432 = !DILocation(line: 0, scope: !2426)
!2433 = !DILocation(line: 127, column: 7, scope: !2434)
!2434 = distinct !DILexicalBlock(scope: !2426, file: !252, line: 127, column: 7)
!2435 = !DILocation(line: 127, column: 7, scope: !2426)
!2436 = !DILocation(line: 128, column: 5, scope: !2437)
!2437 = distinct !DILexicalBlock(scope: !2434, file: !252, line: 127, column: 18)
!2438 = !DILocation(line: 129, column: 3, scope: !2437)
!2439 = !DILocation(line: 130, column: 1, scope: !2426)
!2440 = distinct !DISubprogram(name: "_vsnprintf", scope: !252, file: !252, line: 447, type: !2441, scopeLine: 448, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !2443)
!2441 = !DISubroutineType(types: !2442)
!2442 = !{!24, !257, !261, !285, !799, !2406}
!2443 = !{!2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2459, !2465, !2468, !2474, !2478, !2480, !2486, !2488, !2490, !2491}
!2444 = !DILocalVariable(name: "out", arg: 1, scope: !2440, file: !252, line: 447, type: !257)
!2445 = !DILocalVariable(name: "buffer", arg: 2, scope: !2440, file: !252, line: 447, type: !261)
!2446 = !DILocalVariable(name: "maxlen", arg: 3, scope: !2440, file: !252, line: 447, type: !285)
!2447 = !DILocalVariable(name: "format", arg: 4, scope: !2440, file: !252, line: 447, type: !799)
!2448 = !DILocalVariable(name: "va", arg: 5, scope: !2440, file: !252, line: 447, type: !2406)
!2449 = !DILocalVariable(name: "flags", scope: !2440, file: !252, line: 449, type: !7)
!2450 = !DILocalVariable(name: "width", scope: !2440, file: !252, line: 449, type: !7)
!2451 = !DILocalVariable(name: "precision", scope: !2440, file: !252, line: 449, type: !7)
!2452 = !DILocalVariable(name: "n", scope: !2440, file: !252, line: 449, type: !7)
!2453 = !DILocalVariable(name: "idx", scope: !2440, file: !252, line: 450, type: !255)
!2454 = !DILocalVariable(name: "w", scope: !2455, file: !252, line: 490, type: !2415)
!2455 = distinct !DILexicalBlock(scope: !2456, file: !252, line: 489, column: 30)
!2456 = distinct !DILexicalBlock(scope: !2457, file: !252, line: 489, column: 14)
!2457 = distinct !DILexicalBlock(scope: !2458, file: !252, line: 486, column: 9)
!2458 = distinct !DILexicalBlock(scope: !2440, file: !252, line: 458, column: 3)
!2459 = !DILocalVariable(name: "prec", scope: !2460, file: !252, line: 510, type: !2415)
!2460 = distinct !DILexicalBlock(scope: !2461, file: !252, line: 509, column: 32)
!2461 = distinct !DILexicalBlock(scope: !2462, file: !252, line: 509, column: 16)
!2462 = distinct !DILexicalBlock(scope: !2463, file: !252, line: 506, column: 11)
!2463 = distinct !DILexicalBlock(scope: !2464, file: !252, line: 503, column: 25)
!2464 = distinct !DILexicalBlock(scope: !2458, file: !252, line: 503, column: 9)
!2465 = !DILocalVariable(name: "base", scope: !2466, file: !252, line: 562, type: !7)
!2466 = distinct !DILexicalBlock(scope: !2467, file: !252, line: 560, column: 18)
!2467 = distinct !DILexicalBlock(scope: !2458, file: !252, line: 553, column: 22)
!2468 = !DILocalVariable(name: "value", scope: !2469, file: !252, line: 596, type: !2473)
!2469 = distinct !DILexicalBlock(scope: !2470, file: !252, line: 594, column: 40)
!2470 = distinct !DILexicalBlock(scope: !2471, file: !252, line: 594, column: 15)
!2471 = distinct !DILexicalBlock(scope: !2472, file: !252, line: 592, column: 51)
!2472 = distinct !DILexicalBlock(scope: !2466, file: !252, line: 592, column: 13)
!2473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !184)
!2474 = !DILocalVariable(name: "value", scope: !2475, file: !252, line: 601, type: !2477)
!2475 = distinct !DILexicalBlock(scope: !2476, file: !252, line: 600, column: 40)
!2476 = distinct !DILexicalBlock(scope: !2470, file: !252, line: 600, column: 20)
!2477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !510)
!2478 = !DILocalVariable(name: "value", scope: !2479, file: !252, line: 605, type: !2415)
!2479 = distinct !DILexicalBlock(scope: !2476, file: !252, line: 604, column: 16)
!2480 = !DILocalVariable(name: "value", scope: !2481, file: !252, line: 620, type: !2485)
!2481 = distinct !DILexicalBlock(scope: !2482, file: !252, line: 619, column: 16)
!2482 = distinct !DILexicalBlock(scope: !2483, file: !252, line: 616, column: 20)
!2483 = distinct !DILexicalBlock(scope: !2484, file: !252, line: 611, column: 15)
!2484 = distinct !DILexicalBlock(scope: !2472, file: !252, line: 609, column: 14)
!2485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2486 = !DILocalVariable(name: "l", scope: !2487, file: !252, line: 635, type: !7)
!2487 = distinct !DILexicalBlock(scope: !2467, file: !252, line: 634, column: 18)
!2488 = !DILocalVariable(name: "p", scope: !2489, file: !252, line: 655, type: !799)
!2489 = distinct !DILexicalBlock(scope: !2467, file: !252, line: 654, column: 18)
!2490 = !DILocalVariable(name: "l", scope: !2489, file: !252, line: 656, type: !7)
!2491 = !DILocalVariable(name: "is_ll", scope: !2492, file: !252, line: 684, type: !2493)
!2492 = distinct !DILexicalBlock(scope: !2467, file: !252, line: 680, column: 18)
!2493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !295)
!2494 = !DILocation(line: 0, scope: !2440)
!2495 = !{!2496, !2496, i64 0}
!2496 = !{!"any pointer", !2497, i64 0}
!2497 = !{!"omnipotent char", !2498, i64 0}
!2498 = !{!"Simple C/C++ TBAA"}
!2499 = !DILocation(line: 452, column: 8, scope: !2500)
!2500 = distinct !DILexicalBlock(scope: !2440, file: !252, line: 452, column: 7)
!2501 = !DILocation(line: 452, column: 7, scope: !2440)
!2502 = !DILocation(line: 457, column: 3, scope: !2440)
!2503 = !DILocation(line: 457, column: 11, scope: !2440)
!2504 = !DILocation(line: 457, column: 10, scope: !2440)
!2505 = !{!2497, !2497, i64 0}
!2506 = !DILocation(line: 462, column: 31, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2508, file: !252, line: 460, column: 25)
!2508 = distinct !DILexicalBlock(scope: !2458, file: !252, line: 460, column: 9)
!2509 = !DILocation(line: 462, column: 7, scope: !2507)
!2510 = !{void (i8, i8*, i32, i32)* @_out_buffer, void (i8, i8*, i32, i32)* @_out_char, void (i8, i8*, i32, i32)* @_out_fct, void (i8, i8*, i32, i32)* @_out_null}
!2511 = !DILocation(line: 463, column: 13, scope: !2507)
!2512 = !DILocation(line: 464, column: 7, scope: !2507)
!2513 = distinct !{!2513, !2502, !2514, !2129, !2130}
!2514 = !DILocation(line: 708, column: 3, scope: !2440)
!2515 = !DILocation(line: 468, column: 13, scope: !2516)
!2516 = distinct !DILexicalBlock(scope: !2508, file: !252, line: 466, column: 10)
!2517 = !DILocation(line: 473, column: 5, scope: !2458)
!2518 = !DILocation(line: 472, column: 11, scope: !2458)
!2519 = !DILocation(line: 474, column: 16, scope: !2520)
!2520 = distinct !DILexicalBlock(scope: !2458, file: !252, line: 473, column: 8)
!2521 = !DILocation(line: 474, column: 15, scope: !2520)
!2522 = !DILocation(line: 474, column: 7, scope: !2520)
!2523 = !DILocation(line: 475, column: 25, scope: !2524)
!2524 = distinct !DILexicalBlock(scope: !2520, file: !252, line: 474, column: 24)
!2525 = !DILocation(line: 475, column: 49, scope: !2524)
!2526 = !DILocation(line: 475, column: 61, scope: !2524)
!2527 = !DILocation(line: 476, column: 25, scope: !2524)
!2528 = !DILocation(line: 476, column: 49, scope: !2524)
!2529 = !DILocation(line: 476, column: 61, scope: !2524)
!2530 = !DILocation(line: 477, column: 25, scope: !2524)
!2531 = !DILocation(line: 477, column: 49, scope: !2524)
!2532 = !DILocation(line: 477, column: 61, scope: !2524)
!2533 = !DILocation(line: 478, column: 25, scope: !2524)
!2534 = !DILocation(line: 478, column: 49, scope: !2524)
!2535 = !DILocation(line: 478, column: 61, scope: !2524)
!2536 = !DILocation(line: 479, column: 25, scope: !2524)
!2537 = !DILocation(line: 479, column: 49, scope: !2524)
!2538 = !DILocation(line: 479, column: 61, scope: !2524)
!2539 = !DILocation(line: 0, scope: !2524)
!2540 = !DILocation(line: 0, scope: !2458)
!2541 = !DILocation(line: 482, column: 5, scope: !2520)
!2542 = distinct !{!2542, !2517, !2543, !2129, !2130}
!2543 = !DILocation(line: 482, column: 15, scope: !2458)
!2544 = !DILocation(line: 486, column: 20, scope: !2457)
!2545 = !DILocation(line: 486, column: 19, scope: !2457)
!2546 = !DILocation(line: 486, column: 9, scope: !2457)
!2547 = !DILocation(line: 486, column: 9, scope: !2458)
!2548 = !DILocation(line: 487, column: 15, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !2457, file: !252, line: 486, column: 29)
!2550 = !DILocation(line: 488, column: 5, scope: !2549)
!2551 = !DILocation(line: 489, column: 22, scope: !2456)
!2552 = !DILocation(line: 489, column: 14, scope: !2457)
!2553 = !DILocation(line: 490, column: 21, scope: !2455)
!2554 = !DILocation(line: 0, scope: !2455)
!2555 = !DILocation(line: 491, column: 13, scope: !2556)
!2556 = distinct !DILexicalBlock(scope: !2455, file: !252, line: 491, column: 11)
!2557 = !DILocation(line: 491, column: 11, scope: !2455)
!2558 = !DILocation(line: 498, column: 13, scope: !2455)
!2559 = !DILocation(line: 499, column: 5, scope: !2455)
!2560 = !DILocation(line: 503, column: 10, scope: !2464)
!2561 = !DILocation(line: 503, column: 9, scope: !2464)
!2562 = !DILocation(line: 503, column: 17, scope: !2464)
!2563 = !DILocation(line: 503, column: 9, scope: !2458)
!2564 = !DILocation(line: 504, column: 13, scope: !2463)
!2565 = !DILocation(line: 505, column: 13, scope: !2463)
!2566 = !DILocation(line: 506, column: 21, scope: !2462)
!2567 = !DILocation(line: 506, column: 11, scope: !2462)
!2568 = !DILocation(line: 506, column: 11, scope: !2463)
!2569 = !DILocation(line: 507, column: 21, scope: !2570)
!2570 = distinct !DILexicalBlock(scope: !2462, file: !252, line: 506, column: 31)
!2571 = !DILocation(line: 508, column: 7, scope: !2570)
!2572 = !DILocation(line: 509, column: 24, scope: !2461)
!2573 = !DILocation(line: 509, column: 16, scope: !2462)
!2574 = !DILocation(line: 510, column: 31, scope: !2460)
!2575 = !DILocation(line: 0, scope: !2460)
!2576 = !DILocation(line: 511, column: 26, scope: !2460)
!2577 = !DILocation(line: 511, column: 21, scope: !2460)
!2578 = !DILocation(line: 512, column: 15, scope: !2460)
!2579 = !DILocation(line: 513, column: 7, scope: !2460)
!2580 = !DILocation(line: 517, column: 14, scope: !2458)
!2581 = !DILocation(line: 517, column: 13, scope: !2458)
!2582 = !DILocation(line: 517, column: 5, scope: !2458)
!2583 = !DILocation(line: 519, column: 15, scope: !2584)
!2584 = distinct !DILexicalBlock(scope: !2458, file: !252, line: 517, column: 22)
!2585 = !DILocation(line: 520, column: 15, scope: !2584)
!2586 = !DILocation(line: 521, column: 13, scope: !2587)
!2587 = distinct !DILexicalBlock(scope: !2584, file: !252, line: 521, column: 13)
!2588 = !DILocation(line: 521, column: 21, scope: !2587)
!2589 = !DILocation(line: 521, column: 13, scope: !2584)
!2590 = !DILocation(line: 522, column: 17, scope: !2591)
!2591 = distinct !DILexicalBlock(scope: !2587, file: !252, line: 521, column: 29)
!2592 = !DILocation(line: 523, column: 17, scope: !2591)
!2593 = !DILocation(line: 524, column: 9, scope: !2591)
!2594 = !DILocation(line: 527, column: 15, scope: !2584)
!2595 = !DILocation(line: 528, column: 15, scope: !2584)
!2596 = !DILocation(line: 529, column: 13, scope: !2597)
!2597 = distinct !DILexicalBlock(scope: !2584, file: !252, line: 529, column: 13)
!2598 = !DILocation(line: 529, column: 21, scope: !2597)
!2599 = !DILocation(line: 529, column: 13, scope: !2584)
!2600 = !DILocation(line: 530, column: 17, scope: !2601)
!2601 = distinct !DILexicalBlock(scope: !2597, file: !252, line: 529, column: 29)
!2602 = !DILocation(line: 531, column: 17, scope: !2601)
!2603 = !DILocation(line: 532, column: 9, scope: !2601)
!2604 = !DILocation(line: 536, column: 15, scope: !2584)
!2605 = !DILocation(line: 537, column: 15, scope: !2584)
!2606 = !DILocation(line: 538, column: 9, scope: !2584)
!2607 = !DILocation(line: 541, column: 15, scope: !2584)
!2608 = !DILocation(line: 542, column: 15, scope: !2584)
!2609 = !DILocation(line: 543, column: 9, scope: !2584)
!2610 = !DILocation(line: 545, column: 15, scope: !2584)
!2611 = !DILocation(line: 546, column: 15, scope: !2584)
!2612 = !DILocation(line: 547, column: 9, scope: !2584)
!2613 = !DILocation(line: 553, column: 14, scope: !2458)
!2614 = !DILocation(line: 553, column: 13, scope: !2458)
!2615 = !DILocation(line: 553, column: 5, scope: !2458)
!2616 = !DILocation(line: 0, scope: !2466)
!2617 = !DILocation(line: 568, column: 9, scope: !2618)
!2618 = distinct !DILexicalBlock(scope: !2619, file: !252, line: 566, column: 34)
!2619 = distinct !DILexicalBlock(scope: !2620, file: !252, line: 566, column: 18)
!2620 = distinct !DILexicalBlock(scope: !2466, file: !252, line: 563, column: 13)
!2621 = !DILocation(line: 571, column: 9, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !2623, file: !252, line: 569, column: 34)
!2623 = distinct !DILexicalBlock(scope: !2619, file: !252, line: 569, column: 18)
!2624 = !DILocation(line: 574, column: 17, scope: !2625)
!2625 = distinct !DILexicalBlock(scope: !2623, file: !252, line: 572, column: 14)
!2626 = !DILocation(line: 0, scope: !2620)
!2627 = !DILocation(line: 577, column: 21, scope: !2628)
!2628 = distinct !DILexicalBlock(scope: !2466, file: !252, line: 577, column: 13)
!2629 = !DILocation(line: 577, column: 13, scope: !2466)
!2630 = !DILocation(line: 582, column: 30, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2466, file: !252, line: 582, column: 13)
!2632 = !DILocation(line: 583, column: 17, scope: !2633)
!2633 = distinct !DILexicalBlock(scope: !2631, file: !252, line: 582, column: 51)
!2634 = !DILocation(line: 584, column: 9, scope: !2633)
!2635 = !DILocation(line: 587, column: 19, scope: !2636)
!2636 = distinct !DILexicalBlock(scope: !2466, file: !252, line: 587, column: 13)
!2637 = !DILocation(line: 587, column: 13, scope: !2466)
!2638 = !DILocation(line: 592, column: 30, scope: !2472)
!2639 = !DILocation(line: 594, column: 21, scope: !2470)
!2640 = !DILocation(line: 594, column: 15, scope: !2471)
!2641 = !DILocation(line: 596, column: 37, scope: !2469)
!2642 = !DILocation(line: 0, scope: !2469)
!2643 = !DILocation(line: 597, column: 82, scope: !2469)
!2644 = !DILocation(line: 597, column: 120, scope: !2469)
!2645 = !DILocation(line: 597, column: 125, scope: !2469)
!2646 = !DILocation(line: 597, column: 19, scope: !2469)
!2647 = !DILocation(line: 599, column: 11, scope: !2469)
!2648 = !DILocation(line: 600, column: 26, scope: !2476)
!2649 = !DILocation(line: 600, column: 20, scope: !2470)
!2650 = !DILocation(line: 601, column: 32, scope: !2475)
!2651 = !DILocation(line: 0, scope: !2475)
!2652 = !DILocation(line: 602, column: 72, scope: !2475)
!2653 = !DILocation(line: 602, column: 110, scope: !2475)
!2654 = !DILocation(line: 602, column: 19, scope: !2475)
!2655 = !DILocation(line: 603, column: 11, scope: !2475)
!2656 = !DILocation(line: 605, column: 38, scope: !2479)
!2657 = !DILocation(line: 605, column: 31, scope: !2479)
!2658 = !DILocation(line: 605, column: 60, scope: !2479)
!2659 = !DILocation(line: 605, column: 54, scope: !2479)
!2660 = !DILocation(line: 605, column: 85, scope: !2479)
!2661 = !DILocation(line: 0, scope: !2479)
!2662 = !DILocation(line: 605, column: 78, scope: !2479)
!2663 = !DILocation(line: 605, column: 102, scope: !2479)
!2664 = !DILocation(line: 606, column: 71, scope: !2479)
!2665 = !DILocation(line: 606, column: 109, scope: !2479)
!2666 = !DILocation(line: 606, column: 19, scope: !2479)
!2667 = !DILocation(line: 611, column: 21, scope: !2483)
!2668 = !DILocation(line: 611, column: 15, scope: !2484)
!2669 = !DILocation(line: 613, column: 61, scope: !2670)
!2670 = distinct !DILexicalBlock(scope: !2483, file: !252, line: 611, column: 40)
!2671 = !DILocation(line: 613, column: 100, scope: !2670)
!2672 = !DILocation(line: 613, column: 19, scope: !2670)
!2673 = !DILocation(line: 615, column: 11, scope: !2670)
!2674 = !DILocation(line: 616, column: 26, scope: !2482)
!2675 = !DILocation(line: 616, column: 20, scope: !2483)
!2676 = !DILocation(line: 617, column: 56, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2482, file: !252, line: 616, column: 40)
!2678 = !DILocation(line: 617, column: 19, scope: !2677)
!2679 = !DILocation(line: 618, column: 11, scope: !2677)
!2680 = !DILocation(line: 620, column: 47, scope: !2481)
!2681 = !DILocation(line: 620, column: 40, scope: !2481)
!2682 = !DILocation(line: 620, column: 78, scope: !2481)
!2683 = !DILocation(line: 620, column: 63, scope: !2481)
!2684 = !DILocation(line: 620, column: 112, scope: !2481)
!2685 = !DILocation(line: 0, scope: !2481)
!2686 = !DILocation(line: 620, column: 105, scope: !2481)
!2687 = !DILocation(line: 621, column: 19, scope: !2481)
!2688 = !DILocation(line: 0, scope: !2472)
!2689 = !DILocation(line: 624, column: 15, scope: !2466)
!2690 = !DILocation(line: 630, column: 47, scope: !2467)
!2691 = !DILocation(line: 630, column: 15, scope: !2467)
!2692 = !DILocation(line: 631, column: 15, scope: !2467)
!2693 = !DILocation(line: 632, column: 9, scope: !2467)
!2694 = !DILocation(line: 0, scope: !2487)
!2695 = !DILocation(line: 637, column: 21, scope: !2696)
!2696 = distinct !DILexicalBlock(scope: !2487, file: !252, line: 637, column: 13)
!2697 = !DILocation(line: 637, column: 13, scope: !2487)
!2698 = !DILocation(line: 638, column: 22, scope: !2699)
!2699 = distinct !DILexicalBlock(scope: !2696, file: !252, line: 637, column: 36)
!2700 = !DILocation(line: 638, column: 11, scope: !2699)
!2701 = !DILocation(line: 639, column: 33, scope: !2702)
!2702 = distinct !DILexicalBlock(scope: !2699, file: !252, line: 638, column: 31)
!2703 = !DILocation(line: 639, column: 13, scope: !2702)
!2704 = !DILocation(line: 638, column: 19, scope: !2699)
!2705 = distinct !{!2705, !2700, !2706, !2129, !2130}
!2706 = !DILocation(line: 640, column: 11, scope: !2699)
!2707 = !DILocation(line: 450, column: 10, scope: !2440)
!2708 = !DILocation(line: 643, column: 19, scope: !2487)
!2709 = !DILocation(line: 643, column: 13, scope: !2487)
!2710 = !DILocation(line: 643, column: 47, scope: !2487)
!2711 = !DILocation(line: 643, column: 9, scope: !2487)
!2712 = !DILocation(line: 645, column: 13, scope: !2487)
!2713 = !DILocation(line: 646, column: 19, scope: !2714)
!2714 = distinct !DILexicalBlock(scope: !2715, file: !252, line: 645, column: 33)
!2715 = distinct !DILexicalBlock(scope: !2487, file: !252, line: 645, column: 13)
!2716 = !DILocation(line: 647, column: 33, scope: !2717)
!2717 = distinct !DILexicalBlock(scope: !2714, file: !252, line: 646, column: 31)
!2718 = !DILocation(line: 647, column: 13, scope: !2717)
!2719 = !DILocation(line: 646, column: 22, scope: !2714)
!2720 = !DILocation(line: 646, column: 11, scope: !2714)
!2721 = distinct !{!2721, !2720, !2722, !2129, !2130}
!2722 = !DILocation(line: 648, column: 11, scope: !2714)
!2723 = !DILocation(line: 650, column: 15, scope: !2487)
!2724 = !DILocation(line: 655, column: 25, scope: !2489)
!2725 = !DILocation(line: 0, scope: !2489)
!2726 = !DILocation(line: 656, column: 40, scope: !2489)
!2727 = !DILocation(line: 656, column: 26, scope: !2489)
!2728 = !DILocation(line: 658, column: 19, scope: !2729)
!2729 = distinct !DILexicalBlock(scope: !2489, file: !252, line: 658, column: 13)
!2730 = !DILocation(line: 658, column: 13, scope: !2489)
!2731 = !DILocation(line: 661, column: 21, scope: !2732)
!2732 = distinct !DILexicalBlock(scope: !2489, file: !252, line: 661, column: 13)
!2733 = !DILocation(line: 661, column: 13, scope: !2489)
!2734 = !DILocation(line: 662, column: 19, scope: !2735)
!2735 = distinct !DILexicalBlock(scope: !2732, file: !252, line: 661, column: 36)
!2736 = !DILocation(line: 662, column: 22, scope: !2735)
!2737 = !DILocation(line: 662, column: 11, scope: !2735)
!2738 = !DILocation(line: 663, column: 33, scope: !2739)
!2739 = distinct !DILexicalBlock(scope: !2735, file: !252, line: 662, column: 31)
!2740 = !DILocation(line: 663, column: 13, scope: !2739)
!2741 = distinct !{!2741, !2737, !2742, !2129, !2130}
!2742 = !DILocation(line: 664, column: 11, scope: !2735)
!2743 = !DILocation(line: 667, column: 17, scope: !2489)
!2744 = !DILocation(line: 667, column: 20, scope: !2489)
!2745 = !DILocation(line: 667, column: 26, scope: !2489)
!2746 = !DILocation(line: 667, column: 57, scope: !2489)
!2747 = !DILocation(line: 667, column: 69, scope: !2489)
!2748 = !DILocation(line: 667, column: 9, scope: !2489)
!2749 = !DILocation(line: 668, column: 18, scope: !2750)
!2750 = distinct !DILexicalBlock(scope: !2489, file: !252, line: 667, column: 74)
!2751 = !DILocation(line: 668, column: 34, scope: !2750)
!2752 = !DILocation(line: 668, column: 11, scope: !2750)
!2753 = distinct !{!2753, !2748, !2754, !2129, !2130}
!2754 = !DILocation(line: 669, column: 9, scope: !2489)
!2755 = !DILocation(line: 671, column: 13, scope: !2489)
!2756 = !DILocation(line: 672, column: 19, scope: !2757)
!2757 = distinct !DILexicalBlock(scope: !2758, file: !252, line: 671, column: 33)
!2758 = distinct !DILexicalBlock(scope: !2489, file: !252, line: 671, column: 13)
!2759 = !DILocation(line: 673, column: 33, scope: !2760)
!2760 = distinct !DILexicalBlock(scope: !2757, file: !252, line: 672, column: 31)
!2761 = !DILocation(line: 673, column: 13, scope: !2760)
!2762 = !DILocation(line: 672, column: 22, scope: !2757)
!2763 = !DILocation(line: 672, column: 11, scope: !2757)
!2764 = distinct !{!2764, !2763, !2765, !2129, !2130}
!2765 = !DILocation(line: 674, column: 11, scope: !2757)
!2766 = !DILocation(line: 676, column: 15, scope: !2489)
!2767 = !DILocation(line: 682, column: 15, scope: !2492)
!2768 = !DILocation(line: 0, scope: !2492)
!2769 = !DILocation(line: 690, column: 81, scope: !2770)
!2770 = distinct !DILexicalBlock(scope: !2771, file: !252, line: 688, column: 14)
!2771 = distinct !DILexicalBlock(scope: !2492, file: !252, line: 685, column: 13)
!2772 = !DILocation(line: 690, column: 70, scope: !2770)
!2773 = !DILocation(line: 690, column: 17, scope: !2770)
!2774 = !DILocation(line: 694, column: 15, scope: !2492)
!2775 = !DILocation(line: 699, column: 29, scope: !2467)
!2776 = !DILocation(line: 699, column: 9, scope: !2467)
!2777 = !DILocation(line: 700, column: 15, scope: !2467)
!2778 = !DILocation(line: 701, column: 9, scope: !2467)
!2779 = !DILocation(line: 704, column: 33, scope: !2467)
!2780 = !DILocation(line: 704, column: 9, scope: !2467)
!2781 = !DILocation(line: 705, column: 15, scope: !2467)
!2782 = !DILocation(line: 706, column: 9, scope: !2467)
!2783 = !DILocation(line: 711, column: 28, scope: !2440)
!2784 = !DILocation(line: 711, column: 24, scope: !2440)
!2785 = !DILocation(line: 711, column: 3, scope: !2440)
!2786 = !DILocation(line: 714, column: 3, scope: !2440)
!2787 = distinct !DISubprogram(name: "_out_null", scope: !252, file: !252, line: 117, type: !259, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !2788)
!2788 = !{!2789, !2790, !2791, !2792}
!2789 = !DILocalVariable(name: "character", arg: 1, scope: !2787, file: !252, line: 117, type: !164)
!2790 = !DILocalVariable(name: "buffer", arg: 2, scope: !2787, file: !252, line: 117, type: !104)
!2791 = !DILocalVariable(name: "idx", arg: 3, scope: !2787, file: !252, line: 117, type: !255)
!2792 = !DILocalVariable(name: "maxlen", arg: 4, scope: !2787, file: !252, line: 117, type: !255)
!2793 = !DILocation(line: 0, scope: !2787)
!2794 = !DILocation(line: 120, column: 1, scope: !2787)
!2795 = distinct !DISubprogram(name: "_out_buffer", scope: !252, file: !252, line: 108, type: !259, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !2796)
!2796 = !{!2797, !2798, !2799, !2800}
!2797 = !DILocalVariable(name: "character", arg: 1, scope: !2795, file: !252, line: 108, type: !164)
!2798 = !DILocalVariable(name: "buffer", arg: 2, scope: !2795, file: !252, line: 108, type: !104)
!2799 = !DILocalVariable(name: "idx", arg: 3, scope: !2795, file: !252, line: 108, type: !255)
!2800 = !DILocalVariable(name: "maxlen", arg: 4, scope: !2795, file: !252, line: 108, type: !255)
!2801 = !DILocation(line: 0, scope: !2795)
!2802 = !DILocation(line: 110, column: 11, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2795, file: !252, line: 110, column: 7)
!2804 = !DILocation(line: 110, column: 7, scope: !2795)
!2805 = !DILocation(line: 111, column: 5, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2803, file: !252, line: 110, column: 21)
!2807 = !DILocation(line: 111, column: 26, scope: !2806)
!2808 = !DILocation(line: 112, column: 3, scope: !2806)
!2809 = !DILocation(line: 113, column: 1, scope: !2795)
!2810 = distinct !DISubprogram(name: "_out_fct", scope: !252, file: !252, line: 134, type: !259, scopeLine: 135, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !2811)
!2811 = !{!2812, !2813, !2814, !2815}
!2812 = !DILocalVariable(name: "character", arg: 1, scope: !2810, file: !252, line: 134, type: !164)
!2813 = !DILocalVariable(name: "buffer", arg: 2, scope: !2810, file: !252, line: 134, type: !104)
!2814 = !DILocalVariable(name: "idx", arg: 3, scope: !2810, file: !252, line: 134, type: !255)
!2815 = !DILocalVariable(name: "maxlen", arg: 4, scope: !2810, file: !252, line: 134, type: !255)
!2816 = !DILocation(line: 0, scope: !2810)
!2817 = !DILocation(line: 137, column: 7, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2810, file: !252, line: 137, column: 7)
!2819 = !DILocation(line: 137, column: 7, scope: !2810)
!2820 = !DILocation(line: 139, column: 35, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2818, file: !252, line: 137, column: 18)
!2822 = !{!2823, !2496, i64 0}
!2823 = !{!"", !2496, i64 0, !2496, i64 4}
!2824 = !DILocation(line: 139, column: 80, scope: !2821)
!2825 = !{!2823, !2496, i64 4}
!2826 = !DILocation(line: 139, column: 5, scope: !2821)
!2827 = !DILocation(line: 140, column: 3, scope: !2821)
!2828 = !DILocation(line: 141, column: 1, scope: !2810)
!2829 = distinct !DISubprogram(name: "_is_digit", scope: !252, file: !252, line: 156, type: !2830, scopeLine: 157, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !2832)
!2830 = !DISubroutineType(types: !2831)
!2831 = !{!295, !164}
!2832 = !{!2833}
!2833 = !DILocalVariable(name: "ch", arg: 1, scope: !2829, file: !252, line: 156, type: !164)
!2834 = !DILocation(line: 0, scope: !2829)
!2835 = !DILocation(line: 158, column: 22, scope: !2829)
!2836 = !DILocation(line: 158, column: 3, scope: !2829)
!2837 = distinct !DISubprogram(name: "_atoi", scope: !252, file: !252, line: 163, type: !2838, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !2841)
!2838 = !DISubroutineType(types: !2839)
!2839 = !{!7, !2840}
!2840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 32)
!2841 = !{!2842, !2843}
!2842 = !DILocalVariable(name: "str", arg: 1, scope: !2837, file: !252, line: 163, type: !2840)
!2843 = !DILocalVariable(name: "i", scope: !2837, file: !252, line: 165, type: !7)
!2844 = !DILocation(line: 0, scope: !2837)
!2845 = !DILocation(line: 166, column: 21, scope: !2837)
!2846 = !DILocation(line: 166, column: 20, scope: !2837)
!2847 = !DILocation(line: 166, column: 10, scope: !2837)
!2848 = !DILocation(line: 166, column: 3, scope: !2837)
!2849 = !DILocation(line: 167, column: 11, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2837, file: !252, line: 166, column: 28)
!2851 = !DILocation(line: 167, column: 42, scope: !2850)
!2852 = !DILocation(line: 167, column: 34, scope: !2850)
!2853 = !DILocation(line: 167, column: 46, scope: !2850)
!2854 = !DILocation(line: 167, column: 17, scope: !2850)
!2855 = distinct !{!2855, !2848, !2856, !2129, !2130}
!2856 = !DILocation(line: 168, column: 3, scope: !2837)
!2857 = !DILocation(line: 169, column: 3, scope: !2837)
!2858 = distinct !DISubprogram(name: "_ntoa_long_long", scope: !252, file: !252, line: 274, type: !2859, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !2861)
!2859 = !DISubroutineType(types: !2860)
!2860 = !{!255, !257, !261, !255, !255, !218, !295, !218, !7, !7, !7}
!2861 = !{!2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874}
!2862 = !DILocalVariable(name: "out", arg: 1, scope: !2858, file: !252, line: 274, type: !257)
!2863 = !DILocalVariable(name: "buffer", arg: 2, scope: !2858, file: !252, line: 274, type: !261)
!2864 = !DILocalVariable(name: "idx", arg: 3, scope: !2858, file: !252, line: 274, type: !255)
!2865 = !DILocalVariable(name: "maxlen", arg: 4, scope: !2858, file: !252, line: 274, type: !255)
!2866 = !DILocalVariable(name: "value", arg: 5, scope: !2858, file: !252, line: 274, type: !218)
!2867 = !DILocalVariable(name: "negative", arg: 6, scope: !2858, file: !252, line: 274, type: !295)
!2868 = !DILocalVariable(name: "base", arg: 7, scope: !2858, file: !252, line: 274, type: !218)
!2869 = !DILocalVariable(name: "prec", arg: 8, scope: !2858, file: !252, line: 274, type: !7)
!2870 = !DILocalVariable(name: "width", arg: 9, scope: !2858, file: !252, line: 274, type: !7)
!2871 = !DILocalVariable(name: "flags", arg: 10, scope: !2858, file: !252, line: 274, type: !7)
!2872 = !DILocalVariable(name: "buf", scope: !2858, file: !252, line: 276, type: !287)
!2873 = !DILocalVariable(name: "len", scope: !2858, file: !252, line: 277, type: !255)
!2874 = !DILocalVariable(name: "digit", scope: !2875, file: !252, line: 287, type: !800)
!2875 = distinct !DILexicalBlock(scope: !2876, file: !252, line: 286, column: 8)
!2876 = distinct !DILexicalBlock(scope: !2877, file: !252, line: 285, column: 44)
!2877 = distinct !DILexicalBlock(scope: !2858, file: !252, line: 285, column: 7)
!2878 = !DILocation(line: 0, scope: !2858)
!2879 = !DILocation(line: 276, column: 3, scope: !2858)
!2880 = !DILocation(line: 276, column: 8, scope: !2858)
!2881 = !DILocation(line: 280, column: 8, scope: !2882)
!2882 = distinct !DILexicalBlock(scope: !2858, file: !252, line: 280, column: 7)
!2883 = !DILocation(line: 280, column: 7, scope: !2858)
!2884 = !DILocation(line: 285, column: 15, scope: !2877)
!2885 = !DILocation(line: 285, column: 34, scope: !2877)
!2886 = !DILocation(line: 286, column: 5, scope: !2876)
!2887 = !DILocation(line: 289, column: 13, scope: !2875)
!2888 = !DILocation(line: 287, column: 26, scope: !2875)
!2889 = !DILocation(line: 288, column: 20, scope: !2875)
!2890 = !DILocation(line: 0, scope: !2875)
!2891 = !DILocation(line: 288, column: 26, scope: !2875)
!2892 = !DILocation(line: 288, column: 14, scope: !2875)
!2893 = !DILocation(line: 288, column: 7, scope: !2875)
!2894 = !DILocation(line: 288, column: 18, scope: !2875)
!2895 = !DILocation(line: 290, column: 14, scope: !2876)
!2896 = !DILocation(line: 290, column: 20, scope: !2876)
!2897 = !DILocation(line: 290, column: 5, scope: !2875)
!2898 = distinct !{!2898, !2886, !2899, !2129, !2130}
!2899 = !DILocation(line: 290, column: 54, scope: !2876)
!2900 = !DILocation(line: 293, column: 69, scope: !2858)
!2901 = !DILocation(line: 293, column: 10, scope: !2858)
!2902 = !DILocation(line: 294, column: 1, scope: !2858)
!2903 = !DILocation(line: 293, column: 3, scope: !2858)
!2904 = distinct !DISubprogram(name: "_ntoa_long", scope: !252, file: !252, line: 249, type: !2905, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !2907)
!2905 = !DISubroutineType(types: !2906)
!2906 = !{!255, !257, !261, !255, !255, !84, !295, !84, !7, !7, !7}
!2907 = !{!2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920}
!2908 = !DILocalVariable(name: "out", arg: 1, scope: !2904, file: !252, line: 249, type: !257)
!2909 = !DILocalVariable(name: "buffer", arg: 2, scope: !2904, file: !252, line: 249, type: !261)
!2910 = !DILocalVariable(name: "idx", arg: 3, scope: !2904, file: !252, line: 249, type: !255)
!2911 = !DILocalVariable(name: "maxlen", arg: 4, scope: !2904, file: !252, line: 249, type: !255)
!2912 = !DILocalVariable(name: "value", arg: 5, scope: !2904, file: !252, line: 249, type: !84)
!2913 = !DILocalVariable(name: "negative", arg: 6, scope: !2904, file: !252, line: 249, type: !295)
!2914 = !DILocalVariable(name: "base", arg: 7, scope: !2904, file: !252, line: 249, type: !84)
!2915 = !DILocalVariable(name: "prec", arg: 8, scope: !2904, file: !252, line: 249, type: !7)
!2916 = !DILocalVariable(name: "width", arg: 9, scope: !2904, file: !252, line: 249, type: !7)
!2917 = !DILocalVariable(name: "flags", arg: 10, scope: !2904, file: !252, line: 249, type: !7)
!2918 = !DILocalVariable(name: "buf", scope: !2904, file: !252, line: 251, type: !287)
!2919 = !DILocalVariable(name: "len", scope: !2904, file: !252, line: 252, type: !255)
!2920 = !DILocalVariable(name: "digit", scope: !2921, file: !252, line: 262, type: !800)
!2921 = distinct !DILexicalBlock(scope: !2922, file: !252, line: 261, column: 8)
!2922 = distinct !DILexicalBlock(scope: !2923, file: !252, line: 260, column: 44)
!2923 = distinct !DILexicalBlock(scope: !2904, file: !252, line: 260, column: 7)
!2924 = !DILocation(line: 0, scope: !2904)
!2925 = !DILocation(line: 251, column: 3, scope: !2904)
!2926 = !DILocation(line: 251, column: 8, scope: !2904)
!2927 = !DILocation(line: 255, column: 8, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2904, file: !252, line: 255, column: 7)
!2929 = !DILocation(line: 255, column: 7, scope: !2904)
!2930 = !DILocation(line: 260, column: 15, scope: !2923)
!2931 = !DILocation(line: 260, column: 34, scope: !2923)
!2932 = !DILocation(line: 261, column: 5, scope: !2922)
!2933 = !DILocation(line: 264, column: 13, scope: !2921)
!2934 = !DILocation(line: 263, column: 20, scope: !2921)
!2935 = !DILocation(line: 0, scope: !2921)
!2936 = !DILocation(line: 263, column: 26, scope: !2921)
!2937 = !DILocation(line: 263, column: 14, scope: !2921)
!2938 = !DILocation(line: 263, column: 7, scope: !2921)
!2939 = !DILocation(line: 263, column: 18, scope: !2921)
!2940 = !DILocation(line: 265, column: 14, scope: !2922)
!2941 = !DILocation(line: 265, column: 20, scope: !2922)
!2942 = !DILocation(line: 265, column: 5, scope: !2921)
!2943 = distinct !{!2943, !2932, !2944, !2129, !2130}
!2944 = !DILocation(line: 265, column: 54, scope: !2922)
!2945 = !DILocation(line: 268, column: 10, scope: !2904)
!2946 = !DILocation(line: 269, column: 1, scope: !2904)
!2947 = !DILocation(line: 268, column: 3, scope: !2904)
!2948 = !DILocation(line: 0, scope: !251)
!2949 = !DILocation(line: 303, column: 3, scope: !251)
!2950 = !DILocation(line: 303, column: 8, scope: !251)
!2951 = !DILocation(line: 314, column: 13, scope: !2952)
!2952 = distinct !DILexicalBlock(scope: !251, file: !252, line: 314, column: 7)
!2953 = !DILocation(line: 314, column: 7, scope: !251)
!2954 = !DILocation(line: 315, column: 25, scope: !2955)
!2955 = distinct !DILexicalBlock(scope: !2952, file: !252, line: 314, column: 23)
!2956 = !DILocation(line: 315, column: 5, scope: !2955)
!2957 = !DILocation(line: 316, column: 25, scope: !2955)
!2958 = !DILocation(line: 316, column: 5, scope: !2955)
!2959 = !DILocation(line: 317, column: 25, scope: !2955)
!2960 = !DILocation(line: 317, column: 5, scope: !2955)
!2961 = !DILocation(line: 318, column: 5, scope: !2955)
!2962 = !DILocation(line: 323, column: 13, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !251, file: !252, line: 323, column: 7)
!2964 = !DILocation(line: 323, column: 7, scope: !251)
!2965 = !DILocation(line: 329, column: 15, scope: !2966)
!2966 = distinct !DILexicalBlock(scope: !251, file: !252, line: 329, column: 7)
!2967 = !DILocation(line: 329, column: 7, scope: !251)
!2968 = !DILocation(line: 333, column: 42, scope: !251)
!2969 = !DILocation(line: 333, column: 3, scope: !251)
!2970 = !DILocation(line: 334, column: 16, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !251, file: !252, line: 333, column: 58)
!2972 = !DILocation(line: 334, column: 12, scope: !2971)
!2973 = !DILocation(line: 335, column: 9, scope: !2971)
!2974 = distinct !{!2974, !2969, !2975, !2129, !2130}
!2975 = !DILocation(line: 336, column: 3, scope: !251)
!2976 = !DILocation(line: 333, column: 15, scope: !251)
!2977 = !DILocation(line: 338, column: 15, scope: !251)
!2978 = !DILocation(line: 339, column: 25, scope: !251)
!2979 = !DILocation(line: 339, column: 23, scope: !251)
!2980 = !DILocation(line: 339, column: 34, scope: !251)
!2981 = !{!2982, !2982, i64 0}
!2982 = !{!"double", !2497, i64 0}
!2983 = !DILocation(line: 339, column: 32, scope: !251)
!2984 = !DILocation(line: 340, column: 24, scope: !251)
!2985 = !DILocation(line: 341, column: 16, scope: !251)
!2986 = !DILocation(line: 341, column: 14, scope: !251)
!2987 = !DILocation(line: 343, column: 12, scope: !2988)
!2988 = distinct !DILexicalBlock(scope: !251, file: !252, line: 343, column: 7)
!2989 = !DILocation(line: 343, column: 7, scope: !251)
!2990 = !DILocation(line: 344, column: 5, scope: !2991)
!2991 = distinct !DILexicalBlock(scope: !2988, file: !252, line: 343, column: 19)
!2992 = !DILocation(line: 346, column: 9, scope: !2993)
!2993 = distinct !DILexicalBlock(scope: !2991, file: !252, line: 346, column: 9)
!2994 = !DILocation(line: 346, column: 14, scope: !2993)
!2995 = !DILocation(line: 346, column: 9, scope: !2991)
!2996 = !DILocation(line: 348, column: 7, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2993, file: !252, line: 346, column: 30)
!2998 = !DILocation(line: 349, column: 5, scope: !2997)
!2999 = !DILocation(line: 351, column: 17, scope: !3000)
!3000 = distinct !DILexicalBlock(scope: !2988, file: !252, line: 351, column: 12)
!3001 = !DILocation(line: 351, column: 12, scope: !2988)
!3002 = !DILocation(line: 353, column: 18, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !3000, file: !252, line: 353, column: 12)
!3004 = !DILocation(line: 353, column: 25, scope: !3003)
!3005 = !DILocation(line: 360, column: 13, scope: !3006)
!3006 = distinct !DILexicalBlock(scope: !251, file: !252, line: 360, column: 7)
!3007 = !DILocation(line: 360, column: 7, scope: !251)
!3008 = !DILocation(line: 364, column: 12, scope: !301)
!3009 = !DILocation(line: 364, column: 7, scope: !251)
!3010 = !DILocation(line: 365, column: 20, scope: !3011)
!3011 = distinct !DILexicalBlock(scope: !301, file: !252, line: 364, column: 19)
!3012 = !DILocation(line: 365, column: 18, scope: !3011)
!3013 = !DILocation(line: 366, column: 24, scope: !3014)
!3014 = distinct !DILexicalBlock(scope: !3011, file: !252, line: 366, column: 9)
!3015 = !DILocation(line: 0, scope: !300)
!3016 = !DILocation(line: 375, column: 5, scope: !300)
!3017 = !DILocation(line: 376, column: 7, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !300, file: !252, line: 375, column: 43)
!3019 = !DILocation(line: 378, column: 18, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !3018, file: !252, line: 378, column: 11)
!3021 = !DILocation(line: 377, column: 20, scope: !3018)
!3022 = !DILocation(line: 377, column: 14, scope: !3018)
!3023 = !DILocation(line: 377, column: 7, scope: !3018)
!3024 = !DILocation(line: 377, column: 18, scope: !3018)
!3025 = !DILocation(line: 378, column: 11, scope: !3018)
!3026 = distinct !{!3026, !3016, !3027, !2129, !2130}
!3027 = !DILocation(line: 381, column: 5, scope: !300)
!3028 = !DILocation(line: 383, column: 17, scope: !300)
!3029 = !DILocation(line: 383, column: 44, scope: !300)
!3030 = !DILocation(line: 383, column: 53, scope: !300)
!3031 = !DILocation(line: 384, column: 14, scope: !3032)
!3032 = distinct !DILexicalBlock(scope: !300, file: !252, line: 383, column: 63)
!3033 = !DILocation(line: 384, column: 7, scope: !3032)
!3034 = !DILocation(line: 384, column: 18, scope: !3032)
!3035 = distinct !{!3035, !3036, !3037, !2129, !2130}
!3036 = !DILocation(line: 383, column: 5, scope: !300)
!3037 = !DILocation(line: 385, column: 5, scope: !300)
!3038 = !DILocation(line: 386, column: 9, scope: !300)
!3039 = !DILocation(line: 388, column: 14, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !3041, file: !252, line: 386, column: 40)
!3041 = distinct !DILexicalBlock(scope: !300, file: !252, line: 386, column: 9)
!3042 = !DILocation(line: 388, column: 7, scope: !3040)
!3043 = !DILocation(line: 388, column: 18, scope: !3040)
!3044 = !DILocation(line: 389, column: 5, scope: !3040)
!3045 = !DILocation(line: 393, column: 14, scope: !251)
!3046 = !DILocation(line: 393, column: 3, scope: !251)
!3047 = !DILocation(line: 395, column: 17, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3049, file: !252, line: 395, column: 9)
!3049 = distinct !DILexicalBlock(scope: !251, file: !252, line: 393, column: 41)
!3050 = !DILocation(line: 394, column: 18, scope: !3049)
!3051 = !DILocation(line: 394, column: 12, scope: !3049)
!3052 = !DILocation(line: 394, column: 5, scope: !3049)
!3053 = !DILocation(line: 394, column: 16, scope: !3049)
!3054 = !DILocation(line: 395, column: 9, scope: !3049)
!3055 = distinct !{!3055, !3046, !3056, !2129, !2130}
!3056 = !DILocation(line: 398, column: 3, scope: !251)
!3057 = !DILocation(line: 401, column: 15, scope: !3058)
!3058 = distinct !DILexicalBlock(scope: !251, file: !252, line: 401, column: 7)
!3059 = !DILocation(line: 401, column: 29, scope: !3058)
!3060 = !DILocation(line: 402, column: 9, scope: !3061)
!3061 = distinct !DILexicalBlock(scope: !3062, file: !252, line: 402, column: 9)
!3062 = distinct !DILexicalBlock(scope: !3058, file: !252, line: 401, column: 57)
!3063 = !DILocation(line: 402, column: 15, scope: !3061)
!3064 = !DILocation(line: 402, column: 28, scope: !3061)
!3065 = !DILocation(line: 405, column: 17, scope: !3062)
!3066 = !DILocation(line: 405, column: 26, scope: !3062)
!3067 = !DILocation(line: 405, column: 5, scope: !3062)
!3068 = !DILocation(line: 406, column: 18, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !3062, file: !252, line: 405, column: 62)
!3070 = !DILocation(line: 410, column: 11, scope: !3071)
!3071 = distinct !DILexicalBlock(scope: !251, file: !252, line: 410, column: 7)
!3072 = !DILocation(line: 410, column: 7, scope: !251)
!3073 = !DILocation(line: 411, column: 9, scope: !3074)
!3074 = distinct !DILexicalBlock(scope: !3071, file: !252, line: 410, column: 38)
!3075 = !DILocation(line: 414, column: 20, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !3077, file: !252, line: 414, column: 14)
!3077 = distinct !DILexicalBlock(scope: !3074, file: !252, line: 411, column: 9)
!3078 = !DILocation(line: 414, column: 14, scope: !3077)
!3079 = !DILocation(line: 417, column: 20, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3076, file: !252, line: 417, column: 14)
!3081 = !DILocation(line: 417, column: 14, scope: !3076)
!3082 = !DILocation(line: 0, scope: !3077)
!3083 = !DILocation(line: 423, column: 29, scope: !305)
!3084 = !DILocation(line: 0, scope: !303)
!3085 = !DILocation(line: 425, column: 27, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !3087, file: !252, line: 424, column: 42)
!3087 = distinct !DILexicalBlock(scope: !303, file: !252, line: 424, column: 5)
!3088 = !DILocation(line: 425, column: 7, scope: !3086)
!3089 = !DILocation(line: 424, column: 38, scope: !3087)
!3090 = !DILocation(line: 424, column: 28, scope: !3087)
!3091 = !DILocation(line: 424, column: 5, scope: !303)
!3092 = distinct !{!3092, !3091, !3093, !2129, !2130}
!3093 = !DILocation(line: 426, column: 5, scope: !303)
!3094 = !DILocation(line: 0, scope: !307)
!3095 = !DILocation(line: 430, column: 25, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !307, file: !252, line: 430, column: 3)
!3097 = !DILocation(line: 430, column: 3, scope: !307)
!3098 = !DILocation(line: 435, column: 7, scope: !251)
!3099 = !DILocation(line: 431, column: 21, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !3096, file: !252, line: 430, column: 37)
!3101 = !DILocation(line: 431, column: 9, scope: !3100)
!3102 = !DILocation(line: 431, column: 39, scope: !3100)
!3103 = !DILocation(line: 431, column: 5, scope: !3100)
!3104 = !DILocation(line: 430, column: 33, scope: !3096)
!3105 = distinct !{!3105, !3097, !3106, !2129, !2130}
!3106 = !DILocation(line: 432, column: 3, scope: !307)
!3107 = !DILocation(line: 437, column: 27, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3109, file: !252, line: 436, column: 37)
!3109 = distinct !DILexicalBlock(scope: !3110, file: !252, line: 435, column: 27)
!3110 = distinct !DILexicalBlock(scope: !251, file: !252, line: 435, column: 7)
!3111 = !DILocation(line: 437, column: 7, scope: !3108)
!3112 = !DILocation(line: 436, column: 16, scope: !3109)
!3113 = !DILocation(line: 436, column: 28, scope: !3109)
!3114 = !DILocation(line: 436, column: 5, scope: !3109)
!3115 = distinct !{!3115, !3114, !3116, !2129, !2130}
!3116 = !DILocation(line: 438, column: 5, scope: !3109)
!3117 = !DILocation(line: 442, column: 1, scope: !251)
!3118 = distinct !DISubprogram(name: "_strnlen_s", scope: !252, file: !252, line: 146, type: !3119, scopeLine: 147, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3121)
!3119 = !DISubroutineType(types: !3120)
!3120 = !{!7, !799, !255}
!3121 = !{!3122, !3123, !3124}
!3122 = !DILocalVariable(name: "str", arg: 1, scope: !3118, file: !252, line: 146, type: !799)
!3123 = !DILocalVariable(name: "maxsize", arg: 2, scope: !3118, file: !252, line: 146, type: !255)
!3124 = !DILocalVariable(name: "s", scope: !3118, file: !252, line: 148, type: !799)
!3125 = !DILocation(line: 0, scope: !3118)
!3126 = !DILocation(line: 149, column: 17, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3128, file: !252, line: 149, column: 3)
!3128 = distinct !DILexicalBlock(scope: !3118, file: !252, line: 149, column: 3)
!3129 = !DILocation(line: 149, column: 20, scope: !3127)
!3130 = !DILocation(line: 149, column: 30, scope: !3127)
!3131 = !DILocation(line: 149, column: 34, scope: !3127)
!3132 = distinct !{!3132, !3133, !3134, !2129, !2130}
!3133 = !DILocation(line: 149, column: 3, scope: !3128)
!3134 = !DILocation(line: 149, column: 38, scope: !3128)
!3135 = !DILocation(line: 0, scope: !3128)
!3136 = !DILocation(line: 150, column: 27, scope: !3118)
!3137 = !DILocation(line: 150, column: 3, scope: !3118)
!3138 = distinct !DISubprogram(name: "_ntoa_format", scope: !252, file: !252, line: 174, type: !3139, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3141)
!3139 = !DISubroutineType(types: !3140)
!3140 = !{!255, !257, !261, !255, !255, !261, !255, !295, !7, !7, !7, !7}
!3141 = !{!3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3158}
!3142 = !DILocalVariable(name: "out", arg: 1, scope: !3138, file: !252, line: 174, type: !257)
!3143 = !DILocalVariable(name: "buffer", arg: 2, scope: !3138, file: !252, line: 174, type: !261)
!3144 = !DILocalVariable(name: "idx", arg: 3, scope: !3138, file: !252, line: 174, type: !255)
!3145 = !DILocalVariable(name: "maxlen", arg: 4, scope: !3138, file: !252, line: 174, type: !255)
!3146 = !DILocalVariable(name: "buf", arg: 5, scope: !3138, file: !252, line: 174, type: !261)
!3147 = !DILocalVariable(name: "len", arg: 6, scope: !3138, file: !252, line: 174, type: !255)
!3148 = !DILocalVariable(name: "negative", arg: 7, scope: !3138, file: !252, line: 174, type: !295)
!3149 = !DILocalVariable(name: "base", arg: 8, scope: !3138, file: !252, line: 174, type: !7)
!3150 = !DILocalVariable(name: "prec", arg: 9, scope: !3138, file: !252, line: 174, type: !7)
!3151 = !DILocalVariable(name: "width", arg: 10, scope: !3138, file: !252, line: 174, type: !7)
!3152 = !DILocalVariable(name: "flags", arg: 11, scope: !3138, file: !252, line: 174, type: !7)
!3153 = !DILocalVariable(name: "start_idx", scope: !3138, file: !252, line: 176, type: !285)
!3154 = !DILocalVariable(name: "i", scope: !3155, file: !252, line: 227, type: !255)
!3155 = distinct !DILexicalBlock(scope: !3156, file: !252, line: 227, column: 5)
!3156 = distinct !DILexicalBlock(scope: !3157, file: !252, line: 226, column: 58)
!3157 = distinct !DILexicalBlock(scope: !3138, file: !252, line: 226, column: 7)
!3158 = !DILocalVariable(name: "i", scope: !3159, file: !252, line: 233, type: !255)
!3159 = distinct !DILexicalBlock(scope: !3138, file: !252, line: 233, column: 3)
!3160 = !DILocation(line: 0, scope: !3138)
!3161 = !DILocation(line: 179, column: 15, scope: !3162)
!3162 = distinct !DILexicalBlock(scope: !3138, file: !252, line: 179, column: 7)
!3163 = !DILocation(line: 179, column: 7, scope: !3138)
!3164 = !DILocation(line: 180, column: 9, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3166, file: !252, line: 180, column: 9)
!3166 = distinct !DILexicalBlock(scope: !3162, file: !252, line: 179, column: 30)
!3167 = !DILocation(line: 180, column: 15, scope: !3165)
!3168 = !DILocation(line: 180, column: 25, scope: !3165)
!3169 = !DILocation(line: 180, column: 42, scope: !3165)
!3170 = !DILocation(line: 180, column: 55, scope: !3165)
!3171 = !DILocation(line: 183, column: 17, scope: !3166)
!3172 = !DILocation(line: 183, column: 25, scope: !3166)
!3173 = !DILocation(line: 183, column: 5, scope: !3166)
!3174 = !DILocation(line: 184, column: 18, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3166, file: !252, line: 183, column: 61)
!3176 = !DILocation(line: 186, column: 36, scope: !3166)
!3177 = !DILocation(line: 186, column: 44, scope: !3166)
!3178 = !DILocation(line: 186, column: 53, scope: !3166)
!3179 = !DILocation(line: 187, column: 14, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !3166, file: !252, line: 186, column: 89)
!3181 = !DILocation(line: 187, column: 7, scope: !3180)
!3182 = !DILocation(line: 187, column: 18, scope: !3180)
!3183 = distinct !{!3183, !3184, !3185, !2129, !2130}
!3184 = !DILocation(line: 186, column: 5, scope: !3166)
!3185 = !DILocation(line: 188, column: 5, scope: !3166)
!3186 = !DILocation(line: 192, column: 13, scope: !3187)
!3187 = distinct !DILexicalBlock(scope: !3138, file: !252, line: 192, column: 7)
!3188 = !DILocation(line: 192, column: 7, scope: !3138)
!3189 = !DILocation(line: 193, column: 17, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !3191, file: !252, line: 193, column: 9)
!3191 = distinct !DILexicalBlock(scope: !3187, file: !252, line: 192, column: 27)
!3192 = !DILocation(line: 193, column: 36, scope: !3190)
!3193 = !DILocation(line: 193, column: 52, scope: !3190)
!3194 = !DILocation(line: 193, column: 61, scope: !3190)
!3195 = !DILocation(line: 194, column: 10, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3190, file: !252, line: 193, column: 81)
!3197 = !DILocation(line: 195, column: 11, scope: !3198)
!3198 = distinct !DILexicalBlock(scope: !3196, file: !252, line: 195, column: 11)
!3199 = !DILocation(line: 195, column: 15, scope: !3198)
!3200 = !DILocation(line: 199, column: 15, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !3191, file: !252, line: 199, column: 9)
!3202 = !DILocation(line: 199, column: 23, scope: !3201)
!3203 = !DILocation(line: 199, column: 34, scope: !3201)
!3204 = !DILocation(line: 199, column: 53, scope: !3201)
!3205 = !DILocation(line: 202, column: 38, scope: !3206)
!3206 = distinct !DILexicalBlock(scope: !3201, file: !252, line: 202, column: 14)
!3207 = !DILocation(line: 202, column: 57, scope: !3206)
!3208 = !DILocation(line: 205, column: 20, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !3206, file: !252, line: 205, column: 14)
!3210 = !DILocation(line: 205, column: 27, scope: !3209)
!3211 = !DILocation(line: 0, scope: !3201)
!3212 = !DILocation(line: 208, column: 13, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3191, file: !252, line: 208, column: 9)
!3214 = !DILocation(line: 0, scope: !3191)
!3215 = !DILocation(line: 208, column: 9, scope: !3191)
!3216 = !DILocation(line: 209, column: 14, scope: !3217)
!3217 = distinct !DILexicalBlock(scope: !3213, file: !252, line: 208, column: 40)
!3218 = !DILocation(line: 209, column: 7, scope: !3217)
!3219 = !DILocation(line: 209, column: 18, scope: !3217)
!3220 = !DILocation(line: 210, column: 5, scope: !3217)
!3221 = !DILocation(line: 213, column: 11, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3138, file: !252, line: 213, column: 7)
!3223 = !DILocation(line: 213, column: 7, scope: !3138)
!3224 = !DILocation(line: 214, column: 9, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !3222, file: !252, line: 213, column: 38)
!3226 = !DILocation(line: 217, column: 20, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !3228, file: !252, line: 217, column: 14)
!3228 = distinct !DILexicalBlock(scope: !3225, file: !252, line: 214, column: 9)
!3229 = !DILocation(line: 217, column: 14, scope: !3228)
!3230 = !DILocation(line: 220, column: 20, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3227, file: !252, line: 220, column: 14)
!3232 = !DILocation(line: 220, column: 14, scope: !3227)
!3233 = !DILocation(line: 0, scope: !3228)
!3234 = !DILocation(line: 226, column: 29, scope: !3157)
!3235 = !DILocation(line: 0, scope: !3155)
!3236 = !DILocation(line: 228, column: 27, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3238, file: !252, line: 227, column: 42)
!3238 = distinct !DILexicalBlock(scope: !3155, file: !252, line: 227, column: 5)
!3239 = !DILocation(line: 228, column: 7, scope: !3237)
!3240 = !DILocation(line: 227, column: 38, scope: !3238)
!3241 = !DILocation(line: 227, column: 28, scope: !3238)
!3242 = !DILocation(line: 227, column: 5, scope: !3155)
!3243 = distinct !{!3243, !3242, !3244, !2129, !2130}
!3244 = !DILocation(line: 229, column: 5, scope: !3155)
!3245 = !DILocation(line: 0, scope: !3159)
!3246 = !DILocation(line: 233, column: 25, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3159, file: !252, line: 233, column: 3)
!3248 = !DILocation(line: 233, column: 3, scope: !3159)
!3249 = !DILocation(line: 238, column: 7, scope: !3138)
!3250 = !DILocation(line: 234, column: 21, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3247, file: !252, line: 233, column: 37)
!3252 = !DILocation(line: 234, column: 9, scope: !3251)
!3253 = !DILocation(line: 234, column: 39, scope: !3251)
!3254 = !DILocation(line: 234, column: 5, scope: !3251)
!3255 = !DILocation(line: 233, column: 33, scope: !3247)
!3256 = distinct !{!3256, !3248, !3257, !2129, !2130}
!3257 = !DILocation(line: 235, column: 3, scope: !3159)
!3258 = !DILocation(line: 240, column: 27, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3260, file: !252, line: 239, column: 37)
!3260 = distinct !DILexicalBlock(scope: !3261, file: !252, line: 238, column: 27)
!3261 = distinct !DILexicalBlock(scope: !3138, file: !252, line: 238, column: 7)
!3262 = !DILocation(line: 240, column: 7, scope: !3259)
!3263 = !DILocation(line: 239, column: 16, scope: !3260)
!3264 = !DILocation(line: 239, column: 28, scope: !3260)
!3265 = !DILocation(line: 239, column: 5, scope: !3260)
!3266 = distinct !{!3266, !3265, !3267, !2129, !2130}
!3267 = !DILocation(line: 241, column: 5, scope: !3260)
!3268 = !DILocation(line: 244, column: 3, scope: !3138)
!3269 = distinct !DISubprogram(name: "sprintf_", scope: !252, file: !252, line: 731, type: !1216, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3270)
!3270 = !{!3271, !3272, !3273, !3274}
!3271 = !DILocalVariable(name: "buffer", arg: 1, scope: !3269, file: !252, line: 731, type: !261)
!3272 = !DILocalVariable(name: "format", arg: 2, scope: !3269, file: !252, line: 731, type: !799)
!3273 = !DILocalVariable(name: "va", scope: !3269, file: !252, line: 733, type: !2406)
!3274 = !DILocalVariable(name: "ret", scope: !3269, file: !252, line: 735, type: !2415)
!3275 = !DILocation(line: 0, scope: !3269)
!3276 = !DILocation(line: 733, column: 3, scope: !3269)
!3277 = !DILocation(line: 733, column: 11, scope: !3269)
!3278 = !DILocation(line: 734, column: 3, scope: !3269)
!3279 = !DILocation(line: 735, column: 19, scope: !3269)
!3280 = !DILocation(line: 736, column: 3, scope: !3269)
!3281 = !DILocation(line: 738, column: 1, scope: !3269)
!3282 = !DILocation(line: 737, column: 3, scope: !3269)
!3283 = distinct !DISubprogram(name: "snprintf_", scope: !252, file: !252, line: 741, type: !1253, scopeLine: 742, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3284)
!3284 = !{!3285, !3286, !3287, !3288, !3289}
!3285 = !DILocalVariable(name: "buffer", arg: 1, scope: !3283, file: !252, line: 741, type: !261)
!3286 = !DILocalVariable(name: "count", arg: 2, scope: !3283, file: !252, line: 741, type: !255)
!3287 = !DILocalVariable(name: "format", arg: 3, scope: !3283, file: !252, line: 741, type: !799)
!3288 = !DILocalVariable(name: "va", scope: !3283, file: !252, line: 743, type: !2406)
!3289 = !DILocalVariable(name: "ret", scope: !3283, file: !252, line: 745, type: !2415)
!3290 = !DILocation(line: 0, scope: !3283)
!3291 = !DILocation(line: 743, column: 3, scope: !3283)
!3292 = !DILocation(line: 743, column: 11, scope: !3283)
!3293 = !DILocation(line: 744, column: 3, scope: !3283)
!3294 = !DILocation(line: 745, column: 19, scope: !3283)
!3295 = !DILocation(line: 746, column: 3, scope: !3283)
!3296 = !DILocation(line: 748, column: 1, scope: !3283)
!3297 = !DILocation(line: 747, column: 3, scope: !3283)
!3298 = distinct !DISubprogram(name: "vsnprintf_", scope: !252, file: !252, line: 751, type: !3299, scopeLine: 752, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3301)
!3299 = !DISubroutineType(types: !3300)
!3300 = !{!24, !261, !255, !799, !2406}
!3301 = !{!3302, !3303, !3304, !3305}
!3302 = !DILocalVariable(name: "buffer", arg: 1, scope: !3298, file: !252, line: 751, type: !261)
!3303 = !DILocalVariable(name: "count", arg: 2, scope: !3298, file: !252, line: 751, type: !255)
!3304 = !DILocalVariable(name: "format", arg: 3, scope: !3298, file: !252, line: 751, type: !799)
!3305 = !DILocalVariable(name: "va", arg: 4, scope: !3298, file: !252, line: 751, type: !2406)
!3306 = !DILocation(line: 0, scope: !3298)
!3307 = !DILocation(line: 753, column: 10, scope: !3298)
!3308 = !DILocation(line: 753, column: 3, scope: !3298)
!3309 = distinct !DISubprogram(name: "fctprintf", scope: !252, file: !252, line: 757, type: !3310, scopeLine: 758, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3312)
!3310 = !DISubroutineType(types: !3311)
!3311 = !{!24, !270, !104, !799, null}
!3312 = !{!3313, !3314, !3315, !3316, !3317, !3319}
!3313 = !DILocalVariable(name: "out", arg: 1, scope: !3309, file: !252, line: 757, type: !270)
!3314 = !DILocalVariable(name: "arg", arg: 2, scope: !3309, file: !252, line: 757, type: !104)
!3315 = !DILocalVariable(name: "format", arg: 3, scope: !3309, file: !252, line: 757, type: !799)
!3316 = !DILocalVariable(name: "va", scope: !3309, file: !252, line: 759, type: !2406)
!3317 = !DILocalVariable(name: "out_fct_wrap", scope: !3309, file: !252, line: 761, type: !3318)
!3318 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !266)
!3319 = !DILocalVariable(name: "ret", scope: !3309, file: !252, line: 762, type: !2415)
!3320 = !DILocation(line: 0, scope: !3309)
!3321 = !DILocation(line: 759, column: 3, scope: !3309)
!3322 = !DILocation(line: 759, column: 11, scope: !3309)
!3323 = !DILocation(line: 760, column: 3, scope: !3309)
!3324 = !DILocation(line: 761, column: 3, scope: !3309)
!3325 = !DILocation(line: 761, column: 27, scope: !3309)
!3326 = !DILocation(line: 761, column: 42, scope: !3309)
!3327 = !DILocation(line: 762, column: 19, scope: !3309)
!3328 = !DILocation(line: 763, column: 3, scope: !3309)
!3329 = !DILocation(line: 765, column: 1, scope: !3309)
!3330 = !DILocation(line: 764, column: 3, scope: !3309)
!3331 = distinct !DISubprogram(name: "SystemInit", scope: !314, file: !314, line: 157, type: !150, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !152)
!3332 = !DILocation(line: 161, column: 11, scope: !3331)
!3333 = !{!3334, !3335, i64 0}
!3334 = !{!"", !3335, i64 0, !3335, i64 4, !3335, i64 8, !3335, i64 12, !3335, i64 16, !3335, i64 20, !3335, i64 24, !3335, i64 28, !3335, i64 32, !3335, i64 36}
!3335 = !{!"int", !2497, i64 0}
!3336 = !DILocation(line: 165, column: 13, scope: !3331)
!3337 = !{!3334, !3335, i64 4}
!3338 = !DILocation(line: 171, column: 11, scope: !3331)
!3339 = !DILocation(line: 174, column: 11, scope: !3331)
!3340 = !DILocation(line: 177, column: 13, scope: !3331)
!3341 = !DILocation(line: 196, column: 12, scope: !3331)
!3342 = !{!3334, !3335, i64 8}
!3343 = !DILocation(line: 208, column: 13, scope: !3331)
!3344 = !{!3345, !3335, i64 8}
!3345 = !{!"", !3335, i64 0, !3335, i64 4, !3335, i64 8, !3335, i64 12, !3335, i64 16, !3335, i64 20, !2497, i64 24, !3335, i64 36, !3335, i64 40, !3335, i64 44, !3335, i64 48, !3335, i64 52, !3335, i64 56, !3335, i64 60, !2497, i64 64, !3335, i64 72, !3335, i64 76, !2497, i64 80, !2497, i64 96, !2497, i64 116, !3335, i64 136}
!3346 = !DILocation(line: 210, column: 1, scope: !3331)
!3347 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !314, file: !314, line: 247, type: !150, scopeLine: 248, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !3348)
!3348 = !{!3349, !3350, !3351}
!3349 = !DILocalVariable(name: "tmp", scope: !3347, file: !314, line: 249, type: !32)
!3350 = !DILocalVariable(name: "pllmull", scope: !3347, file: !314, line: 249, type: !32)
!3351 = !DILocalVariable(name: "pllsource", scope: !3347, file: !314, line: 249, type: !32)
!3352 = !DILocation(line: 0, scope: !3347)
!3353 = !DILocation(line: 260, column: 14, scope: !3347)
!3354 = !DILocation(line: 260, column: 19, scope: !3347)
!3355 = !DILocation(line: 262, column: 3, scope: !3347)
!3356 = !DILocation(line: 273, column: 22, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3347, file: !314, line: 263, column: 3)
!3358 = !DILocation(line: 274, column: 24, scope: !3357)
!3359 = !DILocation(line: 274, column: 29, scope: !3357)
!3360 = !DILocation(line: 277, column: 27, scope: !3357)
!3361 = !DILocation(line: 277, column: 35, scope: !3357)
!3362 = !DILocation(line: 279, column: 21, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3357, file: !314, line: 279, column: 11)
!3364 = !DILocation(line: 279, column: 11, scope: !3357)
!3365 = !DILocation(line: 282, column: 45, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3363, file: !314, line: 280, column: 7)
!3367 = !DILocation(line: 283, column: 7, scope: !3366)
!3368 = !DILocation(line: 292, column: 19, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3370, file: !314, line: 292, column: 13)
!3370 = distinct !DILexicalBlock(scope: !3363, file: !314, line: 285, column: 7)
!3371 = !DILocation(line: 292, column: 24, scope: !3369)
!3372 = !DILocation(line: 292, column: 45, scope: !3369)
!3373 = !DILocation(line: 292, column: 13, scope: !3370)
!3374 = !DILocation(line: 294, column: 47, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !3369, file: !314, line: 293, column: 9)
!3376 = !DILocation(line: 295, column: 9, scope: !3375)
!3377 = !DILocation(line: 298, column: 39, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3369, file: !314, line: 297, column: 9)
!3379 = !DILocation(line: 0, scope: !3357)
!3380 = !{!3335, !3335, i64 0}
!3381 = !DILocation(line: 350, column: 30, scope: !3347)
!3382 = !DILocation(line: 350, column: 52, scope: !3347)
!3383 = !DILocation(line: 350, column: 9, scope: !3347)
!3384 = !DILocation(line: 352, column: 19, scope: !3347)
!3385 = !DILocation(line: 353, column: 1, scope: !3347)
!3386 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !1349, file: !1349, line: 202, type: !3387, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1348, retainedNodes: !3390)
!3387 = !DISubroutineType(types: !3388)
!3388 = !{!3389}
!3389 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !6, line: 47, baseType: !395)
!3390 = !{!3391}
!3391 = !DILocalVariable(name: "tickstart", scope: !3386, file: !1349, line: 204, type: !32)
!3392 = !DILocation(line: 207, column: 15, scope: !3386)
!3393 = !DILocation(line: 0, scope: !3386)
!3394 = !DILocation(line: 210, column: 3, scope: !3386)
!3395 = !DILocation(line: 213, column: 3, scope: !3386)
!3396 = !DILocation(line: 213, column: 10, scope: !3386)
!3397 = !DILocation(line: 213, column: 43, scope: !3386)
!3398 = !DILocation(line: 215, column: 10, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3400, file: !1349, line: 215, column: 9)
!3400 = distinct !DILexicalBlock(scope: !3386, file: !1349, line: 214, column: 3)
!3401 = !DILocation(line: 215, column: 24, scope: !3399)
!3402 = !DILocation(line: 215, column: 37, scope: !3399)
!3403 = !DILocation(line: 215, column: 9, scope: !3400)
!3404 = distinct !{!3404, !3395, !3405, !2129, !2130}
!3405 = !DILocation(line: 219, column: 3, scope: !3386)
!3406 = !DILocation(line: 222, column: 3, scope: !3386)
!3407 = !DILocation(line: 225, column: 15, scope: !3386)
!3408 = !DILocation(line: 228, column: 3, scope: !3386)
!3409 = !DILocation(line: 231, column: 3, scope: !3386)
!3410 = !DILocation(line: 231, column: 10, scope: !3386)
!3411 = !DILocation(line: 231, column: 44, scope: !3386)
!3412 = !DILocation(line: 233, column: 10, scope: !3413)
!3413 = distinct !DILexicalBlock(scope: !3414, file: !1349, line: 233, column: 9)
!3414 = distinct !DILexicalBlock(scope: !3386, file: !1349, line: 232, column: 3)
!3415 = !DILocation(line: 233, column: 24, scope: !3413)
!3416 = !DILocation(line: 233, column: 37, scope: !3413)
!3417 = !DILocation(line: 233, column: 9, scope: !3414)
!3418 = distinct !{!3418, !3409, !3419, !2129, !2130}
!3419 = !DILocation(line: 237, column: 3, scope: !3386)
!3420 = !DILocation(line: 240, column: 19, scope: !3386)
!3421 = !DILocation(line: 243, column: 20, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3386, file: !1349, line: 243, column: 7)
!3423 = !DILocation(line: 243, column: 7, scope: !3422)
!3424 = !DILocation(line: 243, column: 32, scope: !3422)
!3425 = !DILocation(line: 243, column: 7, scope: !3386)
!3426 = !DILocation(line: 249, column: 15, scope: !3386)
!3427 = !DILocation(line: 252, column: 3, scope: !3386)
!3428 = !DILocation(line: 255, column: 3, scope: !3386)
!3429 = !DILocation(line: 255, column: 10, scope: !3386)
!3430 = !DILocation(line: 255, column: 43, scope: !3386)
!3431 = !DILocation(line: 257, column: 10, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3433, file: !1349, line: 257, column: 9)
!3433 = distinct !DILexicalBlock(scope: !3386, file: !1349, line: 256, column: 3)
!3434 = !DILocation(line: 257, column: 24, scope: !3432)
!3435 = !DILocation(line: 257, column: 37, scope: !3432)
!3436 = !DILocation(line: 257, column: 9, scope: !3433)
!3437 = distinct !{!3437, !3428, !3438, !2129, !2130}
!3438 = !DILocation(line: 261, column: 3, scope: !3386)
!3439 = !DILocation(line: 264, column: 3, scope: !3386)
!3440 = !DILocation(line: 267, column: 15, scope: !3386)
!3441 = !DILocation(line: 270, column: 3, scope: !3386)
!3442 = !DILocation(line: 273, column: 3, scope: !3386)
!3443 = !DILocation(line: 273, column: 10, scope: !3386)
!3444 = !DILocation(line: 273, column: 43, scope: !3386)
!3445 = !DILocation(line: 275, column: 10, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3447, file: !1349, line: 275, column: 9)
!3447 = distinct !DILexicalBlock(scope: !3386, file: !1349, line: 274, column: 3)
!3448 = !DILocation(line: 275, column: 24, scope: !3446)
!3449 = !DILocation(line: 275, column: 37, scope: !3446)
!3450 = !DILocation(line: 275, column: 9, scope: !3447)
!3451 = distinct !{!3451, !3442, !3452, !2129, !2130}
!3452 = !DILocation(line: 279, column: 3, scope: !3386)
!3453 = !DILocation(line: 282, column: 3, scope: !3386)
!3454 = !DILocation(line: 324, column: 3, scope: !3386)
!3455 = !{!3334, !3335, i64 36}
!3456 = !DILocation(line: 327, column: 3, scope: !3386)
!3457 = !DILocation(line: 329, column: 3, scope: !3386)
!3458 = !DILocation(line: 330, column: 1, scope: !3386)
!3459 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !1349, file: !1349, line: 347, type: !3460, scopeLine: 348, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1348, retainedNodes: !3480)
!3460 = !DISubroutineType(types: !3461)
!3461 = !{!3389, !3462}
!3462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3463, size: 32)
!3463 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !2312, line: 261, baseType: !3464)
!3464 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2312, line: 228, size: 320, elements: !3465)
!3465 = !{!3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473}
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !3464, file: !2312, line: 230, baseType: !32, size: 32)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !3464, file: !2312, line: 238, baseType: !32, size: 32, offset: 32)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "HSEPredivValue", scope: !3464, file: !2312, line: 241, baseType: !32, size: 32, offset: 64)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !3464, file: !2312, line: 244, baseType: !32, size: 32, offset: 96)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !3464, file: !2312, line: 247, baseType: !32, size: 32, offset: 128)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !3464, file: !2312, line: 250, baseType: !32, size: 32, offset: 160)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !3464, file: !2312, line: 253, baseType: !32, size: 32, offset: 192)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !3464, file: !2312, line: 256, baseType: !3474, size: 96, offset: 224)
!3474 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !2324, line: 59, baseType: !3475)
!3475 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2324, line: 49, size: 96, elements: !3476)
!3476 = !{!3477, !3478, !3479}
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !3475, file: !2324, line: 51, baseType: !32, size: 32)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !3475, file: !2324, line: 54, baseType: !32, size: 32, offset: 32)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !3475, file: !2324, line: 57, baseType: !32, size: 32, offset: 64)
!3480 = !{!3481, !3482, !3483, !3484, !3488}
!3481 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !3459, file: !1349, line: 347, type: !3462)
!3482 = !DILocalVariable(name: "tickstart", scope: !3459, file: !1349, line: 349, type: !32)
!3483 = !DILocalVariable(name: "pll_config", scope: !3459, file: !1349, line: 350, type: !32)
!3484 = !DILocalVariable(name: "pwrclkchanged", scope: !3485, file: !1349, line: 526, type: !3487)
!3485 = distinct !DILexicalBlock(scope: !3486, file: !1349, line: 525, column: 3)
!3486 = distinct !DILexicalBlock(scope: !3459, file: !1349, line: 524, column: 7)
!3487 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !317, line: 155, baseType: !316)
!3488 = !DILocalVariable(name: "tmpreg", scope: !3489, file: !1349, line: 535, type: !72)
!3489 = distinct !DILexicalBlock(scope: !3490, file: !1349, line: 535, column: 7)
!3490 = distinct !DILexicalBlock(scope: !3491, file: !1349, line: 534, column: 5)
!3491 = distinct !DILexicalBlock(scope: !3485, file: !1349, line: 533, column: 9)
!3492 = !DILocation(line: 0, scope: !3459)
!3493 = !DILocation(line: 353, column: 25, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3459, file: !1349, line: 353, column: 7)
!3495 = !DILocation(line: 353, column: 7, scope: !3459)
!3496 = !DILocation(line: 362, column: 28, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3459, file: !1349, line: 362, column: 7)
!3498 = !{!3499, !3335, i64 0}
!3499 = !{!"", !3335, i64 0, !3335, i64 4, !3335, i64 8, !3335, i64 12, !3335, i64 16, !3335, i64 20, !3335, i64 24, !3500, i64 28}
!3500 = !{!"", !3335, i64 0, !3335, i64 4, !3335, i64 8}
!3501 = !DILocation(line: 362, column: 44, scope: !3497)
!3502 = !DILocation(line: 362, column: 70, scope: !3497)
!3503 = !DILocation(line: 362, column: 7, scope: !3459)
!3504 = !DILocation(line: 368, column: 10, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3506, file: !1349, line: 368, column: 9)
!3506 = distinct !DILexicalBlock(scope: !3497, file: !1349, line: 363, column: 3)
!3507 = !DILocation(line: 368, column: 40, scope: !3505)
!3508 = !DILocation(line: 369, column: 9, scope: !3505)
!3509 = !DILocation(line: 369, column: 14, scope: !3505)
!3510 = !DILocation(line: 369, column: 44, scope: !3505)
!3511 = !DILocation(line: 369, column: 79, scope: !3505)
!3512 = !DILocation(line: 369, column: 83, scope: !3505)
!3513 = !DILocation(line: 369, column: 113, scope: !3505)
!3514 = !DILocation(line: 368, column: 9, scope: !3506)
!3515 = !DILocation(line: 371, column: 12, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3517, file: !1349, line: 371, column: 11)
!3517 = distinct !DILexicalBlock(scope: !3505, file: !1349, line: 370, column: 5)
!3518 = !DILocation(line: 371, column: 48, scope: !3516)
!3519 = !DILocation(line: 371, column: 58, scope: !3516)
!3520 = !DILocation(line: 371, column: 81, scope: !3516)
!3521 = !{!3499, !3335, i64 4}
!3522 = !DILocation(line: 371, column: 90, scope: !3516)
!3523 = !DILocation(line: 371, column: 11, scope: !3517)
!3524 = !DILocation(line: 379, column: 7, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3526, file: !1349, line: 379, column: 7)
!3526 = distinct !DILexicalBlock(scope: !3527, file: !1349, line: 379, column: 7)
!3527 = distinct !DILexicalBlock(scope: !3505, file: !1349, line: 377, column: 5)
!3528 = !DILocation(line: 379, column: 7, scope: !3526)
!3529 = !DILocation(line: 379, column: 7, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3525, file: !1349, line: 379, column: 7)
!3531 = !DILocation(line: 379, column: 7, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3533, file: !1349, line: 379, column: 7)
!3533 = distinct !DILexicalBlock(scope: !3525, file: !1349, line: 379, column: 7)
!3534 = !DILocation(line: 379, column: 7, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3536, file: !1349, line: 379, column: 7)
!3536 = distinct !DILexicalBlock(scope: !3533, file: !1349, line: 379, column: 7)
!3537 = !DILocation(line: 379, column: 7, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3536, file: !1349, line: 379, column: 7)
!3539 = !DILocation(line: 0, scope: !3525)
!3540 = !DILocation(line: 383, column: 39, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3527, file: !1349, line: 383, column: 11)
!3542 = !DILocation(line: 0, scope: !3541)
!3543 = !DILocation(line: 383, column: 11, scope: !3527)
!3544 = !DILocation(line: 389, column: 16, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3541, file: !1349, line: 384, column: 7)
!3546 = !DILocation(line: 389, column: 52, scope: !3545)
!3547 = !DILocation(line: 389, column: 9, scope: !3545)
!3548 = !DILocation(line: 391, column: 16, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3550, file: !1349, line: 391, column: 15)
!3550 = distinct !DILexicalBlock(scope: !3545, file: !1349, line: 390, column: 9)
!3551 = !DILocation(line: 391, column: 30, scope: !3549)
!3552 = !DILocation(line: 391, column: 43, scope: !3549)
!3553 = !DILocation(line: 391, column: 15, scope: !3550)
!3554 = distinct !{!3554, !3547, !3555, !2129, !2130}
!3555 = !DILocation(line: 395, column: 9, scope: !3545)
!3556 = !DILocation(line: 403, column: 16, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3541, file: !1349, line: 398, column: 7)
!3558 = !DILocation(line: 403, column: 52, scope: !3557)
!3559 = !DILocation(line: 403, column: 9, scope: !3557)
!3560 = !DILocation(line: 405, column: 16, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3562, file: !1349, line: 405, column: 15)
!3562 = distinct !DILexicalBlock(scope: !3557, file: !1349, line: 404, column: 9)
!3563 = !DILocation(line: 405, column: 30, scope: !3561)
!3564 = !DILocation(line: 405, column: 43, scope: !3561)
!3565 = !DILocation(line: 405, column: 15, scope: !3562)
!3566 = distinct !{!3566, !3559, !3567, !2129, !2130}
!3567 = !DILocation(line: 409, column: 9, scope: !3557)
!3568 = !DILocation(line: 414, column: 28, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3459, file: !1349, line: 414, column: 7)
!3570 = !DILocation(line: 414, column: 44, scope: !3569)
!3571 = !DILocation(line: 414, column: 70, scope: !3569)
!3572 = !DILocation(line: 414, column: 7, scope: !3459)
!3573 = !DILocation(line: 421, column: 10, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3575, file: !1349, line: 421, column: 9)
!3575 = distinct !DILexicalBlock(scope: !3569, file: !1349, line: 415, column: 3)
!3576 = !DILocation(line: 421, column: 40, scope: !3574)
!3577 = !DILocation(line: 422, column: 9, scope: !3574)
!3578 = !DILocation(line: 422, column: 14, scope: !3574)
!3579 = !DILocation(line: 422, column: 44, scope: !3574)
!3580 = !DILocation(line: 422, column: 79, scope: !3574)
!3581 = !DILocation(line: 422, column: 83, scope: !3574)
!3582 = !DILocation(line: 422, column: 113, scope: !3574)
!3583 = !DILocation(line: 421, column: 9, scope: !3575)
!3584 = !DILocation(line: 425, column: 12, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3586, file: !1349, line: 425, column: 11)
!3586 = distinct !DILexicalBlock(scope: !3574, file: !1349, line: 423, column: 5)
!3587 = !DILocation(line: 425, column: 48, scope: !3585)
!3588 = !DILocation(line: 425, column: 58, scope: !3585)
!3589 = !DILocation(line: 425, column: 81, scope: !3585)
!3590 = !{!3499, !3335, i64 16}
!3591 = !DILocation(line: 425, column: 90, scope: !3585)
!3592 = !DILocation(line: 425, column: 11, scope: !3586)
!3593 = !DILocation(line: 439, column: 30, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3595, file: !1349, line: 439, column: 11)
!3595 = distinct !DILexicalBlock(scope: !3574, file: !1349, line: 437, column: 5)
!3596 = !DILocation(line: 439, column: 39, scope: !3594)
!3597 = !DILocation(line: 439, column: 11, scope: !3595)
!3598 = !DILocation(line: 442, column: 9, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3594, file: !1349, line: 440, column: 7)
!3600 = !DILocation(line: 445, column: 21, scope: !3599)
!3601 = !DILocation(line: 448, column: 9, scope: !3599)
!3602 = !DILocation(line: 448, column: 16, scope: !3599)
!3603 = !DILocation(line: 448, column: 52, scope: !3599)
!3604 = !DILocation(line: 450, column: 16, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3606, file: !1349, line: 450, column: 15)
!3606 = distinct !DILexicalBlock(scope: !3599, file: !1349, line: 449, column: 9)
!3607 = !DILocation(line: 450, column: 30, scope: !3605)
!3608 = !DILocation(line: 450, column: 43, scope: !3605)
!3609 = !DILocation(line: 450, column: 15, scope: !3606)
!3610 = distinct !{!3610, !3601, !3611, !2129, !2130}
!3611 = !DILocation(line: 454, column: 9, scope: !3599)
!3612 = !DILocation(line: 462, column: 9, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3594, file: !1349, line: 460, column: 7)
!3614 = !DILocation(line: 465, column: 21, scope: !3613)
!3615 = !DILocation(line: 468, column: 9, scope: !3613)
!3616 = !DILocation(line: 468, column: 16, scope: !3613)
!3617 = !DILocation(line: 468, column: 52, scope: !3613)
!3618 = !DILocation(line: 470, column: 16, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3620, file: !1349, line: 470, column: 15)
!3620 = distinct !DILexicalBlock(scope: !3613, file: !1349, line: 469, column: 9)
!3621 = !DILocation(line: 470, column: 30, scope: !3619)
!3622 = !DILocation(line: 470, column: 43, scope: !3619)
!3623 = !DILocation(line: 470, column: 15, scope: !3620)
!3624 = distinct !{!3624, !3615, !3625, !2129, !2130}
!3625 = !DILocation(line: 474, column: 9, scope: !3613)
!3626 = !DILocation(line: 0, scope: !3574)
!3627 = !{!3499, !3335, i64 20}
!3628 = !DILocation(line: 479, column: 28, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3459, file: !1349, line: 479, column: 7)
!3630 = !DILocation(line: 479, column: 44, scope: !3629)
!3631 = !DILocation(line: 479, column: 70, scope: !3629)
!3632 = !DILocation(line: 479, column: 7, scope: !3459)
!3633 = !DILocation(line: 485, column: 28, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3635, file: !1349, line: 485, column: 9)
!3635 = distinct !DILexicalBlock(scope: !3629, file: !1349, line: 480, column: 3)
!3636 = !{!3499, !3335, i64 24}
!3637 = !DILocation(line: 485, column: 37, scope: !3634)
!3638 = !DILocation(line: 485, column: 9, scope: !3635)
!3639 = !DILocation(line: 488, column: 7, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3634, file: !1349, line: 486, column: 5)
!3641 = !DILocation(line: 491, column: 19, scope: !3640)
!3642 = !DILocation(line: 494, column: 7, scope: !3640)
!3643 = !DILocation(line: 494, column: 14, scope: !3640)
!3644 = !DILocation(line: 494, column: 50, scope: !3640)
!3645 = !DILocation(line: 496, column: 14, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3647, file: !1349, line: 496, column: 13)
!3647 = distinct !DILexicalBlock(scope: !3640, file: !1349, line: 495, column: 7)
!3648 = !DILocation(line: 496, column: 28, scope: !3646)
!3649 = !DILocation(line: 496, column: 41, scope: !3646)
!3650 = !DILocation(line: 496, column: 13, scope: !3647)
!3651 = distinct !{!3651, !3642, !3652, !2129, !2130}
!3652 = !DILocation(line: 500, column: 7, scope: !3640)
!3653 = !DILocation(line: 503, column: 7, scope: !3640)
!3654 = !DILocation(line: 504, column: 5, scope: !3640)
!3655 = !DILocation(line: 508, column: 7, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3634, file: !1349, line: 506, column: 5)
!3657 = !DILocation(line: 511, column: 19, scope: !3656)
!3658 = !DILocation(line: 514, column: 7, scope: !3656)
!3659 = !DILocation(line: 514, column: 14, scope: !3656)
!3660 = !DILocation(line: 514, column: 50, scope: !3656)
!3661 = !DILocation(line: 516, column: 14, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3663, file: !1349, line: 516, column: 13)
!3663 = distinct !DILexicalBlock(scope: !3656, file: !1349, line: 515, column: 7)
!3664 = !DILocation(line: 516, column: 28, scope: !3662)
!3665 = !DILocation(line: 516, column: 41, scope: !3662)
!3666 = !DILocation(line: 516, column: 13, scope: !3663)
!3667 = distinct !{!3667, !3658, !3668, !2129, !2130}
!3668 = !DILocation(line: 520, column: 7, scope: !3656)
!3669 = !DILocation(line: 524, column: 28, scope: !3486)
!3670 = !DILocation(line: 524, column: 44, scope: !3486)
!3671 = !DILocation(line: 524, column: 70, scope: !3486)
!3672 = !DILocation(line: 524, column: 7, scope: !3459)
!3673 = !DILocation(line: 0, scope: !3485)
!3674 = !DILocation(line: 533, column: 9, scope: !3491)
!3675 = !{!3334, !3335, i64 28}
!3676 = !DILocation(line: 533, column: 9, scope: !3485)
!3677 = !DILocation(line: 535, column: 7, scope: !3489)
!3678 = !DILocation(line: 535, column: 7, scope: !3490)
!3679 = !DILocation(line: 537, column: 5, scope: !3490)
!3680 = !DILocation(line: 539, column: 9, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3485, file: !1349, line: 539, column: 9)
!3682 = !{!3683, !3335, i64 0}
!3683 = !{!"", !3335, i64 0, !3335, i64 4}
!3684 = !DILocation(line: 539, column: 9, scope: !3485)
!3685 = !DILocation(line: 542, column: 7, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3681, file: !1349, line: 540, column: 5)
!3687 = !DILocation(line: 545, column: 19, scope: !3686)
!3688 = !DILocation(line: 547, column: 7, scope: !3686)
!3689 = !DILocation(line: 547, column: 14, scope: !3686)
!3690 = !DILocation(line: 549, column: 14, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3692, file: !1349, line: 549, column: 13)
!3692 = distinct !DILexicalBlock(scope: !3686, file: !1349, line: 548, column: 7)
!3693 = !DILocation(line: 549, column: 28, scope: !3691)
!3694 = !DILocation(line: 549, column: 41, scope: !3691)
!3695 = !DILocation(line: 549, column: 13, scope: !3692)
!3696 = distinct !{!3696, !3688, !3697, !2129, !2130}
!3697 = !DILocation(line: 553, column: 7, scope: !3686)
!3698 = !DILocation(line: 557, column: 5, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !1349, line: 557, column: 5)
!3700 = distinct !DILexicalBlock(scope: !3485, file: !1349, line: 557, column: 5)
!3701 = !{!3499, !3335, i64 12}
!3702 = !DILocation(line: 557, column: 5, scope: !3700)
!3703 = !DILocation(line: 557, column: 5, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3699, file: !1349, line: 557, column: 5)
!3705 = !{!3334, !3335, i64 32}
!3706 = !DILocation(line: 557, column: 5, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3708, file: !1349, line: 557, column: 5)
!3708 = distinct !DILexicalBlock(scope: !3699, file: !1349, line: 557, column: 5)
!3709 = !DILocation(line: 557, column: 5, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3711, file: !1349, line: 557, column: 5)
!3711 = distinct !DILexicalBlock(scope: !3708, file: !1349, line: 557, column: 5)
!3712 = !DILocation(line: 557, column: 5, scope: !3713)
!3713 = distinct !DILexicalBlock(scope: !3711, file: !1349, line: 557, column: 5)
!3714 = !DILocation(line: 0, scope: !3699)
!3715 = !DILocation(line: 559, column: 37, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3485, file: !1349, line: 559, column: 9)
!3717 = !DILocation(line: 0, scope: !3716)
!3718 = !DILocation(line: 559, column: 9, scope: !3485)
!3719 = !DILocation(line: 565, column: 14, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !3716, file: !1349, line: 560, column: 5)
!3721 = !DILocation(line: 565, column: 50, scope: !3720)
!3722 = !DILocation(line: 565, column: 7, scope: !3720)
!3723 = !DILocation(line: 567, column: 14, scope: !3724)
!3724 = distinct !DILexicalBlock(scope: !3725, file: !1349, line: 567, column: 13)
!3725 = distinct !DILexicalBlock(scope: !3720, file: !1349, line: 566, column: 7)
!3726 = !DILocation(line: 567, column: 28, scope: !3724)
!3727 = !DILocation(line: 567, column: 41, scope: !3724)
!3728 = !DILocation(line: 567, column: 13, scope: !3725)
!3729 = distinct !{!3729, !3722, !3730, !2129, !2130}
!3730 = !DILocation(line: 571, column: 7, scope: !3720)
!3731 = !DILocation(line: 579, column: 14, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3716, file: !1349, line: 574, column: 5)
!3733 = !DILocation(line: 579, column: 50, scope: !3732)
!3734 = !DILocation(line: 579, column: 7, scope: !3732)
!3735 = !DILocation(line: 581, column: 14, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !3737, file: !1349, line: 581, column: 13)
!3737 = distinct !DILexicalBlock(scope: !3732, file: !1349, line: 580, column: 7)
!3738 = !DILocation(line: 581, column: 28, scope: !3736)
!3739 = !DILocation(line: 581, column: 41, scope: !3736)
!3740 = !DILocation(line: 581, column: 13, scope: !3737)
!3741 = distinct !{!3741, !3734, !3742, !2129, !2130}
!3742 = !DILocation(line: 585, column: 7, scope: !3732)
!3743 = !DILocation(line: 589, column: 9, scope: !3485)
!3744 = !DILocation(line: 591, column: 7, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3746, file: !1349, line: 590, column: 5)
!3746 = distinct !DILexicalBlock(scope: !3485, file: !1349, line: 589, column: 9)
!3747 = !DILocation(line: 592, column: 5, scope: !3745)
!3748 = !DILocation(line: 688, column: 31, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3459, file: !1349, line: 688, column: 7)
!3750 = !{!3499, !3335, i64 28}
!3751 = !DILocation(line: 688, column: 41, scope: !3749)
!3752 = !DILocation(line: 688, column: 7, scope: !3459)
!3753 = !DILocation(line: 691, column: 9, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3755, file: !1349, line: 691, column: 9)
!3755 = distinct !DILexicalBlock(scope: !3749, file: !1349, line: 689, column: 3)
!3756 = !DILocation(line: 691, column: 39, scope: !3754)
!3757 = !DILocation(line: 691, column: 9, scope: !3755)
!3758 = !DILocation(line: 693, column: 45, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3760, file: !1349, line: 693, column: 11)
!3760 = distinct !DILexicalBlock(scope: !3754, file: !1349, line: 692, column: 5)
!3761 = !DILocation(line: 0, scope: !3759)
!3762 = !DILocation(line: 693, column: 11, scope: !3760)
!3763 = !DILocation(line: 706, column: 16, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3759, file: !1349, line: 694, column: 7)
!3765 = !DILocation(line: 706, column: 53, scope: !3764)
!3766 = !DILocation(line: 706, column: 9, scope: !3764)
!3767 = !DILocation(line: 708, column: 16, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3769, file: !1349, line: 708, column: 15)
!3769 = distinct !DILexicalBlock(scope: !3764, file: !1349, line: 707, column: 9)
!3770 = !DILocation(line: 708, column: 30, scope: !3768)
!3771 = !DILocation(line: 708, column: 43, scope: !3768)
!3772 = !DILocation(line: 708, column: 15, scope: !3769)
!3773 = distinct !{!3773, !3766, !3774, !2129, !2130}
!3774 = !DILocation(line: 712, column: 9, scope: !3764)
!3775 = !DILocation(line: 716, column: 36, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3764, file: !1349, line: 716, column: 13)
!3777 = !{!3499, !3335, i64 32}
!3778 = !DILocation(line: 716, column: 46, scope: !3776)
!3779 = !DILocation(line: 716, column: 13, scope: !3764)
!3780 = !DILocation(line: 728, column: 11, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3776, file: !1349, line: 717, column: 9)
!3782 = !{!3499, !3335, i64 8}
!3783 = !DILocation(line: 729, column: 9, scope: !3781)
!3784 = !DILocation(line: 732, column: 9, scope: !3764)
!3785 = !{!3499, !3335, i64 36}
!3786 = !DILocation(line: 735, column: 9, scope: !3764)
!3787 = !DILocation(line: 738, column: 21, scope: !3764)
!3788 = !DILocation(line: 741, column: 9, scope: !3764)
!3789 = !DILocation(line: 741, column: 16, scope: !3764)
!3790 = !DILocation(line: 741, column: 53, scope: !3764)
!3791 = !DILocation(line: 743, column: 16, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3793, file: !1349, line: 743, column: 15)
!3793 = distinct !DILexicalBlock(scope: !3764, file: !1349, line: 742, column: 9)
!3794 = !DILocation(line: 743, column: 30, scope: !3792)
!3795 = !DILocation(line: 743, column: 43, scope: !3792)
!3796 = !DILocation(line: 743, column: 15, scope: !3793)
!3797 = distinct !{!3797, !3788, !3798, !2129, !2130}
!3798 = !DILocation(line: 747, column: 9, scope: !3764)
!3799 = !DILocation(line: 758, column: 16, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3759, file: !1349, line: 750, column: 7)
!3801 = !DILocation(line: 758, column: 53, scope: !3800)
!3802 = !DILocation(line: 758, column: 9, scope: !3800)
!3803 = !DILocation(line: 760, column: 16, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3805, file: !1349, line: 760, column: 15)
!3805 = distinct !DILexicalBlock(scope: !3800, file: !1349, line: 759, column: 9)
!3806 = !DILocation(line: 760, column: 30, scope: !3804)
!3807 = !DILocation(line: 760, column: 43, scope: !3804)
!3808 = !DILocation(line: 760, column: 15, scope: !3805)
!3809 = distinct !{!3809, !3802, !3810, !2129, !2130}
!3810 = !DILocation(line: 764, column: 9, scope: !3800)
!3811 = !DILocation(line: 770, column: 45, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3813, file: !1349, line: 770, column: 11)
!3813 = distinct !DILexicalBlock(scope: !3754, file: !1349, line: 768, column: 5)
!3814 = !DILocation(line: 770, column: 11, scope: !3813)
!3815 = !DILocation(line: 777, column: 27, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3812, file: !1349, line: 775, column: 7)
!3817 = !DILocation(line: 778, column: 14, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3816, file: !1349, line: 778, column: 13)
!3819 = !DILocation(line: 778, column: 78, scope: !3818)
!3820 = !DILocation(line: 778, column: 52, scope: !3818)
!3821 = !DILocation(line: 778, column: 89, scope: !3818)
!3822 = !DILocation(line: 779, column: 14, scope: !3818)
!3823 = !DILocation(line: 779, column: 79, scope: !3818)
!3824 = !DILocation(line: 779, column: 53, scope: !3818)
!3825 = !DILocation(line: 778, column: 13, scope: !3816)
!3826 = !DILocation(line: 787, column: 3, scope: !3459)
!3827 = !DILocation(line: 788, column: 1, scope: !3459)
!3828 = distinct !DISubprogram(name: "RCC_Delay", scope: !1349, file: !1349, line: 1365, type: !3829, scopeLine: 1366, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1348, retainedNodes: !3831)
!3829 = !DISubroutineType(types: !3830)
!3830 = !{null, !32}
!3831 = !{!3832, !3833}
!3832 = !DILocalVariable(name: "mdelay", arg: 1, scope: !3828, file: !1349, line: 1365, type: !32)
!3833 = !DILocalVariable(name: "Delay", scope: !3828, file: !1349, line: 1367, type: !72)
!3834 = !DILocation(line: 0, scope: !3828)
!3835 = !DILocation(line: 1367, column: 3, scope: !3828)
!3836 = !DILocation(line: 1367, column: 17, scope: !3828)
!3837 = !DILocation(line: 1367, column: 35, scope: !3828)
!3838 = !DILocation(line: 1367, column: 56, scope: !3828)
!3839 = !DILocation(line: 1368, column: 3, scope: !3828)
!3840 = !DILocation(line: 1370, column: 5, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3828, file: !1349, line: 1369, column: 3)
!3842 = !{i64 2149488927}
!3843 = !DILocation(line: 1372, column: 16, scope: !3828)
!3844 = !DILocation(line: 1371, column: 3, scope: !3841)
!3845 = distinct !{!3845, !3839, !3846, !2129, !2130}
!3846 = !DILocation(line: 1372, column: 18, scope: !3828)
!3847 = !DILocation(line: 1373, column: 1, scope: !3828)
!3848 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !1349, file: !1349, line: 813, type: !3849, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1348, retainedNodes: !3860)
!3849 = !DISubroutineType(types: !3850)
!3850 = !{!3389, !3851, !32}
!3851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3852, size: 32)
!3852 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !2324, line: 80, baseType: !3853)
!3853 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2324, line: 64, size: 160, elements: !3854)
!3854 = !{!3855, !3856, !3857, !3858, !3859}
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !3853, file: !2324, line: 66, baseType: !32, size: 32)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !3853, file: !2324, line: 69, baseType: !32, size: 32, offset: 32)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !3853, file: !2324, line: 72, baseType: !32, size: 32, offset: 64)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !3853, file: !2324, line: 75, baseType: !32, size: 32, offset: 96)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !3853, file: !2324, line: 78, baseType: !32, size: 32, offset: 128)
!3860 = !{!3861, !3862, !3863}
!3861 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !3848, file: !1349, line: 813, type: !3851)
!3862 = !DILocalVariable(name: "FLatency", arg: 2, scope: !3848, file: !1349, line: 813, type: !32)
!3863 = !DILocalVariable(name: "tickstart", scope: !3848, file: !1349, line: 815, type: !32)
!3864 = !DILocation(line: 0, scope: !3848)
!3865 = !DILocation(line: 818, column: 25, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3848, file: !1349, line: 818, column: 7)
!3867 = !DILocation(line: 818, column: 7, scope: !3848)
!3868 = !DILocation(line: 833, column: 18, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3848, file: !1349, line: 833, column: 7)
!3870 = !{!3871, !3335, i64 0}
!3871 = !{!"", !3335, i64 0, !3335, i64 4, !3335, i64 8, !3335, i64 12, !3335, i64 16, !3335, i64 20, !3335, i64 24, !3335, i64 28, !3335, i64 32}
!3872 = !DILocation(line: 833, column: 16, scope: !3869)
!3873 = !DILocation(line: 833, column: 7, scope: !3848)
!3874 = !DILocation(line: 836, column: 5, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3869, file: !1349, line: 834, column: 3)
!3876 = !DILocation(line: 840, column: 9, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3875, file: !1349, line: 840, column: 9)
!3878 = !DILocation(line: 840, column: 35, scope: !3877)
!3879 = !DILocation(line: 840, column: 9, scope: !3875)
!3880 = !DILocation(line: 848, column: 26, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3848, file: !1349, line: 848, column: 5)
!3882 = !{!3883, !3335, i64 0}
!3883 = !{!"", !3335, i64 0, !3335, i64 4, !3335, i64 8, !3335, i64 12, !3335, i64 16}
!3884 = !DILocation(line: 848, column: 37, scope: !3881)
!3885 = !DILocation(line: 848, column: 59, scope: !3881)
!3886 = !DILocation(line: 848, column: 5, scope: !3848)
!3887 = !DILocation(line: 852, column: 41, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3889, file: !1349, line: 852, column: 9)
!3889 = distinct !DILexicalBlock(scope: !3881, file: !1349, line: 849, column: 3)
!3890 = !DILocation(line: 852, column: 64, scope: !3888)
!3891 = !DILocation(line: 852, column: 9, scope: !3889)
!3892 = !DILocation(line: 854, column: 7, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3888, file: !1349, line: 853, column: 5)
!3894 = !DILocation(line: 855, column: 5, scope: !3893)
!3895 = !DILocation(line: 857, column: 41, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3889, file: !1349, line: 857, column: 9)
!3897 = !DILocation(line: 857, column: 64, scope: !3896)
!3898 = !DILocation(line: 857, column: 9, scope: !3889)
!3899 = !DILocation(line: 859, column: 7, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3896, file: !1349, line: 858, column: 5)
!3901 = !DILocation(line: 860, column: 5, scope: !3900)
!3902 = !DILocation(line: 864, column: 5, scope: !3889)
!3903 = !{!3883, !3335, i64 8}
!3904 = !DILocation(line: 865, column: 3, scope: !3889)
!3905 = !DILocation(line: 868, column: 39, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3848, file: !1349, line: 868, column: 7)
!3907 = !DILocation(line: 868, column: 63, scope: !3906)
!3908 = !DILocation(line: 868, column: 7, scope: !3848)
!3909 = !DILocation(line: 873, column: 28, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3911, file: !1349, line: 873, column: 9)
!3911 = distinct !DILexicalBlock(scope: !3906, file: !1349, line: 869, column: 3)
!3912 = !{!3883, !3335, i64 4}
!3913 = !DILocation(line: 873, column: 9, scope: !3911)
!3914 = !DILocation(line: 876, column: 11, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3916, file: !1349, line: 876, column: 11)
!3916 = distinct !DILexicalBlock(scope: !3910, file: !1349, line: 874, column: 5)
!3917 = !DILocation(line: 876, column: 47, scope: !3915)
!3918 = !DILocation(line: 876, column: 11, scope: !3916)
!3919 = !DILocation(line: 885, column: 11, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3921, file: !1349, line: 885, column: 11)
!3921 = distinct !DILexicalBlock(scope: !3922, file: !1349, line: 883, column: 5)
!3922 = distinct !DILexicalBlock(scope: !3910, file: !1349, line: 882, column: 14)
!3923 = !DILocation(line: 885, column: 47, scope: !3920)
!3924 = !DILocation(line: 885, column: 11, scope: !3921)
!3925 = !DILocation(line: 894, column: 11, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3927, file: !1349, line: 894, column: 11)
!3927 = distinct !DILexicalBlock(scope: !3922, file: !1349, line: 892, column: 5)
!3928 = !DILocation(line: 894, column: 47, scope: !3926)
!3929 = !DILocation(line: 894, column: 11, scope: !3927)
!3930 = !DILocation(line: 899, column: 5, scope: !3911)
!3931 = !DILocation(line: 902, column: 17, scope: !3911)
!3932 = !DILocation(line: 904, column: 5, scope: !3911)
!3933 = !DILocation(line: 904, column: 12, scope: !3911)
!3934 = !DILocation(line: 904, column: 65, scope: !3911)
!3935 = !DILocation(line: 904, column: 78, scope: !3911)
!3936 = !DILocation(line: 904, column: 42, scope: !3911)
!3937 = !DILocation(line: 906, column: 12, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3939, file: !1349, line: 906, column: 11)
!3939 = distinct !DILexicalBlock(scope: !3911, file: !1349, line: 905, column: 5)
!3940 = !DILocation(line: 906, column: 26, scope: !3938)
!3941 = !DILocation(line: 906, column: 39, scope: !3938)
!3942 = !DILocation(line: 906, column: 11, scope: !3939)
!3943 = distinct !{!3943, !3932, !3944, !2129, !2130}
!3944 = !DILocation(line: 910, column: 5, scope: !3911)
!3945 = !DILocation(line: 915, column: 18, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3848, file: !1349, line: 915, column: 7)
!3947 = !DILocation(line: 915, column: 16, scope: !3946)
!3948 = !DILocation(line: 915, column: 7, scope: !3848)
!3949 = !DILocation(line: 918, column: 5, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3946, file: !1349, line: 916, column: 3)
!3951 = !DILocation(line: 922, column: 9, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3950, file: !1349, line: 922, column: 9)
!3953 = !DILocation(line: 922, column: 35, scope: !3952)
!3954 = !DILocation(line: 922, column: 9, scope: !3950)
!3955 = !DILocation(line: 930, column: 26, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3848, file: !1349, line: 930, column: 5)
!3957 = !DILocation(line: 930, column: 37, scope: !3956)
!3958 = !DILocation(line: 930, column: 60, scope: !3956)
!3959 = !DILocation(line: 930, column: 5, scope: !3848)
!3960 = !DILocation(line: 933, column: 5, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3956, file: !1349, line: 931, column: 3)
!3962 = !{!3883, !3335, i64 12}
!3963 = !DILocation(line: 934, column: 3, scope: !3961)
!3964 = !DILocation(line: 937, column: 39, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3848, file: !1349, line: 937, column: 7)
!3966 = !DILocation(line: 937, column: 62, scope: !3965)
!3967 = !DILocation(line: 937, column: 7, scope: !3848)
!3968 = !DILocation(line: 940, column: 5, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3965, file: !1349, line: 938, column: 3)
!3970 = !{!3883, !3335, i64 16}
!3971 = !DILocation(line: 941, column: 3, scope: !3969)
!3972 = !DILocation(line: 944, column: 21, scope: !3848)
!3973 = !DILocation(line: 944, column: 70, scope: !3848)
!3974 = !DILocation(line: 944, column: 92, scope: !3848)
!3975 = !DILocation(line: 944, column: 50, scope: !3848)
!3976 = !DILocation(line: 944, column: 47, scope: !3848)
!3977 = !DILocation(line: 944, column: 19, scope: !3848)
!3978 = !DILocation(line: 947, column: 16, scope: !3848)
!3979 = !DILocation(line: 947, column: 3, scope: !3848)
!3980 = !DILocation(line: 949, column: 3, scope: !3848)
!3981 = !DILocation(line: 950, column: 1, scope: !3848)
!3982 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !1349, file: !1349, line: 1082, type: !3983, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1348, retainedNodes: !3985)
!3983 = !DISubroutineType(types: !3984)
!3984 = !{!32}
!3985 = !{!3986, !3987, !3989, !3990, !3991, !3992, !3993}
!3986 = !DILocalVariable(name: "aPLLMULFactorTable", scope: !3982, file: !1349, line: 1088, type: !382)
!3987 = !DILocalVariable(name: "aPredivFactorTable", scope: !3982, file: !1349, line: 1092, type: !3988)
!3988 = !DICompositeType(tag: DW_TAG_array_type, baseType: !379, size: 16, elements: !116)
!3989 = !DILocalVariable(name: "tmpreg", scope: !3982, file: !1349, line: 1096, type: !32)
!3990 = !DILocalVariable(name: "prediv", scope: !3982, file: !1349, line: 1096, type: !32)
!3991 = !DILocalVariable(name: "pllclk", scope: !3982, file: !1349, line: 1096, type: !32)
!3992 = !DILocalVariable(name: "pllmul", scope: !3982, file: !1349, line: 1096, type: !32)
!3993 = !DILocalVariable(name: "sysclockfreq", scope: !3982, file: !1349, line: 1097, type: !32)
!3994 = !DILocation(line: 1088, column: 17, scope: !3982)
!3995 = !DILocation(line: 1092, column: 17, scope: !3982)
!3996 = !DILocation(line: 0, scope: !3982)
!3997 = !DILocation(line: 1102, column: 17, scope: !3982)
!3998 = !DILocation(line: 1105, column: 18, scope: !3982)
!3999 = !DILocation(line: 1105, column: 3, scope: !3982)
!4000 = !DILocation(line: 1114, column: 73, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !1349, line: 1113, column: 5)
!4002 = distinct !DILexicalBlock(scope: !3982, file: !1349, line: 1106, column: 3)
!4003 = !DILocation(line: 1114, column: 16, scope: !4001)
!4004 = !DILocation(line: 1115, column: 19, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !4001, file: !1349, line: 1115, column: 11)
!4006 = !DILocation(line: 1115, column: 38, scope: !4005)
!4007 = !DILocation(line: 1115, column: 11, scope: !4001)
!4008 = !DILocation(line: 1120, column: 53, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !4005, file: !1349, line: 1116, column: 7)
!4010 = !DILocation(line: 1120, column: 79, scope: !4009)
!4011 = !DILocation(line: 1120, column: 18, scope: !4009)
!4012 = !DILocation(line: 1146, column: 41, scope: !4009)
!4013 = !DILocation(line: 1146, column: 51, scope: !4009)
!4014 = !DILocation(line: 1148, column: 7, scope: !4009)
!4015 = !DILocation(line: 1152, column: 46, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !4005, file: !1349, line: 1150, column: 7)
!4017 = !DILocation(line: 0, scope: !4002)
!4018 = !DILocation(line: 1164, column: 3, scope: !3982)
!4019 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !1349, file: !1349, line: 1002, type: !4020, scopeLine: 1003, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1348, retainedNodes: !4022)
!4020 = !DISubroutineType(types: !4021)
!4021 = !{null, !32, !32, !32}
!4022 = !{!4023, !4024, !4025, !4026, !4034}
!4023 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !4019, file: !1349, line: 1002, type: !32)
!4024 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !4019, file: !1349, line: 1002, type: !32)
!4025 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !4019, file: !1349, line: 1002, type: !32)
!4026 = !DILocalVariable(name: "gpio", scope: !4019, file: !1349, line: 1004, type: !4027)
!4027 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !1458, line: 60, baseType: !4028)
!4028 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1458, line: 47, size: 128, elements: !4029)
!4029 = !{!4030, !4031, !4032, !4033}
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !4028, file: !1458, line: 49, baseType: !32, size: 32)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !4028, file: !1458, line: 52, baseType: !32, size: 32, offset: 32)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !4028, file: !1458, line: 55, baseType: !32, size: 32, offset: 64)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !4028, file: !1458, line: 58, baseType: !32, size: 32, offset: 96)
!4034 = !DILocalVariable(name: "tmpreg", scope: !4035, file: !1349, line: 1022, type: !72)
!4035 = distinct !DILexicalBlock(scope: !4019, file: !1349, line: 1022, column: 3)
!4036 = !DILocation(line: 0, scope: !4019)
!4037 = !DILocation(line: 1004, column: 3, scope: !4019)
!4038 = !DILocation(line: 1004, column: 20, scope: !4019)
!4039 = !DILocation(line: 1016, column: 8, scope: !4019)
!4040 = !DILocation(line: 1016, column: 18, scope: !4019)
!4041 = !{!4042, !3335, i64 4}
!4042 = !{!"", !3335, i64 0, !3335, i64 4, !3335, i64 8, !3335, i64 12}
!4043 = !DILocation(line: 1017, column: 8, scope: !4019)
!4044 = !DILocation(line: 1017, column: 18, scope: !4019)
!4045 = !{!4042, !3335, i64 12}
!4046 = !DILocation(line: 1018, column: 8, scope: !4019)
!4047 = !DILocation(line: 1018, column: 18, scope: !4019)
!4048 = !{!4042, !3335, i64 8}
!4049 = !DILocation(line: 1019, column: 8, scope: !4019)
!4050 = !DILocation(line: 1019, column: 18, scope: !4019)
!4051 = !{!4042, !3335, i64 0}
!4052 = !DILocation(line: 1022, column: 3, scope: !4035)
!4053 = !{!3334, !3335, i64 24}
!4054 = !DILocation(line: 1022, column: 3, scope: !4019)
!4055 = !DILocation(line: 1024, column: 3, scope: !4019)
!4056 = !DILocation(line: 1027, column: 3, scope: !4019)
!4057 = !DILocation(line: 1028, column: 1, scope: !4019)
!4058 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !1349, file: !1349, line: 1039, type: !150, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1348, retainedNodes: !152)
!4059 = !DILocation(line: 1041, column: 38, scope: !4058)
!4060 = !DILocation(line: 1042, column: 1, scope: !4058)
!4061 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !1349, file: !1349, line: 1048, type: !150, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1348, retainedNodes: !152)
!4062 = !DILocation(line: 1050, column: 38, scope: !4061)
!4063 = !DILocation(line: 1051, column: 1, scope: !4061)
!4064 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !1349, file: !1349, line: 1176, type: !3983, scopeLine: 1177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1348, retainedNodes: !152)
!4065 = !DILocation(line: 1178, column: 10, scope: !4064)
!4066 = !DILocation(line: 1178, column: 3, scope: !4064)
!4067 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !1349, file: !1349, line: 1187, type: !3983, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1348, retainedNodes: !152)
!4068 = !DILocation(line: 1190, column: 11, scope: !4067)
!4069 = !DILocation(line: 1190, column: 56, scope: !4067)
!4070 = !DILocation(line: 1190, column: 79, scope: !4067)
!4071 = !DILocation(line: 1190, column: 36, scope: !4067)
!4072 = !DILocation(line: 1190, column: 33, scope: !4067)
!4073 = !DILocation(line: 1190, column: 3, scope: !4067)
!4074 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !1349, file: !1349, line: 1199, type: !3983, scopeLine: 1200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1348, retainedNodes: !152)
!4075 = !DILocation(line: 1202, column: 11, scope: !4074)
!4076 = !DILocation(line: 1202, column: 56, scope: !4074)
!4077 = !DILocation(line: 1202, column: 79, scope: !4074)
!4078 = !DILocation(line: 1202, column: 36, scope: !4074)
!4079 = !DILocation(line: 1202, column: 33, scope: !4074)
!4080 = !DILocation(line: 1202, column: 3, scope: !4074)
!4081 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !1349, file: !1349, line: 1212, type: !4082, scopeLine: 1213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1348, retainedNodes: !4084)
!4082 = !DISubroutineType(types: !4083)
!4083 = !{null, !3462}
!4084 = !{!4085}
!4085 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !4081, file: !1349, line: 1212, type: !3462)
!4086 = !DILocation(line: 0, scope: !4081)
!4087 = !DILocation(line: 1218, column: 22, scope: !4081)
!4088 = !DILocation(line: 1218, column: 37, scope: !4081)
!4089 = !DILocation(line: 1227, column: 13, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4081, file: !1349, line: 1227, column: 7)
!4091 = !DILocation(line: 1227, column: 16, scope: !4090)
!4092 = !DILocation(line: 1227, column: 33, scope: !4090)
!4093 = !DILocation(line: 1227, column: 7, scope: !4081)
!4094 = !DILocation(line: 1229, column: 24, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4090, file: !1349, line: 1228, column: 3)
!4096 = !DILocation(line: 1229, column: 33, scope: !4095)
!4097 = !DILocation(line: 1230, column: 3, scope: !4095)
!4098 = !DILocation(line: 1231, column: 18, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4090, file: !1349, line: 1231, column: 12)
!4100 = !DILocation(line: 1231, column: 21, scope: !4099)
!4101 = !DILocation(line: 1231, column: 37, scope: !4099)
!4102 = !DILocation(line: 0, scope: !4099)
!4103 = !DILocation(line: 1231, column: 12, scope: !4090)
!4104 = !DILocation(line: 1233, column: 33, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4099, file: !1349, line: 1232, column: 3)
!4106 = !DILocation(line: 1234, column: 3, scope: !4105)
!4107 = !DILocation(line: 1237, column: 33, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4099, file: !1349, line: 1236, column: 3)
!4109 = !DILocation(line: 1239, column: 39, scope: !4081)
!4110 = !DILocation(line: 1239, column: 22, scope: !4081)
!4111 = !DILocation(line: 1239, column: 37, scope: !4081)
!4112 = !DILocation(line: 1242, column: 13, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !4081, file: !1349, line: 1242, column: 7)
!4114 = !DILocation(line: 1242, column: 16, scope: !4113)
!4115 = !DILocation(line: 0, scope: !4113)
!4116 = !DILocation(line: 1251, column: 61, scope: !4081)
!4117 = !DILocation(line: 1251, column: 82, scope: !4081)
!4118 = !DILocation(line: 1251, column: 22, scope: !4081)
!4119 = !DILocation(line: 1251, column: 42, scope: !4081)
!4120 = !DILocation(line: 1254, column: 13, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4081, file: !1349, line: 1254, column: 7)
!4122 = !DILocation(line: 1254, column: 18, scope: !4121)
!4123 = !DILocation(line: 1254, column: 37, scope: !4121)
!4124 = !DILocation(line: 1254, column: 7, scope: !4081)
!4125 = !DILocation(line: 1256, column: 24, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4121, file: !1349, line: 1255, column: 3)
!4127 = !DILocation(line: 1256, column: 33, scope: !4126)
!4128 = !DILocation(line: 1257, column: 3, scope: !4126)
!4129 = !DILocation(line: 1258, column: 18, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4121, file: !1349, line: 1258, column: 12)
!4131 = !DILocation(line: 1258, column: 23, scope: !4130)
!4132 = !DILocation(line: 1258, column: 41, scope: !4130)
!4133 = !DILocation(line: 0, scope: !4130)
!4134 = !DILocation(line: 1258, column: 12, scope: !4121)
!4135 = !DILocation(line: 1260, column: 33, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4130, file: !1349, line: 1259, column: 3)
!4137 = !DILocation(line: 1261, column: 3, scope: !4136)
!4138 = !DILocation(line: 1264, column: 33, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4130, file: !1349, line: 1263, column: 3)
!4140 = !DILocation(line: 1268, column: 13, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4081, file: !1349, line: 1268, column: 7)
!4142 = !DILocation(line: 1268, column: 17, scope: !4141)
!4143 = !DILocation(line: 0, scope: !4141)
!4144 = !DILocation(line: 1279, column: 13, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4081, file: !1349, line: 1279, column: 7)
!4146 = !DILocation(line: 1279, column: 16, scope: !4145)
!4147 = !DILocation(line: 1279, column: 32, scope: !4145)
!4148 = !DILocation(line: 1279, column: 7, scope: !4081)
!4149 = !DILocation(line: 0, scope: !4145)
!4150 = !DILocation(line: 1287, column: 54, scope: !4081)
!4151 = !DILocation(line: 1287, column: 59, scope: !4081)
!4152 = !DILocation(line: 1287, column: 26, scope: !4081)
!4153 = !DILocation(line: 1287, column: 36, scope: !4081)
!4154 = !DILocation(line: 1288, column: 51, scope: !4081)
!4155 = !DILocation(line: 1288, column: 56, scope: !4081)
!4156 = !DILocation(line: 1288, column: 26, scope: !4081)
!4157 = !DILocation(line: 1288, column: 33, scope: !4081)
!4158 = !DILocation(line: 1302, column: 1, scope: !4081)
!4159 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !1349, file: !1349, line: 1312, type: !4160, scopeLine: 1313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1348, retainedNodes: !4162)
!4160 = !DISubroutineType(types: !4161)
!4161 = !{null, !3851, !137}
!4162 = !{!4163, !4164}
!4163 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !4159, file: !1349, line: 1312, type: !3851)
!4164 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !4159, file: !1349, line: 1312, type: !137)
!4165 = !DILocation(line: 0, scope: !4159)
!4166 = !DILocation(line: 1319, column: 22, scope: !4159)
!4167 = !DILocation(line: 1319, column: 32, scope: !4159)
!4168 = !DILocation(line: 1322, column: 53, scope: !4159)
!4169 = !DILocation(line: 1322, column: 58, scope: !4159)
!4170 = !DILocation(line: 1322, column: 22, scope: !4159)
!4171 = !DILocation(line: 1322, column: 35, scope: !4159)
!4172 = !DILocation(line: 1325, column: 54, scope: !4159)
!4173 = !DILocation(line: 1325, column: 59, scope: !4159)
!4174 = !DILocation(line: 1325, column: 22, scope: !4159)
!4175 = !DILocation(line: 1325, column: 36, scope: !4159)
!4176 = !DILocation(line: 1328, column: 55, scope: !4159)
!4177 = !DILocation(line: 1328, column: 60, scope: !4159)
!4178 = !DILocation(line: 1328, column: 22, scope: !4159)
!4179 = !DILocation(line: 1328, column: 37, scope: !4159)
!4180 = !DILocation(line: 1331, column: 56, scope: !4159)
!4181 = !DILocation(line: 1331, column: 79, scope: !4159)
!4182 = !DILocation(line: 1331, column: 22, scope: !4159)
!4183 = !DILocation(line: 1331, column: 37, scope: !4159)
!4184 = !DILocation(line: 1335, column: 34, scope: !4159)
!4185 = !DILocation(line: 1335, column: 38, scope: !4159)
!4186 = !DILocation(line: 1335, column: 14, scope: !4159)
!4187 = !DILocation(line: 1340, column: 1, scope: !4159)
!4188 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !1349, file: !1349, line: 1347, type: !150, scopeLine: 1348, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1348, retainedNodes: !152)
!4189 = !DILocation(line: 1350, column: 7, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !4188, file: !1349, line: 1350, column: 7)
!4191 = !DILocation(line: 1350, column: 7, scope: !4188)
!4192 = !DILocation(line: 1353, column: 5, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4190, file: !1349, line: 1351, column: 3)
!4194 = !DILocation(line: 1356, column: 5, scope: !4193)
!4195 = !DILocation(line: 1357, column: 3, scope: !4193)
!4196 = !DILocation(line: 1358, column: 1, scope: !4188)
!4197 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !1349, file: !1349, line: 1379, type: !150, scopeLine: 1380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1348, retainedNodes: !152)
!4198 = !DILocation(line: 1384, column: 1, scope: !4197)
!4199 = distinct !DISubprogram(name: "HAL_Init", scope: !386, file: !386, line: 142, type: !3387, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !152)
!4200 = !DILocation(line: 152, column: 3, scope: !4199)
!4201 = !DILocation(line: 157, column: 3, scope: !4199)
!4202 = !DILocation(line: 160, column: 3, scope: !4199)
!4203 = !DILocation(line: 163, column: 3, scope: !4199)
!4204 = !DILocation(line: 166, column: 3, scope: !4199)
!4205 = distinct !DISubprogram(name: "HAL_InitTick", scope: !386, file: !386, line: 234, type: !4206, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !4208)
!4206 = !DISubroutineType(types: !4207)
!4207 = !{!3389, !32}
!4208 = !{!4209}
!4209 = !DILocalVariable(name: "TickPriority", arg: 1, scope: !4205, file: !386, line: 234, type: !32)
!4210 = !DILocation(line: 0, scope: !4205)
!4211 = !DILocation(line: 237, column: 26, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4205, file: !386, line: 237, column: 7)
!4213 = !DILocation(line: 237, column: 53, scope: !4212)
!4214 = !DILocation(line: 237, column: 51, scope: !4212)
!4215 = !DILocation(line: 237, column: 42, scope: !4212)
!4216 = !DILocation(line: 237, column: 7, scope: !4212)
!4217 = !DILocation(line: 237, column: 66, scope: !4212)
!4218 = !DILocation(line: 237, column: 7, scope: !4205)
!4219 = !DILocation(line: 245, column: 5, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4221, file: !386, line: 244, column: 3)
!4221 = distinct !DILexicalBlock(scope: !4205, file: !386, line: 243, column: 7)
!4222 = !DILocation(line: 246, column: 16, scope: !4220)
!4223 = !DILocation(line: 254, column: 3, scope: !4205)
!4224 = !DILocation(line: 255, column: 1, scope: !4205)
!4225 = distinct !DISubprogram(name: "HAL_MspInit", scope: !386, file: !386, line: 200, type: !150, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !152)
!4226 = !DILocation(line: 205, column: 1, scope: !4225)
!4227 = distinct !DISubprogram(name: "HAL_DeInit", scope: !386, file: !386, line: 175, type: !3387, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !152)
!4228 = !DILocation(line: 178, column: 3, scope: !4227)
!4229 = !{!3334, !3335, i64 12}
!4230 = !DILocation(line: 179, column: 3, scope: !4227)
!4231 = !{!3334, !3335, i64 16}
!4232 = !DILocation(line: 181, column: 3, scope: !4227)
!4233 = !DILocation(line: 182, column: 3, scope: !4227)
!4234 = !DILocation(line: 190, column: 3, scope: !4227)
!4235 = !DILocation(line: 193, column: 3, scope: !4227)
!4236 = distinct !DISubprogram(name: "HAL_MspDeInit", scope: !386, file: !386, line: 211, type: !150, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !152)
!4237 = !DILocation(line: 216, column: 1, scope: !4236)
!4238 = distinct !DISubprogram(name: "HAL_IncTick", scope: !386, file: !386, line: 293, type: !150, scopeLine: 294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !152)
!4239 = !DILocation(line: 295, column: 13, scope: !4238)
!4240 = !DILocation(line: 295, column: 10, scope: !4238)
!4241 = !DILocation(line: 296, column: 1, scope: !4238)
!4242 = distinct !DISubprogram(name: "HAL_GetTick", scope: !386, file: !386, line: 304, type: !3983, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !152)
!4243 = !DILocation(line: 306, column: 10, scope: !4242)
!4244 = !DILocation(line: 306, column: 3, scope: !4242)
!4245 = distinct !DISubprogram(name: "HAL_GetTickPrio", scope: !386, file: !386, line: 313, type: !3983, scopeLine: 314, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !152)
!4246 = !DILocation(line: 315, column: 10, scope: !4245)
!4247 = !DILocation(line: 315, column: 3, scope: !4245)
!4248 = distinct !DISubprogram(name: "HAL_SetTickFreq", scope: !386, file: !386, line: 322, type: !4249, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !4251)
!4249 = !DISubroutineType(types: !4250)
!4250 = !{!3389, !500}
!4251 = !{!4252, !4253}
!4252 = !DILocalVariable(name: "Freq", arg: 1, scope: !4248, file: !386, line: 322, type: !500)
!4253 = !DILocalVariable(name: "status", scope: !4248, file: !386, line: 324, type: !3389)
!4254 = !DILocation(line: 0, scope: !4248)
!4255 = !DILocation(line: 327, column: 7, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4248, file: !386, line: 327, column: 7)
!4257 = !DILocation(line: 327, column: 18, scope: !4256)
!4258 = !DILocation(line: 327, column: 7, scope: !4248)
!4259 = !DILocation(line: 330, column: 27, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4256, file: !386, line: 328, column: 3)
!4261 = !DILocation(line: 330, column: 14, scope: !4260)
!4262 = !DILocation(line: 331, column: 16, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4260, file: !386, line: 331, column: 9)
!4264 = !DILocation(line: 331, column: 9, scope: !4260)
!4265 = !DILocation(line: 333, column: 18, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4263, file: !386, line: 332, column: 5)
!4267 = !DILocation(line: 334, column: 5, scope: !4266)
!4268 = !DILocation(line: 337, column: 3, scope: !4248)
!4269 = distinct !DISubprogram(name: "HAL_GetTickFreq", scope: !386, file: !386, line: 344, type: !4270, scopeLine: 345, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !152)
!4270 = !DISubroutineType(types: !4271)
!4271 = !{!500}
!4272 = !DILocation(line: 346, column: 10, scope: !4269)
!4273 = !DILocation(line: 346, column: 3, scope: !4269)
!4274 = distinct !DISubprogram(name: "HAL_Delay", scope: !386, file: !386, line: 360, type: !3829, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !4275)
!4275 = !{!4276, !4277, !4278}
!4276 = !DILocalVariable(name: "Delay", arg: 1, scope: !4274, file: !386, line: 360, type: !32)
!4277 = !DILocalVariable(name: "tickstart", scope: !4274, file: !386, line: 362, type: !32)
!4278 = !DILocalVariable(name: "wait", scope: !4274, file: !386, line: 363, type: !32)
!4279 = !DILocation(line: 0, scope: !4274)
!4280 = !DILocation(line: 362, column: 24, scope: !4274)
!4281 = !DILocation(line: 366, column: 12, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4274, file: !386, line: 366, column: 7)
!4283 = !DILocation(line: 366, column: 7, scope: !4274)
!4284 = !DILocation(line: 371, column: 3, scope: !4274)
!4285 = !DILocation(line: 371, column: 11, scope: !4274)
!4286 = !DILocation(line: 371, column: 25, scope: !4274)
!4287 = !DILocation(line: 371, column: 38, scope: !4274)
!4288 = distinct !{!4288, !4284, !4289, !2129, !2130}
!4289 = !DILocation(line: 373, column: 3, scope: !4274)
!4290 = !DILocation(line: 374, column: 1, scope: !4274)
!4291 = distinct !DISubprogram(name: "HAL_SuspendTick", scope: !386, file: !386, line: 386, type: !150, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !152)
!4292 = !DILocation(line: 389, column: 3, scope: !4291)
!4293 = !DILocation(line: 390, column: 1, scope: !4291)
!4294 = distinct !DISubprogram(name: "HAL_ResumeTick", scope: !386, file: !386, line: 402, type: !150, scopeLine: 403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !152)
!4295 = !DILocation(line: 405, column: 3, scope: !4294)
!4296 = !DILocation(line: 406, column: 1, scope: !4294)
!4297 = distinct !DISubprogram(name: "HAL_GetHalVersion", scope: !386, file: !386, line: 412, type: !3983, scopeLine: 413, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !152)
!4298 = !DILocation(line: 414, column: 3, scope: !4297)
!4299 = distinct !DISubprogram(name: "HAL_GetREVID", scope: !386, file: !386, line: 428, type: !3983, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !152)
!4300 = !DILocation(line: 430, column: 20, scope: !4299)
!4301 = !DILocation(line: 430, column: 28, scope: !4299)
!4302 = !DILocation(line: 430, column: 3, scope: !4299)
!4303 = distinct !DISubprogram(name: "HAL_GetDEVID", scope: !386, file: !386, line: 444, type: !3983, scopeLine: 445, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !152)
!4304 = !DILocation(line: 446, column: 20, scope: !4303)
!4305 = !DILocation(line: 446, column: 28, scope: !4303)
!4306 = !DILocation(line: 446, column: 3, scope: !4303)
!4307 = distinct !DISubprogram(name: "HAL_GetUIDw0", scope: !386, file: !386, line: 453, type: !3983, scopeLine: 454, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !152)
!4308 = !DILocation(line: 455, column: 11, scope: !4307)
!4309 = !DILocation(line: 455, column: 4, scope: !4307)
!4310 = distinct !DISubprogram(name: "HAL_GetUIDw1", scope: !386, file: !386, line: 462, type: !3983, scopeLine: 463, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !152)
!4311 = !DILocation(line: 464, column: 11, scope: !4310)
!4312 = !DILocation(line: 464, column: 4, scope: !4310)
!4313 = distinct !DISubprogram(name: "HAL_GetUIDw2", scope: !386, file: !386, line: 471, type: !3983, scopeLine: 472, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !152)
!4314 = !DILocation(line: 473, column: 11, scope: !4313)
!4315 = !DILocation(line: 473, column: 4, scope: !4313)
!4316 = distinct !DISubprogram(name: "HAL_DBGMCU_EnableDBGSleepMode", scope: !386, file: !386, line: 480, type: !150, scopeLine: 481, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !152)
!4317 = !DILocation(line: 482, column: 3, scope: !4316)
!4318 = !{!3683, !3335, i64 4}
!4319 = !DILocation(line: 483, column: 1, scope: !4316)
!4320 = distinct !DISubprogram(name: "HAL_DBGMCU_DisableDBGSleepMode", scope: !386, file: !386, line: 496, type: !150, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !152)
!4321 = !DILocation(line: 498, column: 3, scope: !4320)
!4322 = !DILocation(line: 499, column: 1, scope: !4320)
!4323 = distinct !DISubprogram(name: "HAL_DBGMCU_EnableDBGStopMode", scope: !386, file: !386, line: 526, type: !150, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !152)
!4324 = !DILocation(line: 528, column: 3, scope: !4323)
!4325 = !DILocation(line: 529, column: 1, scope: !4323)
!4326 = distinct !DISubprogram(name: "HAL_DBGMCU_DisableDBGStopMode", scope: !386, file: !386, line: 542, type: !150, scopeLine: 543, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !152)
!4327 = !DILocation(line: 544, column: 3, scope: !4326)
!4328 = !DILocation(line: 545, column: 1, scope: !4326)
!4329 = distinct !DISubprogram(name: "HAL_DBGMCU_EnableDBGStandbyMode", scope: !386, file: !386, line: 558, type: !150, scopeLine: 559, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !152)
!4330 = !DILocation(line: 560, column: 3, scope: !4329)
!4331 = !DILocation(line: 561, column: 1, scope: !4329)
!4332 = distinct !DISubprogram(name: "HAL_DBGMCU_DisableDBGStandbyMode", scope: !386, file: !386, line: 574, type: !150, scopeLine: 575, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !152)
!4333 = !DILocation(line: 576, column: 3, scope: !4332)
!4334 = !DILocation(line: 577, column: 1, scope: !4332)
!4335 = distinct !DISubprogram(name: "pxPortInitialiseStack", scope: !506, file: !506, line: 174, type: !4336, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !4341)
!4336 = !DISubroutineType(types: !4337)
!4337 = !{!136, !136, !4338, !104}
!4338 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskFunction_t", file: !4339, line: 35, baseType: !4340)
!4339 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "a67be67d0625ba02d12b6cd4392e9e62")
!4340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 32)
!4341 = !{!4342, !4343, !4344}
!4342 = !DILocalVariable(name: "pxTopOfStack", arg: 1, scope: !4335, file: !506, line: 174, type: !136)
!4343 = !DILocalVariable(name: "pxCode", arg: 2, scope: !4335, file: !506, line: 174, type: !4338)
!4344 = !DILocalVariable(name: "pvParameters", arg: 3, scope: !4335, file: !506, line: 174, type: !104)
!4345 = !DILocation(line: 0, scope: !4335)
!4346 = !DILocation(line: 178, column: 14, scope: !4335)
!4347 = !DILocation(line: 179, column: 16, scope: !4335)
!4348 = !DILocation(line: 180, column: 14, scope: !4335)
!4349 = !DILocation(line: 181, column: 20, scope: !4335)
!4350 = !DILocation(line: 181, column: 45, scope: !4335)
!4351 = !DILocation(line: 181, column: 16, scope: !4335)
!4352 = !DILocation(line: 182, column: 14, scope: !4335)
!4353 = !DILocation(line: 183, column: 16, scope: !4335)
!4354 = !DILocation(line: 184, column: 15, scope: !4335)
!4355 = !DILocation(line: 185, column: 18, scope: !4335)
!4356 = !DILocation(line: 185, column: 16, scope: !4335)
!4357 = !DILocation(line: 186, column: 15, scope: !4335)
!4358 = !DILocation(line: 188, column: 2, scope: !4335)
!4359 = distinct !DISubprogram(name: "prvTaskExitError", scope: !506, file: !506, line: 192, type: !150, scopeLine: 193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !4360)
!4360 = !{!4361}
!4361 = !DILocalVariable(name: "ulDummy", scope: !4359, file: !506, line: 194, type: !72)
!4362 = !DILocation(line: 194, column: 1, scope: !4359)
!4363 = !DILocation(line: 194, column: 19, scope: !4359)
!4364 = !DILocation(line: 202, column: 2, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4359, file: !506, line: 202, column: 2)
!4366 = !{!4367, !4367, i64 0}
!4367 = !{!"long", !2497, i64 0}
!4368 = !DILocation(line: 0, scope: !4359)
!4369 = !DILocation(line: 202, column: 2, scope: !4359)
!4370 = !DILocation(line: 202, column: 2, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4372, file: !506, line: 202, column: 2)
!4372 = distinct !DILexicalBlock(scope: !4373, file: !506, line: 202, column: 2)
!4373 = distinct !DILexicalBlock(scope: !4365, file: !506, line: 202, column: 2)
!4374 = distinct !{!4374, !4375, !4375, !2130}
!4375 = !DILocation(line: 202, column: 2, scope: !4372)
!4376 = !DILocation(line: 204, column: 9, scope: !4359)
!4377 = !DILocation(line: 204, column: 17, scope: !4359)
!4378 = !DILocation(line: 204, column: 2, scope: !4359)
!4379 = distinct !{!4379, !4378, !4380, !2129, !2130}
!4380 = !DILocation(line: 213, column: 2, scope: !4359)
!4381 = !DILocation(line: 214, column: 1, scope: !4359)
!4382 = distinct !DISubprogram(name: "SVC_Handler", scope: !506, file: !506, line: 217, type: !150, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !152)
!4383 = !DILocation(line: 219, column: 2, scope: !4382)
!4384 = !{i64 8905, i64 8973, i64 9063, i64 9155, i64 9298, i64 9365, i64 9388, i64 9417, i64 9449, i64 9479, i64 9504, i64 9524, i64 9550}
!4385 = !DILocation(line: 234, column: 1, scope: !4382)
!4386 = distinct !DISubprogram(name: "xPortStartScheduler", scope: !506, file: !506, line: 257, type: !4387, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !4389)
!4387 = !DISubroutineType(types: !4388)
!4388 = !{!509}
!4389 = !{!4390, !4392, !4394}
!4390 = !DILocalVariable(name: "ulOriginalPriority", scope: !4391, file: !506, line: 265, type: !72)
!4391 = distinct !DILexicalBlock(scope: !4386, file: !506, line: 264, column: 2)
!4392 = !DILocalVariable(name: "pucFirstUserPriorityRegister", scope: !4391, file: !506, line: 266, type: !4393)
!4393 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !508)
!4394 = !DILocalVariable(name: "ucMaxPriorityValue", scope: !4391, file: !506, line: 267, type: !350)
!4395 = !DILocation(line: 265, column: 3, scope: !4391)
!4396 = !DILocation(line: 265, column: 21, scope: !4391)
!4397 = !DILocation(line: 0, scope: !4391)
!4398 = !DILocation(line: 267, column: 3, scope: !4391)
!4399 = !DILocation(line: 267, column: 20, scope: !4391)
!4400 = !DILocation(line: 275, column: 24, scope: !4391)
!4401 = !DILocation(line: 275, column: 22, scope: !4391)
!4402 = !DILocation(line: 279, column: 33, scope: !4391)
!4403 = !DILocation(line: 282, column: 24, scope: !4391)
!4404 = !DILocation(line: 282, column: 22, scope: !4391)
!4405 = !DILocation(line: 285, column: 65, scope: !4391)
!4406 = !DILocation(line: 285, column: 63, scope: !4391)
!4407 = !DILocation(line: 285, column: 24, scope: !4391)
!4408 = !DILocation(line: 289, column: 22, scope: !4391)
!4409 = !DILocation(line: 290, column: 12, scope: !4391)
!4410 = !DILocation(line: 290, column: 55, scope: !4391)
!4411 = !DILocation(line: 290, column: 3, scope: !4391)
!4412 = !DILocation(line: 292, column: 22, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4391, file: !506, line: 291, column: 3)
!4414 = !DILocation(line: 293, column: 23, scope: !4413)
!4415 = distinct !{!4415, !4411, !4416, !2129, !2130}
!4416 = !DILocation(line: 294, column: 3, scope: !4391)
!4417 = !DILocation(line: 310, column: 4, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4419, file: !506, line: 310, column: 4)
!4419 = distinct !DILexicalBlock(scope: !4391, file: !506, line: 306, column: 3)
!4420 = !DILocation(line: 310, column: 4, scope: !4419)
!4421 = !DILocation(line: 195, column: 2, scope: !4422, inlinedAt: !4425)
!4422 = distinct !DISubprogram(name: "vPortRaiseBASEPRI", scope: !83, file: !83, line: 191, type: !150, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !4423)
!4423 = !{!4424}
!4424 = !DILocalVariable(name: "ulNewBASEPRI", scope: !4422, file: !83, line: 193, type: !32)
!4425 = distinct !DILocation(line: 310, column: 4, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4418, file: !506, line: 310, column: 4)
!4427 = !{i64 194939, i64 194973, i64 195010, i64 195038}
!4428 = !DILocation(line: 0, scope: !4422, inlinedAt: !4425)
!4429 = !DILocation(line: 310, column: 4, scope: !4426)
!4430 = !DILocation(line: 310, column: 4, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4432, file: !506, line: 310, column: 4)
!4432 = distinct !DILexicalBlock(scope: !4426, file: !506, line: 310, column: 4)
!4433 = distinct !{!4433, !4434, !4434, !2130}
!4434 = !DILocation(line: 310, column: 4, scope: !4432)
!4435 = !DILocation(line: 316, column: 22, scope: !4391)
!4436 = !DILocation(line: 317, column: 22, scope: !4391)
!4437 = !DILocation(line: 321, column: 35, scope: !4391)
!4438 = !DILocation(line: 321, column: 33, scope: !4391)
!4439 = !DILocation(line: 322, column: 2, scope: !4386)
!4440 = !DILocation(line: 326, column: 23, scope: !4386)
!4441 = !DILocation(line: 327, column: 23, scope: !4386)
!4442 = !DILocation(line: 331, column: 2, scope: !4386)
!4443 = !DILocation(line: 334, column: 20, scope: !4386)
!4444 = !DILocation(line: 337, column: 2, scope: !4386)
!4445 = !DILocation(line: 345, column: 2, scope: !4386)
!4446 = !DILocation(line: 346, column: 2, scope: !4386)
!4447 = !DILocation(line: 349, column: 2, scope: !4386)
!4448 = distinct !DISubprogram(name: "vPortSetupTimerInterrupt", scope: !506, file: !506, line: 617, type: !150, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !152)
!4449 = !DILocation(line: 629, column: 28, scope: !4448)
!4450 = !DILocation(line: 630, column: 37, scope: !4448)
!4451 = !DILocation(line: 633, column: 32, scope: !4448)
!4452 = !DILocation(line: 633, column: 55, scope: !4448)
!4453 = !DILocation(line: 633, column: 78, scope: !4448)
!4454 = !DILocation(line: 633, column: 28, scope: !4448)
!4455 = !DILocation(line: 634, column: 28, scope: !4448)
!4456 = !DILocation(line: 635, column: 1, scope: !4448)
!4457 = distinct !DISubprogram(name: "prvPortStartFirstTask", scope: !506, file: !506, line: 237, type: !150, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !152)
!4458 = !DILocation(line: 239, column: 2, scope: !4457)
!4459 = !{i64 9744, i64 9834, i64 9862, i64 9890, i64 9966, i64 10023, i64 10046, i64 10066, i64 10086, i64 10147}
!4460 = !DILocation(line: 251, column: 1, scope: !4457)
!4461 = distinct !DISubprogram(name: "vPortEndScheduler", scope: !506, file: !506, line: 353, type: !150, scopeLine: 354, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !152)
!4462 = !DILocation(line: 357, column: 2, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4461, file: !506, line: 357, column: 2)
!4464 = !DILocation(line: 357, column: 2, scope: !4461)
!4465 = !DILocation(line: 195, column: 2, scope: !4422, inlinedAt: !4466)
!4466 = distinct !DILocation(line: 357, column: 2, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4463, file: !506, line: 357, column: 2)
!4468 = !DILocation(line: 0, scope: !4422, inlinedAt: !4466)
!4469 = !DILocation(line: 357, column: 2, scope: !4467)
!4470 = !DILocation(line: 357, column: 2, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4472, file: !506, line: 357, column: 2)
!4472 = distinct !DILexicalBlock(scope: !4467, file: !506, line: 357, column: 2)
!4473 = distinct !{!4473, !4474, !4474, !2130}
!4474 = !DILocation(line: 357, column: 2, scope: !4472)
!4475 = !DILocation(line: 358, column: 1, scope: !4461)
!4476 = distinct !DISubprogram(name: "vPortEnterCritical", scope: !506, file: !506, line: 361, type: !150, scopeLine: 362, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !152)
!4477 = !DILocation(line: 195, column: 2, scope: !4422, inlinedAt: !4478)
!4478 = distinct !DILocation(line: 363, column: 2, scope: !4476)
!4479 = !DILocation(line: 0, scope: !4422, inlinedAt: !4478)
!4480 = !DILocation(line: 364, column: 19, scope: !4476)
!4481 = !DILocation(line: 371, column: 24, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4476, file: !506, line: 371, column: 6)
!4483 = !DILocation(line: 371, column: 6, scope: !4476)
!4484 = !DILocation(line: 373, column: 3, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4486, file: !506, line: 373, column: 3)
!4486 = distinct !DILexicalBlock(scope: !4482, file: !506, line: 372, column: 2)
!4487 = !DILocation(line: 373, column: 3, scope: !4486)
!4488 = !DILocation(line: 195, column: 2, scope: !4422, inlinedAt: !4489)
!4489 = distinct !DILocation(line: 373, column: 3, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4485, file: !506, line: 373, column: 3)
!4491 = !DILocation(line: 0, scope: !4422, inlinedAt: !4489)
!4492 = !DILocation(line: 373, column: 3, scope: !4490)
!4493 = !DILocation(line: 373, column: 3, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4495, file: !506, line: 373, column: 3)
!4495 = distinct !DILexicalBlock(scope: !4490, file: !506, line: 373, column: 3)
!4496 = distinct !{!4496, !4497, !4497, !2130}
!4497 = !DILocation(line: 373, column: 3, scope: !4495)
!4498 = !DILocation(line: 375, column: 1, scope: !4476)
!4499 = distinct !DISubprogram(name: "vPortExitCritical", scope: !506, file: !506, line: 378, type: !150, scopeLine: 379, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !152)
!4500 = !DILocation(line: 380, column: 2, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4499, file: !506, line: 380, column: 2)
!4502 = !DILocation(line: 380, column: 2, scope: !4499)
!4503 = !DILocation(line: 195, column: 2, scope: !4422, inlinedAt: !4504)
!4504 = distinct !DILocation(line: 380, column: 2, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4501, file: !506, line: 380, column: 2)
!4506 = !DILocation(line: 0, scope: !4422, inlinedAt: !4504)
!4507 = !DILocation(line: 380, column: 2, scope: !4505)
!4508 = !DILocation(line: 380, column: 2, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4510, file: !506, line: 380, column: 2)
!4510 = distinct !DILexicalBlock(scope: !4505, file: !506, line: 380, column: 2)
!4511 = distinct !{!4511, !4512, !4512, !2130}
!4512 = !DILocation(line: 380, column: 2, scope: !4510)
!4513 = !DILocation(line: 381, column: 19, scope: !4499)
!4514 = !DILocation(line: 382, column: 24, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4499, file: !506, line: 382, column: 6)
!4516 = !DILocation(line: 382, column: 6, scope: !4499)
!4517 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !4518, file: !83, line: 227, type: !32)
!4518 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !83, file: !83, line: 227, type: !3829, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !4519)
!4519 = !{!4517}
!4520 = !DILocation(line: 0, scope: !4518, inlinedAt: !4521)
!4521 = distinct !DILocation(line: 384, column: 3, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4515, file: !506, line: 383, column: 2)
!4523 = !DILocation(line: 229, column: 2, scope: !4518, inlinedAt: !4521)
!4524 = !{i64 195916}
!4525 = !DILocation(line: 385, column: 2, scope: !4522)
!4526 = !DILocation(line: 386, column: 1, scope: !4499)
!4527 = distinct !DISubprogram(name: "PendSV_Handler", scope: !506, file: !506, line: 389, type: !150, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !152)
!4528 = !DILocation(line: 393, column: 2, scope: !4527)
!4529 = !{i64 15069, i64 15096, i64 15116, i64 15133, i64 15212, i64 15238, i64 15255, i64 15323, i64 15415, i64 15432, i64 15464, i64 15489, i64 15518, i64 15551, i64 15576, i64 15605, i64 15637, i64 15719, i64 15745, i64 15834, i64 15891, i64 15917, i64 15937, i64 15959, i64 15976, i64 15999}
!4530 = !DILocation(line: 423, column: 1, scope: !4527)
!4531 = distinct !DISubprogram(name: "xPortSysTickHandler", scope: !506, file: !506, line: 426, type: !150, scopeLine: 427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !152)
!4532 = !DILocation(line: 195, column: 2, scope: !4422, inlinedAt: !4533)
!4533 = distinct !DILocation(line: 432, column: 2, scope: !4531)
!4534 = !DILocation(line: 0, scope: !4422, inlinedAt: !4533)
!4535 = !DILocation(line: 435, column: 7, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4537, file: !506, line: 435, column: 7)
!4537 = distinct !DILexicalBlock(scope: !4531, file: !506, line: 433, column: 2)
!4538 = !DILocation(line: 435, column: 28, scope: !4536)
!4539 = !DILocation(line: 435, column: 7, scope: !4537)
!4540 = !DILocation(line: 439, column: 26, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4536, file: !506, line: 436, column: 3)
!4542 = !DILocation(line: 440, column: 3, scope: !4541)
!4543 = !DILocation(line: 0, scope: !4518, inlinedAt: !4544)
!4544 = distinct !DILocation(line: 442, column: 2, scope: !4531)
!4545 = !DILocation(line: 229, column: 2, scope: !4518, inlinedAt: !4544)
!4546 = !DILocation(line: 443, column: 1, scope: !4531)
!4547 = distinct !DISubprogram(name: "vPortValidateInterruptPriority", scope: !506, file: !506, line: 640, type: !150, scopeLine: 641, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !4548)
!4548 = !{!4549, !4550}
!4549 = !DILocalVariable(name: "ulCurrentInterrupt", scope: !4547, file: !506, line: 642, type: !32)
!4550 = !DILocalVariable(name: "ucCurrentPriority", scope: !4547, file: !506, line: 643, type: !87)
!4551 = !DILocation(line: 646, column: 3, scope: !4547)
!4552 = !{i64 25130}
!4553 = !DILocation(line: 0, scope: !4547)
!4554 = !DILocation(line: 649, column: 26, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4547, file: !506, line: 649, column: 7)
!4556 = !DILocation(line: 649, column: 7, scope: !4547)
!4557 = !DILocation(line: 652, column: 24, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4555, file: !506, line: 650, column: 3)
!4559 = !DILocation(line: 677, column: 4, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4558, file: !506, line: 677, column: 4)
!4561 = !DILocation(line: 677, column: 4, scope: !4558)
!4562 = !DILocation(line: 195, column: 2, scope: !4422, inlinedAt: !4563)
!4563 = distinct !DILocation(line: 677, column: 4, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4560, file: !506, line: 677, column: 4)
!4565 = !DILocation(line: 0, scope: !4422, inlinedAt: !4563)
!4566 = !DILocation(line: 677, column: 4, scope: !4564)
!4567 = !DILocation(line: 677, column: 4, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4569, file: !506, line: 677, column: 4)
!4569 = distinct !DILexicalBlock(scope: !4564, file: !506, line: 677, column: 4)
!4570 = distinct !{!4570, !4571, !4571, !2130}
!4571 = !DILocation(line: 677, column: 4, scope: !4569)
!4572 = !DILocation(line: 693, column: 3, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4547, file: !506, line: 693, column: 3)
!4574 = !DILocation(line: 693, column: 3, scope: !4547)
!4575 = !DILocation(line: 195, column: 2, scope: !4422, inlinedAt: !4576)
!4576 = distinct !DILocation(line: 693, column: 3, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4573, file: !506, line: 693, column: 3)
!4578 = !DILocation(line: 0, scope: !4422, inlinedAt: !4576)
!4579 = !DILocation(line: 693, column: 3, scope: !4577)
!4580 = !DILocation(line: 693, column: 3, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4582, file: !506, line: 693, column: 3)
!4582 = distinct !DILexicalBlock(scope: !4577, file: !506, line: 693, column: 3)
!4583 = distinct !{!4583, !4584, !4584, !2130}
!4584 = !DILocation(line: 693, column: 3, scope: !4582)
!4585 = !DILocation(line: 694, column: 2, scope: !4547)
!4586 = distinct !DISubprogram(name: "xTaskCreateStatic", scope: !524, file: !524, line: 575, type: !4587, scopeLine: 582, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !4611)
!4587 = !DISubroutineType(types: !4588)
!4588 = !{!561, !4338, !4589, !4590, !4591, !82, !4592, !4593}
!4589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !799)
!4590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !104)
!4592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !136)
!4593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4594)
!4594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4595, size: 32)
!4595 = !DIDerivedType(tag: DW_TAG_typedef, name: "StaticTask_t", file: !100, line: 1030, baseType: !4596)
!4596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xSTATIC_TCB", file: !100, line: 984, size: 608, elements: !4597)
!4597 = !{!4598, !4599, !4606, !4607, !4608, !4609, !4610}
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "pxDummy1", scope: !4596, file: !100, line: 986, baseType: !104, size: 32)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "xDummy3", scope: !4596, file: !100, line: 990, baseType: !4600, size: 320, offset: 32)
!4600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4601, size: 320, elements: !116)
!4601 = !DIDerivedType(tag: DW_TAG_typedef, name: "StaticListItem_t", file: !100, line: 953, baseType: !4602)
!4602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xSTATIC_LIST_ITEM", file: !100, line: 948, size: 160, elements: !4603)
!4603 = !{!4604, !4605}
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "xDummy1", scope: !4602, file: !100, line: 950, baseType: !111, size: 32)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "pvDummy2", scope: !4602, file: !100, line: 951, baseType: !113, size: 128, offset: 32)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "uxDummy5", scope: !4596, file: !100, line: 991, baseType: !82, size: 32, offset: 352)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "pxDummy6", scope: !4596, file: !100, line: 992, baseType: !104, size: 32, offset: 384)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "ucDummy7", scope: !4596, file: !100, line: 993, baseType: !121, size: 128, offset: 416)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "ulDummy18", scope: !4596, file: !100, line: 1019, baseType: !32, size: 32, offset: 544)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "ucDummy19", scope: !4596, file: !100, line: 1020, baseType: !87, size: 8, offset: 576)
!4611 = !{!4612, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4620, !4621}
!4612 = !DILocalVariable(name: "pxTaskCode", arg: 1, scope: !4586, file: !524, line: 575, type: !4338)
!4613 = !DILocalVariable(name: "pcName", arg: 2, scope: !4586, file: !524, line: 576, type: !4589)
!4614 = !DILocalVariable(name: "ulStackDepth", arg: 3, scope: !4586, file: !524, line: 577, type: !4590)
!4615 = !DILocalVariable(name: "pvParameters", arg: 4, scope: !4586, file: !524, line: 578, type: !4591)
!4616 = !DILocalVariable(name: "uxPriority", arg: 5, scope: !4586, file: !524, line: 579, type: !82)
!4617 = !DILocalVariable(name: "puxStackBuffer", arg: 6, scope: !4586, file: !524, line: 580, type: !4592)
!4618 = !DILocalVariable(name: "pxTaskBuffer", arg: 7, scope: !4586, file: !524, line: 581, type: !4593)
!4619 = !DILocalVariable(name: "pxNewTCB", scope: !4586, file: !524, line: 583, type: !535)
!4620 = !DILocalVariable(name: "xReturn", scope: !4586, file: !524, line: 584, type: !561)
!4621 = !DILocalVariable(name: "xSize", scope: !4622, file: !524, line: 594, type: !4623)
!4622 = distinct !DILexicalBlock(scope: !4586, file: !524, line: 590, column: 3)
!4623 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1277)
!4624 = !DILocation(line: 0, scope: !4586)
!4625 = !DILocation(line: 584, column: 2, scope: !4586)
!4626 = !DILocation(line: 586, column: 3, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4586, file: !524, line: 586, column: 3)
!4628 = !DILocation(line: 586, column: 3, scope: !4586)
!4629 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !4633)
!4630 = distinct !DISubprogram(name: "vPortRaiseBASEPRI", scope: !83, file: !83, line: 191, type: !150, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !4631)
!4631 = !{!4632}
!4632 = !DILocalVariable(name: "ulNewBASEPRI", scope: !4630, file: !83, line: 193, type: !32)
!4633 = distinct !DILocation(line: 586, column: 3, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4627, file: !524, line: 586, column: 3)
!4635 = !{i64 471527, i64 471561, i64 471598, i64 471626}
!4636 = !DILocation(line: 0, scope: !4630, inlinedAt: !4633)
!4637 = !DILocation(line: 586, column: 3, scope: !4634)
!4638 = !DILocation(line: 586, column: 3, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4640, file: !524, line: 586, column: 3)
!4640 = distinct !DILexicalBlock(scope: !4634, file: !524, line: 586, column: 3)
!4641 = distinct !{!4641, !4642, !4642, !2130}
!4642 = !DILocation(line: 586, column: 3, scope: !4640)
!4643 = !DILocation(line: 587, column: 3, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4586, file: !524, line: 587, column: 3)
!4645 = !DILocation(line: 587, column: 3, scope: !4586)
!4646 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !4647)
!4647 = distinct !DILocation(line: 587, column: 3, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4644, file: !524, line: 587, column: 3)
!4649 = !DILocation(line: 0, scope: !4630, inlinedAt: !4647)
!4650 = !DILocation(line: 587, column: 3, scope: !4648)
!4651 = !DILocation(line: 587, column: 3, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4653, file: !524, line: 587, column: 3)
!4653 = distinct !DILexicalBlock(scope: !4648, file: !524, line: 587, column: 3)
!4654 = distinct !{!4654, !4655, !4655, !2130}
!4655 = !DILocation(line: 587, column: 3, scope: !4653)
!4656 = !DILocation(line: 594, column: 4, scope: !4622)
!4657 = !DILocation(line: 594, column: 20, scope: !4622)
!4658 = !DILocation(line: 595, column: 4, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4622, file: !524, line: 595, column: 4)
!4660 = !DILocation(line: 595, column: 4, scope: !4622)
!4661 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !4662)
!4662 = distinct !DILocation(line: 595, column: 4, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4659, file: !524, line: 595, column: 4)
!4664 = !DILocation(line: 0, scope: !4630, inlinedAt: !4662)
!4665 = !DILocation(line: 595, column: 4, scope: !4663)
!4666 = !DILocation(line: 595, column: 4, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4668, file: !524, line: 595, column: 4)
!4668 = distinct !DILexicalBlock(scope: !4663, file: !524, line: 595, column: 4)
!4669 = distinct !{!4669, !4670, !4670, !2130}
!4670 = !DILocation(line: 595, column: 4, scope: !4668)
!4671 = !DILocation(line: 596, column: 3, scope: !4586)
!4672 = !DILocation(line: 604, column: 15, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4674, file: !524, line: 601, column: 3)
!4674 = distinct !DILexicalBlock(scope: !4586, file: !524, line: 600, column: 7)
!4675 = !DILocation(line: 605, column: 14, scope: !4673)
!4676 = !DILocation(line: 605, column: 22, scope: !4673)
!4677 = !{!4678, !2496, i64 48}
!4678 = !{!"tskTaskControlBlock", !2496, i64 0, !4679, i64 4, !4679, i64 24, !4367, i64 44, !2496, i64 48, !2497, i64 52, !3335, i64 68, !2497, i64 72}
!4679 = !{!"xLIST_ITEM", !3335, i64 0, !2496, i64 4, !2496, i64 8, !2496, i64 12, !2496, i64 16}
!4680 = !DILocation(line: 615, column: 4, scope: !4673)
!4681 = !DILocation(line: 616, column: 4, scope: !4673)
!4682 = !DILocation(line: 623, column: 10, scope: !4586)
!4683 = !DILocation(line: 624, column: 2, scope: !4586)
!4684 = !DILocation(line: 623, column: 3, scope: !4586)
!4685 = distinct !DISubprogram(name: "prvInitialiseNewTask", scope: !524, file: !524, line: 817, type: !4686, scopeLine: 825, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !4699)
!4686 = !DISubroutineType(types: !4687)
!4687 = !{null, !4338, !4589, !4590, !4591, !82, !4688, !535, !4690}
!4688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4689)
!4689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 32)
!4690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4691)
!4691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4692, size: 32)
!4692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4693)
!4693 = !DIDerivedType(tag: DW_TAG_typedef, name: "MemoryRegion_t", file: !527, line: 107, baseType: !4694)
!4694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMEMORY_REGION", file: !527, line: 102, size: 96, elements: !4695)
!4695 = !{!4696, !4697, !4698}
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "pvBaseAddress", scope: !4694, file: !527, line: 104, baseType: !104, size: 32)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "ulLengthInBytes", scope: !4694, file: !527, line: 105, baseType: !32, size: 32, offset: 32)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "ulParameters", scope: !4694, file: !527, line: 106, baseType: !32, size: 32, offset: 64)
!4699 = !{!4700, !4701, !4702, !4703, !4704, !4705, !4706, !4707, !4708, !4709}
!4700 = !DILocalVariable(name: "pxTaskCode", arg: 1, scope: !4685, file: !524, line: 817, type: !4338)
!4701 = !DILocalVariable(name: "pcName", arg: 2, scope: !4685, file: !524, line: 818, type: !4589)
!4702 = !DILocalVariable(name: "ulStackDepth", arg: 3, scope: !4685, file: !524, line: 819, type: !4590)
!4703 = !DILocalVariable(name: "pvParameters", arg: 4, scope: !4685, file: !524, line: 820, type: !4591)
!4704 = !DILocalVariable(name: "uxPriority", arg: 5, scope: !4685, file: !524, line: 821, type: !82)
!4705 = !DILocalVariable(name: "pxCreatedTask", arg: 6, scope: !4685, file: !524, line: 822, type: !4688)
!4706 = !DILocalVariable(name: "pxNewTCB", arg: 7, scope: !4685, file: !524, line: 823, type: !535)
!4707 = !DILocalVariable(name: "xRegions", arg: 8, scope: !4685, file: !524, line: 824, type: !4690)
!4708 = !DILocalVariable(name: "pxTopOfStack", scope: !4685, file: !524, line: 826, type: !136)
!4709 = !DILocalVariable(name: "x", scope: !4685, file: !524, line: 827, type: !82)
!4710 = !DILocation(line: 0, scope: !4685)
!4711 = !DILocation(line: 857, column: 28, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4685, file: !524, line: 856, column: 2)
!4713 = !DILocation(line: 857, column: 53, scope: !4712)
!4714 = !DILocation(line: 857, column: 36, scope: !4712)
!4715 = !DILocation(line: 858, column: 40, scope: !4712)
!4716 = !DILocation(line: 858, column: 81, scope: !4712)
!4717 = !DILocation(line: 885, column: 2, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4685, file: !524, line: 885, column: 2)
!4719 = !DILocation(line: 887, column: 31, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4721, file: !524, line: 886, column: 2)
!4721 = distinct !DILexicalBlock(scope: !4718, file: !524, line: 885, column: 2)
!4722 = !DILocation(line: 887, column: 3, scope: !4720)
!4723 = !DILocation(line: 887, column: 29, scope: !4720)
!4724 = !DILocation(line: 892, column: 7, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4720, file: !524, line: 892, column: 7)
!4726 = !DILocation(line: 892, column: 19, scope: !4725)
!4727 = !DILocation(line: 885, column: 76, scope: !4721)
!4728 = !DILocation(line: 892, column: 7, scope: !4720)
!4729 = distinct !{!4729, !4717, !4730, !2129, !2130}
!4730 = !DILocation(line: 900, column: 2, scope: !4718)
!4731 = !DILocation(line: 858, column: 18, scope: !4712)
!4732 = !DILocation(line: 904, column: 2, scope: !4685)
!4733 = !DILocation(line: 904, column: 54, scope: !4685)
!4734 = !DILocation(line: 908, column: 6, scope: !4685)
!4735 = !DILocation(line: 917, column: 12, scope: !4685)
!4736 = !DILocation(line: 917, column: 23, scope: !4685)
!4737 = !{!4678, !4367, i64 44}
!4738 = !DILocation(line: 925, column: 36, scope: !4685)
!4739 = !DILocation(line: 925, column: 2, scope: !4685)
!4740 = !DILocation(line: 926, column: 36, scope: !4685)
!4741 = !DILocation(line: 926, column: 2, scope: !4685)
!4742 = !DILocation(line: 930, column: 2, scope: !4685)
!4743 = !{!4678, !2496, i64 16}
!4744 = !DILocation(line: 933, column: 2, scope: !4685)
!4745 = !{!4678, !3335, i64 24}
!4746 = !DILocation(line: 934, column: 2, scope: !4685)
!4747 = !{!4678, !2496, i64 36}
!4748 = !DILocation(line: 976, column: 13, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4685, file: !524, line: 975, column: 2)
!4750 = !DILocation(line: 976, column: 29, scope: !4749)
!4751 = !{!4678, !3335, i64 68}
!4752 = !DILocation(line: 977, column: 13, scope: !4749)
!4753 = !DILocation(line: 977, column: 27, scope: !4749)
!4754 = !{!4678, !2497, i64 72}
!4755 = !DILocation(line: 1004, column: 28, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4685, file: !524, line: 1003, column: 2)
!4757 = !DILocation(line: 1004, column: 13, scope: !4756)
!4758 = !DILocation(line: 1004, column: 26, scope: !4756)
!4759 = !{!4678, !2496, i64 0}
!4760 = !DILocation(line: 1008, column: 31, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4685, file: !524, line: 1008, column: 6)
!4762 = !DILocation(line: 1008, column: 6, scope: !4685)
!4763 = !DILocation(line: 1012, column: 18, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4761, file: !524, line: 1009, column: 2)
!4765 = !DILocation(line: 1013, column: 2, scope: !4764)
!4766 = !DILocation(line: 1018, column: 1, scope: !4685)
!4767 = distinct !DISubprogram(name: "prvAddNewTaskToReadyList", scope: !524, file: !524, line: 1021, type: !4768, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !4770)
!4768 = !DISubroutineType(types: !4769)
!4769 = !{null, !535}
!4770 = !{!4771}
!4771 = !DILocalVariable(name: "pxNewTCB", arg: 1, scope: !4767, file: !524, line: 1021, type: !535)
!4772 = !DILocation(line: 0, scope: !4767)
!4773 = !DILocation(line: 1025, column: 2, scope: !4767)
!4774 = !DILocation(line: 1027, column: 25, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4767, file: !524, line: 1026, column: 2)
!4776 = !DILocation(line: 1028, column: 7, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4775, file: !524, line: 1028, column: 7)
!4778 = !DILocation(line: 1028, column: 20, scope: !4777)
!4779 = !DILocation(line: 1028, column: 7, scope: !4775)
!4780 = !DILocation(line: 1032, column: 17, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4777, file: !524, line: 1029, column: 3)
!4782 = !DILocation(line: 1034, column: 8, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4781, file: !524, line: 1034, column: 8)
!4784 = !DILocation(line: 1034, column: 31, scope: !4783)
!4785 = !DILocation(line: 1034, column: 8, scope: !4781)
!4786 = !DILocation(line: 1039, column: 5, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4783, file: !524, line: 1035, column: 4)
!4788 = !DILocation(line: 1040, column: 4, scope: !4787)
!4789 = !DILocation(line: 1051, column: 8, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4791, file: !524, line: 1051, column: 8)
!4791 = distinct !DILexicalBlock(scope: !4777, file: !524, line: 1047, column: 3)
!4792 = !DILocation(line: 1051, column: 26, scope: !4790)
!4793 = !DILocation(line: 1051, column: 8, scope: !4791)
!4794 = !DILocation(line: 1053, column: 9, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4796, file: !524, line: 1053, column: 9)
!4796 = distinct !DILexicalBlock(scope: !4790, file: !524, line: 1052, column: 4)
!4797 = !DILocation(line: 1053, column: 23, scope: !4795)
!4798 = !DILocation(line: 1053, column: 47, scope: !4795)
!4799 = !DILocation(line: 1053, column: 34, scope: !4795)
!4800 = !DILocation(line: 1053, column: 9, scope: !4796)
!4801 = !DILocation(line: 1055, column: 19, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4795, file: !524, line: 1054, column: 5)
!4803 = !DILocation(line: 1056, column: 5, scope: !4802)
!4804 = !DILocation(line: 1068, column: 15, scope: !4775)
!4805 = !DILocation(line: 1078, column: 3, scope: !4775)
!4806 = !DILocation(line: 1082, column: 2, scope: !4767)
!4807 = !DILocation(line: 1084, column: 6, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4767, file: !524, line: 1084, column: 6)
!4809 = !DILocation(line: 1084, column: 24, scope: !4808)
!4810 = !DILocation(line: 1084, column: 6, scope: !4767)
!4811 = !DILocation(line: 1088, column: 7, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4813, file: !524, line: 1088, column: 7)
!4813 = distinct !DILexicalBlock(scope: !4808, file: !524, line: 1085, column: 2)
!4814 = !DILocation(line: 1096, column: 2, scope: !4813)
!4815 = !DILocation(line: 1101, column: 1, scope: !4767)
!4816 = distinct !DISubprogram(name: "prvInitialiseTaskLists", scope: !524, file: !524, line: 3430, type: !150, scopeLine: 3431, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !4817)
!4817 = !{!4818}
!4818 = !DILocalVariable(name: "uxPriority", scope: !4816, file: !524, line: 3432, type: !82)
!4819 = !DILocation(line: 0, scope: !4816)
!4820 = !DILocation(line: 3434, column: 2, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4816, file: !524, line: 3434, column: 2)
!4822 = !DILocation(line: 3436, column: 23, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4824, file: !524, line: 3435, column: 2)
!4824 = distinct !DILexicalBlock(scope: !4821, file: !524, line: 3434, column: 2)
!4825 = !DILocation(line: 3436, column: 3, scope: !4823)
!4826 = !DILocation(line: 3434, column: 101, scope: !4824)
!4827 = !DILocation(line: 3434, column: 51, scope: !4824)
!4828 = distinct !{!4828, !4820, !4829, !2129, !2130}
!4829 = !DILocation(line: 3437, column: 2, scope: !4821)
!4830 = !DILocation(line: 3439, column: 2, scope: !4816)
!4831 = !DILocation(line: 3440, column: 2, scope: !4816)
!4832 = !DILocation(line: 3441, column: 2, scope: !4816)
!4833 = !DILocation(line: 3457, column: 20, scope: !4816)
!4834 = !DILocation(line: 3458, column: 28, scope: !4816)
!4835 = !DILocation(line: 3459, column: 1, scope: !4816)
!4836 = distinct !DISubprogram(name: "vTaskDelay", scope: !524, file: !524, line: 1282, type: !4837, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !4840)
!4837 = !DISubroutineType(types: !4838)
!4838 = !{null, !4839}
!4839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !111)
!4840 = !{!4841, !4842}
!4841 = !DILocalVariable(name: "xTicksToDelay", arg: 1, scope: !4836, file: !524, line: 1282, type: !4839)
!4842 = !DILocalVariable(name: "xAlreadyYielded", scope: !4836, file: !524, line: 1284, type: !509)
!4843 = !DILocation(line: 0, scope: !4836)
!4844 = !DILocation(line: 1287, column: 21, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4836, file: !524, line: 1287, column: 7)
!4846 = !DILocation(line: 1287, column: 7, scope: !4836)
!4847 = !DILocation(line: 1289, column: 4, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4849, file: !524, line: 1289, column: 4)
!4849 = distinct !DILexicalBlock(scope: !4845, file: !524, line: 1288, column: 3)
!4850 = !DILocation(line: 1289, column: 4, scope: !4849)
!4851 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !4852)
!4852 = distinct !DILocation(line: 1289, column: 4, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4848, file: !524, line: 1289, column: 4)
!4854 = !DILocation(line: 0, scope: !4630, inlinedAt: !4852)
!4855 = !DILocation(line: 1289, column: 4, scope: !4853)
!4856 = !DILocation(line: 1289, column: 4, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4858, file: !524, line: 1289, column: 4)
!4858 = distinct !DILexicalBlock(scope: !4853, file: !524, line: 1289, column: 4)
!4859 = distinct !{!4859, !4860, !4860, !2130}
!4860 = !DILocation(line: 1289, column: 4, scope: !4858)
!4861 = !DILocation(line: 1290, column: 4, scope: !4849)
!4862 = !DILocation(line: 1301, column: 5, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4849, file: !524, line: 1291, column: 4)
!4864 = !DILocation(line: 1303, column: 22, scope: !4849)
!4865 = !DILocation(line: 1304, column: 3, scope: !4849)
!4866 = !DILocation(line: 1314, column: 4, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4868, file: !524, line: 1314, column: 4)
!4868 = distinct !DILexicalBlock(scope: !4869, file: !524, line: 1313, column: 3)
!4869 = distinct !DILexicalBlock(scope: !4836, file: !524, line: 1312, column: 7)
!4870 = !{i64 2148151022}
!4871 = !{i64 2148151073}
!4872 = !DILocation(line: 1320, column: 2, scope: !4836)
!4873 = distinct !DISubprogram(name: "vTaskSuspendAll", scope: !524, file: !524, line: 2026, type: !150, scopeLine: 2027, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !152)
!4874 = !DILocation(line: 2032, column: 2, scope: !4873)
!4875 = !DILocation(line: 2033, column: 1, scope: !4873)
!4876 = distinct !DISubprogram(name: "prvAddCurrentTaskToDelayedList", scope: !524, file: !524, line: 4906, type: !4877, scopeLine: 4907, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !4880)
!4877 = !DISubroutineType(types: !4878)
!4878 = !{null, !111, !4879}
!4879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !509)
!4880 = !{!4881, !4882, !4883, !4884}
!4881 = !DILocalVariable(name: "xTicksToWait", arg: 1, scope: !4876, file: !524, line: 4906, type: !111)
!4882 = !DILocalVariable(name: "xCanBlockIndefinitely", arg: 2, scope: !4876, file: !524, line: 4906, type: !4879)
!4883 = !DILocalVariable(name: "xTimeToWake", scope: !4876, file: !524, line: 4908, type: !111)
!4884 = !DILocalVariable(name: "xConstTickCount", scope: !4876, file: !524, line: 4909, type: !4839)
!4885 = !DILocation(line: 0, scope: !4876)
!4886 = !DILocation(line: 4909, column: 36, scope: !4876)
!4887 = !DILocation(line: 4922, column: 23, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4876, file: !524, line: 4922, column: 6)
!4889 = !DILocation(line: 4922, column: 37, scope: !4888)
!4890 = !DILocation(line: 4922, column: 6, scope: !4888)
!4891 = !DILocation(line: 4922, column: 56, scope: !4888)
!4892 = !DILocation(line: 4922, column: 6, scope: !4876)
!4893 = !DILocation(line: 4926, column: 3, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4888, file: !524, line: 4923, column: 2)
!4895 = !DILocation(line: 4927, column: 2, scope: !4894)
!4896 = !DILocation(line: 4983, column: 33, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4876, file: !524, line: 4979, column: 2)
!4898 = !DILocation(line: 4986, column: 3, scope: !4897)
!4899 = !{!4678, !3335, i64 4}
!4900 = !DILocation(line: 4988, column: 19, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4897, file: !524, line: 4988, column: 7)
!4902 = !DILocation(line: 4988, column: 7, scope: !4897)
!4903 = !DILocation(line: 4991, column: 17, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4901, file: !524, line: 4989, column: 3)
!4905 = !DILocation(line: 4991, column: 47, scope: !4904)
!4906 = !DILocation(line: 4991, column: 61, scope: !4904)
!4907 = !DILocation(line: 4991, column: 4, scope: !4904)
!4908 = !DILocation(line: 4992, column: 3, scope: !4904)
!4909 = !DILocation(line: 4996, column: 17, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4901, file: !524, line: 4994, column: 3)
!4911 = !DILocation(line: 4996, column: 39, scope: !4910)
!4912 = !DILocation(line: 4996, column: 53, scope: !4910)
!4913 = !DILocation(line: 4996, column: 4, scope: !4910)
!4914 = !DILocation(line: 5001, column: 22, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4910, file: !524, line: 5001, column: 8)
!4916 = !DILocation(line: 5001, column: 20, scope: !4915)
!4917 = !DILocation(line: 5001, column: 8, scope: !4910)
!4918 = !DILocation(line: 5003, column: 26, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4915, file: !524, line: 5002, column: 4)
!4920 = !DILocation(line: 5004, column: 4, scope: !4919)
!4921 = !DILocation(line: 5015, column: 1, scope: !4876)
!4922 = distinct !DISubprogram(name: "xTaskResumeAll", scope: !524, file: !524, line: 2099, type: !4387, scopeLine: 2100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !4923)
!4923 = !{!4924, !4925, !4926}
!4924 = !DILocalVariable(name: "pxTCB", scope: !4922, file: !524, line: 2101, type: !535)
!4925 = !DILocalVariable(name: "xAlreadyYielded", scope: !4922, file: !524, line: 2102, type: !509)
!4926 = !DILocalVariable(name: "uxPendedCounts", scope: !4927, file: !524, line: 2158, type: !82)
!4927 = distinct !DILexicalBlock(scope: !4928, file: !524, line: 2157, column: 5)
!4928 = distinct !DILexicalBlock(scope: !4929, file: !524, line: 2120, column: 4)
!4929 = distinct !DILexicalBlock(scope: !4930, file: !524, line: 2119, column: 8)
!4930 = distinct !DILexicalBlock(scope: !4931, file: !524, line: 2118, column: 3)
!4931 = distinct !DILexicalBlock(scope: !4932, file: !524, line: 2117, column: 7)
!4932 = distinct !DILexicalBlock(scope: !4922, file: !524, line: 2114, column: 2)
!4933 = !DILocation(line: 0, scope: !4922)
!4934 = !DILocation(line: 2106, column: 2, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4922, file: !524, line: 2106, column: 2)
!4936 = !DILocation(line: 2106, column: 2, scope: !4922)
!4937 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !4938)
!4938 = distinct !DILocation(line: 2106, column: 2, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4935, file: !524, line: 2106, column: 2)
!4940 = !DILocation(line: 0, scope: !4630, inlinedAt: !4938)
!4941 = !DILocation(line: 2106, column: 2, scope: !4939)
!4942 = !DILocation(line: 2106, column: 2, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4944, file: !524, line: 2106, column: 2)
!4944 = distinct !DILexicalBlock(scope: !4939, file: !524, line: 2106, column: 2)
!4945 = distinct !{!4945, !4946, !4946, !2130}
!4946 = !DILocation(line: 2106, column: 2, scope: !4944)
!4947 = !DILocation(line: 2113, column: 2, scope: !4922)
!4948 = !DILocation(line: 2115, column: 3, scope: !4932)
!4949 = !DILocation(line: 2117, column: 7, scope: !4931)
!4950 = !DILocation(line: 2117, column: 28, scope: !4931)
!4951 = !DILocation(line: 2117, column: 7, scope: !4932)
!4952 = !DILocation(line: 2119, column: 8, scope: !4929)
!4953 = !DILocation(line: 2119, column: 31, scope: !4929)
!4954 = !DILocation(line: 2119, column: 8, scope: !4930)
!4955 = !DILocation(line: 2123, column: 12, scope: !4928)
!4956 = !{!4957, !4367, i64 0}
!4957 = !{!"xLIST", !4367, i64 0, !2496, i64 4, !4958, i64 8}
!4958 = !{!"xMINI_LIST_ITEM", !3335, i64 0, !2496, i64 4, !2496, i64 8}
!4959 = !DILocation(line: 2123, column: 5, scope: !4928)
!4960 = !DILocation(line: 2125, column: 26, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4928, file: !524, line: 2124, column: 5)
!4962 = !{!4957, !2496, i64 12}
!4963 = !{!4679, !2496, i64 12}
!4964 = !DILocation(line: 2126, column: 39, scope: !4961)
!4965 = !DILocation(line: 2126, column: 15, scope: !4961)
!4966 = !DILocation(line: 2127, column: 39, scope: !4961)
!4967 = !DILocation(line: 2127, column: 15, scope: !4961)
!4968 = !DILocation(line: 2128, column: 6, scope: !4961)
!4969 = !DILocation(line: 2132, column: 17, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4961, file: !524, line: 2132, column: 10)
!4971 = !DILocation(line: 2132, column: 31, scope: !4970)
!4972 = !DILocation(line: 2132, column: 45, scope: !4970)
!4973 = !DILocation(line: 2132, column: 28, scope: !4970)
!4974 = !DILocation(line: 2132, column: 10, scope: !4961)
!4975 = !DILocation(line: 2134, column: 21, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4970, file: !524, line: 2133, column: 6)
!4977 = !DILocation(line: 2135, column: 6, scope: !4976)
!4978 = distinct !{!4978, !4959, !4979, !2129, !2130}
!4979 = !DILocation(line: 2140, column: 5, scope: !4928)
!4980 = !DILocation(line: 2142, column: 15, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4928, file: !524, line: 2142, column: 9)
!4982 = !DILocation(line: 2142, column: 9, scope: !4928)
!4983 = !DILocation(line: 2150, column: 6, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4981, file: !524, line: 2143, column: 5)
!4985 = !DILocation(line: 2151, column: 5, scope: !4984)
!4986 = !DILocation(line: 2158, column: 35, scope: !4927)
!4987 = !DILocation(line: 0, scope: !4927)
!4988 = !DILocation(line: 2160, column: 25, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4927, file: !524, line: 2160, column: 10)
!4990 = !DILocation(line: 2160, column: 10, scope: !4927)
!4991 = !DILocation(line: 2164, column: 12, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4993, file: !524, line: 2164, column: 12)
!4993 = distinct !DILexicalBlock(scope: !4994, file: !524, line: 2163, column: 7)
!4994 = distinct !DILexicalBlock(scope: !4989, file: !524, line: 2161, column: 6)
!4995 = !DILocation(line: 2172, column: 8, scope: !4993)
!4996 = !DILocation(line: 2173, column: 31, scope: !4994)
!4997 = !DILocation(line: 2173, column: 7, scope: !4993)
!4998 = distinct !{!4998, !4999, !5000, !2129, !2130}
!4999 = !DILocation(line: 2162, column: 7, scope: !4994)
!5000 = !DILocation(line: 2173, column: 52, scope: !4994)
!5001 = !DILocation(line: 2175, column: 21, scope: !4994)
!5002 = !DILocation(line: 2176, column: 6, scope: !4994)
!5003 = !DILocation(line: 2183, column: 9, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !4928, file: !524, line: 2183, column: 9)
!5005 = !DILocation(line: 2196, column: 4, scope: !4928)
!5006 = !DILocation(line: 2203, column: 2, scope: !4922)
!5007 = !DILocation(line: 2205, column: 2, scope: !4922)
!5008 = distinct !DISubprogram(name: "prvResetNextTaskUnblockTime", scope: !524, file: !524, line: 3724, type: !150, scopeLine: 3725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5009)
!5009 = !{!5010}
!5010 = !DILocalVariable(name: "pxTCB", scope: !5008, file: !524, line: 3726, type: !535)
!5011 = !DILocation(line: 3728, column: 6, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !5008, file: !524, line: 3728, column: 6)
!5013 = !DILocation(line: 3728, column: 6, scope: !5008)
!5014 = !DILocation(line: 3742, column: 27, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5012, file: !524, line: 3737, column: 2)
!5016 = !DILocation(line: 0, scope: !5008)
!5017 = !DILocation(line: 3743, column: 26, scope: !5015)
!5018 = !DILocation(line: 0, scope: !5012)
!5019 = !DILocation(line: 3745, column: 1, scope: !5008)
!5020 = distinct !DISubprogram(name: "xTaskIncrementTick", scope: !524, file: !524, line: 2583, type: !4387, scopeLine: 2584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5021)
!5021 = !{!5022, !5023, !5024, !5025, !5028}
!5022 = !DILocalVariable(name: "pxTCB", scope: !5020, file: !524, line: 2585, type: !535)
!5023 = !DILocalVariable(name: "xItemValue", scope: !5020, file: !524, line: 2586, type: !111)
!5024 = !DILocalVariable(name: "xSwitchRequired", scope: !5020, file: !524, line: 2587, type: !509)
!5025 = !DILocalVariable(name: "xConstTickCount", scope: !5026, file: !524, line: 2597, type: !4839)
!5026 = distinct !DILexicalBlock(scope: !5027, file: !524, line: 2594, column: 2)
!5027 = distinct !DILexicalBlock(scope: !5020, file: !524, line: 2593, column: 6)
!5028 = !DILocalVariable(name: "pxTemp", scope: !5029, file: !524, line: 2605, type: !613)
!5029 = distinct !DILexicalBlock(scope: !5030, file: !524, line: 2605, column: 4)
!5030 = distinct !DILexicalBlock(scope: !5031, file: !524, line: 2604, column: 3)
!5031 = distinct !DILexicalBlock(scope: !5026, file: !524, line: 2603, column: 7)
!5032 = !DILocation(line: 0, scope: !5020)
!5033 = !DILocation(line: 2593, column: 6, scope: !5027)
!5034 = !DILocation(line: 2593, column: 27, scope: !5027)
!5035 = !DILocation(line: 2593, column: 6, scope: !5020)
!5036 = !DILocation(line: 2597, column: 38, scope: !5026)
!5037 = !DILocation(line: 2597, column: 49, scope: !5026)
!5038 = !DILocation(line: 0, scope: !5026)
!5039 = !DILocation(line: 2601, column: 14, scope: !5026)
!5040 = !DILocation(line: 2603, column: 23, scope: !5031)
!5041 = !DILocation(line: 2603, column: 7, scope: !5026)
!5042 = !DILocation(line: 2605, column: 4, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5029, file: !524, line: 2605, column: 4)
!5044 = !DILocation(line: 2605, column: 4, scope: !5029)
!5045 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !5046)
!5046 = distinct !DILocation(line: 2605, column: 4, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5043, file: !524, line: 2605, column: 4)
!5048 = !DILocation(line: 0, scope: !4630, inlinedAt: !5046)
!5049 = !DILocation(line: 2605, column: 4, scope: !5047)
!5050 = !DILocation(line: 2605, column: 4, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5052, file: !524, line: 2605, column: 4)
!5052 = distinct !DILexicalBlock(scope: !5047, file: !524, line: 2605, column: 4)
!5053 = distinct !{!5053, !5054, !5054, !2130}
!5054 = !DILocation(line: 2605, column: 4, scope: !5052)
!5055 = !DILocation(line: 0, scope: !5029)
!5056 = !DILocation(line: 2606, column: 3, scope: !5030)
!5057 = !DILocation(line: 2616, column: 26, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5026, file: !524, line: 2616, column: 7)
!5059 = !DILocation(line: 2616, column: 23, scope: !5058)
!5060 = !DILocation(line: 2616, column: 7, scope: !5026)
!5061 = !DILocation(line: 2620, column: 9, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5063, file: !524, line: 2620, column: 9)
!5063 = distinct !DILexicalBlock(scope: !5064, file: !524, line: 2619, column: 4)
!5064 = distinct !DILexicalBlock(scope: !5065, file: !524, line: 2618, column: 4)
!5065 = distinct !DILexicalBlock(scope: !5066, file: !524, line: 2618, column: 4)
!5066 = distinct !DILexicalBlock(scope: !5058, file: !524, line: 2617, column: 3)
!5067 = !DILocation(line: 2620, column: 9, scope: !5063)
!5068 = !DILocation(line: 2627, column: 27, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5062, file: !524, line: 2621, column: 5)
!5070 = !DILocation(line: 2628, column: 6, scope: !5069)
!5071 = !DILocation(line: 2636, column: 26, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5062, file: !524, line: 2631, column: 5)
!5073 = !DILocation(line: 2637, column: 19, scope: !5072)
!5074 = !DILocation(line: 2639, column: 26, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5072, file: !524, line: 2639, column: 10)
!5076 = !DILocation(line: 2639, column: 10, scope: !5072)
!5077 = !DILocation(line: 2646, column: 28, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5075, file: !524, line: 2640, column: 6)
!5079 = !DILocation(line: 2647, column: 7, scope: !5078)
!5080 = !DILocation(line: 2655, column: 15, scope: !5072)
!5081 = !DILocation(line: 2659, column: 10, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5072, file: !524, line: 2659, column: 10)
!5083 = !{!4678, !2496, i64 40}
!5084 = !DILocation(line: 2659, column: 64, scope: !5082)
!5085 = !DILocation(line: 2659, column: 10, scope: !5072)
!5086 = !DILocation(line: 2661, column: 16, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5082, file: !524, line: 2660, column: 6)
!5088 = !DILocation(line: 2662, column: 6, scope: !5087)
!5089 = !DILocation(line: 2670, column: 6, scope: !5072)
!5090 = distinct !{!5090, !5091, !5092, !2130}
!5091 = !DILocation(line: 2618, column: 4, scope: !5065)
!5092 = !DILocation(line: 2691, column: 4, scope: !5065)
!5093 = !DILocation(line: 2727, column: 3, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5027, file: !524, line: 2726, column: 2)
!5095 = !DILocation(line: 2751, column: 2, scope: !5020)
!5096 = distinct !DISubprogram(name: "vTaskStartScheduler", scope: !524, file: !524, line: 1895, type: !150, scopeLine: 1896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5097)
!5097 = !{!5098, !5099, !5101, !5102}
!5098 = !DILocalVariable(name: "xReturn", scope: !5096, file: !524, line: 1897, type: !509)
!5099 = !DILocalVariable(name: "pxIdleTaskTCBBuffer", scope: !5100, file: !524, line: 1902, type: !4594)
!5100 = distinct !DILexicalBlock(scope: !5096, file: !524, line: 1901, column: 2)
!5101 = !DILocalVariable(name: "pxIdleTaskStackBuffer", scope: !5100, file: !524, line: 1903, type: !136)
!5102 = !DILocalVariable(name: "ulIdleTaskStackSize", scope: !5100, file: !524, line: 1904, type: !32)
!5103 = !DILocation(line: 1902, column: 3, scope: !5100)
!5104 = !DILocation(line: 0, scope: !5100)
!5105 = !DILocation(line: 1902, column: 17, scope: !5100)
!5106 = !DILocation(line: 1903, column: 3, scope: !5100)
!5107 = !DILocation(line: 1903, column: 16, scope: !5100)
!5108 = !DILocation(line: 1904, column: 3, scope: !5100)
!5109 = !DILocation(line: 1908, column: 3, scope: !5100)
!5110 = !DILocation(line: 1911, column: 13, scope: !5100)
!5111 = !DILocation(line: 1914, column: 13, scope: !5100)
!5112 = !DILocation(line: 1915, column: 13, scope: !5100)
!5113 = !DILocation(line: 1909, column: 21, scope: !5100)
!5114 = !DILocation(line: 1909, column: 19, scope: !5100)
!5115 = !DILocation(line: 1917, column: 23, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5100, file: !524, line: 1917, column: 7)
!5117 = !DILocation(line: 0, scope: !5096)
!5118 = !DILocation(line: 1925, column: 2, scope: !5096)
!5119 = !DILocation(line: 1951, column: 6, scope: !5096)
!5120 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !5121)
!5121 = distinct !DILocation(line: 1967, column: 3, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5123, file: !524, line: 1952, column: 2)
!5123 = distinct !DILexicalBlock(scope: !5096, file: !524, line: 1951, column: 6)
!5124 = !DILocation(line: 0, scope: !4630, inlinedAt: !5121)
!5125 = !DILocation(line: 1977, column: 24, scope: !5122)
!5126 = !DILocation(line: 1978, column: 21, scope: !5122)
!5127 = !DILocation(line: 1979, column: 14, scope: !5122)
!5128 = !DILocation(line: 1991, column: 7, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5122, file: !524, line: 1991, column: 7)
!5130 = !DILocation(line: 2000, column: 2, scope: !5122)
!5131 = !DILocation(line: 2012, column: 1, scope: !5096)
!5132 = distinct !DISubprogram(name: "prvIdleTask", scope: !524, file: !524, line: 3218, type: !2111, scopeLine: 3219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5133)
!5133 = !{!5134}
!5134 = !DILocalVariable(name: "pvParameters", arg: 1, scope: !5132, file: !524, line: 3218, type: !104)
!5135 = !DILocation(line: 0, scope: !5132)
!5136 = !DILocation(line: 3231, column: 2, scope: !5132)
!5137 = !DILocation(line: 3243, column: 4, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5139, file: !524, line: 3243, column: 4)
!5139 = distinct !DILexicalBlock(scope: !5140, file: !524, line: 3238, column: 3)
!5140 = distinct !DILexicalBlock(scope: !5141, file: !524, line: 3232, column: 2)
!5141 = distinct !DILexicalBlock(scope: !5142, file: !524, line: 3231, column: 2)
!5142 = distinct !DILexicalBlock(scope: !5132, file: !524, line: 3231, column: 2)
!5143 = !{i64 2148159436}
!5144 = !{i64 2148159487}
!5145 = !DILocation(line: 3231, column: 2, scope: !5141)
!5146 = distinct !{!5146, !5147, !5148, !2130}
!5147 = !DILocation(line: 3231, column: 2, scope: !5142)
!5148 = !DILocation(line: 3331, column: 2, scope: !5142)
!5149 = distinct !DISubprogram(name: "vTaskEndScheduler", scope: !524, file: !524, line: 2015, type: !150, scopeLine: 2016, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !152)
!5150 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !5151)
!5151 = distinct !DILocation(line: 2020, column: 2, scope: !5149)
!5152 = !DILocation(line: 0, scope: !4630, inlinedAt: !5151)
!5153 = !DILocation(line: 2021, column: 20, scope: !5149)
!5154 = !DILocation(line: 2022, column: 2, scope: !5149)
!5155 = !DILocation(line: 2023, column: 1, scope: !5149)
!5156 = distinct !DISubprogram(name: "xTaskGetTickCount", scope: !524, file: !524, line: 2209, type: !5157, scopeLine: 2210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5159)
!5157 = !DISubroutineType(types: !5158)
!5158 = !{!111}
!5159 = !{!5160}
!5160 = !DILocalVariable(name: "xTicks", scope: !5156, file: !524, line: 2211, type: !111)
!5161 = !DILocation(line: 2216, column: 12, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5156, file: !524, line: 2215, column: 2)
!5163 = !DILocation(line: 0, scope: !5156)
!5164 = !DILocation(line: 2220, column: 2, scope: !5156)
!5165 = distinct !DISubprogram(name: "xTaskGetTickCountFromISR", scope: !524, file: !524, line: 2224, type: !5157, scopeLine: 2225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5166)
!5166 = !{!5167, !5168}
!5167 = !DILocalVariable(name: "xReturn", scope: !5165, file: !524, line: 2226, type: !111)
!5168 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !5165, file: !524, line: 2227, type: !82)
!5169 = !DILocation(line: 2243, column: 2, scope: !5165)
!5170 = !DILocation(line: 0, scope: !5165)
!5171 = !DILocation(line: 2247, column: 13, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5165, file: !524, line: 2246, column: 2)
!5173 = !DILocation(line: 2251, column: 2, scope: !5165)
!5174 = distinct !DISubprogram(name: "uxTaskGetNumberOfTasks", scope: !524, file: !524, line: 2255, type: !5175, scopeLine: 2256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !152)
!5175 = !DISubroutineType(types: !5176)
!5176 = !{!82}
!5177 = !DILocation(line: 2259, column: 9, scope: !5174)
!5178 = !DILocation(line: 2259, column: 2, scope: !5174)
!5179 = distinct !DISubprogram(name: "pcTaskGetName", scope: !524, file: !524, line: 2263, type: !5180, scopeLine: 2264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5182)
!5180 = !DISubroutineType(types: !5181)
!5181 = !{!261, !561}
!5182 = !{!5183, !5184}
!5183 = !DILocalVariable(name: "xTaskToQuery", arg: 1, scope: !5179, file: !524, line: 2263, type: !561)
!5184 = !DILocalVariable(name: "pxTCB", scope: !5179, file: !524, line: 2265, type: !535)
!5185 = !DILocation(line: 0, scope: !5179)
!5186 = !DILocation(line: 2269, column: 10, scope: !5179)
!5187 = !DILocation(line: 2270, column: 2, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5179, file: !524, line: 2270, column: 2)
!5189 = !DILocation(line: 2270, column: 2, scope: !5179)
!5190 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !5191)
!5191 = distinct !DILocation(line: 2270, column: 2, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5188, file: !524, line: 2270, column: 2)
!5193 = !DILocation(line: 0, scope: !4630, inlinedAt: !5191)
!5194 = !DILocation(line: 2270, column: 2, scope: !5192)
!5195 = !DILocation(line: 2270, column: 2, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5197, file: !524, line: 2270, column: 2)
!5197 = distinct !DILexicalBlock(scope: !5192, file: !524, line: 2270, column: 2)
!5198 = distinct !{!5198, !5199, !5199, !2130}
!5199 = !DILocation(line: 2270, column: 2, scope: !5197)
!5200 = !DILocation(line: 2271, column: 12, scope: !5179)
!5201 = !DILocation(line: 2271, column: 2, scope: !5179)
!5202 = distinct !DISubprogram(name: "vTaskSwitchContext", scope: !524, file: !524, line: 2845, type: !150, scopeLine: 2846, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5203)
!5203 = !{!5204, !5208}
!5204 = !DILocalVariable(name: "uxTopPriority", scope: !5205, file: !524, line: 2890, type: !82)
!5205 = distinct !DILexicalBlock(scope: !5206, file: !524, line: 2890, column: 3)
!5206 = distinct !DILexicalBlock(scope: !5207, file: !524, line: 2854, column: 2)
!5207 = distinct !DILexicalBlock(scope: !5202, file: !524, line: 2847, column: 6)
!5208 = !DILocalVariable(name: "pxConstList", scope: !5209, file: !524, line: 2890, type: !5210)
!5209 = distinct !DILexicalBlock(scope: !5205, file: !524, line: 2890, column: 3)
!5210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !613)
!5211 = !DILocation(line: 2847, column: 6, scope: !5207)
!5212 = !DILocation(line: 2847, column: 27, scope: !5207)
!5213 = !DILocation(line: 2847, column: 6, scope: !5202)
!5214 = !DILocation(line: 2851, column: 17, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5207, file: !524, line: 2848, column: 2)
!5216 = !DILocation(line: 2852, column: 2, scope: !5215)
!5217 = !DILocation(line: 2855, column: 17, scope: !5206)
!5218 = !DILocation(line: 2890, column: 3, scope: !5205)
!5219 = !DILocalVariable(name: "ulBitmap", arg: 1, scope: !5220, file: !83, line: 130, type: !32)
!5220 = distinct !DISubprogram(name: "ucPortCountLeadingZeros", scope: !83, file: !83, line: 130, type: !5221, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5223)
!5221 = !DISubroutineType(types: !5222)
!5222 = !{!87, !32}
!5223 = !{!5219, !5224}
!5224 = !DILocalVariable(name: "ucReturn", scope: !5220, file: !83, line: 132, type: !87)
!5225 = !DILocation(line: 0, scope: !5220, inlinedAt: !5226)
!5226 = distinct !DILocation(line: 2890, column: 3, scope: !5205)
!5227 = !DILocation(line: 134, column: 3, scope: !5220, inlinedAt: !5226)
!5228 = !{i64 469520}
!5229 = !DILocation(line: 0, scope: !5205)
!5230 = !DILocation(line: 2890, column: 3, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5205, file: !524, line: 2890, column: 3)
!5232 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !5233)
!5233 = distinct !DILocation(line: 2890, column: 3, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5231, file: !524, line: 2890, column: 3)
!5235 = !DILocation(line: 0, scope: !4630, inlinedAt: !5233)
!5236 = !DILocation(line: 2890, column: 3, scope: !5234)
!5237 = !DILocation(line: 2890, column: 3, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5239, file: !524, line: 2890, column: 3)
!5239 = distinct !DILexicalBlock(scope: !5234, file: !524, line: 2890, column: 3)
!5240 = distinct !{!5240, !5241, !5241, !2130}
!5241 = !DILocation(line: 2890, column: 3, scope: !5239)
!5242 = !DILocation(line: 0, scope: !5209)
!5243 = !DILocation(line: 2890, column: 3, scope: !5209)
!5244 = !{!4957, !2496, i64 4}
!5245 = !{!4679, !2496, i64 4}
!5246 = !DILocation(line: 2890, column: 3, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5209, file: !524, line: 2890, column: 3)
!5248 = !DILocation(line: 2890, column: 3, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5247, file: !524, line: 2890, column: 3)
!5250 = !DILocation(line: 2901, column: 1, scope: !5202)
!5251 = distinct !DISubprogram(name: "vTaskPlaceOnEventList", scope: !524, file: !524, line: 2904, type: !5252, scopeLine: 2905, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5254)
!5252 = !DISubroutineType(types: !5253)
!5253 = !{null, !5210, !4839}
!5254 = !{!5255, !5256}
!5255 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !5251, file: !524, line: 2904, type: !5210)
!5256 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !5251, file: !524, line: 2904, type: !4839)
!5257 = !DILocation(line: 0, scope: !5251)
!5258 = !DILocation(line: 2906, column: 2, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5251, file: !524, line: 2906, column: 2)
!5260 = !DILocation(line: 2906, column: 2, scope: !5251)
!5261 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !5262)
!5262 = distinct !DILocation(line: 2906, column: 2, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5259, file: !524, line: 2906, column: 2)
!5264 = !DILocation(line: 0, scope: !4630, inlinedAt: !5262)
!5265 = !DILocation(line: 2906, column: 2, scope: !5263)
!5266 = !DILocation(line: 2906, column: 2, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5268, file: !524, line: 2906, column: 2)
!5268 = distinct !DILexicalBlock(scope: !5263, file: !524, line: 2906, column: 2)
!5269 = distinct !{!5269, !5270, !5270, !2130}
!5270 = !DILocation(line: 2906, column: 2, scope: !5268)
!5271 = !DILocation(line: 2915, column: 31, scope: !5251)
!5272 = !DILocation(line: 2915, column: 45, scope: !5251)
!5273 = !DILocation(line: 2915, column: 2, scope: !5251)
!5274 = !DILocation(line: 2917, column: 2, scope: !5251)
!5275 = !DILocation(line: 2918, column: 1, scope: !5251)
!5276 = distinct !DISubprogram(name: "vTaskPlaceOnUnorderedEventList", scope: !524, file: !524, line: 2921, type: !5277, scopeLine: 2922, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5279)
!5277 = !DISubroutineType(types: !5278)
!5278 = !{null, !613, !4839, !4839}
!5279 = !{!5280, !5281, !5282}
!5280 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !5276, file: !524, line: 2921, type: !613)
!5281 = !DILocalVariable(name: "xItemValue", arg: 2, scope: !5276, file: !524, line: 2921, type: !4839)
!5282 = !DILocalVariable(name: "xTicksToWait", arg: 3, scope: !5276, file: !524, line: 2921, type: !4839)
!5283 = !DILocation(line: 0, scope: !5276)
!5284 = !DILocation(line: 2923, column: 2, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5276, file: !524, line: 2923, column: 2)
!5286 = !DILocation(line: 2923, column: 2, scope: !5276)
!5287 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !5288)
!5288 = distinct !DILocation(line: 2923, column: 2, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5285, file: !524, line: 2923, column: 2)
!5290 = !DILocation(line: 0, scope: !4630, inlinedAt: !5288)
!5291 = !DILocation(line: 2923, column: 2, scope: !5289)
!5292 = !DILocation(line: 2923, column: 2, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5294, file: !524, line: 2923, column: 2)
!5294 = distinct !DILexicalBlock(scope: !5289, file: !524, line: 2923, column: 2)
!5295 = distinct !{!5295, !5296, !5296, !2130}
!5296 = !DILocation(line: 2923, column: 2, scope: !5294)
!5297 = !DILocation(line: 2927, column: 2, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !5276, file: !524, line: 2927, column: 2)
!5299 = !DILocation(line: 2927, column: 2, scope: !5276)
!5300 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !5301)
!5301 = distinct !DILocation(line: 2927, column: 2, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5298, file: !524, line: 2927, column: 2)
!5303 = !DILocation(line: 0, scope: !4630, inlinedAt: !5301)
!5304 = !DILocation(line: 2927, column: 2, scope: !5302)
!5305 = !DILocation(line: 2927, column: 2, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5307, file: !524, line: 2927, column: 2)
!5307 = distinct !DILexicalBlock(scope: !5302, file: !524, line: 2927, column: 2)
!5308 = distinct !{!5308, !5309, !5309, !2130}
!5309 = !DILocation(line: 2927, column: 2, scope: !5307)
!5310 = !DILocation(line: 2932, column: 2, scope: !5276)
!5311 = !DILocation(line: 2939, column: 34, scope: !5276)
!5312 = !DILocation(line: 2939, column: 48, scope: !5276)
!5313 = !DILocation(line: 2939, column: 2, scope: !5276)
!5314 = !DILocation(line: 2941, column: 2, scope: !5276)
!5315 = !DILocation(line: 2942, column: 1, scope: !5276)
!5316 = distinct !DISubprogram(name: "xTaskRemoveFromEventList", scope: !524, file: !524, line: 2978, type: !5317, scopeLine: 2979, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5322)
!5317 = !DISubroutineType(types: !5318)
!5318 = !{!509, !5319}
!5319 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5320)
!5320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5321, size: 32)
!5321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !565)
!5322 = !{!5323, !5324, !5325}
!5323 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !5316, file: !524, line: 2978, type: !5319)
!5324 = !DILocalVariable(name: "pxUnblockedTCB", scope: !5316, file: !524, line: 2980, type: !535)
!5325 = !DILocalVariable(name: "xReturn", scope: !5316, file: !524, line: 2981, type: !509)
!5326 = !DILocation(line: 0, scope: !5316)
!5327 = !DILocation(line: 2996, column: 31, scope: !5316)
!5328 = !DILocation(line: 2997, column: 2, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5316, file: !524, line: 2997, column: 2)
!5330 = !DILocation(line: 2997, column: 2, scope: !5316)
!5331 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !5332)
!5332 = distinct !DILocation(line: 2997, column: 2, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5329, file: !524, line: 2997, column: 2)
!5334 = !DILocation(line: 0, scope: !4630, inlinedAt: !5332)
!5335 = !DILocation(line: 2997, column: 2, scope: !5333)
!5336 = !DILocation(line: 2997, column: 2, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5338, file: !524, line: 2997, column: 2)
!5338 = distinct !DILexicalBlock(scope: !5333, file: !524, line: 2997, column: 2)
!5339 = distinct !{!5339, !5340, !5340, !2130}
!5340 = !DILocation(line: 2997, column: 2, scope: !5338)
!5341 = !DILocation(line: 2998, column: 44, scope: !5316)
!5342 = !DILocation(line: 2998, column: 11, scope: !5316)
!5343 = !DILocation(line: 3000, column: 6, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5316, file: !524, line: 3000, column: 6)
!5345 = !DILocation(line: 3000, column: 27, scope: !5344)
!5346 = !DILocation(line: 3000, column: 6, scope: !5316)
!5347 = !DILocation(line: 3002, column: 45, scope: !5348)
!5348 = distinct !DILexicalBlock(scope: !5344, file: !524, line: 3001, column: 2)
!5349 = !DILocation(line: 3002, column: 12, scope: !5348)
!5350 = !DILocation(line: 3003, column: 3, scope: !5348)
!5351 = !DILocation(line: 3004, column: 2, scope: !5348)
!5352 = !DILocation(line: 3009, column: 3, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5344, file: !524, line: 3006, column: 2)
!5354 = !DILocation(line: 3012, column: 22, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5316, file: !524, line: 3012, column: 6)
!5356 = !DILocation(line: 3012, column: 35, scope: !5355)
!5357 = !DILocation(line: 3012, column: 49, scope: !5355)
!5358 = !DILocation(line: 3012, column: 33, scope: !5355)
!5359 = !DILocation(line: 3012, column: 6, scope: !5316)
!5360 = !DILocation(line: 3021, column: 17, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5355, file: !524, line: 3013, column: 2)
!5362 = !DILocation(line: 3022, column: 2, scope: !5361)
!5363 = !DILocation(line: 0, scope: !5355)
!5364 = !DILocation(line: 3042, column: 2, scope: !5316)
!5365 = distinct !DISubprogram(name: "vTaskRemoveFromUnorderedEventList", scope: !524, file: !524, line: 3046, type: !5366, scopeLine: 3047, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5368)
!5366 = !DISubroutineType(types: !5367)
!5367 = !{null, !571, !4839}
!5368 = !{!5369, !5370, !5371}
!5369 = !DILocalVariable(name: "pxEventListItem", arg: 1, scope: !5365, file: !524, line: 3046, type: !571)
!5370 = !DILocalVariable(name: "xItemValue", arg: 2, scope: !5365, file: !524, line: 3046, type: !4839)
!5371 = !DILocalVariable(name: "pxUnblockedTCB", scope: !5365, file: !524, line: 3048, type: !535)
!5372 = !DILocation(line: 0, scope: !5365)
!5373 = !DILocation(line: 3052, column: 2, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5365, file: !524, line: 3052, column: 2)
!5375 = !DILocation(line: 3052, column: 2, scope: !5365)
!5376 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !5377)
!5377 = distinct !DILocation(line: 3052, column: 2, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5374, file: !524, line: 3052, column: 2)
!5379 = !DILocation(line: 0, scope: !4630, inlinedAt: !5377)
!5380 = !DILocation(line: 3052, column: 2, scope: !5378)
!5381 = !DILocation(line: 3052, column: 2, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5383, file: !524, line: 3052, column: 2)
!5383 = distinct !DILexicalBlock(scope: !5378, file: !524, line: 3052, column: 2)
!5384 = distinct !{!5384, !5385, !5385, !2130}
!5385 = !DILocation(line: 3052, column: 2, scope: !5383)
!5386 = !DILocation(line: 3055, column: 2, scope: !5365)
!5387 = !{!4679, !3335, i64 0}
!5388 = !DILocation(line: 3059, column: 31, scope: !5365)
!5389 = !DILocation(line: 3060, column: 2, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5365, file: !524, line: 3060, column: 2)
!5391 = !DILocation(line: 3060, column: 2, scope: !5365)
!5392 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !5393)
!5393 = distinct !DILocation(line: 3060, column: 2, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5390, file: !524, line: 3060, column: 2)
!5395 = !DILocation(line: 0, scope: !4630, inlinedAt: !5393)
!5396 = !DILocation(line: 3060, column: 2, scope: !5394)
!5397 = !DILocation(line: 3060, column: 2, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5399, file: !524, line: 3060, column: 2)
!5399 = distinct !DILexicalBlock(scope: !5394, file: !524, line: 3060, column: 2)
!5400 = distinct !{!5400, !5401, !5401, !2130}
!5401 = !DILocation(line: 3060, column: 2, scope: !5399)
!5402 = !DILocation(line: 3061, column: 11, scope: !5365)
!5403 = !DILocation(line: 3066, column: 44, scope: !5365)
!5404 = !DILocation(line: 3066, column: 11, scope: !5365)
!5405 = !DILocation(line: 3067, column: 2, scope: !5365)
!5406 = !DILocation(line: 3069, column: 22, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5365, file: !524, line: 3069, column: 6)
!5408 = !DILocation(line: 3069, column: 35, scope: !5407)
!5409 = !DILocation(line: 3069, column: 49, scope: !5407)
!5410 = !DILocation(line: 3069, column: 33, scope: !5407)
!5411 = !DILocation(line: 3069, column: 6, scope: !5365)
!5412 = !DILocation(line: 3075, column: 17, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5407, file: !524, line: 3070, column: 2)
!5414 = !DILocation(line: 3076, column: 2, scope: !5413)
!5415 = !DILocation(line: 3077, column: 1, scope: !5365)
!5416 = distinct !DISubprogram(name: "vTaskSetTimeOutState", scope: !524, file: !524, line: 3080, type: !5417, scopeLine: 3081, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5426)
!5417 = !DISubroutineType(types: !5418)
!5418 = !{null, !5419}
!5419 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5420)
!5420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5421, size: 32)
!5421 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimeOut_t", file: !527, line: 97, baseType: !5422)
!5422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xTIME_OUT", file: !527, line: 93, size: 64, elements: !5423)
!5423 = !{!5424, !5425}
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "xOverflowCount", scope: !5422, file: !527, line: 95, baseType: !509, size: 32)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "xTimeOnEntering", scope: !5422, file: !527, line: 96, baseType: !111, size: 32, offset: 32)
!5426 = !{!5427}
!5427 = !DILocalVariable(name: "pxTimeOut", arg: 1, scope: !5416, file: !524, line: 3080, type: !5419)
!5428 = !DILocation(line: 0, scope: !5416)
!5429 = !DILocation(line: 3082, column: 2, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5416, file: !524, line: 3082, column: 2)
!5431 = !DILocation(line: 3082, column: 2, scope: !5416)
!5432 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !5433)
!5433 = distinct !DILocation(line: 3082, column: 2, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5430, file: !524, line: 3082, column: 2)
!5435 = !DILocation(line: 0, scope: !4630, inlinedAt: !5433)
!5436 = !DILocation(line: 3082, column: 2, scope: !5434)
!5437 = !DILocation(line: 3082, column: 2, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5439, file: !524, line: 3082, column: 2)
!5439 = distinct !DILexicalBlock(scope: !5434, file: !524, line: 3082, column: 2)
!5440 = distinct !{!5440, !5441, !5441, !2130}
!5441 = !DILocation(line: 3082, column: 2, scope: !5439)
!5442 = !DILocation(line: 3083, column: 2, scope: !5416)
!5443 = !DILocation(line: 3085, column: 31, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5416, file: !524, line: 3084, column: 2)
!5445 = !DILocation(line: 3085, column: 14, scope: !5444)
!5446 = !DILocation(line: 3085, column: 29, scope: !5444)
!5447 = !{!5448, !4367, i64 0}
!5448 = !{!"xTIME_OUT", !4367, i64 0, !3335, i64 4}
!5449 = !DILocation(line: 3086, column: 32, scope: !5444)
!5450 = !DILocation(line: 3086, column: 14, scope: !5444)
!5451 = !DILocation(line: 3086, column: 30, scope: !5444)
!5452 = !{!5448, !3335, i64 4}
!5453 = !DILocation(line: 3088, column: 2, scope: !5416)
!5454 = !DILocation(line: 3089, column: 1, scope: !5416)
!5455 = distinct !DISubprogram(name: "vTaskInternalSetTimeOutState", scope: !524, file: !524, line: 3092, type: !5417, scopeLine: 3093, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5456)
!5456 = !{!5457}
!5457 = !DILocalVariable(name: "pxTimeOut", arg: 1, scope: !5455, file: !524, line: 3092, type: !5419)
!5458 = !DILocation(line: 0, scope: !5455)
!5459 = !DILocation(line: 3095, column: 30, scope: !5455)
!5460 = !DILocation(line: 3095, column: 13, scope: !5455)
!5461 = !DILocation(line: 3095, column: 28, scope: !5455)
!5462 = !DILocation(line: 3096, column: 31, scope: !5455)
!5463 = !DILocation(line: 3096, column: 13, scope: !5455)
!5464 = !DILocation(line: 3096, column: 29, scope: !5455)
!5465 = !DILocation(line: 3097, column: 1, scope: !5455)
!5466 = distinct !DISubprogram(name: "xTaskCheckForTimeOut", scope: !524, file: !524, line: 3100, type: !5467, scopeLine: 3101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5471)
!5467 = !DISubroutineType(types: !5468)
!5468 = !{!509, !5419, !5469}
!5469 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5470)
!5470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 32)
!5471 = !{!5472, !5473, !5474, !5475, !5477}
!5472 = !DILocalVariable(name: "pxTimeOut", arg: 1, scope: !5466, file: !524, line: 3100, type: !5419)
!5473 = !DILocalVariable(name: "pxTicksToWait", arg: 2, scope: !5466, file: !524, line: 3100, type: !5469)
!5474 = !DILocalVariable(name: "xReturn", scope: !5466, file: !524, line: 3102, type: !509)
!5475 = !DILocalVariable(name: "xConstTickCount", scope: !5476, file: !524, line: 3110, type: !4839)
!5476 = distinct !DILexicalBlock(scope: !5466, file: !524, line: 3108, column: 2)
!5477 = !DILocalVariable(name: "xElapsedTime", scope: !5476, file: !524, line: 3111, type: !4839)
!5478 = !DILocation(line: 0, scope: !5466)
!5479 = !DILocation(line: 3104, column: 2, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5466, file: !524, line: 3104, column: 2)
!5481 = !DILocation(line: 3104, column: 2, scope: !5466)
!5482 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !5483)
!5483 = distinct !DILocation(line: 3104, column: 2, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5480, file: !524, line: 3104, column: 2)
!5485 = !DILocation(line: 0, scope: !4630, inlinedAt: !5483)
!5486 = !DILocation(line: 3104, column: 2, scope: !5484)
!5487 = !DILocation(line: 3104, column: 2, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5489, file: !524, line: 3104, column: 2)
!5489 = distinct !DILexicalBlock(scope: !5484, file: !524, line: 3104, column: 2)
!5490 = distinct !{!5490, !5491, !5491, !2130}
!5491 = !DILocation(line: 3104, column: 2, scope: !5489)
!5492 = !DILocation(line: 3105, column: 2, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5466, file: !524, line: 3105, column: 2)
!5494 = !DILocation(line: 3105, column: 2, scope: !5466)
!5495 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !5496)
!5496 = distinct !DILocation(line: 3105, column: 2, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5493, file: !524, line: 3105, column: 2)
!5498 = !DILocation(line: 0, scope: !4630, inlinedAt: !5496)
!5499 = !DILocation(line: 3105, column: 2, scope: !5497)
!5500 = !DILocation(line: 3105, column: 2, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5502, file: !524, line: 3105, column: 2)
!5502 = distinct !DILexicalBlock(scope: !5497, file: !524, line: 3105, column: 2)
!5503 = distinct !{!5503, !5504, !5504, !2130}
!5504 = !DILocation(line: 3105, column: 2, scope: !5502)
!5505 = !DILocation(line: 3107, column: 2, scope: !5466)
!5506 = !DILocation(line: 3110, column: 38, scope: !5476)
!5507 = !DILocation(line: 0, scope: !5476)
!5508 = !DILocation(line: 3111, column: 64, scope: !5476)
!5509 = !DILocation(line: 3111, column: 51, scope: !5476)
!5510 = !DILocation(line: 3135, column: 9, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5476, file: !524, line: 3135, column: 7)
!5512 = !DILocation(line: 3135, column: 39, scope: !5511)
!5513 = !DILocation(line: 3135, column: 25, scope: !5511)
!5514 = !DILocation(line: 3135, column: 56, scope: !5511)
!5515 = !DILocation(line: 3144, column: 27, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5511, file: !524, line: 3144, column: 12)
!5517 = !DILocation(line: 3144, column: 25, scope: !5516)
!5518 = !DILocation(line: 3144, column: 12, scope: !5511)
!5519 = !DILocation(line: 3147, column: 19, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5516, file: !524, line: 3145, column: 3)
!5521 = !DILocation(line: 3148, column: 4, scope: !5520)
!5522 = !DILocation(line: 3150, column: 3, scope: !5520)
!5523 = !DILocation(line: 3153, column: 19, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5516, file: !524, line: 3152, column: 3)
!5525 = !DILocation(line: 0, scope: !5511)
!5526 = !DILocation(line: 3157, column: 2, scope: !5466)
!5527 = !DILocation(line: 3159, column: 2, scope: !5466)
!5528 = distinct !DISubprogram(name: "vTaskMissedYield", scope: !524, file: !524, line: 3163, type: !150, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !152)
!5529 = !DILocation(line: 3165, column: 16, scope: !5528)
!5530 = !DILocation(line: 3166, column: 1, scope: !5528)
!5531 = distinct !DISubprogram(name: "uxTaskResetEventItemValue", scope: !524, file: !524, line: 4376, type: !5157, scopeLine: 4377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5532)
!5532 = !{!5533}
!5533 = !DILocalVariable(name: "uxReturn", scope: !5531, file: !524, line: 4378, type: !111)
!5534 = !DILocation(line: 4380, column: 13, scope: !5531)
!5535 = !DILocation(line: 0, scope: !5531)
!5536 = !DILocation(line: 4384, column: 2, scope: !5531)
!5537 = !DILocation(line: 4386, column: 2, scope: !5531)
!5538 = distinct !DISubprogram(name: "ulTaskNotifyTake", scope: !524, file: !524, line: 4409, type: !5539, scopeLine: 4410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5541)
!5539 = !DISubroutineType(types: !5540)
!5540 = !{!32, !509, !111}
!5541 = !{!5542, !5543, !5544}
!5542 = !DILocalVariable(name: "xClearCountOnExit", arg: 1, scope: !5538, file: !524, line: 4409, type: !509)
!5543 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !5538, file: !524, line: 4409, type: !111)
!5544 = !DILocalVariable(name: "ulReturn", scope: !5538, file: !524, line: 4411, type: !32)
!5545 = !DILocation(line: 0, scope: !5538)
!5546 = !DILocation(line: 4413, column: 3, scope: !5538)
!5547 = !DILocation(line: 4416, column: 8, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5549, file: !524, line: 4416, column: 8)
!5549 = distinct !DILexicalBlock(scope: !5538, file: !524, line: 4414, column: 3)
!5550 = !DILocation(line: 4416, column: 22, scope: !5548)
!5551 = !DILocation(line: 4416, column: 38, scope: !5548)
!5552 = !DILocation(line: 4416, column: 8, scope: !5549)
!5553 = !DILocation(line: 4419, column: 5, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5548, file: !524, line: 4417, column: 4)
!5555 = !DILocation(line: 4419, column: 19, scope: !5554)
!5556 = !DILocation(line: 4419, column: 33, scope: !5554)
!5557 = !DILocation(line: 4421, column: 22, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5554, file: !524, line: 4421, column: 9)
!5559 = !DILocation(line: 4421, column: 9, scope: !5554)
!5560 = !DILocation(line: 4423, column: 6, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5558, file: !524, line: 4422, column: 5)
!5562 = !DILocation(line: 4430, column: 6, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5561, file: !524, line: 4430, column: 6)
!5564 = !{i64 2148160556}
!5565 = !{i64 2148160607}
!5566 = !DILocation(line: 4431, column: 5, scope: !5561)
!5567 = !DILocation(line: 4442, column: 3, scope: !5538)
!5568 = !DILocation(line: 4444, column: 3, scope: !5538)
!5569 = !DILocation(line: 4447, column: 15, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5538, file: !524, line: 4445, column: 3)
!5571 = !DILocation(line: 4447, column: 29, scope: !5570)
!5572 = !DILocation(line: 4449, column: 17, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5570, file: !524, line: 4449, column: 8)
!5574 = !DILocation(line: 4449, column: 8, scope: !5570)
!5575 = !DILocation(line: 4451, column: 27, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5577, file: !524, line: 4451, column: 9)
!5577 = distinct !DILexicalBlock(scope: !5573, file: !524, line: 4450, column: 4)
!5578 = !DILocation(line: 4451, column: 9, scope: !5577)
!5579 = !DILocation(line: 0, scope: !5576)
!5580 = !DILocation(line: 4465, column: 4, scope: !5570)
!5581 = !DILocation(line: 4465, column: 18, scope: !5570)
!5582 = !DILocation(line: 4465, column: 32, scope: !5570)
!5583 = !DILocation(line: 4467, column: 3, scope: !5538)
!5584 = !DILocation(line: 4469, column: 3, scope: !5538)
!5585 = distinct !DISubprogram(name: "xTaskNotifyWait", scope: !524, file: !524, line: 4477, type: !5586, scopeLine: 4478, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5588)
!5586 = !DISubroutineType(types: !5587)
!5587 = !{!509, !32, !32, !137, !111}
!5588 = !{!5589, !5590, !5591, !5592, !5593}
!5589 = !DILocalVariable(name: "ulBitsToClearOnEntry", arg: 1, scope: !5585, file: !524, line: 4477, type: !32)
!5590 = !DILocalVariable(name: "ulBitsToClearOnExit", arg: 2, scope: !5585, file: !524, line: 4477, type: !32)
!5591 = !DILocalVariable(name: "pulNotificationValue", arg: 3, scope: !5585, file: !524, line: 4477, type: !137)
!5592 = !DILocalVariable(name: "xTicksToWait", arg: 4, scope: !5585, file: !524, line: 4477, type: !111)
!5593 = !DILocalVariable(name: "xReturn", scope: !5585, file: !524, line: 4479, type: !509)
!5594 = !DILocation(line: 0, scope: !5585)
!5595 = !DILocation(line: 4481, column: 3, scope: !5585)
!5596 = !DILocation(line: 4484, column: 8, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5598, file: !524, line: 4484, column: 8)
!5598 = distinct !DILexicalBlock(scope: !5585, file: !524, line: 4482, column: 3)
!5599 = !DILocation(line: 4484, column: 22, scope: !5597)
!5600 = !DILocation(line: 4484, column: 36, scope: !5597)
!5601 = !DILocation(line: 4484, column: 8, scope: !5598)
!5602 = !DILocation(line: 4489, column: 38, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5597, file: !524, line: 4485, column: 4)
!5604 = !DILocation(line: 4489, column: 5, scope: !5603)
!5605 = !DILocation(line: 4489, column: 19, scope: !5603)
!5606 = !DILocation(line: 4489, column: 35, scope: !5603)
!5607 = !DILocation(line: 4492, column: 5, scope: !5603)
!5608 = !DILocation(line: 4492, column: 19, scope: !5603)
!5609 = !DILocation(line: 4492, column: 33, scope: !5603)
!5610 = !DILocation(line: 4494, column: 22, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5603, file: !524, line: 4494, column: 9)
!5612 = !DILocation(line: 4494, column: 9, scope: !5603)
!5613 = !DILocation(line: 4496, column: 6, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5611, file: !524, line: 4495, column: 5)
!5615 = !DILocation(line: 4503, column: 6, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !5614, file: !524, line: 4503, column: 6)
!5617 = !{i64 2148161295}
!5618 = !{i64 2148161346}
!5619 = !DILocation(line: 4504, column: 5, scope: !5614)
!5620 = !DILocation(line: 4515, column: 3, scope: !5585)
!5621 = !DILocation(line: 4517, column: 3, scope: !5585)
!5622 = !DILocation(line: 4521, column: 29, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5624, file: !524, line: 4521, column: 8)
!5624 = distinct !DILexicalBlock(scope: !5585, file: !524, line: 4518, column: 3)
!5625 = !DILocation(line: 4521, column: 8, scope: !5624)
!5626 = !DILocation(line: 4525, column: 29, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5623, file: !524, line: 4522, column: 4)
!5628 = !DILocation(line: 4525, column: 43, scope: !5627)
!5629 = !DILocation(line: 4525, column: 27, scope: !5627)
!5630 = !DILocation(line: 4526, column: 4, scope: !5627)
!5631 = !DILocation(line: 4532, column: 8, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5624, file: !524, line: 4532, column: 8)
!5633 = !DILocation(line: 4532, column: 22, scope: !5632)
!5634 = !DILocation(line: 4532, column: 36, scope: !5632)
!5635 = !DILocation(line: 4532, column: 8, scope: !5624)
!5636 = !DILocation(line: 4541, column: 38, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5632, file: !524, line: 4538, column: 4)
!5638 = !DILocation(line: 4541, column: 5, scope: !5637)
!5639 = !DILocation(line: 4541, column: 19, scope: !5637)
!5640 = !DILocation(line: 4541, column: 35, scope: !5637)
!5641 = !DILocation(line: 0, scope: !5632)
!5642 = !DILocation(line: 4545, column: 4, scope: !5624)
!5643 = !DILocation(line: 4545, column: 18, scope: !5624)
!5644 = !DILocation(line: 4545, column: 32, scope: !5624)
!5645 = !DILocation(line: 4547, column: 3, scope: !5585)
!5646 = !DILocation(line: 4549, column: 3, scope: !5585)
!5647 = distinct !DISubprogram(name: "xTaskGenericNotify", scope: !524, file: !524, line: 4557, type: !5648, scopeLine: 4558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5651)
!5648 = !DISubroutineType(types: !5649)
!5649 = !{!509, !561, !32, !5650, !137}
!5650 = !DIDerivedType(tag: DW_TAG_typedef, name: "eNotifyAction", file: !527, line: 88, baseType: !526)
!5651 = !{!5652, !5653, !5654, !5655, !5656, !5657, !5658}
!5652 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !5647, file: !524, line: 4557, type: !561)
!5653 = !DILocalVariable(name: "ulValue", arg: 2, scope: !5647, file: !524, line: 4557, type: !32)
!5654 = !DILocalVariable(name: "eAction", arg: 3, scope: !5647, file: !524, line: 4557, type: !5650)
!5655 = !DILocalVariable(name: "pulPreviousNotificationValue", arg: 4, scope: !5647, file: !524, line: 4557, type: !137)
!5656 = !DILocalVariable(name: "pxTCB", scope: !5647, file: !524, line: 4559, type: !535)
!5657 = !DILocalVariable(name: "xReturn", scope: !5647, file: !524, line: 4560, type: !509)
!5658 = !DILocalVariable(name: "ucOriginalNotifyState", scope: !5647, file: !524, line: 4561, type: !87)
!5659 = !DILocation(line: 0, scope: !5647)
!5660 = !DILocation(line: 4563, column: 3, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5647, file: !524, line: 4563, column: 3)
!5662 = !DILocation(line: 4563, column: 3, scope: !5647)
!5663 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !5664)
!5664 = distinct !DILocation(line: 4563, column: 3, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5661, file: !524, line: 4563, column: 3)
!5666 = !DILocation(line: 0, scope: !4630, inlinedAt: !5664)
!5667 = !DILocation(line: 4563, column: 3, scope: !5665)
!5668 = !DILocation(line: 4563, column: 3, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5670, file: !524, line: 4563, column: 3)
!5670 = distinct !DILexicalBlock(scope: !5665, file: !524, line: 4563, column: 3)
!5671 = distinct !{!5671, !5672, !5672, !2130}
!5672 = !DILocation(line: 4563, column: 3, scope: !5670)
!5673 = !DILocation(line: 4566, column: 3, scope: !5647)
!5674 = !DILocation(line: 4568, column: 37, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5676, file: !524, line: 4568, column: 8)
!5676 = distinct !DILexicalBlock(scope: !5647, file: !524, line: 4567, column: 3)
!5677 = !DILocation(line: 4568, column: 8, scope: !5676)
!5678 = !DILocation(line: 4570, column: 44, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5675, file: !524, line: 4569, column: 4)
!5680 = !DILocation(line: 4570, column: 35, scope: !5679)
!5681 = !DILocation(line: 4571, column: 4, scope: !5679)
!5682 = !DILocation(line: 4573, column: 35, scope: !5676)
!5683 = !DILocation(line: 4575, column: 25, scope: !5676)
!5684 = !DILocation(line: 4577, column: 4, scope: !5676)
!5685 = !DILocation(line: 4580, column: 13, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5676, file: !524, line: 4578, column: 4)
!5687 = !DILocation(line: 4580, column: 29, scope: !5686)
!5688 = !DILocation(line: 4581, column: 6, scope: !5686)
!5689 = !DILocation(line: 4584, column: 15, scope: !5686)
!5690 = !DILocation(line: 4584, column: 32, scope: !5686)
!5691 = !DILocation(line: 4585, column: 6, scope: !5686)
!5692 = !DILocation(line: 4588, column: 13, scope: !5686)
!5693 = !DILocation(line: 4588, column: 29, scope: !5686)
!5694 = !DILocation(line: 4589, column: 6, scope: !5686)
!5695 = !DILocation(line: 4592, column: 32, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5686, file: !524, line: 4592, column: 10)
!5697 = !DILocation(line: 4592, column: 10, scope: !5686)
!5698 = !DILocation(line: 4594, column: 14, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5696, file: !524, line: 4593, column: 6)
!5700 = !DILocation(line: 4594, column: 30, scope: !5699)
!5701 = !DILocation(line: 4595, column: 6, scope: !5699)
!5702 = !DILocation(line: 4613, column: 30, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5676, file: !524, line: 4613, column: 8)
!5704 = !DILocation(line: 4613, column: 8, scope: !5676)
!5705 = !DILocation(line: 4615, column: 38, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5703, file: !524, line: 4614, column: 4)
!5707 = !DILocation(line: 4615, column: 14, scope: !5706)
!5708 = !DILocation(line: 4616, column: 5, scope: !5706)
!5709 = !DILocation(line: 4619, column: 5, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5706, file: !524, line: 4619, column: 5)
!5711 = !DILocation(line: 4619, column: 5, scope: !5706)
!5712 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !5713)
!5713 = distinct !DILocation(line: 4619, column: 5, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5710, file: !524, line: 4619, column: 5)
!5715 = !DILocation(line: 0, scope: !4630, inlinedAt: !5713)
!5716 = !DILocation(line: 4619, column: 5, scope: !5714)
!5717 = !DILocation(line: 4619, column: 5, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5719, file: !524, line: 4619, column: 5)
!5719 = distinct !DILexicalBlock(scope: !5714, file: !524, line: 4619, column: 5)
!5720 = distinct !{!5720, !5721, !5721, !2130}
!5721 = !DILocation(line: 4619, column: 5, scope: !5719)
!5722 = !DILocation(line: 4637, column: 29, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5706, file: !524, line: 4637, column: 9)
!5724 = !DILocation(line: 4647, column: 4, scope: !5706)
!5725 = !DILocation(line: 4653, column: 3, scope: !5647)
!5726 = !DILocation(line: 4655, column: 3, scope: !5647)
!5727 = distinct !DISubprogram(name: "xTaskGenericNotifyFromISR", scope: !524, file: !524, line: 4663, type: !5728, scopeLine: 4664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5731)
!5728 = !DISubroutineType(types: !5729)
!5729 = !{!509, !561, !32, !5650, !137, !5730}
!5730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 32)
!5731 = !{!5732, !5733, !5734, !5735, !5736, !5737, !5738, !5739, !5740}
!5732 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !5727, file: !524, line: 4663, type: !561)
!5733 = !DILocalVariable(name: "ulValue", arg: 2, scope: !5727, file: !524, line: 4663, type: !32)
!5734 = !DILocalVariable(name: "eAction", arg: 3, scope: !5727, file: !524, line: 4663, type: !5650)
!5735 = !DILocalVariable(name: "pulPreviousNotificationValue", arg: 4, scope: !5727, file: !524, line: 4663, type: !137)
!5736 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 5, scope: !5727, file: !524, line: 4663, type: !5730)
!5737 = !DILocalVariable(name: "pxTCB", scope: !5727, file: !524, line: 4665, type: !535)
!5738 = !DILocalVariable(name: "ucOriginalNotifyState", scope: !5727, file: !524, line: 4666, type: !87)
!5739 = !DILocalVariable(name: "xReturn", scope: !5727, file: !524, line: 4667, type: !509)
!5740 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !5727, file: !524, line: 4668, type: !82)
!5741 = !DILocation(line: 0, scope: !5727)
!5742 = !DILocation(line: 4670, column: 3, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5727, file: !524, line: 4670, column: 3)
!5744 = !DILocation(line: 4670, column: 3, scope: !5727)
!5745 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !5746)
!5746 = distinct !DILocation(line: 4670, column: 3, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5743, file: !524, line: 4670, column: 3)
!5748 = !DILocation(line: 0, scope: !4630, inlinedAt: !5746)
!5749 = !DILocation(line: 4670, column: 3, scope: !5747)
!5750 = !DILocation(line: 4670, column: 3, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5752, file: !524, line: 4670, column: 3)
!5752 = distinct !DILexicalBlock(scope: !5747, file: !524, line: 4670, column: 3)
!5753 = distinct !{!5753, !5754, !5754, !2130}
!5754 = !DILocation(line: 4670, column: 3, scope: !5752)
!5755 = !DILocation(line: 4688, column: 3, scope: !5727)
!5756 = !DILocation(line: 211, column: 2, scope: !5757, inlinedAt: !5761)
!5757 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !83, file: !83, line: 207, type: !3983, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5758)
!5758 = !{!5759, !5760}
!5759 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !5757, file: !83, line: 209, type: !32)
!5760 = !DILocalVariable(name: "ulNewBASEPRI", scope: !5757, file: !83, line: 209, type: !32)
!5761 = distinct !DILocation(line: 4692, column: 28, scope: !5727)
!5762 = !{i64 471942, i64 471980, i64 472013, i64 472050, i64 472078}
!5763 = !DILocation(line: 0, scope: !5757, inlinedAt: !5761)
!5764 = !DILocation(line: 4694, column: 37, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5766, file: !524, line: 4694, column: 8)
!5766 = distinct !DILexicalBlock(scope: !5727, file: !524, line: 4693, column: 3)
!5767 = !DILocation(line: 4694, column: 8, scope: !5766)
!5768 = !DILocation(line: 4696, column: 44, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5765, file: !524, line: 4695, column: 4)
!5770 = !DILocation(line: 4696, column: 35, scope: !5769)
!5771 = !DILocation(line: 4697, column: 4, scope: !5769)
!5772 = !DILocation(line: 4699, column: 35, scope: !5766)
!5773 = !DILocation(line: 4700, column: 25, scope: !5766)
!5774 = !DILocation(line: 4702, column: 4, scope: !5766)
!5775 = !DILocation(line: 4705, column: 13, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5766, file: !524, line: 4703, column: 4)
!5777 = !DILocation(line: 4705, column: 29, scope: !5776)
!5778 = !DILocation(line: 4706, column: 6, scope: !5776)
!5779 = !DILocation(line: 4709, column: 15, scope: !5776)
!5780 = !DILocation(line: 4709, column: 32, scope: !5776)
!5781 = !DILocation(line: 4710, column: 6, scope: !5776)
!5782 = !DILocation(line: 4713, column: 13, scope: !5776)
!5783 = !DILocation(line: 4713, column: 29, scope: !5776)
!5784 = !DILocation(line: 4714, column: 6, scope: !5776)
!5785 = !DILocation(line: 4717, column: 32, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5776, file: !524, line: 4717, column: 10)
!5787 = !DILocation(line: 4717, column: 10, scope: !5776)
!5788 = !DILocation(line: 4719, column: 14, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5786, file: !524, line: 4718, column: 6)
!5790 = !DILocation(line: 4719, column: 30, scope: !5789)
!5791 = !DILocation(line: 4720, column: 6, scope: !5789)
!5792 = !DILocation(line: 4738, column: 30, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5766, file: !524, line: 4738, column: 8)
!5794 = !DILocation(line: 4738, column: 8, scope: !5766)
!5795 = !DILocation(line: 4741, column: 5, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5797, file: !524, line: 4741, column: 5)
!5797 = distinct !DILexicalBlock(scope: !5793, file: !524, line: 4739, column: 4)
!5798 = !DILocation(line: 4741, column: 5, scope: !5797)
!5799 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !5800)
!5800 = distinct !DILocation(line: 4741, column: 5, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5796, file: !524, line: 4741, column: 5)
!5802 = !DILocation(line: 0, scope: !4630, inlinedAt: !5800)
!5803 = !DILocation(line: 4741, column: 5, scope: !5801)
!5804 = !DILocation(line: 4741, column: 5, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5806, file: !524, line: 4741, column: 5)
!5806 = distinct !DILexicalBlock(scope: !5801, file: !524, line: 4741, column: 5)
!5807 = distinct !{!5807, !5808, !5808, !2130}
!5808 = !DILocation(line: 4741, column: 5, scope: !5806)
!5809 = !DILocation(line: 4743, column: 9, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5797, file: !524, line: 4743, column: 9)
!5811 = !DILocation(line: 4743, column: 30, scope: !5810)
!5812 = !DILocation(line: 4743, column: 9, scope: !5797)
!5813 = !DILocation(line: 4745, column: 39, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5810, file: !524, line: 4744, column: 5)
!5815 = !DILocation(line: 4745, column: 15, scope: !5814)
!5816 = !DILocation(line: 4746, column: 6, scope: !5814)
!5817 = !DILocation(line: 4747, column: 5, scope: !5814)
!5818 = !DILocation(line: 4752, column: 6, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5810, file: !524, line: 4749, column: 5)
!5820 = !DILocation(line: 4755, column: 16, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5797, file: !524, line: 4755, column: 9)
!5822 = !DILocation(line: 4755, column: 29, scope: !5821)
!5823 = !DILocation(line: 4755, column: 43, scope: !5821)
!5824 = !DILocation(line: 4755, column: 27, scope: !5821)
!5825 = !DILocation(line: 4755, column: 9, scope: !5797)
!5826 = !DILocation(line: 4759, column: 36, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5828, file: !524, line: 4759, column: 10)
!5828 = distinct !DILexicalBlock(scope: !5821, file: !524, line: 4756, column: 5)
!5829 = !DILocation(line: 4759, column: 10, scope: !5828)
!5830 = !DILocation(line: 4761, column: 34, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5827, file: !524, line: 4760, column: 6)
!5832 = !DILocation(line: 4762, column: 6, scope: !5831)
!5833 = !DILocation(line: 4768, column: 21, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5827, file: !524, line: 4764, column: 6)
!5835 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !5836, file: !83, line: 227, type: !32)
!5836 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !83, file: !83, line: 227, type: !3829, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5837)
!5837 = !{!5835}
!5838 = !DILocation(line: 0, scope: !5836, inlinedAt: !5839)
!5839 = distinct !DILocation(line: 4777, column: 3, scope: !5727)
!5840 = !DILocation(line: 229, column: 2, scope: !5836, inlinedAt: !5839)
!5841 = !{i64 472504}
!5842 = !DILocation(line: 4779, column: 3, scope: !5727)
!5843 = distinct !DISubprogram(name: "vTaskNotifyGiveFromISR", scope: !524, file: !524, line: 4787, type: !5844, scopeLine: 4788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5846)
!5844 = !DISubroutineType(types: !5845)
!5845 = !{null, !561, !5730}
!5846 = !{!5847, !5848, !5849, !5850, !5851}
!5847 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !5843, file: !524, line: 4787, type: !561)
!5848 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 2, scope: !5843, file: !524, line: 4787, type: !5730)
!5849 = !DILocalVariable(name: "pxTCB", scope: !5843, file: !524, line: 4789, type: !535)
!5850 = !DILocalVariable(name: "ucOriginalNotifyState", scope: !5843, file: !524, line: 4790, type: !87)
!5851 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !5843, file: !524, line: 4791, type: !82)
!5852 = !DILocation(line: 0, scope: !5843)
!5853 = !DILocation(line: 4793, column: 3, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5843, file: !524, line: 4793, column: 3)
!5855 = !DILocation(line: 4793, column: 3, scope: !5843)
!5856 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !5857)
!5857 = distinct !DILocation(line: 4793, column: 3, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5854, file: !524, line: 4793, column: 3)
!5859 = !DILocation(line: 0, scope: !4630, inlinedAt: !5857)
!5860 = !DILocation(line: 4793, column: 3, scope: !5858)
!5861 = !DILocation(line: 4793, column: 3, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5863, file: !524, line: 4793, column: 3)
!5863 = distinct !DILexicalBlock(scope: !5858, file: !524, line: 4793, column: 3)
!5864 = distinct !{!5864, !5865, !5865, !2130}
!5865 = !DILocation(line: 4793, column: 3, scope: !5863)
!5866 = !DILocation(line: 4811, column: 3, scope: !5843)
!5867 = !DILocation(line: 211, column: 2, scope: !5757, inlinedAt: !5868)
!5868 = distinct !DILocation(line: 4815, column: 28, scope: !5843)
!5869 = !DILocation(line: 0, scope: !5757, inlinedAt: !5868)
!5870 = !DILocation(line: 4817, column: 35, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5843, file: !524, line: 4816, column: 3)
!5872 = !DILocation(line: 4818, column: 25, scope: !5871)
!5873 = !DILocation(line: 4822, column: 13, scope: !5871)
!5874 = !DILocation(line: 4822, column: 30, scope: !5871)
!5875 = !DILocation(line: 4828, column: 30, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5871, file: !524, line: 4828, column: 8)
!5877 = !DILocation(line: 4828, column: 8, scope: !5871)
!5878 = !DILocation(line: 4831, column: 5, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5880, file: !524, line: 4831, column: 5)
!5880 = distinct !DILexicalBlock(scope: !5876, file: !524, line: 4829, column: 4)
!5881 = !DILocation(line: 4831, column: 5, scope: !5880)
!5882 = !DILocation(line: 195, column: 2, scope: !4630, inlinedAt: !5883)
!5883 = distinct !DILocation(line: 4831, column: 5, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5879, file: !524, line: 4831, column: 5)
!5885 = !DILocation(line: 0, scope: !4630, inlinedAt: !5883)
!5886 = !DILocation(line: 4831, column: 5, scope: !5884)
!5887 = !DILocation(line: 4831, column: 5, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5889, file: !524, line: 4831, column: 5)
!5889 = distinct !DILexicalBlock(scope: !5884, file: !524, line: 4831, column: 5)
!5890 = distinct !{!5890, !5891, !5891, !2130}
!5891 = !DILocation(line: 4831, column: 5, scope: !5889)
!5892 = !DILocation(line: 4833, column: 9, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5880, file: !524, line: 4833, column: 9)
!5894 = !DILocation(line: 4833, column: 30, scope: !5893)
!5895 = !DILocation(line: 4833, column: 9, scope: !5880)
!5896 = !DILocation(line: 4835, column: 39, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5893, file: !524, line: 4834, column: 5)
!5898 = !DILocation(line: 4835, column: 15, scope: !5897)
!5899 = !DILocation(line: 4836, column: 6, scope: !5897)
!5900 = !DILocation(line: 4837, column: 5, scope: !5897)
!5901 = !DILocation(line: 4842, column: 6, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5893, file: !524, line: 4839, column: 5)
!5903 = !DILocation(line: 4845, column: 16, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5880, file: !524, line: 4845, column: 9)
!5905 = !DILocation(line: 4845, column: 29, scope: !5904)
!5906 = !DILocation(line: 4845, column: 43, scope: !5904)
!5907 = !DILocation(line: 4845, column: 27, scope: !5904)
!5908 = !DILocation(line: 4845, column: 9, scope: !5880)
!5909 = !DILocation(line: 4849, column: 36, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5911, file: !524, line: 4849, column: 10)
!5911 = distinct !DILexicalBlock(scope: !5904, file: !524, line: 4846, column: 5)
!5912 = !DILocation(line: 4849, column: 10, scope: !5911)
!5913 = !DILocation(line: 4851, column: 34, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5910, file: !524, line: 4850, column: 6)
!5915 = !DILocation(line: 4852, column: 6, scope: !5914)
!5916 = !DILocation(line: 4858, column: 21, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5910, file: !524, line: 4854, column: 6)
!5918 = !DILocation(line: 0, scope: !5836, inlinedAt: !5919)
!5919 = distinct !DILocation(line: 4867, column: 3, scope: !5843)
!5920 = !DILocation(line: 229, column: 2, scope: !5836, inlinedAt: !5919)
!5921 = !DILocation(line: 4868, column: 2, scope: !5843)
!5922 = distinct !DISubprogram(name: "xTaskNotifyStateClear", scope: !524, file: !524, line: 4876, type: !5923, scopeLine: 4877, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !5925)
!5923 = !DISubroutineType(types: !5924)
!5924 = !{!509, !561}
!5925 = !{!5926, !5927, !5928}
!5926 = !DILocalVariable(name: "xTask", arg: 1, scope: !5922, file: !524, line: 4876, type: !561)
!5927 = !DILocalVariable(name: "pxTCB", scope: !5922, file: !524, line: 4878, type: !535)
!5928 = !DILocalVariable(name: "xReturn", scope: !5922, file: !524, line: 4879, type: !509)
!5929 = !DILocation(line: 0, scope: !5922)
!5930 = !DILocation(line: 4883, column: 11, scope: !5922)
!5931 = !DILocation(line: 4885, column: 3, scope: !5922)
!5932 = !DILocation(line: 4887, column: 15, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5934, file: !524, line: 4887, column: 8)
!5934 = distinct !DILexicalBlock(scope: !5922, file: !524, line: 4886, column: 3)
!5935 = !DILocation(line: 4887, column: 29, scope: !5933)
!5936 = !DILocation(line: 4887, column: 8, scope: !5934)
!5937 = !DILocation(line: 4889, column: 26, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5933, file: !524, line: 4888, column: 4)
!5939 = !DILocation(line: 4891, column: 4, scope: !5938)
!5940 = !DILocation(line: 0, scope: !5933)
!5941 = !DILocation(line: 4897, column: 3, scope: !5922)
!5942 = !DILocation(line: 4899, column: 3, scope: !5922)
!5943 = distinct !DISubprogram(name: "HAL_NVIC_SetPriorityGrouping", scope: !1401, file: !1401, line: 143, type: !3829, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !5944)
!5944 = !{!5945}
!5945 = !DILocalVariable(name: "PriorityGroup", arg: 1, scope: !5943, file: !1401, line: 143, type: !32)
!5946 = !DILocation(line: 0, scope: !5943)
!5947 = !DILocation(line: 149, column: 3, scope: !5943)
!5948 = !DILocation(line: 150, column: 1, scope: !5943)
!5949 = distinct !DISubprogram(name: "__NVIC_SetPriorityGrouping", scope: !338, file: !338, line: 1480, type: !3829, scopeLine: 1481, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !5950)
!5950 = !{!5951, !5952, !5953}
!5951 = !DILocalVariable(name: "PriorityGroup", arg: 1, scope: !5949, file: !338, line: 1480, type: !32)
!5952 = !DILocalVariable(name: "reg_value", scope: !5949, file: !338, line: 1482, type: !32)
!5953 = !DILocalVariable(name: "PriorityGroupTmp", scope: !5949, file: !338, line: 1483, type: !32)
!5954 = !DILocation(line: 0, scope: !5949)
!5955 = !DILocation(line: 1485, column: 22, scope: !5949)
!5956 = !{!3345, !3335, i64 12}
!5957 = !DILocation(line: 1486, column: 13, scope: !5949)
!5958 = !DILocation(line: 1489, column: 35, scope: !5949)
!5959 = !DILocation(line: 1488, column: 62, scope: !5949)
!5960 = !DILocation(line: 1490, column: 14, scope: !5949)
!5961 = !DILocation(line: 1491, column: 1, scope: !5949)
!5962 = distinct !DISubprogram(name: "HAL_NVIC_SetPriority", scope: !1401, file: !1401, line: 165, type: !5963, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !5966)
!5963 = !DISubroutineType(types: !5964)
!5964 = !{null, !5965, !32, !32}
!5965 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !68, line: 126, baseType: !401)
!5966 = !{!5967, !5968, !5969, !5970}
!5967 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5962, file: !1401, line: 165, type: !5965)
!5968 = !DILocalVariable(name: "PreemptPriority", arg: 2, scope: !5962, file: !1401, line: 165, type: !32)
!5969 = !DILocalVariable(name: "SubPriority", arg: 3, scope: !5962, file: !1401, line: 165, type: !32)
!5970 = !DILocalVariable(name: "prioritygroup", scope: !5962, file: !1401, line: 167, type: !32)
!5971 = !DILocation(line: 0, scope: !5962)
!5972 = !DILocation(line: 173, column: 19, scope: !5962)
!5973 = !{i32 0, i32 8}
!5974 = !DILocation(line: 175, column: 26, scope: !5962)
!5975 = !DILocation(line: 175, column: 3, scope: !5962)
!5976 = !DILocation(line: 176, column: 1, scope: !5962)
!5977 = distinct !DISubprogram(name: "__NVIC_GetPriorityGrouping", scope: !338, file: !338, line: 1499, type: !3983, scopeLine: 1500, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !152)
!5978 = !DILocation(line: 1501, column: 28, scope: !5977)
!5979 = !DILocation(line: 1501, column: 60, scope: !5977)
!5980 = !DILocation(line: 1501, column: 3, scope: !5977)
!5981 = distinct !DISubprogram(name: "NVIC_EncodePriority", scope: !338, file: !338, line: 1686, type: !5982, scopeLine: 1687, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !5984)
!5982 = !DISubroutineType(types: !5983)
!5983 = !{!32, !32, !32, !32}
!5984 = !{!5985, !5986, !5987, !5988, !5989, !5990}
!5985 = !DILocalVariable(name: "PriorityGroup", arg: 1, scope: !5981, file: !338, line: 1686, type: !32)
!5986 = !DILocalVariable(name: "PreemptPriority", arg: 2, scope: !5981, file: !338, line: 1686, type: !32)
!5987 = !DILocalVariable(name: "SubPriority", arg: 3, scope: !5981, file: !338, line: 1686, type: !32)
!5988 = !DILocalVariable(name: "PriorityGroupTmp", scope: !5981, file: !338, line: 1688, type: !32)
!5989 = !DILocalVariable(name: "PreemptPriorityBits", scope: !5981, file: !338, line: 1689, type: !32)
!5990 = !DILocalVariable(name: "SubPriorityBits", scope: !5981, file: !338, line: 1690, type: !32)
!5991 = !DILocation(line: 0, scope: !5981)
!5992 = !DILocation(line: 1688, column: 46, scope: !5981)
!5993 = !DILocation(line: 1692, column: 31, scope: !5981)
!5994 = !DILocation(line: 1692, column: 25, scope: !5981)
!5995 = !DILocation(line: 1693, column: 25, scope: !5981)
!5996 = !DILocation(line: 1696, column: 74, scope: !5981)
!5997 = !DILocation(line: 1696, column: 30, scope: !5981)
!5998 = !DILocation(line: 1696, column: 82, scope: !5981)
!5999 = !DILocation(line: 1697, column: 74, scope: !5981)
!6000 = !DILocation(line: 1697, column: 30, scope: !5981)
!6001 = !DILocation(line: 1696, column: 102, scope: !5981)
!6002 = !DILocation(line: 1695, column: 3, scope: !5981)
!6003 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !338, file: !338, line: 1639, type: !6004, scopeLine: 1640, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !6006)
!6004 = !DISubroutineType(types: !6005)
!6005 = !{null, !5965, !32}
!6006 = !{!6007, !6008}
!6007 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6003, file: !338, line: 1639, type: !5965)
!6008 = !DILocalVariable(name: "priority", arg: 2, scope: !6003, file: !338, line: 1639, type: !32)
!6009 = !DILocation(line: 0, scope: !6003)
!6010 = !DILocation(line: 0, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !6003, file: !338, line: 1641, column: 7)
!6012 = !DILocation(line: 1641, column: 7, scope: !6003)
!6013 = !DILocation(line: 1649, column: 1, scope: !6003)
!6014 = distinct !DISubprogram(name: "HAL_NVIC_EnableIRQ", scope: !1401, file: !1401, line: 187, type: !6015, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !6017)
!6015 = !DISubroutineType(types: !6016)
!6016 = !{null, !5965}
!6017 = !{!6018}
!6018 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6014, file: !1401, line: 187, type: !5965)
!6019 = !DILocation(line: 0, scope: !6014)
!6020 = !DILocation(line: 193, column: 3, scope: !6014)
!6021 = !DILocation(line: 194, column: 1, scope: !6014)
!6022 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !338, file: !338, line: 1511, type: !6015, scopeLine: 1512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !6023)
!6023 = !{!6024}
!6024 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6022, file: !338, line: 1511, type: !5965)
!6025 = !DILocation(line: 0, scope: !6022)
!6026 = !DILocation(line: 1513, column: 23, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6022, file: !338, line: 1513, column: 7)
!6028 = !DILocation(line: 1513, column: 7, scope: !6022)
!6029 = !DILocation(line: 1515, column: 81, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6027, file: !338, line: 1514, column: 3)
!6031 = !DILocation(line: 1515, column: 60, scope: !6030)
!6032 = !DILocation(line: 1515, column: 34, scope: !6030)
!6033 = !DILocation(line: 1515, column: 5, scope: !6030)
!6034 = !DILocation(line: 1515, column: 43, scope: !6030)
!6035 = !DILocation(line: 1516, column: 3, scope: !6030)
!6036 = !DILocation(line: 1517, column: 1, scope: !6022)
!6037 = distinct !DISubprogram(name: "HAL_NVIC_DisableIRQ", scope: !1401, file: !1401, line: 203, type: !6015, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !6038)
!6038 = !{!6039}
!6039 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6037, file: !1401, line: 203, type: !5965)
!6040 = !DILocation(line: 0, scope: !6037)
!6041 = !DILocation(line: 209, column: 3, scope: !6037)
!6042 = !DILocation(line: 210, column: 1, scope: !6037)
!6043 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !338, file: !338, line: 1547, type: !6015, scopeLine: 1548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !6044)
!6044 = !{!6045}
!6045 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6043, file: !338, line: 1547, type: !5965)
!6046 = !DILocation(line: 0, scope: !6043)
!6047 = !DILocation(line: 1549, column: 23, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6043, file: !338, line: 1549, column: 7)
!6049 = !DILocation(line: 1549, column: 7, scope: !6043)
!6050 = !DILocation(line: 1551, column: 81, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6048, file: !338, line: 1550, column: 3)
!6052 = !DILocation(line: 1551, column: 60, scope: !6051)
!6053 = !DILocation(line: 1551, column: 34, scope: !6051)
!6054 = !DILocation(line: 1551, column: 5, scope: !6051)
!6055 = !DILocation(line: 1551, column: 43, scope: !6051)
!6056 = !DILocation(line: 879, column: 3, scope: !6057, inlinedAt: !6059)
!6057 = distinct !DISubprogram(name: "__DSB", scope: !6058, file: !6058, line: 877, type: !150, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !152)
!6058 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "ba7e4770884341336138fcec9d34fc09")
!6059 = distinct !DILocation(line: 1552, column: 5, scope: !6051)
!6060 = !{i64 1222529}
!6061 = !DILocation(line: 868, column: 3, scope: !6062, inlinedAt: !6063)
!6062 = distinct !DISubprogram(name: "__ISB", scope: !6058, file: !6058, line: 866, type: !150, scopeLine: 867, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !152)
!6063 = distinct !DILocation(line: 1553, column: 5, scope: !6051)
!6064 = !{i64 1222235}
!6065 = !DILocation(line: 1554, column: 3, scope: !6051)
!6066 = !DILocation(line: 1555, column: 1, scope: !6043)
!6067 = distinct !DISubprogram(name: "HAL_NVIC_SystemReset", scope: !1401, file: !1401, line: 216, type: !150, scopeLine: 217, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !152)
!6068 = !DILocation(line: 219, column: 3, scope: !6067)
!6069 = distinct !DISubprogram(name: "__NVIC_SystemReset", scope: !338, file: !338, line: 1762, type: !150, scopeLine: 1763, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !152)
!6070 = !DILocation(line: 879, column: 3, scope: !6057, inlinedAt: !6071)
!6071 = distinct !DILocation(line: 1764, column: 3, scope: !6069)
!6072 = !DILocation(line: 1767, column: 34, scope: !6069)
!6073 = !DILocation(line: 1767, column: 40, scope: !6069)
!6074 = !DILocation(line: 1767, column: 66, scope: !6069)
!6075 = !DILocation(line: 1766, column: 15, scope: !6069)
!6076 = !DILocation(line: 879, column: 3, scope: !6057, inlinedAt: !6077)
!6077 = distinct !DILocation(line: 1769, column: 3, scope: !6069)
!6078 = !DILocation(line: 1771, column: 3, scope: !6069)
!6079 = !DILocation(line: 1773, column: 5, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6081, file: !338, line: 1772, column: 3)
!6081 = distinct !DILexicalBlock(scope: !6082, file: !338, line: 1771, column: 3)
!6082 = distinct !DILexicalBlock(scope: !6069, file: !338, line: 1771, column: 3)
!6083 = !{i64 2148746398}
!6084 = !DILocation(line: 1771, column: 3, scope: !6081)
!6085 = distinct !{!6085, !6086, !6087, !2130}
!6086 = !DILocation(line: 1771, column: 3, scope: !6082)
!6087 = !DILocation(line: 1774, column: 3, scope: !6082)
!6088 = distinct !DISubprogram(name: "HAL_SYSTICK_Config", scope: !1401, file: !1401, line: 229, type: !6089, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !6091)
!6089 = !DISubroutineType(types: !6090)
!6090 = !{!32, !32}
!6091 = !{!6092}
!6092 = !DILocalVariable(name: "TicksNumb", arg: 1, scope: !6088, file: !1401, line: 229, type: !32)
!6093 = !DILocation(line: 0, scope: !6088)
!6094 = !DILocation(line: 231, column: 11, scope: !6088)
!6095 = !DILocation(line: 231, column: 4, scope: !6088)
!6096 = distinct !DISubprogram(name: "SysTick_Config", scope: !338, file: !338, line: 1834, type: !6089, scopeLine: 1835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !6097)
!6097 = !{!6098}
!6098 = !DILocalVariable(name: "ticks", arg: 1, scope: !6096, file: !338, line: 1834, type: !32)
!6099 = !DILocation(line: 0, scope: !6096)
!6100 = !DILocation(line: 1836, column: 14, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6096, file: !338, line: 1836, column: 7)
!6102 = !DILocation(line: 1836, column: 21, scope: !6101)
!6103 = !DILocation(line: 1836, column: 7, scope: !6096)
!6104 = !DILocation(line: 1841, column: 18, scope: !6096)
!6105 = !DILocation(line: 1842, column: 3, scope: !6096)
!6106 = !DILocation(line: 1843, column: 18, scope: !6096)
!6107 = !DILocation(line: 1844, column: 18, scope: !6096)
!6108 = !DILocation(line: 1847, column: 3, scope: !6096)
!6109 = !DILocation(line: 1848, column: 1, scope: !6096)
!6110 = distinct !DISubprogram(name: "HAL_NVIC_GetPriorityGrouping", scope: !1401, file: !1401, line: 344, type: !3983, scopeLine: 345, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !152)
!6111 = !DILocation(line: 347, column: 10, scope: !6110)
!6112 = !DILocation(line: 347, column: 3, scope: !6110)
!6113 = distinct !DISubprogram(name: "HAL_NVIC_GetPriority", scope: !1401, file: !1401, line: 371, type: !6114, scopeLine: 372, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !6116)
!6114 = !DISubroutineType(types: !6115)
!6115 = !{null, !5965, !32, !137, !137}
!6116 = !{!6117, !6118, !6119, !6120}
!6117 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6113, file: !1401, line: 371, type: !5965)
!6118 = !DILocalVariable(name: "PriorityGroup", arg: 2, scope: !6113, file: !1401, line: 371, type: !32)
!6119 = !DILocalVariable(name: "pPreemptPriority", arg: 3, scope: !6113, file: !1401, line: 371, type: !137)
!6120 = !DILocalVariable(name: "pSubPriority", arg: 4, scope: !6113, file: !1401, line: 371, type: !137)
!6121 = !DILocation(line: 0, scope: !6113)
!6122 = !DILocation(line: 376, column: 23, scope: !6113)
!6123 = !{i32 0, i32 16}
!6124 = !DILocation(line: 376, column: 3, scope: !6113)
!6125 = !DILocation(line: 377, column: 1, scope: !6113)
!6126 = distinct !DISubprogram(name: "__NVIC_GetPriority", scope: !338, file: !338, line: 1661, type: !6127, scopeLine: 1662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !6129)
!6127 = !DISubroutineType(types: !6128)
!6128 = !{!32, !5965}
!6129 = !{!6130}
!6130 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6126, file: !338, line: 1661, type: !5965)
!6131 = !DILocation(line: 0, scope: !6126)
!6132 = !DILocation(line: 1664, column: 7, scope: !6126)
!6133 = !DILocation(line: 0, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6126, file: !338, line: 1664, column: 7)
!6135 = !DILocation(line: 1672, column: 1, scope: !6126)
!6136 = distinct !DISubprogram(name: "NVIC_DecodePriority", scope: !338, file: !338, line: 1713, type: !6137, scopeLine: 1714, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !6140)
!6137 = !DISubroutineType(types: !6138)
!6138 = !{null, !32, !32, !6139, !6139}
!6139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !137)
!6140 = !{!6141, !6142, !6143, !6144, !6145, !6146, !6147}
!6141 = !DILocalVariable(name: "Priority", arg: 1, scope: !6136, file: !338, line: 1713, type: !32)
!6142 = !DILocalVariable(name: "PriorityGroup", arg: 2, scope: !6136, file: !338, line: 1713, type: !32)
!6143 = !DILocalVariable(name: "pPreemptPriority", arg: 3, scope: !6136, file: !338, line: 1713, type: !6139)
!6144 = !DILocalVariable(name: "pSubPriority", arg: 4, scope: !6136, file: !338, line: 1713, type: !6139)
!6145 = !DILocalVariable(name: "PriorityGroupTmp", scope: !6136, file: !338, line: 1715, type: !32)
!6146 = !DILocalVariable(name: "PreemptPriorityBits", scope: !6136, file: !338, line: 1716, type: !32)
!6147 = !DILocalVariable(name: "SubPriorityBits", scope: !6136, file: !338, line: 1717, type: !32)
!6148 = !DILocation(line: 0, scope: !6136)
!6149 = !DILocation(line: 1715, column: 46, scope: !6136)
!6150 = !DILocation(line: 1719, column: 31, scope: !6136)
!6151 = !DILocation(line: 1719, column: 25, scope: !6136)
!6152 = !DILocation(line: 1720, column: 25, scope: !6136)
!6153 = !DILocation(line: 1722, column: 33, scope: !6136)
!6154 = !DILocation(line: 1722, column: 97, scope: !6136)
!6155 = !DILocation(line: 1722, column: 53, scope: !6136)
!6156 = !DILocation(line: 1722, column: 21, scope: !6136)
!6157 = !DILocation(line: 1723, column: 97, scope: !6136)
!6158 = !DILocation(line: 1723, column: 53, scope: !6136)
!6159 = !DILocation(line: 1723, column: 21, scope: !6136)
!6160 = !DILocation(line: 1724, column: 1, scope: !6136)
!6161 = distinct !DISubprogram(name: "HAL_NVIC_SetPendingIRQ", scope: !1401, file: !1401, line: 386, type: !6015, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !6162)
!6162 = !{!6163}
!6163 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6161, file: !1401, line: 386, type: !5965)
!6164 = !DILocation(line: 0, scope: !6161)
!6165 = !DILocation(line: 392, column: 3, scope: !6161)
!6166 = !DILocation(line: 393, column: 1, scope: !6161)
!6167 = distinct !DISubprogram(name: "__NVIC_SetPendingIRQ", scope: !338, file: !338, line: 1585, type: !6015, scopeLine: 1586, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !6168)
!6168 = !{!6169}
!6169 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6167, file: !338, line: 1585, type: !5965)
!6170 = !DILocation(line: 0, scope: !6167)
!6171 = !DILocation(line: 1587, column: 23, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6167, file: !338, line: 1587, column: 7)
!6173 = !DILocation(line: 1587, column: 7, scope: !6167)
!6174 = !DILocation(line: 1589, column: 81, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6172, file: !338, line: 1588, column: 3)
!6176 = !DILocation(line: 1589, column: 60, scope: !6175)
!6177 = !DILocation(line: 1589, column: 34, scope: !6175)
!6178 = !DILocation(line: 1589, column: 5, scope: !6175)
!6179 = !DILocation(line: 1589, column: 43, scope: !6175)
!6180 = !DILocation(line: 1590, column: 3, scope: !6175)
!6181 = !DILocation(line: 1591, column: 1, scope: !6167)
!6182 = distinct !DISubprogram(name: "HAL_NVIC_GetPendingIRQ", scope: !1401, file: !1401, line: 404, type: !6127, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !6183)
!6183 = !{!6184}
!6184 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6182, file: !1401, line: 404, type: !5965)
!6185 = !DILocation(line: 0, scope: !6182)
!6186 = !DILocation(line: 410, column: 10, scope: !6182)
!6187 = !DILocation(line: 410, column: 3, scope: !6182)
!6188 = distinct !DISubprogram(name: "__NVIC_GetPendingIRQ", scope: !338, file: !338, line: 1566, type: !6127, scopeLine: 1567, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !6189)
!6189 = !{!6190}
!6190 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6188, file: !338, line: 1566, type: !5965)
!6191 = !DILocation(line: 0, scope: !6188)
!6192 = !DILocation(line: 1568, column: 23, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6188, file: !338, line: 1568, column: 7)
!6194 = !DILocation(line: 1568, column: 7, scope: !6188)
!6195 = !DILocation(line: 1570, column: 54, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6193, file: !338, line: 1569, column: 3)
!6197 = !DILocation(line: 1570, column: 25, scope: !6196)
!6198 = !DILocation(line: 1570, column: 91, scope: !6196)
!6199 = !DILocation(line: 1570, column: 23, scope: !6196)
!6200 = !DILocation(line: 1570, column: 5, scope: !6196)
!6201 = !DILocation(line: 0, scope: !6193)
!6202 = !DILocation(line: 1576, column: 1, scope: !6188)
!6203 = distinct !DISubprogram(name: "HAL_NVIC_ClearPendingIRQ", scope: !1401, file: !1401, line: 420, type: !6015, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !6204)
!6204 = !{!6205}
!6205 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6203, file: !1401, line: 420, type: !5965)
!6206 = !DILocation(line: 0, scope: !6203)
!6207 = !DILocation(line: 426, column: 3, scope: !6203)
!6208 = !DILocation(line: 427, column: 1, scope: !6203)
!6209 = distinct !DISubprogram(name: "__NVIC_ClearPendingIRQ", scope: !338, file: !338, line: 1600, type: !6015, scopeLine: 1601, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !6210)
!6210 = !{!6211}
!6211 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6209, file: !338, line: 1600, type: !5965)
!6212 = !DILocation(line: 0, scope: !6209)
!6213 = !DILocation(line: 1602, column: 23, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6209, file: !338, line: 1602, column: 7)
!6215 = !DILocation(line: 1602, column: 7, scope: !6209)
!6216 = !DILocation(line: 1604, column: 81, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6214, file: !338, line: 1603, column: 3)
!6218 = !DILocation(line: 1604, column: 60, scope: !6217)
!6219 = !DILocation(line: 1604, column: 34, scope: !6217)
!6220 = !DILocation(line: 1604, column: 5, scope: !6217)
!6221 = !DILocation(line: 1604, column: 43, scope: !6217)
!6222 = !DILocation(line: 1605, column: 3, scope: !6217)
!6223 = !DILocation(line: 1606, column: 1, scope: !6209)
!6224 = distinct !DISubprogram(name: "HAL_NVIC_GetActive", scope: !1401, file: !1401, line: 437, type: !6127, scopeLine: 438, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !6225)
!6225 = !{!6226}
!6226 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6224, file: !1401, line: 437, type: !5965)
!6227 = !DILocation(line: 0, scope: !6224)
!6228 = !DILocation(line: 443, column: 10, scope: !6224)
!6229 = !DILocation(line: 443, column: 3, scope: !6224)
!6230 = distinct !DISubprogram(name: "__NVIC_GetActive", scope: !338, file: !338, line: 1617, type: !6127, scopeLine: 1618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !6231)
!6231 = !{!6232}
!6232 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6230, file: !338, line: 1617, type: !5965)
!6233 = !DILocation(line: 0, scope: !6230)
!6234 = !DILocation(line: 1619, column: 23, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6230, file: !338, line: 1619, column: 7)
!6236 = !DILocation(line: 1619, column: 7, scope: !6230)
!6237 = !DILocation(line: 1621, column: 54, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6235, file: !338, line: 1620, column: 3)
!6239 = !DILocation(line: 1621, column: 25, scope: !6238)
!6240 = !DILocation(line: 1621, column: 91, scope: !6238)
!6241 = !DILocation(line: 1621, column: 23, scope: !6238)
!6242 = !DILocation(line: 1621, column: 5, scope: !6238)
!6243 = !DILocation(line: 0, scope: !6235)
!6244 = !DILocation(line: 1627, column: 1, scope: !6230)
!6245 = distinct !DISubprogram(name: "HAL_SYSTICK_CLKSourceConfig", scope: !1401, file: !1401, line: 454, type: !3829, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !6246)
!6246 = !{!6247}
!6247 = !DILocalVariable(name: "CLKSource", arg: 1, scope: !6245, file: !1401, line: 454, type: !32)
!6248 = !DILocation(line: 0, scope: !6245)
!6249 = !DILocation(line: 458, column: 17, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6245, file: !1401, line: 458, column: 7)
!6251 = !DILocation(line: 0, scope: !6250)
!6252 = !DILocation(line: 458, column: 7, scope: !6245)
!6253 = !DILocation(line: 466, column: 1, scope: !6245)
!6254 = distinct !DISubprogram(name: "HAL_SYSTICK_IRQHandler", scope: !1401, file: !1401, line: 472, type: !150, scopeLine: 473, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !152)
!6255 = !DILocation(line: 474, column: 3, scope: !6254)
!6256 = !DILocation(line: 475, column: 1, scope: !6254)
!6257 = distinct !DISubprogram(name: "HAL_SYSTICK_Callback", scope: !1401, file: !1401, line: 481, type: !150, scopeLine: 482, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !152)
!6258 = !DILocation(line: 486, column: 1, scope: !6257)
!6259 = distinct !DISubprogram(name: "HAL_GPIO_Init", scope: !1455, file: !1455, line: 178, type: !6260, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !6270)
!6260 = !DISubroutineType(types: !6261)
!6261 = !{null, !1486, !6262}
!6262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6263, size: 32)
!6263 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !1458, line: 60, baseType: !6264)
!6264 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1458, line: 47, size: 128, elements: !6265)
!6265 = !{!6266, !6267, !6268, !6269}
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !6264, file: !1458, line: 49, baseType: !32, size: 32)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !6264, file: !1458, line: 52, baseType: !32, size: 32, offset: 32)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !6264, file: !1458, line: 55, baseType: !32, size: 32, offset: 64)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !6264, file: !1458, line: 58, baseType: !32, size: 32, offset: 96)
!6270 = !{!6271, !6272, !6273, !6274, !6275, !6276, !6277, !6278, !6279, !6280}
!6271 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !6259, file: !1455, line: 178, type: !1486)
!6272 = !DILocalVariable(name: "GPIO_Init", arg: 2, scope: !6259, file: !1455, line: 178, type: !6262)
!6273 = !DILocalVariable(name: "position", scope: !6259, file: !1455, line: 180, type: !32)
!6274 = !DILocalVariable(name: "ioposition", scope: !6259, file: !1455, line: 181, type: !32)
!6275 = !DILocalVariable(name: "iocurrent", scope: !6259, file: !1455, line: 182, type: !32)
!6276 = !DILocalVariable(name: "temp", scope: !6259, file: !1455, line: 183, type: !32)
!6277 = !DILocalVariable(name: "config", scope: !6259, file: !1455, line: 184, type: !32)
!6278 = !DILocalVariable(name: "configregister", scope: !6259, file: !1455, line: 185, type: !85)
!6279 = !DILocalVariable(name: "registeroffset", scope: !6259, file: !1455, line: 186, type: !32)
!6280 = !DILocalVariable(name: "tmpreg", scope: !6281, file: !1455, line: 291, type: !72)
!6281 = distinct !DILexicalBlock(scope: !6282, file: !1455, line: 291, column: 9)
!6282 = distinct !DILexicalBlock(scope: !6283, file: !1455, line: 289, column: 7)
!6283 = distinct !DILexicalBlock(scope: !6284, file: !1455, line: 288, column: 11)
!6284 = distinct !DILexicalBlock(scope: !6285, file: !1455, line: 203, column: 5)
!6285 = distinct !DILexicalBlock(scope: !6286, file: !1455, line: 202, column: 9)
!6286 = distinct !DILexicalBlock(scope: !6259, file: !1455, line: 195, column: 3)
!6287 = !DILocation(line: 0, scope: !6259)
!6288 = !DILocation(line: 194, column: 23, scope: !6259)
!6289 = !DILocation(line: 194, column: 41, scope: !6259)
!6290 = !DILocation(line: 194, column: 3, scope: !6259)
!6291 = !DILocation(line: 197, column: 26, scope: !6286)
!6292 = !DILocation(line: 200, column: 44, scope: !6286)
!6293 = !DILocation(line: 202, column: 19, scope: !6285)
!6294 = !DILocation(line: 202, column: 9, scope: !6286)
!6295 = !DILocation(line: 208, column: 26, scope: !6284)
!6296 = !DILocation(line: 208, column: 7, scope: !6284)
!6297 = !DILocation(line: 214, column: 31, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6284, file: !1455, line: 209, column: 7)
!6299 = !DILocation(line: 215, column: 11, scope: !6298)
!6300 = !DILocation(line: 221, column: 31, scope: !6298)
!6301 = !DILocation(line: 221, column: 37, scope: !6298)
!6302 = !DILocation(line: 222, column: 11, scope: !6298)
!6303 = !DILocation(line: 228, column: 31, scope: !6298)
!6304 = !DILocation(line: 228, column: 37, scope: !6298)
!6305 = !DILocation(line: 229, column: 11, scope: !6298)
!6306 = !DILocation(line: 235, column: 31, scope: !6298)
!6307 = !DILocation(line: 235, column: 37, scope: !6298)
!6308 = !DILocation(line: 236, column: 11, scope: !6298)
!6309 = !DILocation(line: 248, column: 26, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6298, file: !1455, line: 248, column: 15)
!6311 = !DILocation(line: 248, column: 15, scope: !6298)
!6312 = !DILocation(line: 257, column: 25, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6314, file: !1455, line: 253, column: 11)
!6314 = distinct !DILexicalBlock(scope: !6310, file: !1455, line: 252, column: 20)
!6315 = !{!6316, !3335, i64 16}
!6316 = !{!"", !3335, i64 0, !3335, i64 4, !3335, i64 8, !3335, i64 12, !3335, i64 16, !3335, i64 20, !3335, i64 24}
!6317 = !DILocation(line: 258, column: 11, scope: !6313)
!6318 = !DILocation(line: 264, column: 24, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6314, file: !1455, line: 260, column: 11)
!6320 = !{!6316, !3335, i64 20}
!6321 = !DILocation(line: 271, column: 11, scope: !6298)
!6322 = !DILocation(line: 280, column: 35, scope: !6284)
!6323 = !DILocation(line: 280, column: 24, scope: !6284)
!6324 = !DILocation(line: 281, column: 24, scope: !6284)
!6325 = !DILocation(line: 284, column: 7, scope: !6284)
!6326 = !DILocation(line: 288, column: 23, scope: !6283)
!6327 = !DILocation(line: 288, column: 28, scope: !6283)
!6328 = !DILocation(line: 288, column: 41, scope: !6283)
!6329 = !DILocation(line: 288, column: 11, scope: !6284)
!6330 = !DILocation(line: 291, column: 9, scope: !6281)
!6331 = !DILocation(line: 291, column: 9, scope: !6282)
!6332 = !DILocation(line: 292, column: 38, scope: !6282)
!6333 = !DILocation(line: 292, column: 16, scope: !6282)
!6334 = !DILocation(line: 293, column: 9, scope: !6282)
!6335 = !DILocation(line: 294, column: 9, scope: !6282)
!6336 = !DILocation(line: 295, column: 38, scope: !6282)
!6337 = !DILocation(line: 299, column: 25, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6282, file: !1455, line: 299, column: 13)
!6339 = !DILocation(line: 299, column: 30, scope: !6338)
!6340 = !DILocation(line: 299, column: 46, scope: !6338)
!6341 = !DILocation(line: 299, column: 13, scope: !6282)
!6342 = !DILocation(line: 301, column: 11, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6338, file: !1455, line: 300, column: 9)
!6344 = !{!6345, !3335, i64 0}
!6345 = !{!"", !3335, i64 0, !3335, i64 4, !3335, i64 8, !3335, i64 12, !3335, i64 16, !3335, i64 20}
!6346 = !DILocation(line: 302, column: 9, scope: !6343)
!6347 = !DILocation(line: 305, column: 11, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6338, file: !1455, line: 304, column: 9)
!6349 = !DILocation(line: 0, scope: !6338)
!6350 = !DILocation(line: 309, column: 30, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6282, file: !1455, line: 309, column: 13)
!6352 = !DILocation(line: 309, column: 47, scope: !6351)
!6353 = !DILocation(line: 309, column: 13, scope: !6282)
!6354 = !DILocation(line: 311, column: 11, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6351, file: !1455, line: 310, column: 9)
!6356 = !{!6345, !3335, i64 4}
!6357 = !DILocation(line: 312, column: 9, scope: !6355)
!6358 = !DILocation(line: 315, column: 11, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6351, file: !1455, line: 314, column: 9)
!6360 = !DILocation(line: 0, scope: !6351)
!6361 = !DILocation(line: 319, column: 30, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6282, file: !1455, line: 319, column: 13)
!6363 = !DILocation(line: 319, column: 45, scope: !6362)
!6364 = !DILocation(line: 319, column: 13, scope: !6282)
!6365 = !DILocation(line: 321, column: 11, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6362, file: !1455, line: 320, column: 9)
!6367 = !{!6345, !3335, i64 8}
!6368 = !DILocation(line: 322, column: 9, scope: !6366)
!6369 = !DILocation(line: 325, column: 11, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6362, file: !1455, line: 324, column: 9)
!6371 = !DILocation(line: 0, scope: !6362)
!6372 = !DILocation(line: 329, column: 30, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6282, file: !1455, line: 329, column: 13)
!6374 = !DILocation(line: 329, column: 46, scope: !6373)
!6375 = !DILocation(line: 329, column: 13, scope: !6282)
!6376 = !DILocation(line: 331, column: 11, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6373, file: !1455, line: 330, column: 9)
!6378 = !{!6345, !3335, i64 12}
!6379 = !DILocation(line: 332, column: 9, scope: !6377)
!6380 = !DILocation(line: 335, column: 11, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6373, file: !1455, line: 334, column: 9)
!6382 = !DILocation(line: 0, scope: !6373)
!6383 = !DILocation(line: 340, column: 10, scope: !6286)
!6384 = !DILocation(line: 184, column: 12, scope: !6259)
!6385 = !DILocation(line: 194, column: 28, scope: !6259)
!6386 = distinct !{!6386, !6290, !6387, !2129, !2130}
!6387 = !DILocation(line: 341, column: 3, scope: !6259)
!6388 = !DILocation(line: 342, column: 1, scope: !6259)
!6389 = distinct !DISubprogram(name: "HAL_GPIO_DeInit", scope: !1455, file: !1455, line: 351, type: !6390, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !6392)
!6390 = !DISubroutineType(types: !6391)
!6391 = !{null, !1486, !32}
!6392 = !{!6393, !6394, !6395, !6396, !6397, !6398, !6399}
!6393 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !6389, file: !1455, line: 351, type: !1486)
!6394 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !6389, file: !1455, line: 351, type: !32)
!6395 = !DILocalVariable(name: "position", scope: !6389, file: !1455, line: 353, type: !32)
!6396 = !DILocalVariable(name: "iocurrent", scope: !6389, file: !1455, line: 354, type: !32)
!6397 = !DILocalVariable(name: "tmp", scope: !6389, file: !1455, line: 355, type: !32)
!6398 = !DILocalVariable(name: "configregister", scope: !6389, file: !1455, line: 356, type: !85)
!6399 = !DILocalVariable(name: "registeroffset", scope: !6389, file: !1455, line: 357, type: !32)
!6400 = !DILocation(line: 0, scope: !6389)
!6401 = !DILocation(line: 364, column: 33, scope: !6389)
!6402 = !DILocation(line: 364, column: 3, scope: !6389)
!6403 = !DILocation(line: 367, column: 35, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6389, file: !1455, line: 365, column: 3)
!6405 = !DILocation(line: 367, column: 28, scope: !6404)
!6406 = !DILocation(line: 369, column: 9, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6404, file: !1455, line: 369, column: 9)
!6408 = !DILocation(line: 369, column: 9, scope: !6404)
!6409 = !DILocation(line: 374, column: 35, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6407, file: !1455, line: 370, column: 5)
!6411 = !DILocation(line: 374, column: 13, scope: !6410)
!6412 = !DILocation(line: 375, column: 28, scope: !6410)
!6413 = !DILocation(line: 375, column: 21, scope: !6410)
!6414 = !DILocation(line: 375, column: 11, scope: !6410)
!6415 = !DILocation(line: 376, column: 19, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6410, file: !1455, line: 376, column: 11)
!6417 = !DILocation(line: 376, column: 41, scope: !6416)
!6418 = !DILocation(line: 376, column: 15, scope: !6416)
!6419 = !DILocation(line: 376, column: 11, scope: !6410)
!6420 = !DILocation(line: 379, column: 9, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6416, file: !1455, line: 377, column: 7)
!6422 = !DILocation(line: 382, column: 9, scope: !6421)
!6423 = !DILocation(line: 383, column: 9, scope: !6421)
!6424 = !DILocation(line: 386, column: 9, scope: !6421)
!6425 = !DILocation(line: 387, column: 9, scope: !6421)
!6426 = !DILocation(line: 388, column: 7, scope: !6421)
!6427 = !DILocation(line: 392, column: 35, scope: !6410)
!6428 = !DILocation(line: 392, column: 24, scope: !6410)
!6429 = !DILocation(line: 393, column: 24, scope: !6410)
!6430 = !DILocation(line: 396, column: 7, scope: !6410)
!6431 = !DILocation(line: 399, column: 7, scope: !6410)
!6432 = !{!6316, !3335, i64 12}
!6433 = !DILocation(line: 400, column: 5, scope: !6410)
!6434 = !DILocation(line: 402, column: 13, scope: !6404)
!6435 = !DILocation(line: 364, column: 20, scope: !6389)
!6436 = distinct !{!6436, !6402, !6437, !2129, !2130}
!6437 = !DILocation(line: 403, column: 3, scope: !6389)
!6438 = !DILocation(line: 404, column: 1, scope: !6389)
!6439 = distinct !DISubprogram(name: "HAL_GPIO_ReadPin", scope: !1455, file: !1455, line: 431, type: !6440, scopeLine: 432, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !6443)
!6440 = !DISubroutineType(types: !6441)
!6441 = !{!6442, !1486, !26}
!6442 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PinState", file: !1458, line: 69, baseType: !1457)
!6443 = !{!6444, !6445, !6446}
!6444 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !6439, file: !1455, line: 431, type: !1486)
!6445 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !6439, file: !1455, line: 431, type: !26)
!6446 = !DILocalVariable(name: "bitstatus", scope: !6439, file: !1455, line: 433, type: !6442)
!6447 = !DILocation(line: 0, scope: !6439)
!6448 = !DILocation(line: 438, column: 15, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6439, file: !1455, line: 438, column: 7)
!6450 = !{!6316, !3335, i64 8}
!6451 = !DILocation(line: 438, column: 21, scope: !6449)
!6452 = !DILocation(line: 438, column: 19, scope: !6449)
!6453 = !DILocation(line: 438, column: 31, scope: !6449)
!6454 = !DILocation(line: 446, column: 3, scope: !6439)
!6455 = distinct !DISubprogram(name: "HAL_GPIO_WritePin", scope: !1455, file: !1455, line: 465, type: !6456, scopeLine: 466, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !6458)
!6456 = !DISubroutineType(types: !6457)
!6457 = !{null, !1486, !26, !6442}
!6458 = !{!6459, !6460, !6461}
!6459 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !6455, file: !1455, line: 465, type: !1486)
!6460 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !6455, file: !1455, line: 465, type: !26)
!6461 = !DILocalVariable(name: "PinState", arg: 3, scope: !6455, file: !1455, line: 465, type: !6442)
!6462 = !DILocation(line: 0, scope: !6455)
!6463 = !DILocation(line: 471, column: 16, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6455, file: !1455, line: 471, column: 7)
!6465 = !DILocation(line: 0, scope: !6464)
!6466 = !DILocation(line: 471, column: 7, scope: !6455)
!6467 = !DILocation(line: 479, column: 1, scope: !6455)
!6468 = distinct !DISubprogram(name: "HAL_GPIO_TogglePin", scope: !1455, file: !1455, line: 487, type: !6469, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !6471)
!6469 = !DISubroutineType(types: !6470)
!6470 = !{null, !1486, !26}
!6471 = !{!6472, !6473}
!6472 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !6468, file: !1455, line: 487, type: !1486)
!6473 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !6468, file: !1455, line: 487, type: !26)
!6474 = !DILocation(line: 0, scope: !6468)
!6475 = !DILocation(line: 492, column: 15, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6468, file: !1455, line: 492, column: 7)
!6477 = !DILocation(line: 492, column: 21, scope: !6476)
!6478 = !DILocation(line: 492, column: 19, scope: !6476)
!6479 = !DILocation(line: 492, column: 31, scope: !6476)
!6480 = !DILocation(line: 492, column: 7, scope: !6468)
!6481 = !DILocation(line: 0, scope: !6476)
!6482 = !DILocation(line: 500, column: 1, scope: !6468)
!6483 = distinct !DISubprogram(name: "HAL_GPIO_LockPin", scope: !1455, file: !1455, line: 512, type: !6484, scopeLine: 513, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !6486)
!6484 = !DISubroutineType(types: !6485)
!6485 = !{!3389, !1486, !26}
!6486 = !{!6487, !6488, !6489}
!6487 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !6483, file: !1455, line: 512, type: !1486)
!6488 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !6483, file: !1455, line: 512, type: !26)
!6489 = !DILocalVariable(name: "tmp", scope: !6483, file: !1455, line: 514, type: !72)
!6490 = !DILocation(line: 0, scope: !6483)
!6491 = !DILocation(line: 514, column: 3, scope: !6483)
!6492 = !DILocation(line: 514, column: 17, scope: !6483)
!6493 = !DILocation(line: 521, column: 3, scope: !6483)
!6494 = !DILocation(line: 523, column: 17, scope: !6483)
!6495 = !DILocation(line: 523, column: 10, scope: !6483)
!6496 = !DILocation(line: 523, column: 15, scope: !6483)
!6497 = !{!6316, !3335, i64 24}
!6498 = !DILocation(line: 525, column: 15, scope: !6483)
!6499 = !DILocation(line: 527, column: 17, scope: !6483)
!6500 = !DILocation(line: 527, column: 15, scope: !6483)
!6501 = !DILocation(line: 529, column: 16, scope: !6483)
!6502 = !DILocation(line: 529, column: 7, scope: !6483)
!6503 = !DILocation(line: 532, column: 25, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6483, file: !1455, line: 532, column: 7)
!6505 = !DILocation(line: 0, scope: !6504)
!6506 = !DILocation(line: 540, column: 1, scope: !6483)
!6507 = distinct !DISubprogram(name: "HAL_GPIO_EXTI_IRQHandler", scope: !1455, file: !1455, line: 547, type: !6508, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !6510)
!6508 = !DISubroutineType(types: !6509)
!6509 = !{null, !26}
!6510 = !{!6511}
!6511 = !DILocalVariable(name: "GPIO_Pin", arg: 1, scope: !6507, file: !1455, line: 547, type: !26)
!6512 = !DILocation(line: 0, scope: !6507)
!6513 = !DILocation(line: 550, column: 7, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6507, file: !1455, line: 550, column: 7)
!6515 = !{!6345, !3335, i64 20}
!6516 = !DILocation(line: 550, column: 40, scope: !6514)
!6517 = !DILocation(line: 550, column: 7, scope: !6507)
!6518 = !DILocation(line: 552, column: 5, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6514, file: !1455, line: 551, column: 3)
!6520 = !DILocation(line: 553, column: 5, scope: !6519)
!6521 = !DILocation(line: 554, column: 3, scope: !6519)
!6522 = !DILocation(line: 555, column: 1, scope: !6507)
!6523 = distinct !DISubprogram(name: "HAL_GPIO_EXTI_Callback", scope: !1455, file: !1455, line: 562, type: !6508, scopeLine: 563, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !6524)
!6524 = !{!6525}
!6525 = !DILocalVariable(name: "GPIO_Pin", arg: 1, scope: !6523, file: !1455, line: 562, type: !26)
!6526 = !DILocation(line: 0, scope: !6523)
!6527 = !DILocation(line: 569, column: 1, scope: !6523)
!6528 = distinct !DISubprogram(name: "vListInitialise", scope: !1508, file: !1508, line: 37, type: !6529, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1507, retainedNodes: !6532)
!6529 = !DISubroutineType(types: !6530)
!6530 = !{null, !6531}
!6531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1520)
!6532 = !{!6533}
!6533 = !DILocalVariable(name: "pxList", arg: 1, scope: !6528, file: !1508, line: 37, type: !6531)
!6534 = !DILocation(line: 0, scope: !6528)
!6535 = !DILocation(line: 42, column: 48, scope: !6528)
!6536 = !DILocation(line: 42, column: 10, scope: !6528)
!6537 = !DILocation(line: 42, column: 18, scope: !6528)
!6538 = !DILocation(line: 46, column: 19, scope: !6528)
!6539 = !DILocation(line: 46, column: 30, scope: !6528)
!6540 = !{!4957, !3335, i64 8}
!6541 = !DILocation(line: 50, column: 19, scope: !6528)
!6542 = !DILocation(line: 50, column: 26, scope: !6528)
!6543 = !DILocation(line: 51, column: 19, scope: !6528)
!6544 = !DILocation(line: 51, column: 30, scope: !6528)
!6545 = !{!4957, !2496, i64 16}
!6546 = !DILocation(line: 53, column: 10, scope: !6528)
!6547 = !DILocation(line: 53, column: 26, scope: !6528)
!6548 = !DILocation(line: 59, column: 1, scope: !6528)
!6549 = distinct !DISubprogram(name: "vListInitialiseItem", scope: !1508, file: !1508, line: 62, type: !6550, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1507, retainedNodes: !6553)
!6550 = !DISubroutineType(types: !6551)
!6551 = !{null, !6552}
!6552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1510)
!6553 = !{!6554}
!6554 = !DILocalVariable(name: "pxItem", arg: 1, scope: !6549, file: !1508, line: 62, type: !6552)
!6555 = !DILocation(line: 0, scope: !6549)
!6556 = !DILocation(line: 65, column: 10, scope: !6549)
!6557 = !DILocation(line: 65, column: 22, scope: !6549)
!6558 = !{!4679, !2496, i64 16}
!6559 = !DILocation(line: 71, column: 1, scope: !6549)
!6560 = distinct !DISubprogram(name: "vListInsertEnd", scope: !1508, file: !1508, line: 74, type: !6561, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1507, retainedNodes: !6563)
!6561 = !DISubroutineType(types: !6562)
!6562 = !{null, !6531, !6552}
!6563 = !{!6564, !6565, !6566}
!6564 = !DILocalVariable(name: "pxList", arg: 1, scope: !6560, file: !1508, line: 74, type: !6531)
!6565 = !DILocalVariable(name: "pxNewListItem", arg: 2, scope: !6560, file: !1508, line: 74, type: !6552)
!6566 = !DILocalVariable(name: "pxIndex", scope: !6560, file: !1508, line: 76, type: !6552)
!6567 = !DILocation(line: 0, scope: !6560)
!6568 = !DILocation(line: 76, column: 38, scope: !6560)
!6569 = !DILocation(line: 87, column: 17, scope: !6560)
!6570 = !DILocation(line: 87, column: 24, scope: !6560)
!6571 = !DILocation(line: 88, column: 39, scope: !6560)
!6572 = !{!4679, !2496, i64 8}
!6573 = !DILocation(line: 88, column: 17, scope: !6560)
!6574 = !DILocation(line: 88, column: 28, scope: !6560)
!6575 = !DILocation(line: 93, column: 11, scope: !6560)
!6576 = !DILocation(line: 93, column: 23, scope: !6560)
!6577 = !DILocation(line: 93, column: 30, scope: !6560)
!6578 = !DILocation(line: 94, column: 22, scope: !6560)
!6579 = !DILocation(line: 97, column: 17, scope: !6560)
!6580 = !DILocation(line: 97, column: 29, scope: !6560)
!6581 = !DILocation(line: 99, column: 12, scope: !6560)
!6582 = !DILocation(line: 99, column: 29, scope: !6560)
!6583 = !DILocation(line: 100, column: 1, scope: !6560)
!6584 = distinct !DISubprogram(name: "vListInsert", scope: !1508, file: !1508, line: 103, type: !6561, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1507, retainedNodes: !6585)
!6585 = !{!6586, !6587, !6588, !6589}
!6586 = !DILocalVariable(name: "pxList", arg: 1, scope: !6584, file: !1508, line: 103, type: !6531)
!6587 = !DILocalVariable(name: "pxNewListItem", arg: 2, scope: !6584, file: !1508, line: 103, type: !6552)
!6588 = !DILocalVariable(name: "pxIterator", scope: !6584, file: !1508, line: 105, type: !1510)
!6589 = !DILocalVariable(name: "xValueOfInsertion", scope: !6584, file: !1508, line: 106, type: !4839)
!6590 = !DILocation(line: 0, scope: !6584)
!6591 = !DILocation(line: 106, column: 53, scope: !6584)
!6592 = !DILocation(line: 122, column: 24, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6584, file: !1508, line: 122, column: 6)
!6594 = !DILocation(line: 122, column: 6, scope: !6584)
!6595 = !DILocation(line: 124, column: 33, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6593, file: !1508, line: 123, column: 2)
!6597 = !DILocation(line: 125, column: 2, scope: !6596)
!6598 = !DILocation(line: 150, column: 49, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6600, file: !1508, line: 150, column: 3)
!6600 = distinct !DILexicalBlock(scope: !6593, file: !1508, line: 127, column: 2)
!6601 = !DILocation(line: 150, column: 21, scope: !6599)
!6602 = !DILocation(line: 150, column: 8, scope: !6599)
!6603 = !DILocation(line: 0, scope: !6599)
!6604 = !DILocation(line: 150, column: 73, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6599, file: !1508, line: 150, column: 3)
!6606 = !DILocation(line: 150, column: 81, scope: !6605)
!6607 = !DILocation(line: 150, column: 92, scope: !6605)
!6608 = !DILocation(line: 150, column: 3, scope: !6599)
!6609 = distinct !{!6609, !6608, !6610, !2129, !2130}
!6610 = !DILocation(line: 154, column: 3, scope: !6599)
!6611 = !DILocation(line: 0, scope: !6593)
!6612 = !DILocation(line: 157, column: 38, scope: !6584)
!6613 = !DILocation(line: 157, column: 17, scope: !6584)
!6614 = !DILocation(line: 157, column: 24, scope: !6584)
!6615 = !DILocation(line: 158, column: 25, scope: !6584)
!6616 = !DILocation(line: 158, column: 36, scope: !6584)
!6617 = !DILocation(line: 159, column: 17, scope: !6584)
!6618 = !DILocation(line: 159, column: 28, scope: !6584)
!6619 = !DILocation(line: 160, column: 21, scope: !6584)
!6620 = !DILocation(line: 164, column: 17, scope: !6584)
!6621 = !DILocation(line: 164, column: 29, scope: !6584)
!6622 = !DILocation(line: 166, column: 12, scope: !6584)
!6623 = !DILocation(line: 166, column: 29, scope: !6584)
!6624 = !DILocation(line: 167, column: 1, scope: !6584)
!6625 = distinct !DISubprogram(name: "uxListRemove", scope: !1508, file: !1508, line: 170, type: !6626, scopeLine: 171, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1507, retainedNodes: !6628)
!6626 = !DISubroutineType(types: !6627)
!6627 = !{!82, !6552}
!6628 = !{!6629, !6630}
!6629 = !DILocalVariable(name: "pxItemToRemove", arg: 1, scope: !6625, file: !1508, line: 170, type: !6552)
!6630 = !DILocalVariable(name: "pxList", scope: !6625, file: !1508, line: 174, type: !6531)
!6631 = !DILocation(line: 0, scope: !6625)
!6632 = !DILocation(line: 174, column: 54, scope: !6625)
!6633 = !DILocation(line: 176, column: 55, scope: !6625)
!6634 = !DILocation(line: 176, column: 18, scope: !6625)
!6635 = !DILocation(line: 176, column: 26, scope: !6625)
!6636 = !DILocation(line: 176, column: 37, scope: !6625)
!6637 = !DILocation(line: 177, column: 18, scope: !6625)
!6638 = !DILocation(line: 177, column: 30, scope: !6625)
!6639 = !DILocation(line: 177, column: 37, scope: !6625)
!6640 = !DILocation(line: 183, column: 14, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6625, file: !1508, line: 183, column: 6)
!6642 = !DILocation(line: 183, column: 22, scope: !6641)
!6643 = !DILocation(line: 183, column: 6, scope: !6625)
!6644 = !DILocation(line: 185, column: 19, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6641, file: !1508, line: 184, column: 2)
!6646 = !DILocation(line: 186, column: 2, scope: !6645)
!6647 = !DILocation(line: 192, column: 30, scope: !6625)
!6648 = !DILocation(line: 193, column: 12, scope: !6625)
!6649 = !DILocation(line: 193, column: 29, scope: !6625)
!6650 = !DILocation(line: 195, column: 17, scope: !6625)
!6651 = !DILocation(line: 195, column: 2, scope: !6625)
!6652 = distinct !DISubprogram(name: "~IPCommDevice", linkageName: "_ZN6Cicada12IPCommDeviceD2Ev", scope: !1537, file: !861, line: 54, type: !1637, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1636, retainedNodes: !6653)
!6653 = !{!6654}
!6654 = !DILocalVariable(name: "this", arg: 1, scope: !6652, type: !6655, flags: DIFlagArtificial | DIFlagObjectPointer)
!6655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 32)
!6656 = !DILocation(line: 0, scope: !6652)
!6657 = !DILocation(line: 54, column: 30, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6652, file: !861, line: 54, column: 29)
!6659 = !DILocation(line: 54, column: 30, scope: !6652)
!6660 = distinct !DISubprogram(name: "~IPCommDevice", linkageName: "_ZN6Cicada12IPCommDeviceD0Ev", scope: !1537, file: !861, line: 54, type: !1637, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1636, retainedNodes: !6661)
!6661 = !{!6662}
!6662 = !DILocalVariable(name: "this", arg: 1, scope: !6660, type: !6655, flags: DIFlagArtificial | DIFlagObjectPointer)
!6663 = !DILocation(line: 0, scope: !6660)
!6664 = !DILocation(line: 54, column: 29, scope: !6660)
!6665 = distinct !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada12IPCommDevice14bytesAvailableEv", scope: !1537, file: !1534, line: 86, type: !1649, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1648, retainedNodes: !6666)
!6666 = !{!6667}
!6667 = !DILocalVariable(name: "this", arg: 1, scope: !6665, type: !6668, flags: DIFlagArtificial | DIFlagObjectPointer)
!6668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 32)
!6669 = !DILocation(line: 0, scope: !6665)
!6670 = !DILocation(line: 88, column: 12, scope: !6665)
!6671 = !DILocation(line: 88, column: 24, scope: !6665)
!6672 = !DILocation(line: 88, column: 5, scope: !6665)
!6673 = distinct !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada12IPCommDevice14spaceAvailableEv", scope: !1537, file: !1534, line: 91, type: !1649, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1653, retainedNodes: !6674)
!6674 = !{!6675}
!6675 = !DILocalVariable(name: "this", arg: 1, scope: !6673, type: !6668, flags: DIFlagArtificial | DIFlagObjectPointer)
!6676 = !DILocation(line: 0, scope: !6673)
!6677 = !DILocation(line: 93, column: 9, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6673, file: !1534, line: 93, column: 9)
!6679 = !{!6680, !6684, i64 132}
!6680 = !{!"_ZTSN6Cicada12IPCommDeviceE", !6681, i64 24, !6681, i64 72, !6683, i64 120, !2287, i64 124, !2139, i64 128, !2140, i64 130, !6684, i64 132, !2287, i64 136}
!6681 = !{!"_ZTSN6Cicada14CircularBufferIhEE", !6682, i64 8, !6682, i64 16, !6682, i64 24, !6682, i64 32, !2287, i64 40}
!6682 = !{!"long long", !2140, i64 0}
!6683 = !{!"_ZTSN6Cicada13IIPCommDevice14ConnectionTypeE", !2140, i64 0}
!6684 = !{!"_ZTSN6Cicada12IPCommDevice12ConnectStateE", !2140, i64 0}
!6685 = !DILocation(line: 93, column: 23, scope: !6678)
!6686 = !DILocation(line: 93, column: 9, scope: !6673)
!6687 = !DILocation(line: 96, column: 12, scope: !6673)
!6688 = !DILocation(line: 96, column: 25, scope: !6673)
!6689 = !DILocation(line: 96, column: 5, scope: !6673)
!6690 = !DILocation(line: 97, column: 1, scope: !6673)
!6691 = distinct !DISubprogram(name: "writeBufferProcessed", linkageName: "_ZNK6Cicada12IPCommDevice20writeBufferProcessedEv", scope: !1537, file: !1534, line: 112, type: !1661, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1660, retainedNodes: !6692)
!6692 = !{!6693}
!6693 = !DILocalVariable(name: "this", arg: 1, scope: !6691, type: !6668, flags: DIFlagArtificial | DIFlagObjectPointer)
!6694 = !DILocation(line: 0, scope: !6691)
!6695 = !DILocation(line: 114, column: 12, scope: !6691)
!6696 = !DILocation(line: 114, column: 25, scope: !6691)
!6697 = !DILocation(line: 114, column: 42, scope: !6691)
!6698 = !DILocation(line: 114, column: 47, scope: !6691)
!6699 = !DILocation(line: 114, column: 5, scope: !6691)
!6700 = distinct !DISubprogram(name: "read", linkageName: "_ZN6Cicada12IPCommDevice4readEPhy", scope: !1537, file: !1534, line: 99, type: !1655, scopeLine: 100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1654, retainedNodes: !6701)
!6701 = !{!6702, !6703, !6704}
!6702 = !DILocalVariable(name: "this", arg: 1, scope: !6700, type: !6655, flags: DIFlagArtificial | DIFlagObjectPointer)
!6703 = !DILocalVariable(name: "data", arg: 2, scope: !6700, file: !1534, line: 99, type: !86)
!6704 = !DILocalVariable(name: "maxSize", arg: 3, scope: !6700, file: !1534, line: 99, type: !774)
!6705 = !DILocation(line: 0, scope: !6700)
!6706 = !DILocation(line: 101, column: 12, scope: !6700)
!6707 = !DILocation(line: 101, column: 24, scope: !6700)
!6708 = !DILocation(line: 101, column: 5, scope: !6700)
!6709 = distinct !DISubprogram(name: "write", linkageName: "_ZN6Cicada12IPCommDevice5writeEPKhy", scope: !1537, file: !1534, line: 104, type: !1658, scopeLine: 105, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1657, retainedNodes: !6710)
!6710 = !{!6711, !6712, !6713}
!6711 = !DILocalVariable(name: "this", arg: 1, scope: !6709, type: !6655, flags: DIFlagArtificial | DIFlagObjectPointer)
!6712 = !DILocalVariable(name: "data", arg: 2, scope: !6709, file: !1534, line: 104, type: !847)
!6713 = !DILocalVariable(name: "size", arg: 3, scope: !6709, file: !1534, line: 104, type: !774)
!6714 = !DILocation(line: 0, scope: !6709)
!6715 = !DILocation(line: 106, column: 9, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6709, file: !1534, line: 106, column: 9)
!6717 = !DILocation(line: 106, column: 23, scope: !6716)
!6718 = !DILocation(line: 106, column: 9, scope: !6709)
!6719 = !DILocation(line: 109, column: 12, scope: !6709)
!6720 = !DILocation(line: 109, column: 25, scope: !6709)
!6721 = !DILocation(line: 109, column: 5, scope: !6709)
!6722 = !DILocation(line: 110, column: 1, scope: !6709)
!6723 = distinct !DISubprogram(name: "connect", linkageName: "_ZN6Cicada12IPCommDevice7connectEv", scope: !1537, file: !1534, line: 57, type: !1643, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1642, retainedNodes: !6724)
!6724 = !{!6725}
!6725 = !DILocalVariable(name: "this", arg: 1, scope: !6723, type: !6655, flags: DIFlagArtificial | DIFlagObjectPointer)
!6726 = !DILocation(line: 0, scope: !6723)
!6727 = !DILocation(line: 59, column: 9, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6723, file: !1534, line: 59, column: 9)
!6729 = !{!6680, !2287, i64 124}
!6730 = !DILocation(line: 59, column: 15, scope: !6728)
!6731 = !DILocation(line: 59, column: 23, scope: !6728)
!6732 = !DILocation(line: 62, column: 5, scope: !6723)
!6733 = !DILocation(line: 62, column: 20, scope: !6723)
!6734 = !{!6680, !2140, i64 130}
!6735 = !DILocation(line: 64, column: 5, scope: !6723)
!6736 = !DILocation(line: 65, column: 1, scope: !6723)
!6737 = distinct !DISubprogram(name: "disconnect", linkageName: "_ZN6Cicada12IPCommDevice10disconnectEv", scope: !1537, file: !1534, line: 67, type: !1637, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1645, retainedNodes: !6738)
!6738 = !{!6739}
!6739 = !DILocalVariable(name: "this", arg: 1, scope: !6737, type: !6655, flags: DIFlagArtificial | DIFlagObjectPointer)
!6740 = !DILocation(line: 0, scope: !6737)
!6741 = !DILocation(line: 69, column: 9, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6737, file: !1534, line: 69, column: 9)
!6743 = !DILocation(line: 69, column: 9, scope: !6737)
!6744 = !DILocation(line: 72, column: 5, scope: !6737)
!6745 = !DILocation(line: 72, column: 20, scope: !6737)
!6746 = !DILocation(line: 73, column: 1, scope: !6737)
!6747 = distinct !DISubprogram(name: "isConnected", linkageName: "_ZN6Cicada12IPCommDevice11isConnectedEv", scope: !1537, file: !1534, line: 75, type: !1643, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1646, retainedNodes: !6748)
!6748 = !{!6749}
!6749 = !DILocalVariable(name: "this", arg: 1, scope: !6747, type: !6655, flags: DIFlagArtificial | DIFlagObjectPointer)
!6750 = !DILocation(line: 0, scope: !6747)
!6751 = !DILocation(line: 77, column: 12, scope: !6747)
!6752 = !DILocation(line: 77, column: 39, scope: !6747)
!6753 = !DILocation(line: 77, column: 5, scope: !6747)
!6754 = distinct !DISubprogram(name: "isIdle", linkageName: "_ZN6Cicada12IPCommDevice6isIdleEv", scope: !1537, file: !1534, line: 81, type: !1643, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1647, retainedNodes: !6755)
!6755 = !{!6756}
!6756 = !DILocalVariable(name: "this", arg: 1, scope: !6754, type: !6655, flags: DIFlagArtificial | DIFlagObjectPointer)
!6757 = !DILocation(line: 0, scope: !6754)
!6758 = !DILocation(line: 83, column: 12, scope: !6754)
!6759 = !DILocation(line: 83, column: 26, scope: !6754)
!6760 = !DILocation(line: 83, column: 5, scope: !6754)
!6761 = distinct !DISubprogram(name: "setHostPort", linkageName: "_ZN6Cicada12IPCommDevice11setHostPortEPKctNS_13IIPCommDevice14ConnectionTypeE", scope: !1537, file: !1534, line: 50, type: !1640, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1639, retainedNodes: !6762)
!6762 = !{!6763, !6764, !6765, !6766}
!6763 = !DILocalVariable(name: "this", arg: 1, scope: !6761, type: !6655, flags: DIFlagArtificial | DIFlagObjectPointer)
!6764 = !DILocalVariable(name: "host", arg: 2, scope: !6761, file: !1534, line: 50, type: !799)
!6765 = !DILocalVariable(name: "port", arg: 3, scope: !6761, file: !1534, line: 50, type: !26)
!6766 = !DILocalVariable(name: "type", arg: 4, scope: !6761, file: !1534, line: 50, type: !1566)
!6767 = !DILocation(line: 0, scope: !6761)
!6768 = !DILocation(line: 52, column: 5, scope: !6761)
!6769 = !DILocation(line: 52, column: 11, scope: !6761)
!6770 = !DILocation(line: 53, column: 5, scope: !6761)
!6771 = !DILocation(line: 53, column: 11, scope: !6761)
!6772 = !{!6680, !2139, i64 128}
!6773 = !DILocation(line: 54, column: 5, scope: !6761)
!6774 = !DILocation(line: 54, column: 11, scope: !6761)
!6775 = !{!6680, !6683, i64 120}
!6776 = !DILocation(line: 55, column: 1, scope: !6761)
!6777 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada12IPCommDeviceD1Ev", scope: !861, file: !861, line: 54, type: !6778, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, retainedNodes: !152)
!6778 = !DISubroutineType(types: !152)
!6779 = !DILocation(line: 0, scope: !6777)
!6780 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada12IPCommDeviceD0Ev", scope: !861, file: !861, line: 54, type: !6778, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, retainedNodes: !152)
!6781 = !DILocation(line: 0, scope: !6780)
!6782 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIhE4pushEPKhy", scope: !1572, file: !1573, line: 65, type: !1590, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1589, retainedNodes: !6783)
!6783 = !{!6784, !6786, !6787, !6788}
!6784 = !DILocalVariable(name: "this", arg: 1, scope: !6782, type: !6785, flags: DIFlagArtificial | DIFlagObjectPointer)
!6785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!6786 = !DILocalVariable(name: "data", arg: 2, scope: !6782, file: !1573, line: 65, type: !1592)
!6787 = !DILocalVariable(name: "size", arg: 3, scope: !6782, file: !1573, line: 65, type: !774)
!6788 = !DILocalVariable(name: "writeCount", scope: !6782, file: !1573, line: 70, type: !774)
!6789 = !DILocation(line: 0, scope: !6782)
!6790 = !DILocation(line: 67, column: 20, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6782, file: !1573, line: 67, column: 13)
!6792 = !DILocation(line: 67, column: 18, scope: !6791)
!6793 = !DILocation(line: 67, column: 13, scope: !6782)
!6794 = !DILocation(line: 68, column: 20, scope: !6791)
!6795 = !DILocation(line: 68, column: 13, scope: !6791)
!6796 = !DILocation(line: 72, column: 27, scope: !6782)
!6797 = !DILocation(line: 72, column: 9, scope: !6782)
!6798 = !DILocation(line: 73, column: 50, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6782, file: !1573, line: 72, column: 35)
!6800 = !DILocation(line: 73, column: 35, scope: !6799)
!6801 = !DILocation(line: 73, column: 13, scope: !6799)
!6802 = !{!6681, !2287, i64 40}
!6803 = !DILocation(line: 73, column: 21, scope: !6799)
!6804 = !{!6681, !6682, i64 8}
!6805 = !DILocation(line: 73, column: 33, scope: !6799)
!6806 = !DILocation(line: 74, column: 13, scope: !6799)
!6807 = distinct !{!6807, !6797, !6808, !2129, !2130}
!6808 = !DILocation(line: 75, column: 9, scope: !6782)
!6809 = !DILocation(line: 76, column: 9, scope: !6782)
!6810 = !DILocation(line: 76, column: 24, scope: !6782)
!6811 = !{!6681, !6682, i64 24}
!6812 = !DILocation(line: 78, column: 9, scope: !6782)
!6813 = distinct !DISubprogram(name: "incrementOrResetHead", linkageName: "_ZN6Cicada14CircularBufferIhE20incrementOrResetHeadERy", scope: !1572, file: !1573, line: 202, type: !1617, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1616, retainedNodes: !6814)
!6814 = !{!6815, !6816}
!6815 = !DILocalVariable(name: "this", arg: 1, scope: !6813, type: !6785, flags: DIFlagArtificial | DIFlagObjectPointer)
!6816 = !DILocalVariable(name: "head", arg: 2, scope: !6813, file: !1573, line: 202, type: !1619)
!6817 = !DILocation(line: 0, scope: !6813)
!6818 = !DILocation(line: 204, column: 13, scope: !6813)
!6819 = !{!6682, !6682, i64 0}
!6820 = !DILocation(line: 205, column: 21, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6813, file: !1573, line: 205, column: 13)
!6822 = !{!6681, !6682, i64 32}
!6823 = !DILocation(line: 205, column: 18, scope: !6821)
!6824 = !DILocation(line: 205, column: 13, scope: !6813)
!6825 = !DILocation(line: 207, column: 5, scope: !6813)
!6826 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIhE4pullEPhy", scope: !1572, file: !1573, line: 102, type: !1598, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1597, retainedNodes: !6827)
!6827 = !{!6828, !6829, !6830, !6831}
!6828 = !DILocalVariable(name: "this", arg: 1, scope: !6826, type: !6785, flags: DIFlagArtificial | DIFlagObjectPointer)
!6829 = !DILocalVariable(name: "data", arg: 2, scope: !6826, file: !1573, line: 102, type: !1032)
!6830 = !DILocalVariable(name: "size", arg: 3, scope: !6826, file: !1573, line: 102, type: !774)
!6831 = !DILocalVariable(name: "readCount", scope: !6826, file: !1573, line: 107, type: !774)
!6832 = !DILocation(line: 0, scope: !6826)
!6833 = !DILocation(line: 104, column: 20, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6826, file: !1573, line: 104, column: 13)
!6835 = !DILocation(line: 104, column: 18, scope: !6834)
!6836 = !DILocation(line: 104, column: 13, scope: !6826)
!6837 = !DILocation(line: 105, column: 20, scope: !6834)
!6838 = !DILocation(line: 105, column: 13, scope: !6834)
!6839 = !DILocation(line: 109, column: 26, scope: !6826)
!6840 = !DILocation(line: 109, column: 9, scope: !6826)
!6841 = !DILocation(line: 110, column: 33, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6826, file: !1573, line: 109, column: 34)
!6843 = !DILocation(line: 110, column: 41, scope: !6842)
!6844 = !{!6681, !6682, i64 16}
!6845 = !DILocation(line: 110, column: 27, scope: !6842)
!6846 = !DILocation(line: 110, column: 13, scope: !6842)
!6847 = !DILocation(line: 110, column: 31, scope: !6842)
!6848 = !DILocation(line: 111, column: 13, scope: !6842)
!6849 = distinct !{!6849, !6840, !6850, !2129, !2130}
!6850 = !DILocation(line: 112, column: 9, scope: !6826)
!6851 = !DILocation(line: 113, column: 9, scope: !6826)
!6852 = !DILocation(line: 113, column: 24, scope: !6826)
!6853 = !DILocation(line: 115, column: 9, scope: !6826)
!6854 = distinct !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14CircularBufferIhE14bytesAvailableEv", scope: !1572, file: !1573, line: 174, type: !1612, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1611, retainedNodes: !6855)
!6855 = !{!6856}
!6856 = !DILocalVariable(name: "this", arg: 1, scope: !6854, type: !6857, flags: DIFlagArtificial | DIFlagObjectPointer)
!6857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 32)
!6858 = !DILocation(line: 0, scope: !6854)
!6859 = !DILocation(line: 176, column: 16, scope: !6854)
!6860 = !DILocation(line: 176, column: 9, scope: !6854)
!6861 = distinct !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14CircularBufferIhE14spaceAvailableEv", scope: !1572, file: !1573, line: 182, type: !1612, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1614, retainedNodes: !6862)
!6862 = !{!6863}
!6863 = !DILocalVariable(name: "this", arg: 1, scope: !6861, type: !6857, flags: DIFlagArtificial | DIFlagObjectPointer)
!6864 = !DILocation(line: 0, scope: !6861)
!6865 = !DILocation(line: 184, column: 16, scope: !6861)
!6866 = !DILocation(line: 184, column: 30, scope: !6861)
!6867 = !DILocation(line: 184, column: 28, scope: !6861)
!6868 = !DILocation(line: 184, column: 9, scope: !6861)
!6869 = distinct !DISubprogram(name: "~CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIhED2Ev", scope: !1572, file: !1573, line: 56, type: !1587, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1586, retainedNodes: !6870)
!6870 = !{!6871}
!6871 = !DILocalVariable(name: "this", arg: 1, scope: !6869, type: !6785, flags: DIFlagArtificial | DIFlagObjectPointer)
!6872 = !DILocation(line: 0, scope: !6869)
!6873 = !DILocation(line: 57, column: 7, scope: !6869)
!6874 = distinct !DISubprogram(name: "~Task", linkageName: "_ZN6Cicada4TaskD2Ev", scope: !15, file: !16, line: 198, type: !42, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !41, retainedNodes: !6875)
!6875 = !{!6876}
!6876 = !DILocalVariable(name: "this", arg: 1, scope: !6874, type: !14, flags: DIFlagArtificial | DIFlagObjectPointer)
!6877 = !DILocation(line: 0, scope: !6874)
!6878 = !DILocation(line: 198, column: 22, scope: !6874)
!6879 = distinct !DISubprogram(name: "~ICommDevice", linkageName: "_ZN6Cicada11ICommDeviceD2Ev", scope: !824, file: !825, line: 46, type: !829, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !828, retainedNodes: !6880)
!6880 = !{!6881}
!6881 = !DILocalVariable(name: "this", arg: 1, scope: !6879, type: !6882, flags: DIFlagArtificial | DIFlagObjectPointer)
!6882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 32)
!6883 = !DILocation(line: 0, scope: !6879)
!6884 = !DILocation(line: 46, column: 30, scope: !6879)
!6885 = distinct !DISubprogram(name: "IPCommDevice", linkageName: "_ZN6Cicada12IPCommDeviceC2EPhS1_y", scope: !1537, file: !1534, line: 29, type: !1630, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1629, retainedNodes: !6886)
!6886 = !{!6887, !6888, !6889, !6890}
!6887 = !DILocalVariable(name: "this", arg: 1, scope: !6885, type: !6655, flags: DIFlagArtificial | DIFlagObjectPointer)
!6888 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !6885, file: !1534, line: 29, type: !86)
!6889 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !6885, file: !1534, line: 29, type: !86)
!6890 = !DILocalVariable(name: "bufferSize", arg: 4, scope: !6885, file: !1534, line: 29, type: !774)
!6891 = !DILocation(line: 0, scope: !6885)
!6892 = !DILocation(line: 37, column: 1, scope: !6885)
!6893 = !DILocation(line: 29, column: 15, scope: !6885)
!6894 = !DILocation(line: 30, column: 5, scope: !6885)
!6895 = !DILocation(line: 31, column: 5, scope: !6885)
!6896 = !DILocation(line: 32, column: 5, scope: !6885)
!6897 = !DILocation(line: 33, column: 5, scope: !6885)
!6898 = !DILocation(line: 34, column: 5, scope: !6885)
!6899 = !DILocation(line: 35, column: 5, scope: !6885)
!6900 = !DILocation(line: 36, column: 5, scope: !6885)
!6901 = !{!6680, !2287, i64 136}
!6902 = !DILocation(line: 37, column: 2, scope: !6885)
!6903 = distinct !DISubprogram(name: "IIPCommDevice", linkageName: "_ZN6Cicada13IIPCommDeviceC2Ev", scope: !1540, file: !1541, line: 32, type: !1560, scopeLine: 32, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !6904, retainedNodes: !6905)
!6904 = !DISubprogram(name: "IIPCommDevice", scope: !1540, type: !1560, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6905 = !{!6906}
!6906 = !DILocalVariable(name: "this", arg: 1, scope: !6903, type: !6907, flags: DIFlagArtificial | DIFlagObjectPointer)
!6907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 32)
!6908 = !DILocation(line: 0, scope: !6903)
!6909 = !DILocation(line: 32, column: 7, scope: !6903)
!6910 = distinct !DISubprogram(name: "Task", linkageName: "_ZN6Cicada4TaskC2Et", scope: !15, file: !16, line: 196, type: !38, scopeLine: 196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !37, retainedNodes: !6911)
!6911 = !{!6912, !6913}
!6912 = !DILocalVariable(name: "this", arg: 1, scope: !6910, type: !14, flags: DIFlagArtificial | DIFlagObjectPointer)
!6913 = !DILocalVariable(name: "initialDelay", arg: 2, scope: !6910, file: !16, line: 196, type: !26)
!6914 = !DILocation(line: 0, scope: !6910)
!6915 = !DILocation(line: 196, column: 73, scope: !6910)
!6916 = !DILocation(line: 196, column: 39, scope: !6910)
!6917 = !DILocation(line: 285, column: 10, scope: !6910)
!6918 = !{!2138, !2142, i64 12}
!6919 = !DILocation(line: 196, column: 61, scope: !6910)
!6920 = !{!2138, !2141, i64 16}
!6921 = !DILocation(line: 196, column: 74, scope: !6910)
!6922 = distinct !DISubprogram(name: "CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIhEC2EPhy", scope: !1572, file: !1573, line: 48, type: !1583, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1582, retainedNodes: !6923)
!6923 = !{!6924, !6925, !6926}
!6924 = !DILocalVariable(name: "this", arg: 1, scope: !6922, type: !6785, flags: DIFlagArtificial | DIFlagObjectPointer)
!6925 = !DILocalVariable(name: "buffer", arg: 2, scope: !6922, file: !1573, line: 48, type: !1032)
!6926 = !DILocalVariable(name: "bufferSize", arg: 3, scope: !6922, file: !1573, line: 48, type: !774)
!6927 = !DILocation(line: 0, scope: !6922)
!6928 = !DILocation(line: 54, column: 5, scope: !6922)
!6929 = !DILocation(line: 49, column: 9, scope: !6922)
!6930 = !DILocation(line: 52, column: 9, scope: !6922)
!6931 = !DILocation(line: 50, column: 9, scope: !6922)
!6932 = !DILocation(line: 53, column: 9, scope: !6922)
!6933 = !DILocation(line: 54, column: 7, scope: !6922)
!6934 = distinct !DISubprogram(name: "~CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIhED0Ev", scope: !1572, file: !1573, line: 56, type: !1587, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1586, retainedNodes: !6935)
!6935 = !{!6936}
!6936 = !DILocalVariable(name: "this", arg: 1, scope: !6934, type: !6785, flags: DIFlagArtificial | DIFlagObjectPointer)
!6937 = !DILocation(line: 0, scope: !6934)
!6938 = !DILocation(line: 57, column: 5, scope: !6934)
!6939 = !DILocation(line: 57, column: 7, scope: !6934)
!6940 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIhE4pushEh", scope: !1572, file: !1573, line: 88, type: !1595, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1594, retainedNodes: !6941)
!6941 = !{!6942, !6943}
!6942 = !DILocalVariable(name: "this", arg: 1, scope: !6940, type: !6785, flags: DIFlagArtificial | DIFlagObjectPointer)
!6943 = !DILocalVariable(name: "data", arg: 2, scope: !6940, file: !1573, line: 88, type: !89)
!6944 = !DILocation(line: 0, scope: !6940)
!6945 = !DILocation(line: 90, column: 9, scope: !6940)
!6946 = !DILocation(line: 90, column: 17, scope: !6940)
!6947 = !DILocation(line: 90, column: 29, scope: !6940)
!6948 = !DILocation(line: 91, column: 9, scope: !6940)
!6949 = !DILocation(line: 92, column: 13, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6940, file: !1573, line: 92, column: 13)
!6951 = !DILocation(line: 92, column: 30, scope: !6950)
!6952 = !DILocation(line: 92, column: 28, scope: !6950)
!6953 = !DILocation(line: 92, column: 13, scope: !6940)
!6954 = !DILocation(line: 93, column: 27, scope: !6950)
!6955 = !DILocation(line: 93, column: 13, scope: !6950)
!6956 = !DILocation(line: 94, column: 5, scope: !6940)
!6957 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIhE4pullEv", scope: !1572, file: !1573, line: 124, type: !1601, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1600, retainedNodes: !6958)
!6958 = !{!6959, !6960}
!6959 = !DILocalVariable(name: "this", arg: 1, scope: !6957, type: !6785, flags: DIFlagArtificial | DIFlagObjectPointer)
!6960 = !DILocalVariable(name: "data", scope: !6957, file: !1573, line: 126, type: !89)
!6961 = !DILocation(line: 0, scope: !6957)
!6962 = !DILocation(line: 126, column: 18, scope: !6957)
!6963 = !DILocation(line: 126, column: 26, scope: !6957)
!6964 = !DILocation(line: 127, column: 9, scope: !6957)
!6965 = !DILocation(line: 128, column: 13, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6957, file: !1573, line: 128, column: 13)
!6967 = !DILocation(line: 128, column: 28, scope: !6966)
!6968 = !DILocation(line: 128, column: 13, scope: !6957)
!6969 = !DILocation(line: 129, column: 27, scope: !6966)
!6970 = !DILocation(line: 129, column: 13, scope: !6966)
!6971 = !DILocation(line: 131, column: 9, scope: !6957)
!6972 = distinct !DISubprogram(name: "read", linkageName: "_ZN6Cicada14CircularBufferIhE4readEv", scope: !1572, file: !1573, line: 140, type: !1601, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1603, retainedNodes: !6973)
!6973 = !{!6974}
!6974 = !DILocalVariable(name: "this", arg: 1, scope: !6972, type: !6785, flags: DIFlagArtificial | DIFlagObjectPointer)
!6975 = !DILocation(line: 0, scope: !6972)
!6976 = !DILocation(line: 142, column: 16, scope: !6972)
!6977 = !DILocation(line: 142, column: 24, scope: !6972)
!6978 = !DILocation(line: 142, column: 9, scope: !6972)
!6979 = distinct !DISubprogram(name: "flush", linkageName: "_ZN6Cicada14CircularBufferIhE5flushEv", scope: !1572, file: !1573, line: 148, type: !1587, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1604, retainedNodes: !6980)
!6980 = !{!6981}
!6981 = !DILocalVariable(name: "this", arg: 1, scope: !6979, type: !6785, flags: DIFlagArtificial | DIFlagObjectPointer)
!6982 = !DILocation(line: 0, scope: !6979)
!6983 = !DILocation(line: 150, column: 9, scope: !6979)
!6984 = !DILocation(line: 153, column: 5, scope: !6979)
!6985 = !DILocation(line: 151, column: 19, scope: !6979)
!6986 = distinct !DISubprogram(name: "isEmpty", linkageName: "_ZNK6Cicada14CircularBufferIhE7isEmptyEv", scope: !1572, file: !1573, line: 158, type: !1606, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1605, retainedNodes: !6987)
!6987 = !{!6988}
!6988 = !DILocalVariable(name: "this", arg: 1, scope: !6986, type: !6857, flags: DIFlagArtificial | DIFlagObjectPointer)
!6989 = !DILocation(line: 0, scope: !6986)
!6990 = !DILocation(line: 160, column: 16, scope: !6986)
!6991 = !DILocation(line: 160, column: 31, scope: !6986)
!6992 = !DILocation(line: 160, column: 9, scope: !6986)
!6993 = distinct !DISubprogram(name: "isFull", linkageName: "_ZNK6Cicada14CircularBufferIhE6isFullEv", scope: !1572, file: !1573, line: 166, type: !1606, scopeLine: 167, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1610, retainedNodes: !6994)
!6994 = !{!6995}
!6995 = !DILocalVariable(name: "this", arg: 1, scope: !6993, type: !6857, flags: DIFlagArtificial | DIFlagObjectPointer)
!6996 = !DILocation(line: 0, scope: !6993)
!6997 = !DILocation(line: 168, column: 16, scope: !6993)
!6998 = !DILocation(line: 168, column: 34, scope: !6993)
!6999 = !DILocation(line: 168, column: 31, scope: !6993)
!7000 = !DILocation(line: 168, column: 9, scope: !6993)
!7001 = distinct !DISubprogram(name: "size", linkageName: "_ZNK6Cicada14CircularBufferIhE4sizeEv", scope: !1572, file: !1573, line: 190, type: !1612, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1615, retainedNodes: !7002)
!7002 = !{!7003}
!7003 = !DILocalVariable(name: "this", arg: 1, scope: !7001, type: !6857, flags: DIFlagArtificial | DIFlagObjectPointer)
!7004 = !DILocation(line: 0, scope: !7001)
!7005 = !DILocation(line: 192, column: 16, scope: !7001)
!7006 = !DILocation(line: 192, column: 9, scope: !7001)
!7007 = distinct !DISubprogram(name: "~Task", linkageName: "_ZN6Cicada4TaskD0Ev", scope: !15, file: !16, line: 198, type: !42, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !41, retainedNodes: !7008)
!7008 = !{!7009}
!7009 = !DILocalVariable(name: "this", arg: 1, scope: !7007, type: !14, flags: DIFlagArtificial | DIFlagObjectPointer)
!7010 = !DILocation(line: 0, scope: !7007)
!7011 = !DILocation(line: 198, column: 21, scope: !7007)
!7012 = distinct !DISubprogram(name: "IStatefulDevice", linkageName: "_ZN6Cicada15IStatefulDeviceC2Ev", scope: !1544, file: !1545, line: 38, type: !1549, scopeLine: 38, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !7013, retainedNodes: !7014)
!7013 = !DISubprogram(name: "IStatefulDevice", scope: !1544, type: !1549, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7014 = !{!7015}
!7015 = !DILocalVariable(name: "this", arg: 1, scope: !7012, type: !7016, flags: DIFlagArtificial | DIFlagObjectPointer)
!7016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 32)
!7017 = !DILocation(line: 0, scope: !7012)
!7018 = !DILocation(line: 38, column: 7, scope: !7012)
!7019 = distinct !DISubprogram(name: "~IIPCommDevice", linkageName: "_ZN6Cicada13IIPCommDeviceD0Ev", scope: !1540, file: !1541, line: 35, type: !1560, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1559, retainedNodes: !7020)
!7020 = !{!7021}
!7021 = !DILocalVariable(name: "this", arg: 1, scope: !7019, type: !6907, flags: DIFlagArtificial | DIFlagObjectPointer)
!7022 = !DILocation(line: 0, scope: !7019)
!7023 = !DILocation(line: 35, column: 30, scope: !7019)
!7024 = distinct !DISubprogram(name: "ICommDevice", linkageName: "_ZN6Cicada11ICommDeviceC2Ev", scope: !824, file: !825, line: 43, type: !829, scopeLine: 43, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !7025, retainedNodes: !7026)
!7025 = !DISubprogram(name: "ICommDevice", scope: !824, type: !829, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7026 = !{!7027}
!7027 = !DILocalVariable(name: "this", arg: 1, scope: !7024, type: !6882, flags: DIFlagArtificial | DIFlagObjectPointer)
!7028 = !DILocation(line: 0, scope: !7024)
!7029 = !DILocation(line: 43, column: 7, scope: !7024)
!7030 = distinct !DISubprogram(name: "~IStatefulDevice", linkageName: "_ZN6Cicada15IStatefulDeviceD0Ev", scope: !1544, file: !1545, line: 41, type: !1549, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1548, retainedNodes: !7031)
!7031 = !{!7032}
!7032 = !DILocalVariable(name: "this", arg: 1, scope: !7030, type: !7016, flags: DIFlagArtificial | DIFlagObjectPointer)
!7033 = !DILocation(line: 0, scope: !7030)
!7034 = !DILocation(line: 41, column: 32, scope: !7030)
!7035 = distinct !DISubprogram(name: "~ICommDevice", linkageName: "_ZN6Cicada11ICommDeviceD0Ev", scope: !824, file: !825, line: 46, type: !829, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !828, retainedNodes: !7036)
!7036 = !{!7037}
!7037 = !DILocalVariable(name: "this", arg: 1, scope: !7035, type: !6882, flags: DIFlagArtificial | DIFlagObjectPointer)
!7038 = !DILocation(line: 0, scope: !7035)
!7039 = !DILocation(line: 46, column: 28, scope: !7035)
!7040 = distinct !DISubprogram(name: "IPCommDevice", linkageName: "_ZN6Cicada12IPCommDeviceC2EPhS1_yy", scope: !1537, file: !1534, line: 39, type: !1634, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1533, declaration: !1633, retainedNodes: !7041)
!7041 = !{!7042, !7043, !7044, !7045, !7046}
!7042 = !DILocalVariable(name: "this", arg: 1, scope: !7040, type: !6655, flags: DIFlagArtificial | DIFlagObjectPointer)
!7043 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !7040, file: !1534, line: 40, type: !86)
!7044 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !7040, file: !1534, line: 40, type: !86)
!7045 = !DILocalVariable(name: "readBufferSize", arg: 4, scope: !7040, file: !1534, line: 40, type: !774)
!7046 = !DILocalVariable(name: "writeBufferSize", arg: 5, scope: !7040, file: !1534, line: 40, type: !774)
!7047 = !DILocation(line: 0, scope: !7040)
!7048 = !DILocation(line: 48, column: 1, scope: !7040)
!7049 = !DILocation(line: 39, column: 15, scope: !7040)
!7050 = !DILocation(line: 41, column: 5, scope: !7040)
!7051 = !DILocation(line: 42, column: 5, scope: !7040)
!7052 = !DILocation(line: 43, column: 5, scope: !7040)
!7053 = !DILocation(line: 44, column: 5, scope: !7040)
!7054 = !DILocation(line: 45, column: 5, scope: !7040)
!7055 = !DILocation(line: 46, column: 5, scope: !7040)
!7056 = !DILocation(line: 47, column: 5, scope: !7040)
!7057 = !DILocation(line: 48, column: 2, scope: !7040)
!7058 = distinct !DISubprogram(name: "~SimCommDevice", linkageName: "_ZN6Cicada13SimCommDeviceD0Ev", scope: !1679, file: !1678, line: 40, type: !1697, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1674, declaration: !1696, retainedNodes: !7059)
!7059 = !{!7060}
!7060 = !DILocalVariable(name: "this", arg: 1, scope: !7058, type: !7061, flags: DIFlagArtificial | DIFlagObjectPointer)
!7061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 32)
!7062 = !DILocation(line: 0, scope: !7058)
!7063 = !DILocation(line: 40, column: 30, scope: !7058)
!7064 = distinct !DISubprogram(name: "connect", linkageName: "_ZN6Cicada13SimCommDevice7connectEv", scope: !1679, file: !1675, line: 88, type: !1704, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1674, declaration: !1703, retainedNodes: !7065)
!7065 = !{!7066}
!7066 = !DILocalVariable(name: "this", arg: 1, scope: !7064, type: !7061, flags: DIFlagArtificial | DIFlagObjectPointer)
!7067 = !DILocation(line: 0, scope: !7064)
!7068 = !DILocation(line: 90, column: 9, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7064, file: !1675, line: 90, column: 9)
!7070 = !{!7071, !2287, i64 232}
!7071 = !{!"_ZTSN6Cicada13SimCommDeviceE", !2287, i64 232, !2140, i64 236, !2140, i64 252, !2140, i64 276, !2139, i64 278}
!7072 = !DILocation(line: 90, column: 14, scope: !7069)
!7073 = !DILocation(line: 90, column: 9, scope: !7064)
!7074 = !DILocation(line: 93, column: 26, scope: !7064)
!7075 = !DILocation(line: 93, column: 5, scope: !7064)
!7076 = !DILocation(line: 94, column: 1, scope: !7064)
!7077 = distinct !DISubprogram(name: "resetStates", linkageName: "_ZN6Cicada13SimCommDevice11resetStatesEv", scope: !1679, file: !1675, line: 46, type: !1697, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1674, declaration: !1699, retainedNodes: !7078)
!7078 = !{!7079}
!7079 = !DILocalVariable(name: "this", arg: 1, scope: !7077, type: !7061, flags: DIFlagArtificial | DIFlagObjectPointer)
!7080 = !DILocation(line: 0, scope: !7077)
!7081 = !DILocation(line: 48, column: 5, scope: !7077)
!7082 = !{!7083, !2287, i64 140}
!7083 = !{!"_ZTSN6Cicada12ATCommDeviceE", !2287, i64 140, !2140, i64 144, !2140, i64 205, !2140, i64 206, !2140, i64 207, !6682, i64 208, !6682, i64 216, !6682, i64 224}
!7084 = !DILocation(line: 48, column: 13, scope: !7077)
!7085 = !DILocation(line: 49, column: 5, scope: !7077)
!7086 = !DILocation(line: 49, column: 17, scope: !7077)
!7087 = !DILocation(line: 50, column: 5, scope: !7077)
!7088 = !DILocation(line: 50, column: 18, scope: !7077)
!7089 = !DILocation(line: 51, column: 5, scope: !7077)
!7090 = !DILocation(line: 54, column: 5, scope: !7077)
!7091 = !DILocation(line: 54, column: 19, scope: !7077)
!7092 = !DILocation(line: 58, column: 5, scope: !7077)
!7093 = !DILocation(line: 58, column: 19, scope: !7077)
!7094 = !DILocation(line: 59, column: 5, scope: !7077)
!7095 = !DILocation(line: 52, column: 16, scope: !7077)
!7096 = !DILocation(line: 59, column: 20, scope: !7077)
!7097 = !DILocation(line: 60, column: 5, scope: !7077)
!7098 = !DILocation(line: 60, column: 11, scope: !7077)
!7099 = !{!7071, !2140, i64 276}
!7100 = !DILocation(line: 61, column: 5, scope: !7077)
!7101 = !DILocation(line: 61, column: 24, scope: !7077)
!7102 = !DILocation(line: 62, column: 5, scope: !7077)
!7103 = !DILocation(line: 62, column: 24, scope: !7077)
!7104 = !DILocation(line: 63, column: 1, scope: !7077)
!7105 = distinct !DISubprogram(name: "setApn", linkageName: "_ZN6Cicada13SimCommDevice6setApnEPKc", scope: !1679, file: !1675, line: 83, type: !1701, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1674, declaration: !1700, retainedNodes: !7106)
!7106 = !{!7107, !7108}
!7107 = !DILocalVariable(name: "this", arg: 1, scope: !7105, type: !7061, flags: DIFlagArtificial | DIFlagObjectPointer)
!7108 = !DILocalVariable(name: "apn", arg: 2, scope: !7105, file: !1675, line: 83, type: !799)
!7109 = !DILocation(line: 0, scope: !7105)
!7110 = !DILocation(line: 85, column: 5, scope: !7105)
!7111 = !DILocation(line: 85, column: 10, scope: !7105)
!7112 = !DILocation(line: 86, column: 1, scope: !7105)
!7113 = distinct !DISubprogram(name: "serialLock", linkageName: "_ZN6Cicada13SimCommDevice10serialLockEv", scope: !1679, file: !1675, line: 96, type: !1704, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1674, declaration: !1706, retainedNodes: !7114)
!7114 = !{!7115}
!7115 = !DILocalVariable(name: "this", arg: 1, scope: !7113, type: !7061, flags: DIFlagArtificial | DIFlagObjectPointer)
!7116 = !DILocation(line: 0, scope: !7113)
!7117 = !DILocation(line: 98, column: 9, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7113, file: !1675, line: 98, column: 9)
!7119 = !DILocation(line: 98, column: 23, scope: !7118)
!7120 = !DILocation(line: 101, column: 5, scope: !7113)
!7121 = !DILocation(line: 101, column: 20, scope: !7113)
!7122 = !DILocation(line: 102, column: 5, scope: !7113)
!7123 = !DILocation(line: 103, column: 1, scope: !7113)
!7124 = distinct !DISubprogram(name: "serialUnlock", linkageName: "_ZN6Cicada13SimCommDevice12serialUnlockEv", scope: !1679, file: !1675, line: 105, type: !1697, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1674, declaration: !1707, retainedNodes: !7125)
!7125 = !{!7126}
!7126 = !DILocalVariable(name: "this", arg: 1, scope: !7124, type: !7061, flags: DIFlagArtificial | DIFlagObjectPointer)
!7127 = !DILocation(line: 0, scope: !7124)
!7128 = !DILocation(line: 107, column: 5, scope: !7124)
!7129 = !DILocation(line: 107, column: 20, scope: !7124)
!7130 = !DILocation(line: 108, column: 1, scope: !7124)
!7131 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada13SimCommDeviceD1Ev", scope: !1678, file: !1678, line: 40, type: !6778, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1674, retainedNodes: !152)
!7132 = !DILocation(line: 0, scope: !7131)
!7133 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada13SimCommDeviceD0Ev", scope: !1678, file: !1678, line: 40, type: !6778, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1674, retainedNodes: !152)
!7134 = !DILocation(line: 0, scope: !7133)
!7135 = distinct !DISubprogram(name: "SimCommDevice", linkageName: "_ZN6Cicada13SimCommDeviceC2ERNS_15IBufferedSerialEPhS3_y", scope: !1679, file: !1675, line: 32, type: !1690, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1674, declaration: !1689, retainedNodes: !7136)
!7136 = !{!7137, !7138, !7139, !7140, !7141}
!7137 = !DILocalVariable(name: "this", arg: 1, scope: !7135, type: !7061, flags: DIFlagArtificial | DIFlagObjectPointer)
!7138 = !DILocalVariable(name: "serial", arg: 2, scope: !7135, file: !1675, line: 33, type: !863)
!7139 = !DILocalVariable(name: "readBuffer", arg: 3, scope: !7135, file: !1675, line: 33, type: !86)
!7140 = !DILocalVariable(name: "writeBuffer", arg: 4, scope: !7135, file: !1675, line: 33, type: !86)
!7141 = !DILocalVariable(name: "bufferSize", arg: 5, scope: !7135, file: !1675, line: 33, type: !774)
!7142 = !DILocation(line: 0, scope: !7135)
!7143 = !DILocation(line: 35, column: 1, scope: !7135)
!7144 = !DILocation(line: 34, column: 5, scope: !7135)
!7145 = !DILocation(line: 34, column: 64, scope: !7135)
!7146 = !DILocation(line: 36, column: 5, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7135, file: !1675, line: 35, column: 1)
!7148 = !DILocation(line: 37, column: 1, scope: !7135)
!7149 = distinct !DISubprogram(name: "SimCommDevice", linkageName: "_ZN6Cicada13SimCommDeviceC2ERNS_15IBufferedSerialEPhS3_yy", scope: !1679, file: !1675, line: 39, type: !1694, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1674, declaration: !1693, retainedNodes: !7150)
!7150 = !{!7151, !7152, !7153, !7154, !7155, !7156}
!7151 = !DILocalVariable(name: "this", arg: 1, scope: !7149, type: !7061, flags: DIFlagArtificial | DIFlagObjectPointer)
!7152 = !DILocalVariable(name: "serial", arg: 2, scope: !7149, file: !1675, line: 39, type: !863)
!7153 = !DILocalVariable(name: "readBuffer", arg: 3, scope: !7149, file: !1675, line: 39, type: !86)
!7154 = !DILocalVariable(name: "writeBuffer", arg: 4, scope: !7149, file: !1675, line: 39, type: !86)
!7155 = !DILocalVariable(name: "readBufferSize", arg: 5, scope: !7149, file: !1675, line: 40, type: !774)
!7156 = !DILocalVariable(name: "writeBufferSize", arg: 6, scope: !7149, file: !1675, line: 40, type: !774)
!7157 = !DILocation(line: 0, scope: !7149)
!7158 = !DILocation(line: 42, column: 1, scope: !7149)
!7159 = !DILocation(line: 41, column: 5, scope: !7149)
!7160 = !DILocation(line: 41, column: 85, scope: !7149)
!7161 = !DILocation(line: 43, column: 5, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7149, file: !1675, line: 42, column: 1)
!7163 = !DILocation(line: 44, column: 1, scope: !7149)
!7164 = distinct !DISubprogram(name: "fillLineBuffer", linkageName: "_ZN6Cicada13SimCommDevice14fillLineBufferEv", scope: !1679, file: !1675, line: 65, type: !1704, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1674, declaration: !1718, retainedNodes: !7165)
!7165 = !{!7166, !7167}
!7166 = !DILocalVariable(name: "this", arg: 1, scope: !7164, type: !7061, flags: DIFlagArtificial | DIFlagObjectPointer)
!7167 = !DILocalVariable(name: "c", scope: !7168, file: !1675, line: 71, type: !164)
!7168 = distinct !DILexicalBlock(scope: !7169, file: !1675, line: 70, column: 42)
!7169 = distinct !DILexicalBlock(scope: !7170, file: !1675, line: 69, column: 37)
!7170 = distinct !DILexicalBlock(scope: !7164, file: !1675, line: 69, column: 9)
!7171 = !DILocation(line: 0, scope: !7164)
!7172 = !DILocation(line: 69, column: 9, scope: !7170)
!7173 = !DILocation(line: 69, column: 24, scope: !7170)
!7174 = !DILocation(line: 69, column: 9, scope: !7164)
!7175 = !DILocation(line: 70, column: 9, scope: !7169)
!7176 = !DILocation(line: 70, column: 16, scope: !7169)
!7177 = !DILocation(line: 70, column: 24, scope: !7169)
!7178 = !DILocation(line: 71, column: 22, scope: !7168)
!7179 = !DILocation(line: 71, column: 30, scope: !7168)
!7180 = !DILocation(line: 0, scope: !7168)
!7181 = !DILocation(line: 72, column: 32, scope: !7168)
!7182 = !{!7083, !2140, i64 205}
!7183 = !DILocation(line: 72, column: 13, scope: !7168)
!7184 = !DILocation(line: 72, column: 36, scope: !7168)
!7185 = !DILocation(line: 73, column: 27, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7168, file: !1675, line: 73, column: 17)
!7187 = !DILocation(line: 73, column: 42, scope: !7186)
!7188 = !DILocation(line: 73, column: 50, scope: !7186)
!7189 = !DILocation(line: 73, column: 17, scope: !7168)
!7190 = !DILocation(line: 74, column: 29, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7186, file: !1675, line: 73, column: 70)
!7192 = !DILocation(line: 74, column: 17, scope: !7191)
!7193 = !DILocation(line: 74, column: 38, scope: !7191)
!7194 = !DILocation(line: 75, column: 25, scope: !7191)
!7195 = !DILocation(line: 81, column: 1, scope: !7164)
!7196 = distinct !DISubprogram(name: "parseDnsReply", linkageName: "_ZN6Cicada13SimCommDevice13parseDnsReplyEv", scope: !1679, file: !1675, line: 110, type: !1704, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1674, declaration: !1719, retainedNodes: !7197)
!7197 = !{!7198, !7199, !7202, !7203}
!7198 = !DILocalVariable(name: "this", arg: 1, scope: !7196, type: !7061, flags: DIFlagArtificial | DIFlagObjectPointer)
!7199 = !DILocalVariable(name: "tmpStr", scope: !7200, file: !1675, line: 113, type: !261)
!7200 = distinct !DILexicalBlock(scope: !7201, file: !1675, line: 112, column: 55)
!7201 = distinct !DILexicalBlock(scope: !7196, file: !1675, line: 112, column: 9)
!7202 = !DILocalVariable(name: "i", scope: !7200, file: !1675, line: 114, type: !87)
!7203 = !DILocalVariable(name: "q", scope: !7200, file: !1675, line: 114, type: !87)
!7204 = !DILocation(line: 0, scope: !7196)
!7205 = !DILocation(line: 112, column: 17, scope: !7201)
!7206 = !DILocation(line: 112, column: 9, scope: !7201)
!7207 = !DILocation(line: 112, column: 49, scope: !7201)
!7208 = !DILocation(line: 112, column: 9, scope: !7196)
!7209 = !DILocation(line: 0, scope: !7200)
!7210 = !DILocation(line: 117, column: 16, scope: !7200)
!7211 = !DILocation(line: 117, column: 9, scope: !7200)
!7212 = !DILocation(line: 118, column: 30, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7214, file: !1675, line: 118, column: 17)
!7214 = distinct !DILexicalBlock(scope: !7200, file: !1675, line: 117, column: 32)
!7215 = !DILocation(line: 118, column: 34, scope: !7213)
!7216 = !DILocation(line: 118, column: 17, scope: !7214)
!7217 = distinct !{!7217, !7211, !7218, !2129, !2130}
!7218 = !DILocation(line: 120, column: 9, scope: !7200)
!7219 = !DILocation(line: 121, column: 19, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7200, file: !1675, line: 121, column: 13)
!7221 = !DILocation(line: 123, column: 13, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7220, file: !1675, line: 121, column: 30)
!7223 = !DILocation(line: 123, column: 27, scope: !7222)
!7224 = !DILocation(line: 124, column: 13, scope: !7222)
!7225 = !DILocation(line: 130, column: 30, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7200, file: !1675, line: 130, column: 17)
!7227 = !DILocation(line: 130, column: 17, scope: !7226)
!7228 = !DILocation(line: 130, column: 34, scope: !7226)
!7229 = !DILocation(line: 130, column: 17, scope: !7200)
!7230 = !DILocation(line: 129, column: 18, scope: !7200)
!7231 = !DILocation(line: 129, column: 9, scope: !7200)
!7232 = distinct !{!7232, !7231, !7233, !2129, !2130}
!7233 = !DILocation(line: 131, column: 18, scope: !7200)
!7234 = !DILocation(line: 132, column: 32, scope: !7200)
!7235 = !DILocation(line: 133, column: 9, scope: !7200)
!7236 = !DILocation(line: 133, column: 16, scope: !7200)
!7237 = !DILocation(line: 135, column: 32, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7239, file: !1675, line: 134, column: 17)
!7239 = distinct !DILexicalBlock(scope: !7200, file: !1675, line: 133, column: 32)
!7240 = !DILocation(line: 135, column: 17, scope: !7238)
!7241 = !DILocation(line: 136, column: 14, scope: !7239)
!7242 = distinct !{!7242, !7235, !7243, !2129, !2130}
!7243 = !DILocation(line: 137, column: 9, scope: !7200)
!7244 = !DILocation(line: 132, column: 30, scope: !7200)
!7245 = !DILocation(line: 138, column: 16, scope: !7200)
!7246 = !DILocation(line: 138, column: 9, scope: !7200)
!7247 = !DILocation(line: 139, column: 9, scope: !7200)
!7248 = !DILocation(line: 140, column: 16, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7201, file: !1675, line: 140, column: 16)
!7250 = !DILocation(line: 140, column: 56, scope: !7249)
!7251 = !DILocation(line: 140, column: 16, scope: !7201)
!7252 = !DILocation(line: 141, column: 9, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7249, file: !1675, line: 140, column: 62)
!7254 = !DILocation(line: 141, column: 24, scope: !7253)
!7255 = !DILocation(line: 142, column: 5, scope: !7253)
!7256 = !DILocation(line: 145, column: 1, scope: !7196)
!7257 = distinct !DISubprogram(name: "parseCiprxget4", linkageName: "_ZN6Cicada13SimCommDevice14parseCiprxget4Ev", scope: !1679, file: !1675, line: 147, type: !1704, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1674, declaration: !1720, retainedNodes: !7258)
!7258 = !{!7259, !7260}
!7259 = !DILocalVariable(name: "this", arg: 1, scope: !7257, type: !7061, flags: DIFlagArtificial | DIFlagObjectPointer)
!7260 = !DILocalVariable(name: "bytesToReceive", scope: !7261, file: !1675, line: 150, type: !24)
!7261 = distinct !DILexicalBlock(scope: !7262, file: !1675, line: 149, column: 59)
!7262 = distinct !DILexicalBlock(scope: !7257, file: !1675, line: 149, column: 9)
!7263 = !DILocation(line: 0, scope: !7257)
!7264 = !DILocation(line: 149, column: 17, scope: !7262)
!7265 = !DILocation(line: 149, column: 9, scope: !7262)
!7266 = !DILocation(line: 149, column: 53, scope: !7262)
!7267 = !DILocation(line: 149, column: 9, scope: !7257)
!7268 = !DILocation(line: 150, column: 9, scope: !7261)
!7269 = !DILocation(line: 151, column: 28, scope: !7261)
!7270 = !DILocation(line: 0, scope: !7261)
!7271 = !DILocation(line: 151, column: 9, scope: !7261)
!7272 = !DILocation(line: 152, column: 28, scope: !7261)
!7273 = !DILocation(line: 152, column: 9, scope: !7261)
!7274 = !DILocation(line: 152, column: 25, scope: !7261)
!7275 = !{!7083, !6682, i64 216}
!7276 = !DILocation(line: 154, column: 5, scope: !7262)
!7277 = !DILocation(line: 156, column: 1, scope: !7257)
!7278 = distinct !DISubprogram(name: "parseCiprxget2", linkageName: "_ZN6Cicada13SimCommDevice14parseCiprxget2Ev", scope: !1679, file: !1675, line: 158, type: !1704, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1674, declaration: !1721, retainedNodes: !7279)
!7279 = !{!7280, !7281}
!7280 = !DILocalVariable(name: "this", arg: 1, scope: !7278, type: !7061, flags: DIFlagArtificial | DIFlagObjectPointer)
!7281 = !DILocalVariable(name: "bytesToReceive", scope: !7282, file: !1675, line: 161, type: !24)
!7282 = distinct !DILexicalBlock(scope: !7283, file: !1675, line: 160, column: 59)
!7283 = distinct !DILexicalBlock(scope: !7278, file: !1675, line: 160, column: 9)
!7284 = !DILocation(line: 0, scope: !7278)
!7285 = !DILocation(line: 160, column: 17, scope: !7283)
!7286 = !DILocation(line: 160, column: 9, scope: !7283)
!7287 = !DILocation(line: 160, column: 53, scope: !7283)
!7288 = !DILocation(line: 160, column: 9, scope: !7278)
!7289 = !DILocation(line: 161, column: 9, scope: !7282)
!7290 = !DILocation(line: 162, column: 28, scope: !7282)
!7291 = !DILocation(line: 0, scope: !7282)
!7292 = !DILocation(line: 162, column: 9, scope: !7282)
!7293 = !DILocation(line: 163, column: 28, scope: !7282)
!7294 = !DILocation(line: 163, column: 9, scope: !7282)
!7295 = !DILocation(line: 163, column: 25, scope: !7282)
!7296 = !DILocation(line: 164, column: 9, scope: !7282)
!7297 = !DILocation(line: 164, column: 22, scope: !7282)
!7298 = !{!7083, !6682, i64 224}
!7299 = !DILocation(line: 165, column: 9, scope: !7282)
!7300 = !DILocation(line: 165, column: 24, scope: !7282)
!7301 = !DILocation(line: 167, column: 5, scope: !7283)
!7302 = !DILocation(line: 169, column: 1, scope: !7278)
!7303 = distinct !DISubprogram(name: "parseCsq", linkageName: "_ZN6Cicada13SimCommDevice8parseCsqEv", scope: !1679, file: !1675, line: 171, type: !1704, scopeLine: 172, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1674, declaration: !1722, retainedNodes: !7304)
!7304 = !{!7305, !7306}
!7305 = !DILocalVariable(name: "this", arg: 1, scope: !7303, type: !7061, flags: DIFlagArtificial | DIFlagObjectPointer)
!7306 = !DILocalVariable(name: "rssi", scope: !7307, file: !1675, line: 174, type: !7)
!7307 = distinct !DILexicalBlock(scope: !7308, file: !1675, line: 173, column: 49)
!7308 = distinct !DILexicalBlock(scope: !7303, file: !1675, line: 173, column: 9)
!7309 = !DILocation(line: 0, scope: !7303)
!7310 = !DILocation(line: 173, column: 17, scope: !7308)
!7311 = !DILocation(line: 173, column: 9, scope: !7308)
!7312 = !DILocation(line: 173, column: 43, scope: !7308)
!7313 = !DILocation(line: 173, column: 9, scope: !7303)
!7314 = !DILocation(line: 174, column: 9, scope: !7307)
!7315 = !DILocation(line: 175, column: 32, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7307, file: !1675, line: 175, column: 13)
!7317 = !DILocation(line: 0, scope: !7307)
!7318 = !DILocation(line: 175, column: 13, scope: !7316)
!7319 = !DILocation(line: 175, column: 50, scope: !7316)
!7320 = !DILocation(line: 175, column: 13, scope: !7307)
!7321 = !DILocation(line: 176, column: 21, scope: !7322)
!7322 = distinct !DILexicalBlock(scope: !7316, file: !1675, line: 175, column: 56)
!7323 = !DILocation(line: 176, column: 13, scope: !7322)
!7324 = !DILocation(line: 176, column: 19, scope: !7322)
!7325 = !DILocation(line: 177, column: 9, scope: !7322)
!7326 = !DILocation(line: 179, column: 5, scope: !7308)
!7327 = !DILocation(line: 181, column: 1, scope: !7303)
!7328 = distinct !DISubprogram(name: "parseIDReply", linkageName: "_ZN6Cicada13SimCommDevice12parseIDReplyEv", scope: !1679, file: !1675, line: 183, type: !1704, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1674, declaration: !1723, retainedNodes: !7329)
!7329 = !{!7330, !7331, !7332}
!7330 = !DILocalVariable(name: "this", arg: 1, scope: !7328, type: !7061, flags: DIFlagArtificial | DIFlagObjectPointer)
!7331 = !DILocalVariable(name: "src", scope: !7328, file: !1675, line: 190, type: !261)
!7332 = !DILocalVariable(name: "copiedChars", scope: !7328, file: !1675, line: 197, type: !24)
!7333 = !DILocation(line: 0, scope: !7328)
!7334 = !DILocation(line: 186, column: 17, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7328, file: !1675, line: 186, column: 9)
!7336 = !DILocation(line: 186, column: 9, scope: !7335)
!7337 = !DILocation(line: 186, column: 39, scope: !7335)
!7338 = !DILocation(line: 186, column: 44, scope: !7335)
!7339 = !DILocation(line: 193, column: 9, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7328, file: !1675, line: 193, column: 9)
!7341 = !DILocation(line: 193, column: 45, scope: !7340)
!7342 = !DILocation(line: 193, column: 9, scope: !7328)
!7343 = !DILocation(line: 198, column: 12, scope: !7328)
!7344 = !DILocation(line: 198, column: 17, scope: !7328)
!7345 = !DILocation(line: 198, column: 5, scope: !7328)
!7346 = !DILocation(line: 199, column: 46, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7328, file: !1675, line: 198, column: 67)
!7348 = !DILocation(line: 199, column: 36, scope: !7347)
!7349 = !DILocation(line: 199, column: 9, scope: !7347)
!7350 = !DILocation(line: 199, column: 40, scope: !7347)
!7351 = !DILocation(line: 198, column: 25, scope: !7328)
!7352 = distinct !{!7352, !7345, !7353, !2129, !2130}
!7353 = !DILocation(line: 200, column: 5, scope: !7328)
!7354 = !DILocation(line: 201, column: 5, scope: !7328)
!7355 = !DILocation(line: 201, column: 34, scope: !7328)
!7356 = !DILocation(line: 204, column: 1, scope: !7328)
!7357 = distinct !DISubprogram(name: "sendDnsQuery", linkageName: "_ZN6Cicada13SimCommDevice12sendDnsQueryEv", scope: !1679, file: !1675, line: 206, type: !1704, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1674, declaration: !1725, retainedNodes: !7358)
!7358 = !{!7359}
!7359 = !DILocalVariable(name: "this", arg: 1, scope: !7357, type: !7061, flags: DIFlagArtificial | DIFlagObjectPointer)
!7360 = !DILocation(line: 0, scope: !7357)
!7361 = !DILocation(line: 208, column: 9, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7357, file: !1675, line: 208, column: 9)
!7363 = !DILocation(line: 208, column: 17, scope: !7362)
!7364 = !DILocation(line: 208, column: 43, scope: !7362)
!7365 = !DILocation(line: 208, column: 36, scope: !7362)
!7366 = !DILocation(line: 208, column: 50, scope: !7362)
!7367 = !DILocation(line: 208, column: 34, scope: !7362)
!7368 = !DILocation(line: 208, column: 9, scope: !7357)
!7369 = !DILocation(line: 211, column: 5, scope: !7357)
!7370 = !DILocation(line: 211, column: 13, scope: !7357)
!7371 = !DILocation(line: 212, column: 5, scope: !7357)
!7372 = !DILocation(line: 212, column: 35, scope: !7357)
!7373 = !DILocation(line: 212, column: 13, scope: !7357)
!7374 = !DILocation(line: 213, column: 5, scope: !7357)
!7375 = !DILocation(line: 213, column: 35, scope: !7357)
!7376 = !DILocation(line: 213, column: 13, scope: !7357)
!7377 = !DILocation(line: 215, column: 5, scope: !7357)
!7378 = !DILocation(line: 216, column: 1, scope: !7357)
!7379 = distinct !DISubprogram(name: "sendCiprxget2", linkageName: "_ZN6Cicada13SimCommDevice13sendCiprxget2Ev", scope: !1679, file: !1675, line: 218, type: !1704, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1674, declaration: !1727, retainedNodes: !7380)
!7380 = !{!7381, !7382, !7385, !7389}
!7381 = !DILocalVariable(name: "this", arg: 1, scope: !7379, type: !7061, flags: DIFlagArtificial | DIFlagObjectPointer)
!7382 = !DILocalVariable(name: "bytesToReceive", scope: !7383, file: !1675, line: 222, type: !774)
!7383 = distinct !DILexicalBlock(scope: !7384, file: !1675, line: 221, column: 46)
!7384 = distinct !DILexicalBlock(scope: !7379, file: !1675, line: 220, column: 9)
!7385 = !DILocalVariable(name: "str", scope: !7383, file: !1675, line: 230, type: !7386)
!7386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !800, size: 136, elements: !7387)
!7387 = !{!7388}
!7388 = !DISubrange(count: 17)
!7389 = !DILocalVariable(name: "sizeStr", scope: !7383, file: !1675, line: 231, type: !7390)
!7390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 48, elements: !7391)
!7391 = !{!7392}
!7392 = !DISubrange(count: 6)
!7393 = !DILocation(line: 0, scope: !7379)
!7394 = !DILocation(line: 220, column: 9, scope: !7384)
!7395 = !DILocation(line: 220, column: 17, scope: !7384)
!7396 = !DILocation(line: 220, column: 36, scope: !7384)
!7397 = !DILocation(line: 220, column: 44, scope: !7384)
!7398 = !DILocation(line: 220, column: 34, scope: !7384)
!7399 = !DILocation(line: 220, column: 61, scope: !7384)
!7400 = !DILocation(line: 221, column: 9, scope: !7384)
!7401 = !DILocation(line: 221, column: 12, scope: !7384)
!7402 = !DILocation(line: 221, column: 24, scope: !7384)
!7403 = !DILocation(line: 221, column: 41, scope: !7384)
!7404 = !DILocation(line: 220, column: 9, scope: !7379)
!7405 = !DILocation(line: 222, column: 31, scope: !7383)
!7406 = !DILocation(line: 222, column: 39, scope: !7383)
!7407 = !DILocation(line: 222, column: 58, scope: !7383)
!7408 = !DILocation(line: 222, column: 66, scope: !7383)
!7409 = !DILocation(line: 222, column: 56, scope: !7383)
!7410 = !DILocation(line: 222, column: 83, scope: !7383)
!7411 = !DILocation(line: 0, scope: !7383)
!7412 = !DILocation(line: 223, column: 30, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7383, file: !1675, line: 223, column: 13)
!7414 = !DILocation(line: 223, column: 28, scope: !7413)
!7415 = !DILocation(line: 223, column: 13, scope: !7383)
!7416 = !DILocation(line: 225, column: 42, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7383, file: !1675, line: 225, column: 13)
!7418 = !DILocation(line: 225, column: 28, scope: !7417)
!7419 = !DILocation(line: 225, column: 13, scope: !7383)
!7420 = !DILocation(line: 226, column: 42, scope: !7417)
!7421 = !DILocation(line: 226, column: 13, scope: !7417)
!7422 = !DILocation(line: 227, column: 30, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7383, file: !1675, line: 227, column: 13)
!7424 = !{!7071, !2139, i64 278}
!7425 = !DILocation(line: 227, column: 28, scope: !7423)
!7426 = !DILocation(line: 227, column: 13, scope: !7383)
!7427 = !DILocation(line: 230, column: 9, scope: !7383)
!7428 = !DILocation(line: 230, column: 20, scope: !7383)
!7429 = !DILocation(line: 231, column: 9, scope: !7383)
!7430 = !DILocation(line: 231, column: 14, scope: !7383)
!7431 = !DILocation(line: 232, column: 9, scope: !7383)
!7432 = !DILocation(line: 233, column: 9, scope: !7383)
!7433 = !DILocation(line: 233, column: 17, scope: !7383)
!7434 = !DILocation(line: 234, column: 9, scope: !7383)
!7435 = !DILocation(line: 234, column: 17, scope: !7383)
!7436 = !DILocation(line: 235, column: 9, scope: !7383)
!7437 = !DILocation(line: 235, column: 39, scope: !7383)
!7438 = !DILocation(line: 235, column: 17, scope: !7383)
!7439 = !DILocation(line: 237, column: 5, scope: !7384)
!7440 = !DILocation(line: 0, scope: !7384)
!7441 = !DILocation(line: 240, column: 1, scope: !7379)
!7442 = distinct !DISubprogram(name: "checkConnectionState", linkageName: "_ZN6Cicada13SimCommDevice20checkConnectionStateEPKc", scope: !1679, file: !1675, line: 242, type: !1701, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1674, declaration: !1724, retainedNodes: !7443)
!7443 = !{!7444, !7445}
!7444 = !DILocalVariable(name: "this", arg: 1, scope: !7442, type: !7061, flags: DIFlagArtificial | DIFlagObjectPointer)
!7445 = !DILocalVariable(name: "closeVariant", arg: 2, scope: !7442, file: !1675, line: 242, type: !799)
!7446 = !DILocation(line: 0, scope: !7442)
!7447 = !DILocation(line: 244, column: 17, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7442, file: !1675, line: 244, column: 9)
!7449 = !DILocation(line: 244, column: 9, scope: !7448)
!7450 = !DILocation(line: 244, column: 52, scope: !7448)
!7451 = !DILocation(line: 244, column: 9, scope: !7442)
!7452 = !DILocation(line: 245, column: 9, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7448, file: !1675, line: 244, column: 58)
!7454 = !DILocation(line: 245, column: 24, scope: !7453)
!7455 = !DILocation(line: 246, column: 5, scope: !7453)
!7456 = !DILocation(line: 246, column: 51, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7448, file: !1675, line: 246, column: 16)
!7458 = !DILocation(line: 246, column: 16, scope: !7457)
!7459 = !DILocation(line: 246, column: 73, scope: !7457)
!7460 = !DILocation(line: 246, column: 16, scope: !7448)
!7461 = !DILocation(line: 247, column: 9, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7457, file: !1675, line: 246, column: 79)
!7463 = !DILocation(line: 247, column: 23, scope: !7462)
!7464 = !DILocation(line: 248, column: 9, scope: !7462)
!7465 = !DILocation(line: 248, column: 24, scope: !7462)
!7466 = !DILocation(line: 249, column: 5, scope: !7462)
!7467 = !DILocation(line: 250, column: 1, scope: !7442)
!7468 = distinct !DISubprogram(name: "sendIDRequest", linkageName: "_ZN6Cicada13SimCommDevice13sendIDRequestEPKc", scope: !1679, file: !1675, line: 252, type: !1729, scopeLine: 253, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1674, declaration: !1728, retainedNodes: !7469)
!7469 = !{!7470, !7471, !7472}
!7470 = !DILocalVariable(name: "this", arg: 1, scope: !7468, type: !7061, flags: DIFlagArtificial | DIFlagObjectPointer)
!7471 = !DILocalVariable(name: "modemSpecificICCIDCommand", arg: 2, scope: !7468, file: !1675, line: 252, type: !799)
!7472 = !DILocalVariable(name: "type", scope: !7473, file: !1675, line: 255, type: !1677)
!7473 = distinct !DILexicalBlock(scope: !7474, file: !1675, line: 254, column: 99)
!7474 = distinct !DILexicalBlock(scope: !7468, file: !1675, line: 254, column: 9)
!7475 = !DILocation(line: 0, scope: !7468)
!7476 = !DILocation(line: 254, column: 9, scope: !7474)
!7477 = !DILocation(line: 254, column: 28, scope: !7474)
!7478 = !DILocation(line: 254, column: 41, scope: !7474)
!7479 = !DILocation(line: 254, column: 71, scope: !7474)
!7480 = !DILocation(line: 254, column: 86, scope: !7474)
!7481 = !DILocation(line: 254, column: 9, scope: !7468)
!7482 = !DILocation(line: 0, scope: !7473)
!7483 = !DILocation(line: 256, column: 28, scope: !7473)
!7484 = !DILocation(line: 258, column: 9, scope: !7473)
!7485 = !DILocation(line: 0, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7473, file: !1675, line: 258, column: 23)
!7487 = !DILocation(line: 282, column: 1, scope: !7468)
!7488 = distinct !DISubprogram(name: "requestRSSI", linkageName: "_ZN6Cicada13SimCommDevice11requestRSSIEv", scope: !1679, file: !1675, line: 284, type: !1697, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1674, declaration: !1708, retainedNodes: !7489)
!7489 = !{!7490}
!7490 = !DILocalVariable(name: "this", arg: 1, scope: !7488, type: !7061, flags: DIFlagArtificial | DIFlagObjectPointer)
!7491 = !DILocation(line: 0, scope: !7488)
!7492 = !DILocation(line: 286, column: 5, scope: !7488)
!7493 = !DILocation(line: 286, column: 11, scope: !7488)
!7494 = !DILocation(line: 287, column: 1, scope: !7488)
!7495 = distinct !DISubprogram(name: "getRSSI", linkageName: "_ZN6Cicada13SimCommDevice7getRSSIEv", scope: !1679, file: !1675, line: 289, type: !1710, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1674, declaration: !1709, retainedNodes: !7496)
!7496 = !{!7497}
!7497 = !DILocalVariable(name: "this", arg: 1, scope: !7495, type: !7061, flags: DIFlagArtificial | DIFlagObjectPointer)
!7498 = !DILocation(line: 0, scope: !7495)
!7499 = !DILocation(line: 291, column: 12, scope: !7495)
!7500 = !DILocation(line: 291, column: 5, scope: !7495)
!7501 = distinct !DISubprogram(name: "requestIDString", linkageName: "_ZN6Cicada13SimCommDevice15requestIDStringENS0_13RequestIDTypeE", scope: !1679, file: !1675, line: 294, type: !1713, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1674, declaration: !1712, retainedNodes: !7502)
!7502 = !{!7503, !7504}
!7503 = !DILocalVariable(name: "this", arg: 1, scope: !7501, type: !7061, flags: DIFlagArtificial | DIFlagObjectPointer)
!7504 = !DILocalVariable(name: "type", arg: 2, scope: !7501, file: !1675, line: 294, type: !1677)
!7505 = !DILocation(line: 0, scope: !7501)
!7506 = !DILocation(line: 296, column: 5, scope: !7501)
!7507 = !DILocation(line: 296, column: 13, scope: !7501)
!7508 = !DILocation(line: 297, column: 5, scope: !7501)
!7509 = !DILocation(line: 297, column: 24, scope: !7501)
!7510 = !DILocation(line: 298, column: 26, scope: !7501)
!7511 = !DILocation(line: 298, column: 5, scope: !7501)
!7512 = !DILocation(line: 298, column: 24, scope: !7501)
!7513 = !DILocation(line: 299, column: 1, scope: !7501)
!7514 = distinct !DISubprogram(name: "getIDString", linkageName: "_ZN6Cicada13SimCommDevice11getIDStringEv", scope: !1679, file: !1675, line: 301, type: !1716, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1674, declaration: !1715, retainedNodes: !7515)
!7515 = !{!7516}
!7516 = !DILocalVariable(name: "this", arg: 1, scope: !7514, type: !7061, flags: DIFlagArtificial | DIFlagObjectPointer)
!7517 = !DILocation(line: 0, scope: !7514)
!7518 = !DILocation(line: 303, column: 9, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7514, file: !1675, line: 303, column: 9)
!7520 = !DILocation(line: 303, column: 23, scope: !7519)
!7521 = !DILocation(line: 303, column: 31, scope: !7519)
!7522 = !DILocation(line: 308, column: 1, scope: !7514)
!7523 = distinct !DISubprogram(name: "~Sim7x00CommDevice", linkageName: "_ZN6Cicada17Sim7x00CommDeviceD0Ev", scope: !1776, file: !1775, line: 37, type: !1789, scopeLine: 37, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1771, declaration: !7524, retainedNodes: !7525)
!7524 = !DISubprogram(name: "~Sim7x00CommDevice", scope: !1776, type: !1789, containingType: !1776, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!7525 = !{!7526}
!7526 = !DILocalVariable(name: "this", arg: 1, scope: !7523, type: !7527, flags: DIFlagArtificial | DIFlagObjectPointer)
!7527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 32)
!7528 = !DILocation(line: 0, scope: !7523)
!7529 = !DILocation(line: 37, column: 7, scope: !7523)
!7530 = distinct !DISubprogram(name: "run", linkageName: "_ZN6Cicada17Sim7x00CommDevice3runEv", scope: !1776, file: !1772, line: 49, type: !1789, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1771, declaration: !1788, retainedNodes: !7531)
!7531 = !{!7532, !7533, !7537, !7538, !7544, !7546}
!7532 = !DILocalVariable(name: "this", arg: 1, scope: !7530, type: !7527, flags: DIFlagArtificial | DIFlagObjectPointer)
!7533 = !DILocalVariable(name: "str", scope: !7534, file: !1772, line: 74, type: !7536)
!7534 = distinct !DILexicalBlock(scope: !7535, file: !1772, line: 64, column: 41)
!7535 = distinct !DILexicalBlock(scope: !7530, file: !1772, line: 64, column: 9)
!7536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !800, size: 80, elements: !309)
!7537 = !DILocalVariable(name: "parseLine", scope: !7530, file: !1772, line: 86, type: !35)
!7538 = !DILocalVariable(name: "str", scope: !7539, file: !1772, line: 218, type: !7541)
!7539 = distinct !DILexicalBlock(scope: !7540, file: !1772, line: 217, column: 26)
!7540 = distinct !DILexicalBlock(scope: !7530, file: !1772, line: 201, column: 25)
!7541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !800, size: 184, elements: !7542)
!7542 = !{!7543}
!7543 = !DISubrange(count: 23)
!7544 = !DILocalVariable(name: "portStr", scope: !7545, file: !1772, line: 266, type: !7390)
!7545 = distinct !DILexicalBlock(scope: !7540, file: !1772, line: 265, column: 23)
!7546 = !DILocalVariable(name: "portStr", scope: !7547, file: !1772, line: 304, type: !7390)
!7547 = distinct !DILexicalBlock(scope: !7548, file: !1772, line: 297, column: 35)
!7548 = distinct !DILexicalBlock(scope: !7549, file: !1772, line: 297, column: 21)
!7549 = distinct !DILexicalBlock(scope: !7550, file: !1772, line: 296, column: 39)
!7550 = distinct !DILexicalBlock(scope: !7551, file: !1772, line: 296, column: 17)
!7551 = distinct !DILexicalBlock(scope: !7552, file: !1772, line: 295, column: 44)
!7552 = distinct !DILexicalBlock(scope: !7540, file: !1772, line: 295, column: 13)
!7553 = !DILocation(line: 0, scope: !7530)
!7554 = !DILocation(line: 52, column: 10, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7530, file: !1772, line: 52, column: 9)
!7556 = !DILocation(line: 52, column: 18, scope: !7555)
!7557 = !DILocation(line: 52, column: 9, scope: !7530)
!7558 = !DILocation(line: 53, column: 14, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7560, file: !1772, line: 53, column: 13)
!7560 = distinct !DILexicalBlock(scope: !7555, file: !1772, line: 52, column: 28)
!7561 = !DILocation(line: 53, column: 22, scope: !7559)
!7562 = !DILocation(line: 53, column: 13, scope: !7560)
!7563 = !DILocation(line: 54, column: 13, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7559, file: !1772, line: 53, column: 30)
!7565 = !DILocation(line: 54, column: 24, scope: !7564)
!7566 = !{!7083, !2140, i64 206}
!7567 = !DILocation(line: 55, column: 9, scope: !7564)
!7568 = !DILocation(line: 60, column: 9, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7530, file: !1772, line: 60, column: 9)
!7570 = !DILocation(line: 60, column: 24, scope: !7569)
!7571 = !DILocation(line: 60, column: 9, scope: !7530)
!7572 = !DILocation(line: 64, column: 24, scope: !7535)
!7573 = !DILocation(line: 64, column: 9, scope: !7535)
!7574 = !DILocation(line: 64, column: 9, scope: !7530)
!7575 = !DILocation(line: 65, column: 9, scope: !7534)
!7576 = !DILocation(line: 65, column: 17, scope: !7534)
!7577 = !DILocation(line: 66, column: 24, scope: !7534)
!7578 = !DILocation(line: 69, column: 9, scope: !7534)
!7579 = !DILocation(line: 70, column: 13, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7534, file: !1772, line: 70, column: 13)
!7581 = !DILocation(line: 68, column: 25, scope: !7534)
!7582 = !DILocation(line: 70, column: 38, scope: !7580)
!7583 = !DILocation(line: 0, scope: !7580)
!7584 = !DILocation(line: 74, column: 9, scope: !7534)
!7585 = !DILocation(line: 74, column: 20, scope: !7534)
!7586 = !DILocation(line: 75, column: 9, scope: !7534)
!7587 = !DILocation(line: 75, column: 17, scope: !7534)
!7588 = !DILocation(line: 76, column: 9, scope: !7534)
!7589 = !DILocation(line: 76, column: 39, scope: !7534)
!7590 = !DILocation(line: 76, column: 17, scope: !7534)
!7591 = !DILocation(line: 77, column: 9, scope: !7534)
!7592 = !DILocation(line: 77, column: 21, scope: !7534)
!7593 = !{!7083, !2140, i64 207}
!7594 = !DILocation(line: 78, column: 9, scope: !7534)
!7595 = !DILocation(line: 78, column: 23, scope: !7534)
!7596 = !DILocation(line: 80, column: 9, scope: !7534)
!7597 = !DILocation(line: 83, column: 5, scope: !7535)
!7598 = !DILocation(line: 86, column: 22, scope: !7530)
!7599 = !DILocation(line: 89, column: 9, scope: !7530)
!7600 = !DILocation(line: 92, column: 19, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7602, file: !1772, line: 89, column: 20)
!7602 = distinct !DILexicalBlock(scope: !7530, file: !1772, line: 89, column: 9)
!7603 = !DILocation(line: 92, column: 31, scope: !7601)
!7604 = !DILocation(line: 92, column: 9, scope: !7601)
!7605 = !DILocation(line: 95, column: 13, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7601, file: !1772, line: 95, column: 13)
!7607 = !DILocation(line: 95, column: 13, scope: !7601)
!7608 = !DILocation(line: 96, column: 25, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7610, file: !1772, line: 96, column: 17)
!7610 = distinct !DILexicalBlock(scope: !7606, file: !1772, line: 95, column: 28)
!7611 = !DILocation(line: 96, column: 53, scope: !7609)
!7612 = !DILocation(line: 96, column: 17, scope: !7609)
!7613 = !DILocation(line: 96, column: 76, scope: !7609)
!7614 = !DILocation(line: 96, column: 17, scope: !7610)
!7615 = !DILocation(line: 97, column: 31, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7609, file: !1772, line: 96, column: 82)
!7617 = !DILocation(line: 98, column: 13, scope: !7616)
!7618 = !DILocation(line: 98, column: 24, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7609, file: !1772, line: 98, column: 24)
!7620 = !DILocation(line: 98, column: 57, scope: !7619)
!7621 = !DILocation(line: 98, column: 24, scope: !7609)
!7622 = !DILocation(line: 99, column: 32, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7619, file: !1772, line: 98, column: 63)
!7624 = !DILocation(line: 100, column: 17, scope: !7623)
!7625 = !DILocation(line: 100, column: 31, scope: !7623)
!7626 = !DILocation(line: 101, column: 31, scope: !7623)
!7627 = !DILocation(line: 102, column: 17, scope: !7623)
!7628 = !DILocation(line: 107, column: 17, scope: !7601)
!7629 = !DILocation(line: 107, column: 9, scope: !7601)
!7630 = !DILocation(line: 109, column: 17, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7632, file: !1772, line: 109, column: 17)
!7632 = distinct !DILexicalBlock(scope: !7601, file: !1772, line: 107, column: 30)
!7633 = !DILocation(line: 109, column: 31, scope: !7631)
!7634 = !DILocation(line: 109, column: 17, scope: !7632)
!7635 = !DILocation(line: 110, column: 29, scope: !7636)
!7636 = distinct !DILexicalBlock(scope: !7631, file: !1772, line: 109, column: 40)
!7637 = !DILocation(line: 111, column: 13, scope: !7636)
!7638 = !DILocation(line: 111, column: 32, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7631, file: !1772, line: 111, column: 24)
!7640 = !DILocation(line: 111, column: 24, scope: !7639)
!7641 = !DILocation(line: 111, column: 64, scope: !7639)
!7642 = !DILocation(line: 111, column: 24, scope: !7631)
!7643 = !DILocation(line: 112, column: 17, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7639, file: !1772, line: 111, column: 70)
!7645 = !DILocation(line: 113, column: 28, scope: !7644)
!7646 = !DILocation(line: 114, column: 31, scope: !7644)
!7647 = !DILocation(line: 115, column: 29, scope: !7644)
!7648 = !DILocation(line: 116, column: 17, scope: !7644)
!7649 = !DILocation(line: 121, column: 17, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7632, file: !1772, line: 121, column: 17)
!7651 = !DILocation(line: 121, column: 17, scope: !7632)
!7652 = !DILocation(line: 122, column: 29, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7650, file: !1772, line: 121, column: 34)
!7654 = !DILocation(line: 123, column: 13, scope: !7653)
!7655 = !DILocation(line: 127, column: 17, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7632, file: !1772, line: 127, column: 17)
!7657 = !DILocation(line: 127, column: 31, scope: !7656)
!7658 = !DILocation(line: 127, column: 17, scope: !7632)
!7659 = !DILocation(line: 128, column: 29, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7656, file: !1772, line: 127, column: 40)
!7661 = !DILocation(line: 129, column: 13, scope: !7660)
!7662 = !DILocation(line: 130, column: 29, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7664, file: !1772, line: 130, column: 21)
!7664 = distinct !DILexicalBlock(scope: !7656, file: !1772, line: 129, column: 20)
!7665 = !DILocation(line: 130, column: 21, scope: !7663)
!7666 = !DILocation(line: 130, column: 62, scope: !7663)
!7667 = !DILocation(line: 130, column: 21, scope: !7664)
!7668 = !DILocation(line: 131, column: 36, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7663, file: !1772, line: 130, column: 68)
!7670 = !DILocation(line: 132, column: 21, scope: !7669)
!7671 = !DILocation(line: 132, column: 35, scope: !7669)
!7672 = !DILocation(line: 133, column: 17, scope: !7669)
!7673 = !DILocation(line: 138, column: 17, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7632, file: !1772, line: 138, column: 17)
!7675 = !DILocation(line: 138, column: 17, scope: !7632)
!7676 = !DILocation(line: 139, column: 29, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7674, file: !1772, line: 138, column: 35)
!7678 = !DILocation(line: 140, column: 13, scope: !7677)
!7679 = !DILocation(line: 144, column: 17, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7632, file: !1772, line: 144, column: 17)
!7681 = !DILocation(line: 144, column: 17, scope: !7632)
!7682 = !DILocation(line: 145, column: 29, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7680, file: !1772, line: 144, column: 35)
!7684 = !DILocation(line: 146, column: 28, scope: !7683)
!7685 = !DILocation(line: 147, column: 13, scope: !7683)
!7686 = !DILocation(line: 151, column: 17, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7632, file: !1772, line: 151, column: 17)
!7688 = !DILocation(line: 151, column: 17, scope: !7632)
!7689 = !DILocation(line: 152, column: 29, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7687, file: !1772, line: 151, column: 29)
!7691 = !DILocation(line: 153, column: 13, scope: !7690)
!7692 = !DILocation(line: 157, column: 17, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7632, file: !1772, line: 157, column: 17)
!7694 = !DILocation(line: 157, column: 17, scope: !7632)
!7695 = !DILocation(line: 158, column: 29, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7693, file: !1772, line: 157, column: 33)
!7697 = !DILocation(line: 159, column: 13, scope: !7696)
!7698 = !DILocation(line: 167, column: 13, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7601, file: !1772, line: 167, column: 13)
!7700 = !DILocation(line: 167, column: 24, scope: !7699)
!7701 = !DILocation(line: 167, column: 13, scope: !7601)
!7702 = !DILocation(line: 168, column: 13, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7699, file: !1772, line: 167, column: 38)
!7704 = !DILocation(line: 169, column: 9, scope: !7703)
!7705 = !DILocation(line: 173, column: 15, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7602, file: !1772, line: 173, column: 14)
!7707 = !DILocation(line: 173, column: 30, scope: !7706)
!7708 = !DILocation(line: 173, column: 14, scope: !7706)
!7709 = !DILocation(line: 173, column: 52, scope: !7706)
!7710 = !DILocation(line: 174, column: 9, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7706, file: !1772, line: 173, column: 80)
!7712 = !DILocation(line: 175, column: 5, scope: !7711)
!7713 = !DILocation(line: 178, column: 9, scope: !7714)
!7714 = distinct !DILexicalBlock(scope: !7530, file: !1772, line: 178, column: 9)
!7715 = !DILocation(line: 178, column: 23, scope: !7714)
!7716 = !DILocation(line: 178, column: 26, scope: !7714)
!7717 = !DILocation(line: 178, column: 38, scope: !7714)
!7718 = !DILocation(line: 178, column: 9, scope: !7530)
!7719 = !DILocation(line: 182, column: 9, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7530, file: !1772, line: 182, column: 9)
!7721 = !DILocation(line: 182, column: 17, scope: !7720)
!7722 = !DILocation(line: 182, column: 34, scope: !7720)
!7723 = !DILocation(line: 182, column: 9, scope: !7530)
!7724 = !DILocation(line: 186, column: 9, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7530, file: !1772, line: 186, column: 9)
!7726 = !DILocation(line: 186, column: 15, scope: !7725)
!7727 = !DILocation(line: 186, column: 28, scope: !7725)
!7728 = !DILocation(line: 186, column: 31, scope: !7725)
!7729 = !DILocation(line: 186, column: 46, scope: !7725)
!7730 = !DILocation(line: 186, column: 9, scope: !7530)
!7731 = !DILocation(line: 187, column: 21, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7725, file: !1772, line: 186, column: 59)
!7733 = !DILocation(line: 188, column: 25, scope: !7732)
!7734 = !DILocation(line: 188, column: 23, scope: !7732)
!7735 = !DILocation(line: 189, column: 9, scope: !7732)
!7736 = !DILocation(line: 190, column: 9, scope: !7732)
!7737 = !DILocation(line: 194, column: 23, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7530, file: !1772, line: 194, column: 9)
!7739 = !{!7740, !2287, i64 280}
!7740 = !{!"_ZTSN6Cicada17Sim7x00CommDeviceE", !2287, i64 280}
!7741 = !DILocation(line: 194, column: 9, scope: !7738)
!7742 = !DILocation(line: 194, column: 9, scope: !7530)
!7743 = !DILocation(line: 195, column: 21, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7738, file: !1772, line: 194, column: 38)
!7745 = !DILocation(line: 196, column: 25, scope: !7744)
!7746 = !DILocation(line: 196, column: 23, scope: !7744)
!7747 = !DILocation(line: 197, column: 9, scope: !7744)
!7748 = !DILocation(line: 201, column: 13, scope: !7530)
!7749 = !DILocation(line: 201, column: 5, scope: !7530)
!7750 = !DILocation(line: 203, column: 9, scope: !7540)
!7751 = !DILocation(line: 204, column: 9, scope: !7540)
!7752 = !DILocation(line: 204, column: 23, scope: !7540)
!7753 = !DILocation(line: 205, column: 9, scope: !7540)
!7754 = !DILocation(line: 206, column: 9, scope: !7540)
!7755 = !DILocation(line: 209, column: 9, scope: !7540)
!7756 = !DILocation(line: 210, column: 9, scope: !7540)
!7757 = !DILocation(line: 210, column: 23, scope: !7540)
!7758 = !DILocation(line: 211, column: 24, scope: !7540)
!7759 = !DILocation(line: 212, column: 25, scope: !7540)
!7760 = !DILocation(line: 212, column: 23, scope: !7540)
!7761 = !DILocation(line: 213, column: 20, scope: !7540)
!7762 = !DILocation(line: 214, column: 9, scope: !7540)
!7763 = !DILocation(line: 215, column: 9, scope: !7540)
!7764 = !DILocation(line: 218, column: 9, scope: !7539)
!7765 = !DILocation(line: 218, column: 20, scope: !7539)
!7766 = !DILocation(line: 219, column: 9, scope: !7539)
!7767 = !DILocation(line: 219, column: 17, scope: !7539)
!7768 = !DILocation(line: 220, column: 9, scope: !7539)
!7769 = !DILocation(line: 220, column: 39, scope: !7539)
!7770 = !DILocation(line: 220, column: 45, scope: !7539)
!7771 = !DILocation(line: 220, column: 17, scope: !7539)
!7772 = !DILocation(line: 221, column: 9, scope: !7539)
!7773 = !DILocation(line: 221, column: 39, scope: !7539)
!7774 = !DILocation(line: 221, column: 17, scope: !7539)
!7775 = !DILocation(line: 223, column: 25, scope: !7539)
!7776 = !DILocation(line: 223, column: 23, scope: !7539)
!7777 = !DILocation(line: 224, column: 20, scope: !7539)
!7778 = !DILocation(line: 226, column: 5, scope: !7540)
!7779 = !DILocation(line: 229, column: 25, scope: !7540)
!7780 = !DILocation(line: 229, column: 23, scope: !7540)
!7781 = !DILocation(line: 230, column: 20, scope: !7540)
!7782 = !DILocation(line: 231, column: 9, scope: !7540)
!7783 = !DILocation(line: 232, column: 9, scope: !7540)
!7784 = !DILocation(line: 235, column: 25, scope: !7540)
!7785 = !DILocation(line: 235, column: 23, scope: !7540)
!7786 = !DILocation(line: 236, column: 20, scope: !7540)
!7787 = !DILocation(line: 237, column: 9, scope: !7540)
!7788 = !DILocation(line: 238, column: 9, scope: !7540)
!7789 = !DILocation(line: 241, column: 13, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7540, file: !1772, line: 241, column: 13)
!7791 = !DILocation(line: 241, column: 13, scope: !7540)
!7792 = !DILocation(line: 244, column: 9, scope: !7540)
!7793 = !DILocation(line: 245, column: 23, scope: !7540)
!7794 = !DILocation(line: 246, column: 20, scope: !7540)
!7795 = !DILocation(line: 247, column: 21, scope: !7540)
!7796 = !DILocation(line: 248, column: 9, scope: !7540)
!7797 = !DILocation(line: 249, column: 9, scope: !7540)
!7798 = !DILocation(line: 252, column: 25, scope: !7540)
!7799 = !DILocation(line: 252, column: 23, scope: !7540)
!7800 = !DILocation(line: 253, column: 20, scope: !7540)
!7801 = !DILocation(line: 254, column: 9, scope: !7540)
!7802 = !DILocation(line: 255, column: 9, scope: !7540)
!7803 = !DILocation(line: 258, column: 28, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7540, file: !1772, line: 258, column: 13)
!7805 = !DILocation(line: 258, column: 13, scope: !7540)
!7806 = !DILocation(line: 259, column: 25, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7804, file: !1772, line: 258, column: 44)
!7808 = !DILocation(line: 260, column: 29, scope: !7807)
!7809 = !DILocation(line: 260, column: 27, scope: !7807)
!7810 = !DILocation(line: 261, column: 24, scope: !7807)
!7811 = !DILocation(line: 262, column: 9, scope: !7807)
!7812 = !DILocation(line: 266, column: 9, scope: !7545)
!7813 = !DILocation(line: 266, column: 14, scope: !7545)
!7814 = !DILocation(line: 267, column: 50, scope: !7545)
!7815 = !DILocation(line: 267, column: 9, scope: !7545)
!7816 = !DILocation(line: 269, column: 9, scope: !7545)
!7817 = !DILocation(line: 269, column: 17, scope: !7545)
!7818 = !DILocation(line: 270, column: 13, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7545, file: !1772, line: 270, column: 13)
!7820 = !DILocation(line: 270, column: 19, scope: !7819)
!7821 = !DILocation(line: 0, scope: !7819)
!7822 = !DILocation(line: 270, column: 13, scope: !7545)
!7823 = !DILocation(line: 271, column: 21, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7819, file: !1772, line: 270, column: 27)
!7825 = !DILocation(line: 272, column: 9, scope: !7824)
!7826 = !DILocation(line: 273, column: 21, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7819, file: !1772, line: 272, column: 16)
!7828 = !DILocation(line: 274, column: 13, scope: !7827)
!7829 = !DILocation(line: 274, column: 43, scope: !7827)
!7830 = !DILocation(line: 274, column: 21, scope: !7827)
!7831 = !DILocation(line: 275, column: 13, scope: !7827)
!7832 = !DILocation(line: 275, column: 21, scope: !7827)
!7833 = !DILocation(line: 277, column: 9, scope: !7545)
!7834 = !DILocation(line: 277, column: 17, scope: !7545)
!7835 = !DILocation(line: 278, column: 9, scope: !7545)
!7836 = !DILocation(line: 278, column: 39, scope: !7545)
!7837 = !DILocation(line: 278, column: 17, scope: !7545)
!7838 = !DILocation(line: 280, column: 21, scope: !7545)
!7839 = !DILocation(line: 281, column: 23, scope: !7545)
!7840 = !DILocation(line: 282, column: 20, scope: !7545)
!7841 = !DILocation(line: 284, column: 5, scope: !7540)
!7842 = !DILocation(line: 287, column: 9, scope: !7540)
!7843 = !DILocation(line: 288, column: 9, scope: !7540)
!7844 = !DILocation(line: 288, column: 23, scope: !7540)
!7845 = !DILocation(line: 289, column: 21, scope: !7540)
!7846 = !DILocation(line: 290, column: 20, scope: !7540)
!7847 = !DILocation(line: 291, column: 24, scope: !7540)
!7848 = !DILocation(line: 292, column: 9, scope: !7540)
!7849 = !DILocation(line: 295, column: 13, scope: !7552)
!7850 = !DILocation(line: 295, column: 26, scope: !7552)
!7851 = !DILocation(line: 295, column: 13, scope: !7540)
!7852 = !DILocation(line: 296, column: 17, scope: !7550)
!7853 = !DILocation(line: 296, column: 17, scope: !7551)
!7854 = !DILocation(line: 297, column: 21, scope: !7548)
!7855 = !DILocation(line: 297, column: 27, scope: !7548)
!7856 = !DILocation(line: 297, column: 21, scope: !7549)
!7857 = !DILocation(line: 299, column: 21, scope: !7547)
!7858 = !DILocation(line: 299, column: 29, scope: !7547)
!7859 = !DILocation(line: 300, column: 21, scope: !7547)
!7860 = !DILocation(line: 300, column: 51, scope: !7547)
!7861 = !DILocation(line: 300, column: 29, scope: !7547)
!7862 = !DILocation(line: 301, column: 21, scope: !7547)
!7863 = !DILocation(line: 301, column: 29, scope: !7547)
!7864 = !DILocation(line: 304, column: 21, scope: !7547)
!7865 = !DILocation(line: 304, column: 26, scope: !7547)
!7866 = !DILocation(line: 305, column: 62, scope: !7547)
!7867 = !DILocation(line: 305, column: 21, scope: !7547)
!7868 = !DILocation(line: 306, column: 21, scope: !7547)
!7869 = !DILocation(line: 306, column: 29, scope: !7547)
!7870 = !DILocation(line: 307, column: 17, scope: !7548)
!7871 = !DILocation(line: 307, column: 17, scope: !7547)
!7872 = !DILocation(line: 308, column: 17, scope: !7549)
!7873 = !DILocation(line: 308, column: 47, scope: !7549)
!7874 = !DILocation(line: 308, column: 25, scope: !7549)
!7875 = !DILocation(line: 310, column: 17, scope: !7549)
!7876 = !DILocation(line: 310, column: 31, scope: !7549)
!7877 = !DILocation(line: 311, column: 28, scope: !7549)
!7878 = !DILocation(line: 312, column: 13, scope: !7549)
!7879 = !DILocation(line: 313, column: 20, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7552, file: !1772, line: 313, column: 20)
!7881 = !DILocation(line: 313, column: 35, scope: !7880)
!7882 = !DILocation(line: 313, column: 20, scope: !7552)
!7883 = !DILocation(line: 314, column: 28, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7880, file: !1772, line: 313, column: 51)
!7885 = !DILocation(line: 315, column: 13, scope: !7884)
!7886 = !DILocation(line: 315, column: 27, scope: !7884)
!7887 = !DILocation(line: 316, column: 24, scope: !7884)
!7888 = !DILocation(line: 317, column: 9, scope: !7884)
!7889 = !DILocation(line: 318, column: 13, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7880, file: !1772, line: 317, column: 16)
!7891 = !DILocation(line: 318, column: 27, scope: !7890)
!7892 = !DILocation(line: 319, column: 13, scope: !7890)
!7893 = !DILocation(line: 326, column: 24, scope: !7540)
!7894 = !DILocation(line: 327, column: 25, scope: !7540)
!7895 = !DILocation(line: 327, column: 23, scope: !7540)
!7896 = !DILocation(line: 328, column: 20, scope: !7540)
!7897 = !DILocation(line: 329, column: 9, scope: !7540)
!7898 = !DILocation(line: 332, column: 25, scope: !7540)
!7899 = !DILocation(line: 332, column: 23, scope: !7540)
!7900 = !DILocation(line: 333, column: 20, scope: !7540)
!7901 = !DILocation(line: 334, column: 21, scope: !7540)
!7902 = !DILocation(line: 335, column: 9, scope: !7540)
!7903 = !DILocation(line: 336, column: 9, scope: !7540)
!7904 = !DILocation(line: 339, column: 13, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7540, file: !1772, line: 339, column: 13)
!7906 = !DILocation(line: 339, column: 13, scope: !7540)
!7907 = !DILocation(line: 342, column: 13, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7540, file: !1772, line: 342, column: 13)
!7909 = !DILocation(line: 342, column: 29, scope: !7908)
!7910 = !DILocation(line: 342, column: 13, scope: !7540)
!7911 = !DILocation(line: 343, column: 32, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7913, file: !1772, line: 343, column: 17)
!7913 = distinct !DILexicalBlock(scope: !7908, file: !1772, line: 342, column: 34)
!7914 = !DILocation(line: 343, column: 17, scope: !7913)
!7915 = !DILocation(line: 344, column: 28, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7912, file: !1772, line: 343, column: 49)
!7917 = !DILocation(line: 345, column: 29, scope: !7916)
!7918 = !DILocation(line: 346, column: 13, scope: !7916)
!7919 = !DILocation(line: 347, column: 20, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7908, file: !1772, line: 347, column: 20)
!7921 = !DILocation(line: 347, column: 35, scope: !7920)
!7922 = !DILocation(line: 347, column: 20, scope: !7908)
!7923 = !DILocation(line: 348, column: 24, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7920, file: !1772, line: 347, column: 51)
!7925 = !DILocation(line: 349, column: 9, scope: !7924)
!7926 = !DILocation(line: 350, column: 24, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7920, file: !1772, line: 349, column: 16)
!7928 = !DILocation(line: 359, column: 13, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7540, file: !1772, line: 359, column: 13)
!7930 = !DILocation(line: 359, column: 26, scope: !7929)
!7931 = !DILocation(line: 359, column: 13, scope: !7540)
!7932 = !DILocation(line: 360, column: 17, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7934, file: !1772, line: 360, column: 17)
!7934 = distinct !DILexicalBlock(scope: !7929, file: !1772, line: 359, column: 31)
!7935 = !DILocation(line: 360, column: 17, scope: !7934)
!7936 = !DILocation(line: 361, column: 29, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7933, file: !1772, line: 360, column: 28)
!7938 = !DILocation(line: 362, column: 33, scope: !7937)
!7939 = !DILocation(line: 362, column: 31, scope: !7937)
!7940 = !DILocation(line: 363, column: 13, scope: !7937)
!7941 = !DILocation(line: 364, column: 20, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7929, file: !1772, line: 364, column: 20)
!7943 = !DILocation(line: 364, column: 36, scope: !7942)
!7944 = !DILocation(line: 364, column: 20, scope: !7929)
!7945 = !DILocation(line: 365, column: 24, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7942, file: !1772, line: 364, column: 41)
!7947 = !DILocation(line: 366, column: 9, scope: !7946)
!7948 = !DILocation(line: 367, column: 24, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7942, file: !1772, line: 366, column: 16)
!7950 = !DILocation(line: 372, column: 9, scope: !7540)
!7951 = !DILocation(line: 372, column: 23, scope: !7540)
!7952 = !DILocation(line: 373, column: 13, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7540, file: !1772, line: 373, column: 13)
!7954 = !DILocation(line: 373, column: 13, scope: !7540)
!7955 = !DILocation(line: 376, column: 9, scope: !7540)
!7956 = !DILocation(line: 377, column: 9, scope: !7540)
!7957 = !DILocation(line: 380, column: 9, scope: !7540)
!7958 = !DILocation(line: 380, column: 23, scope: !7540)
!7959 = !DILocation(line: 381, column: 23, scope: !7540)
!7960 = !DILocation(line: 382, column: 20, scope: !7540)
!7961 = !DILocation(line: 383, column: 9, scope: !7540)
!7962 = !DILocation(line: 384, column: 9, scope: !7540)
!7963 = !DILocation(line: 387, column: 24, scope: !7540)
!7964 = !DILocation(line: 388, column: 9, scope: !7540)
!7965 = !DILocation(line: 388, column: 23, scope: !7540)
!7966 = !DILocation(line: 389, column: 20, scope: !7540)
!7967 = !DILocation(line: 390, column: 9, scope: !7540)
!7968 = !DILocation(line: 395, column: 1, scope: !7530)
!7969 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada17Sim7x00CommDeviceD1Ev", scope: !1775, file: !1775, line: 37, type: !6778, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1771, retainedNodes: !152)
!7970 = !DILocation(line: 0, scope: !7969)
!7971 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada17Sim7x00CommDeviceD0Ev", scope: !1775, file: !1775, line: 37, type: !6778, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1771, retainedNodes: !152)
!7972 = !DILocation(line: 0, scope: !7971)
!7973 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada17Sim7x00CommDevice3runEv", scope: !1772, file: !1772, line: 49, type: !6778, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1771, retainedNodes: !152)
!7974 = !DILocation(line: 0, scope: !7973)
!7975 = distinct !DISubprogram(name: "setDelay", linkageName: "_ZN6Cicada4Task8setDelayEt", scope: !15, file: !16, line: 212, type: !38, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1771, declaration: !49, retainedNodes: !7976)
!7976 = !{!7977, !7978}
!7977 = !DILocalVariable(name: "this", arg: 1, scope: !7975, type: !14, flags: DIFlagArtificial | DIFlagObjectPointer)
!7978 = !DILocalVariable(name: "delay", arg: 2, scope: !7975, file: !16, line: 212, type: !26)
!7979 = !DILocation(line: 0, scope: !7975)
!7980 = !DILocation(line: 214, column: 9, scope: !7975)
!7981 = !DILocation(line: 214, column: 16, scope: !7975)
!7982 = !DILocation(line: 215, column: 5, scope: !7975)
!7983 = distinct !DISubprogram(name: "Sim7x00CommDevice", linkageName: "_ZN6Cicada17Sim7x00CommDeviceC2ERNS_15IBufferedSerialEPhS3_y", scope: !1776, file: !1772, line: 35, type: !1782, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1771, declaration: !1781, retainedNodes: !7984)
!7984 = !{!7985, !7986, !7987, !7988, !7989}
!7985 = !DILocalVariable(name: "this", arg: 1, scope: !7983, type: !7527, flags: DIFlagArtificial | DIFlagObjectPointer)
!7986 = !DILocalVariable(name: "serial", arg: 2, scope: !7983, file: !1772, line: 36, type: !863)
!7987 = !DILocalVariable(name: "readBuffer", arg: 3, scope: !7983, file: !1772, line: 36, type: !86)
!7988 = !DILocalVariable(name: "writeBuffer", arg: 4, scope: !7983, file: !1772, line: 36, type: !86)
!7989 = !DILocalVariable(name: "bufferSize", arg: 5, scope: !7983, file: !1772, line: 36, type: !774)
!7990 = !DILocation(line: 0, scope: !7983)
!7991 = !DILocation(line: 38, column: 1, scope: !7983)
!7992 = !DILocation(line: 37, column: 5, scope: !7983)
!7993 = !DILocation(line: 148, column: 17, scope: !7994)
!7994 = !DILexicalBlockFile(scope: !7983, file: !1775, discriminator: 0)
!7995 = !DILocation(line: 39, column: 5, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7997, file: !1772, line: 38, column: 1)
!7997 = !DILexicalBlockFile(scope: !7983, file: !1772, discriminator: 0)
!7998 = !DILocation(line: 39, column: 26, scope: !7996)
!7999 = !DILocation(line: 40, column: 1, scope: !7997)
!8000 = distinct !DISubprogram(name: "Sim7x00CommDevice", linkageName: "_ZN6Cicada17Sim7x00CommDeviceC2ERNS_15IBufferedSerialEPhS3_yy", scope: !1776, file: !1772, line: 42, type: !1786, scopeLine: 45, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1771, declaration: !1785, retainedNodes: !8001)
!8001 = !{!8002, !8003, !8004, !8005, !8006, !8007}
!8002 = !DILocalVariable(name: "this", arg: 1, scope: !8000, type: !7527, flags: DIFlagArtificial | DIFlagObjectPointer)
!8003 = !DILocalVariable(name: "serial", arg: 2, scope: !8000, file: !1772, line: 42, type: !863)
!8004 = !DILocalVariable(name: "readBuffer", arg: 3, scope: !8000, file: !1772, line: 42, type: !86)
!8005 = !DILocalVariable(name: "writeBuffer", arg: 4, scope: !8000, file: !1772, line: 43, type: !86)
!8006 = !DILocalVariable(name: "readBufferSize", arg: 5, scope: !8000, file: !1772, line: 43, type: !774)
!8007 = !DILocalVariable(name: "writeBufferSize", arg: 6, scope: !8000, file: !1772, line: 43, type: !774)
!8008 = !DILocation(line: 0, scope: !8000)
!8009 = !DILocation(line: 45, column: 1, scope: !8000)
!8010 = !DILocation(line: 44, column: 5, scope: !8000)
!8011 = !DILocation(line: 148, column: 17, scope: !8012)
!8012 = !DILexicalBlockFile(scope: !8000, file: !1775, discriminator: 0)
!8013 = !DILocation(line: 46, column: 5, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8015, file: !1772, line: 45, column: 1)
!8015 = !DILexicalBlockFile(scope: !8000, file: !1772, discriminator: 0)
!8016 = !DILocation(line: 46, column: 26, scope: !8014)
!8017 = !DILocation(line: 47, column: 1, scope: !8015)
!8018 = distinct !DISubprogram(name: "~Stm32Uart", linkageName: "_ZN6Cicada9Stm32UartD2Ev", scope: !720, file: !622, line: 73, type: !780, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, declaration: !779, retainedNodes: !8019)
!8019 = !{!8020}
!8020 = !DILocalVariable(name: "this", arg: 1, scope: !8018, type: !727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8021 = !DILocation(line: 0, scope: !8018)
!8022 = !DILocation(line: 74, column: 1, scope: !8018)
!8023 = !DILocation(line: 75, column: 9, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8025, file: !622, line: 75, column: 9)
!8025 = distinct !DILexicalBlock(scope: !8018, file: !622, line: 74, column: 1)
!8026 = !{!8027, !2140, i64 104}
!8027 = !{!"_ZTSN6Cicada9Stm32UartE", !2140, i64 104, !8028, i64 108, !2287, i64 180, !2139, i64 184, !2139, i64 186, !8032, i64 188}
!8028 = !{!"_ZTS20__UART_HandleTypeDef", !2287, i64 0, !8029, i64 4, !2287, i64 32, !2139, i64 36, !2139, i64 38, !2287, i64 40, !2139, i64 44, !2139, i64 46, !2287, i64 48, !2287, i64 52, !8030, i64 56, !8031, i64 60, !8031, i64 64, !2141, i64 68}
!8029 = !{!"_ZTS16UART_InitTypeDef", !2141, i64 0, !2141, i64 4, !2141, i64 8, !2141, i64 12, !2141, i64 16, !2141, i64 20, !2141, i64 24}
!8030 = !{!"_ZTS15HAL_LockTypeDef", !2140, i64 0}
!8031 = !{!"_ZTS21HAL_UART_StateTypeDef", !2140, i64 0}
!8032 = !{!"_ZTS9IRQn_Type", !2140, i64 0}
!8033 = !DILocation(line: 75, column: 16, scope: !8024)
!8034 = !DILocation(line: 75, column: 9, scope: !8025)
!8035 = !DILocation(line: 76, column: 9, scope: !8024)
!8036 = !DILocation(line: 77, column: 1, scope: !8025)
!8037 = !DILocation(line: 77, column: 1, scope: !8018)
!8038 = distinct !DISubprogram(name: "~Stm32Uart", linkageName: "_ZN6Cicada9Stm32UartD0Ev", scope: !720, file: !622, line: 73, type: !780, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, declaration: !779, retainedNodes: !8039)
!8039 = !{!8040}
!8040 = !DILocalVariable(name: "this", arg: 1, scope: !8038, type: !727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8041 = !DILocation(line: 0, scope: !8038)
!8042 = !DILocation(line: 74, column: 1, scope: !8038)
!8043 = !DILocation(line: 77, column: 1, scope: !8038)
!8044 = distinct !DISubprogram(name: "writeBufferProcessed", linkageName: "_ZNK6Cicada9Stm32Uart20writeBufferProcessedEv", scope: !720, file: !622, line: 251, type: !810, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, declaration: !809, retainedNodes: !8045)
!8045 = !{!8046}
!8046 = !DILocalVariable(name: "this", arg: 1, scope: !8044, type: !8047, flags: DIFlagArtificial | DIFlagObjectPointer)
!8047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 32)
!8048 = !DILocation(line: 0, scope: !8044)
!8049 = !DILocation(line: 253, column: 12, scope: !8044)
!8050 = !DILocation(line: 253, column: 25, scope: !8044)
!8051 = !DILocation(line: 253, column: 42, scope: !8044)
!8052 = !DILocation(line: 253, column: 47, scope: !8044)
!8053 = !DILocation(line: 253, column: 50, scope: !8044)
!8054 = !{!8027, !2287, i64 108}
!8055 = !{!8056, !2141, i64 0}
!8056 = !{!"_ZTS13USART_TypeDef", !2141, i64 0, !2141, i64 4, !2141, i64 8, !2141, i64 12, !2141, i64 16, !2141, i64 20, !2141, i64 24}
!8057 = !DILocation(line: 253, column: 5, scope: !8044)
!8058 = distinct !DISubprogram(name: "open", linkageName: "_ZN6Cicada9Stm32Uart4openEv", scope: !720, file: !622, line: 112, type: !786, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, declaration: !785, retainedNodes: !8059)
!8059 = !{!8060}
!8060 = !DILocalVariable(name: "this", arg: 1, scope: !8058, type: !727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8061 = !DILocation(line: 0, scope: !8058)
!8062 = !DILocation(line: 114, column: 12, scope: !8058)
!8063 = !DILocation(line: 114, column: 5, scope: !8058)
!8064 = distinct !DISubprogram(name: "open", linkageName: "_ZN6Cicada9Stm32Uart4openEh", scope: !720, file: !622, line: 117, type: !789, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, declaration: !788, retainedNodes: !8065)
!8065 = !{!8066, !8067, !8068, !8072, !8074, !8078, !8082, !8086, !8090, !8094, !8098, !8102}
!8066 = !DILocalVariable(name: "this", arg: 1, scope: !8064, type: !727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8067 = !DILocalVariable(name: "priority", arg: 2, scope: !8064, file: !622, line: 117, type: !87)
!8068 = !DILocalVariable(name: "tmpreg", scope: !8069, file: !622, line: 121, type: !32)
!8069 = distinct !DILexicalBlock(scope: !8070, file: !622, line: 121, column: 9)
!8070 = distinct !DILexicalBlock(scope: !8071, file: !622, line: 120, column: 37)
!8071 = distinct !DILexicalBlock(scope: !8064, file: !622, line: 120, column: 9)
!8072 = !DILocalVariable(name: "tmpreg", scope: !8073, file: !622, line: 122, type: !72)
!8073 = distinct !DILexicalBlock(scope: !8070, file: !622, line: 122, column: 9)
!8074 = !DILocalVariable(name: "tmpreg", scope: !8075, file: !622, line: 125, type: !72)
!8075 = distinct !DILexicalBlock(scope: !8076, file: !622, line: 125, column: 9)
!8076 = distinct !DILexicalBlock(scope: !8077, file: !622, line: 124, column: 44)
!8077 = distinct !DILexicalBlock(scope: !8071, file: !622, line: 124, column: 16)
!8078 = !DILocalVariable(name: "tmpreg", scope: !8079, file: !622, line: 128, type: !72)
!8079 = distinct !DILexicalBlock(scope: !8080, file: !622, line: 128, column: 9)
!8080 = distinct !DILexicalBlock(scope: !8081, file: !622, line: 127, column: 44)
!8081 = distinct !DILexicalBlock(scope: !8077, file: !622, line: 127, column: 16)
!8082 = !DILocalVariable(name: "tmpreg", scope: !8083, file: !622, line: 146, type: !72)
!8083 = distinct !DILexicalBlock(scope: !8084, file: !622, line: 146, column: 9)
!8084 = distinct !DILexicalBlock(scope: !8085, file: !622, line: 145, column: 29)
!8085 = distinct !DILexicalBlock(scope: !8064, file: !622, line: 145, column: 9)
!8086 = !DILocalVariable(name: "tmpreg", scope: !8087, file: !622, line: 148, type: !72)
!8087 = distinct !DILexicalBlock(scope: !8088, file: !622, line: 148, column: 9)
!8088 = distinct !DILexicalBlock(scope: !8089, file: !622, line: 147, column: 36)
!8089 = distinct !DILexicalBlock(scope: !8085, file: !622, line: 147, column: 16)
!8090 = !DILocalVariable(name: "tmpreg", scope: !8091, file: !622, line: 150, type: !72)
!8091 = distinct !DILexicalBlock(scope: !8092, file: !622, line: 150, column: 9)
!8092 = distinct !DILexicalBlock(scope: !8093, file: !622, line: 149, column: 36)
!8093 = distinct !DILexicalBlock(scope: !8089, file: !622, line: 149, column: 16)
!8094 = !DILocalVariable(name: "tmpreg", scope: !8095, file: !622, line: 152, type: !72)
!8095 = distinct !DILexicalBlock(scope: !8096, file: !622, line: 152, column: 9)
!8096 = distinct !DILexicalBlock(scope: !8097, file: !622, line: 151, column: 36)
!8097 = distinct !DILexicalBlock(scope: !8093, file: !622, line: 151, column: 16)
!8098 = !DILocalVariable(name: "tmpreg", scope: !8099, file: !622, line: 154, type: !72)
!8099 = distinct !DILexicalBlock(scope: !8100, file: !622, line: 154, column: 9)
!8100 = distinct !DILexicalBlock(scope: !8101, file: !622, line: 153, column: 36)
!8101 = distinct !DILexicalBlock(scope: !8097, file: !622, line: 153, column: 16)
!8102 = !DILocalVariable(name: "gpio", scope: !8064, file: !622, line: 166, type: !8103)
!8103 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !1458, line: 60, baseType: !8104)
!8104 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1458, line: 47, size: 128, flags: DIFlagTypePassByValue, elements: !8105, identifier: "_ZTS16GPIO_InitTypeDef")
!8105 = !{!8106, !8107, !8108, !8109}
!8106 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !8104, file: !1458, line: 49, baseType: !32, size: 32)
!8107 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !8104, file: !1458, line: 52, baseType: !32, size: 32, offset: 32)
!8108 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !8104, file: !1458, line: 55, baseType: !32, size: 32, offset: 64)
!8109 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !8104, file: !1458, line: 58, baseType: !32, size: 32, offset: 96)
!8110 = !DILocation(line: 0, scope: !8064)
!8111 = !DILocation(line: 120, column: 9, scope: !8071)
!8112 = !DILocation(line: 120, column: 17, scope: !8071)
!8113 = !DILocation(line: 120, column: 9, scope: !8064)
!8114 = !DILocation(line: 121, column: 9, scope: !8069)
!8115 = !{!8116, !2141, i64 4}
!8116 = !{!"_ZTS12AFIO_TypeDef", !2141, i64 0, !2141, i64 4, !2140, i64 8, !2141, i64 24, !2141, i64 28}
!8117 = !DILocation(line: 0, scope: !8069)
!8118 = !DILocation(line: 122, column: 9, scope: !8073)
!8119 = !{!8120, !2141, i64 24}
!8120 = !{!"_ZTS11RCC_TypeDef", !2141, i64 0, !2141, i64 4, !2141, i64 8, !2141, i64 12, !2141, i64 16, !2141, i64 20, !2141, i64 24, !2141, i64 28, !2141, i64 32, !2141, i64 36}
!8121 = !DILocation(line: 122, column: 9, scope: !8070)
!8122 = !DILocation(line: 124, column: 5, scope: !8070)
!8123 = !DILocation(line: 125, column: 9, scope: !8075)
!8124 = !{!8120, !2141, i64 28}
!8125 = !DILocation(line: 125, column: 9, scope: !8076)
!8126 = !DILocation(line: 127, column: 5, scope: !8076)
!8127 = !DILocation(line: 128, column: 9, scope: !8079)
!8128 = !DILocation(line: 128, column: 9, scope: !8080)
!8129 = !DILocation(line: 0, scope: !8071)
!8130 = !{!8027, !8032, i64 188}
!8131 = !DILocation(line: 145, column: 9, scope: !8085)
!8132 = !{!8027, !2287, i64 180}
!8133 = !DILocation(line: 145, column: 9, scope: !8064)
!8134 = !DILocation(line: 146, column: 9, scope: !8083)
!8135 = !DILocation(line: 146, column: 9, scope: !8084)
!8136 = !DILocation(line: 147, column: 5, scope: !8084)
!8137 = !DILocation(line: 148, column: 9, scope: !8087)
!8138 = !DILocation(line: 148, column: 9, scope: !8088)
!8139 = !DILocation(line: 149, column: 5, scope: !8088)
!8140 = !DILocation(line: 150, column: 9, scope: !8091)
!8141 = !DILocation(line: 150, column: 9, scope: !8092)
!8142 = !DILocation(line: 151, column: 5, scope: !8092)
!8143 = !DILocation(line: 152, column: 9, scope: !8095)
!8144 = !DILocation(line: 152, column: 9, scope: !8096)
!8145 = !DILocation(line: 153, column: 5, scope: !8096)
!8146 = !DILocation(line: 154, column: 9, scope: !8099)
!8147 = !DILocation(line: 154, column: 9, scope: !8100)
!8148 = !DILocation(line: 163, column: 5, scope: !8100)
!8149 = !DILocation(line: 166, column: 5, scope: !8064)
!8150 = !DILocation(line: 166, column: 22, scope: !8064)
!8151 = !DILocation(line: 167, column: 16, scope: !8064)
!8152 = !{!8027, !2139, i64 184}
!8153 = !DILocation(line: 167, column: 10, scope: !8064)
!8154 = !DILocation(line: 167, column: 14, scope: !8064)
!8155 = !{!8156, !2141, i64 0}
!8156 = !{!"_ZTS16GPIO_InitTypeDef", !2141, i64 0, !2141, i64 4, !2141, i64 8, !2141, i64 12}
!8157 = !DILocation(line: 168, column: 10, scope: !8064)
!8158 = !DILocation(line: 168, column: 15, scope: !8064)
!8159 = !{!8156, !2141, i64 4}
!8160 = !DILocation(line: 169, column: 10, scope: !8064)
!8161 = !DILocation(line: 169, column: 15, scope: !8064)
!8162 = !{!8156, !2141, i64 8}
!8163 = !DILocation(line: 170, column: 10, scope: !8064)
!8164 = !DILocation(line: 170, column: 16, scope: !8064)
!8165 = !{!8156, !2141, i64 12}
!8166 = !DILocation(line: 171, column: 5, scope: !8064)
!8167 = !DILocation(line: 173, column: 16, scope: !8064)
!8168 = !{!8027, !2139, i64 186}
!8169 = !DILocation(line: 173, column: 14, scope: !8064)
!8170 = !DILocation(line: 174, column: 15, scope: !8064)
!8171 = !DILocation(line: 175, column: 19, scope: !8064)
!8172 = !DILocation(line: 175, column: 5, scope: !8064)
!8173 = !DILocation(line: 178, column: 18, scope: !8064)
!8174 = !DILocation(line: 178, column: 27, scope: !8064)
!8175 = !{!8027, !2141, i64 120}
!8176 = !DILocation(line: 179, column: 18, scope: !8064)
!8177 = !DILocation(line: 179, column: 25, scope: !8064)
!8178 = !{!8027, !2141, i64 124}
!8179 = !DILocation(line: 180, column: 18, scope: !8064)
!8180 = !DILocation(line: 180, column: 23, scope: !8064)
!8181 = !{!8027, !2141, i64 128}
!8182 = !DILocation(line: 181, column: 18, scope: !8064)
!8183 = !DILocation(line: 181, column: 28, scope: !8064)
!8184 = !{!8027, !2141, i64 132}
!8185 = !DILocation(line: 182, column: 18, scope: !8064)
!8186 = !DILocation(line: 182, column: 31, scope: !8064)
!8187 = !{!8027, !2141, i64 136}
!8188 = !DILocation(line: 184, column: 9, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8064, file: !622, line: 184, column: 9)
!8190 = !DILocation(line: 184, column: 33, scope: !8189)
!8191 = !DILocation(line: 184, column: 9, scope: !8064)
!8192 = !DILocation(line: 188, column: 22, scope: !8064)
!8193 = !DILocation(line: 188, column: 46, scope: !8064)
!8194 = !DILocation(line: 188, column: 5, scope: !8064)
!8195 = !DILocation(line: 189, column: 20, scope: !8064)
!8196 = !DILocation(line: 189, column: 5, scope: !8064)
!8197 = !DILocation(line: 190, column: 5, scope: !8064)
!8198 = !{!8056, !2141, i64 12}
!8199 = !DILocation(line: 192, column: 5, scope: !8064)
!8200 = !DILocation(line: 192, column: 12, scope: !8064)
!8201 = !DILocation(line: 194, column: 5, scope: !8064)
!8202 = !DILocation(line: 195, column: 1, scope: !8064)
!8203 = distinct !DISubprogram(name: "isOpen", linkageName: "_ZN6Cicada9Stm32Uart6isOpenEv", scope: !720, file: !622, line: 207, type: !786, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, declaration: !791, retainedNodes: !8204)
!8204 = !{!8205}
!8205 = !DILocalVariable(name: "this", arg: 1, scope: !8203, type: !727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8206 = !DILocation(line: 0, scope: !8203)
!8207 = !DILocation(line: 209, column: 12, scope: !8203)
!8208 = !DILocation(line: 209, column: 19, scope: !8203)
!8209 = !DILocation(line: 209, column: 5, scope: !8203)
!8210 = distinct !DISubprogram(name: "setSerialConfig", linkageName: "_ZN6Cicada9Stm32Uart15setSerialConfigEjh", scope: !720, file: !622, line: 91, type: !793, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, declaration: !792, retainedNodes: !8211)
!8211 = !{!8212, !8213, !8214}
!8212 = !DILocalVariable(name: "this", arg: 1, scope: !8210, type: !727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8213 = !DILocalVariable(name: "baudRate", arg: 2, scope: !8210, file: !622, line: 91, type: !32)
!8214 = !DILocalVariable(name: "dataBits", arg: 3, scope: !8210, file: !622, line: 91, type: !87)
!8215 = !DILocation(line: 0, scope: !8210)
!8216 = !DILocation(line: 93, column: 23, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8210, file: !622, line: 93, column: 9)
!8218 = !DILocation(line: 96, column: 18, scope: !8210)
!8219 = !DILocation(line: 96, column: 27, scope: !8210)
!8220 = !{!8027, !2141, i64 112}
!8221 = !DILocation(line: 98, column: 5, scope: !8210)
!8222 = !DILocation(line: 104, column: 9, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8210, file: !622, line: 98, column: 23)
!8224 = !DILocation(line: 0, scope: !8223)
!8225 = !{!8027, !2141, i64 116}
!8226 = !DILocation(line: 110, column: 1, scope: !8210)
!8227 = distinct !DISubprogram(name: "close", linkageName: "_ZN6Cicada9Stm32Uart5closeEv", scope: !720, file: !622, line: 197, type: !780, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, declaration: !795, retainedNodes: !8228)
!8228 = !{!8229}
!8229 = !DILocalVariable(name: "this", arg: 1, scope: !8227, type: !727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8230 = !DILocation(line: 0, scope: !8227)
!8231 = !DILocation(line: 199, column: 21, scope: !8227)
!8232 = !DILocation(line: 199, column: 5, scope: !8227)
!8233 = !DILocation(line: 200, column: 22, scope: !8227)
!8234 = !DILocation(line: 200, column: 5, scope: !8227)
!8235 = !DILocation(line: 201, column: 21, scope: !8227)
!8236 = !DILocation(line: 201, column: 32, scope: !8227)
!8237 = !DILocation(line: 201, column: 5, scope: !8227)
!8238 = !DILocation(line: 202, column: 21, scope: !8227)
!8239 = !DILocation(line: 202, column: 32, scope: !8227)
!8240 = !DILocation(line: 202, column: 5, scope: !8227)
!8241 = !DILocation(line: 204, column: 5, scope: !8227)
!8242 = !DILocation(line: 204, column: 12, scope: !8227)
!8243 = !DILocation(line: 205, column: 1, scope: !8227)
!8244 = distinct !DISubprogram(name: "portName", linkageName: "_ZNK6Cicada9Stm32Uart8portNameEv", scope: !720, file: !622, line: 212, type: !797, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, declaration: !796, retainedNodes: !8245)
!8245 = !{!8246}
!8246 = !DILocalVariable(name: "this", arg: 1, scope: !8244, type: !8047, flags: DIFlagArtificial | DIFlagObjectPointer)
!8247 = !DILocation(line: 0, scope: !8244)
!8248 = !DILocation(line: 214, column: 5, scope: !8244)
!8249 = distinct !DISubprogram(name: "rawRead", linkageName: "_ZN6Cicada9Stm32Uart7rawReadERh", scope: !720, file: !622, line: 217, type: !804, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, declaration: !803, retainedNodes: !8250)
!8250 = !{!8251, !8252}
!8251 = !DILocalVariable(name: "this", arg: 1, scope: !8249, type: !727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8252 = !DILocalVariable(name: "data", arg: 2, scope: !8249, file: !622, line: 217, type: !806)
!8253 = !DILocation(line: 0, scope: !8249)
!8254 = !DILocation(line: 219, column: 9, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8249, file: !622, line: 219, column: 9)
!8256 = !DILocation(line: 219, column: 55, scope: !8255)
!8257 = !DILocation(line: 220, column: 9, scope: !8255)
!8258 = !DILocation(line: 219, column: 9, scope: !8249)
!8259 = !DILocation(line: 221, column: 25, scope: !8260)
!8260 = distinct !DILexicalBlock(scope: !8255, file: !622, line: 220, column: 55)
!8261 = !{!8056, !2141, i64 4}
!8262 = !DILocation(line: 221, column: 14, scope: !8260)
!8263 = !DILocation(line: 222, column: 9, scope: !8260)
!8264 = !DILocation(line: 226, column: 1, scope: !8249)
!8265 = distinct !DISubprogram(name: "rawWrite", linkageName: "_ZN6Cicada9Stm32Uart8rawWriteEh", scope: !720, file: !622, line: 228, type: !789, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, declaration: !807, retainedNodes: !8266)
!8266 = !{!8267, !8268}
!8267 = !DILocalVariable(name: "this", arg: 1, scope: !8265, type: !727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8268 = !DILocalVariable(name: "data", arg: 2, scope: !8265, file: !622, line: 228, type: !87)
!8269 = !DILocation(line: 0, scope: !8265)
!8270 = !DILocation(line: 230, column: 9, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8265, file: !622, line: 230, column: 9)
!8272 = !DILocation(line: 230, column: 9, scope: !8265)
!8273 = !DILocation(line: 231, column: 9, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8271, file: !622, line: 230, column: 55)
!8275 = !DILocation(line: 232, column: 9, scope: !8274)
!8276 = !DILocation(line: 236, column: 1, scope: !8265)
!8277 = distinct !DISubprogram(name: "startTransmit", linkageName: "_ZN6Cicada9Stm32Uart13startTransmitEv", scope: !720, file: !622, line: 238, type: !780, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, declaration: !808, retainedNodes: !8278)
!8278 = !{!8279}
!8279 = !DILocalVariable(name: "this", arg: 1, scope: !8277, type: !727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8280 = !DILocation(line: 0, scope: !8277)
!8281 = !DILocation(line: 240, column: 5, scope: !8277)
!8282 = !DILocation(line: 241, column: 1, scope: !8277)
!8283 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32UartD1Ev", scope: !622, file: !622, line: 73, type: !6778, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, retainedNodes: !152)
!8284 = !DILocation(line: 0, scope: !8283)
!8285 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32UartD0Ev", scope: !622, file: !622, line: 73, type: !6778, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, retainedNodes: !152)
!8286 = !DILocation(line: 0, scope: !8285)
!8287 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart4openEv", scope: !622, file: !622, line: 112, type: !6778, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, retainedNodes: !152)
!8288 = !DILocation(line: 0, scope: !8287)
!8289 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart6isOpenEv", scope: !622, file: !622, line: 207, type: !6778, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, retainedNodes: !152)
!8290 = !DILocation(line: 0, scope: !8289)
!8291 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart15setSerialConfigEjh", scope: !622, file: !622, line: 91, type: !6778, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, retainedNodes: !152)
!8292 = !DILocation(line: 0, scope: !8291)
!8293 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart5closeEv", scope: !622, file: !622, line: 197, type: !6778, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, retainedNodes: !152)
!8294 = !DILocation(line: 0, scope: !8293)
!8295 = distinct !DISubprogram(linkageName: "_ZThn4_NK6Cicada9Stm32Uart8portNameEv", scope: !622, file: !622, line: 212, type: !6778, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, retainedNodes: !152)
!8296 = !DILocation(line: 0, scope: !8295)
!8297 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart7rawReadERh", scope: !622, file: !622, line: 217, type: !6778, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, retainedNodes: !152)
!8298 = !DILocation(line: 0, scope: !8297)
!8299 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart8rawWriteEh", scope: !622, file: !622, line: 228, type: !6778, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, retainedNodes: !152)
!8300 = !DILocation(line: 0, scope: !8299)
!8301 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart13startTransmitEv", scope: !622, file: !622, line: 238, type: !6778, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, retainedNodes: !152)
!8302 = !DILocation(line: 0, scope: !8301)
!8303 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", linkageName: "_ZL17__NVIC_DisableIRQ9IRQn_Type", scope: !338, file: !338, line: 1547, type: !8304, scopeLine: 1548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !621, retainedNodes: !8306)
!8304 = !DISubroutineType(types: !8305)
!8305 = !{null, !769}
!8306 = !{!8307}
!8307 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8303, file: !338, line: 1547, type: !769)
!8308 = !DILocation(line: 0, scope: !8303)
!8309 = !DILocation(line: 1549, column: 23, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8303, file: !338, line: 1549, column: 7)
!8311 = !DILocation(line: 1549, column: 7, scope: !8303)
!8312 = !DILocation(line: 1551, column: 81, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8310, file: !338, line: 1550, column: 3)
!8314 = !DILocation(line: 1551, column: 60, scope: !8313)
!8315 = !DILocation(line: 1551, column: 34, scope: !8313)
!8316 = !DILocation(line: 1551, column: 5, scope: !8313)
!8317 = !DILocation(line: 1551, column: 43, scope: !8313)
!8318 = !DILocation(line: 879, column: 3, scope: !8319, inlinedAt: !8320)
!8319 = distinct !DISubprogram(name: "__DSB", linkageName: "_ZL5__DSBv", scope: !6058, file: !6058, line: 877, type: !150, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !621, retainedNodes: !152)
!8320 = distinct !DILocation(line: 1552, column: 5, scope: !8313)
!8321 = !{i64 1321711}
!8322 = !DILocation(line: 868, column: 3, scope: !8323, inlinedAt: !8324)
!8323 = distinct !DISubprogram(name: "__ISB", linkageName: "_ZL5__ISBv", scope: !6058, file: !6058, line: 866, type: !150, scopeLine: 867, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !621, retainedNodes: !152)
!8324 = distinct !DILocation(line: 1553, column: 5, scope: !8313)
!8325 = !{i64 1321417}
!8326 = !DILocation(line: 1554, column: 3, scope: !8313)
!8327 = !DILocation(line: 1555, column: 1, scope: !8303)
!8328 = distinct !DISubprogram(name: "__NVIC_SetPriority", linkageName: "_ZL18__NVIC_SetPriority9IRQn_Typej", scope: !338, file: !338, line: 1639, type: !8329, scopeLine: 1640, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !621, retainedNodes: !8331)
!8329 = !DISubroutineType(types: !8330)
!8330 = !{null, !769, !32}
!8331 = !{!8332, !8333}
!8332 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8328, file: !338, line: 1639, type: !769)
!8333 = !DILocalVariable(name: "priority", arg: 2, scope: !8328, file: !338, line: 1639, type: !32)
!8334 = !DILocation(line: 0, scope: !8328)
!8335 = !DILocation(line: 0, scope: !8336)
!8336 = distinct !DILexicalBlock(scope: !8328, file: !338, line: 1641, column: 7)
!8337 = !DILocation(line: 1641, column: 7, scope: !8328)
!8338 = !DILocation(line: 1649, column: 1, scope: !8328)
!8339 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", linkageName: "_ZL16__NVIC_EnableIRQ9IRQn_Type", scope: !338, file: !338, line: 1511, type: !8304, scopeLine: 1512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !621, retainedNodes: !8340)
!8340 = !{!8341}
!8341 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8339, file: !338, line: 1511, type: !769)
!8342 = !DILocation(line: 0, scope: !8339)
!8343 = !DILocation(line: 1513, column: 23, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8339, file: !338, line: 1513, column: 7)
!8345 = !DILocation(line: 1513, column: 7, scope: !8339)
!8346 = !DILocation(line: 1515, column: 81, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8344, file: !338, line: 1514, column: 3)
!8348 = !DILocation(line: 1515, column: 60, scope: !8347)
!8349 = !DILocation(line: 1515, column: 34, scope: !8347)
!8350 = !DILocation(line: 1515, column: 5, scope: !8347)
!8351 = !DILocation(line: 1515, column: 43, scope: !8347)
!8352 = !DILocation(line: 1516, column: 3, scope: !8347)
!8353 = !DILocation(line: 1517, column: 1, scope: !8339)
!8354 = distinct !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv", scope: !1872, file: !1573, line: 174, type: !1907, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, declaration: !1906, retainedNodes: !8355)
!8355 = !{!8356}
!8356 = !DILocalVariable(name: "this", arg: 1, scope: !8354, type: !8357, flags: DIFlagArtificial | DIFlagObjectPointer)
!8357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 32)
!8358 = !DILocation(line: 0, scope: !8354)
!8359 = !DILocation(line: 176, column: 16, scope: !8354)
!8360 = !{!8361, !6682, i64 24}
!8361 = !{!"_ZTSN6Cicada14CircularBufferIcEE", !6682, i64 8, !6682, i64 16, !6682, i64 24, !6682, i64 32, !2287, i64 40}
!8362 = !DILocation(line: 176, column: 9, scope: !8354)
!8363 = distinct !DISubprogram(name: "~BufferedSerial", linkageName: "_ZN6Cicada14BufferedSerialD2Ev", scope: !723, file: !724, line: 42, type: !8364, scopeLine: 42, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, declaration: !8367, retainedNodes: !8368)
!8364 = !DISubroutineType(types: !8365)
!8365 = !{null, !8366}
!8366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!8367 = !DISubprogram(name: "~BufferedSerial", scope: !723, type: !8364, containingType: !723, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!8368 = !{!8369}
!8369 = !DILocalVariable(name: "this", arg: 1, scope: !8363, type: !8370, flags: DIFlagArtificial | DIFlagObjectPointer)
!8370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 32)
!8371 = !DILocation(line: 0, scope: !8363)
!8372 = !DILocation(line: 42, column: 7, scope: !8373)
!8373 = distinct !DILexicalBlock(scope: !8363, file: !724, line: 42, column: 7)
!8374 = !DILocation(line: 42, column: 7, scope: !8363)
!8375 = distinct !DISubprogram(name: "~CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIcED2Ev", scope: !1872, file: !1573, line: 56, type: !1884, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, declaration: !1883, retainedNodes: !8376)
!8376 = !{!8377}
!8377 = !DILocalVariable(name: "this", arg: 1, scope: !8375, type: !8378, flags: DIFlagArtificial | DIFlagObjectPointer)
!8378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 32)
!8379 = !DILocation(line: 0, scope: !8375)
!8380 = !DILocation(line: 57, column: 7, scope: !8375)
!8381 = distinct !DISubprogram(name: "~IBufferedSerial", linkageName: "_ZN6Cicada15IBufferedSerialD2Ev", scope: !864, file: !865, line: 42, type: !898, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, declaration: !897, retainedNodes: !8382)
!8382 = !{!8383}
!8383 = !DILocalVariable(name: "this", arg: 1, scope: !8381, type: !8384, flags: DIFlagArtificial | DIFlagObjectPointer)
!8384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 32)
!8385 = !DILocation(line: 0, scope: !8381)
!8386 = !DILocation(line: 42, column: 34, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8381, file: !865, line: 42, column: 32)
!8388 = !DILocation(line: 42, column: 34, scope: !8381)
!8389 = distinct !DISubprogram(name: "~ISerial", linkageName: "_ZN6Cicada7ISerialD2Ev", scope: !869, file: !870, line: 40, type: !874, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, declaration: !873, retainedNodes: !8390)
!8390 = !{!8391}
!8391 = !DILocalVariable(name: "this", arg: 1, scope: !8389, type: !8392, flags: DIFlagArtificial | DIFlagObjectPointer)
!8392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 32)
!8393 = !DILocation(line: 0, scope: !8389)
!8394 = !DILocation(line: 40, column: 26, scope: !8389)
!8395 = distinct !DISubprogram(name: "Stm32Uart", linkageName: "_ZN6Cicada9Stm32UartC2EPcS1_yyP13USART_TypeDefP12GPIO_TypeDeftt", scope: !720, file: !622, line: 34, type: !777, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, declaration: !776, retainedNodes: !8396)
!8396 = !{!8397, !8398, !8399, !8400, !8401, !8402, !8403, !8404, !8405}
!8397 = !DILocalVariable(name: "this", arg: 1, scope: !8395, type: !727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8398 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !8395, file: !622, line: 34, type: !261)
!8399 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !8395, file: !622, line: 34, type: !261)
!8400 = !DILocalVariable(name: "readBufferSize", arg: 4, scope: !8395, file: !622, line: 34, type: !774)
!8401 = !DILocalVariable(name: "writeBufferSize", arg: 5, scope: !8395, file: !622, line: 34, type: !774)
!8402 = !DILocalVariable(name: "uartInstance", arg: 6, scope: !8395, file: !622, line: 35, type: !66)
!8403 = !DILocalVariable(name: "uartPort", arg: 7, scope: !8395, file: !622, line: 35, type: !79)
!8404 = !DILocalVariable(name: "txPin", arg: 8, scope: !8395, file: !622, line: 35, type: !26)
!8405 = !DILocalVariable(name: "rxPin", arg: 9, scope: !8395, file: !622, line: 35, type: !26)
!8406 = !DILocation(line: 0, scope: !8395)
!8407 = !DILocation(line: 43, column: 1, scope: !8395)
!8408 = !DILocation(line: 36, column: 5, scope: !8395)
!8409 = !DILocation(line: 37, column: 5, scope: !8395)
!8410 = !DILocation(line: 38, column: 5, scope: !8395)
!8411 = !DILocation(line: 39, column: 5, scope: !8395)
!8412 = !DILocation(line: 40, column: 5, scope: !8395)
!8413 = !DILocation(line: 41, column: 5, scope: !8395)
!8414 = !DILocation(line: 42, column: 5, scope: !8395)
!8415 = !DILocation(line: 44, column: 5, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8395, file: !622, line: 43, column: 1)
!8417 = !DILocation(line: 45, column: 1, scope: !8395)
!8418 = distinct !DISubprogram(name: "init", linkageName: "_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef", scope: !720, file: !622, line: 59, type: !822, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, declaration: !821, retainedNodes: !8419)
!8419 = !{!8420, !8421, !8422}
!8420 = !DILocalVariable(name: "this", arg: 1, scope: !8418, type: !727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8421 = !DILocalVariable(name: "uartInstance", arg: 2, scope: !8418, file: !622, line: 59, type: !66)
!8422 = !DILocalVariable(name: "i", scope: !8423, file: !622, line: 65, type: !24)
!8423 = distinct !DILexicalBlock(scope: !8418, file: !622, line: 65, column: 5)
!8424 = !DILocation(line: 0, scope: !8418)
!8425 = !DILocation(line: 61, column: 13, scope: !8418)
!8426 = !DILocation(line: 61, column: 22, scope: !8418)
!8427 = !DILocation(line: 62, column: 18, scope: !8418)
!8428 = !DILocation(line: 62, column: 27, scope: !8418)
!8429 = !DILocation(line: 63, column: 18, scope: !8418)
!8430 = !DILocation(line: 63, column: 29, scope: !8418)
!8431 = !DILocation(line: 0, scope: !8423)
!8432 = !DILocation(line: 65, column: 5, scope: !8423)
!8433 = !DILocation(line: 65, column: 52, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8423, file: !622, line: 65, column: 5)
!8435 = !DILocation(line: 65, column: 23, scope: !8434)
!8436 = distinct !{!8436, !8432, !8437, !2129, !2130}
!8437 = !DILocation(line: 70, column: 5, scope: !8423)
!8438 = !DILocation(line: 66, column: 13, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8440, file: !622, line: 66, column: 13)
!8440 = distinct !DILexicalBlock(scope: !8434, file: !622, line: 65, column: 56)
!8441 = !DILocation(line: 66, column: 25, scope: !8439)
!8442 = !DILocation(line: 66, column: 13, scope: !8440)
!8443 = !DILocation(line: 67, column: 25, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8439, file: !622, line: 66, column: 34)
!8445 = !DILocation(line: 68, column: 13, scope: !8444)
!8446 = !DILocation(line: 71, column: 1, scope: !8418)
!8447 = distinct !DISubprogram(name: "Stm32Uart", linkageName: "_ZN6Cicada9Stm32UartC2EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt", scope: !720, file: !622, line: 46, type: !771, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, declaration: !770, retainedNodes: !8448)
!8448 = !{!8449, !8450, !8451, !8452, !8453, !8454, !8455, !8456}
!8449 = !DILocalVariable(name: "this", arg: 1, scope: !8447, type: !727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8450 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !8447, file: !622, line: 46, type: !261)
!8451 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !8447, file: !622, line: 46, type: !261)
!8452 = !DILocalVariable(name: "bufferSize", arg: 4, scope: !8447, file: !622, line: 46, type: !774)
!8453 = !DILocalVariable(name: "uartInstance", arg: 5, scope: !8447, file: !622, line: 47, type: !66)
!8454 = !DILocalVariable(name: "uartPort", arg: 6, scope: !8447, file: !622, line: 47, type: !79)
!8455 = !DILocalVariable(name: "txPin", arg: 7, scope: !8447, file: !622, line: 47, type: !26)
!8456 = !DILocalVariable(name: "rxPin", arg: 8, scope: !8447, file: !622, line: 47, type: !26)
!8457 = !DILocation(line: 0, scope: !8447)
!8458 = !DILocation(line: 55, column: 1, scope: !8447)
!8459 = !DILocation(line: 48, column: 5, scope: !8447)
!8460 = !DILocation(line: 49, column: 5, scope: !8447)
!8461 = !DILocation(line: 50, column: 5, scope: !8447)
!8462 = !DILocation(line: 51, column: 5, scope: !8447)
!8463 = !DILocation(line: 52, column: 5, scope: !8447)
!8464 = !DILocation(line: 53, column: 5, scope: !8447)
!8465 = !DILocation(line: 54, column: 5, scope: !8447)
!8466 = !DILocation(line: 56, column: 5, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8447, file: !622, line: 55, column: 1)
!8468 = !DILocation(line: 57, column: 1, scope: !8447)
!8469 = distinct !DISubprogram(name: "getInstance", linkageName: "_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef", scope: !720, file: !622, line: 79, type: !783, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, declaration: !782, retainedNodes: !8470)
!8470 = !{!8471, !8472, !8474}
!8471 = !DILocalVariable(name: "uartInstance", arg: 1, scope: !8469, file: !622, line: 79, type: !66)
!8472 = !DILocalVariable(name: "i", scope: !8473, file: !622, line: 81, type: !24)
!8473 = distinct !DILexicalBlock(scope: !8469, file: !622, line: 81, column: 5)
!8474 = !DILocalVariable(name: "uart", scope: !8475, file: !622, line: 82, type: !727)
!8475 = distinct !DILexicalBlock(scope: !8476, file: !622, line: 81, column: 56)
!8476 = distinct !DILexicalBlock(scope: !8473, file: !622, line: 81, column: 5)
!8477 = !DILocation(line: 0, scope: !8469)
!8478 = !DILocation(line: 0, scope: !8473)
!8479 = !DILocation(line: 81, column: 5, scope: !8473)
!8480 = !DILocation(line: 81, column: 52, scope: !8476)
!8481 = !DILocation(line: 81, column: 23, scope: !8476)
!8482 = distinct !{!8482, !8479, !8483, !2129, !2130}
!8483 = !DILocation(line: 86, column: 5, scope: !8473)
!8484 = !DILocation(line: 82, column: 27, scope: !8475)
!8485 = !DILocation(line: 0, scope: !8475)
!8486 = !DILocation(line: 83, column: 18, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8475, file: !622, line: 83, column: 13)
!8488 = !DILocation(line: 83, column: 26, scope: !8487)
!8489 = !DILocation(line: 83, column: 43, scope: !8487)
!8490 = !DILocation(line: 83, column: 52, scope: !8487)
!8491 = !DILocation(line: 83, column: 13, scope: !8475)
!8492 = !DILocation(line: 86, column: 5, scope: !8476)
!8493 = !DILocation(line: 89, column: 1, scope: !8469)
!8494 = distinct !DISubprogram(name: "handleInterrupt", linkageName: "_ZN6Cicada9Stm32Uart15handleInterruptEv", scope: !720, file: !622, line: 243, type: !780, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !621, declaration: !812, retainedNodes: !8495)
!8495 = !{!8496}
!8496 = !DILocalVariable(name: "this", arg: 1, scope: !8494, type: !727, flags: DIFlagArtificial | DIFlagObjectPointer)
!8497 = !DILocation(line: 0, scope: !8494)
!8498 = !DILocation(line: 245, column: 5, scope: !8494)
!8499 = !DILocation(line: 247, column: 10, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8494, file: !622, line: 247, column: 9)
!8501 = !DILocation(line: 247, column: 23, scope: !8500)
!8502 = !DILocation(line: 247, column: 9, scope: !8494)
!8503 = !DILocation(line: 248, column: 9, scope: !8500)
!8504 = !DILocation(line: 249, column: 1, scope: !8494)
!8505 = distinct !DISubprogram(name: "~ATCommDevice", linkageName: "_ZN6Cicada12ATCommDeviceD0Ev", scope: !856, file: !857, line: 46, type: !948, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !853, declaration: !947, retainedNodes: !8506)
!8506 = !{!8507}
!8507 = !DILocalVariable(name: "this", arg: 1, scope: !8505, type: !8508, flags: DIFlagArtificial | DIFlagObjectPointer)
!8508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 32)
!8509 = !DILocation(line: 0, scope: !8505)
!8510 = !DILocation(line: 46, column: 29, scope: !8505)
!8511 = distinct !DISubprogram(name: "serialWrite", linkageName: "_ZN6Cicada12ATCommDevice11serialWriteEPc", scope: !856, file: !854, line: 155, type: !951, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !853, declaration: !950, retainedNodes: !8512)
!8512 = !{!8513, !8514}
!8513 = !DILocalVariable(name: "this", arg: 1, scope: !8511, type: !8508, flags: DIFlagArtificial | DIFlagObjectPointer)
!8514 = !DILocalVariable(name: "data", arg: 2, scope: !8511, file: !854, line: 155, type: !261)
!8515 = !DILocation(line: 0, scope: !8511)
!8516 = !DILocation(line: 157, column: 9, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8511, file: !854, line: 157, column: 9)
!8518 = !DILocation(line: 157, column: 24, scope: !8517)
!8519 = !DILocation(line: 157, column: 9, scope: !8511)
!8520 = !DILocation(line: 158, column: 16, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8517, file: !854, line: 157, column: 41)
!8522 = !DILocation(line: 158, column: 24, scope: !8521)
!8523 = !DILocation(line: 158, column: 9, scope: !8521)
!8524 = !DILocation(line: 162, column: 1, scope: !8511)
!8525 = distinct !DISubprogram(name: "serialRead", linkageName: "_ZN6Cicada12ATCommDevice10serialReadEPcy", scope: !856, file: !854, line: 164, type: !954, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !853, declaration: !953, retainedNodes: !8526)
!8526 = !{!8527, !8528, !8529}
!8527 = !DILocalVariable(name: "this", arg: 1, scope: !8525, type: !8508, flags: DIFlagArtificial | DIFlagObjectPointer)
!8528 = !DILocalVariable(name: "data", arg: 2, scope: !8525, file: !854, line: 164, type: !261)
!8529 = !DILocalVariable(name: "maxSize", arg: 3, scope: !8525, file: !854, line: 164, type: !774)
!8530 = !DILocation(line: 0, scope: !8525)
!8531 = !DILocation(line: 166, column: 9, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8525, file: !854, line: 166, column: 9)
!8533 = !DILocation(line: 166, column: 24, scope: !8532)
!8534 = !DILocation(line: 166, column: 9, scope: !8525)
!8535 = !DILocation(line: 167, column: 16, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8532, file: !854, line: 166, column: 41)
!8537 = !DILocation(line: 167, column: 24, scope: !8536)
!8538 = !DILocation(line: 167, column: 9, scope: !8536)
!8539 = !DILocation(line: 171, column: 1, scope: !8525)
!8540 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada12ATCommDeviceD1Ev", scope: !857, file: !857, line: 46, type: !6778, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !853, retainedNodes: !152)
!8541 = !DILocation(line: 0, scope: !8540)
!8542 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada12ATCommDeviceD0Ev", scope: !857, file: !857, line: 46, type: !6778, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !853, retainedNodes: !152)
!8543 = !DILocation(line: 0, scope: !8542)
!8544 = distinct !DISubprogram(name: "ATCommDevice", linkageName: "_ZN6Cicada12ATCommDeviceC2ERNS_15IBufferedSerialEPhS3_y", scope: !856, file: !854, line: 38, type: !941, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !853, declaration: !940, retainedNodes: !8545)
!8545 = !{!8546, !8547, !8548, !8549, !8550}
!8546 = !DILocalVariable(name: "this", arg: 1, scope: !8544, type: !8508, flags: DIFlagArtificial | DIFlagObjectPointer)
!8547 = !DILocalVariable(name: "serial", arg: 2, scope: !8544, file: !854, line: 39, type: !863)
!8548 = !DILocalVariable(name: "readBuffer", arg: 3, scope: !8544, file: !854, line: 39, type: !86)
!8549 = !DILocalVariable(name: "writeBuffer", arg: 4, scope: !8544, file: !854, line: 39, type: !86)
!8550 = !DILocalVariable(name: "bufferSize", arg: 5, scope: !8544, file: !854, line: 39, type: !774)
!8551 = !DILocation(line: 0, scope: !8544)
!8552 = !DILocation(line: 41, column: 1, scope: !8544)
!8553 = !DILocation(line: 40, column: 5, scope: !8544)
!8554 = !DILocation(line: 40, column: 56, scope: !8544)
!8555 = !DILocation(line: 41, column: 2, scope: !8544)
!8556 = distinct !DISubprogram(name: "ATCommDevice", linkageName: "_ZN6Cicada12ATCommDeviceC2ERNS_15IBufferedSerialEPhS3_yy", scope: !856, file: !854, line: 43, type: !945, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !853, declaration: !944, retainedNodes: !8557)
!8557 = !{!8558, !8559, !8560, !8561, !8562, !8563}
!8558 = !DILocalVariable(name: "this", arg: 1, scope: !8556, type: !8508, flags: DIFlagArtificial | DIFlagObjectPointer)
!8559 = !DILocalVariable(name: "serial", arg: 2, scope: !8556, file: !854, line: 43, type: !863)
!8560 = !DILocalVariable(name: "readBuffer", arg: 3, scope: !8556, file: !854, line: 43, type: !86)
!8561 = !DILocalVariable(name: "writeBuffer", arg: 4, scope: !8556, file: !854, line: 43, type: !86)
!8562 = !DILocalVariable(name: "readBufferSize", arg: 5, scope: !8556, file: !854, line: 44, type: !774)
!8563 = !DILocalVariable(name: "writeBufferSize", arg: 6, scope: !8556, file: !854, line: 44, type: !774)
!8564 = !DILocation(line: 0, scope: !8556)
!8565 = !DILocation(line: 46, column: 1, scope: !8556)
!8566 = !DILocation(line: 45, column: 5, scope: !8556)
!8567 = !DILocation(line: 45, column: 77, scope: !8556)
!8568 = !DILocation(line: 46, column: 2, scope: !8556)
!8569 = distinct !DISubprogram(name: "logStates", linkageName: "_ZN6Cicada12ATCommDevice9logStatesEaa", scope: !856, file: !854, line: 48, type: !957, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !853, declaration: !956, retainedNodes: !8570)
!8570 = !{!8571, !8572, !8573}
!8571 = !DILocalVariable(name: "this", arg: 1, scope: !8569, type: !8508, flags: DIFlagArtificial | DIFlagObjectPointer)
!8572 = !DILocalVariable(name: "sendState", arg: 2, scope: !8569, file: !854, line: 48, type: !170)
!8573 = !DILocalVariable(name: "replyState", arg: 3, scope: !8569, file: !854, line: 48, type: !170)
!8574 = !DILocation(line: 0, scope: !8569)
!8575 = !DILocation(line: 62, column: 1, scope: !8569)
!8576 = distinct !DISubprogram(name: "flushReadBuffer", linkageName: "_ZN6Cicada12ATCommDevice15flushReadBufferEv", scope: !856, file: !854, line: 64, type: !948, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !853, declaration: !970, retainedNodes: !8577)
!8577 = !{!8578}
!8578 = !DILocalVariable(name: "this", arg: 1, scope: !8576, type: !8508, flags: DIFlagArtificial | DIFlagObjectPointer)
!8579 = !DILocation(line: 0, scope: !8576)
!8580 = !DILocation(line: 66, column: 28, scope: !8576)
!8581 = !DILocation(line: 66, column: 12, scope: !8576)
!8582 = !DILocation(line: 66, column: 25, scope: !8576)
!8583 = !DILocation(line: 66, column: 36, scope: !8576)
!8584 = !DILocation(line: 66, column: 5, scope: !8576)
!8585 = !DILocation(line: 67, column: 9, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8576, file: !854, line: 66, column: 54)
!8587 = !DILocation(line: 67, column: 17, scope: !8586)
!8588 = !DILocation(line: 68, column: 21, scope: !8586)
!8589 = distinct !{!8589, !8584, !8590, !2129, !2130}
!8590 = !DILocation(line: 69, column: 5, scope: !8576)
!8591 = !DILocation(line: 70, column: 5, scope: !8576)
!8592 = !DILocation(line: 70, column: 21, scope: !8576)
!8593 = !DILocation(line: 72, column: 9, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8576, file: !854, line: 72, column: 9)
!8595 = !DILocation(line: 72, column: 22, scope: !8594)
!8596 = !DILocation(line: 72, column: 9, scope: !8576)
!8597 = !DILocation(line: 73, column: 9, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !8594, file: !854, line: 72, column: 28)
!8599 = !DILocation(line: 73, column: 24, scope: !8598)
!8600 = !DILocation(line: 74, column: 5, scope: !8598)
!8601 = !DILocation(line: 75, column: 1, scope: !8576)
!8602 = distinct !DISubprogram(name: "handleDisconnect", linkageName: "_ZN6Cicada12ATCommDevice16handleDisconnectEa", scope: !856, file: !854, line: 77, type: !960, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !853, declaration: !959, retainedNodes: !8603)
!8603 = !{!8604, !8605}
!8604 = !DILocalVariable(name: "this", arg: 1, scope: !8602, type: !8508, flags: DIFlagArtificial | DIFlagObjectPointer)
!8605 = !DILocalVariable(name: "nextState", arg: 2, scope: !8602, file: !854, line: 77, type: !170)
!8606 = !DILocation(line: 0, scope: !8602)
!8607 = !DILocation(line: 79, column: 9, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8602, file: !854, line: 79, column: 9)
!8609 = !DILocation(line: 79, column: 24, scope: !8608)
!8610 = !DILocation(line: 79, column: 9, scope: !8602)
!8611 = !DILocation(line: 80, column: 24, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8608, file: !854, line: 79, column: 46)
!8613 = !DILocation(line: 81, column: 9, scope: !8612)
!8614 = !DILocation(line: 81, column: 20, scope: !8612)
!8615 = !DILocation(line: 83, column: 9, scope: !8612)
!8616 = !DILocation(line: 87, column: 1, scope: !8602)
!8617 = distinct !DISubprogram(name: "handleConnect", linkageName: "_ZN6Cicada12ATCommDevice13handleConnectEa", scope: !856, file: !854, line: 89, type: !960, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !853, declaration: !962, retainedNodes: !8618)
!8618 = !{!8619, !8620}
!8619 = !DILocalVariable(name: "this", arg: 1, scope: !8617, type: !8508, flags: DIFlagArtificial | DIFlagObjectPointer)
!8620 = !DILocalVariable(name: "nextState", arg: 2, scope: !8617, file: !854, line: 89, type: !170)
!8621 = !DILocation(line: 0, scope: !8617)
!8622 = !DILocation(line: 91, column: 9, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8617, file: !854, line: 91, column: 9)
!8624 = !DILocation(line: 91, column: 24, scope: !8623)
!8625 = !DILocation(line: 91, column: 9, scope: !8617)
!8626 = !DILocation(line: 92, column: 24, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8623, file: !854, line: 91, column: 43)
!8628 = !DILocation(line: 93, column: 9, scope: !8627)
!8629 = !DILocation(line: 93, column: 20, scope: !8627)
!8630 = !DILocation(line: 95, column: 9, scope: !8627)
!8631 = !DILocation(line: 99, column: 1, scope: !8617)
!8632 = distinct !DISubprogram(name: "prepareSending", linkageName: "_ZN6Cicada12ATCommDevice14prepareSendingEb", scope: !856, file: !854, line: 101, type: !967, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !853, declaration: !966, retainedNodes: !8633)
!8633 = !{!8634, !8635, !8636}
!8634 = !DILocalVariable(name: "this", arg: 1, scope: !8632, type: !8508, flags: DIFlagArtificial | DIFlagObjectPointer)
!8635 = !DILocalVariable(name: "sendChannel", arg: 2, scope: !8632, file: !854, line: 101, type: !35)
!8636 = !DILocalVariable(name: "sizeStr", scope: !8632, file: !854, line: 118, type: !7390)
!8637 = !DILocation(line: 0, scope: !8632)
!8638 = !DILocation(line: 103, column: 9, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8632, file: !854, line: 103, column: 9)
!8640 = !DILocation(line: 103, column: 17, scope: !8639)
!8641 = !DILocation(line: 103, column: 34, scope: !8639)
!8642 = !DILocation(line: 103, column: 9, scope: !8632)
!8643 = !DILocation(line: 106, column: 21, scope: !8632)
!8644 = !DILocation(line: 106, column: 34, scope: !8632)
!8645 = !DILocation(line: 106, column: 5, scope: !8632)
!8646 = !DILocation(line: 106, column: 19, scope: !8632)
!8647 = !{!7083, !6682, i64 208}
!8648 = !DILocation(line: 107, column: 25, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8632, file: !854, line: 107, column: 9)
!8650 = !DILocation(line: 107, column: 33, scope: !8649)
!8651 = !DILocation(line: 107, column: 50, scope: !8649)
!8652 = !DILocation(line: 107, column: 23, scope: !8649)
!8653 = !DILocation(line: 107, column: 9, scope: !8632)
!8654 = !DILocation(line: 108, column: 25, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8649, file: !854, line: 107, column: 73)
!8656 = !DILocation(line: 108, column: 33, scope: !8655)
!8657 = !DILocation(line: 108, column: 50, scope: !8655)
!8658 = !DILocation(line: 108, column: 23, scope: !8655)
!8659 = !DILocation(line: 109, column: 5, scope: !8655)
!8660 = !DILocation(line: 112, column: 5, scope: !8632)
!8661 = !DILocation(line: 112, column: 13, scope: !8632)
!8662 = !DILocation(line: 113, column: 9, scope: !8632)
!8663 = !DILocation(line: 114, column: 9, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8665, file: !854, line: 113, column: 22)
!8665 = distinct !DILexicalBlock(scope: !8632, file: !854, line: 113, column: 9)
!8666 = !DILocation(line: 114, column: 17, scope: !8664)
!8667 = !DILocation(line: 115, column: 5, scope: !8664)
!8668 = !DILocation(line: 118, column: 5, scope: !8632)
!8669 = !DILocation(line: 118, column: 10, scope: !8632)
!8670 = !DILocation(line: 119, column: 51, scope: !8632)
!8671 = !DILocation(line: 119, column: 5, scope: !8632)
!8672 = !DILocation(line: 120, column: 5, scope: !8632)
!8673 = !DILocation(line: 120, column: 13, scope: !8632)
!8674 = !DILocation(line: 122, column: 5, scope: !8632)
!8675 = !DILocation(line: 122, column: 19, scope: !8632)
!8676 = !DILocation(line: 125, column: 1, scope: !8632)
!8677 = distinct !DISubprogram(name: "sendData", linkageName: "_ZN6Cicada12ATCommDevice8sendDataEv", scope: !856, file: !854, line: 127, type: !948, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !853, declaration: !969, retainedNodes: !8678)
!8678 = !{!8679}
!8679 = !DILocalVariable(name: "this", arg: 1, scope: !8677, type: !8508, flags: DIFlagArtificial | DIFlagObjectPointer)
!8680 = !DILocation(line: 0, scope: !8677)
!8681 = !DILocation(line: 129, column: 25, scope: !8677)
!8682 = !DILocation(line: 129, column: 12, scope: !8677)
!8683 = !DILocation(line: 129, column: 5, scope: !8677)
!8684 = !DILocation(line: 130, column: 9, scope: !8685)
!8685 = distinct !DILexicalBlock(scope: !8677, file: !854, line: 129, column: 29)
!8686 = !DILocation(line: 130, column: 36, scope: !8685)
!8687 = !DILocation(line: 130, column: 17, scope: !8685)
!8688 = distinct !{!8688, !8683, !8689, !2129, !2130}
!8689 = !DILocation(line: 131, column: 5, scope: !8677)
!8690 = !DILocation(line: 132, column: 1, scope: !8677)
!8691 = distinct !DISubprogram(name: "receive", linkageName: "_ZN6Cicada12ATCommDevice7receiveEv", scope: !856, file: !854, line: 134, type: !972, scopeLine: 135, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !853, declaration: !971, retainedNodes: !8692)
!8692 = !{!8693}
!8693 = !DILocalVariable(name: "this", arg: 1, scope: !8691, type: !8508, flags: DIFlagArtificial | DIFlagObjectPointer)
!8694 = !DILocation(line: 0, scope: !8691)
!8695 = !DILocation(line: 136, column: 9, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8691, file: !854, line: 136, column: 9)
!8697 = !DILocation(line: 136, column: 17, scope: !8696)
!8698 = !DILocation(line: 136, column: 37, scope: !8696)
!8699 = !DILocation(line: 136, column: 34, scope: !8696)
!8700 = !DILocation(line: 136, column: 9, scope: !8691)
!8701 = !DILocation(line: 137, column: 16, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8696, file: !854, line: 136, column: 51)
!8703 = !DILocation(line: 137, column: 9, scope: !8702)
!8704 = !DILocation(line: 138, column: 30, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8702, file: !854, line: 137, column: 30)
!8706 = !DILocation(line: 138, column: 38, scope: !8705)
!8707 = !DILocation(line: 138, column: 25, scope: !8705)
!8708 = !DILocation(line: 139, column: 25, scope: !8705)
!8709 = distinct !{!8709, !8703, !8710, !2129, !2130}
!8710 = !DILocation(line: 140, column: 9, scope: !8702)
!8711 = !DILocation(line: 141, column: 9, scope: !8702)
!8712 = !DILocation(line: 141, column: 24, scope: !8702)
!8713 = !DILocation(line: 143, column: 9, scope: !8702)
!8714 = !DILocation(line: 147, column: 1, scope: !8691)
!8715 = distinct !DISubprogram(name: "sendCommand", linkageName: "_ZN6Cicada12ATCommDevice11sendCommandEPKc", scope: !856, file: !854, line: 149, type: !964, scopeLine: 150, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !853, declaration: !963, retainedNodes: !8716)
!8716 = !{!8717, !8718}
!8717 = !DILocalVariable(name: "this", arg: 1, scope: !8715, type: !8508, flags: DIFlagArtificial | DIFlagObjectPointer)
!8718 = !DILocalVariable(name: "cmd", arg: 2, scope: !8715, file: !854, line: 149, type: !799)
!8719 = !DILocation(line: 0, scope: !8715)
!8720 = !DILocation(line: 151, column: 5, scope: !8715)
!8721 = !DILocation(line: 151, column: 13, scope: !8715)
!8722 = !DILocation(line: 152, column: 5, scope: !8715)
!8723 = !DILocation(line: 152, column: 35, scope: !8715)
!8724 = !DILocation(line: 152, column: 13, scope: !8715)
!8725 = !DILocation(line: 153, column: 1, scope: !8715)
!8726 = distinct !DISubprogram(name: "~BufferedSerial", linkageName: "_ZN6Cicada14BufferedSerialD0Ev", scope: !1864, file: !724, line: 42, type: !1976, scopeLine: 42, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !8727, retainedNodes: !8728)
!8727 = !DISubprogram(name: "~BufferedSerial", scope: !1864, type: !1976, containingType: !1864, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!8728 = !{!8729}
!8729 = !DILocalVariable(name: "this", arg: 1, scope: !8726, type: !8730, flags: DIFlagArtificial | DIFlagObjectPointer)
!8730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 32)
!8731 = !DILocation(line: 0, scope: !8726)
!8732 = !DILocation(line: 42, column: 7, scope: !8726)
!8733 = distinct !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14BufferedSerial14bytesAvailableEv", scope: !1864, file: !1862, line: 39, type: !1951, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1950, retainedNodes: !8734)
!8734 = !{!8735, !8737}
!8735 = !DILocalVariable(name: "this", arg: 1, scope: !8733, type: !8736, flags: DIFlagArtificial | DIFlagObjectPointer)
!8736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 32)
!8737 = !DILocalVariable(name: "availableData", scope: !8733, file: !1862, line: 42, type: !774)
!8738 = !DILocation(line: 0, scope: !8733)
!8739 = !DILocation(line: 41, column: 5, scope: !8733)
!8740 = !DILocation(line: 42, column: 26, scope: !8733)
!8741 = !DILocation(line: 42, column: 38, scope: !8733)
!8742 = !DILocation(line: 43, column: 5, scope: !8733)
!8743 = !DILocation(line: 45, column: 5, scope: !8733)
!8744 = distinct !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14BufferedSerial14spaceAvailableEv", scope: !1864, file: !1862, line: 48, type: !1951, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1955, retainedNodes: !8745)
!8745 = !{!8746, !8747}
!8746 = !DILocalVariable(name: "this", arg: 1, scope: !8744, type: !8736, flags: DIFlagArtificial | DIFlagObjectPointer)
!8747 = !DILocalVariable(name: "spaceAvailable", scope: !8744, file: !1862, line: 51, type: !774)
!8748 = !DILocation(line: 0, scope: !8744)
!8749 = !DILocation(line: 50, column: 5, scope: !8744)
!8750 = !DILocation(line: 51, column: 27, scope: !8744)
!8751 = !DILocation(line: 51, column: 40, scope: !8744)
!8752 = !DILocation(line: 52, column: 5, scope: !8744)
!8753 = !DILocation(line: 54, column: 5, scope: !8744)
!8754 = distinct !DISubprogram(name: "read", linkageName: "_ZN6Cicada14BufferedSerial4readEPhy", scope: !1864, file: !1862, line: 57, type: !1957, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1956, retainedNodes: !8755)
!8755 = !{!8756, !8757, !8758, !8759, !8760}
!8756 = !DILocalVariable(name: "this", arg: 1, scope: !8754, type: !8730, flags: DIFlagArtificial | DIFlagObjectPointer)
!8757 = !DILocalVariable(name: "data", arg: 2, scope: !8754, file: !1862, line: 57, type: !86)
!8758 = !DILocalVariable(name: "size", arg: 3, scope: !8754, file: !1862, line: 57, type: !774)
!8759 = !DILocalVariable(name: "avail", scope: !8754, file: !1862, line: 59, type: !774)
!8760 = !DILocalVariable(name: "readCount", scope: !8754, file: !1862, line: 63, type: !774)
!8761 = !DILocation(line: 0, scope: !8754)
!8762 = !DILocation(line: 59, column: 18, scope: !8754)
!8763 = !DILocation(line: 60, column: 14, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8754, file: !1862, line: 60, column: 9)
!8765 = !DILocation(line: 60, column: 9, scope: !8754)
!8766 = !DILocation(line: 65, column: 22, scope: !8754)
!8767 = !DILocation(line: 65, column: 5, scope: !8754)
!8768 = !DILocation(line: 66, column: 29, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8754, file: !1862, line: 65, column: 30)
!8770 = !DILocation(line: 66, column: 23, scope: !8769)
!8771 = !DILocation(line: 66, column: 9, scope: !8769)
!8772 = !DILocation(line: 66, column: 27, scope: !8769)
!8773 = distinct !{!8773, !8767, !8774, !2129, !2130}
!8774 = !DILocation(line: 67, column: 5, scope: !8754)
!8775 = !DILocation(line: 69, column: 5, scope: !8754)
!8776 = distinct !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEPKhy", scope: !1864, file: !1862, line: 81, type: !1963, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1962, retainedNodes: !8777)
!8777 = !{!8778, !8779, !8780, !8781, !8782}
!8778 = !DILocalVariable(name: "this", arg: 1, scope: !8776, type: !8730, flags: DIFlagArtificial | DIFlagObjectPointer)
!8779 = !DILocalVariable(name: "data", arg: 2, scope: !8776, file: !1862, line: 81, type: !847)
!8780 = !DILocalVariable(name: "size", arg: 3, scope: !8776, file: !1862, line: 81, type: !774)
!8781 = !DILocalVariable(name: "space", scope: !8776, file: !1862, line: 83, type: !774)
!8782 = !DILocalVariable(name: "writeCount", scope: !8776, file: !1862, line: 87, type: !774)
!8783 = !DILocation(line: 0, scope: !8776)
!8784 = !DILocation(line: 83, column: 18, scope: !8776)
!8785 = !DILocation(line: 84, column: 14, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8776, file: !1862, line: 84, column: 9)
!8787 = !DILocation(line: 84, column: 9, scope: !8776)
!8788 = !DILocation(line: 89, column: 23, scope: !8776)
!8789 = !DILocation(line: 89, column: 5, scope: !8776)
!8790 = !DILocation(line: 90, column: 37, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8776, file: !1862, line: 89, column: 31)
!8792 = !DILocation(line: 90, column: 22, scope: !8791)
!8793 = !DILocation(line: 90, column: 9, scope: !8791)
!8794 = distinct !{!8794, !8789, !8795, !2129, !2130}
!8795 = !DILocation(line: 91, column: 5, scope: !8776)
!8796 = !DILocation(line: 93, column: 5, scope: !8776)
!8797 = !DILocation(line: 95, column: 5, scope: !8776)
!8798 = distinct !DISubprogram(name: "read", linkageName: "_ZN6Cicada14BufferedSerial4readEv", scope: !1864, file: !1862, line: 72, type: !1960, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1959, retainedNodes: !8799)
!8799 = !{!8800, !8801}
!8800 = !DILocalVariable(name: "this", arg: 1, scope: !8798, type: !8730, flags: DIFlagArtificial | DIFlagObjectPointer)
!8801 = !DILocalVariable(name: "c", scope: !8798, file: !1862, line: 75, type: !87)
!8802 = !DILocation(line: 0, scope: !8798)
!8803 = !DILocation(line: 74, column: 5, scope: !8798)
!8804 = !DILocation(line: 75, column: 17, scope: !8798)
!8805 = !DILocation(line: 75, column: 29, scope: !8798)
!8806 = !DILocation(line: 76, column: 5, scope: !8798)
!8807 = !DILocation(line: 78, column: 5, scope: !8798)
!8808 = distinct !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEPKh", scope: !1864, file: !1862, line: 98, type: !1966, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1965, retainedNodes: !8809)
!8809 = !{!8810, !8811, !8812, !8813}
!8810 = !DILocalVariable(name: "this", arg: 1, scope: !8808, type: !8730, flags: DIFlagArtificial | DIFlagObjectPointer)
!8811 = !DILocalVariable(name: "data", arg: 2, scope: !8808, file: !1862, line: 98, type: !847)
!8812 = !DILocalVariable(name: "space", scope: !8808, file: !1862, line: 100, type: !774)
!8813 = !DILocalVariable(name: "writeCount", scope: !8808, file: !1862, line: 102, type: !774)
!8814 = !DILocation(line: 0, scope: !8808)
!8815 = !DILocation(line: 100, column: 18, scope: !8808)
!8816 = !DILocation(line: 104, column: 12, scope: !8808)
!8817 = !DILocation(line: 104, column: 29, scope: !8808)
!8818 = !DILocation(line: 104, column: 37, scope: !8808)
!8819 = !DILocation(line: 104, column: 5, scope: !8808)
!8820 = !DILocation(line: 105, column: 37, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8808, file: !1862, line: 104, column: 60)
!8822 = !DILocation(line: 105, column: 9, scope: !8821)
!8823 = distinct !{!8823, !8819, !8824, !2129, !2130}
!8824 = !DILocation(line: 106, column: 5, scope: !8808)
!8825 = !DILocation(line: 108, column: 5, scope: !8808)
!8826 = !DILocation(line: 110, column: 5, scope: !8808)
!8827 = distinct !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEh", scope: !1864, file: !1862, line: 113, type: !1969, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1968, retainedNodes: !8828)
!8828 = !{!8829, !8830}
!8829 = !DILocalVariable(name: "this", arg: 1, scope: !8827, type: !8730, flags: DIFlagArtificial | DIFlagObjectPointer)
!8830 = !DILocalVariable(name: "data", arg: 2, scope: !8827, file: !1862, line: 113, type: !87)
!8831 = !DILocation(line: 0, scope: !8827)
!8832 = !DILocation(line: 115, column: 5, scope: !8827)
!8833 = !DILocation(line: 116, column: 5, scope: !8827)
!8834 = !DILocation(line: 117, column: 1, scope: !8827)
!8835 = distinct !DISubprogram(name: "canReadLine", linkageName: "_ZNK6Cicada14BufferedSerial11canReadLineEv", scope: !1864, file: !1862, line: 126, type: !1972, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1971, retainedNodes: !8836)
!8836 = !{!8837, !8838}
!8837 = !DILocalVariable(name: "this", arg: 1, scope: !8835, type: !8736, flags: DIFlagArtificial | DIFlagObjectPointer)
!8838 = !DILocalVariable(name: "lines", scope: !8835, file: !1862, line: 129, type: !774)
!8839 = !DILocation(line: 0, scope: !8835)
!8840 = !DILocation(line: 128, column: 5, scope: !8835)
!8841 = !DILocation(line: 129, column: 18, scope: !8835)
!8842 = !DILocation(line: 129, column: 30, scope: !8835)
!8843 = !DILocation(line: 130, column: 5, scope: !8835)
!8844 = !DILocation(line: 132, column: 18, scope: !8835)
!8845 = !DILocation(line: 132, column: 5, scope: !8835)
!8846 = distinct !DISubprogram(name: "readLine", linkageName: "_ZN6Cicada14BufferedSerial8readLineEPhy", scope: !1864, file: !1862, line: 135, type: !1957, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1974, retainedNodes: !8847)
!8847 = !{!8848, !8849, !8850, !8851, !8852}
!8848 = !DILocalVariable(name: "this", arg: 1, scope: !8846, type: !8730, flags: DIFlagArtificial | DIFlagObjectPointer)
!8849 = !DILocalVariable(name: "data", arg: 2, scope: !8846, file: !1862, line: 135, type: !86)
!8850 = !DILocalVariable(name: "size", arg: 3, scope: !8846, file: !1862, line: 135, type: !774)
!8851 = !DILocalVariable(name: "readCount", scope: !8846, file: !1862, line: 137, type: !774)
!8852 = !DILocalVariable(name: "c", scope: !8846, file: !1862, line: 138, type: !87)
!8853 = !DILocation(line: 0, scope: !8846)
!8854 = !DILocation(line: 140, column: 14, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8846, file: !1862, line: 140, column: 9)
!8856 = !DILocation(line: 140, column: 9, scope: !8846)
!8857 = !DILocation(line: 143, column: 12, scope: !8846)
!8858 = !DILocation(line: 143, column: 5, scope: !8846)
!8859 = !DILocation(line: 144, column: 13, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8846, file: !1862, line: 143, column: 43)
!8861 = !DILocation(line: 145, column: 23, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8860, file: !1862, line: 145, column: 13)
!8863 = !DILocation(line: 145, column: 13, scope: !8860)
!8864 = !DILocation(line: 146, column: 27, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8862, file: !1862, line: 145, column: 35)
!8866 = !DILocation(line: 146, column: 13, scope: !8865)
!8867 = !DILocation(line: 146, column: 31, scope: !8865)
!8868 = !DILocation(line: 147, column: 9, scope: !8865)
!8869 = !DILocation(line: 143, column: 29, scope: !8846)
!8870 = distinct !{!8870, !8858, !8871, !2129, !2130}
!8871 = !DILocation(line: 148, column: 5, scope: !8846)
!8872 = !DILocation(line: 149, column: 5, scope: !8846)
!8873 = !DILocation(line: 149, column: 21, scope: !8846)
!8874 = !DILocation(line: 151, column: 5, scope: !8846)
!8875 = !DILocation(line: 152, column: 1, scope: !8846)
!8876 = distinct !DISubprogram(name: "flushReceiveBuffers", linkageName: "_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv", scope: !1864, file: !1862, line: 154, type: !1976, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1975, retainedNodes: !8877)
!8877 = !{!8878}
!8878 = !DILocalVariable(name: "this", arg: 1, scope: !8876, type: !8730, flags: DIFlagArtificial | DIFlagObjectPointer)
!8879 = !DILocation(line: 0, scope: !8876)
!8880 = !DILocation(line: 156, column: 5, scope: !8876)
!8881 = !DILocation(line: 157, column: 5, scope: !8876)
!8882 = !DILocation(line: 157, column: 17, scope: !8876)
!8883 = !DILocation(line: 158, column: 5, scope: !8876)
!8884 = !DILocation(line: 159, column: 1, scope: !8876)
!8885 = distinct !DISubprogram(name: "readBufferSize", linkageName: "_ZN6Cicada14BufferedSerial14readBufferSizeEv", scope: !1864, file: !1862, line: 161, type: !1979, scopeLine: 162, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1978, retainedNodes: !8886)
!8886 = !{!8887}
!8887 = !DILocalVariable(name: "this", arg: 1, scope: !8885, type: !8730, flags: DIFlagArtificial | DIFlagObjectPointer)
!8888 = !DILocation(line: 0, scope: !8885)
!8889 = !DILocation(line: 163, column: 12, scope: !8885)
!8890 = !DILocation(line: 163, column: 24, scope: !8885)
!8891 = !DILocation(line: 163, column: 5, scope: !8885)
!8892 = distinct !DISubprogram(name: "writeBufferSize", linkageName: "_ZN6Cicada14BufferedSerial15writeBufferSizeEv", scope: !1864, file: !1862, line: 166, type: !1979, scopeLine: 167, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1981, retainedNodes: !8893)
!8893 = !{!8894}
!8894 = !DILocalVariable(name: "this", arg: 1, scope: !8892, type: !8730, flags: DIFlagArtificial | DIFlagObjectPointer)
!8895 = !DILocation(line: 0, scope: !8892)
!8896 = !DILocation(line: 168, column: 12, scope: !8892)
!8897 = !DILocation(line: 168, column: 25, scope: !8892)
!8898 = !DILocation(line: 168, column: 5, scope: !8892)
!8899 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada14BufferedSerialD1Ev", scope: !724, file: !724, line: 42, type: !6778, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, retainedNodes: !152)
!8900 = !DILocation(line: 0, scope: !8899)
!8901 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada14BufferedSerialD0Ev", scope: !724, file: !724, line: 42, type: !6778, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, retainedNodes: !152)
!8902 = !DILocation(line: 0, scope: !8901)
!8903 = distinct !DISubprogram(name: "size", linkageName: "_ZNK6Cicada14CircularBufferIcE4sizeEv", scope: !1872, file: !1573, line: 190, type: !1907, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1910, retainedNodes: !8904)
!8904 = !{!8905}
!8905 = !DILocalVariable(name: "this", arg: 1, scope: !8903, type: !8357, flags: DIFlagArtificial | DIFlagObjectPointer)
!8906 = !DILocation(line: 0, scope: !8903)
!8907 = !DILocation(line: 192, column: 16, scope: !8903)
!8908 = !{!8361, !6682, i64 32}
!8909 = !DILocation(line: 192, column: 9, scope: !8903)
!8910 = distinct !DISubprogram(name: "flush", linkageName: "_ZN6Cicada18LineCircularBuffer5flushEv", scope: !1868, file: !1869, line: 123, type: !1940, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1939, retainedNodes: !8911)
!8911 = !{!8912}
!8912 = !DILocalVariable(name: "this", arg: 1, scope: !8910, type: !8913, flags: DIFlagArtificial | DIFlagObjectPointer)
!8913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 32)
!8914 = !DILocation(line: 0, scope: !8910)
!8915 = !DILocation(line: 125, column: 9, scope: !8910)
!8916 = !DILocation(line: 125, column: 24, scope: !8910)
!8917 = !{!8918, !2139, i64 44}
!8918 = !{!"_ZTSN6Cicada18LineCircularBufferE", !2139, i64 44}
!8919 = !DILocation(line: 126, column: 25, scope: !8910)
!8920 = !DILocation(line: 127, column: 5, scope: !8910)
!8921 = distinct !DISubprogram(name: "flush", linkageName: "_ZN6Cicada14CircularBufferIcE5flushEv", scope: !1872, file: !1573, line: 148, type: !1884, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1899, retainedNodes: !8922)
!8922 = !{!8923}
!8923 = !DILocalVariable(name: "this", arg: 1, scope: !8921, type: !8378, flags: DIFlagArtificial | DIFlagObjectPointer)
!8924 = !DILocation(line: 0, scope: !8921)
!8925 = !DILocation(line: 150, column: 9, scope: !8921)
!8926 = !DILocation(line: 153, column: 5, scope: !8921)
!8927 = !DILocation(line: 151, column: 19, scope: !8921)
!8928 = distinct !DISubprogram(name: "numBufferedLines", linkageName: "_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv", scope: !1868, file: !1869, line: 97, type: !1934, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1933, retainedNodes: !8929)
!8929 = !{!8930}
!8930 = !DILocalVariable(name: "this", arg: 1, scope: !8928, type: !8931, flags: DIFlagArtificial | DIFlagObjectPointer)
!8931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 32)
!8932 = !DILocation(line: 0, scope: !8928)
!8933 = !DILocation(line: 99, column: 16, scope: !8928)
!8934 = !DILocation(line: 99, column: 9, scope: !8928)
!8935 = distinct !DISubprogram(name: "copyToBuffer", linkageName: "_ZN6Cicada14BufferedSerial12copyToBufferEh", scope: !1864, file: !1862, line: 119, type: !1969, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1983, retainedNodes: !8936)
!8936 = !{!8937, !8938}
!8937 = !DILocalVariable(name: "this", arg: 1, scope: !8935, type: !8730, flags: DIFlagArtificial | DIFlagObjectPointer)
!8938 = !DILocalVariable(name: "data", arg: 2, scope: !8935, file: !1862, line: 119, type: !87)
!8939 = !DILocation(line: 0, scope: !8935)
!8940 = !DILocation(line: 121, column: 5, scope: !8935)
!8941 = !DILocation(line: 122, column: 5, scope: !8935)
!8942 = !DILocation(line: 122, column: 18, scope: !8935)
!8943 = !DILocation(line: 123, column: 5, scope: !8935)
!8944 = !DILocation(line: 124, column: 1, scope: !8935)
!8945 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada18LineCircularBuffer4pushEc", scope: !1868, file: !1869, line: 60, type: !1925, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1924, retainedNodes: !8946)
!8946 = !{!8947, !8948}
!8947 = !DILocalVariable(name: "this", arg: 1, scope: !8945, type: !8913, flags: DIFlagArtificial | DIFlagObjectPointer)
!8948 = !DILocalVariable(name: "data", arg: 2, scope: !8945, file: !1869, line: 60, type: !164)
!8949 = !DILocation(line: 0, scope: !8945)
!8950 = !DILocation(line: 62, column: 31, scope: !8945)
!8951 = !DILocation(line: 64, column: 18, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8945, file: !1869, line: 64, column: 13)
!8953 = !DILocation(line: 64, column: 13, scope: !8945)
!8954 = !DILocation(line: 65, column: 13, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8952, file: !1869, line: 64, column: 27)
!8956 = !DILocation(line: 65, column: 27, scope: !8955)
!8957 = !DILocation(line: 66, column: 9, scope: !8955)
!8958 = !DILocation(line: 67, column: 5, scope: !8945)
!8959 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIcE4pushEc", scope: !1872, file: !1573, line: 88, type: !1890, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1889, retainedNodes: !8960)
!8960 = !{!8961, !8962}
!8961 = !DILocalVariable(name: "this", arg: 1, scope: !8959, type: !8378, flags: DIFlagArtificial | DIFlagObjectPointer)
!8962 = !DILocalVariable(name: "data", arg: 2, scope: !8959, file: !1573, line: 88, type: !164)
!8963 = !DILocation(line: 0, scope: !8959)
!8964 = !DILocation(line: 90, column: 9, scope: !8959)
!8965 = !{!8361, !2287, i64 40}
!8966 = !DILocation(line: 90, column: 17, scope: !8959)
!8967 = !{!8361, !6682, i64 8}
!8968 = !DILocation(line: 90, column: 29, scope: !8959)
!8969 = !DILocation(line: 91, column: 9, scope: !8959)
!8970 = !DILocation(line: 92, column: 13, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8959, file: !1573, line: 92, column: 13)
!8972 = !DILocation(line: 92, column: 30, scope: !8971)
!8973 = !DILocation(line: 92, column: 28, scope: !8971)
!8974 = !DILocation(line: 92, column: 13, scope: !8959)
!8975 = !DILocation(line: 93, column: 27, scope: !8971)
!8976 = !DILocation(line: 93, column: 13, scope: !8971)
!8977 = !DILocation(line: 94, column: 5, scope: !8959)
!8978 = distinct !DISubprogram(name: "incrementOrResetHead", linkageName: "_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy", scope: !1872, file: !1573, line: 202, type: !1912, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1911, retainedNodes: !8979)
!8979 = !{!8980, !8981}
!8980 = !DILocalVariable(name: "this", arg: 1, scope: !8978, type: !8378, flags: DIFlagArtificial | DIFlagObjectPointer)
!8981 = !DILocalVariable(name: "head", arg: 2, scope: !8978, file: !1573, line: 202, type: !1619)
!8982 = !DILocation(line: 0, scope: !8978)
!8983 = !DILocation(line: 204, column: 13, scope: !8978)
!8984 = !DILocation(line: 205, column: 21, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8978, file: !1573, line: 205, column: 13)
!8986 = !DILocation(line: 205, column: 18, scope: !8985)
!8987 = !DILocation(line: 205, column: 13, scope: !8978)
!8988 = !DILocation(line: 207, column: 5, scope: !8978)
!8989 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada18LineCircularBuffer4pullEv", scope: !1868, file: !1869, line: 83, type: !1931, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1930, retainedNodes: !8990)
!8990 = !{!8991, !8992}
!8991 = !DILocalVariable(name: "this", arg: 1, scope: !8989, type: !8913, flags: DIFlagArtificial | DIFlagObjectPointer)
!8992 = !DILocalVariable(name: "data", scope: !8989, file: !1869, line: 85, type: !164)
!8993 = !DILocation(line: 0, scope: !8989)
!8994 = !DILocation(line: 85, column: 43, scope: !8989)
!8995 = !DILocation(line: 87, column: 18, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8989, file: !1869, line: 87, column: 13)
!8997 = !DILocation(line: 87, column: 13, scope: !8989)
!8998 = !DILocation(line: 88, column: 13, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !8996, file: !1869, line: 87, column: 27)
!9000 = !DILocation(line: 88, column: 27, scope: !8999)
!9001 = !DILocation(line: 89, column: 9, scope: !8999)
!9002 = !DILocation(line: 91, column: 9, scope: !8989)
!9003 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIcE4pullEv", scope: !1872, file: !1573, line: 124, type: !1896, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1895, retainedNodes: !9004)
!9004 = !{!9005, !9006}
!9005 = !DILocalVariable(name: "this", arg: 1, scope: !9003, type: !8378, flags: DIFlagArtificial | DIFlagObjectPointer)
!9006 = !DILocalVariable(name: "data", scope: !9003, file: !1573, line: 126, type: !164)
!9007 = !DILocation(line: 0, scope: !9003)
!9008 = !DILocation(line: 126, column: 18, scope: !9003)
!9009 = !DILocation(line: 126, column: 26, scope: !9003)
!9010 = !{!8361, !6682, i64 16}
!9011 = !DILocation(line: 127, column: 9, scope: !9003)
!9012 = !DILocation(line: 128, column: 13, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !9003, file: !1573, line: 128, column: 13)
!9014 = !DILocation(line: 128, column: 28, scope: !9013)
!9015 = !DILocation(line: 128, column: 13, scope: !9003)
!9016 = !DILocation(line: 129, column: 27, scope: !9013)
!9017 = !DILocation(line: 129, column: 13, scope: !9013)
!9018 = !DILocation(line: 131, column: 9, scope: !9003)
!9019 = distinct !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv", scope: !1872, file: !1573, line: 182, type: !1907, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1909, retainedNodes: !9020)
!9020 = !{!9021}
!9021 = !DILocalVariable(name: "this", arg: 1, scope: !9019, type: !8357, flags: DIFlagArtificial | DIFlagObjectPointer)
!9022 = !DILocation(line: 0, scope: !9019)
!9023 = !DILocation(line: 184, column: 16, scope: !9019)
!9024 = !DILocation(line: 184, column: 30, scope: !9019)
!9025 = !DILocation(line: 184, column: 28, scope: !9019)
!9026 = !DILocation(line: 184, column: 9, scope: !9019)
!9027 = distinct !DISubprogram(name: "BufferedSerial", linkageName: "_ZN6Cicada14BufferedSerialC2EPcS1_yy", scope: !1864, file: !1862, line: 30, type: !1944, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1943, retainedNodes: !9028)
!9028 = !{!9029, !9030, !9031, !9032, !9033}
!9029 = !DILocalVariable(name: "this", arg: 1, scope: !9027, type: !8730, flags: DIFlagArtificial | DIFlagObjectPointer)
!9030 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !9027, file: !1862, line: 31, type: !261)
!9031 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !9027, file: !1862, line: 31, type: !261)
!9032 = !DILocalVariable(name: "readBufferSize", arg: 4, scope: !9027, file: !1862, line: 31, type: !774)
!9033 = !DILocalVariable(name: "writeBufferSize", arg: 5, scope: !9027, file: !1862, line: 31, type: !774)
!9034 = !DILocation(line: 0, scope: !9027)
!9035 = !DILocation(line: 33, column: 1, scope: !9027)
!9036 = !DILocation(line: 30, column: 17, scope: !9027)
!9037 = !DILocation(line: 32, column: 5, scope: !9027)
!9038 = !DILocation(line: 32, column: 46, scope: !9027)
!9039 = !DILocation(line: 33, column: 2, scope: !9027)
!9040 = distinct !DISubprogram(name: "IBufferedSerial", linkageName: "_ZN6Cicada15IBufferedSerialC2Ev", scope: !864, file: !865, line: 39, type: !898, scopeLine: 39, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !9041, retainedNodes: !9042)
!9041 = !DISubprogram(name: "IBufferedSerial", scope: !864, type: !898, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9042 = !{!9043}
!9043 = !DILocalVariable(name: "this", arg: 1, scope: !9040, type: !8384, flags: DIFlagArtificial | DIFlagObjectPointer)
!9044 = !DILocation(line: 0, scope: !9040)
!9045 = !DILocation(line: 39, column: 7, scope: !9040)
!9046 = distinct !DISubprogram(name: "LineCircularBuffer", linkageName: "_ZN6Cicada18LineCircularBufferC2EPcy", scope: !1868, file: !1869, line: 41, type: !1918, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1917, retainedNodes: !9047)
!9047 = !{!9048, !9049, !9050}
!9048 = !DILocalVariable(name: "this", arg: 1, scope: !9046, type: !8913, flags: DIFlagArtificial | DIFlagObjectPointer)
!9049 = !DILocalVariable(name: "buffer", arg: 2, scope: !9046, file: !1869, line: 41, type: !261)
!9050 = !DILocalVariable(name: "bufferSize", arg: 3, scope: !9046, file: !1869, line: 41, type: !774)
!9051 = !DILocation(line: 0, scope: !9046)
!9052 = !DILocation(line: 44, column: 5, scope: !9046)
!9053 = !DILocation(line: 42, column: 9, scope: !9046)
!9054 = !DILocation(line: 43, column: 9, scope: !9046)
!9055 = !DILocation(line: 44, column: 7, scope: !9046)
!9056 = distinct !DISubprogram(name: "CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIcEC2EPcy", scope: !1872, file: !1573, line: 48, type: !1880, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1879, retainedNodes: !9057)
!9057 = !{!9058, !9059, !9060}
!9058 = !DILocalVariable(name: "this", arg: 1, scope: !9056, type: !8378, flags: DIFlagArtificial | DIFlagObjectPointer)
!9059 = !DILocalVariable(name: "buffer", arg: 2, scope: !9056, file: !1573, line: 48, type: !261)
!9060 = !DILocalVariable(name: "bufferSize", arg: 3, scope: !9056, file: !1573, line: 48, type: !774)
!9061 = !DILocation(line: 0, scope: !9056)
!9062 = !DILocation(line: 54, column: 5, scope: !9056)
!9063 = !DILocation(line: 49, column: 9, scope: !9056)
!9064 = !DILocation(line: 52, column: 9, scope: !9056)
!9065 = !DILocation(line: 50, column: 9, scope: !9056)
!9066 = !DILocation(line: 53, column: 9, scope: !9056)
!9067 = !DILocation(line: 54, column: 7, scope: !9056)
!9068 = distinct !DISubprogram(name: "~LineCircularBuffer", linkageName: "_ZN6Cicada18LineCircularBufferD0Ev", scope: !1868, file: !1869, line: 38, type: !1940, scopeLine: 38, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !9069, retainedNodes: !9070)
!9069 = !DISubprogram(name: "~LineCircularBuffer", scope: !1868, type: !1940, containingType: !1868, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!9070 = !{!9071}
!9071 = !DILocalVariable(name: "this", arg: 1, scope: !9068, type: !8913, flags: DIFlagArtificial | DIFlagObjectPointer)
!9072 = !DILocation(line: 0, scope: !9068)
!9073 = !DILocation(line: 38, column: 7, scope: !9068)
!9074 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada18LineCircularBuffer4pushEPKcy", scope: !1868, file: !1869, line: 46, type: !1922, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1921, retainedNodes: !9075)
!9075 = !{!9076, !9077, !9078, !9079}
!9076 = !DILocalVariable(name: "this", arg: 1, scope: !9074, type: !8913, flags: DIFlagArtificial | DIFlagObjectPointer)
!9077 = !DILocalVariable(name: "data", arg: 2, scope: !9074, file: !1869, line: 46, type: !799)
!9078 = !DILocalVariable(name: "size", arg: 3, scope: !9074, file: !1869, line: 46, type: !774)
!9079 = !DILocalVariable(name: "writeCount", scope: !9074, file: !1869, line: 51, type: !774)
!9080 = !DILocation(line: 0, scope: !9074)
!9081 = !DILocation(line: 48, column: 42, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9074, file: !1869, line: 48, column: 13)
!9083 = !DILocation(line: 48, column: 18, scope: !9082)
!9084 = !DILocation(line: 48, column: 13, scope: !9074)
!9085 = !DILocation(line: 49, column: 42, scope: !9082)
!9086 = !DILocation(line: 49, column: 13, scope: !9082)
!9087 = !DILocation(line: 53, column: 27, scope: !9074)
!9088 = !DILocation(line: 53, column: 9, scope: !9074)
!9089 = !DILocation(line: 54, column: 33, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9074, file: !1869, line: 53, column: 35)
!9091 = !DILocation(line: 54, column: 18, scope: !9090)
!9092 = !DILocation(line: 54, column: 13, scope: !9090)
!9093 = distinct !{!9093, !9088, !9094, !2129, !2130}
!9094 = !DILocation(line: 55, column: 9, scope: !9074)
!9095 = !DILocation(line: 57, column: 9, scope: !9074)
!9096 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada18LineCircularBuffer4pullEPcy", scope: !1868, file: !1869, line: 69, type: !1928, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1927, retainedNodes: !9097)
!9097 = !{!9098, !9099, !9100, !9101}
!9098 = !DILocalVariable(name: "this", arg: 1, scope: !9096, type: !8913, flags: DIFlagArtificial | DIFlagObjectPointer)
!9099 = !DILocalVariable(name: "data", arg: 2, scope: !9096, file: !1869, line: 69, type: !261)
!9100 = !DILocalVariable(name: "size", arg: 3, scope: !9096, file: !1869, line: 69, type: !774)
!9101 = !DILocalVariable(name: "readCount", scope: !9096, file: !1869, line: 74, type: !774)
!9102 = !DILocation(line: 0, scope: !9096)
!9103 = !DILocation(line: 71, column: 42, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !9096, file: !1869, line: 71, column: 13)
!9105 = !DILocation(line: 71, column: 18, scope: !9104)
!9106 = !DILocation(line: 71, column: 13, scope: !9096)
!9107 = !DILocation(line: 72, column: 42, scope: !9104)
!9108 = !DILocation(line: 72, column: 13, scope: !9104)
!9109 = !DILocation(line: 76, column: 26, scope: !9096)
!9110 = !DILocation(line: 76, column: 9, scope: !9096)
!9111 = !DILocation(line: 77, column: 33, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9096, file: !1869, line: 76, column: 34)
!9113 = !DILocation(line: 77, column: 27, scope: !9112)
!9114 = !DILocation(line: 77, column: 13, scope: !9112)
!9115 = !DILocation(line: 77, column: 31, scope: !9112)
!9116 = distinct !{!9116, !9110, !9117, !2129, !2130}
!9117 = !DILocation(line: 78, column: 9, scope: !9096)
!9118 = !DILocation(line: 80, column: 9, scope: !9096)
!9119 = distinct !DISubprogram(name: "read", linkageName: "_ZN6Cicada14CircularBufferIcE4readEv", scope: !1872, file: !1573, line: 140, type: !1896, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1898, retainedNodes: !9120)
!9120 = !{!9121}
!9121 = !DILocalVariable(name: "this", arg: 1, scope: !9119, type: !8378, flags: DIFlagArtificial | DIFlagObjectPointer)
!9122 = !DILocation(line: 0, scope: !9119)
!9123 = !DILocation(line: 142, column: 16, scope: !9119)
!9124 = !DILocation(line: 142, column: 24, scope: !9119)
!9125 = !DILocation(line: 142, column: 9, scope: !9119)
!9126 = distinct !DISubprogram(name: "isEmpty", linkageName: "_ZNK6Cicada14CircularBufferIcE7isEmptyEv", scope: !1872, file: !1573, line: 158, type: !1901, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1900, retainedNodes: !9127)
!9127 = !{!9128}
!9128 = !DILocalVariable(name: "this", arg: 1, scope: !9126, type: !8357, flags: DIFlagArtificial | DIFlagObjectPointer)
!9129 = !DILocation(line: 0, scope: !9126)
!9130 = !DILocation(line: 160, column: 16, scope: !9126)
!9131 = !DILocation(line: 160, column: 31, scope: !9126)
!9132 = !DILocation(line: 160, column: 9, scope: !9126)
!9133 = distinct !DISubprogram(name: "isFull", linkageName: "_ZNK6Cicada14CircularBufferIcE6isFullEv", scope: !1872, file: !1573, line: 166, type: !1901, scopeLine: 167, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1905, retainedNodes: !9134)
!9134 = !{!9135}
!9135 = !DILocalVariable(name: "this", arg: 1, scope: !9133, type: !8357, flags: DIFlagArtificial | DIFlagObjectPointer)
!9136 = !DILocation(line: 0, scope: !9133)
!9137 = !DILocation(line: 168, column: 16, scope: !9133)
!9138 = !DILocation(line: 168, column: 34, scope: !9133)
!9139 = !DILocation(line: 168, column: 31, scope: !9133)
!9140 = !DILocation(line: 168, column: 9, scope: !9133)
!9141 = distinct !DISubprogram(name: "~CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIcED0Ev", scope: !1872, file: !1573, line: 56, type: !1884, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1883, retainedNodes: !9142)
!9142 = !{!9143}
!9143 = !DILocalVariable(name: "this", arg: 1, scope: !9141, type: !8378, flags: DIFlagArtificial | DIFlagObjectPointer)
!9144 = !DILocation(line: 0, scope: !9141)
!9145 = !DILocation(line: 57, column: 5, scope: !9141)
!9146 = !DILocation(line: 57, column: 7, scope: !9141)
!9147 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIcE4pushEPKcy", scope: !1872, file: !1573, line: 65, type: !1887, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1886, retainedNodes: !9148)
!9148 = !{!9149, !9150, !9151, !9152}
!9149 = !DILocalVariable(name: "this", arg: 1, scope: !9147, type: !8378, flags: DIFlagArtificial | DIFlagObjectPointer)
!9150 = !DILocalVariable(name: "data", arg: 2, scope: !9147, file: !1573, line: 65, type: !799)
!9151 = !DILocalVariable(name: "size", arg: 3, scope: !9147, file: !1573, line: 65, type: !774)
!9152 = !DILocalVariable(name: "writeCount", scope: !9147, file: !1573, line: 70, type: !774)
!9153 = !DILocation(line: 0, scope: !9147)
!9154 = !DILocation(line: 67, column: 20, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9147, file: !1573, line: 67, column: 13)
!9156 = !DILocation(line: 67, column: 18, scope: !9155)
!9157 = !DILocation(line: 67, column: 13, scope: !9147)
!9158 = !DILocation(line: 68, column: 20, scope: !9155)
!9159 = !DILocation(line: 68, column: 13, scope: !9155)
!9160 = !DILocation(line: 72, column: 27, scope: !9147)
!9161 = !DILocation(line: 72, column: 9, scope: !9147)
!9162 = !DILocation(line: 73, column: 50, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9147, file: !1573, line: 72, column: 35)
!9164 = !DILocation(line: 73, column: 35, scope: !9163)
!9165 = !DILocation(line: 73, column: 13, scope: !9163)
!9166 = !DILocation(line: 73, column: 21, scope: !9163)
!9167 = !DILocation(line: 73, column: 33, scope: !9163)
!9168 = !DILocation(line: 74, column: 13, scope: !9163)
!9169 = distinct !{!9169, !9161, !9170, !2129, !2130}
!9170 = !DILocation(line: 75, column: 9, scope: !9147)
!9171 = !DILocation(line: 76, column: 9, scope: !9147)
!9172 = !DILocation(line: 76, column: 24, scope: !9147)
!9173 = !DILocation(line: 78, column: 9, scope: !9147)
!9174 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIcE4pullEPcy", scope: !1872, file: !1573, line: 102, type: !1893, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1892, retainedNodes: !9175)
!9175 = !{!9176, !9177, !9178, !9179}
!9176 = !DILocalVariable(name: "this", arg: 1, scope: !9174, type: !8378, flags: DIFlagArtificial | DIFlagObjectPointer)
!9177 = !DILocalVariable(name: "data", arg: 2, scope: !9174, file: !1573, line: 102, type: !261)
!9178 = !DILocalVariable(name: "size", arg: 3, scope: !9174, file: !1573, line: 102, type: !774)
!9179 = !DILocalVariable(name: "readCount", scope: !9174, file: !1573, line: 107, type: !774)
!9180 = !DILocation(line: 0, scope: !9174)
!9181 = !DILocation(line: 104, column: 20, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9174, file: !1573, line: 104, column: 13)
!9183 = !DILocation(line: 104, column: 18, scope: !9182)
!9184 = !DILocation(line: 104, column: 13, scope: !9174)
!9185 = !DILocation(line: 105, column: 20, scope: !9182)
!9186 = !DILocation(line: 105, column: 13, scope: !9182)
!9187 = !DILocation(line: 109, column: 26, scope: !9174)
!9188 = !DILocation(line: 109, column: 9, scope: !9174)
!9189 = !DILocation(line: 110, column: 33, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9174, file: !1573, line: 109, column: 34)
!9191 = !DILocation(line: 110, column: 41, scope: !9190)
!9192 = !DILocation(line: 110, column: 27, scope: !9190)
!9193 = !DILocation(line: 110, column: 13, scope: !9190)
!9194 = !DILocation(line: 110, column: 31, scope: !9190)
!9195 = !DILocation(line: 111, column: 13, scope: !9190)
!9196 = distinct !{!9196, !9188, !9197, !2129, !2130}
!9197 = !DILocation(line: 112, column: 9, scope: !9174)
!9198 = !DILocation(line: 113, column: 9, scope: !9174)
!9199 = !DILocation(line: 113, column: 24, scope: !9174)
!9200 = !DILocation(line: 115, column: 9, scope: !9174)
!9201 = distinct !DISubprogram(name: "ISerial", linkageName: "_ZN6Cicada7ISerialC2Ev", scope: !869, file: !870, line: 37, type: !874, scopeLine: 37, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !9202, retainedNodes: !9203)
!9202 = !DISubprogram(name: "ISerial", scope: !869, type: !874, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9203 = !{!9204}
!9204 = !DILocalVariable(name: "this", arg: 1, scope: !9201, type: !8392, flags: DIFlagArtificial | DIFlagObjectPointer)
!9205 = !DILocation(line: 0, scope: !9201)
!9206 = !DILocation(line: 37, column: 7, scope: !9201)
!9207 = distinct !DISubprogram(name: "~IBufferedSerial", linkageName: "_ZN6Cicada15IBufferedSerialD0Ev", scope: !864, file: !865, line: 42, type: !898, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !897, retainedNodes: !9208)
!9208 = !{!9209}
!9209 = !DILocalVariable(name: "this", arg: 1, scope: !9207, type: !8384, flags: DIFlagArtificial | DIFlagObjectPointer)
!9210 = !DILocation(line: 0, scope: !9207)
!9211 = !DILocation(line: 42, column: 32, scope: !9207)
!9212 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada15IBufferedSerialD1Ev", scope: !865, file: !865, line: 42, type: !6778, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, retainedNodes: !152)
!9213 = !DILocation(line: 0, scope: !9212)
!9214 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada15IBufferedSerialD0Ev", scope: !865, file: !865, line: 42, type: !6778, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, retainedNodes: !152)
!9215 = !DILocation(line: 0, scope: !9214)
!9216 = distinct !DISubprogram(name: "~ISerial", linkageName: "_ZN6Cicada7ISerialD0Ev", scope: !869, file: !870, line: 40, type: !874, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !873, retainedNodes: !9217)
!9217 = !{!9218}
!9218 = !DILocalVariable(name: "this", arg: 1, scope: !9216, type: !8392, flags: DIFlagArtificial | DIFlagObjectPointer)
!9219 = !DILocation(line: 0, scope: !9216)
!9220 = !DILocation(line: 40, column: 24, scope: !9216)
!9221 = distinct !DISubprogram(name: "BufferedSerial", linkageName: "_ZN6Cicada14BufferedSerialC2EPcS1_y", scope: !1864, file: !1862, line: 35, type: !1948, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1947, retainedNodes: !9222)
!9222 = !{!9223, !9224, !9225, !9226}
!9223 = !DILocalVariable(name: "this", arg: 1, scope: !9221, type: !8730, flags: DIFlagArtificial | DIFlagObjectPointer)
!9224 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !9221, file: !1862, line: 35, type: !261)
!9225 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !9221, file: !1862, line: 35, type: !261)
!9226 = !DILocalVariable(name: "bufferSize", arg: 4, scope: !9221, file: !1862, line: 35, type: !774)
!9227 = !DILocation(line: 0, scope: !9221)
!9228 = !DILocation(line: 37, column: 1, scope: !9221)
!9229 = !DILocation(line: 35, column: 17, scope: !9221)
!9230 = !DILocation(line: 36, column: 5, scope: !9221)
!9231 = !DILocation(line: 36, column: 42, scope: !9221)
!9232 = !DILocation(line: 37, column: 2, scope: !9221)
!9233 = distinct !DISubprogram(name: "transferToAndFromBuffer", linkageName: "_ZN6Cicada14BufferedSerial23transferToAndFromBufferEv", scope: !1864, file: !1862, line: 171, type: !1976, scopeLine: 172, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, declaration: !1982, retainedNodes: !9234)
!9234 = !{!9235, !9236}
!9235 = !DILocalVariable(name: "this", arg: 1, scope: !9233, type: !8730, flags: DIFlagArtificial | DIFlagObjectPointer)
!9236 = !DILocalVariable(name: "data", scope: !9233, file: !1862, line: 173, type: !87)
!9237 = !DILocation(line: 0, scope: !9233)
!9238 = !DILocation(line: 173, column: 5, scope: !9233)
!9239 = !DILocation(line: 174, column: 9, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9233, file: !1862, line: 174, column: 9)
!9241 = !DILocation(line: 174, column: 23, scope: !9240)
!9242 = !DILocation(line: 174, column: 27, scope: !9240)
!9243 = !DILocation(line: 174, column: 39, scope: !9240)
!9244 = !DILocation(line: 174, column: 9, scope: !9233)
!9245 = !DILocation(line: 175, column: 26, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9240, file: !1862, line: 174, column: 49)
!9247 = !DILocation(line: 175, column: 21, scope: !9246)
!9248 = !DILocation(line: 176, column: 5, scope: !9246)
!9249 = !DILocation(line: 178, column: 9, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9233, file: !1862, line: 178, column: 9)
!9251 = !DILocation(line: 178, column: 22, scope: !9250)
!9252 = !DILocation(line: 178, column: 9, scope: !9233)
!9253 = !DILocation(line: 179, column: 35, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !9255, file: !1862, line: 179, column: 13)
!9255 = distinct !DILexicalBlock(scope: !9250, file: !1862, line: 178, column: 40)
!9256 = !DILocation(line: 179, column: 13, scope: !9254)
!9257 = !DILocation(line: 179, column: 13, scope: !9255)
!9258 = !DILocation(line: 180, column: 26, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9254, file: !1862, line: 179, column: 44)
!9260 = !DILocation(line: 181, column: 9, scope: !9259)
!9261 = !DILocation(line: 183, column: 1, scope: !9233)
!9262 = distinct !DISubprogram(name: "eDisableInterrupts", linkageName: "_Z18eDisableInterruptsv", scope: !1987, file: !1987, line: 27, type: !150, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1986, retainedNodes: !152)
!9263 = !DILocation(line: 142, column: 3, scope: !9264, inlinedAt: !9265)
!9264 = distinct !DISubprogram(name: "__disable_irq", linkageName: "_ZL13__disable_irqv", scope: !6058, file: !6058, line: 140, type: !150, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1986, retainedNodes: !152)
!9265 = distinct !DILocation(line: 29, column: 5, scope: !9262)
!9266 = !{i64 1184613}
!9267 = !DILocation(line: 30, column: 1, scope: !9262)
!9268 = distinct !DISubprogram(name: "eEnableInterrupts", linkageName: "_Z17eEnableInterruptsv", scope: !1987, file: !1987, line: 32, type: !150, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1986, retainedNodes: !152)
!9269 = !DILocation(line: 131, column: 3, scope: !9270, inlinedAt: !9271)
!9270 = distinct !DISubprogram(name: "__enable_irq", linkageName: "_ZL12__enable_irqv", scope: !6058, file: !6058, line: 129, type: !150, scopeLine: 130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1986, retainedNodes: !152)
!9271 = distinct !DILocation(line: 34, column: 5, scope: !9268)
!9272 = !{i64 1184341}
!9273 = !DILocation(line: 35, column: 1, scope: !9268)
!9274 = distinct !DISubprogram(name: "HAL_UART_Init", scope: !1989, file: !1989, line: 314, type: !9275, scopeLine: 315, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9277)
!9275 = !DISubroutineType(types: !9276)
!9276 = !{!3389, !2014}
!9277 = !{!9278}
!9278 = !DILocalVariable(name: "huart", arg: 1, scope: !9274, file: !1989, line: 314, type: !2014)
!9279 = !DILocation(line: 0, scope: !9274)
!9280 = !DILocation(line: 317, column: 13, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9274, file: !1989, line: 317, column: 7)
!9282 = !DILocation(line: 317, column: 7, scope: !9274)
!9283 = !DILocation(line: 338, column: 14, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9274, file: !1989, line: 338, column: 7)
!9285 = !{!9286, !2497, i64 60}
!9286 = !{!"__UART_HandleTypeDef", !2496, i64 0, !6316, i64 4, !2496, i64 32, !9287, i64 36, !9287, i64 38, !2496, i64 40, !9287, i64 44, !9287, i64 46, !2496, i64 48, !2496, i64 52, !2497, i64 56, !2497, i64 60, !2497, i64 64, !3335, i64 68}
!9287 = !{!"short", !2497, i64 0}
!9288 = !DILocation(line: 338, column: 21, scope: !9284)
!9289 = !DILocation(line: 338, column: 7, scope: !9274)
!9290 = !DILocation(line: 341, column: 12, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9284, file: !1989, line: 339, column: 3)
!9292 = !DILocation(line: 341, column: 17, scope: !9291)
!9293 = !{!9286, !2497, i64 56}
!9294 = !DILocation(line: 355, column: 5, scope: !9291)
!9295 = !DILocation(line: 357, column: 3, scope: !9291)
!9296 = !DILocation(line: 359, column: 17, scope: !9274)
!9297 = !DILocation(line: 362, column: 3, scope: !9274)
!9298 = !{!9286, !2496, i64 0}
!9299 = !DILocation(line: 365, column: 3, scope: !9274)
!9300 = !DILocation(line: 370, column: 3, scope: !9274)
!9301 = !DILocation(line: 371, column: 3, scope: !9274)
!9302 = !DILocation(line: 374, column: 3, scope: !9274)
!9303 = !DILocation(line: 377, column: 10, scope: !9274)
!9304 = !DILocation(line: 377, column: 20, scope: !9274)
!9305 = !{!9286, !3335, i64 68}
!9306 = !DILocation(line: 378, column: 17, scope: !9274)
!9307 = !DILocation(line: 379, column: 10, scope: !9274)
!9308 = !DILocation(line: 379, column: 18, scope: !9274)
!9309 = !{!9286, !2497, i64 64}
!9310 = !DILocation(line: 381, column: 3, scope: !9274)
!9311 = !DILocation(line: 382, column: 1, scope: !9274)
!9312 = distinct !DISubprogram(name: "HAL_UART_MspInit", scope: !1989, file: !1989, line: 672, type: !9313, scopeLine: 673, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9315)
!9313 = !DISubroutineType(types: !9314)
!9314 = !{null, !2014}
!9315 = !{!9316}
!9316 = !DILocalVariable(name: "huart", arg: 1, scope: !9312, file: !1989, line: 672, type: !2014)
!9317 = !DILocation(line: 0, scope: !9312)
!9318 = !DILocation(line: 679, column: 1, scope: !9312)
!9319 = distinct !DISubprogram(name: "UART_SetConfig", scope: !1989, file: !1989, line: 3063, type: !9313, scopeLine: 3064, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9320)
!9320 = !{!9321, !9322, !9323}
!9321 = !DILocalVariable(name: "huart", arg: 1, scope: !9319, file: !1989, line: 3063, type: !2014)
!9322 = !DILocalVariable(name: "tmpreg", scope: !9319, file: !1989, line: 3065, type: !32)
!9323 = !DILocalVariable(name: "pclk", scope: !9319, file: !1989, line: 3066, type: !32)
!9324 = !DILocation(line: 0, scope: !9319)
!9325 = !DILocation(line: 3077, column: 3, scope: !9319)
!9326 = !{!9286, !3335, i64 12}
!9327 = !DILocation(line: 3092, column: 34, scope: !9319)
!9328 = !{!9286, !3335, i64 8}
!9329 = !DILocation(line: 3092, column: 59, scope: !9319)
!9330 = !{!9286, !3335, i64 16}
!9331 = !DILocation(line: 3092, column: 45, scope: !9319)
!9332 = !DILocation(line: 3092, column: 80, scope: !9319)
!9333 = !{!9286, !3335, i64 20}
!9334 = !DILocation(line: 3092, column: 66, scope: !9319)
!9335 = !DILocation(line: 3093, column: 3, scope: !9319)
!9336 = !DILocation(line: 3100, column: 3, scope: !9319)
!9337 = !{!9286, !3335, i64 24}
!9338 = !DILocation(line: 3134, column: 22, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9319, file: !1989, line: 3134, column: 6)
!9340 = !DILocation(line: 3134, column: 6, scope: !9319)
!9341 = !DILocation(line: 3136, column: 12, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9339, file: !1989, line: 3135, column: 3)
!9343 = !DILocation(line: 3138, column: 3, scope: !9342)
!9344 = !DILocation(line: 3141, column: 12, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9339, file: !1989, line: 3140, column: 3)
!9346 = !DILocation(line: 0, scope: !9339)
!9347 = !{!9286, !3335, i64 4}
!9348 = !DILocation(line: 3145, column: 1, scope: !9319)
!9349 = distinct !DISubprogram(name: "HAL_HalfDuplex_Init", scope: !1989, file: !1989, line: 391, type: !9275, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9350)
!9350 = !{!9351}
!9351 = !DILocalVariable(name: "huart", arg: 1, scope: !9349, file: !1989, line: 391, type: !2014)
!9352 = !DILocation(line: 0, scope: !9349)
!9353 = !DILocation(line: 394, column: 13, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9349, file: !1989, line: 394, column: 7)
!9355 = !DILocation(line: 394, column: 7, scope: !9349)
!9356 = !DILocation(line: 406, column: 14, scope: !9357)
!9357 = distinct !DILexicalBlock(scope: !9349, file: !1989, line: 406, column: 7)
!9358 = !DILocation(line: 406, column: 21, scope: !9357)
!9359 = !DILocation(line: 406, column: 7, scope: !9349)
!9360 = !DILocation(line: 409, column: 12, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9357, file: !1989, line: 407, column: 3)
!9362 = !DILocation(line: 409, column: 17, scope: !9361)
!9363 = !DILocation(line: 423, column: 5, scope: !9361)
!9364 = !DILocation(line: 425, column: 3, scope: !9361)
!9365 = !DILocation(line: 427, column: 17, scope: !9349)
!9366 = !DILocation(line: 430, column: 3, scope: !9349)
!9367 = !DILocation(line: 433, column: 3, scope: !9349)
!9368 = !DILocation(line: 438, column: 3, scope: !9349)
!9369 = !DILocation(line: 439, column: 3, scope: !9349)
!9370 = !DILocation(line: 442, column: 3, scope: !9349)
!9371 = !DILocation(line: 445, column: 3, scope: !9349)
!9372 = !DILocation(line: 448, column: 10, scope: !9349)
!9373 = !DILocation(line: 448, column: 20, scope: !9349)
!9374 = !DILocation(line: 449, column: 17, scope: !9349)
!9375 = !DILocation(line: 450, column: 10, scope: !9349)
!9376 = !DILocation(line: 450, column: 18, scope: !9349)
!9377 = !DILocation(line: 452, column: 3, scope: !9349)
!9378 = !DILocation(line: 453, column: 1, scope: !9349)
!9379 = distinct !DISubprogram(name: "HAL_LIN_Init", scope: !1989, file: !1989, line: 466, type: !9380, scopeLine: 467, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9382)
!9380 = !DISubroutineType(types: !9381)
!9381 = !{!3389, !2014, !32}
!9382 = !{!9383, !9384}
!9383 = !DILocalVariable(name: "huart", arg: 1, scope: !9379, file: !1989, line: 466, type: !2014)
!9384 = !DILocalVariable(name: "BreakDetectLength", arg: 2, scope: !9379, file: !1989, line: 466, type: !32)
!9385 = !DILocation(line: 0, scope: !9379)
!9386 = !DILocation(line: 469, column: 13, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9379, file: !1989, line: 469, column: 7)
!9388 = !DILocation(line: 469, column: 7, scope: !9379)
!9389 = !DILocation(line: 484, column: 14, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !9379, file: !1989, line: 484, column: 7)
!9391 = !DILocation(line: 484, column: 21, scope: !9390)
!9392 = !DILocation(line: 484, column: 7, scope: !9379)
!9393 = !DILocation(line: 487, column: 12, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !9390, file: !1989, line: 485, column: 3)
!9395 = !DILocation(line: 487, column: 17, scope: !9394)
!9396 = !DILocation(line: 501, column: 5, scope: !9394)
!9397 = !DILocation(line: 503, column: 3, scope: !9394)
!9398 = !DILocation(line: 505, column: 17, scope: !9379)
!9399 = !DILocation(line: 508, column: 3, scope: !9379)
!9400 = !DILocation(line: 511, column: 3, scope: !9379)
!9401 = !DILocation(line: 516, column: 3, scope: !9379)
!9402 = !DILocation(line: 517, column: 3, scope: !9379)
!9403 = !DILocation(line: 520, column: 3, scope: !9379)
!9404 = !DILocation(line: 523, column: 3, scope: !9379)
!9405 = !DILocation(line: 524, column: 3, scope: !9379)
!9406 = !DILocation(line: 527, column: 3, scope: !9379)
!9407 = !DILocation(line: 530, column: 10, scope: !9379)
!9408 = !DILocation(line: 530, column: 20, scope: !9379)
!9409 = !DILocation(line: 531, column: 17, scope: !9379)
!9410 = !DILocation(line: 532, column: 10, scope: !9379)
!9411 = !DILocation(line: 532, column: 18, scope: !9379)
!9412 = !DILocation(line: 534, column: 3, scope: !9379)
!9413 = !DILocation(line: 535, column: 1, scope: !9379)
!9414 = distinct !DISubprogram(name: "HAL_MultiProcessor_Init", scope: !1989, file: !1989, line: 549, type: !9415, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9417)
!9415 = !DISubroutineType(types: !9416)
!9416 = !{!3389, !2014, !87, !32}
!9417 = !{!9418, !9419, !9420}
!9418 = !DILocalVariable(name: "huart", arg: 1, scope: !9414, file: !1989, line: 549, type: !2014)
!9419 = !DILocalVariable(name: "Address", arg: 2, scope: !9414, file: !1989, line: 549, type: !87)
!9420 = !DILocalVariable(name: "WakeUpMethod", arg: 3, scope: !9414, file: !1989, line: 549, type: !32)
!9421 = !DILocation(line: 0, scope: !9414)
!9422 = !DILocation(line: 552, column: 13, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9414, file: !1989, line: 552, column: 7)
!9424 = !DILocation(line: 552, column: 7, scope: !9414)
!9425 = !DILocation(line: 568, column: 14, scope: !9426)
!9426 = distinct !DILexicalBlock(scope: !9414, file: !1989, line: 568, column: 7)
!9427 = !DILocation(line: 568, column: 21, scope: !9426)
!9428 = !DILocation(line: 568, column: 7, scope: !9414)
!9429 = !DILocation(line: 571, column: 12, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9426, file: !1989, line: 569, column: 3)
!9431 = !DILocation(line: 571, column: 17, scope: !9430)
!9432 = !DILocation(line: 585, column: 5, scope: !9430)
!9433 = !DILocation(line: 587, column: 3, scope: !9430)
!9434 = !DILocation(line: 589, column: 17, scope: !9414)
!9435 = !DILocation(line: 592, column: 3, scope: !9414)
!9436 = !DILocation(line: 595, column: 3, scope: !9414)
!9437 = !DILocation(line: 600, column: 3, scope: !9414)
!9438 = !DILocation(line: 601, column: 3, scope: !9414)
!9439 = !DILocation(line: 604, column: 3, scope: !9414)
!9440 = !DILocation(line: 605, column: 3, scope: !9414)
!9441 = !DILocation(line: 608, column: 3, scope: !9414)
!9442 = !DILocation(line: 609, column: 3, scope: !9414)
!9443 = !DILocation(line: 612, column: 3, scope: !9414)
!9444 = !DILocation(line: 615, column: 10, scope: !9414)
!9445 = !DILocation(line: 615, column: 20, scope: !9414)
!9446 = !DILocation(line: 616, column: 17, scope: !9414)
!9447 = !DILocation(line: 617, column: 10, scope: !9414)
!9448 = !DILocation(line: 617, column: 18, scope: !9414)
!9449 = !DILocation(line: 619, column: 3, scope: !9414)
!9450 = !DILocation(line: 620, column: 1, scope: !9414)
!9451 = distinct !DISubprogram(name: "HAL_UART_DeInit", scope: !1989, file: !1989, line: 628, type: !9275, scopeLine: 629, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9452)
!9452 = !{!9453}
!9453 = !DILocalVariable(name: "huart", arg: 1, scope: !9451, file: !1989, line: 628, type: !2014)
!9454 = !DILocation(line: 0, scope: !9451)
!9455 = !DILocation(line: 631, column: 13, scope: !9456)
!9456 = distinct !DILexicalBlock(scope: !9451, file: !1989, line: 631, column: 7)
!9457 = !DILocation(line: 631, column: 7, scope: !9451)
!9458 = !DILocation(line: 639, column: 10, scope: !9451)
!9459 = !DILocation(line: 639, column: 17, scope: !9451)
!9460 = !DILocation(line: 642, column: 3, scope: !9451)
!9461 = !DILocation(line: 653, column: 3, scope: !9451)
!9462 = !DILocation(line: 656, column: 10, scope: !9451)
!9463 = !DILocation(line: 656, column: 20, scope: !9451)
!9464 = !DILocation(line: 657, column: 17, scope: !9451)
!9465 = !DILocation(line: 658, column: 10, scope: !9451)
!9466 = !DILocation(line: 658, column: 18, scope: !9451)
!9467 = !DILocation(line: 661, column: 3, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9451, file: !1989, line: 661, column: 3)
!9469 = !DILocation(line: 663, column: 3, scope: !9451)
!9470 = !DILocation(line: 664, column: 1, scope: !9451)
!9471 = distinct !DISubprogram(name: "HAL_UART_MspDeInit", scope: !1989, file: !1989, line: 687, type: !9313, scopeLine: 688, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9472)
!9472 = !{!9473}
!9473 = !DILocalVariable(name: "huart", arg: 1, scope: !9471, file: !1989, line: 687, type: !2014)
!9474 = !DILocation(line: 0, scope: !9471)
!9475 = !DILocation(line: 694, column: 1, scope: !9471)
!9476 = distinct !DISubprogram(name: "HAL_UART_Transmit", scope: !1989, file: !1989, line: 1027, type: !9477, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9479)
!9477 = !DISubroutineType(types: !9478)
!9478 = !{!3389, !2014, !86, !26, !32}
!9479 = !{!9480, !9481, !9482, !9483, !9484, !9485}
!9480 = !DILocalVariable(name: "huart", arg: 1, scope: !9476, file: !1989, line: 1027, type: !2014)
!9481 = !DILocalVariable(name: "pData", arg: 2, scope: !9476, file: !1989, line: 1027, type: !86)
!9482 = !DILocalVariable(name: "Size", arg: 3, scope: !9476, file: !1989, line: 1027, type: !26)
!9483 = !DILocalVariable(name: "Timeout", arg: 4, scope: !9476, file: !1989, line: 1027, type: !32)
!9484 = !DILocalVariable(name: "tmp", scope: !9476, file: !1989, line: 1029, type: !2012)
!9485 = !DILocalVariable(name: "tickstart", scope: !9476, file: !1989, line: 1030, type: !32)
!9486 = !DILocation(line: 0, scope: !9476)
!9487 = !DILocation(line: 1033, column: 14, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9476, file: !1989, line: 1033, column: 7)
!9489 = !DILocation(line: 1033, column: 21, scope: !9488)
!9490 = !DILocation(line: 1033, column: 7, scope: !9476)
!9491 = !DILocation(line: 1035, column: 16, scope: !9492)
!9492 = distinct !DILexicalBlock(scope: !9493, file: !1989, line: 1035, column: 9)
!9493 = distinct !DILexicalBlock(scope: !9488, file: !1989, line: 1034, column: 3)
!9494 = !DILocation(line: 1035, column: 25, scope: !9492)
!9495 = !DILocation(line: 1041, column: 5, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !9497, file: !1989, line: 1041, column: 5)
!9497 = distinct !DILexicalBlock(scope: !9493, file: !1989, line: 1041, column: 5)
!9498 = !DILocation(line: 1041, column: 5, scope: !9497)
!9499 = !DILocation(line: 1041, column: 5, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9496, file: !1989, line: 1041, column: 5)
!9501 = !DILocation(line: 1043, column: 12, scope: !9493)
!9502 = !DILocation(line: 1043, column: 22, scope: !9493)
!9503 = !DILocation(line: 1044, column: 19, scope: !9493)
!9504 = !DILocation(line: 1047, column: 17, scope: !9493)
!9505 = !DILocation(line: 1049, column: 12, scope: !9493)
!9506 = !DILocation(line: 1049, column: 23, scope: !9493)
!9507 = !{!9286, !9287, i64 36}
!9508 = !DILocation(line: 1050, column: 12, scope: !9493)
!9509 = !DILocation(line: 1050, column: 24, scope: !9493)
!9510 = !{!9286, !9287, i64 38}
!9511 = !DILocation(line: 1051, column: 19, scope: !9493)
!9512 = !DILocation(line: 1051, column: 31, scope: !9493)
!9513 = !DILocation(line: 1051, column: 5, scope: !9493)
!9514 = !DILocation(line: 1053, column: 25, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9493, file: !1989, line: 1052, column: 5)
!9516 = !DILocation(line: 1054, column: 23, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9515, file: !1989, line: 1054, column: 11)
!9518 = !DILocation(line: 1054, column: 34, scope: !9517)
!9519 = !DILocation(line: 0, scope: !9517)
!9520 = !DILocation(line: 1054, column: 11, scope: !9515)
!9521 = !DILocation(line: 1056, column: 13, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9517, file: !1989, line: 1055, column: 7)
!9523 = !DILocation(line: 1060, column: 15, scope: !9522)
!9524 = !DILocation(line: 1061, column: 32, scope: !9522)
!9525 = !{!9287, !9287, i64 0}
!9526 = !DILocation(line: 1061, column: 37, scope: !9522)
!9527 = !DILocation(line: 1061, column: 16, scope: !9522)
!9528 = !DILocation(line: 1061, column: 26, scope: !9522)
!9529 = !DILocation(line: 1061, column: 29, scope: !9522)
!9530 = !{!6316, !3335, i64 4}
!9531 = !DILocation(line: 1062, column: 25, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9522, file: !1989, line: 1062, column: 13)
!9533 = !DILocation(line: 1062, column: 32, scope: !9532)
!9534 = !DILocation(line: 1062, column: 13, scope: !9522)
!9535 = !DILocation(line: 1064, column: 17, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9532, file: !1989, line: 1063, column: 9)
!9537 = !DILocation(line: 1065, column: 9, scope: !9536)
!9538 = !DILocation(line: 1068, column: 17, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9532, file: !1989, line: 1067, column: 9)
!9540 = !DILocation(line: 1073, column: 13, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9517, file: !1989, line: 1072, column: 7)
!9542 = !DILocation(line: 1077, column: 38, scope: !9541)
!9543 = !DILocation(line: 1077, column: 32, scope: !9541)
!9544 = !DILocation(line: 1077, column: 16, scope: !9541)
!9545 = !DILocation(line: 1077, column: 26, scope: !9541)
!9546 = !DILocation(line: 1077, column: 29, scope: !9541)
!9547 = distinct !{!9547, !9513, !9548, !2129, !2130}
!9548 = !DILocation(line: 1079, column: 5, scope: !9493)
!9549 = !DILocation(line: 1081, column: 9, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9493, file: !1989, line: 1081, column: 9)
!9551 = !DILocation(line: 1081, column: 85, scope: !9550)
!9552 = !DILocation(line: 1081, column: 9, scope: !9493)
!9553 = !DILocation(line: 1087, column: 19, scope: !9493)
!9554 = !DILocation(line: 1090, column: 5, scope: !9555)
!9555 = distinct !DILexicalBlock(scope: !9493, file: !1989, line: 1090, column: 5)
!9556 = !DILocation(line: 1092, column: 5, scope: !9493)
!9557 = !DILocation(line: 0, scope: !9488)
!9558 = !DILocation(line: 1098, column: 1, scope: !9476)
!9559 = distinct !DISubprogram(name: "UART_WaitOnFlagUntilTimeout", scope: !1989, file: !1989, line: 2690, type: !9560, scopeLine: 2691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9562)
!9560 = !DISubroutineType(types: !9561)
!9561 = !{!3389, !2014, !32, !3487, !32, !32}
!9562 = !{!9563, !9564, !9565, !9566, !9567}
!9563 = !DILocalVariable(name: "huart", arg: 1, scope: !9559, file: !1989, line: 2690, type: !2014)
!9564 = !DILocalVariable(name: "Flag", arg: 2, scope: !9559, file: !1989, line: 2690, type: !32)
!9565 = !DILocalVariable(name: "Status", arg: 3, scope: !9559, file: !1989, line: 2690, type: !3487)
!9566 = !DILocalVariable(name: "Tickstart", arg: 4, scope: !9559, file: !1989, line: 2690, type: !32)
!9567 = !DILocalVariable(name: "Timeout", arg: 5, scope: !9559, file: !1989, line: 2690, type: !32)
!9568 = !DILocation(line: 0, scope: !9559)
!9569 = !DILocation(line: 2693, column: 11, scope: !9559)
!9570 = !{!6316, !3335, i64 0}
!9571 = !DILocation(line: 2693, column: 3, scope: !9559)
!9572 = !DILocation(line: 2696, column: 9, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9559, file: !1989, line: 2694, column: 3)
!9574 = !DILocation(line: 2698, column: 32, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9576, file: !1989, line: 2698, column: 11)
!9576 = distinct !DILexicalBlock(scope: !9577, file: !1989, line: 2697, column: 5)
!9577 = distinct !DILexicalBlock(scope: !9573, file: !1989, line: 2696, column: 9)
!9578 = !DILocation(line: 2698, column: 46, scope: !9575)
!9579 = !DILocation(line: 2698, column: 59, scope: !9575)
!9580 = !DILocation(line: 2698, column: 11, scope: !9576)
!9581 = !DILocation(line: 2701, column: 9, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9575, file: !1989, line: 2699, column: 7)
!9583 = !DILocation(line: 2702, column: 9, scope: !9582)
!9584 = !DILocation(line: 2704, column: 16, scope: !9582)
!9585 = !DILocation(line: 2704, column: 24, scope: !9582)
!9586 = !DILocation(line: 2705, column: 16, scope: !9582)
!9587 = !DILocation(line: 2705, column: 24, scope: !9582)
!9588 = !DILocation(line: 2708, column: 9, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9582, file: !1989, line: 2708, column: 9)
!9590 = !DILocation(line: 2710, column: 9, scope: !9582)
!9591 = distinct !{!9591, !9571, !9592, !2129, !2130}
!9592 = !DILocation(line: 2713, column: 3, scope: !9559)
!9593 = !DILocation(line: 2715, column: 1, scope: !9559)
!9594 = distinct !DISubprogram(name: "HAL_UART_Receive", scope: !1989, file: !1989, line: 1112, type: !9477, scopeLine: 1113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9595)
!9595 = !{!9596, !9597, !9598, !9599, !9600, !9601}
!9596 = !DILocalVariable(name: "huart", arg: 1, scope: !9594, file: !1989, line: 1112, type: !2014)
!9597 = !DILocalVariable(name: "pData", arg: 2, scope: !9594, file: !1989, line: 1112, type: !86)
!9598 = !DILocalVariable(name: "Size", arg: 3, scope: !9594, file: !1989, line: 1112, type: !26)
!9599 = !DILocalVariable(name: "Timeout", arg: 4, scope: !9594, file: !1989, line: 1112, type: !32)
!9600 = !DILocalVariable(name: "tmp", scope: !9594, file: !1989, line: 1114, type: !2012)
!9601 = !DILocalVariable(name: "tickstart", scope: !9594, file: !1989, line: 1115, type: !32)
!9602 = !DILocation(line: 0, scope: !9594)
!9603 = !DILocation(line: 1118, column: 14, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9594, file: !1989, line: 1118, column: 7)
!9605 = !DILocation(line: 1118, column: 22, scope: !9604)
!9606 = !DILocation(line: 1118, column: 7, scope: !9594)
!9607 = !DILocation(line: 1120, column: 16, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9609, file: !1989, line: 1120, column: 9)
!9609 = distinct !DILexicalBlock(scope: !9604, file: !1989, line: 1119, column: 3)
!9610 = !DILocation(line: 1120, column: 25, scope: !9608)
!9611 = !DILocation(line: 1126, column: 5, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9613, file: !1989, line: 1126, column: 5)
!9613 = distinct !DILexicalBlock(scope: !9609, file: !1989, line: 1126, column: 5)
!9614 = !DILocation(line: 1126, column: 5, scope: !9613)
!9615 = !DILocation(line: 1126, column: 5, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9612, file: !1989, line: 1126, column: 5)
!9617 = !DILocation(line: 1128, column: 12, scope: !9609)
!9618 = !DILocation(line: 1128, column: 22, scope: !9609)
!9619 = !DILocation(line: 1129, column: 20, scope: !9609)
!9620 = !DILocation(line: 1132, column: 17, scope: !9609)
!9621 = !DILocation(line: 1134, column: 12, scope: !9609)
!9622 = !DILocation(line: 1134, column: 23, scope: !9609)
!9623 = !{!9286, !9287, i64 44}
!9624 = !DILocation(line: 1135, column: 12, scope: !9609)
!9625 = !DILocation(line: 1135, column: 24, scope: !9609)
!9626 = !{!9286, !9287, i64 46}
!9627 = !DILocation(line: 1138, column: 19, scope: !9609)
!9628 = !DILocation(line: 1138, column: 31, scope: !9609)
!9629 = !DILocation(line: 1138, column: 5, scope: !9609)
!9630 = !DILocation(line: 1140, column: 25, scope: !9631)
!9631 = distinct !DILexicalBlock(scope: !9609, file: !1989, line: 1139, column: 5)
!9632 = !DILocation(line: 1141, column: 23, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9631, file: !1989, line: 1141, column: 11)
!9634 = !DILocation(line: 1141, column: 34, scope: !9633)
!9635 = !DILocation(line: 0, scope: !9633)
!9636 = !DILocation(line: 1141, column: 11, scope: !9631)
!9637 = !DILocation(line: 1143, column: 13, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9633, file: !1989, line: 1142, column: 7)
!9639 = !DILocation(line: 1147, column: 15, scope: !9638)
!9640 = !DILocation(line: 1148, column: 25, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9638, file: !1989, line: 1148, column: 13)
!9642 = !DILocation(line: 1148, column: 32, scope: !9641)
!9643 = !DILocation(line: 1148, column: 13, scope: !9638)
!9644 = !DILocation(line: 1150, column: 36, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9641, file: !1989, line: 1149, column: 9)
!9646 = !DILocation(line: 1150, column: 46, scope: !9645)
!9647 = !DILocation(line: 1150, column: 18, scope: !9645)
!9648 = !DILocation(line: 1150, column: 16, scope: !9645)
!9649 = !DILocation(line: 1151, column: 17, scope: !9645)
!9650 = !DILocation(line: 1152, column: 9, scope: !9645)
!9651 = !DILocation(line: 1155, column: 36, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9641, file: !1989, line: 1154, column: 9)
!9653 = !DILocation(line: 1155, column: 46, scope: !9652)
!9654 = !DILocation(line: 1155, column: 18, scope: !9652)
!9655 = !DILocation(line: 1155, column: 16, scope: !9652)
!9656 = !DILocation(line: 1156, column: 17, scope: !9652)
!9657 = !DILocation(line: 1162, column: 13, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9633, file: !1989, line: 1161, column: 7)
!9659 = !DILocation(line: 1166, column: 25, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9658, file: !1989, line: 1166, column: 13)
!9661 = !DILocation(line: 1166, column: 32, scope: !9660)
!9662 = !DILocation(line: 1166, column: 13, scope: !9658)
!9663 = !DILocation(line: 1168, column: 39, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9660, file: !1989, line: 1167, column: 9)
!9665 = !DILocation(line: 1168, column: 49, scope: !9664)
!9666 = !DILocation(line: 1168, column: 22, scope: !9664)
!9667 = !DILocation(line: 1168, column: 17, scope: !9664)
!9668 = !DILocation(line: 1168, column: 20, scope: !9664)
!9669 = !DILocation(line: 1169, column: 9, scope: !9664)
!9670 = !DILocation(line: 1172, column: 39, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9660, file: !1989, line: 1171, column: 9)
!9672 = !DILocation(line: 1172, column: 49, scope: !9671)
!9673 = !DILocation(line: 1172, column: 22, scope: !9671)
!9674 = !DILocation(line: 1172, column: 17, scope: !9671)
!9675 = !DILocation(line: 1172, column: 20, scope: !9671)
!9676 = distinct !{!9676, !9629, !9677, !2129, !2130}
!9677 = !DILocation(line: 1176, column: 5, scope: !9609)
!9678 = !DILocation(line: 1179, column: 20, scope: !9609)
!9679 = !DILocation(line: 1182, column: 5, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9609, file: !1989, line: 1182, column: 5)
!9681 = !DILocation(line: 1184, column: 5, scope: !9609)
!9682 = !DILocation(line: 0, scope: !9604)
!9683 = !DILocation(line: 1190, column: 1, scope: !9594)
!9684 = distinct !DISubprogram(name: "HAL_UART_Transmit_IT", scope: !1989, file: !1989, line: 1203, type: !9685, scopeLine: 1204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9687)
!9685 = !DISubroutineType(types: !9686)
!9686 = !{!3389, !2014, !86, !26}
!9687 = !{!9688, !9689, !9690}
!9688 = !DILocalVariable(name: "huart", arg: 1, scope: !9684, file: !1989, line: 1203, type: !2014)
!9689 = !DILocalVariable(name: "pData", arg: 2, scope: !9684, file: !1989, line: 1203, type: !86)
!9690 = !DILocalVariable(name: "Size", arg: 3, scope: !9684, file: !1989, line: 1203, type: !26)
!9691 = !DILocation(line: 0, scope: !9684)
!9692 = !DILocation(line: 1206, column: 14, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9684, file: !1989, line: 1206, column: 7)
!9694 = !DILocation(line: 1206, column: 21, scope: !9693)
!9695 = !DILocation(line: 1206, column: 7, scope: !9684)
!9696 = !DILocation(line: 1208, column: 16, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9698, file: !1989, line: 1208, column: 9)
!9698 = distinct !DILexicalBlock(scope: !9693, file: !1989, line: 1207, column: 3)
!9699 = !DILocation(line: 1208, column: 25, scope: !9697)
!9700 = !DILocation(line: 1214, column: 5, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !9702, file: !1989, line: 1214, column: 5)
!9702 = distinct !DILexicalBlock(scope: !9698, file: !1989, line: 1214, column: 5)
!9703 = !DILocation(line: 1214, column: 5, scope: !9702)
!9704 = !DILocation(line: 1214, column: 5, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9701, file: !1989, line: 1214, column: 5)
!9706 = !DILocation(line: 1216, column: 12, scope: !9698)
!9707 = !DILocation(line: 1216, column: 23, scope: !9698)
!9708 = !{!9286, !2496, i64 32}
!9709 = !DILocation(line: 1217, column: 12, scope: !9698)
!9710 = !DILocation(line: 1217, column: 23, scope: !9698)
!9711 = !DILocation(line: 1218, column: 12, scope: !9698)
!9712 = !DILocation(line: 1218, column: 24, scope: !9698)
!9713 = !DILocation(line: 1220, column: 12, scope: !9698)
!9714 = !DILocation(line: 1220, column: 22, scope: !9698)
!9715 = !DILocation(line: 1221, column: 19, scope: !9698)
!9716 = !DILocation(line: 1224, column: 5, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !9698, file: !1989, line: 1224, column: 5)
!9718 = !DILocation(line: 1227, column: 5, scope: !9698)
!9719 = !DILocation(line: 1229, column: 5, scope: !9698)
!9720 = !DILocation(line: 0, scope: !9693)
!9721 = !DILocation(line: 1235, column: 1, scope: !9684)
!9722 = distinct !DISubprogram(name: "HAL_UART_Receive_IT", scope: !1989, file: !1989, line: 1248, type: !9685, scopeLine: 1249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9723)
!9723 = !{!9724, !9725, !9726}
!9724 = !DILocalVariable(name: "huart", arg: 1, scope: !9722, file: !1989, line: 1248, type: !2014)
!9725 = !DILocalVariable(name: "pData", arg: 2, scope: !9722, file: !1989, line: 1248, type: !86)
!9726 = !DILocalVariable(name: "Size", arg: 3, scope: !9722, file: !1989, line: 1248, type: !26)
!9727 = !DILocation(line: 0, scope: !9722)
!9728 = !DILocation(line: 1251, column: 14, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9722, file: !1989, line: 1251, column: 7)
!9730 = !DILocation(line: 1251, column: 22, scope: !9729)
!9731 = !DILocation(line: 1251, column: 7, scope: !9722)
!9732 = !DILocation(line: 1253, column: 16, scope: !9733)
!9733 = distinct !DILexicalBlock(scope: !9734, file: !1989, line: 1253, column: 9)
!9734 = distinct !DILexicalBlock(scope: !9729, file: !1989, line: 1252, column: 3)
!9735 = !DILocation(line: 1253, column: 25, scope: !9733)
!9736 = !DILocation(line: 1259, column: 5, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9738, file: !1989, line: 1259, column: 5)
!9738 = distinct !DILexicalBlock(scope: !9734, file: !1989, line: 1259, column: 5)
!9739 = !DILocation(line: 1259, column: 5, scope: !9738)
!9740 = !DILocation(line: 1259, column: 5, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9737, file: !1989, line: 1259, column: 5)
!9742 = !DILocation(line: 1261, column: 12, scope: !9734)
!9743 = !DILocation(line: 1261, column: 23, scope: !9734)
!9744 = !{!9286, !2496, i64 40}
!9745 = !DILocation(line: 1262, column: 12, scope: !9734)
!9746 = !DILocation(line: 1262, column: 23, scope: !9734)
!9747 = !DILocation(line: 1263, column: 12, scope: !9734)
!9748 = !DILocation(line: 1263, column: 24, scope: !9734)
!9749 = !DILocation(line: 1265, column: 12, scope: !9734)
!9750 = !DILocation(line: 1265, column: 22, scope: !9734)
!9751 = !DILocation(line: 1266, column: 20, scope: !9734)
!9752 = !DILocation(line: 1269, column: 5, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !9734, file: !1989, line: 1269, column: 5)
!9754 = !DILocation(line: 1272, column: 5, scope: !9734)
!9755 = !DILocation(line: 1275, column: 5, scope: !9734)
!9756 = !DILocation(line: 1278, column: 5, scope: !9734)
!9757 = !DILocation(line: 1280, column: 5, scope: !9734)
!9758 = !DILocation(line: 0, scope: !9729)
!9759 = !DILocation(line: 1286, column: 1, scope: !9722)
!9760 = distinct !DISubprogram(name: "HAL_UART_Transmit_DMA", scope: !1989, file: !1989, line: 1299, type: !9685, scopeLine: 1300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9761)
!9761 = !{!9762, !9763, !9764, !9765}
!9762 = !DILocalVariable(name: "huart", arg: 1, scope: !9760, file: !1989, line: 1299, type: !2014)
!9763 = !DILocalVariable(name: "pData", arg: 2, scope: !9760, file: !1989, line: 1299, type: !86)
!9764 = !DILocalVariable(name: "Size", arg: 3, scope: !9760, file: !1989, line: 1299, type: !26)
!9765 = !DILocalVariable(name: "tmp", scope: !9760, file: !1989, line: 1301, type: !137)
!9766 = !DILocation(line: 0, scope: !9760)
!9767 = !DILocation(line: 1304, column: 14, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9760, file: !1989, line: 1304, column: 7)
!9769 = !DILocation(line: 1304, column: 21, scope: !9768)
!9770 = !DILocation(line: 1304, column: 7, scope: !9760)
!9771 = !DILocation(line: 1306, column: 16, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9773, file: !1989, line: 1306, column: 9)
!9773 = distinct !DILexicalBlock(scope: !9768, file: !1989, line: 1305, column: 3)
!9774 = !DILocation(line: 1306, column: 25, scope: !9772)
!9775 = !DILocation(line: 1312, column: 5, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9777, file: !1989, line: 1312, column: 5)
!9777 = distinct !DILexicalBlock(scope: !9773, file: !1989, line: 1312, column: 5)
!9778 = !DILocation(line: 1312, column: 5, scope: !9777)
!9779 = !DILocation(line: 1312, column: 5, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !9776, file: !1989, line: 1312, column: 5)
!9781 = !DILocation(line: 1314, column: 12, scope: !9773)
!9782 = !DILocation(line: 1314, column: 23, scope: !9773)
!9783 = !DILocation(line: 1315, column: 12, scope: !9773)
!9784 = !DILocation(line: 1315, column: 23, scope: !9773)
!9785 = !DILocation(line: 1316, column: 12, scope: !9773)
!9786 = !DILocation(line: 1316, column: 24, scope: !9773)
!9787 = !DILocation(line: 1318, column: 12, scope: !9773)
!9788 = !DILocation(line: 1318, column: 22, scope: !9773)
!9789 = !DILocation(line: 1319, column: 19, scope: !9773)
!9790 = !DILocation(line: 1322, column: 12, scope: !9773)
!9791 = !{!9286, !2496, i64 48}
!9792 = !DILocation(line: 1322, column: 20, scope: !9773)
!9793 = !DILocation(line: 1322, column: 37, scope: !9773)
!9794 = !{!9795, !2496, i64 44}
!9795 = !{!"__DMA_HandleTypeDef", !2496, i64 0, !6316, i64 4, !2497, i64 32, !2497, i64 36, !2496, i64 40, !2496, i64 44, !2496, i64 48, !2496, i64 52, !2496, i64 56, !3335, i64 60, !2496, i64 64, !3335, i64 68}
!9796 = !DILocation(line: 1325, column: 20, scope: !9773)
!9797 = !DILocation(line: 1325, column: 41, scope: !9773)
!9798 = !{!9795, !2496, i64 48}
!9799 = !DILocation(line: 1328, column: 20, scope: !9773)
!9800 = !DILocation(line: 1328, column: 38, scope: !9773)
!9801 = !{!9795, !2496, i64 52}
!9802 = !DILocation(line: 1331, column: 20, scope: !9773)
!9803 = !DILocation(line: 1331, column: 38, scope: !9773)
!9804 = !{!9795, !2496, i64 56}
!9805 = !DILocation(line: 1335, column: 37, scope: !9773)
!9806 = !DILocation(line: 1335, column: 73, scope: !9773)
!9807 = !DILocation(line: 1335, column: 83, scope: !9773)
!9808 = !DILocation(line: 1335, column: 55, scope: !9773)
!9809 = !DILocation(line: 1335, column: 5, scope: !9773)
!9810 = !DILocation(line: 1338, column: 5, scope: !9773)
!9811 = !DILocation(line: 1341, column: 5, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !9773, file: !1989, line: 1341, column: 5)
!9813 = !DILocation(line: 1345, column: 5, scope: !9773)
!9814 = !DILocation(line: 1347, column: 5, scope: !9773)
!9815 = !DILocation(line: 0, scope: !9768)
!9816 = !DILocation(line: 1353, column: 1, scope: !9760)
!9817 = distinct !DISubprogram(name: "UART_DMATransmitCplt", scope: !1989, file: !1989, line: 2542, type: !9818, scopeLine: 2543, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9820)
!9818 = !DISubroutineType(types: !9819)
!9819 = !{null, !2048}
!9820 = !{!9821, !9822}
!9821 = !DILocalVariable(name: "hdma", arg: 1, scope: !9817, file: !1989, line: 2542, type: !2048)
!9822 = !DILocalVariable(name: "huart", scope: !9817, file: !1989, line: 2544, type: !2014)
!9823 = !DILocation(line: 0, scope: !9817)
!9824 = !DILocation(line: 2544, column: 82, scope: !9817)
!9825 = !{!9795, !2496, i64 40}
!9826 = !DILocation(line: 2546, column: 14, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9817, file: !1989, line: 2546, column: 7)
!9828 = !{!9795, !2496, i64 0}
!9829 = !DILocation(line: 2546, column: 24, scope: !9827)
!9830 = !DILocation(line: 2546, column: 28, scope: !9827)
!9831 = !DILocation(line: 2546, column: 44, scope: !9827)
!9832 = !DILocation(line: 2546, column: 7, scope: !9817)
!9833 = !DILocation(line: 2548, column: 12, scope: !9834)
!9834 = distinct !DILexicalBlock(scope: !9827, file: !1989, line: 2547, column: 3)
!9835 = !DILocation(line: 2548, column: 24, scope: !9834)
!9836 = !DILocation(line: 2552, column: 5, scope: !9834)
!9837 = !DILocation(line: 2555, column: 5, scope: !9834)
!9838 = !DILocation(line: 2557, column: 3, scope: !9834)
!9839 = !DILocation(line: 2566, column: 5, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9827, file: !1989, line: 2560, column: 3)
!9841 = !DILocation(line: 2569, column: 1, scope: !9817)
!9842 = distinct !DISubprogram(name: "UART_DMATxHalfCplt", scope: !1989, file: !1989, line: 2577, type: !9818, scopeLine: 2578, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9843)
!9843 = !{!9844, !9845}
!9844 = !DILocalVariable(name: "hdma", arg: 1, scope: !9842, file: !1989, line: 2577, type: !2048)
!9845 = !DILocalVariable(name: "huart", scope: !9842, file: !1989, line: 2579, type: !2014)
!9846 = !DILocation(line: 0, scope: !9842)
!9847 = !DILocation(line: 2579, column: 82, scope: !9842)
!9848 = !DILocation(line: 2586, column: 3, scope: !9842)
!9849 = !DILocation(line: 2588, column: 1, scope: !9842)
!9850 = distinct !DISubprogram(name: "UART_DMAError", scope: !1989, file: !1989, line: 2649, type: !9818, scopeLine: 2650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9851)
!9851 = !{!9852, !9853, !9854}
!9852 = !DILocalVariable(name: "hdma", arg: 1, scope: !9850, file: !1989, line: 2649, type: !2048)
!9853 = !DILocalVariable(name: "dmarequest", scope: !9850, file: !1989, line: 2651, type: !32)
!9854 = !DILocalVariable(name: "huart", scope: !9850, file: !1989, line: 2652, type: !2014)
!9855 = !DILocation(line: 0, scope: !9850)
!9856 = !DILocation(line: 2652, column: 82, scope: !9850)
!9857 = !DILocation(line: 2655, column: 16, scope: !9850)
!9858 = !DILocation(line: 2656, column: 15, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9850, file: !1989, line: 2656, column: 7)
!9860 = !DILocation(line: 2656, column: 22, scope: !9859)
!9861 = !DILocation(line: 2656, column: 49, scope: !9859)
!9862 = !DILocation(line: 2658, column: 12, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9859, file: !1989, line: 2657, column: 3)
!9864 = !DILocation(line: 2658, column: 24, scope: !9863)
!9865 = !DILocation(line: 2659, column: 5, scope: !9863)
!9866 = !DILocation(line: 2660, column: 3, scope: !9863)
!9867 = !DILocation(line: 2663, column: 16, scope: !9850)
!9868 = !DILocation(line: 2664, column: 15, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9850, file: !1989, line: 2664, column: 7)
!9870 = !DILocation(line: 2664, column: 23, scope: !9869)
!9871 = !DILocation(line: 2664, column: 50, scope: !9869)
!9872 = !DILocation(line: 2666, column: 12, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9869, file: !1989, line: 2665, column: 3)
!9874 = !DILocation(line: 2666, column: 24, scope: !9873)
!9875 = !DILocation(line: 2667, column: 5, scope: !9873)
!9876 = !DILocation(line: 2668, column: 3, scope: !9873)
!9877 = !DILocation(line: 2670, column: 10, scope: !9850)
!9878 = !DILocation(line: 2670, column: 20, scope: !9850)
!9879 = !DILocation(line: 2676, column: 3, scope: !9850)
!9880 = !DILocation(line: 2678, column: 1, scope: !9850)
!9881 = !DISubprogram(name: "HAL_DMA_Start_IT", scope: !755, file: !755, line: 378, type: !9882, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !152)
!9882 = !DISubroutineType(types: !9883)
!9883 = !{!3389, !2048, !32, !32, !32}
!9884 = distinct !DISubprogram(name: "UART_EndTxTransfer", scope: !1989, file: !1989, line: 2722, type: !9313, scopeLine: 2723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9885)
!9885 = !{!9886}
!9886 = !DILocalVariable(name: "huart", arg: 1, scope: !9884, file: !1989, line: 2722, type: !2014)
!9887 = !DILocation(line: 0, scope: !9884)
!9888 = !DILocation(line: 2725, column: 3, scope: !9884)
!9889 = !DILocation(line: 2728, column: 10, scope: !9884)
!9890 = !DILocation(line: 2728, column: 17, scope: !9884)
!9891 = !DILocation(line: 2729, column: 1, scope: !9884)
!9892 = distinct !DISubprogram(name: "UART_EndRxTransfer", scope: !1989, file: !1989, line: 2736, type: !9313, scopeLine: 2737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9893)
!9893 = !{!9894}
!9894 = !DILocalVariable(name: "huart", arg: 1, scope: !9892, file: !1989, line: 2736, type: !2014)
!9895 = !DILocation(line: 0, scope: !9892)
!9896 = !DILocation(line: 2739, column: 3, scope: !9892)
!9897 = !DILocation(line: 2740, column: 3, scope: !9892)
!9898 = !DILocation(line: 2743, column: 10, scope: !9892)
!9899 = !DILocation(line: 2743, column: 18, scope: !9892)
!9900 = !DILocation(line: 2744, column: 1, scope: !9892)
!9901 = distinct !DISubprogram(name: "HAL_UART_ErrorCallback", scope: !1989, file: !1989, line: 2227, type: !9313, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9902)
!9902 = !{!9903}
!9903 = !DILocalVariable(name: "huart", arg: 1, scope: !9901, file: !1989, line: 2227, type: !2014)
!9904 = !DILocation(line: 0, scope: !9901)
!9905 = !DILocation(line: 2234, column: 1, scope: !9901)
!9906 = distinct !DISubprogram(name: "HAL_UART_TxHalfCpltCallback", scope: !1989, file: !1989, line: 2182, type: !9313, scopeLine: 2183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9907)
!9907 = !{!9908}
!9908 = !DILocalVariable(name: "huart", arg: 1, scope: !9906, file: !1989, line: 2182, type: !2014)
!9909 = !DILocation(line: 0, scope: !9906)
!9910 = !DILocation(line: 2189, column: 1, scope: !9906)
!9911 = distinct !DISubprogram(name: "HAL_UART_TxCpltCallback", scope: !1989, file: !1989, line: 2167, type: !9313, scopeLine: 2168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9912)
!9912 = !{!9913}
!9913 = !DILocalVariable(name: "huart", arg: 1, scope: !9911, file: !1989, line: 2167, type: !2014)
!9914 = !DILocation(line: 0, scope: !9911)
!9915 = !DILocation(line: 2174, column: 1, scope: !9911)
!9916 = distinct !DISubprogram(name: "HAL_UART_Receive_DMA", scope: !1989, file: !1989, line: 1367, type: !9685, scopeLine: 1368, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9917)
!9917 = !{!9918, !9919, !9920, !9921, !9922}
!9918 = !DILocalVariable(name: "huart", arg: 1, scope: !9916, file: !1989, line: 1367, type: !2014)
!9919 = !DILocalVariable(name: "pData", arg: 2, scope: !9916, file: !1989, line: 1367, type: !86)
!9920 = !DILocalVariable(name: "Size", arg: 3, scope: !9916, file: !1989, line: 1367, type: !26)
!9921 = !DILocalVariable(name: "tmp", scope: !9916, file: !1989, line: 1369, type: !137)
!9922 = !DILocalVariable(name: "tmpreg", scope: !9923, file: !1989, line: 1405, type: !72)
!9923 = distinct !DILexicalBlock(scope: !9924, file: !1989, line: 1405, column: 5)
!9924 = distinct !DILexicalBlock(scope: !9925, file: !1989, line: 1373, column: 3)
!9925 = distinct !DILexicalBlock(scope: !9916, file: !1989, line: 1372, column: 7)
!9926 = !DILocation(line: 0, scope: !9916)
!9927 = !DILocation(line: 1372, column: 14, scope: !9925)
!9928 = !DILocation(line: 1372, column: 22, scope: !9925)
!9929 = !DILocation(line: 1372, column: 7, scope: !9916)
!9930 = !DILocation(line: 1374, column: 16, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9924, file: !1989, line: 1374, column: 9)
!9932 = !DILocation(line: 1374, column: 25, scope: !9931)
!9933 = !DILocation(line: 1380, column: 5, scope: !9934)
!9934 = distinct !DILexicalBlock(scope: !9935, file: !1989, line: 1380, column: 5)
!9935 = distinct !DILexicalBlock(scope: !9924, file: !1989, line: 1380, column: 5)
!9936 = !DILocation(line: 1380, column: 5, scope: !9935)
!9937 = !DILocation(line: 1380, column: 5, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9934, file: !1989, line: 1380, column: 5)
!9939 = !DILocation(line: 1382, column: 12, scope: !9924)
!9940 = !DILocation(line: 1382, column: 23, scope: !9924)
!9941 = !DILocation(line: 1383, column: 12, scope: !9924)
!9942 = !DILocation(line: 1383, column: 23, scope: !9924)
!9943 = !DILocation(line: 1385, column: 12, scope: !9924)
!9944 = !DILocation(line: 1385, column: 22, scope: !9924)
!9945 = !DILocation(line: 1386, column: 20, scope: !9924)
!9946 = !DILocation(line: 1389, column: 12, scope: !9924)
!9947 = !{!9286, !2496, i64 52}
!9948 = !DILocation(line: 1389, column: 20, scope: !9924)
!9949 = !DILocation(line: 1389, column: 37, scope: !9924)
!9950 = !DILocation(line: 1392, column: 20, scope: !9924)
!9951 = !DILocation(line: 1392, column: 41, scope: !9924)
!9952 = !DILocation(line: 1395, column: 20, scope: !9924)
!9953 = !DILocation(line: 1395, column: 38, scope: !9924)
!9954 = !DILocation(line: 1398, column: 20, scope: !9924)
!9955 = !DILocation(line: 1398, column: 38, scope: !9924)
!9956 = !DILocation(line: 1402, column: 55, scope: !9924)
!9957 = !DILocation(line: 1402, column: 65, scope: !9924)
!9958 = !DILocation(line: 1402, column: 37, scope: !9924)
!9959 = !DILocation(line: 1402, column: 69, scope: !9924)
!9960 = !DILocation(line: 1402, column: 5, scope: !9924)
!9961 = !DILocation(line: 1405, column: 5, scope: !9923)
!9962 = !DILocation(line: 1405, column: 5, scope: !9924)
!9963 = !DILocation(line: 1408, column: 5, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9924, file: !1989, line: 1408, column: 5)
!9965 = !DILocation(line: 1411, column: 5, scope: !9924)
!9966 = !DILocation(line: 1414, column: 5, scope: !9924)
!9967 = !DILocation(line: 1418, column: 5, scope: !9924)
!9968 = !DILocation(line: 1420, column: 5, scope: !9924)
!9969 = !DILocation(line: 0, scope: !9925)
!9970 = !DILocation(line: 1426, column: 1, scope: !9916)
!9971 = distinct !DISubprogram(name: "UART_DMAReceiveCplt", scope: !1989, file: !1989, line: 2596, type: !9818, scopeLine: 2597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9972)
!9972 = !{!9973, !9974}
!9973 = !DILocalVariable(name: "hdma", arg: 1, scope: !9971, file: !1989, line: 2596, type: !2048)
!9974 = !DILocalVariable(name: "huart", scope: !9971, file: !1989, line: 2598, type: !2014)
!9975 = !DILocation(line: 0, scope: !9971)
!9976 = !DILocation(line: 2598, column: 82, scope: !9971)
!9977 = !DILocation(line: 2600, column: 14, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9971, file: !1989, line: 2600, column: 7)
!9979 = !DILocation(line: 2600, column: 24, scope: !9978)
!9980 = !DILocation(line: 2600, column: 28, scope: !9978)
!9981 = !DILocation(line: 2600, column: 44, scope: !9978)
!9982 = !DILocation(line: 2600, column: 7, scope: !9971)
!9983 = !DILocation(line: 2602, column: 12, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9978, file: !1989, line: 2601, column: 3)
!9985 = !DILocation(line: 2602, column: 24, scope: !9984)
!9986 = !DILocation(line: 2605, column: 5, scope: !9984)
!9987 = !DILocation(line: 2606, column: 5, scope: !9984)
!9988 = !DILocation(line: 2610, column: 5, scope: !9984)
!9989 = !DILocation(line: 2613, column: 12, scope: !9984)
!9990 = !DILocation(line: 2613, column: 20, scope: !9984)
!9991 = !DILocation(line: 2614, column: 3, scope: !9984)
!9992 = !DILocation(line: 2620, column: 3, scope: !9971)
!9993 = !DILocation(line: 2622, column: 1, scope: !9971)
!9994 = distinct !DISubprogram(name: "UART_DMARxHalfCplt", scope: !1989, file: !1989, line: 2630, type: !9818, scopeLine: 2631, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !9995)
!9995 = !{!9996, !9997}
!9996 = !DILocalVariable(name: "hdma", arg: 1, scope: !9994, file: !1989, line: 2630, type: !2048)
!9997 = !DILocalVariable(name: "huart", scope: !9994, file: !1989, line: 2632, type: !2014)
!9998 = !DILocation(line: 0, scope: !9994)
!9999 = !DILocation(line: 2632, column: 82, scope: !9994)
!10000 = !DILocation(line: 2639, column: 3, scope: !9994)
!10001 = !DILocation(line: 2641, column: 1, scope: !9994)
!10002 = distinct !DISubprogram(name: "HAL_UART_RxHalfCpltCallback", scope: !1989, file: !1989, line: 2212, type: !9313, scopeLine: 2213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10003)
!10003 = !{!10004}
!10004 = !DILocalVariable(name: "huart", arg: 1, scope: !10002, file: !1989, line: 2212, type: !2014)
!10005 = !DILocation(line: 0, scope: !10002)
!10006 = !DILocation(line: 2219, column: 1, scope: !10002)
!10007 = distinct !DISubprogram(name: "HAL_UART_RxCpltCallback", scope: !1989, file: !1989, line: 2197, type: !9313, scopeLine: 2198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10008)
!10008 = !{!10009}
!10009 = !DILocalVariable(name: "huart", arg: 1, scope: !10007, file: !1989, line: 2197, type: !2014)
!10010 = !DILocation(line: 0, scope: !10007)
!10011 = !DILocation(line: 2204, column: 1, scope: !10007)
!10012 = distinct !DISubprogram(name: "HAL_UART_DMAPause", scope: !1989, file: !1989, line: 1434, type: !9275, scopeLine: 1435, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10013)
!10013 = !{!10014, !10015}
!10014 = !DILocalVariable(name: "huart", arg: 1, scope: !10012, file: !1989, line: 1434, type: !2014)
!10015 = !DILocalVariable(name: "dmarequest", scope: !10012, file: !1989, line: 1436, type: !32)
!10016 = !DILocation(line: 0, scope: !10012)
!10017 = !DILocation(line: 1439, column: 3, scope: !10018)
!10018 = distinct !DILexicalBlock(scope: !10019, file: !1989, line: 1439, column: 3)
!10019 = distinct !DILexicalBlock(scope: !10012, file: !1989, line: 1439, column: 3)
!10020 = !DILocation(line: 1439, column: 3, scope: !10019)
!10021 = !DILocation(line: 1439, column: 3, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !10018, file: !1989, line: 1439, column: 3)
!10023 = !DILocation(line: 1441, column: 16, scope: !10012)
!10024 = !DILocation(line: 1442, column: 15, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10012, file: !1989, line: 1442, column: 7)
!10026 = !DILocation(line: 1442, column: 22, scope: !10025)
!10027 = !DILocation(line: 1442, column: 49, scope: !10025)
!10028 = !DILocation(line: 1445, column: 5, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10025, file: !1989, line: 1443, column: 3)
!10030 = !DILocation(line: 1446, column: 3, scope: !10029)
!10031 = !DILocation(line: 1448, column: 16, scope: !10012)
!10032 = !DILocation(line: 1449, column: 15, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10012, file: !1989, line: 1449, column: 7)
!10034 = !DILocation(line: 1449, column: 23, scope: !10033)
!10035 = !DILocation(line: 1449, column: 50, scope: !10033)
!10036 = !DILocation(line: 1452, column: 5, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10033, file: !1989, line: 1450, column: 3)
!10038 = !DILocation(line: 1453, column: 5, scope: !10037)
!10039 = !DILocation(line: 1456, column: 5, scope: !10037)
!10040 = !DILocation(line: 1457, column: 3, scope: !10037)
!10041 = !DILocation(line: 1460, column: 3, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !10012, file: !1989, line: 1460, column: 3)
!10043 = !DILocation(line: 1462, column: 3, scope: !10012)
!10044 = !DILocation(line: 1463, column: 1, scope: !10012)
!10045 = distinct !DISubprogram(name: "HAL_UART_DMAResume", scope: !1989, file: !1989, line: 1471, type: !9275, scopeLine: 1472, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10046)
!10046 = !{!10047, !10048}
!10047 = !DILocalVariable(name: "huart", arg: 1, scope: !10045, file: !1989, line: 1471, type: !2014)
!10048 = !DILocalVariable(name: "tmpreg", scope: !10049, file: !1989, line: 1485, type: !72)
!10049 = distinct !DILexicalBlock(scope: !10050, file: !1989, line: 1485, column: 5)
!10050 = distinct !DILexicalBlock(scope: !10051, file: !1989, line: 1483, column: 3)
!10051 = distinct !DILexicalBlock(scope: !10045, file: !1989, line: 1482, column: 7)
!10052 = !DILocation(line: 0, scope: !10045)
!10053 = !DILocation(line: 1474, column: 3, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10055, file: !1989, line: 1474, column: 3)
!10055 = distinct !DILexicalBlock(scope: !10045, file: !1989, line: 1474, column: 3)
!10056 = !DILocation(line: 1474, column: 3, scope: !10055)
!10057 = !DILocation(line: 1474, column: 3, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10054, file: !1989, line: 1474, column: 3)
!10059 = !DILocation(line: 1476, column: 14, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !10045, file: !1989, line: 1476, column: 7)
!10061 = !DILocation(line: 1476, column: 21, scope: !10060)
!10062 = !DILocation(line: 1476, column: 7, scope: !10045)
!10063 = !DILocation(line: 1479, column: 5, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10060, file: !1989, line: 1477, column: 3)
!10065 = !DILocation(line: 1480, column: 3, scope: !10064)
!10066 = !DILocation(line: 1482, column: 14, scope: !10051)
!10067 = !DILocation(line: 1482, column: 22, scope: !10051)
!10068 = !DILocation(line: 1482, column: 7, scope: !10045)
!10069 = !DILocation(line: 1485, column: 5, scope: !10049)
!10070 = !DILocation(line: 1485, column: 5, scope: !10050)
!10071 = !DILocation(line: 1488, column: 5, scope: !10050)
!10072 = !DILocation(line: 1489, column: 5, scope: !10050)
!10073 = !DILocation(line: 1492, column: 5, scope: !10050)
!10074 = !DILocation(line: 1493, column: 3, scope: !10050)
!10075 = !DILocation(line: 1496, column: 3, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !10045, file: !1989, line: 1496, column: 3)
!10077 = !DILocation(line: 1498, column: 3, scope: !10045)
!10078 = !DILocation(line: 1499, column: 1, scope: !10045)
!10079 = distinct !DISubprogram(name: "HAL_UART_DMAStop", scope: !1989, file: !1989, line: 1507, type: !9275, scopeLine: 1508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10080)
!10080 = !{!10081, !10082}
!10081 = !DILocalVariable(name: "huart", arg: 1, scope: !10079, file: !1989, line: 1507, type: !2014)
!10082 = !DILocalVariable(name: "dmarequest", scope: !10079, file: !1989, line: 1509, type: !32)
!10083 = !DILocation(line: 0, scope: !10079)
!10084 = !DILocation(line: 1517, column: 16, scope: !10079)
!10085 = !DILocation(line: 1518, column: 15, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10079, file: !1989, line: 1518, column: 7)
!10087 = !DILocation(line: 1518, column: 22, scope: !10086)
!10088 = !DILocation(line: 1518, column: 49, scope: !10086)
!10089 = !DILocation(line: 1520, column: 5, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10086, file: !1989, line: 1519, column: 3)
!10091 = !DILocation(line: 1523, column: 16, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10090, file: !1989, line: 1523, column: 9)
!10093 = !DILocation(line: 1523, column: 23, scope: !10092)
!10094 = !DILocation(line: 1523, column: 9, scope: !10090)
!10095 = !DILocation(line: 1525, column: 7, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !10092, file: !1989, line: 1524, column: 5)
!10097 = !DILocation(line: 1526, column: 5, scope: !10096)
!10098 = !DILocation(line: 1527, column: 5, scope: !10090)
!10099 = !DILocation(line: 1528, column: 3, scope: !10090)
!10100 = !DILocation(line: 1531, column: 16, scope: !10079)
!10101 = !DILocation(line: 1532, column: 15, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10079, file: !1989, line: 1532, column: 7)
!10103 = !DILocation(line: 1532, column: 23, scope: !10102)
!10104 = !DILocation(line: 1532, column: 50, scope: !10102)
!10105 = !DILocation(line: 1534, column: 5, scope: !10106)
!10106 = distinct !DILexicalBlock(scope: !10102, file: !1989, line: 1533, column: 3)
!10107 = !DILocation(line: 1537, column: 16, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10106, file: !1989, line: 1537, column: 9)
!10109 = !DILocation(line: 1537, column: 23, scope: !10108)
!10110 = !DILocation(line: 1537, column: 9, scope: !10106)
!10111 = !DILocation(line: 1539, column: 7, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10108, file: !1989, line: 1538, column: 5)
!10113 = !DILocation(line: 1540, column: 5, scope: !10112)
!10114 = !DILocation(line: 1541, column: 5, scope: !10106)
!10115 = !DILocation(line: 1542, column: 3, scope: !10106)
!10116 = !DILocation(line: 1544, column: 3, scope: !10079)
!10117 = !DISubprogram(name: "HAL_DMA_Abort", scope: !755, file: !755, line: 379, type: !10118, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !152)
!10118 = !DISubroutineType(types: !10119)
!10119 = !{!3389, !2048}
!10120 = distinct !DISubprogram(name: "HAL_UART_Abort", scope: !1989, file: !1989, line: 1559, type: !9275, scopeLine: 1560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10121)
!10121 = !{!10122}
!10122 = !DILocalVariable(name: "huart", arg: 1, scope: !10120, file: !1989, line: 1559, type: !2014)
!10123 = !DILocation(line: 0, scope: !10120)
!10124 = !DILocation(line: 1562, column: 3, scope: !10120)
!10125 = !DILocation(line: 1563, column: 3, scope: !10120)
!10126 = !DILocation(line: 1566, column: 7, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !10120, file: !1989, line: 1566, column: 7)
!10128 = !DILocation(line: 1566, column: 7, scope: !10120)
!10129 = !DILocation(line: 1568, column: 5, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10127, file: !1989, line: 1567, column: 3)
!10131 = !DILocation(line: 1571, column: 16, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10130, file: !1989, line: 1571, column: 9)
!10133 = !DILocation(line: 1571, column: 23, scope: !10132)
!10134 = !DILocation(line: 1571, column: 9, scope: !10130)
!10135 = !DILocation(line: 1575, column: 22, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10132, file: !1989, line: 1572, column: 5)
!10137 = !DILocation(line: 1575, column: 40, scope: !10136)
!10138 = !DILocation(line: 1577, column: 11, scope: !10139)
!10139 = distinct !DILexicalBlock(scope: !10136, file: !1989, line: 1577, column: 11)
!10140 = !DILocation(line: 1577, column: 40, scope: !10139)
!10141 = !DILocation(line: 1577, column: 11, scope: !10136)
!10142 = !DILocation(line: 1579, column: 37, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10144, file: !1989, line: 1579, column: 13)
!10144 = distinct !DILexicalBlock(scope: !10139, file: !1989, line: 1578, column: 7)
!10145 = !DILocation(line: 1579, column: 13, scope: !10143)
!10146 = !DILocation(line: 1579, column: 45, scope: !10143)
!10147 = !DILocation(line: 1579, column: 13, scope: !10144)
!10148 = !DILocation(line: 1582, column: 18, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10143, file: !1989, line: 1580, column: 9)
!10150 = !DILocation(line: 1582, column: 28, scope: !10149)
!10151 = !DILocation(line: 1584, column: 11, scope: !10149)
!10152 = !DILocation(line: 1591, column: 7, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10120, file: !1989, line: 1591, column: 7)
!10154 = !DILocation(line: 1591, column: 7, scope: !10120)
!10155 = !DILocation(line: 1593, column: 5, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !10153, file: !1989, line: 1592, column: 3)
!10157 = !DILocation(line: 1596, column: 16, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10156, file: !1989, line: 1596, column: 9)
!10159 = !DILocation(line: 1596, column: 23, scope: !10158)
!10160 = !DILocation(line: 1596, column: 9, scope: !10156)
!10161 = !DILocation(line: 1600, column: 22, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10158, file: !1989, line: 1597, column: 5)
!10163 = !DILocation(line: 1600, column: 40, scope: !10162)
!10164 = !DILocation(line: 1602, column: 11, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10162, file: !1989, line: 1602, column: 11)
!10166 = !DILocation(line: 1602, column: 40, scope: !10165)
!10167 = !DILocation(line: 1602, column: 11, scope: !10162)
!10168 = !DILocation(line: 1604, column: 37, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10170, file: !1989, line: 1604, column: 13)
!10170 = distinct !DILexicalBlock(scope: !10165, file: !1989, line: 1603, column: 7)
!10171 = !DILocation(line: 1604, column: 13, scope: !10169)
!10172 = !DILocation(line: 1604, column: 45, scope: !10169)
!10173 = !DILocation(line: 1604, column: 13, scope: !10170)
!10174 = !DILocation(line: 1607, column: 18, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !10169, file: !1989, line: 1605, column: 9)
!10176 = !DILocation(line: 1607, column: 28, scope: !10175)
!10177 = !DILocation(line: 1609, column: 11, scope: !10175)
!10178 = !DILocation(line: 1616, column: 10, scope: !10120)
!10179 = !DILocation(line: 1616, column: 22, scope: !10120)
!10180 = !DILocation(line: 1617, column: 10, scope: !10120)
!10181 = !DILocation(line: 1617, column: 22, scope: !10120)
!10182 = !DILocation(line: 1620, column: 10, scope: !10120)
!10183 = !DILocation(line: 1620, column: 20, scope: !10120)
!10184 = !DILocation(line: 1623, column: 10, scope: !10120)
!10185 = !DILocation(line: 1623, column: 18, scope: !10120)
!10186 = !DILocation(line: 1624, column: 10, scope: !10120)
!10187 = !DILocation(line: 1624, column: 17, scope: !10120)
!10188 = !DILocation(line: 1626, column: 3, scope: !10120)
!10189 = !DILocation(line: 1627, column: 1, scope: !10120)
!10190 = !DISubprogram(name: "HAL_DMA_GetError", scope: !755, file: !755, line: 395, type: !10191, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !152)
!10191 = !DISubroutineType(types: !10192)
!10192 = !{!32, !2048}
!10193 = distinct !DISubprogram(name: "HAL_UART_AbortTransmit", scope: !1989, file: !1989, line: 1641, type: !9275, scopeLine: 1642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10194)
!10194 = !{!10195}
!10195 = !DILocalVariable(name: "huart", arg: 1, scope: !10193, file: !1989, line: 1641, type: !2014)
!10196 = !DILocation(line: 0, scope: !10193)
!10197 = !DILocation(line: 1644, column: 3, scope: !10193)
!10198 = !DILocation(line: 1647, column: 7, scope: !10199)
!10199 = distinct !DILexicalBlock(scope: !10193, file: !1989, line: 1647, column: 7)
!10200 = !DILocation(line: 1647, column: 7, scope: !10193)
!10201 = !DILocation(line: 1649, column: 5, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10199, file: !1989, line: 1648, column: 3)
!10203 = !DILocation(line: 1652, column: 16, scope: !10204)
!10204 = distinct !DILexicalBlock(scope: !10202, file: !1989, line: 1652, column: 9)
!10205 = !DILocation(line: 1652, column: 23, scope: !10204)
!10206 = !DILocation(line: 1652, column: 9, scope: !10202)
!10207 = !DILocation(line: 1656, column: 22, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !10204, file: !1989, line: 1653, column: 5)
!10209 = !DILocation(line: 1656, column: 40, scope: !10208)
!10210 = !DILocation(line: 1658, column: 11, scope: !10211)
!10211 = distinct !DILexicalBlock(scope: !10208, file: !1989, line: 1658, column: 11)
!10212 = !DILocation(line: 1658, column: 40, scope: !10211)
!10213 = !DILocation(line: 1658, column: 11, scope: !10208)
!10214 = !DILocation(line: 1660, column: 37, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10216, file: !1989, line: 1660, column: 13)
!10216 = distinct !DILexicalBlock(scope: !10211, file: !1989, line: 1659, column: 7)
!10217 = !DILocation(line: 1660, column: 13, scope: !10215)
!10218 = !DILocation(line: 1660, column: 45, scope: !10215)
!10219 = !DILocation(line: 1660, column: 13, scope: !10216)
!10220 = !DILocation(line: 1663, column: 18, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10215, file: !1989, line: 1661, column: 9)
!10222 = !DILocation(line: 1663, column: 28, scope: !10221)
!10223 = !DILocation(line: 1665, column: 11, scope: !10221)
!10224 = !DILocation(line: 1672, column: 10, scope: !10193)
!10225 = !DILocation(line: 1672, column: 22, scope: !10193)
!10226 = !DILocation(line: 1675, column: 10, scope: !10193)
!10227 = !DILocation(line: 1675, column: 17, scope: !10193)
!10228 = !DILocation(line: 1677, column: 3, scope: !10193)
!10229 = !DILocation(line: 1678, column: 1, scope: !10193)
!10230 = distinct !DISubprogram(name: "HAL_UART_AbortReceive", scope: !1989, file: !1989, line: 1692, type: !9275, scopeLine: 1693, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10231)
!10231 = !{!10232}
!10232 = !DILocalVariable(name: "huart", arg: 1, scope: !10230, file: !1989, line: 1692, type: !2014)
!10233 = !DILocation(line: 0, scope: !10230)
!10234 = !DILocation(line: 1695, column: 3, scope: !10230)
!10235 = !DILocation(line: 1696, column: 3, scope: !10230)
!10236 = !DILocation(line: 1699, column: 7, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !10230, file: !1989, line: 1699, column: 7)
!10238 = !DILocation(line: 1699, column: 7, scope: !10230)
!10239 = !DILocation(line: 1701, column: 5, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10237, file: !1989, line: 1700, column: 3)
!10241 = !DILocation(line: 1704, column: 16, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10240, file: !1989, line: 1704, column: 9)
!10243 = !DILocation(line: 1704, column: 23, scope: !10242)
!10244 = !DILocation(line: 1704, column: 9, scope: !10240)
!10245 = !DILocation(line: 1708, column: 22, scope: !10246)
!10246 = distinct !DILexicalBlock(scope: !10242, file: !1989, line: 1705, column: 5)
!10247 = !DILocation(line: 1708, column: 40, scope: !10246)
!10248 = !DILocation(line: 1710, column: 11, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10246, file: !1989, line: 1710, column: 11)
!10250 = !DILocation(line: 1710, column: 40, scope: !10249)
!10251 = !DILocation(line: 1710, column: 11, scope: !10246)
!10252 = !DILocation(line: 1712, column: 37, scope: !10253)
!10253 = distinct !DILexicalBlock(scope: !10254, file: !1989, line: 1712, column: 13)
!10254 = distinct !DILexicalBlock(scope: !10249, file: !1989, line: 1711, column: 7)
!10255 = !DILocation(line: 1712, column: 13, scope: !10253)
!10256 = !DILocation(line: 1712, column: 45, scope: !10253)
!10257 = !DILocation(line: 1712, column: 13, scope: !10254)
!10258 = !DILocation(line: 1715, column: 18, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10253, file: !1989, line: 1713, column: 9)
!10260 = !DILocation(line: 1715, column: 28, scope: !10259)
!10261 = !DILocation(line: 1717, column: 11, scope: !10259)
!10262 = !DILocation(line: 1724, column: 10, scope: !10230)
!10263 = !DILocation(line: 1724, column: 22, scope: !10230)
!10264 = !DILocation(line: 1727, column: 10, scope: !10230)
!10265 = !DILocation(line: 1727, column: 18, scope: !10230)
!10266 = !DILocation(line: 1729, column: 3, scope: !10230)
!10267 = !DILocation(line: 1730, column: 1, scope: !10230)
!10268 = distinct !DISubprogram(name: "HAL_UART_Abort_IT", scope: !1989, file: !1989, line: 1746, type: !9275, scopeLine: 1747, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10269)
!10269 = !{!10270, !10271}
!10270 = !DILocalVariable(name: "huart", arg: 1, scope: !10268, file: !1989, line: 1746, type: !2014)
!10271 = !DILocalVariable(name: "AbortCplt", scope: !10268, file: !1989, line: 1748, type: !32)
!10272 = !DILocation(line: 0, scope: !10268)
!10273 = !DILocation(line: 1751, column: 3, scope: !10268)
!10274 = !DILocation(line: 1752, column: 3, scope: !10268)
!10275 = !DILocation(line: 1757, column: 14, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10268, file: !1989, line: 1757, column: 7)
!10277 = !DILocation(line: 1757, column: 21, scope: !10276)
!10278 = !DILocation(line: 1757, column: 7, scope: !10268)
!10279 = !DILocation(line: 1761, column: 9, scope: !10280)
!10280 = distinct !DILexicalBlock(scope: !10281, file: !1989, line: 1761, column: 9)
!10281 = distinct !DILexicalBlock(scope: !10276, file: !1989, line: 1758, column: 3)
!10282 = !DILocation(line: 0, scope: !10280)
!10283 = !DILocation(line: 1771, column: 14, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10268, file: !1989, line: 1771, column: 7)
!10285 = !DILocation(line: 1771, column: 21, scope: !10284)
!10286 = !DILocation(line: 1771, column: 7, scope: !10268)
!10287 = !DILocation(line: 1775, column: 9, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !10289, file: !1989, line: 1775, column: 9)
!10289 = distinct !DILexicalBlock(scope: !10284, file: !1989, line: 1772, column: 3)
!10290 = !DILocation(line: 0, scope: !10288)
!10291 = !DILocation(line: 1786, column: 7, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10268, file: !1989, line: 1786, column: 7)
!10293 = !DILocation(line: 1786, column: 7, scope: !10268)
!10294 = !DILocation(line: 1789, column: 5, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10292, file: !1989, line: 1787, column: 3)
!10296 = !DILocation(line: 1792, column: 9, scope: !10295)
!10297 = !DILocation(line: 1798, column: 11, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10299, file: !1989, line: 1798, column: 11)
!10299 = distinct !DILexicalBlock(scope: !10300, file: !1989, line: 1793, column: 5)
!10300 = distinct !DILexicalBlock(scope: !10295, file: !1989, line: 1792, column: 9)
!10301 = !DILocation(line: 1798, column: 43, scope: !10298)
!10302 = !DILocation(line: 1798, column: 11, scope: !10299)
!10303 = !DILocation(line: 1800, column: 16, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10298, file: !1989, line: 1799, column: 7)
!10305 = !DILocation(line: 1800, column: 24, scope: !10304)
!10306 = !DILocation(line: 1800, column: 42, scope: !10304)
!10307 = !DILocation(line: 1801, column: 7, scope: !10304)
!10308 = !DILocation(line: 1810, column: 7, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10268, file: !1989, line: 1810, column: 7)
!10310 = !DILocation(line: 1810, column: 7, scope: !10268)
!10311 = !DILocation(line: 1812, column: 5, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10309, file: !1989, line: 1811, column: 3)
!10313 = !DILocation(line: 1815, column: 16, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !10312, file: !1989, line: 1815, column: 9)
!10315 = !DILocation(line: 1815, column: 23, scope: !10314)
!10316 = !DILocation(line: 1815, column: 9, scope: !10312)
!10317 = !DILocation(line: 1821, column: 11, scope: !10318)
!10318 = distinct !DILexicalBlock(scope: !10319, file: !1989, line: 1821, column: 11)
!10319 = distinct !DILexicalBlock(scope: !10314, file: !1989, line: 1816, column: 5)
!10320 = !DILocation(line: 1821, column: 43, scope: !10318)
!10321 = !DILocation(line: 1821, column: 11, scope: !10319)
!10322 = !DILocation(line: 1823, column: 16, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !10318, file: !1989, line: 1822, column: 7)
!10324 = !DILocation(line: 1823, column: 24, scope: !10323)
!10325 = !DILocation(line: 1823, column: 42, scope: !10323)
!10326 = !DILocation(line: 1825, column: 7, scope: !10323)
!10327 = !DILocation(line: 1834, column: 17, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10268, file: !1989, line: 1834, column: 7)
!10329 = !DILocation(line: 1834, column: 7, scope: !10268)
!10330 = !DILocation(line: 1837, column: 12, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10328, file: !1989, line: 1835, column: 3)
!10332 = !DILocation(line: 1837, column: 24, scope: !10331)
!10333 = !DILocation(line: 1838, column: 12, scope: !10331)
!10334 = !DILocation(line: 1838, column: 24, scope: !10331)
!10335 = !DILocation(line: 1841, column: 12, scope: !10331)
!10336 = !DILocation(line: 1841, column: 22, scope: !10331)
!10337 = !DILocation(line: 1844, column: 12, scope: !10331)
!10338 = !DILocation(line: 1844, column: 20, scope: !10331)
!10339 = !DILocation(line: 1845, column: 12, scope: !10331)
!10340 = !DILocation(line: 1845, column: 20, scope: !10331)
!10341 = !DILocation(line: 1853, column: 5, scope: !10331)
!10342 = !DILocation(line: 1855, column: 3, scope: !10331)
!10343 = !DILocation(line: 1857, column: 3, scope: !10268)
!10344 = distinct !DISubprogram(name: "UART_DMATxAbortCallback", scope: !1989, file: !1989, line: 2777, type: !9818, scopeLine: 2778, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10345)
!10345 = !{!10346, !10347}
!10346 = !DILocalVariable(name: "hdma", arg: 1, scope: !10344, file: !1989, line: 2777, type: !2048)
!10347 = !DILocalVariable(name: "huart", scope: !10344, file: !1989, line: 2779, type: !2014)
!10348 = !DILocation(line: 0, scope: !10344)
!10349 = !DILocation(line: 2779, column: 82, scope: !10344)
!10350 = !DILocation(line: 2781, column: 10, scope: !10344)
!10351 = !DILocation(line: 2781, column: 18, scope: !10344)
!10352 = !DILocation(line: 2781, column: 36, scope: !10344)
!10353 = !DILocation(line: 2784, column: 14, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10344, file: !1989, line: 2784, column: 7)
!10355 = !DILocation(line: 2784, column: 21, scope: !10354)
!10356 = !DILocation(line: 2784, column: 7, scope: !10344)
!10357 = !DILocation(line: 2786, column: 24, scope: !10358)
!10358 = distinct !DILexicalBlock(scope: !10359, file: !1989, line: 2786, column: 9)
!10359 = distinct !DILexicalBlock(scope: !10354, file: !1989, line: 2785, column: 3)
!10360 = !DILocation(line: 2786, column: 42, scope: !10358)
!10361 = !DILocation(line: 2786, column: 9, scope: !10359)
!10362 = !DILocation(line: 2793, column: 10, scope: !10344)
!10363 = !DILocation(line: 2793, column: 22, scope: !10344)
!10364 = !DILocation(line: 2794, column: 10, scope: !10344)
!10365 = !DILocation(line: 2794, column: 22, scope: !10344)
!10366 = !DILocation(line: 2797, column: 10, scope: !10344)
!10367 = !DILocation(line: 2797, column: 20, scope: !10344)
!10368 = !DILocation(line: 2800, column: 10, scope: !10344)
!10369 = !DILocation(line: 2800, column: 18, scope: !10344)
!10370 = !DILocation(line: 2801, column: 10, scope: !10344)
!10371 = !DILocation(line: 2801, column: 18, scope: !10344)
!10372 = !DILocation(line: 2809, column: 3, scope: !10344)
!10373 = !DILocation(line: 2811, column: 1, scope: !10344)
!10374 = distinct !DISubprogram(name: "UART_DMARxAbortCallback", scope: !1989, file: !1989, line: 2822, type: !9818, scopeLine: 2823, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10375)
!10375 = !{!10376, !10377}
!10376 = !DILocalVariable(name: "hdma", arg: 1, scope: !10374, file: !1989, line: 2822, type: !2048)
!10377 = !DILocalVariable(name: "huart", scope: !10374, file: !1989, line: 2824, type: !2014)
!10378 = !DILocation(line: 0, scope: !10374)
!10379 = !DILocation(line: 2824, column: 82, scope: !10374)
!10380 = !DILocation(line: 2826, column: 10, scope: !10374)
!10381 = !DILocation(line: 2826, column: 18, scope: !10374)
!10382 = !DILocation(line: 2826, column: 36, scope: !10374)
!10383 = !DILocation(line: 2829, column: 14, scope: !10384)
!10384 = distinct !DILexicalBlock(scope: !10374, file: !1989, line: 2829, column: 7)
!10385 = !DILocation(line: 2829, column: 21, scope: !10384)
!10386 = !DILocation(line: 2829, column: 7, scope: !10374)
!10387 = !DILocation(line: 2831, column: 24, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10389, file: !1989, line: 2831, column: 9)
!10389 = distinct !DILexicalBlock(scope: !10384, file: !1989, line: 2830, column: 3)
!10390 = !DILocation(line: 2831, column: 42, scope: !10388)
!10391 = !DILocation(line: 2831, column: 9, scope: !10389)
!10392 = !DILocation(line: 2838, column: 10, scope: !10374)
!10393 = !DILocation(line: 2838, column: 22, scope: !10374)
!10394 = !DILocation(line: 2839, column: 10, scope: !10374)
!10395 = !DILocation(line: 2839, column: 22, scope: !10374)
!10396 = !DILocation(line: 2842, column: 10, scope: !10374)
!10397 = !DILocation(line: 2842, column: 20, scope: !10374)
!10398 = !DILocation(line: 2845, column: 10, scope: !10374)
!10399 = !DILocation(line: 2845, column: 18, scope: !10374)
!10400 = !DILocation(line: 2846, column: 10, scope: !10374)
!10401 = !DILocation(line: 2846, column: 18, scope: !10374)
!10402 = !DILocation(line: 2854, column: 3, scope: !10374)
!10403 = !DILocation(line: 2856, column: 1, scope: !10374)
!10404 = !DISubprogram(name: "HAL_DMA_Abort_IT", scope: !755, file: !755, line: 380, type: !10118, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !152)
!10405 = distinct !DISubprogram(name: "HAL_UART_AbortCpltCallback", scope: !1989, file: !1989, line: 2241, type: !9313, scopeLine: 2242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10406)
!10406 = !{!10407}
!10407 = !DILocalVariable(name: "huart", arg: 1, scope: !10405, file: !1989, line: 2241, type: !2014)
!10408 = !DILocation(line: 0, scope: !10405)
!10409 = !DILocation(line: 2249, column: 1, scope: !10405)
!10410 = distinct !DISubprogram(name: "HAL_UART_AbortTransmit_IT", scope: !1989, file: !1989, line: 1874, type: !9275, scopeLine: 1875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10411)
!10411 = !{!10412}
!10412 = !DILocalVariable(name: "huart", arg: 1, scope: !10410, file: !1989, line: 1874, type: !2014)
!10413 = !DILocation(line: 0, scope: !10410)
!10414 = !DILocation(line: 1877, column: 3, scope: !10410)
!10415 = !DILocation(line: 1880, column: 7, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10410, file: !1989, line: 1880, column: 7)
!10417 = !DILocation(line: 1880, column: 7, scope: !10410)
!10418 = !DILocation(line: 1882, column: 5, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10416, file: !1989, line: 1881, column: 3)
!10420 = !DILocation(line: 1885, column: 16, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10419, file: !1989, line: 1885, column: 9)
!10422 = !DILocation(line: 1885, column: 23, scope: !10421)
!10423 = !DILocation(line: 1885, column: 9, scope: !10419)
!10424 = !DILocation(line: 1889, column: 22, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10421, file: !1989, line: 1886, column: 5)
!10426 = !DILocation(line: 1889, column: 40, scope: !10425)
!10427 = !DILocation(line: 1892, column: 11, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !10425, file: !1989, line: 1892, column: 11)
!10429 = !DILocation(line: 1892, column: 43, scope: !10428)
!10430 = !DILocation(line: 1892, column: 11, scope: !10425)
!10431 = !DILocation(line: 1895, column: 16, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10428, file: !1989, line: 1893, column: 7)
!10433 = !DILocation(line: 1895, column: 24, scope: !10432)
!10434 = !DILocation(line: 1895, column: 9, scope: !10432)
!10435 = !DILocation(line: 1896, column: 7, scope: !10432)
!10436 = !DILocation(line: 1901, column: 14, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10421, file: !1989, line: 1899, column: 5)
!10438 = !DILocation(line: 1901, column: 26, scope: !10437)
!10439 = !DILocation(line: 1904, column: 14, scope: !10437)
!10440 = !DILocation(line: 1904, column: 21, scope: !10437)
!10441 = !DILocation(line: 1912, column: 7, scope: !10437)
!10442 = !DILocation(line: 1919, column: 12, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10416, file: !1989, line: 1917, column: 3)
!10444 = !DILocation(line: 1919, column: 24, scope: !10443)
!10445 = !DILocation(line: 1922, column: 12, scope: !10443)
!10446 = !DILocation(line: 1922, column: 19, scope: !10443)
!10447 = !DILocation(line: 1930, column: 5, scope: !10443)
!10448 = !DILocation(line: 1934, column: 3, scope: !10410)
!10449 = distinct !DISubprogram(name: "UART_DMATxOnlyAbortCallback", scope: !1989, file: !1989, line: 2867, type: !9818, scopeLine: 2868, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10450)
!10450 = !{!10451, !10452}
!10451 = !DILocalVariable(name: "hdma", arg: 1, scope: !10449, file: !1989, line: 2867, type: !2048)
!10452 = !DILocalVariable(name: "huart", scope: !10449, file: !1989, line: 2869, type: !2014)
!10453 = !DILocation(line: 0, scope: !10449)
!10454 = !DILocation(line: 2869, column: 82, scope: !10449)
!10455 = !DILocation(line: 2871, column: 10, scope: !10449)
!10456 = !DILocation(line: 2871, column: 22, scope: !10449)
!10457 = !DILocation(line: 2874, column: 10, scope: !10449)
!10458 = !DILocation(line: 2874, column: 17, scope: !10449)
!10459 = !DILocation(line: 2882, column: 3, scope: !10449)
!10460 = !DILocation(line: 2884, column: 1, scope: !10449)
!10461 = distinct !DISubprogram(name: "HAL_UART_AbortTransmitCpltCallback", scope: !1989, file: !1989, line: 2256, type: !9313, scopeLine: 2257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10462)
!10462 = !{!10463}
!10463 = !DILocalVariable(name: "huart", arg: 1, scope: !10461, file: !1989, line: 2256, type: !2014)
!10464 = !DILocation(line: 0, scope: !10461)
!10465 = !DILocation(line: 2264, column: 1, scope: !10461)
!10466 = distinct !DISubprogram(name: "HAL_UART_AbortReceive_IT", scope: !1989, file: !1989, line: 1951, type: !9275, scopeLine: 1952, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10467)
!10467 = !{!10468}
!10468 = !DILocalVariable(name: "huart", arg: 1, scope: !10466, file: !1989, line: 1951, type: !2014)
!10469 = !DILocation(line: 0, scope: !10466)
!10470 = !DILocation(line: 1954, column: 3, scope: !10466)
!10471 = !DILocation(line: 1955, column: 3, scope: !10466)
!10472 = !DILocation(line: 1958, column: 7, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10466, file: !1989, line: 1958, column: 7)
!10474 = !DILocation(line: 1958, column: 7, scope: !10466)
!10475 = !DILocation(line: 1960, column: 5, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10473, file: !1989, line: 1959, column: 3)
!10477 = !DILocation(line: 1963, column: 16, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10476, file: !1989, line: 1963, column: 9)
!10479 = !DILocation(line: 1963, column: 23, scope: !10478)
!10480 = !DILocation(line: 1963, column: 9, scope: !10476)
!10481 = !DILocation(line: 1967, column: 22, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10478, file: !1989, line: 1964, column: 5)
!10483 = !DILocation(line: 1967, column: 40, scope: !10482)
!10484 = !DILocation(line: 1970, column: 11, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10482, file: !1989, line: 1970, column: 11)
!10486 = !DILocation(line: 1970, column: 43, scope: !10485)
!10487 = !DILocation(line: 1970, column: 11, scope: !10482)
!10488 = !DILocation(line: 1973, column: 16, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10485, file: !1989, line: 1971, column: 7)
!10490 = !DILocation(line: 1973, column: 24, scope: !10489)
!10491 = !DILocation(line: 1973, column: 9, scope: !10489)
!10492 = !DILocation(line: 1974, column: 7, scope: !10489)
!10493 = !DILocation(line: 1979, column: 14, scope: !10494)
!10494 = distinct !DILexicalBlock(scope: !10478, file: !1989, line: 1977, column: 5)
!10495 = !DILocation(line: 1979, column: 26, scope: !10494)
!10496 = !DILocation(line: 1982, column: 14, scope: !10494)
!10497 = !DILocation(line: 1982, column: 22, scope: !10494)
!10498 = !DILocation(line: 1990, column: 7, scope: !10494)
!10499 = !DILocation(line: 1997, column: 12, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !10473, file: !1989, line: 1995, column: 3)
!10501 = !DILocation(line: 1997, column: 24, scope: !10500)
!10502 = !DILocation(line: 2000, column: 12, scope: !10500)
!10503 = !DILocation(line: 2000, column: 20, scope: !10500)
!10504 = !DILocation(line: 2008, column: 5, scope: !10500)
!10505 = !DILocation(line: 2012, column: 3, scope: !10466)
!10506 = distinct !DISubprogram(name: "UART_DMARxOnlyAbortCallback", scope: !1989, file: !1989, line: 2895, type: !9818, scopeLine: 2896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10507)
!10507 = !{!10508, !10509}
!10508 = !DILocalVariable(name: "hdma", arg: 1, scope: !10506, file: !1989, line: 2895, type: !2048)
!10509 = !DILocalVariable(name: "huart", scope: !10506, file: !1989, line: 2897, type: !2014)
!10510 = !DILocation(line: 0, scope: !10506)
!10511 = !DILocation(line: 2897, column: 82, scope: !10506)
!10512 = !DILocation(line: 2899, column: 10, scope: !10506)
!10513 = !DILocation(line: 2899, column: 22, scope: !10506)
!10514 = !DILocation(line: 2902, column: 10, scope: !10506)
!10515 = !DILocation(line: 2902, column: 18, scope: !10506)
!10516 = !DILocation(line: 2910, column: 3, scope: !10506)
!10517 = !DILocation(line: 2912, column: 1, scope: !10506)
!10518 = distinct !DISubprogram(name: "HAL_UART_AbortReceiveCpltCallback", scope: !1989, file: !1989, line: 2271, type: !9313, scopeLine: 2272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10519)
!10519 = !{!10520}
!10520 = !DILocalVariable(name: "huart", arg: 1, scope: !10518, file: !1989, line: 2271, type: !2014)
!10521 = !DILocation(line: 0, scope: !10518)
!10522 = !DILocation(line: 2279, column: 1, scope: !10518)
!10523 = distinct !DISubprogram(name: "HAL_UART_IRQHandler", scope: !1989, file: !1989, line: 2021, type: !9313, scopeLine: 2022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10524)
!10524 = !{!10525, !10526, !10527, !10528, !10529, !10530}
!10525 = !DILocalVariable(name: "huart", arg: 1, scope: !10523, file: !1989, line: 2021, type: !2014)
!10526 = !DILocalVariable(name: "isrflags", scope: !10523, file: !1989, line: 2023, type: !32)
!10527 = !DILocalVariable(name: "cr1its", scope: !10523, file: !1989, line: 2024, type: !32)
!10528 = !DILocalVariable(name: "cr3its", scope: !10523, file: !1989, line: 2025, type: !32)
!10529 = !DILocalVariable(name: "errorflags", scope: !10523, file: !1989, line: 2026, type: !32)
!10530 = !DILocalVariable(name: "dmarequest", scope: !10523, file: !1989, line: 2027, type: !32)
!10531 = !DILocation(line: 0, scope: !10523)
!10532 = !DILocation(line: 2023, column: 25, scope: !10523)
!10533 = !DILocation(line: 2024, column: 25, scope: !10523)
!10534 = !DILocation(line: 2025, column: 25, scope: !10523)
!10535 = !DILocation(line: 2031, column: 7, scope: !10523)
!10536 = !DILocation(line: 2036, column: 7, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10538, file: !1989, line: 2035, column: 5)
!10538 = distinct !DILexicalBlock(scope: !10539, file: !1989, line: 2034, column: 9)
!10539 = distinct !DILexicalBlock(scope: !10540, file: !1989, line: 2032, column: 3)
!10540 = distinct !DILexicalBlock(scope: !10523, file: !1989, line: 2031, column: 7)
!10541 = !DILocation(line: 2037, column: 7, scope: !10537)
!10542 = !DILocation(line: 2030, column: 26, scope: !10523)
!10543 = !DILocation(line: 2042, column: 19, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !10523, file: !1989, line: 2042, column: 7)
!10545 = !DILocation(line: 2042, column: 29, scope: !10544)
!10546 = !DILocation(line: 2042, column: 42, scope: !10544)
!10547 = !DILocation(line: 2042, column: 59, scope: !10544)
!10548 = !DILocation(line: 2042, column: 69, scope: !10544)
!10549 = !DILocation(line: 2045, column: 20, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10551, file: !1989, line: 2045, column: 9)
!10551 = distinct !DILexicalBlock(scope: !10544, file: !1989, line: 2043, column: 3)
!10552 = !DILocation(line: 2045, column: 35, scope: !10550)
!10553 = !DILocation(line: 2045, column: 45, scope: !10550)
!10554 = !DILocation(line: 2047, column: 14, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10550, file: !1989, line: 2046, column: 5)
!10556 = !DILocation(line: 2047, column: 24, scope: !10555)
!10557 = !DILocation(line: 2048, column: 5, scope: !10555)
!10558 = !DILocation(line: 2051, column: 20, scope: !10559)
!10559 = distinct !DILexicalBlock(scope: !10551, file: !1989, line: 2051, column: 9)
!10560 = !DILocation(line: 2051, column: 35, scope: !10559)
!10561 = !DILocation(line: 2051, column: 45, scope: !10559)
!10562 = !DILocation(line: 2053, column: 14, scope: !10563)
!10563 = distinct !DILexicalBlock(scope: !10559, file: !1989, line: 2052, column: 5)
!10564 = !DILocation(line: 2053, column: 24, scope: !10563)
!10565 = !DILocation(line: 2054, column: 5, scope: !10563)
!10566 = !DILocation(line: 2057, column: 20, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10551, file: !1989, line: 2057, column: 9)
!10568 = !DILocation(line: 2057, column: 35, scope: !10567)
!10569 = !DILocation(line: 2057, column: 45, scope: !10567)
!10570 = !DILocation(line: 2059, column: 14, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10567, file: !1989, line: 2058, column: 5)
!10572 = !DILocation(line: 2059, column: 24, scope: !10571)
!10573 = !DILocation(line: 2060, column: 5, scope: !10571)
!10574 = !DILocation(line: 2063, column: 20, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10551, file: !1989, line: 2063, column: 9)
!10576 = !DILocation(line: 2063, column: 36, scope: !10575)
!10577 = !DILocation(line: 2063, column: 46, scope: !10575)
!10578 = !DILocation(line: 2065, column: 14, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10575, file: !1989, line: 2064, column: 5)
!10580 = !DILocation(line: 2065, column: 24, scope: !10579)
!10581 = !DILocation(line: 2066, column: 5, scope: !10579)
!10582 = !DILocation(line: 2069, column: 16, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10551, file: !1989, line: 2069, column: 9)
!10584 = !DILocation(line: 2069, column: 26, scope: !10583)
!10585 = !DILocation(line: 2069, column: 9, scope: !10551)
!10586 = !DILocation(line: 2072, column: 49, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !10588, file: !1989, line: 2072, column: 11)
!10588 = distinct !DILexicalBlock(scope: !10583, file: !1989, line: 2070, column: 5)
!10589 = !DILocation(line: 2074, column: 9, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10587, file: !1989, line: 2073, column: 7)
!10591 = !DILocation(line: 2075, column: 7, scope: !10590)
!10592 = !DILocation(line: 2079, column: 20, scope: !10588)
!10593 = !DILocation(line: 2080, column: 20, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10588, file: !1989, line: 2080, column: 11)
!10595 = !DILocation(line: 2080, column: 30, scope: !10594)
!10596 = !DILocation(line: 2080, column: 52, scope: !10594)
!10597 = !DILocation(line: 2080, column: 62, scope: !10594)
!10598 = !DILocation(line: 2085, column: 9, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10594, file: !1989, line: 2081, column: 7)
!10600 = !DILocation(line: 2088, column: 13, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10599, file: !1989, line: 2088, column: 13)
!10602 = !DILocation(line: 2088, column: 13, scope: !10599)
!10603 = !DILocation(line: 2090, column: 11, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10601, file: !1989, line: 2089, column: 9)
!10605 = !DILocation(line: 2093, column: 22, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !10604, file: !1989, line: 2093, column: 15)
!10607 = !DILocation(line: 2093, column: 29, scope: !10606)
!10608 = !DILocation(line: 2093, column: 15, scope: !10604)
!10609 = !DILocation(line: 2097, column: 28, scope: !10610)
!10610 = distinct !DILexicalBlock(scope: !10606, file: !1989, line: 2094, column: 11)
!10611 = !DILocation(line: 2097, column: 46, scope: !10610)
!10612 = !DILocation(line: 2098, column: 17, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !10610, file: !1989, line: 2098, column: 17)
!10614 = !DILocation(line: 2098, column: 49, scope: !10613)
!10615 = !DILocation(line: 2098, column: 17, scope: !10610)
!10616 = !DILocation(line: 2101, column: 22, scope: !10617)
!10617 = distinct !DILexicalBlock(scope: !10613, file: !1989, line: 2099, column: 13)
!10618 = !DILocation(line: 2101, column: 30, scope: !10617)
!10619 = !DILocation(line: 2101, column: 15, scope: !10617)
!10620 = !DILocation(line: 2102, column: 13, scope: !10617)
!10621 = !DILocation(line: 2112, column: 13, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10606, file: !1989, line: 2105, column: 11)
!10623 = !DILocation(line: 2124, column: 11, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !10601, file: !1989, line: 2117, column: 9)
!10625 = !DILocation(line: 2137, column: 9, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10594, file: !1989, line: 2129, column: 7)
!10627 = !DILocation(line: 2140, column: 26, scope: !10626)
!10628 = !DILocation(line: 2147, column: 18, scope: !10629)
!10629 = distinct !DILexicalBlock(scope: !10523, file: !1989, line: 2147, column: 7)
!10630 = !DILocation(line: 2147, column: 34, scope: !10629)
!10631 = !DILocation(line: 2147, column: 44, scope: !10629)
!10632 = !DILocation(line: 2149, column: 5, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10629, file: !1989, line: 2148, column: 3)
!10634 = !DILocation(line: 2150, column: 5, scope: !10633)
!10635 = !DILocation(line: 2154, column: 18, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10523, file: !1989, line: 2154, column: 7)
!10637 = !DILocation(line: 2154, column: 33, scope: !10636)
!10638 = !DILocation(line: 2154, column: 43, scope: !10636)
!10639 = !DILocation(line: 2156, column: 5, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10636, file: !1989, line: 2155, column: 3)
!10641 = !DILocation(line: 2157, column: 5, scope: !10640)
!10642 = !DILocation(line: 2159, column: 1, scope: !10523)
!10643 = distinct !DISubprogram(name: "UART_Receive_IT", scope: !1989, file: !1989, line: 2992, type: !9275, scopeLine: 2993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10644)
!10644 = !{!10645, !10646}
!10645 = !DILocalVariable(name: "huart", arg: 1, scope: !10643, file: !1989, line: 2992, type: !2014)
!10646 = !DILocalVariable(name: "tmp", scope: !10643, file: !1989, line: 2994, type: !2012)
!10647 = !DILocation(line: 0, scope: !10643)
!10648 = !DILocation(line: 2997, column: 14, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10643, file: !1989, line: 2997, column: 7)
!10650 = !DILocation(line: 2997, column: 22, scope: !10649)
!10651 = !DILocation(line: 2997, column: 7, scope: !10643)
!10652 = !DILocation(line: 2999, column: 21, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10654, file: !1989, line: 2999, column: 9)
!10654 = distinct !DILexicalBlock(scope: !10649, file: !1989, line: 2998, column: 3)
!10655 = !DILocation(line: 2999, column: 32, scope: !10653)
!10656 = !DILocation(line: 2999, column: 9, scope: !10654)
!10657 = !DILocation(line: 3001, column: 33, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10653, file: !1989, line: 3000, column: 5)
!10659 = !DILocation(line: 3002, column: 23, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10658, file: !1989, line: 3002, column: 11)
!10661 = !DILocation(line: 3002, column: 30, scope: !10660)
!10662 = !DILocation(line: 0, scope: !10660)
!10663 = !DILocation(line: 3002, column: 11, scope: !10658)
!10664 = !DILocation(line: 3004, column: 16, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10660, file: !1989, line: 3003, column: 7)
!10666 = !DILocation(line: 3004, column: 14, scope: !10665)
!10667 = !DILocation(line: 3005, column: 27, scope: !10665)
!10668 = !DILocation(line: 3006, column: 7, scope: !10665)
!10669 = !DILocation(line: 3009, column: 16, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10660, file: !1989, line: 3008, column: 7)
!10671 = !DILocation(line: 3009, column: 14, scope: !10670)
!10672 = !DILocation(line: 3010, column: 27, scope: !10670)
!10673 = !DILocation(line: 3015, column: 23, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10675, file: !1989, line: 3015, column: 11)
!10675 = distinct !DILexicalBlock(scope: !10653, file: !1989, line: 3014, column: 5)
!10676 = !DILocation(line: 3015, column: 30, scope: !10674)
!10677 = !DILocation(line: 0, scope: !10674)
!10678 = !DILocation(line: 3015, column: 11, scope: !10675)
!10679 = !DILocation(line: 3017, column: 17, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10674, file: !1989, line: 3016, column: 7)
!10681 = !DILocation(line: 3017, column: 27, scope: !10680)
!10682 = !DILocation(line: 3017, column: 30, scope: !10680)
!10683 = !DILocation(line: 3018, column: 7, scope: !10680)
!10684 = !DILocation(line: 3021, column: 32, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10674, file: !1989, line: 3020, column: 7)
!10686 = !DILocation(line: 3021, column: 17, scope: !10685)
!10687 = !DILocation(line: 3021, column: 27, scope: !10685)
!10688 = !DILocation(line: 3021, column: 30, scope: !10685)
!10689 = !DILocation(line: 3025, column: 18, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10654, file: !1989, line: 3025, column: 9)
!10691 = !DILocation(line: 3025, column: 9, scope: !10690)
!10692 = !DILocation(line: 3025, column: 30, scope: !10690)
!10693 = !DILocation(line: 3025, column: 9, scope: !10654)
!10694 = !DILocation(line: 3028, column: 7, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10690, file: !1989, line: 3026, column: 5)
!10696 = !DILocation(line: 3031, column: 7, scope: !10695)
!10697 = !DILocation(line: 3034, column: 7, scope: !10695)
!10698 = !DILocation(line: 3037, column: 22, scope: !10695)
!10699 = !DILocation(line: 3044, column: 7, scope: !10695)
!10700 = !DILocation(line: 3047, column: 7, scope: !10695)
!10701 = !DILocation(line: 3055, column: 1, scope: !10643)
!10702 = distinct !DISubprogram(name: "UART_DMAAbortOnError", scope: !1989, file: !1989, line: 2753, type: !9818, scopeLine: 2754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10703)
!10703 = !{!10704, !10705}
!10704 = !DILocalVariable(name: "hdma", arg: 1, scope: !10702, file: !1989, line: 2753, type: !2048)
!10705 = !DILocalVariable(name: "huart", scope: !10702, file: !1989, line: 2755, type: !2014)
!10706 = !DILocation(line: 0, scope: !10702)
!10707 = !DILocation(line: 2755, column: 82, scope: !10702)
!10708 = !DILocation(line: 2756, column: 10, scope: !10702)
!10709 = !DILocation(line: 2756, column: 22, scope: !10702)
!10710 = !DILocation(line: 2757, column: 10, scope: !10702)
!10711 = !DILocation(line: 2757, column: 22, scope: !10702)
!10712 = !DILocation(line: 2764, column: 3, scope: !10702)
!10713 = !DILocation(line: 2766, column: 1, scope: !10702)
!10714 = distinct !DISubprogram(name: "UART_Transmit_IT", scope: !1989, file: !1989, line: 2920, type: !9275, scopeLine: 2921, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10715)
!10715 = !{!10716, !10717}
!10716 = !DILocalVariable(name: "huart", arg: 1, scope: !10714, file: !1989, line: 2920, type: !2014)
!10717 = !DILocalVariable(name: "tmp", scope: !10714, file: !1989, line: 2922, type: !2012)
!10718 = !DILocation(line: 0, scope: !10714)
!10719 = !DILocation(line: 2925, column: 14, scope: !10720)
!10720 = distinct !DILexicalBlock(scope: !10714, file: !1989, line: 2925, column: 7)
!10721 = !DILocation(line: 2925, column: 21, scope: !10720)
!10722 = !DILocation(line: 2925, column: 7, scope: !10714)
!10723 = !DILocation(line: 2927, column: 21, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10725, file: !1989, line: 2927, column: 9)
!10725 = distinct !DILexicalBlock(scope: !10720, file: !1989, line: 2926, column: 3)
!10726 = !DILocation(line: 2927, column: 32, scope: !10724)
!10727 = !DILocation(line: 0, scope: !10724)
!10728 = !DILocation(line: 2927, column: 9, scope: !10725)
!10729 = !DILocation(line: 2929, column: 33, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10724, file: !1989, line: 2928, column: 5)
!10731 = !DILocation(line: 2930, column: 40, scope: !10730)
!10732 = !DILocation(line: 2930, column: 45, scope: !10730)
!10733 = !DILocation(line: 2930, column: 29, scope: !10730)
!10734 = !DILocation(line: 2930, column: 14, scope: !10730)
!10735 = !DILocation(line: 2930, column: 24, scope: !10730)
!10736 = !DILocation(line: 2930, column: 27, scope: !10730)
!10737 = !DILocation(line: 2931, column: 23, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !10730, file: !1989, line: 2931, column: 11)
!10739 = !DILocation(line: 2931, column: 30, scope: !10738)
!10740 = !DILocation(line: 0, scope: !10738)
!10741 = !DILocation(line: 2931, column: 11, scope: !10730)
!10742 = !DILocation(line: 2933, column: 27, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10738, file: !1989, line: 2932, column: 7)
!10744 = !DILocation(line: 2934, column: 7, scope: !10743)
!10745 = !DILocation(line: 2937, column: 27, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10738, file: !1989, line: 2936, column: 7)
!10747 = !DILocation(line: 2942, column: 57, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10724, file: !1989, line: 2941, column: 5)
!10749 = !DILocation(line: 2942, column: 39, scope: !10748)
!10750 = !DILocation(line: 2942, column: 29, scope: !10748)
!10751 = !DILocation(line: 2942, column: 14, scope: !10748)
!10752 = !DILocation(line: 2942, column: 24, scope: !10748)
!10753 = !DILocation(line: 2942, column: 27, scope: !10748)
!10754 = !DILocation(line: 2945, column: 18, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10725, file: !1989, line: 2945, column: 9)
!10756 = !DILocation(line: 2945, column: 9, scope: !10755)
!10757 = !DILocation(line: 2945, column: 30, scope: !10755)
!10758 = !DILocation(line: 2945, column: 9, scope: !10725)
!10759 = !DILocation(line: 2948, column: 7, scope: !10760)
!10760 = distinct !DILexicalBlock(scope: !10755, file: !1989, line: 2946, column: 5)
!10761 = !DILocation(line: 2951, column: 7, scope: !10760)
!10762 = !DILocation(line: 2952, column: 5, scope: !10760)
!10763 = !DILocation(line: 2959, column: 1, scope: !10714)
!10764 = distinct !DISubprogram(name: "UART_EndTransmit_IT", scope: !1989, file: !1989, line: 2967, type: !9275, scopeLine: 2968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10765)
!10765 = !{!10766}
!10766 = !DILocalVariable(name: "huart", arg: 1, scope: !10764, file: !1989, line: 2967, type: !2014)
!10767 = !DILocation(line: 0, scope: !10764)
!10768 = !DILocation(line: 2970, column: 3, scope: !10764)
!10769 = !DILocation(line: 2973, column: 10, scope: !10764)
!10770 = !DILocation(line: 2973, column: 17, scope: !10764)
!10771 = !DILocation(line: 2980, column: 3, scope: !10764)
!10772 = !DILocation(line: 2983, column: 3, scope: !10764)
!10773 = distinct !DISubprogram(name: "HAL_LIN_SendBreak", scope: !1989, file: !1989, line: 2310, type: !9275, scopeLine: 2311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10774)
!10774 = !{!10775}
!10775 = !DILocalVariable(name: "huart", arg: 1, scope: !10773, file: !1989, line: 2310, type: !2014)
!10776 = !DILocation(line: 0, scope: !10773)
!10777 = !DILocation(line: 2316, column: 3, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10779, file: !1989, line: 2316, column: 3)
!10779 = distinct !DILexicalBlock(scope: !10773, file: !1989, line: 2316, column: 3)
!10780 = !DILocation(line: 2316, column: 3, scope: !10779)
!10781 = !DILocation(line: 2316, column: 3, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10778, file: !1989, line: 2316, column: 3)
!10783 = !DILocation(line: 2318, column: 10, scope: !10773)
!10784 = !DILocation(line: 2318, column: 17, scope: !10773)
!10785 = !DILocation(line: 2321, column: 3, scope: !10773)
!10786 = !DILocation(line: 2323, column: 17, scope: !10773)
!10787 = !DILocation(line: 2326, column: 3, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !10773, file: !1989, line: 2326, column: 3)
!10789 = !DILocation(line: 2328, column: 3, scope: !10773)
!10790 = !DILocation(line: 2329, column: 1, scope: !10773)
!10791 = distinct !DISubprogram(name: "HAL_MultiProcessor_EnterMuteMode", scope: !1989, file: !1989, line: 2337, type: !9275, scopeLine: 2338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10792)
!10792 = !{!10793}
!10793 = !DILocalVariable(name: "huart", arg: 1, scope: !10791, file: !1989, line: 2337, type: !2014)
!10794 = !DILocation(line: 0, scope: !10791)
!10795 = !DILocation(line: 2343, column: 3, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10797, file: !1989, line: 2343, column: 3)
!10797 = distinct !DILexicalBlock(scope: !10791, file: !1989, line: 2343, column: 3)
!10798 = !DILocation(line: 2343, column: 3, scope: !10797)
!10799 = !DILocation(line: 2343, column: 3, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10796, file: !1989, line: 2343, column: 3)
!10801 = !DILocation(line: 2345, column: 10, scope: !10791)
!10802 = !DILocation(line: 2345, column: 17, scope: !10791)
!10803 = !DILocation(line: 2348, column: 3, scope: !10791)
!10804 = !DILocation(line: 2350, column: 17, scope: !10791)
!10805 = !DILocation(line: 2353, column: 3, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10791, file: !1989, line: 2353, column: 3)
!10807 = !DILocation(line: 2355, column: 3, scope: !10791)
!10808 = !DILocation(line: 2356, column: 1, scope: !10791)
!10809 = distinct !DISubprogram(name: "HAL_MultiProcessor_ExitMuteMode", scope: !1989, file: !1989, line: 2364, type: !9275, scopeLine: 2365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10810)
!10810 = !{!10811}
!10811 = !DILocalVariable(name: "huart", arg: 1, scope: !10809, file: !1989, line: 2364, type: !2014)
!10812 = !DILocation(line: 0, scope: !10809)
!10813 = !DILocation(line: 2370, column: 3, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10815, file: !1989, line: 2370, column: 3)
!10815 = distinct !DILexicalBlock(scope: !10809, file: !1989, line: 2370, column: 3)
!10816 = !DILocation(line: 2370, column: 3, scope: !10815)
!10817 = !DILocation(line: 2370, column: 3, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10814, file: !1989, line: 2370, column: 3)
!10819 = !DILocation(line: 2372, column: 10, scope: !10809)
!10820 = !DILocation(line: 2372, column: 17, scope: !10809)
!10821 = !DILocation(line: 2375, column: 3, scope: !10809)
!10822 = !DILocation(line: 2377, column: 17, scope: !10809)
!10823 = !DILocation(line: 2380, column: 3, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10809, file: !1989, line: 2380, column: 3)
!10825 = !DILocation(line: 2382, column: 3, scope: !10809)
!10826 = !DILocation(line: 2383, column: 1, scope: !10809)
!10827 = distinct !DISubprogram(name: "HAL_HalfDuplex_EnableTransmitter", scope: !1989, file: !1989, line: 2391, type: !9275, scopeLine: 2392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10828)
!10828 = !{!10829, !10830}
!10829 = !DILocalVariable(name: "huart", arg: 1, scope: !10827, file: !1989, line: 2391, type: !2014)
!10830 = !DILocalVariable(name: "tmpreg", scope: !10827, file: !1989, line: 2393, type: !32)
!10831 = !DILocation(line: 0, scope: !10827)
!10832 = !DILocation(line: 2396, column: 3, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10834, file: !1989, line: 2396, column: 3)
!10834 = distinct !DILexicalBlock(scope: !10827, file: !1989, line: 2396, column: 3)
!10835 = !DILocation(line: 2396, column: 3, scope: !10834)
!10836 = !DILocation(line: 2396, column: 3, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10833, file: !1989, line: 2396, column: 3)
!10838 = !DILocation(line: 2398, column: 10, scope: !10827)
!10839 = !DILocation(line: 2398, column: 17, scope: !10827)
!10840 = !DILocation(line: 2401, column: 19, scope: !10827)
!10841 = !DILocation(line: 2401, column: 29, scope: !10827)
!10842 = !DILocation(line: 2404, column: 10, scope: !10827)
!10843 = !DILocation(line: 2407, column: 10, scope: !10827)
!10844 = !DILocation(line: 2410, column: 3, scope: !10827)
!10845 = !DILocation(line: 2412, column: 17, scope: !10827)
!10846 = !DILocation(line: 2415, column: 3, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10827, file: !1989, line: 2415, column: 3)
!10848 = !DILocation(line: 2417, column: 3, scope: !10827)
!10849 = !DILocation(line: 2418, column: 1, scope: !10827)
!10850 = distinct !DISubprogram(name: "HAL_HalfDuplex_EnableReceiver", scope: !1989, file: !1989, line: 2426, type: !9275, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10851)
!10851 = !{!10852, !10853}
!10852 = !DILocalVariable(name: "huart", arg: 1, scope: !10850, file: !1989, line: 2426, type: !2014)
!10853 = !DILocalVariable(name: "tmpreg", scope: !10850, file: !1989, line: 2428, type: !32)
!10854 = !DILocation(line: 0, scope: !10850)
!10855 = !DILocation(line: 2431, column: 3, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10857, file: !1989, line: 2431, column: 3)
!10857 = distinct !DILexicalBlock(scope: !10850, file: !1989, line: 2431, column: 3)
!10858 = !DILocation(line: 2431, column: 3, scope: !10857)
!10859 = !DILocation(line: 2431, column: 3, scope: !10860)
!10860 = distinct !DILexicalBlock(scope: !10856, file: !1989, line: 2431, column: 3)
!10861 = !DILocation(line: 2433, column: 10, scope: !10850)
!10862 = !DILocation(line: 2433, column: 17, scope: !10850)
!10863 = !DILocation(line: 2436, column: 19, scope: !10850)
!10864 = !DILocation(line: 2436, column: 29, scope: !10850)
!10865 = !DILocation(line: 2439, column: 10, scope: !10850)
!10866 = !DILocation(line: 2442, column: 10, scope: !10850)
!10867 = !DILocation(line: 2445, column: 3, scope: !10850)
!10868 = !DILocation(line: 2447, column: 17, scope: !10850)
!10869 = !DILocation(line: 2450, column: 3, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10850, file: !1989, line: 2450, column: 3)
!10871 = !DILocation(line: 2452, column: 3, scope: !10850)
!10872 = !DILocation(line: 2453, column: 1, scope: !10850)
!10873 = distinct !DISubprogram(name: "HAL_UART_GetState", scope: !1989, file: !1989, line: 2483, type: !10874, scopeLine: 2484, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10876)
!10874 = !DISubroutineType(types: !10875)
!10875 = !{!2013, !2014}
!10876 = !{!10877, !10878, !10879}
!10877 = !DILocalVariable(name: "huart", arg: 1, scope: !10873, file: !1989, line: 2483, type: !2014)
!10878 = !DILocalVariable(name: "temp1", scope: !10873, file: !1989, line: 2485, type: !32)
!10879 = !DILocalVariable(name: "temp2", scope: !10873, file: !1989, line: 2485, type: !32)
!10880 = !DILocation(line: 0, scope: !10873)
!10881 = !DILocation(line: 2486, column: 18, scope: !10873)
!10882 = !DILocation(line: 2487, column: 18, scope: !10873)
!10883 = !DILocation(line: 2489, column: 40, scope: !10873)
!10884 = !DILocation(line: 2489, column: 3, scope: !10873)
!10885 = distinct !DISubprogram(name: "HAL_UART_GetError", scope: !1989, file: !1989, line: 2498, type: !10886, scopeLine: 2499, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1988, retainedNodes: !10888)
!10886 = !DISubroutineType(types: !10887)
!10887 = !{!32, !2014}
!10888 = !{!10889}
!10889 = !DILocalVariable(name: "huart", arg: 1, scope: !10885, file: !1989, line: 2498, type: !2014)
!10890 = !DILocation(line: 0, scope: !10885)
!10891 = !DILocation(line: 2500, column: 17, scope: !10885)
!10892 = !DILocation(line: 2500, column: 3, scope: !10885)
